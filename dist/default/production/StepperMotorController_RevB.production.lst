

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jan 27 22:31:10 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,delta=1
   160                           	psect	text141,global,reloc=2,class=CODE,delta=1
   161                           	psect	text142,global,reloc=2,class=CODE,delta=1
   162                           	psect	text143,global,reloc=2,class=CODE,delta=1
   163                           	psect	text144,global,reloc=2,class=CODE,delta=1
   164                           	psect	text145,global,reloc=2,class=CODE,delta=1
   165                           	psect	text146,global,reloc=2,class=CODE,delta=1
   166                           	psect	text147,global,reloc=2,class=CODE,delta=1
   167                           	psect	text148,global,reloc=2,class=CODE,delta=1
   168                           	psect	text149,global,reloc=2,class=CODE,delta=1
   169                           	psect	text150,global,reloc=2,class=CODE,delta=1
   170                           	psect	text151,global,reloc=2,class=CODE,delta=1
   171                           	psect	text152,global,reloc=2,class=CODE,delta=1
   172                           	psect	text153,global,reloc=2,class=CODE,delta=1
   173                           	psect	text154,global,reloc=2,class=CODE,delta=1
   174                           	psect	text155,global,reloc=2,class=CODE,delta=1
   175                           	psect	text156,global,reloc=2,class=CODE,delta=1
   176                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   179                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   180                           	dabs	1,0x600,512,_msd_buffer
   181                           	dabs	1,0xD00,48,_BDT
   182                           	dabs	1,0xD40,31,_msd_cbw
   183                           	dabs	1,0xD80,13,_msd_csw
   184                           	dabs	1,0xD38,8,_CtrlTrfData
   185                           	dabs	1,0xD30,8,_SetupPkt
   186  0000                     
   187                           ; Version 2.00
   188                           ; Generated 27/05/2018 GMT
   189                           ; 
   190                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   191                           ; All rights reserved.
   192                           ; 
   193                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   194                           ; 
   195                           ; Redistribution and use in source and binary forms, with or without modification, are
   196                           ; permitted provided that the following conditions are met:
   197                           ; 
   198                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   199                           ;        conditions and the following disclaimer.
   200                           ; 
   201                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   202                           ;        of conditions and the following disclaimer in the documentation and/or other
   203                           ;        materials provided with the distribution.
   204                           ; 
   205                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   206                           ;        software without specific prior written permission.
   207                           ; 
   208                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   209                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   210                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   211                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   212                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   213                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   214                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   215                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   216                           ; 
   217                           ; 
   218                           ; Code-generator required, PIC18F47J53 Definitions
   219                           ; 
   220                           ; SFR Addresses
   221  0000                     
   222                           	psect	idataBANK1
   223  0111FE                     __pidataBANK1:
   224                           	opt stack 0
   225                           
   226                           ;initializer for _LUN
   227  0111FE  0C                 	db	low _ExternalFlash_MediaInitialize
   228  0111FF  22                 	db	high _ExternalFlash_MediaInitialize
   229  011200  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   230  011201  D2                 	db	low _ExternalFlash_CapacityRead
   231  011202  22                 	db	high _ExternalFlash_CapacityRead
   232  011203  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   233  011204  32                 	db	low _ExternalFlash_SectorSizeRead
   234  011205  23                 	db	high _ExternalFlash_SectorSizeRead
   235  011206  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   236  011207  54                 	db	low _ExternalFlash_MediaDetect
   237  011208  23                 	db	high _ExternalFlash_MediaDetect
   238  011209  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   239  01120A  C8                 	db	low _ExternalFlash_SectorRead
   240  01120B  1E                 	db	high _ExternalFlash_SectorRead
   241  01120C  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   242  01120D  7C                 	db	low _ExternalFlash_WriteProtectStateGet
   243  01120E  23                 	db	high _ExternalFlash_WriteProtectStateGet
   244  01120F  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   245  011210  80                 	db	low _ExternalFlash_SectorWrite
   246  011211  23                 	db	high _ExternalFlash_SectorWrite
   247  011212  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   248  011213  00                 	db	0
   249  011214  00                 	db	0
   250  011215  00                 	db	0
   251  011216  00                 	db	0
   252  011217  00                 	db	0
   253  011218  00                 	db	0
   254  011219  00                 	db	0
   255  01121A  00                 	db	0
   256                           
   257                           ;initializer for _display_content
   258  01121B  2A                 	db	42
   259  01121C  20                 	db	32
   260  01121D  20                 	db	32
   261  01121E  53                 	db	83
   262  01121F  74                 	db	116
   263  011220  65                 	db	101
   264  011221  70                 	db	112
   265  011222  70                 	db	112
   266  011223  65                 	db	101
   267  011224  72                 	db	114
   268  011225  20                 	db	32
   269  011226  4D                 	db	77
   270  011227  6F                 	db	111
   271  011228  74                 	db	116
   272  011229  6F                 	db	111
   273  01122A  72                 	db	114
   274  01122B  20                 	db	32
   275  01122C  20                 	db	32
   276  01122D  20                 	db	32
   277  01122E  2A                 	db	42
   278  01122F  2A                 	db	42
   279  011230  20                 	db	32
   280  011231  20                 	db	32
   281  011232  20                 	db	32
   282  011233  20                 	db	32
   283  011234  43                 	db	67
   284  011235  6F                 	db	111
   285  011236  6E                 	db	110
   286  011237  74                 	db	116
   287  011238  72                 	db	114
   288  011239  6F                 	db	111
   289  01123A  6C                 	db	108
   290  01123B  6C                 	db	108
   291  01123C  65                 	db	101
   292  01123D  72                 	db	114
   293  01123E  20                 	db	32
   294  01123F  20                 	db	32
   295  011240  20                 	db	32
   296  011241  20                 	db	32
   297  011242  2A                 	db	42
   298  011243  2A                 	db	42
   299  011244  20                 	db	32
   300  011245  20                 	db	32
   301  011246  20                 	db	32
   302  011247  20                 	db	32
   303  011248  20                 	db	32
   304  011249  20                 	db	32
   305  01124A  20                 	db	32
   306  01124B  20                 	db	32
   307  01124C  20                 	db	32
   308  01124D  20                 	db	32
   309  01124E  20                 	db	32
   310  01124F  20                 	db	32
   311  011250  20                 	db	32
   312  011251  20                 	db	32
   313  011252  20                 	db	32
   314  011253  20                 	db	32
   315  011254  20                 	db	32
   316  011255  20                 	db	32
   317  011256  2A                 	db	42
   318  011257  2A                 	db	42
   319  011258  20                 	db	32
   320  011259  20                 	db	32
   321  01125A  73                 	db	115
   322  01125B  6F                 	db	111
   323  01125C  6C                 	db	108
   324  01125D  64                 	db	100
   325  01125E  65                 	db	101
   326  01125F  72                 	db	114
   327  011260  6E                 	db	110
   328  011261  65                 	db	101
   329  011262  72                 	db	114
   330  011263  64                 	db	100
   331  011264  2E                 	db	46
   332  011265  63                 	db	99
   333  011266  6F                 	db	111
   334  011267  6D                 	db	109
   335  011268  20                 	db	32
   336  011269  20                 	db	32
   337  01126A  2A                 	db	42
   338                           
   339                           	psect	idataBANK2
   340  012288                     __pidataBANK2:
   341                           	opt stack 0
   342                           
   343                           ;initializer for i2c_display_init@F6892
   344  012288  3A                 	db	58
   345  012289  1E                 	db	30
   346  01228A  39                 	db	57
   347  01228B  0C                 	db	12
   348  01228C  74                 	db	116
   349  01228D  5C                 	db	92
   350  01228E  6D                 	db	109
   351  01228F  0C                 	db	12
   352  012290  01                 	db	1
   353                           
   354                           ;initializer for __i2c_display_send_init_sequence@F6889
   355  012291  3A                 	db	58
   356  012292  1E                 	db	30
   357  012293  39                 	db	57
   358  012294  0C                 	db	12
   359  012295  74                 	db	116
   360  012296  5C                 	db	92
   361  012297  6D                 	db	109
   362  012298  0C                 	db	12
   363  012299  01                 	db	1
   364                           
   365                           ;initializer for _tx_buf
   366  01229A  01                 	db	1
   367  01229B  02                 	db	2
   368  01229C  03                 	db	3
   369  01229D  04                 	db	4
   370  01229E  05                 	db	5
   371  01229F  06                 	db	6
   372  0122A0  07                 	db	7
   373  0122A1  08                 	db	8
   374                           
   375                           	psect	mediumconst
   376  009092                     __pmediumconst:
   377                           	opt stack 0
   378  009092  00                 	db	0
   379  009093                     _motor_speed_lookup:
   380                           	opt stack 0
   381  009093  0008               	dw	8
   382  009095  000C               	dw	12
   383  009097  0010               	dw	16
   384  009099  0013               	dw	19
   385  00909B  0016               	dw	22
   386  00909D  0019               	dw	25
   387  00909F  001C               	dw	28
   388  0090A1  001E               	dw	30
   389  0090A3  0021               	dw	33
   390  0090A5  0023               	dw	35
   391  0090A7  0026               	dw	38
   392  0090A9  0028               	dw	40
   393  0090AB  002A               	dw	42
   394  0090AD  002C               	dw	44
   395  0090AF  002E               	dw	46
   396  0090B1  0030               	dw	48
   397  0090B3  0032               	dw	50
   398  0090B5  0034               	dw	52
   399  0090B7  0036               	dw	54
   400  0090B9  0038               	dw	56
   401  0090BB  003A               	dw	58
   402  0090BD  003C               	dw	60
   403  0090BF  003D               	dw	61
   404  0090C1  003F               	dw	63
   405  0090C3  0041               	dw	65
   406  0090C5  0043               	dw	67
   407  0090C7  0045               	dw	69
   408  0090C9  0046               	dw	70
   409  0090CB  0048               	dw	72
   410  0090CD  0049               	dw	73
   411  0090CF  004B               	dw	75
   412  0090D1  004D               	dw	77
   413  0090D3  004E               	dw	78
   414  0090D5  0050               	dw	80
   415  0090D7  0051               	dw	81
   416  0090D9  0053               	dw	83
   417  0090DB  0054               	dw	84
   418  0090DD  0056               	dw	86
   419  0090DF  0057               	dw	87
   420  0090E1  0059               	dw	89
   421  0090E3  005A               	dw	90
   422  0090E5  005C               	dw	92
   423  0090E7  005D               	dw	93
   424  0090E9  005F               	dw	95
   425  0090EB  0060               	dw	96
   426  0090ED  0062               	dw	98
   427  0090EF  0063               	dw	99
   428  0090F1  0064               	dw	100
   429  0090F3  0066               	dw	102
   430  0090F5  0067               	dw	103
   431  0090F7  0069               	dw	105
   432  0090F9  006A               	dw	106
   433  0090FB  006C               	dw	108
   434  0090FD  006D               	dw	109
   435  0090FF  006E               	dw	110
   436  009101  0070               	dw	112
   437  009103  0071               	dw	113
   438  009105  0072               	dw	114
   439  009107  0073               	dw	115
   440  009109  0074               	dw	116
   441  00910B  0076               	dw	118
   442  00910D  0078               	dw	120
   443  00910F  0079               	dw	121
   444  009111  007A               	dw	122
   445  009113  007B               	dw	123
   446  009115  007D               	dw	125
   447  009117  007E               	dw	126
   448  009119  007F               	dw	127
   449  00911B  0082               	dw	130
   450  00911D  0085               	dw	133
   451  00911F  0087               	dw	135
   452  009121  008A               	dw	138
   453  009123  008C               	dw	140
   454  009125  008F               	dw	143
   455  009127  0091               	dw	145
   456  009129  0092               	dw	146
   457  00912B  0094               	dw	148
   458  00912D  0098               	dw	152
   459  00912F  009A               	dw	154
   460  009131  009C               	dw	156
   461  009133  009E               	dw	158
   462  009135  00A1               	dw	161
   463  009137  00A3               	dw	163
   464  009139  00A5               	dw	165
   465  00913B  00A7               	dw	167
   466  00913D  00AA               	dw	170
   467  00913F  00AC               	dw	172
   468  009141  00AF               	dw	175
   469  009143  00B2               	dw	178
   470  009145  00B4               	dw	180
   471  009147  00B7               	dw	183
   472  009149  00B8               	dw	184
   473  00914B  00BA               	dw	186
   474  00914D  00BC               	dw	188
   475  00914F  00BE               	dw	190
   476  009151  00C0               	dw	192
   477  009153  00C3               	dw	195
   478  009155  00C4               	dw	196
   479  009157  00C6               	dw	198
   480  009159  00C8               	dw	200
   481  00915B  00CA               	dw	202
   482  00915D  00CC               	dw	204
   483  00915F  00CE               	dw	206
   484  009161  00D0               	dw	208
   485  009163  00D2               	dw	210
   486  009165  00D4               	dw	212
   487  009167  00D6               	dw	214
   488  009169  00D8               	dw	216
   489  00916B  00D9               	dw	217
   490  00916D  00DB               	dw	219
   491  00916F  00DD               	dw	221
   492  009171  00DF               	dw	223
   493  009173  00E1               	dw	225
   494  009175  00E2               	dw	226
   495  009177  00E5               	dw	229
   496  009179  00E7               	dw	231
   497  00917B  00E8               	dw	232
   498  00917D  00EA               	dw	234
   499  00917F  00EC               	dw	236
   500  009181  00EE               	dw	238
   501  009183  00EF               	dw	239
   502  009185  00F2               	dw	242
   503  009187  00F3               	dw	243
   504  009189  00F5               	dw	245
   505  00918B  00F7               	dw	247
   506  00918D  00F8               	dw	248
   507  00918F  00FB               	dw	251
   508  009191  00FD               	dw	253
   509  009193  0100               	dw	256
   510  009195  0103               	dw	259
   511  009197  0104               	dw	260
   512  009199  0107               	dw	263
   513  00919B  010A               	dw	266
   514  00919D  010C               	dw	268
   515  00919F  010F               	dw	271
   516  0091A1  0112               	dw	274
   517  0091A3  0114               	dw	276
   518  0091A5  0117               	dw	279
   519  0091A7  0119               	dw	281
   520  0091A9  011C               	dw	284
   521  0091AB  011E               	dw	286
   522  0091AD  0121               	dw	289
   523  0091AF  0123               	dw	291
   524  0091B1  0125               	dw	293
   525  0091B3  0129               	dw	297
   526  0091B5  012B               	dw	299
   527  0091B7  012C               	dw	300
   528  0091B9  012E               	dw	302
   529  0091BB  0132               	dw	306
   530  0091BD  0134               	dw	308
   531  0091BF  0136               	dw	310
   532  0091C1  0138               	dw	312
   533  0091C3  013B               	dw	315
   534  0091C5  013D               	dw	317
   535  0091C7  013F               	dw	319
   536  0091C9  0143               	dw	323
   537  0091CB  0146               	dw	326
   538  0091CD  0148               	dw	328
   539  0091CF  014A               	dw	330
   540  0091D1  014C               	dw	332
   541  0091D3  014F               	dw	335
   542  0091D5  0151               	dw	337
   543  0091D7  0154               	dw	340
   544  0091D9  0156               	dw	342
   545  0091DB  0159               	dw	345
   546  0091DD  015B               	dw	347
   547  0091DF  015E               	dw	350
   548  0091E1  0160               	dw	352
   549  0091E3  0163               	dw	355
   550  0091E5  0166               	dw	358
   551  0091E7  0169               	dw	361
   552  0091E9  016B               	dw	363
   553  0091EB  016E               	dw	366
   554  0091ED  0171               	dw	369
   555  0091EF  0174               	dw	372
   556  0091F1  0177               	dw	375
   557  0091F3  017A               	dw	378
   558  0091F5  017D               	dw	381
   559  0091F7  0180               	dw	384
   560  0091F9  0183               	dw	387
   561  0091FB  0187               	dw	391
   562  0091FD  018A               	dw	394
   563  0091FF  018D               	dw	397
   564  009201  0191               	dw	401
   565  009203  0194               	dw	404
   566  009205  0198               	dw	408
   567  009207  019B               	dw	411
   568  009209  019F               	dw	415
   569  00920B  01A3               	dw	419
   570  00920D  01A6               	dw	422
   571  00920F  01AA               	dw	426
   572  009211  01AE               	dw	430
   573  009213  01B2               	dw	434
   574  009215  01B6               	dw	438
   575  009217  01BA               	dw	442
   576  009219  01BE               	dw	446
   577  00921B  01C3               	dw	451
   578  00921D  01C7               	dw	455
   579  00921F  01CC               	dw	460
   580  009221  01D0               	dw	464
   581  009223  01D5               	dw	469
   582  009225  01D9               	dw	473
   583  009227  01DE               	dw	478
   584  009229  01E3               	dw	483
   585  00922B  01E8               	dw	488
   586  00922D  01ED               	dw	493
   587  00922F  01F3               	dw	499
   588  009231  01F8               	dw	504
   589  009233  01FE               	dw	510
   590  009235  0203               	dw	515
   591  009237  0209               	dw	521
   592  009239  020F               	dw	527
   593  00923B  0215               	dw	533
   594  00923D  021B               	dw	539
   595  00923F  0221               	dw	545
   596  009241  0227               	dw	551
   597  009243  022E               	dw	558
   598  009245  0235               	dw	565
   599  009247  023C               	dw	572
   600  009249  0243               	dw	579
   601  00924B  024A               	dw	586
   602  00924D  0251               	dw	593
   603  00924F  0259               	dw	601
   604  009251  0261               	dw	609
   605  009253  0269               	dw	617
   606  009255  0271               	dw	625
   607  009257  0279               	dw	633
   608  009259  0282               	dw	642
   609  00925B  028B               	dw	651
   610  00925D  0294               	dw	660
   611  00925F  029E               	dw	670
   612  009261  02A7               	dw	679
   613  009263  02B1               	dw	689
   614  009265  02BC               	dw	700
   615  009267  02C6               	dw	710
   616  009269  02D1               	dw	721
   617  00926B  02DC               	dw	732
   618  00926D  02DC               	dw	732
   619  00926F  02DF               	dw	735
   620  009271  02E2               	dw	738
   621  009273  02E5               	dw	741
   622  009275  02E8               	dw	744
   623  009277  02EB               	dw	747
   624  009279  02EE               	dw	750
   625  00927B  02F1               	dw	753
   626  00927D  02F4               	dw	756
   627  00927F  02F7               	dw	759
   628  009281  02FA               	dw	762
   629  009283  02FD               	dw	765
   630  009285  0300               	dw	768
   631  009287  0304               	dw	772
   632  009289  0307               	dw	775
   633  00928B  030A               	dw	778
   634  00928D  030D               	dw	781
   635  00928F  0311               	dw	785
   636  009291  0314               	dw	788
   637  009293  0317               	dw	791
   638  009295  031A               	dw	794
   639  009297  031E               	dw	798
   640  009299  0321               	dw	801
   641  00929B  0325               	dw	805
   642  00929D  0328               	dw	808
   643  00929F  032C               	dw	812
   644  0092A1  032F               	dw	815
   645  0092A3  0333               	dw	819
   646  0092A5  0336               	dw	822
   647  0092A7  033A               	dw	826
   648  0092A9  033E               	dw	830
   649  0092AB  0341               	dw	833
   650  0092AD  0345               	dw	837
   651  0092AF  0349               	dw	841
   652  0092B1  034D               	dw	845
   653  0092B3  0350               	dw	848
   654  0092B5  0354               	dw	852
   655  0092B7  0358               	dw	856
   656  0092B9  035C               	dw	860
   657  0092BB  0360               	dw	864
   658  0092BD  0364               	dw	868
   659  0092BF  0368               	dw	872
   660  0092C1  036C               	dw	876
   661  0092C3  0370               	dw	880
   662  0092C5  0374               	dw	884
   663  0092C7  0379               	dw	889
   664  0092C9  037D               	dw	893
   665  0092CB  0381               	dw	897
   666  0092CD  0385               	dw	901
   667  0092CF  038A               	dw	906
   668  0092D1  038E               	dw	910
   669  0092D3  0393               	dw	915
   670  0092D5  0397               	dw	919
   671  0092D7  039C               	dw	924
   672  0092D9  03A0               	dw	928
   673  0092DB  03A5               	dw	933
   674  0092DD  03AA               	dw	938
   675  0092DF  03AE               	dw	942
   676  0092E1  03B3               	dw	947
   677  0092E3  03B8               	dw	952
   678  0092E5  03BD               	dw	957
   679  0092E7  03C2               	dw	962
   680  0092E9  03C6               	dw	966
   681  0092EB  03CC               	dw	972
   682  0092ED  03D1               	dw	977
   683  0092EF  03D6               	dw	982
   684  0092F1  03DB               	dw	987
   685  0092F3  03E0               	dw	992
   686  0092F5  03E5               	dw	997
   687  0092F7  03EB               	dw	1003
   688  0092F9  03F0               	dw	1008
   689  0092FB  03F6               	dw	1014
   690  0092FD  03FB               	dw	1019
   691  0092FF  0401               	dw	1025
   692  009301  0406               	dw	1030
   693  009303  040C               	dw	1036
   694  009305  0412               	dw	1042
   695  009307  0417               	dw	1047
   696  009309  041D               	dw	1053
   697  00930B  0423               	dw	1059
   698  00930D  0429               	dw	1065
   699  00930F  042F               	dw	1071
   700  009311  0436               	dw	1078
   701  009313  043C               	dw	1084
   702  009315  0442               	dw	1090
   703  009317  0448               	dw	1096
   704  009319  044F               	dw	1103
   705  00931B  0455               	dw	1109
   706  00931D  045C               	dw	1116
   707  00931F  0463               	dw	1123
   708  009321  046A               	dw	1130
   709  009323  0470               	dw	1136
   710  009325  0477               	dw	1143
   711  009327  047E               	dw	1150
   712  009329  0485               	dw	1157
   713  00932B  048D               	dw	1165
   714  00932D  0494               	dw	1172
   715  00932F  049B               	dw	1179
   716  009331  04A3               	dw	1187
   717  009333  04AA               	dw	1194
   718  009335  04B2               	dw	1202
   719  009337  04BA               	dw	1210
   720  009339  04C2               	dw	1218
   721  00933B  04C9               	dw	1225
   722  00933D  04D2               	dw	1234
   723  00933F  04DA               	dw	1242
   724  009341  04E2               	dw	1250
   725  009343  04EA               	dw	1258
   726  009345  04F3               	dw	1267
   727  009347  04FC               	dw	1276
   728  009349  0504               	dw	1284
   729  00934B  050D               	dw	1293
   730  00934D  0516               	dw	1302
   731  00934F  051F               	dw	1311
   732  009351  0528               	dw	1320
   733  009353  0532               	dw	1330
   734  009355  053B               	dw	1339
   735  009357  0545               	dw	1349
   736  009359  054F               	dw	1359
   737  00935B  0559               	dw	1369
   738  00935D  0563               	dw	1379
   739  00935F  056D               	dw	1389
   740  009361  0577               	dw	1399
   741  009363  0582               	dw	1410
   742  009365  058C               	dw	1420
   743  009367  0597               	dw	1431
   744  009369  05A2               	dw	1442
   745  00936B  05AD               	dw	1453
   746  00936D  05B9               	dw	1465
   747  00936F  05C4               	dw	1476
   748  009371  05D0               	dw	1488
   749  009373  05DC               	dw	1500
   750  009375  05E8               	dw	1512
   751  009377  05F4               	dw	1524
   752  009379  0601               	dw	1537
   753  00937B  060E               	dw	1550
   754  00937D  061A               	dw	1562
   755  00937F  0628               	dw	1576
   756  009381  0635               	dw	1589
   757  009383  0643               	dw	1603
   758  009385  0650               	dw	1616
   759  009387  065E               	dw	1630
   760  009389  066D               	dw	1645
   761  00938B  067B               	dw	1659
   762  00938D  068A               	dw	1674
   763  00938F  0699               	dw	1689
   764  009391  06A9               	dw	1705
   765  009393  06B8               	dw	1720
   766  009395  06C8               	dw	1736
   767  009397  06D8               	dw	1752
   768  009399  06E9               	dw	1769
   769  00939B  06FA               	dw	1786
   770  00939D  070B               	dw	1803
   771  00939F  071C               	dw	1820
   772  0093A1  072E               	dw	1838
   773  0093A3  0740               	dw	1856
   774  0093A5  0753               	dw	1875
   775  0093A7  0766               	dw	1894
   776  0093A9  0779               	dw	1913
   777  0093AB  078D               	dw	1933
   778  0093AD  07A1               	dw	1953
   779  0093AF  07B6               	dw	1974
   780  0093B1  07CB               	dw	1995
   781  0093B3  07E0               	dw	2016
   782  0093B5  07F6               	dw	2038
   783  0093B7  080C               	dw	2060
   784  0093B9  0823               	dw	2083
   785  0093BB  083B               	dw	2107
   786  0093BD  0853               	dw	2131
   787  0093BF  086B               	dw	2155
   788  0093C1  0884               	dw	2180
   789  0093C3  089E               	dw	2206
   790  0093C5  08B8               	dw	2232
   791  0093C7  08D3               	dw	2259
   792  0093C9  08EF               	dw	2287
   793  0093CB  090B               	dw	2315
   794  0093CD  0928               	dw	2344
   795  0093CF  0945               	dw	2373
   796  0093D1  0964               	dw	2404
   797  0093D3  0983               	dw	2435
   798  0093D5  09A3               	dw	2467
   799  0093D7  09C4               	dw	2500
   800  0093D9  09E6               	dw	2534
   801  0093DB  0A08               	dw	2568
   802  0093DD  0A2C               	dw	2604
   803  0093DF  0A51               	dw	2641
   804  0093E1  0A77               	dw	2679
   805  0093E3  0A9D               	dw	2717
   806  0093E5  0AC5               	dw	2757
   807  0093E7  0AEF               	dw	2799
   808  0093E9  0B19               	dw	2841
   809  0093EB  0B45               	dw	2885
   810  0093ED  0B72               	dw	2930
   811  0093EF  0B72               	dw	2930
   812  0093F1  0B7D               	dw	2941
   813  0093F3  0B89               	dw	2953
   814  0093F5  0B94               	dw	2964
   815  0093F7  0BA0               	dw	2976
   816  0093F9  0BAC               	dw	2988
   817  0093FB  0BB8               	dw	3000
   818  0093FD  0BC4               	dw	3012
   819  0093FF  0BD0               	dw	3024
   820  009401  0BDC               	dw	3036
   821  009403  0BE9               	dw	3049
   822  009405  0BF5               	dw	3061
   823  009407  0C02               	dw	3074
   824  009409  0C0E               	dw	3086
   825  00940B  0C1B               	dw	3099
   826  00940D  0C28               	dw	3112
   827  00940F  0C35               	dw	3125
   828  009411  0C42               	dw	3138
   829  009413  0C4F               	dw	3151
   830  009415  0C5D               	dw	3165
   831  009417  0C6A               	dw	3178
   832  009419  0C77               	dw	3191
   833  00941B  0C85               	dw	3205
   834  00941D  0C93               	dw	3219
   835  00941F  0CA1               	dw	3233
   836  009421  0CAF               	dw	3247
   837  009423  0CBD               	dw	3261
   838  009425  0CCB               	dw	3275
   839  009427  0CD9               	dw	3289
   840  009429  0CE8               	dw	3304
   841  00942B  0CF7               	dw	3319
   842  00942D  0D05               	dw	3333
   843  00942F  0D14               	dw	3348
   844  009431  0D23               	dw	3363
   845  009433  0D32               	dw	3378
   846  009435  0D42               	dw	3394
   847  009437  0D51               	dw	3409
   848  009439  0D61               	dw	3425
   849  00943B  0D70               	dw	3440
   850  00943D  0D80               	dw	3456
   851  00943F  0D90               	dw	3472
   852  009441  0DA0               	dw	3488
   853  009443  0DB1               	dw	3505
   854  009445  0DC1               	dw	3521
   855  009447  0DD2               	dw	3538
   856  009449  0DE3               	dw	3555
   857  00944B  0DF3               	dw	3571
   858  00944D  0E05               	dw	3589
   859  00944F  0E16               	dw	3606
   860  009451  0E27               	dw	3623
   861  009453  0E39               	dw	3641
   862  009455  0E4B               	dw	3659
   863  009457  0E5C               	dw	3676
   864  009459  0E6F               	dw	3695
   865  00945B  0E81               	dw	3713
   866  00945D  0E93               	dw	3731
   867  00945F  0EA6               	dw	3750
   868  009461                     __end_of_motor_speed_lookup:
   869                           	opt stack 0
   870  009461                     _motor_steps_lookup:
   871                           	opt stack 0
   872  009461  0001               	dw	1
   873  009463  0002               	dw	2
   874  009465  0003               	dw	3
   875  009467  0004               	dw	4
   876  009469  0005               	dw	5
   877  00946B  0006               	dw	6
   878  00946D  0007               	dw	7
   879  00946F  0008               	dw	8
   880  009471  0009               	dw	9
   881  009473  000A               	dw	10
   882  009475  000B               	dw	11
   883  009477  000C               	dw	12
   884  009479  000D               	dw	13
   885  00947B  000E               	dw	14
   886  00947D  000F               	dw	15
   887  00947F  0010               	dw	16
   888  009481  0011               	dw	17
   889  009483  0012               	dw	18
   890  009485  0013               	dw	19
   891  009487  0014               	dw	20
   892  009489  0015               	dw	21
   893  00948B  0016               	dw	22
   894  00948D  0017               	dw	23
   895  00948F  0018               	dw	24
   896  009491  0019               	dw	25
   897  009493  001A               	dw	26
   898  009495  001B               	dw	27
   899  009497  001C               	dw	28
   900  009499  001D               	dw	29
   901  00949B  001E               	dw	30
   902  00949D  001F               	dw	31
   903  00949F  0020               	dw	32
   904  0094A1  0021               	dw	33
   905  0094A3  0022               	dw	34
   906  0094A5  0023               	dw	35
   907  0094A7  0024               	dw	36
   908  0094A9  0025               	dw	37
   909  0094AB  0026               	dw	38
   910  0094AD  0027               	dw	39
   911  0094AF  0028               	dw	40
   912  0094B1  0029               	dw	41
   913  0094B3  002A               	dw	42
   914  0094B5  002B               	dw	43
   915  0094B7  002C               	dw	44
   916  0094B9  002D               	dw	45
   917  0094BB  002E               	dw	46
   918  0094BD  002F               	dw	47
   919  0094BF  0030               	dw	48
   920  0094C1  0031               	dw	49
   921  0094C3  0032               	dw	50
   922  0094C5  0033               	dw	51
   923  0094C7  0034               	dw	52
   924  0094C9  0035               	dw	53
   925  0094CB  0036               	dw	54
   926  0094CD  0037               	dw	55
   927  0094CF  0038               	dw	56
   928  0094D1  0039               	dw	57
   929  0094D3  003A               	dw	58
   930  0094D5  003B               	dw	59
   931  0094D7  003C               	dw	60
   932  0094D9  003D               	dw	61
   933  0094DB  003E               	dw	62
   934  0094DD  003F               	dw	63
   935  0094DF  0040               	dw	64
   936  0094E1  0041               	dw	65
   937  0094E3  0042               	dw	66
   938  0094E5  0043               	dw	67
   939  0094E7  0045               	dw	69
   940  0094E9  0047               	dw	71
   941  0094EB  0049               	dw	73
   942  0094ED  004B               	dw	75
   943  0094EF  004D               	dw	77
   944  0094F1  004F               	dw	79
   945  0094F3  0051               	dw	81
   946  0094F5  0053               	dw	83
   947  0094F7  0055               	dw	85
   948  0094F9  0057               	dw	87
   949  0094FB  0059               	dw	89
   950  0094FD  005B               	dw	91
   951  0094FF  005D               	dw	93
   952  009501  005F               	dw	95
   953  009503  0061               	dw	97
   954  009505  0063               	dw	99
   955  009507  0065               	dw	101
   956  009509  0067               	dw	103
   957  00950B  0069               	dw	105
   958  00950D  006B               	dw	107
   959  00950F  006E               	dw	110
   960  009511  0070               	dw	112
   961  009513  0073               	dw	115
   962  009515  0075               	dw	117
   963  009517  0077               	dw	119
   964  009519  0079               	dw	121
   965  00951B  007B               	dw	123
   966  00951D  007D               	dw	125
   967  00951F  007F               	dw	127
   968  009521  0081               	dw	129
   969  009523  0083               	dw	131
   970  009525  0085               	dw	133
   971  009527  0087               	dw	135
   972  009529  0089               	dw	137
   973  00952B  008B               	dw	139
   974  00952D  008D               	dw	141
   975  00952F  008F               	dw	143
   976  009531  0091               	dw	145
   977  009533  0093               	dw	147
   978  009535  0095               	dw	149
   979  009537  0097               	dw	151
   980  009539  0099               	dw	153
   981  00953B  009B               	dw	155
   982  00953D  009D               	dw	157
   983  00953F  009F               	dw	159
   984  009541  00A1               	dw	161
   985  009543  00A3               	dw	163
   986  009545  00A5               	dw	165
   987  009547  00A7               	dw	167
   988  009549  00A9               	dw	169
   989  00954B  00AB               	dw	171
   990  00954D  00AD               	dw	173
   991  00954F  00AF               	dw	175
   992  009551  00B1               	dw	177
   993  009553  00B3               	dw	179
   994  009555  00B5               	dw	181
   995  009557  00B7               	dw	183
   996  009559  00B9               	dw	185
   997  00955B  00BB               	dw	187
   998  00955D  00BD               	dw	189
   999  00955F  00C0               	dw	192
  1000  009561  00C3               	dw	195
  1001  009563  00C6               	dw	198
  1002  009565  00C9               	dw	201
  1003  009567  00CC               	dw	204
  1004  009569  00CF               	dw	207
  1005  00956B  00D2               	dw	210
  1006  00956D  00D5               	dw	213
  1007  00956F  00D8               	dw	216
  1008  009571  00DB               	dw	219
  1009  009573  00DE               	dw	222
  1010  009575  00E1               	dw	225
  1011  009577  00E4               	dw	228
  1012  009579  00E7               	dw	231
  1013  00957B  00EA               	dw	234
  1014  00957D  00ED               	dw	237
  1015  00957F  00F0               	dw	240
  1016  009581  00F3               	dw	243
  1017  009583  00F6               	dw	246
  1018  009585  00F9               	dw	249
  1019  009587  00FC               	dw	252
  1020  009589  00FF               	dw	255
  1021  00958B  0102               	dw	258
  1022  00958D  0105               	dw	261
  1023  00958F  0108               	dw	264
  1024  009591  010B               	dw	267
  1025  009593  010E               	dw	270
  1026  009595  0111               	dw	273
  1027  009597  0114               	dw	276
  1028  009599  0117               	dw	279
  1029  00959B  011A               	dw	282
  1030  00959D  011D               	dw	285
  1031  00959F  0120               	dw	288
  1032  0095A1  0123               	dw	291
  1033  0095A3  0126               	dw	294
  1034  0095A5  012A               	dw	298
  1035  0095A7  012D               	dw	301
  1036  0095A9  0130               	dw	304
  1037  0095AB  0133               	dw	307
  1038  0095AD  0137               	dw	311
  1039  0095AF  013A               	dw	314
  1040  0095B1  013E               	dw	318
  1041  0095B3  0142               	dw	322
  1042  0095B5  0145               	dw	325
  1043  0095B7  0149               	dw	329
  1044  0095B9  014D               	dw	333
  1045  0095BB  0151               	dw	337
  1046  0095BD  0155               	dw	341
  1047  0095BF  0159               	dw	345
  1048  0095C1  015D               	dw	349
  1049  0095C3  0161               	dw	353
  1050  0095C5  0166               	dw	358
  1051  0095C7  016A               	dw	362
  1052  0095C9  016E               	dw	366
  1053  0095CB  0173               	dw	371
  1054  0095CD  0178               	dw	376
  1055  0095CF  017D               	dw	381
  1056  0095D1  0182               	dw	386
  1057  0095D3  0187               	dw	391
  1058  0095D5  018C               	dw	396
  1059  0095D7  0191               	dw	401
  1060  0095D9  0196               	dw	406
  1061  0095DB  019C               	dw	412
  1062  0095DD  01A1               	dw	417
  1063  0095DF  01A7               	dw	423
  1064  0095E1  01AD               	dw	429
  1065  0095E3  01B3               	dw	435
  1066  0095E5  01B9               	dw	441
  1067  0095E7  01BF               	dw	447
  1068  0095E9  01C6               	dw	454
  1069  0095EB  01CC               	dw	460
  1070  0095ED  01D3               	dw	467
  1071  0095EF  01DA               	dw	474
  1072  0095F1  01E1               	dw	481
  1073  0095F3  01E8               	dw	488
  1074  0095F5  01F0               	dw	496
  1075  0095F7  01F7               	dw	503
  1076  0095F9  01FF               	dw	511
  1077  0095FB  0207               	dw	519
  1078  0095FD  020F               	dw	527
  1079  0095FF  0218               	dw	536
  1080  009601  0221               	dw	545
  1081  009603  022A               	dw	554
  1082  009605  0233               	dw	563
  1083  009607  023D               	dw	573
  1084  009609  0247               	dw	583
  1085  00960B  0251               	dw	593
  1086  00960D  025C               	dw	604
  1087  00960F  0267               	dw	615
  1088  009611  0272               	dw	626
  1089  009613  027E               	dw	638
  1090  009615  028A               	dw	650
  1091  009617  0297               	dw	663
  1092  009619  02A4               	dw	676
  1093  00961B  02B2               	dw	690
  1094  00961D  02C0               	dw	704
  1095  00961F  02CF               	dw	719
  1096  009621  02DF               	dw	735
  1097  009623  02EF               	dw	751
  1098  009625  02FF               	dw	767
  1099  009627  0311               	dw	785
  1100  009629  0323               	dw	803
  1101  00962B  0336               	dw	822
  1102  00962D  0349               	dw	841
  1103  00962F  035E               	dw	862
  1104  009631  0373               	dw	883
  1105  009633  0389               	dw	905
  1106  009635  03A1               	dw	929
  1107  009637  03B9               	dw	953
  1108  009639  03D3               	dw	979
  1109  00963B  03DD               	dw	989
  1110  00963D  03E4               	dw	996
  1111  00963F  03EA               	dw	1002
  1112  009641  03F1               	dw	1009
  1113  009643  03F8               	dw	1016
  1114  009645  03FF               	dw	1023
  1115  009647  0406               	dw	1030
  1116  009649  040D               	dw	1037
  1117  00964B  0415               	dw	1045
  1118  00964D  041C               	dw	1052
  1119  00964F  0424               	dw	1060
  1120  009651  042B               	dw	1067
  1121  009653  0433               	dw	1075
  1122  009655  043B               	dw	1083
  1123  009657  0442               	dw	1090
  1124  009659  044A               	dw	1098
  1125  00965B  0452               	dw	1106
  1126  00965D  045A               	dw	1114
  1127  00965F  0463               	dw	1123
  1128  009661  046B               	dw	1131
  1129  009663  0474               	dw	1140
  1130  009665  047C               	dw	1148
  1131  009667  0485               	dw	1157
  1132  009669  048E               	dw	1166
  1133  00966B  0496               	dw	1174
  1134  00966D  049F               	dw	1183
  1135  00966F  04A9               	dw	1193
  1136  009671  04B2               	dw	1202
  1137  009673  04BB               	dw	1211
  1138  009675  04C5               	dw	1221
  1139  009677  04CE               	dw	1230
  1140  009679  04D8               	dw	1240
  1141  00967B  04E2               	dw	1250
  1142  00967D  04EC               	dw	1260
  1143  00967F  04F6               	dw	1270
  1144  009681  0500               	dw	1280
  1145  009683  050B               	dw	1291
  1146  009685  0515               	dw	1301
  1147  009687  0520               	dw	1312
  1148  009689  052B               	dw	1323
  1149  00968B  0536               	dw	1334
  1150  00968D  0541               	dw	1345
  1151  00968F  054C               	dw	1356
  1152  009691  0558               	dw	1368
  1153  009693  0564               	dw	1380
  1154  009695  056F               	dw	1391
  1155  009697  057B               	dw	1403
  1156  009699  0587               	dw	1415
  1157  00969B  0594               	dw	1428
  1158  00969D  05A0               	dw	1440
  1159  00969F  05AD               	dw	1453
  1160  0096A1  05BA               	dw	1466
  1161  0096A3  05C7               	dw	1479
  1162  0096A5  05D4               	dw	1492
  1163  0096A7  05E2               	dw	1506
  1164  0096A9  05EF               	dw	1519
  1165  0096AB  05FD               	dw	1533
  1166  0096AD  060B               	dw	1547
  1167  0096AF  0619               	dw	1561
  1168  0096B1  0628               	dw	1576
  1169  0096B3  0637               	dw	1591
  1170  0096B5  0646               	dw	1606
  1171  0096B7  0655               	dw	1621
  1172  0096B9  0664               	dw	1636
  1173  0096BB  0674               	dw	1652
  1174  0096BD  0684               	dw	1668
  1175  0096BF  0694               	dw	1684
  1176  0096C1  06A4               	dw	1700
  1177  0096C3  06B5               	dw	1717
  1178  0096C5  06C6               	dw	1734
  1179  0096C7  06D7               	dw	1751
  1180  0096C9  06E9               	dw	1769
  1181  0096CB  06FA               	dw	1786
  1182  0096CD  070C               	dw	1804
  1183  0096CF  071F               	dw	1823
  1184  0096D1  0731               	dw	1841
  1185  0096D3  0744               	dw	1860
  1186  0096D5  0758               	dw	1880
  1187  0096D7  076B               	dw	1899
  1188  0096D9  077F               	dw	1919
  1189  0096DB  0793               	dw	1939
  1190  0096DD  07A8               	dw	1960
  1191  0096DF  07BD               	dw	1981
  1192  0096E1  07D2               	dw	2002
  1193  0096E3  07E8               	dw	2024
  1194  0096E5  07FE               	dw	2046
  1195  0096E7  0815               	dw	2069
  1196  0096E9  082C               	dw	2092
  1197  0096EB  0843               	dw	2115
  1198  0096ED  085B               	dw	2139
  1199  0096EF  0873               	dw	2163
  1200  0096F1  088B               	dw	2187
  1201  0096F3  08A5               	dw	2213
  1202  0096F5  08BE               	dw	2238
  1203  0096F7  08D8               	dw	2264
  1204  0096F9  08F2               	dw	2290
  1205  0096FB  090D               	dw	2317
  1206  0096FD  0929               	dw	2345
  1207  0096FF  0945               	dw	2373
  1208  009701  0961               	dw	2401
  1209  009703  097E               	dw	2430
  1210  009705  099C               	dw	2460
  1211  009707  09BA               	dw	2490
  1212  009709  09D9               	dw	2521
  1213  00970B  09F9               	dw	2553
  1214  00970D  0A19               	dw	2585
  1215  00970F  0A39               	dw	2617
  1216  009711  0A5B               	dw	2651
  1217  009713  0A7D               	dw	2685
  1218  009715  0A9F               	dw	2719
  1219  009717  0AC3               	dw	2755
  1220  009719  0AE7               	dw	2791
  1221  00971B  0B0C               	dw	2828
  1222  00971D  0B31               	dw	2865
  1223  00971F  0B58               	dw	2904
  1224  009721  0B7F               	dw	2943
  1225  009723  0BA7               	dw	2983
  1226  009725  0BD0               	dw	3024
  1227  009727  0BFA               	dw	3066
  1228  009729  0C25               	dw	3109
  1229  00972B  0C51               	dw	3153
  1230  00972D  0C7E               	dw	3198
  1231  00972F  0CAB               	dw	3243
  1232  009731  0CDA               	dw	3290
  1233  009733  0D0A               	dw	3338
  1234  009735  0D3B               	dw	3387
  1235  009737  0D6D               	dw	3437
  1236  009739  0DA0               	dw	3488
  1237  00973B  0DD4               	dw	3540
  1238  00973D  0E0A               	dw	3594
  1239  00973F  0E41               	dw	3649
  1240  009741  0E79               	dw	3705
  1241  009743  0EB3               	dw	3763
  1242  009745  0EEE               	dw	3822
  1243  009747  0F2A               	dw	3882
  1244  009749  0F68               	dw	3944
  1245  00974B  0FA8               	dw	4008
  1246  00974D  0FE9               	dw	4073
  1247  00974F  102C               	dw	4140
  1248  009751  1070               	dw	4208
  1249  009753  10B6               	dw	4278
  1250  009755  10FE               	dw	4350
  1251  009757  1148               	dw	4424
  1252  009759  1194               	dw	4500
  1253  00975B  11E2               	dw	4578
  1254  00975D  1232               	dw	4658
  1255  00975F  1285               	dw	4741
  1256  009761  12D9               	dw	4825
  1257  009763  1330               	dw	4912
  1258  009765  1389               	dw	5001
  1259  009767  13E5               	dw	5093
  1260  009769  1444               	dw	5188
  1261  00976B  14A5               	dw	5285
  1262  00976D  1509               	dw	5385
  1263  00976F  1570               	dw	5488
  1264  009771  15DA               	dw	5594
  1265  009773  1647               	dw	5703
  1266  009775  16B8               	dw	5816
  1267  009777  172B               	dw	5931
  1268  009779  17A3               	dw	6051
  1269  00977B  181E               	dw	6174
  1270  00977D  189D               	dw	6301
  1271  00977F  1921               	dw	6433
  1272  009781  19A8               	dw	6568
  1273  009783  1A34               	dw	6708
  1274  009785  1AC4               	dw	6852
  1275  009787  1B5A               	dw	7002
  1276  009789  1BF4               	dw	7156
  1277  00978B  1C94               	dw	7316
  1278  00978D  1D39               	dw	7481
  1279  00978F  1DE4               	dw	7652
  1280  009791  1E95               	dw	7829
  1281  009793  1F4C               	dw	8012
  1282  009795  200A               	dw	8202
  1283  009797  20CE               	dw	8398
  1284  009799  219A               	dw	8602
  1285  00979B  226E               	dw	8814
  1286  00979D  234A               	dw	9034
  1287  00979F  242E               	dw	9262
  1288  0097A1  251B               	dw	9499
  1289  0097A3  2612               	dw	9746
  1290  0097A5  2712               	dw	10002
  1291  0097A7  281D               	dw	10269
  1292  0097A9  2932               	dw	10546
  1293  0097AB  2A53               	dw	10835
  1294  0097AD  2B81               	dw	11137
  1295  0097AF  2CBB               	dw	11451
  1296  0097B1  2E03               	dw	11779
  1297  0097B3  2F5A               	dw	12122
  1298  0097B5  30C0               	dw	12480
  1299  0097B7  3236               	dw	12854
  1300  0097B9  33BD               	dw	13245
  1301  0097BB  3557               	dw	13655
  1302  0097BD  35F5               	dw	13813
  1303  0097BF  3661               	dw	13921
  1304  0097C1  36CD               	dw	14029
  1305  0097C3  373B               	dw	14139
  1306  0097C5  37AA               	dw	14250
  1307  0097C7  381B               	dw	14363
  1308  0097C9  388C               	dw	14476
  1309  0097CB  3900               	dw	14592
  1310  0097CD  3974               	dw	14708
  1311  0097CF  39EA               	dw	14826
  1312  0097D1  3A62               	dw	14946
  1313  0097D3  3ADB               	dw	15067
  1314  0097D5  3B55               	dw	15189
  1315  0097D7  3BD1               	dw	15313
  1316  0097D9  3C4E               	dw	15438
  1317  0097DB  3CCD               	dw	15565
  1318  0097DD  3D4E               	dw	15694
  1319  0097DF  3DD0               	dw	15824
  1320  0097E1  3E54               	dw	15956
  1321  0097E3  3EDA               	dw	16090
  1322  0097E5  3F61               	dw	16225
  1323  0097E7  3FEA               	dw	16362
  1324  0097E9  4074               	dw	16500
  1325  0097EB  4101               	dw	16641
  1326  0097ED  418F               	dw	16783
  1327  0097EF  421F               	dw	16927
  1328  0097F1  42B1               	dw	17073
  1329  0097F3  4345               	dw	17221
  1330  0097F5  43DB               	dw	17371
  1331  0097F7  4473               	dw	17523
  1332  0097F9  450D               	dw	17677
  1333  0097FB  45A9               	dw	17833
  1334  0097FD  4647               	dw	17991
  1335  0097FF  46E7               	dw	18151
  1336  009801  4789               	dw	18313
  1337  009803  482E               	dw	18478
  1338  009805  48D5               	dw	18645
  1339  009807  497E               	dw	18814
  1340  009809  4A29               	dw	18985
  1341  00980B  4AD7               	dw	19159
  1342  00980D  4B87               	dw	19335
  1343  00980F  4C3A               	dw	19514
  1344  009811  4CEF               	dw	19695
  1345  009813  4DA6               	dw	19878
  1346  009815  4E61               	dw	20065
  1347  009817  4F1E               	dw	20254
  1348  009819  4FDD               	dw	20445
  1349  00981B  50A0               	dw	20640
  1350  00981D  5165               	dw	20837
  1351  00981F  522D               	dw	21037
  1352  009821  52F8               	dw	21240
  1353  009823  53C6               	dw	21446
  1354  009825  5497               	dw	21655
  1355  009827  556B               	dw	21867
  1356  009829  5642               	dw	22082
  1357  00982B  571C               	dw	22300
  1358  00982D  57FA               	dw	22522
  1359  00982F                     __end_of_motor_steps_lookup:
  1360                           	opt stack 0
  1361  00982F                     _motor_postscaler_lookup:
  1362                           	opt stack 0
  1363  00982F  0C                 	db	12
  1364  009830  07                 	db	7
  1365  009831  05                 	db	5
  1366  009832  04                 	db	4
  1367  009833  04                 	db	4
  1368  009834  03                 	db	3
  1369  009835  03                 	db	3
  1370  009836  03                 	db	3
  1371  009837  02                 	db	2
  1372  009838  02                 	db	2
  1373  009839  02                 	db	2
  1374  00983A  02                 	db	2
  1375  00983B  02                 	db	2
  1376  00983C  02                 	db	2
  1377  00983D  01                 	db	1
  1378  00983E  01                 	db	1
  1379  00983F  01                 	db	1
  1380  009840  01                 	db	1
  1381  009841  01                 	db	1
  1382  009842  01                 	db	1
  1383  009843  01                 	db	1
  1384  009844  01                 	db	1
  1385  009845  01                 	db	1
  1386  009846  01                 	db	1
  1387  009847  01                 	db	1
  1388  009848  01                 	db	1
  1389  009849  01                 	db	1
  1390  00984A  01                 	db	1
  1391  00984B  01                 	db	1
  1392  00984C  01                 	db	1
  1393  00984D  01                 	db	1
  1394  00984E  01                 	db	1
  1395  00984F  01                 	db	1
  1396  009850  01                 	db	1
  1397  009851  01                 	db	1
  1398  009852  01                 	db	1
  1399  009853  01                 	db	1
  1400  009854  01                 	db	1
  1401  009855  01                 	db	1
  1402  009856  01                 	db	1
  1403  009857  01                 	db	1
  1404  009858  01                 	db	1
  1405  009859  01                 	db	1
  1406  00985A  01                 	db	1
  1407  00985B  01                 	db	1
  1408  00985C  01                 	db	1
  1409  00985D  01                 	db	1
  1410  00985E  01                 	db	1
  1411  00985F  01                 	db	1
  1412  009860  01                 	db	1
  1413  009861  01                 	db	1
  1414  009862  01                 	db	1
  1415  009863  01                 	db	1
  1416  009864  01                 	db	1
  1417  009865  01                 	db	1
  1418  009866  01                 	db	1
  1419  009867  01                 	db	1
  1420  009868  01                 	db	1
  1421  009869  01                 	db	1
  1422  00986A  01                 	db	1
  1423  00986B  01                 	db	1
  1424  00986C  01                 	db	1
  1425  00986D  01                 	db	1
  1426  00986E  01                 	db	1
  1427  00986F  01                 	db	1
  1428  009870  01                 	db	1
  1429  009871  01                 	db	1
  1430  009872  01                 	db	1
  1431  009873  01                 	db	1
  1432  009874  01                 	db	1
  1433  009875  01                 	db	1
  1434  009876  01                 	db	1
  1435  009877  01                 	db	1
  1436  009878  01                 	db	1
  1437  009879  01                 	db	1
  1438  00987A  01                 	db	1
  1439  00987B  01                 	db	1
  1440  00987C  01                 	db	1
  1441  00987D  01                 	db	1
  1442  00987E  01                 	db	1
  1443  00987F  01                 	db	1
  1444  009880  01                 	db	1
  1445  009881  01                 	db	1
  1446  009882  01                 	db	1
  1447  009883  01                 	db	1
  1448  009884  01                 	db	1
  1449  009885  01                 	db	1
  1450  009886  01                 	db	1
  1451  009887  01                 	db	1
  1452  009888  01                 	db	1
  1453  009889  01                 	db	1
  1454  00988A  00                 	db	0
  1455  00988B  00                 	db	0
  1456  00988C  00                 	db	0
  1457  00988D  00                 	db	0
  1458  00988E  00                 	db	0
  1459  00988F  00                 	db	0
  1460  009890  00                 	db	0
  1461  009891  00                 	db	0
  1462  009892  00                 	db	0
  1463  009893  00                 	db	0
  1464  009894  00                 	db	0
  1465  009895  00                 	db	0
  1466  009896  00                 	db	0
  1467  009897  00                 	db	0
  1468  009898  00                 	db	0
  1469  009899  00                 	db	0
  1470  00989A  00                 	db	0
  1471  00989B  00                 	db	0
  1472  00989C  00                 	db	0
  1473  00989D  00                 	db	0
  1474  00989E  00                 	db	0
  1475  00989F  00                 	db	0
  1476  0098A0  00                 	db	0
  1477  0098A1  00                 	db	0
  1478  0098A2  00                 	db	0
  1479  0098A3  00                 	db	0
  1480  0098A4  00                 	db	0
  1481  0098A5  00                 	db	0
  1482  0098A6  00                 	db	0
  1483  0098A7  00                 	db	0
  1484  0098A8  00                 	db	0
  1485  0098A9  00                 	db	0
  1486  0098AA  00                 	db	0
  1487  0098AB  00                 	db	0
  1488  0098AC  00                 	db	0
  1489  0098AD  00                 	db	0
  1490  0098AE  00                 	db	0
  1491  0098AF  00                 	db	0
  1492  0098B0  00                 	db	0
  1493  0098B1  00                 	db	0
  1494  0098B2  00                 	db	0
  1495  0098B3  00                 	db	0
  1496  0098B4  00                 	db	0
  1497  0098B5  00                 	db	0
  1498  0098B6  00                 	db	0
  1499  0098B7  00                 	db	0
  1500  0098B8  00                 	db	0
  1501  0098B9  00                 	db	0
  1502  0098BA  00                 	db	0
  1503  0098BB  00                 	db	0
  1504  0098BC  00                 	db	0
  1505  0098BD  00                 	db	0
  1506  0098BE  00                 	db	0
  1507  0098BF  00                 	db	0
  1508  0098C0  00                 	db	0
  1509  0098C1  00                 	db	0
  1510  0098C2  00                 	db	0
  1511  0098C3  00                 	db	0
  1512  0098C4  00                 	db	0
  1513  0098C5  00                 	db	0
  1514  0098C6  00                 	db	0
  1515  0098C7  00                 	db	0
  1516  0098C8  00                 	db	0
  1517  0098C9  00                 	db	0
  1518  0098CA  00                 	db	0
  1519  0098CB  00                 	db	0
  1520  0098CC  00                 	db	0
  1521  0098CD  00                 	db	0
  1522  0098CE  00                 	db	0
  1523  0098CF  00                 	db	0
  1524  0098D0  00                 	db	0
  1525  0098D1  00                 	db	0
  1526  0098D2  00                 	db	0
  1527  0098D3  00                 	db	0
  1528  0098D4  00                 	db	0
  1529  0098D5  00                 	db	0
  1530  0098D6  00                 	db	0
  1531  0098D7  00                 	db	0
  1532  0098D8  00                 	db	0
  1533  0098D9  00                 	db	0
  1534  0098DA  00                 	db	0
  1535  0098DB  00                 	db	0
  1536  0098DC  00                 	db	0
  1537  0098DD  00                 	db	0
  1538  0098DE  00                 	db	0
  1539  0098DF  00                 	db	0
  1540  0098E0  00                 	db	0
  1541  0098E1  00                 	db	0
  1542  0098E2  00                 	db	0
  1543  0098E3  00                 	db	0
  1544  0098E4  00                 	db	0
  1545  0098E5  00                 	db	0
  1546  0098E6  00                 	db	0
  1547  0098E7  00                 	db	0
  1548  0098E8  00                 	db	0
  1549  0098E9  00                 	db	0
  1550  0098EA  00                 	db	0
  1551  0098EB  00                 	db	0
  1552  0098EC  00                 	db	0
  1553  0098ED  00                 	db	0
  1554  0098EE  00                 	db	0
  1555  0098EF  00                 	db	0
  1556  0098F0  00                 	db	0
  1557  0098F1  00                 	db	0
  1558  0098F2  00                 	db	0
  1559  0098F3  00                 	db	0
  1560  0098F4  00                 	db	0
  1561  0098F5  00                 	db	0
  1562  0098F6  00                 	db	0
  1563  0098F7  00                 	db	0
  1564  0098F8  00                 	db	0
  1565  0098F9  00                 	db	0
  1566  0098FA  00                 	db	0
  1567  0098FB  00                 	db	0
  1568  0098FC  00                 	db	0
  1569  0098FD  00                 	db	0
  1570  0098FE  00                 	db	0
  1571  0098FF  00                 	db	0
  1572  009900  00                 	db	0
  1573  009901  00                 	db	0
  1574  009902  00                 	db	0
  1575  009903  00                 	db	0
  1576  009904  00                 	db	0
  1577  009905  00                 	db	0
  1578  009906  00                 	db	0
  1579  009907  00                 	db	0
  1580  009908  00                 	db	0
  1581  009909  00                 	db	0
  1582  00990A  00                 	db	0
  1583  00990B  00                 	db	0
  1584  00990C  00                 	db	0
  1585  00990D  00                 	db	0
  1586  00990E  00                 	db	0
  1587  00990F  00                 	db	0
  1588  009910  00                 	db	0
  1589  009911  00                 	db	0
  1590  009912  00                 	db	0
  1591  009913  00                 	db	0
  1592  009914  00                 	db	0
  1593  009915  00                 	db	0
  1594  009916  00                 	db	0
  1595  009917  00                 	db	0
  1596  009918  00                 	db	0
  1597  009919  00                 	db	0
  1598  00991A  00                 	db	0
  1599  00991B  00                 	db	0
  1600  00991C  00                 	db	0
  1601  00991D  00                 	db	0
  1602  00991E  00                 	db	0
  1603  00991F  00                 	db	0
  1604  009920  00                 	db	0
  1605  009921  00                 	db	0
  1606  009922  00                 	db	0
  1607  009923  00                 	db	0
  1608  009924  00                 	db	0
  1609  009925  00                 	db	0
  1610  009926  00                 	db	0
  1611  009927  00                 	db	0
  1612  009928  00                 	db	0
  1613  009929  00                 	db	0
  1614  00992A  00                 	db	0
  1615  00992B  00                 	db	0
  1616  00992C  00                 	db	0
  1617  00992D  00                 	db	0
  1618  00992E  00                 	db	0
  1619  00992F  00                 	db	0
  1620  009930  00                 	db	0
  1621  009931  00                 	db	0
  1622  009932  00                 	db	0
  1623  009933  00                 	db	0
  1624  009934  00                 	db	0
  1625  009935  00                 	db	0
  1626  009936  00                 	db	0
  1627  009937  00                 	db	0
  1628  009938  00                 	db	0
  1629  009939  00                 	db	0
  1630  00993A  00                 	db	0
  1631  00993B  00                 	db	0
  1632  00993C  00                 	db	0
  1633  00993D  00                 	db	0
  1634  00993E  00                 	db	0
  1635  00993F  00                 	db	0
  1636  009940  00                 	db	0
  1637  009941  00                 	db	0
  1638  009942  00                 	db	0
  1639  009943  00                 	db	0
  1640  009944  00                 	db	0
  1641  009945  00                 	db	0
  1642  009946  00                 	db	0
  1643  009947  00                 	db	0
  1644  009948  00                 	db	0
  1645  009949  00                 	db	0
  1646  00994A  00                 	db	0
  1647  00994B  00                 	db	0
  1648  00994C  00                 	db	0
  1649  00994D  00                 	db	0
  1650  00994E  00                 	db	0
  1651  00994F  00                 	db	0
  1652  009950  00                 	db	0
  1653  009951  00                 	db	0
  1654  009952  00                 	db	0
  1655  009953  00                 	db	0
  1656  009954  00                 	db	0
  1657  009955  00                 	db	0
  1658  009956  00                 	db	0
  1659  009957  00                 	db	0
  1660  009958  00                 	db	0
  1661  009959  00                 	db	0
  1662  00995A  00                 	db	0
  1663  00995B  00                 	db	0
  1664  00995C  00                 	db	0
  1665  00995D  00                 	db	0
  1666  00995E  00                 	db	0
  1667  00995F  00                 	db	0
  1668  009960  00                 	db	0
  1669  009961  00                 	db	0
  1670  009962  00                 	db	0
  1671  009963  00                 	db	0
  1672  009964  00                 	db	0
  1673  009965  00                 	db	0
  1674  009966  00                 	db	0
  1675  009967  00                 	db	0
  1676  009968  00                 	db	0
  1677  009969  00                 	db	0
  1678  00996A  00                 	db	0
  1679  00996B  00                 	db	0
  1680  00996C  00                 	db	0
  1681  00996D  00                 	db	0
  1682  00996E  00                 	db	0
  1683  00996F  00                 	db	0
  1684  009970  00                 	db	0
  1685  009971  00                 	db	0
  1686  009972  00                 	db	0
  1687  009973  00                 	db	0
  1688  009974  00                 	db	0
  1689  009975  00                 	db	0
  1690  009976  00                 	db	0
  1691  009977  00                 	db	0
  1692  009978  00                 	db	0
  1693  009979  00                 	db	0
  1694  00997A  00                 	db	0
  1695  00997B  00                 	db	0
  1696  00997C  00                 	db	0
  1697  00997D  00                 	db	0
  1698  00997E  00                 	db	0
  1699  00997F  00                 	db	0
  1700  009980  00                 	db	0
  1701  009981  00                 	db	0
  1702  009982  00                 	db	0
  1703  009983  00                 	db	0
  1704  009984  00                 	db	0
  1705  009985  00                 	db	0
  1706  009986  00                 	db	0
  1707  009987  00                 	db	0
  1708  009988  00                 	db	0
  1709  009989  00                 	db	0
  1710  00998A  00                 	db	0
  1711  00998B  00                 	db	0
  1712  00998C  00                 	db	0
  1713  00998D  00                 	db	0
  1714  00998E  00                 	db	0
  1715  00998F  00                 	db	0
  1716  009990  00                 	db	0
  1717  009991  00                 	db	0
  1718  009992  00                 	db	0
  1719  009993  00                 	db	0
  1720  009994  00                 	db	0
  1721  009995  00                 	db	0
  1722  009996  00                 	db	0
  1723  009997  00                 	db	0
  1724  009998  00                 	db	0
  1725  009999  00                 	db	0
  1726  00999A  00                 	db	0
  1727  00999B  00                 	db	0
  1728  00999C  00                 	db	0
  1729  00999D  00                 	db	0
  1730  00999E  00                 	db	0
  1731  00999F  00                 	db	0
  1732  0099A0  00                 	db	0
  1733  0099A1  00                 	db	0
  1734  0099A2  00                 	db	0
  1735  0099A3  00                 	db	0
  1736  0099A4  00                 	db	0
  1737  0099A5  00                 	db	0
  1738  0099A6  00                 	db	0
  1739  0099A7  00                 	db	0
  1740  0099A8  00                 	db	0
  1741  0099A9  00                 	db	0
  1742  0099AA  00                 	db	0
  1743  0099AB  00                 	db	0
  1744  0099AC  00                 	db	0
  1745  0099AD  00                 	db	0
  1746  0099AE  00                 	db	0
  1747  0099AF  00                 	db	0
  1748  0099B0  00                 	db	0
  1749  0099B1  00                 	db	0
  1750  0099B2  00                 	db	0
  1751  0099B3  00                 	db	0
  1752  0099B4  00                 	db	0
  1753  0099B5  00                 	db	0
  1754  0099B6  00                 	db	0
  1755  0099B7  00                 	db	0
  1756  0099B8  00                 	db	0
  1757  0099B9  00                 	db	0
  1758  0099BA  00                 	db	0
  1759  0099BB  00                 	db	0
  1760  0099BC  00                 	db	0
  1761  0099BD  00                 	db	0
  1762  0099BE  00                 	db	0
  1763  0099BF  00                 	db	0
  1764  0099C0  00                 	db	0
  1765  0099C1  00                 	db	0
  1766  0099C2  00                 	db	0
  1767  0099C3  00                 	db	0
  1768  0099C4  00                 	db	0
  1769  0099C5  00                 	db	0
  1770  0099C6  00                 	db	0
  1771  0099C7  00                 	db	0
  1772  0099C8  00                 	db	0
  1773  0099C9  00                 	db	0
  1774  0099CA  00                 	db	0
  1775  0099CB  00                 	db	0
  1776  0099CC  00                 	db	0
  1777  0099CD  00                 	db	0
  1778  0099CE  00                 	db	0
  1779  0099CF  00                 	db	0
  1780  0099D0  00                 	db	0
  1781  0099D1  00                 	db	0
  1782  0099D2  00                 	db	0
  1783  0099D3  00                 	db	0
  1784  0099D4  00                 	db	0
  1785  0099D5  00                 	db	0
  1786  0099D6  00                 	db	0
  1787  0099D7  00                 	db	0
  1788  0099D8  00                 	db	0
  1789  0099D9  00                 	db	0
  1790  0099DA  00                 	db	0
  1791  0099DB  00                 	db	0
  1792  0099DC  00                 	db	0
  1793  0099DD  00                 	db	0
  1794  0099DE  00                 	db	0
  1795  0099DF  00                 	db	0
  1796  0099E0  00                 	db	0
  1797  0099E1  00                 	db	0
  1798  0099E2  00                 	db	0
  1799  0099E3  00                 	db	0
  1800  0099E4  00                 	db	0
  1801  0099E5  00                 	db	0
  1802  0099E6  00                 	db	0
  1803  0099E7  00                 	db	0
  1804  0099E8  00                 	db	0
  1805  0099E9  00                 	db	0
  1806  0099EA  00                 	db	0
  1807  0099EB  00                 	db	0
  1808  0099EC  00                 	db	0
  1809  0099ED  00                 	db	0
  1810  0099EE  00                 	db	0
  1811  0099EF  00                 	db	0
  1812  0099F0  00                 	db	0
  1813  0099F1  00                 	db	0
  1814  0099F2  00                 	db	0
  1815  0099F3  00                 	db	0
  1816  0099F4  00                 	db	0
  1817  0099F5  00                 	db	0
  1818  0099F6  00                 	db	0
  1819  0099F7  00                 	db	0
  1820  0099F8  00                 	db	0
  1821  0099F9  00                 	db	0
  1822  0099FA  00                 	db	0
  1823  0099FB  00                 	db	0
  1824  0099FC  00                 	db	0
  1825  0099FD  00                 	db	0
  1826  0099FE  00                 	db	0
  1827  0099FF  00                 	db	0
  1828  009A00  00                 	db	0
  1829  009A01  00                 	db	0
  1830  009A02  00                 	db	0
  1831  009A03  00                 	db	0
  1832  009A04  00                 	db	0
  1833  009A05  00                 	db	0
  1834  009A06  00                 	db	0
  1835  009A07  00                 	db	0
  1836  009A08  00                 	db	0
  1837  009A09  00                 	db	0
  1838  009A0A  00                 	db	0
  1839  009A0B  00                 	db	0
  1840  009A0C  00                 	db	0
  1841  009A0D  00                 	db	0
  1842  009A0E  00                 	db	0
  1843  009A0F  00                 	db	0
  1844  009A10  00                 	db	0
  1845  009A11  00                 	db	0
  1846  009A12  00                 	db	0
  1847  009A13  00                 	db	0
  1848  009A14  00                 	db	0
  1849  009A15  00                 	db	0
  1850  009A16                     __end_of_motor_postscaler_lookup:
  1851                           	opt stack 0
  1852  009A16                     _motor_period_lookup:
  1853                           	opt stack 0
  1854  009A16  EC                 	db	236
  1855  009A17  F2                 	db	242
  1856  009A18  F6                 	db	246
  1857  009A19  F4                 	db	244
  1858  009A1A  D2                 	db	210
  1859  009A1B  E8                 	db	232
  1860  009A1C  D2                 	db	210
  1861  009A1D  C0                 	db	192
  1862  009A1E  EC                 	db	236
  1863  009A1F  DC                 	db	220
  1864  009A20  CF                 	db	207
  1865  009A21  C3                 	db	195
  1866  009A22  B9                 	db	185
  1867  009A23  B0                 	db	176
  1868  009A24  FC                 	db	252
  1869  009A25  F2                 	db	242
  1870  009A26  E8                 	db	232
  1871  009A27  DF                 	db	223
  1872  009A28  D7                 	db	215
  1873  009A29  D0                 	db	208
  1874  009A2A  CA                 	db	202
  1875  009A2B  C3                 	db	195
  1876  009A2C  BE                 	db	190
  1877  009A2D  B8                 	db	184
  1878  009A2E  B3                 	db	179
  1879  009A2F  AF                 	db	175
  1880  009A30  AA                 	db	170
  1881  009A31  A6                 	db	166
  1882  009A32  A2                 	db	162
  1883  009A33  9F                 	db	159
  1884  009A34  9B                 	db	155
  1885  009A35  98                 	db	152
  1886  009A36  95                 	db	149
  1887  009A37  92                 	db	146
  1888  009A38  8F                 	db	143
  1889  009A39  8C                 	db	140
  1890  009A3A  8A                 	db	138
  1891  009A3B  87                 	db	135
  1892  009A3C  85                 	db	133
  1893  009A3D  83                 	db	131
  1894  009A3E  81                 	db	129
  1895  009A3F  7F                 	db	127
  1896  009A40  7D                 	db	125
  1897  009A41  7B                 	db	123
  1898  009A42  79                 	db	121
  1899  009A43  77                 	db	119
  1900  009A44  75                 	db	117
  1901  009A45  74                 	db	116
  1902  009A46  72                 	db	114
  1903  009A47  71                 	db	113
  1904  009A48  6F                 	db	111
  1905  009A49  6E                 	db	110
  1906  009A4A  6C                 	db	108
  1907  009A4B  6B                 	db	107
  1908  009A4C  6A                 	db	106
  1909  009A4D  68                 	db	104
  1910  009A4E  67                 	db	103
  1911  009A4F  66                 	db	102
  1912  009A50  65                 	db	101
  1913  009A51  64                 	db	100
  1914  009A52  62                 	db	98
  1915  009A53  61                 	db	97
  1916  009A54  60                 	db	96
  1917  009A55  5F                 	db	95
  1918  009A56  5E                 	db	94
  1919  009A57  5D                 	db	93
  1920  009A58  5C                 	db	92
  1921  009A59  5B                 	db	91
  1922  009A5A  59                 	db	89
  1923  009A5B  57                 	db	87
  1924  009A5C  56                 	db	86
  1925  009A5D  54                 	db	84
  1926  009A5E  53                 	db	83
  1927  009A5F  51                 	db	81
  1928  009A60  50                 	db	80
  1929  009A61  4F                 	db	79
  1930  009A62  4E                 	db	78
  1931  009A63  4C                 	db	76
  1932  009A64  4B                 	db	75
  1933  009A65  4A                 	db	74
  1934  009A66  49                 	db	73
  1935  009A67  48                 	db	72
  1936  009A68  47                 	db	71
  1937  009A69  46                 	db	70
  1938  009A6A  45                 	db	69
  1939  009A6B  44                 	db	68
  1940  009A6C  43                 	db	67
  1941  009A6D  42                 	db	66
  1942  009A6E  41                 	db	65
  1943  009A6F  40                 	db	64
  1944  009A70  3F                 	db	63
  1945  009A71  FE                 	db	254
  1946  009A72  FB                 	db	251
  1947  009A73  F8                 	db	248
  1948  009A74  F6                 	db	246
  1949  009A75  F3                 	db	243
  1950  009A76  F0                 	db	240
  1951  009A77  EE                 	db	238
  1952  009A78  EC                 	db	236
  1953  009A79  E9                 	db	233
  1954  009A7A  E7                 	db	231
  1955  009A7B  E5                 	db	229
  1956  009A7C  E3                 	db	227
  1957  009A7D  E0                 	db	224
  1958  009A7E  DE                 	db	222
  1959  009A7F  DC                 	db	220
  1960  009A80  DA                 	db	218
  1961  009A81  D8                 	db	216
  1962  009A82  D7                 	db	215
  1963  009A83  D5                 	db	213
  1964  009A84  D3                 	db	211
  1965  009A85  D1                 	db	209
  1966  009A86  CF                 	db	207
  1967  009A87  CE                 	db	206
  1968  009A88  CC                 	db	204
  1969  009A89  CA                 	db	202
  1970  009A8A  C9                 	db	201
  1971  009A8B  C7                 	db	199
  1972  009A8C  C6                 	db	198
  1973  009A8D  C4                 	db	196
  1974  009A8E  C3                 	db	195
  1975  009A8F  C1                 	db	193
  1976  009A90  C0                 	db	192
  1977  009A91  BE                 	db	190
  1978  009A92  BD                 	db	189
  1979  009A93  BC                 	db	188
  1980  009A94  BA                 	db	186
  1981  009A95  B8                 	db	184
  1982  009A96  B6                 	db	182
  1983  009A97  B4                 	db	180
  1984  009A98  B3                 	db	179
  1985  009A99  B1                 	db	177
  1986  009A9A  AF                 	db	175
  1987  009A9B  AE                 	db	174
  1988  009A9C  AC                 	db	172
  1989  009A9D  AA                 	db	170
  1990  009A9E  A9                 	db	169
  1991  009A9F  A7                 	db	167
  1992  009AA0  A6                 	db	166
  1993  009AA1  A4                 	db	164
  1994  009AA2  A3                 	db	163
  1995  009AA3  A1                 	db	161
  1996  009AA4  A0                 	db	160
  1997  009AA5  9F                 	db	159
  1998  009AA6  9D                 	db	157
  1999  009AA7  9C                 	db	156
  2000  009AA8  9B                 	db	155
  2001  009AA9  9A                 	db	154
  2002  009AAA  98                 	db	152
  2003  009AAB  97                 	db	151
  2004  009AAC  96                 	db	150
  2005  009AAD  95                 	db	149
  2006  009AAE  94                 	db	148
  2007  009AAF  93                 	db	147
  2008  009AB0  92                 	db	146
  2009  009AB1  90                 	db	144
  2010  009AB2  8F                 	db	143
  2011  009AB3  8E                 	db	142
  2012  009AB4  8D                 	db	141
  2013  009AB5  8C                 	db	140
  2014  009AB6  8B                 	db	139
  2015  009AB7  8A                 	db	138
  2016  009AB8  89                 	db	137
  2017  009AB9  88                 	db	136
  2018  009ABA  87                 	db	135
  2019  009ABB  86                 	db	134
  2020  009ABC  85                 	db	133
  2021  009ABD  84                 	db	132
  2022  009ABE  83                 	db	131
  2023  009ABF  82                 	db	130
  2024  009AC0  81                 	db	129
  2025  009AC1  80                 	db	128
  2026  009AC2  7F                 	db	127
  2027  009AC3  7E                 	db	126
  2028  009AC4  7D                 	db	125
  2029  009AC5  7C                 	db	124
  2030  009AC6  7B                 	db	123
  2031  009AC7  7A                 	db	122
  2032  009AC8  79                 	db	121
  2033  009AC9  78                 	db	120
  2034  009ACA  77                 	db	119
  2035  009ACB  76                 	db	118
  2036  009ACC  75                 	db	117
  2037  009ACD  74                 	db	116
  2038  009ACE  73                 	db	115
  2039  009ACF  72                 	db	114
  2040  009AD0  71                 	db	113
  2041  009AD1  70                 	db	112
  2042  009AD2  6F                 	db	111
  2043  009AD3  6E                 	db	110
  2044  009AD4  6D                 	db	109
  2045  009AD5  6C                 	db	108
  2046  009AD6  6B                 	db	107
  2047  009AD7  6A                 	db	106
  2048  009AD8  69                 	db	105
  2049  009AD9  68                 	db	104
  2050  009ADA  67                 	db	103
  2051  009ADB  66                 	db	102
  2052  009ADC  65                 	db	101
  2053  009ADD  64                 	db	100
  2054  009ADE  63                 	db	99
  2055  009ADF  62                 	db	98
  2056  009AE0  61                 	db	97
  2057  009AE1  60                 	db	96
  2058  009AE2  5F                 	db	95
  2059  009AE3  5E                 	db	94
  2060  009AE4  5D                 	db	93
  2061  009AE5  5C                 	db	92
  2062  009AE6  5B                 	db	91
  2063  009AE7  5A                 	db	90
  2064  009AE8  59                 	db	89
  2065  009AE9  58                 	db	88
  2066  009AEA  57                 	db	87
  2067  009AEB  56                 	db	86
  2068  009AEC  55                 	db	85
  2069  009AED  54                 	db	84
  2070  009AEE  53                 	db	83
  2071  009AEF  52                 	db	82
  2072  009AF0  51                 	db	81
  2073  009AF1  50                 	db	80
  2074  009AF2  4F                 	db	79
  2075  009AF3  4E                 	db	78
  2076  009AF4  4D                 	db	77
  2077  009AF5  4C                 	db	76
  2078  009AF6  4B                 	db	75
  2079  009AF7  4A                 	db	74
  2080  009AF8  49                 	db	73
  2081  009AF9  48                 	db	72
  2082  009AFA  47                 	db	71
  2083  009AFB  46                 	db	70
  2084  009AFC  45                 	db	69
  2085  009AFD  44                 	db	68
  2086  009AFE  43                 	db	67
  2087  009AFF  42                 	db	66
  2088  009B00  41                 	db	65
  2089  009B01  40                 	db	64
  2090  009B02  3F                 	db	63
  2091  009B03  FF                 	db	255
  2092  009B04  FE                 	db	254
  2093  009B05  FD                 	db	253
  2094  009B06  FC                 	db	252
  2095  009B07  FB                 	db	251
  2096  009B08  FA                 	db	250
  2097  009B09  F9                 	db	249
  2098  009B0A  F8                 	db	248
  2099  009B0B  F7                 	db	247
  2100  009B0C  F6                 	db	246
  2101  009B0D  F5                 	db	245
  2102  009B0E  F4                 	db	244
  2103  009B0F  F3                 	db	243
  2104  009B10  F2                 	db	242
  2105  009B11  F1                 	db	241
  2106  009B12  F0                 	db	240
  2107  009B13  EF                 	db	239
  2108  009B14  EE                 	db	238
  2109  009B15  ED                 	db	237
  2110  009B16  EC                 	db	236
  2111  009B17  EB                 	db	235
  2112  009B18  EA                 	db	234
  2113  009B19  E9                 	db	233
  2114  009B1A  E8                 	db	232
  2115  009B1B  E7                 	db	231
  2116  009B1C  E6                 	db	230
  2117  009B1D  E5                 	db	229
  2118  009B1E  E4                 	db	228
  2119  009B1F  E3                 	db	227
  2120  009B20  E2                 	db	226
  2121  009B21  E1                 	db	225
  2122  009B22  E0                 	db	224
  2123  009B23  DF                 	db	223
  2124  009B24  DE                 	db	222
  2125  009B25  DD                 	db	221
  2126  009B26  DC                 	db	220
  2127  009B27  DB                 	db	219
  2128  009B28  DA                 	db	218
  2129  009B29  D9                 	db	217
  2130  009B2A  D8                 	db	216
  2131  009B2B  D7                 	db	215
  2132  009B2C  D6                 	db	214
  2133  009B2D  D5                 	db	213
  2134  009B2E  D4                 	db	212
  2135  009B2F  D3                 	db	211
  2136  009B30  D2                 	db	210
  2137  009B31  D1                 	db	209
  2138  009B32  D0                 	db	208
  2139  009B33  CF                 	db	207
  2140  009B34  CE                 	db	206
  2141  009B35  CD                 	db	205
  2142  009B36  CC                 	db	204
  2143  009B37  CB                 	db	203
  2144  009B38  CA                 	db	202
  2145  009B39  C9                 	db	201
  2146  009B3A  C8                 	db	200
  2147  009B3B  C7                 	db	199
  2148  009B3C  C6                 	db	198
  2149  009B3D  C5                 	db	197
  2150  009B3E  C4                 	db	196
  2151  009B3F  C3                 	db	195
  2152  009B40  C2                 	db	194
  2153  009B41  C1                 	db	193
  2154  009B42  C0                 	db	192
  2155  009B43  BF                 	db	191
  2156  009B44  BE                 	db	190
  2157  009B45  BD                 	db	189
  2158  009B46  BC                 	db	188
  2159  009B47  BB                 	db	187
  2160  009B48  BA                 	db	186
  2161  009B49  B9                 	db	185
  2162  009B4A  B8                 	db	184
  2163  009B4B  B7                 	db	183
  2164  009B4C  B6                 	db	182
  2165  009B4D  B5                 	db	181
  2166  009B4E  B4                 	db	180
  2167  009B4F  B3                 	db	179
  2168  009B50  B2                 	db	178
  2169  009B51  B1                 	db	177
  2170  009B52  B0                 	db	176
  2171  009B53  AF                 	db	175
  2172  009B54  AE                 	db	174
  2173  009B55  AD                 	db	173
  2174  009B56  AC                 	db	172
  2175  009B57  AB                 	db	171
  2176  009B58  AA                 	db	170
  2177  009B59  A9                 	db	169
  2178  009B5A  A8                 	db	168
  2179  009B5B  A7                 	db	167
  2180  009B5C  A6                 	db	166
  2181  009B5D  A5                 	db	165
  2182  009B5E  A4                 	db	164
  2183  009B5F  A3                 	db	163
  2184  009B60  A2                 	db	162
  2185  009B61  A1                 	db	161
  2186  009B62  A0                 	db	160
  2187  009B63  9F                 	db	159
  2188  009B64  9E                 	db	158
  2189  009B65  9D                 	db	157
  2190  009B66  9C                 	db	156
  2191  009B67  9B                 	db	155
  2192  009B68  9A                 	db	154
  2193  009B69  99                 	db	153
  2194  009B6A  98                 	db	152
  2195  009B6B  97                 	db	151
  2196  009B6C  96                 	db	150
  2197  009B6D  95                 	db	149
  2198  009B6E  94                 	db	148
  2199  009B6F  93                 	db	147
  2200  009B70  92                 	db	146
  2201  009B71  91                 	db	145
  2202  009B72  90                 	db	144
  2203  009B73  8F                 	db	143
  2204  009B74  8E                 	db	142
  2205  009B75  8D                 	db	141
  2206  009B76  8C                 	db	140
  2207  009B77  8B                 	db	139
  2208  009B78  8A                 	db	138
  2209  009B79  89                 	db	137
  2210  009B7A  88                 	db	136
  2211  009B7B  87                 	db	135
  2212  009B7C  86                 	db	134
  2213  009B7D  85                 	db	133
  2214  009B7E  84                 	db	132
  2215  009B7F  83                 	db	131
  2216  009B80  82                 	db	130
  2217  009B81  81                 	db	129
  2218  009B82  80                 	db	128
  2219  009B83  7F                 	db	127
  2220  009B84  7E                 	db	126
  2221  009B85  7D                 	db	125
  2222  009B86  7C                 	db	124
  2223  009B87  7B                 	db	123
  2224  009B88  7A                 	db	122
  2225  009B89  79                 	db	121
  2226  009B8A  78                 	db	120
  2227  009B8B  77                 	db	119
  2228  009B8C  76                 	db	118
  2229  009B8D  75                 	db	117
  2230  009B8E  74                 	db	116
  2231  009B8F  73                 	db	115
  2232  009B90  72                 	db	114
  2233  009B91  71                 	db	113
  2234  009B92  70                 	db	112
  2235  009B93  6F                 	db	111
  2236  009B94  6E                 	db	110
  2237  009B95  6D                 	db	109
  2238  009B96  6C                 	db	108
  2239  009B97  6B                 	db	107
  2240  009B98  6A                 	db	106
  2241  009B99  69                 	db	105
  2242  009B9A  68                 	db	104
  2243  009B9B  67                 	db	103
  2244  009B9C  66                 	db	102
  2245  009B9D  65                 	db	101
  2246  009B9E  64                 	db	100
  2247  009B9F  63                 	db	99
  2248  009BA0  62                 	db	98
  2249  009BA1  61                 	db	97
  2250  009BA2  60                 	db	96
  2251  009BA3  5F                 	db	95
  2252  009BA4  5E                 	db	94
  2253  009BA5  5D                 	db	93
  2254  009BA6  5C                 	db	92
  2255  009BA7  5B                 	db	91
  2256  009BA8  5A                 	db	90
  2257  009BA9  59                 	db	89
  2258  009BAA  58                 	db	88
  2259  009BAB  57                 	db	87
  2260  009BAC  56                 	db	86
  2261  009BAD  55                 	db	85
  2262  009BAE  54                 	db	84
  2263  009BAF  53                 	db	83
  2264  009BB0  52                 	db	82
  2265  009BB1  51                 	db	81
  2266  009BB2  50                 	db	80
  2267  009BB3  4F                 	db	79
  2268  009BB4  4E                 	db	78
  2269  009BB5  4D                 	db	77
  2270  009BB6  4C                 	db	76
  2271  009BB7  4B                 	db	75
  2272  009BB8  4A                 	db	74
  2273  009BB9  49                 	db	73
  2274  009BBA  48                 	db	72
  2275  009BBB  47                 	db	71
  2276  009BBC  46                 	db	70
  2277  009BBD  45                 	db	69
  2278  009BBE  44                 	db	68
  2279  009BBF  43                 	db	67
  2280  009BC0  42                 	db	66
  2281  009BC1  41                 	db	65
  2282  009BC2  40                 	db	64
  2283  009BC3  3F                 	db	63
  2284  009BC4  FF                 	db	255
  2285  009BC5  FE                 	db	254
  2286  009BC6  FD                 	db	253
  2287  009BC7  FC                 	db	252
  2288  009BC8  FB                 	db	251
  2289  009BC9  FA                 	db	250
  2290  009BCA  F9                 	db	249
  2291  009BCB  F8                 	db	248
  2292  009BCC  F7                 	db	247
  2293  009BCD  F6                 	db	246
  2294  009BCE  F5                 	db	245
  2295  009BCF  F4                 	db	244
  2296  009BD0  F3                 	db	243
  2297  009BD1  F2                 	db	242
  2298  009BD2  F1                 	db	241
  2299  009BD3  F0                 	db	240
  2300  009BD4  EF                 	db	239
  2301  009BD5  EE                 	db	238
  2302  009BD6  ED                 	db	237
  2303  009BD7  EC                 	db	236
  2304  009BD8  EB                 	db	235
  2305  009BD9  EA                 	db	234
  2306  009BDA  E9                 	db	233
  2307  009BDB  E8                 	db	232
  2308  009BDC  E7                 	db	231
  2309  009BDD  E6                 	db	230
  2310  009BDE  E5                 	db	229
  2311  009BDF  E4                 	db	228
  2312  009BE0  E3                 	db	227
  2313  009BE1  E2                 	db	226
  2314  009BE2  E1                 	db	225
  2315  009BE3  E0                 	db	224
  2316  009BE4  DF                 	db	223
  2317  009BE5  DE                 	db	222
  2318  009BE6  DD                 	db	221
  2319  009BE7  DC                 	db	220
  2320  009BE8  DB                 	db	219
  2321  009BE9  DA                 	db	218
  2322  009BEA  D9                 	db	217
  2323  009BEB  D8                 	db	216
  2324  009BEC  D7                 	db	215
  2325  009BED  D6                 	db	214
  2326  009BEE  D5                 	db	213
  2327  009BEF  D4                 	db	212
  2328  009BF0  D3                 	db	211
  2329  009BF1  D2                 	db	210
  2330  009BF2  D1                 	db	209
  2331  009BF3  D0                 	db	208
  2332  009BF4  CF                 	db	207
  2333  009BF5  CE                 	db	206
  2334  009BF6  CD                 	db	205
  2335  009BF7  CC                 	db	204
  2336  009BF8  CB                 	db	203
  2337  009BF9  CA                 	db	202
  2338  009BFA  C9                 	db	201
  2339  009BFB  C8                 	db	200
  2340  009BFC  C7                 	db	199
  2341  009BFD                     __end_of_motor_period_lookup:
  2342                           	opt stack 0
  2343  009BFD                     _motor_prescaler_lookup:
  2344                           	opt stack 0
  2345  009BFD  02                 	db	2
  2346  009BFE  02                 	db	2
  2347  009BFF  02                 	db	2
  2348  009C00  02                 	db	2
  2349  009C01  02                 	db	2
  2350  009C02  02                 	db	2
  2351  009C03  02                 	db	2
  2352  009C04  02                 	db	2
  2353  009C05  02                 	db	2
  2354  009C06  02                 	db	2
  2355  009C07  02                 	db	2
  2356  009C08  02                 	db	2
  2357  009C09  02                 	db	2
  2358  009C0A  02                 	db	2
  2359  009C0B  02                 	db	2
  2360  009C0C  02                 	db	2
  2361  009C0D  02                 	db	2
  2362  009C0E  02                 	db	2
  2363  009C0F  02                 	db	2
  2364  009C10  02                 	db	2
  2365  009C11  02                 	db	2
  2366  009C12  02                 	db	2
  2367  009C13  02                 	db	2
  2368  009C14  02                 	db	2
  2369  009C15  02                 	db	2
  2370  009C16  02                 	db	2
  2371  009C17  02                 	db	2
  2372  009C18  02                 	db	2
  2373  009C19  02                 	db	2
  2374  009C1A  02                 	db	2
  2375  009C1B  02                 	db	2
  2376  009C1C  02                 	db	2
  2377  009C1D  02                 	db	2
  2378  009C1E  02                 	db	2
  2379  009C1F  02                 	db	2
  2380  009C20  02                 	db	2
  2381  009C21  02                 	db	2
  2382  009C22  02                 	db	2
  2383  009C23  02                 	db	2
  2384  009C24  02                 	db	2
  2385  009C25  02                 	db	2
  2386  009C26  02                 	db	2
  2387  009C27  02                 	db	2
  2388  009C28  02                 	db	2
  2389  009C29  02                 	db	2
  2390  009C2A  02                 	db	2
  2391  009C2B  02                 	db	2
  2392  009C2C  02                 	db	2
  2393  009C2D  02                 	db	2
  2394  009C2E  02                 	db	2
  2395  009C2F  02                 	db	2
  2396  009C30  02                 	db	2
  2397  009C31  02                 	db	2
  2398  009C32  02                 	db	2
  2399  009C33  02                 	db	2
  2400  009C34  02                 	db	2
  2401  009C35  02                 	db	2
  2402  009C36  02                 	db	2
  2403  009C37  02                 	db	2
  2404  009C38  02                 	db	2
  2405  009C39  02                 	db	2
  2406  009C3A  02                 	db	2
  2407  009C3B  02                 	db	2
  2408  009C3C  02                 	db	2
  2409  009C3D  02                 	db	2
  2410  009C3E  02                 	db	2
  2411  009C3F  02                 	db	2
  2412  009C40  02                 	db	2
  2413  009C41  02                 	db	2
  2414  009C42  02                 	db	2
  2415  009C43  02                 	db	2
  2416  009C44  02                 	db	2
  2417  009C45  02                 	db	2
  2418  009C46  02                 	db	2
  2419  009C47  02                 	db	2
  2420  009C48  02                 	db	2
  2421  009C49  02                 	db	2
  2422  009C4A  02                 	db	2
  2423  009C4B  02                 	db	2
  2424  009C4C  02                 	db	2
  2425  009C4D  02                 	db	2
  2426  009C4E  02                 	db	2
  2427  009C4F  02                 	db	2
  2428  009C50  02                 	db	2
  2429  009C51  02                 	db	2
  2430  009C52  02                 	db	2
  2431  009C53  02                 	db	2
  2432  009C54  02                 	db	2
  2433  009C55  02                 	db	2
  2434  009C56  02                 	db	2
  2435  009C57  02                 	db	2
  2436  009C58  02                 	db	2
  2437  009C59  02                 	db	2
  2438  009C5A  02                 	db	2
  2439  009C5B  02                 	db	2
  2440  009C5C  02                 	db	2
  2441  009C5D  02                 	db	2
  2442  009C5E  02                 	db	2
  2443  009C5F  02                 	db	2
  2444  009C60  02                 	db	2
  2445  009C61  02                 	db	2
  2446  009C62  02                 	db	2
  2447  009C63  02                 	db	2
  2448  009C64  02                 	db	2
  2449  009C65  02                 	db	2
  2450  009C66  02                 	db	2
  2451  009C67  02                 	db	2
  2452  009C68  02                 	db	2
  2453  009C69  02                 	db	2
  2454  009C6A  02                 	db	2
  2455  009C6B  02                 	db	2
  2456  009C6C  02                 	db	2
  2457  009C6D  02                 	db	2
  2458  009C6E  02                 	db	2
  2459  009C6F  02                 	db	2
  2460  009C70  02                 	db	2
  2461  009C71  02                 	db	2
  2462  009C72  02                 	db	2
  2463  009C73  02                 	db	2
  2464  009C74  02                 	db	2
  2465  009C75  02                 	db	2
  2466  009C76  02                 	db	2
  2467  009C77  02                 	db	2
  2468  009C78  02                 	db	2
  2469  009C79  02                 	db	2
  2470  009C7A  02                 	db	2
  2471  009C7B  02                 	db	2
  2472  009C7C  02                 	db	2
  2473  009C7D  02                 	db	2
  2474  009C7E  02                 	db	2
  2475  009C7F  02                 	db	2
  2476  009C80  02                 	db	2
  2477  009C81  02                 	db	2
  2478  009C82  02                 	db	2
  2479  009C83  02                 	db	2
  2480  009C84  02                 	db	2
  2481  009C85  02                 	db	2
  2482  009C86  02                 	db	2
  2483  009C87  02                 	db	2
  2484  009C88  02                 	db	2
  2485  009C89  02                 	db	2
  2486  009C8A  02                 	db	2
  2487  009C8B  02                 	db	2
  2488  009C8C  02                 	db	2
  2489  009C8D  02                 	db	2
  2490  009C8E  02                 	db	2
  2491  009C8F  02                 	db	2
  2492  009C90  02                 	db	2
  2493  009C91  02                 	db	2
  2494  009C92  02                 	db	2
  2495  009C93  02                 	db	2
  2496  009C94  02                 	db	2
  2497  009C95  02                 	db	2
  2498  009C96  02                 	db	2
  2499  009C97  02                 	db	2
  2500  009C98  02                 	db	2
  2501  009C99  02                 	db	2
  2502  009C9A  02                 	db	2
  2503  009C9B  02                 	db	2
  2504  009C9C  02                 	db	2
  2505  009C9D  02                 	db	2
  2506  009C9E  02                 	db	2
  2507  009C9F  02                 	db	2
  2508  009CA0  02                 	db	2
  2509  009CA1  02                 	db	2
  2510  009CA2  02                 	db	2
  2511  009CA3  02                 	db	2
  2512  009CA4  02                 	db	2
  2513  009CA5  02                 	db	2
  2514  009CA6  02                 	db	2
  2515  009CA7  02                 	db	2
  2516  009CA8  02                 	db	2
  2517  009CA9  02                 	db	2
  2518  009CAA  02                 	db	2
  2519  009CAB  02                 	db	2
  2520  009CAC  02                 	db	2
  2521  009CAD  02                 	db	2
  2522  009CAE  02                 	db	2
  2523  009CAF  02                 	db	2
  2524  009CB0  02                 	db	2
  2525  009CB1  02                 	db	2
  2526  009CB2  02                 	db	2
  2527  009CB3  02                 	db	2
  2528  009CB4  02                 	db	2
  2529  009CB5  02                 	db	2
  2530  009CB6  02                 	db	2
  2531  009CB7  02                 	db	2
  2532  009CB8  02                 	db	2
  2533  009CB9  02                 	db	2
  2534  009CBA  02                 	db	2
  2535  009CBB  02                 	db	2
  2536  009CBC  02                 	db	2
  2537  009CBD  02                 	db	2
  2538  009CBE  02                 	db	2
  2539  009CBF  02                 	db	2
  2540  009CC0  02                 	db	2
  2541  009CC1  02                 	db	2
  2542  009CC2  02                 	db	2
  2543  009CC3  02                 	db	2
  2544  009CC4  02                 	db	2
  2545  009CC5  02                 	db	2
  2546  009CC6  02                 	db	2
  2547  009CC7  02                 	db	2
  2548  009CC8  02                 	db	2
  2549  009CC9  02                 	db	2
  2550  009CCA  02                 	db	2
  2551  009CCB  02                 	db	2
  2552  009CCC  02                 	db	2
  2553  009CCD  02                 	db	2
  2554  009CCE  02                 	db	2
  2555  009CCF  02                 	db	2
  2556  009CD0  02                 	db	2
  2557  009CD1  02                 	db	2
  2558  009CD2  02                 	db	2
  2559  009CD3  02                 	db	2
  2560  009CD4  02                 	db	2
  2561  009CD5  02                 	db	2
  2562  009CD6  02                 	db	2
  2563  009CD7  02                 	db	2
  2564  009CD8  02                 	db	2
  2565  009CD9  02                 	db	2
  2566  009CDA  02                 	db	2
  2567  009CDB  02                 	db	2
  2568  009CDC  02                 	db	2
  2569  009CDD  02                 	db	2
  2570  009CDE  02                 	db	2
  2571  009CDF  02                 	db	2
  2572  009CE0  02                 	db	2
  2573  009CE1  02                 	db	2
  2574  009CE2  02                 	db	2
  2575  009CE3  02                 	db	2
  2576  009CE4  02                 	db	2
  2577  009CE5  02                 	db	2
  2578  009CE6  02                 	db	2
  2579  009CE7  02                 	db	2
  2580  009CE8  02                 	db	2
  2581  009CE9  02                 	db	2
  2582  009CEA  01                 	db	1
  2583  009CEB  01                 	db	1
  2584  009CEC  01                 	db	1
  2585  009CED  01                 	db	1
  2586  009CEE  01                 	db	1
  2587  009CEF  01                 	db	1
  2588  009CF0  01                 	db	1
  2589  009CF1  01                 	db	1
  2590  009CF2  01                 	db	1
  2591  009CF3  01                 	db	1
  2592  009CF4  01                 	db	1
  2593  009CF5  01                 	db	1
  2594  009CF6  01                 	db	1
  2595  009CF7  01                 	db	1
  2596  009CF8  01                 	db	1
  2597  009CF9  01                 	db	1
  2598  009CFA  01                 	db	1
  2599  009CFB  01                 	db	1
  2600  009CFC  01                 	db	1
  2601  009CFD  01                 	db	1
  2602  009CFE  01                 	db	1
  2603  009CFF  01                 	db	1
  2604  009D00  01                 	db	1
  2605  009D01  01                 	db	1
  2606  009D02  01                 	db	1
  2607  009D03  01                 	db	1
  2608  009D04  01                 	db	1
  2609  009D05  01                 	db	1
  2610  009D06  01                 	db	1
  2611  009D07  01                 	db	1
  2612  009D08  01                 	db	1
  2613  009D09  01                 	db	1
  2614  009D0A  01                 	db	1
  2615  009D0B  01                 	db	1
  2616  009D0C  01                 	db	1
  2617  009D0D  01                 	db	1
  2618  009D0E  01                 	db	1
  2619  009D0F  01                 	db	1
  2620  009D10  01                 	db	1
  2621  009D11  01                 	db	1
  2622  009D12  01                 	db	1
  2623  009D13  01                 	db	1
  2624  009D14  01                 	db	1
  2625  009D15  01                 	db	1
  2626  009D16  01                 	db	1
  2627  009D17  01                 	db	1
  2628  009D18  01                 	db	1
  2629  009D19  01                 	db	1
  2630  009D1A  01                 	db	1
  2631  009D1B  01                 	db	1
  2632  009D1C  01                 	db	1
  2633  009D1D  01                 	db	1
  2634  009D1E  01                 	db	1
  2635  009D1F  01                 	db	1
  2636  009D20  01                 	db	1
  2637  009D21  01                 	db	1
  2638  009D22  01                 	db	1
  2639  009D23  01                 	db	1
  2640  009D24  01                 	db	1
  2641  009D25  01                 	db	1
  2642  009D26  01                 	db	1
  2643  009D27  01                 	db	1
  2644  009D28  01                 	db	1
  2645  009D29  01                 	db	1
  2646  009D2A  01                 	db	1
  2647  009D2B  01                 	db	1
  2648  009D2C  01                 	db	1
  2649  009D2D  01                 	db	1
  2650  009D2E  01                 	db	1
  2651  009D2F  01                 	db	1
  2652  009D30  01                 	db	1
  2653  009D31  01                 	db	1
  2654  009D32  01                 	db	1
  2655  009D33  01                 	db	1
  2656  009D34  01                 	db	1
  2657  009D35  01                 	db	1
  2658  009D36  01                 	db	1
  2659  009D37  01                 	db	1
  2660  009D38  01                 	db	1
  2661  009D39  01                 	db	1
  2662  009D3A  01                 	db	1
  2663  009D3B  01                 	db	1
  2664  009D3C  01                 	db	1
  2665  009D3D  01                 	db	1
  2666  009D3E  01                 	db	1
  2667  009D3F  01                 	db	1
  2668  009D40  01                 	db	1
  2669  009D41  01                 	db	1
  2670  009D42  01                 	db	1
  2671  009D43  01                 	db	1
  2672  009D44  01                 	db	1
  2673  009D45  01                 	db	1
  2674  009D46  01                 	db	1
  2675  009D47  01                 	db	1
  2676  009D48  01                 	db	1
  2677  009D49  01                 	db	1
  2678  009D4A  01                 	db	1
  2679  009D4B  01                 	db	1
  2680  009D4C  01                 	db	1
  2681  009D4D  01                 	db	1
  2682  009D4E  01                 	db	1
  2683  009D4F  01                 	db	1
  2684  009D50  01                 	db	1
  2685  009D51  01                 	db	1
  2686  009D52  01                 	db	1
  2687  009D53  01                 	db	1
  2688  009D54  01                 	db	1
  2689  009D55  01                 	db	1
  2690  009D56  01                 	db	1
  2691  009D57  01                 	db	1
  2692  009D58  01                 	db	1
  2693  009D59  01                 	db	1
  2694  009D5A  01                 	db	1
  2695  009D5B  01                 	db	1
  2696  009D5C  01                 	db	1
  2697  009D5D  01                 	db	1
  2698  009D5E  01                 	db	1
  2699  009D5F  01                 	db	1
  2700  009D60  01                 	db	1
  2701  009D61  01                 	db	1
  2702  009D62  01                 	db	1
  2703  009D63  01                 	db	1
  2704  009D64  01                 	db	1
  2705  009D65  01                 	db	1
  2706  009D66  01                 	db	1
  2707  009D67  01                 	db	1
  2708  009D68  01                 	db	1
  2709  009D69  01                 	db	1
  2710  009D6A  01                 	db	1
  2711  009D6B  01                 	db	1
  2712  009D6C  01                 	db	1
  2713  009D6D  01                 	db	1
  2714  009D6E  01                 	db	1
  2715  009D6F  01                 	db	1
  2716  009D70  01                 	db	1
  2717  009D71  01                 	db	1
  2718  009D72  01                 	db	1
  2719  009D73  01                 	db	1
  2720  009D74  01                 	db	1
  2721  009D75  01                 	db	1
  2722  009D76  01                 	db	1
  2723  009D77  01                 	db	1
  2724  009D78  01                 	db	1
  2725  009D79  01                 	db	1
  2726  009D7A  01                 	db	1
  2727  009D7B  01                 	db	1
  2728  009D7C  01                 	db	1
  2729  009D7D  01                 	db	1
  2730  009D7E  01                 	db	1
  2731  009D7F  01                 	db	1
  2732  009D80  01                 	db	1
  2733  009D81  01                 	db	1
  2734  009D82  01                 	db	1
  2735  009D83  01                 	db	1
  2736  009D84  01                 	db	1
  2737  009D85  01                 	db	1
  2738  009D86  01                 	db	1
  2739  009D87  01                 	db	1
  2740  009D88  01                 	db	1
  2741  009D89  01                 	db	1
  2742  009D8A  01                 	db	1
  2743  009D8B  01                 	db	1
  2744  009D8C  01                 	db	1
  2745  009D8D  01                 	db	1
  2746  009D8E  01                 	db	1
  2747  009D8F  01                 	db	1
  2748  009D90  01                 	db	1
  2749  009D91  01                 	db	1
  2750  009D92  01                 	db	1
  2751  009D93  01                 	db	1
  2752  009D94  01                 	db	1
  2753  009D95  01                 	db	1
  2754  009D96  01                 	db	1
  2755  009D97  01                 	db	1
  2756  009D98  01                 	db	1
  2757  009D99  01                 	db	1
  2758  009D9A  01                 	db	1
  2759  009D9B  01                 	db	1
  2760  009D9C  01                 	db	1
  2761  009D9D  01                 	db	1
  2762  009D9E  01                 	db	1
  2763  009D9F  01                 	db	1
  2764  009DA0  01                 	db	1
  2765  009DA1  01                 	db	1
  2766  009DA2  01                 	db	1
  2767  009DA3  01                 	db	1
  2768  009DA4  01                 	db	1
  2769  009DA5  01                 	db	1
  2770  009DA6  01                 	db	1
  2771  009DA7  01                 	db	1
  2772  009DA8  01                 	db	1
  2773  009DA9  01                 	db	1
  2774  009DAA  01                 	db	1
  2775  009DAB  00                 	db	0
  2776  009DAC  00                 	db	0
  2777  009DAD  00                 	db	0
  2778  009DAE  00                 	db	0
  2779  009DAF  00                 	db	0
  2780  009DB0  00                 	db	0
  2781  009DB1  00                 	db	0
  2782  009DB2  00                 	db	0
  2783  009DB3  00                 	db	0
  2784  009DB4  00                 	db	0
  2785  009DB5  00                 	db	0
  2786  009DB6  00                 	db	0
  2787  009DB7  00                 	db	0
  2788  009DB8  00                 	db	0
  2789  009DB9  00                 	db	0
  2790  009DBA  00                 	db	0
  2791  009DBB  00                 	db	0
  2792  009DBC  00                 	db	0
  2793  009DBD  00                 	db	0
  2794  009DBE  00                 	db	0
  2795  009DBF  00                 	db	0
  2796  009DC0  00                 	db	0
  2797  009DC1  00                 	db	0
  2798  009DC2  00                 	db	0
  2799  009DC3  00                 	db	0
  2800  009DC4  00                 	db	0
  2801  009DC5  00                 	db	0
  2802  009DC6  00                 	db	0
  2803  009DC7  00                 	db	0
  2804  009DC8  00                 	db	0
  2805  009DC9  00                 	db	0
  2806  009DCA  00                 	db	0
  2807  009DCB  00                 	db	0
  2808  009DCC  00                 	db	0
  2809  009DCD  00                 	db	0
  2810  009DCE  00                 	db	0
  2811  009DCF  00                 	db	0
  2812  009DD0  00                 	db	0
  2813  009DD1  00                 	db	0
  2814  009DD2  00                 	db	0
  2815  009DD3  00                 	db	0
  2816  009DD4  00                 	db	0
  2817  009DD5  00                 	db	0
  2818  009DD6  00                 	db	0
  2819  009DD7  00                 	db	0
  2820  009DD8  00                 	db	0
  2821  009DD9  00                 	db	0
  2822  009DDA  00                 	db	0
  2823  009DDB  00                 	db	0
  2824  009DDC  00                 	db	0
  2825  009DDD  00                 	db	0
  2826  009DDE  00                 	db	0
  2827  009DDF  00                 	db	0
  2828  009DE0  00                 	db	0
  2829  009DE1  00                 	db	0
  2830  009DE2  00                 	db	0
  2831  009DE3  00                 	db	0
  2832  009DE4                     __end_of_motor_prescaler_lookup:
  2833                           	opt stack 0
  2834  009DE4                     _USB_SD_Ptr:
  2835                           	opt stack 0
  2836  009DE4  ED                 	db	low _sd000
  2837  009DE5  A1                 	db	high _sd000
  2838  009DE6  FE                 	db	low _sd001
  2839  009DE7  A0                 	db	high _sd001
  2840  009DE8  32                 	db	low _sd002
  2841  009DE9  A1                 	db	high _sd002
  2842  009DEA  A1                 	db	low _sd003
  2843  009DEB  A1                 	db	high _sd003
  2844  009DEC                     __end_of_USB_SD_Ptr:
  2845                           	opt stack 0
  2846  009DEC                     _USB_CD_Ptr:
  2847                           	opt stack 0
  2848  009DEC  BE                 	db	low _configDescriptor1
  2849  009DED  A0                 	db	high _configDescriptor1
  2850  009DEE                     __end_of_USB_CD_Ptr:
  2851                           	opt stack 0
  2852  009DEE                     _dc_manual:
  2853                           	opt stack 0
  2854  009DEE  4D                 	db	77
  2855  009DEF  61                 	db	97
  2856  009DF0  6E                 	db	110
  2857  009DF1  75                 	db	117
  2858  009DF2  61                 	db	97
  2859  009DF3  6C                 	db	108
  2860  009DF4  20                 	db	32
  2861  009DF5  4D                 	db	77
  2862  009DF6  6F                 	db	111
  2863  009DF7  64                 	db	100
  2864  009DF8  65                 	db	101
  2865  009DF9  20                 	db	32
  2866  009DFA  20                 	db	32
  2867  009DFB  20                 	db	32
  2868  009DFC  20                 	db	32
  2869  009DFD  20                 	db	32
  2870  009DFE  20                 	db	32
  2871  009DFF  20                 	db	32
  2872  009E00  20                 	db	32
  2873  009E01  20                 	db	32
  2874  009E02  43                 	db	67
  2875  009E03  75                 	db	117
  2876  009E04  72                 	db	114
  2877  009E05  72                 	db	114
  2878  009E06  65                 	db	101
  2879  009E07  6E                 	db	110
  2880  009E08  74                 	db	116
  2881  009E09  20                 	db	32
  2882  009E0A  70                 	db	112
  2883  009E0B  6F                 	db	111
  2884  009E0C  73                 	db	115
  2885  009E0D  3A                 	db	58
  2886  009E0E  20                 	db	32
  2887  009E0F  20                 	db	32
  2888  009E10  20                 	db	32
  2889  009E11  20                 	db	32
  2890  009E12  20                 	db	32
  2891  009E13  20                 	db	32
  2892  009E14  20                 	db	32
  2893  009E15  01                 	db	1
  2894  009E16  54                 	db	84
  2895  009E17  75                 	db	117
  2896  009E18  72                 	db	114
  2897  009E19  6E                 	db	110
  2898  009E1A  20                 	db	32
  2899  009E1B  43                 	db	67
  2900  009E1C  43                 	db	67
  2901  009E1D  57                 	db	87
  2902  009E1E  20                 	db	32
  2903  009E1F  00                 	db	0
  2904  009E20  20                 	db	32
  2905  009E21  53                 	db	83
  2906  009E22  70                 	db	112
  2907  009E23  65                 	db	101
  2908  009E24  65                 	db	101
  2909  009E25  64                 	db	100
  2910  009E26  20                 	db	32
  2911  009E27  20                 	db	32
  2912  009E28  20                 	db	32
  2913  009E29  20                 	db	32
  2914  009E2A  53                 	db	83
  2915  009E2B  74                 	db	116
  2916  009E2C  61                 	db	97
  2917  009E2D  72                 	db	114
  2918  009E2E  74                 	db	116
  2919  009E2F  20                 	db	32
  2920  009E30  20                 	db	32
  2921  009E31  20                 	db	32
  2922  009E32  20                 	db	32
  2923  009E33  00                 	db	0
  2924  009E34  20                 	db	32
  2925  009E35  20                 	db	32
  2926  009E36  20                 	db	32
  2927  009E37  20                 	db	32
  2928  009E38  20                 	db	32
  2929  009E39  20                 	db	32
  2930  009E3A  20                 	db	32
  2931  009E3B  20                 	db	32
  2932  009E3C  20                 	db	32
  2933  009E3D  20                 	db	32
  2934  009E3E                     __end_of_dc_manual:
  2935                           	opt stack 0
  2936  009E3E                     _dc_zero:
  2937                           	opt stack 0
  2938  009E3E  52                 	db	82
  2939  009E3F  65                 	db	101
  2940  009E40  74                 	db	116
  2941  009E41  75                 	db	117
  2942  009E42  72                 	db	114
  2943  009E43  6E                 	db	110
  2944  009E44  20                 	db	32
  2945  009E45  74                 	db	116
  2946  009E46  6F                 	db	111
  2947  009E47  20                 	db	32
  2948  009E48  5A                 	db	90
  2949  009E49  65                 	db	101
  2950  009E4A  72                 	db	114
  2951  009E4B  6F                 	db	111
  2952  009E4C  3F                 	db	63
  2953  009E4D  20                 	db	32
  2954  009E4E  20                 	db	32
  2955  009E4F  20                 	db	32
  2956  009E50  20                 	db	32
  2957  009E51  20                 	db	32
  2958  009E52  43                 	db	67
  2959  009E53  75                 	db	117
  2960  009E54  72                 	db	114
  2961  009E55  72                 	db	114
  2962  009E56  65                 	db	101
  2963  009E57  6E                 	db	110
  2964  009E58  74                 	db	116
  2965  009E59  20                 	db	32
  2966  009E5A  70                 	db	112
  2967  009E5B  6F                 	db	111
  2968  009E5C  73                 	db	115
  2969  009E5D  3A                 	db	58
  2970  009E5E  20                 	db	32
  2971  009E5F  20                 	db	32
  2972  009E60  20                 	db	32
  2973  009E61  20                 	db	32
  2974  009E62  20                 	db	32
  2975  009E63  20                 	db	32
  2976  009E64  20                 	db	32
  2977  009E65  20                 	db	32
  2978  009E66  20                 	db	32
  2979  009E67  20                 	db	32
  2980  009E68  20                 	db	32
  2981  009E69  20                 	db	32
  2982  009E6A  20                 	db	32
  2983  009E6B  20                 	db	32
  2984  009E6C  20                 	db	32
  2985  009E6D  20                 	db	32
  2986  009E6E  20                 	db	32
  2987  009E6F  20                 	db	32
  2988  009E70  20                 	db	32
  2989  009E71  20                 	db	32
  2990  009E72  20                 	db	32
  2991  009E73  20                 	db	32
  2992  009E74  20                 	db	32
  2993  009E75  20                 	db	32
  2994  009E76  20                 	db	32
  2995  009E77  20                 	db	32
  2996  009E78  20                 	db	32
  2997  009E79  20                 	db	32
  2998  009E7A  20                 	db	32
  2999  009E7B  59                 	db	89
  3000  009E7C  65                 	db	101
  3001  009E7D  73                 	db	115
  3002  009E7E  20                 	db	32
  3003  009E7F  20                 	db	32
  3004  009E80  20                 	db	32
  3005  009E81  20                 	db	32
  3006  009E82  20                 	db	32
  3007  009E83  20                 	db	32
  3008  009E84  20                 	db	32
  3009  009E85  20                 	db	32
  3010  009E86  20                 	db	32
  3011  009E87  20                 	db	32
  3012  009E88  20                 	db	32
  3013  009E89  20                 	db	32
  3014  009E8A  4E                 	db	78
  3015  009E8B  6F                 	db	111
  3016  009E8C  20                 	db	32
  3017  009E8D  20                 	db	32
  3018  009E8E                     __end_of_dc_zero:
  3019                           	opt stack 0
  3020  009E8E                     _dc_arc2:
  3021                           	opt stack 0
  3022  009E8E  41                 	db	65
  3023  009E8F  72                 	db	114
  3024  009E90  63                 	db	99
  3025  009E91  3A                 	db	58
  3026  009E92  20                 	db	32
  3027  009E93  53                 	db	83
  3028  009E94  69                 	db	105
  3029  009E95  7A                 	db	122
  3030  009E96  65                 	db	101
  3031  009E97  3D                 	db	61
  3032  009E98  20                 	db	32
  3033  009E99  20                 	db	32
  3034  009E9A  20                 	db	32
  3035  009E9B  20                 	db	32
  3036  009E9C  20                 	db	32
  3037  009E9D  20                 	db	32
  3038  009E9E  20                 	db	32
  3039  009E9F  20                 	db	32
  3040  009EA0  20                 	db	32
  3041  009EA1  20                 	db	32
  3042  009EA2  43                 	db	67
  3043  009EA3  75                 	db	117
  3044  009EA4  72                 	db	114
  3045  009EA5  72                 	db	114
  3046  009EA6  65                 	db	101
  3047  009EA7  6E                 	db	110
  3048  009EA8  74                 	db	116
  3049  009EA9  20                 	db	32
  3050  009EAA  70                 	db	112
  3051  009EAB  6F                 	db	111
  3052  009EAC  73                 	db	115
  3053  009EAD  3A                 	db	58
  3054  009EAE  20                 	db	32
  3055  009EAF  20                 	db	32
  3056  009EB0  20                 	db	32
  3057  009EB1  20                 	db	32
  3058  009EB2  20                 	db	32
  3059  009EB3  20                 	db	32
  3060  009EB4  20                 	db	32
  3061  009EB5  01                 	db	1
  3062  009EB6  54                 	db	84
  3063  009EB7  75                 	db	117
  3064  009EB8  72                 	db	114
  3065  009EB9  6E                 	db	110
  3066  009EBA  20                 	db	32
  3067  009EBB  43                 	db	67
  3068  009EBC  43                 	db	67
  3069  009EBD  57                 	db	87
  3070  009EBE  20                 	db	32
  3071  009EBF  00                 	db	0
  3072  009EC0  20                 	db	32
  3073  009EC1  53                 	db	83
  3074  009EC2  70                 	db	112
  3075  009EC3  65                 	db	101
  3076  009EC4  65                 	db	101
  3077  009EC5  64                 	db	100
  3078  009EC6  20                 	db	32
  3079  009EC7  20                 	db	32
  3080  009EC8  20                 	db	32
  3081  009EC9  20                 	db	32
  3082  009ECA  53                 	db	83
  3083  009ECB  74                 	db	116
  3084  009ECC  61                 	db	97
  3085  009ECD  72                 	db	114
  3086  009ECE  74                 	db	116
  3087  009ECF  20                 	db	32
  3088  009ED0  20                 	db	32
  3089  009ED1  20                 	db	32
  3090  009ED2  20                 	db	32
  3091  009ED3  00                 	db	0
  3092  009ED4  20                 	db	32
  3093  009ED5  20                 	db	32
  3094  009ED6  20                 	db	32
  3095  009ED7  20                 	db	32
  3096  009ED8  20                 	db	32
  3097  009ED9  20                 	db	32
  3098  009EDA  20                 	db	32
  3099  009EDB  20                 	db	32
  3100  009EDC  20                 	db	32
  3101  009EDD  20                 	db	32
  3102  009EDE                     __end_of_dc_arc2:
  3103                           	opt stack 0
  3104  009EDE                     _dc_arc1:
  3105                           	opt stack 0
  3106  009EDE  41                 	db	65
  3107  009EDF  72                 	db	114
  3108  009EE0  63                 	db	99
  3109  009EE1  3A                 	db	58
  3110  009EE2  20                 	db	32
  3111  009EE3  53                 	db	83
  3112  009EE4  65                 	db	101
  3113  009EE5  74                 	db	116
  3114  009EE6  20                 	db	32
  3115  009EE7  61                 	db	97
  3116  009EE8  72                 	db	114
  3117  009EE9  63                 	db	99
  3118  009EEA  20                 	db	32
  3119  009EEB  73                 	db	115
  3120  009EEC  69                 	db	105
  3121  009EED  7A                 	db	122
  3122  009EEE  65                 	db	101
  3123  009EEF  20                 	db	32
  3124  009EF0  20                 	db	32
  3125  009EF1  20                 	db	32
  3126  009EF2  41                 	db	65
  3127  009EF3  72                 	db	114
  3128  009EF4  63                 	db	99
  3129  009EF5  20                 	db	32
  3130  009EF6  73                 	db	115
  3131  009EF7  69                 	db	105
  3132  009EF8  7A                 	db	122
  3133  009EF9  65                 	db	101
  3134  009EFA  3A                 	db	58
  3135  009EFB  20                 	db	32
  3136  009EFC  20                 	db	32
  3137  009EFD  20                 	db	32
  3138  009EFE  20                 	db	32
  3139  009EFF  20                 	db	32
  3140  009F00  20                 	db	32
  3141  009F01  20                 	db	32
  3142  009F02  20                 	db	32
  3143  009F03  20                 	db	32
  3144  009F04  20                 	db	32
  3145  009F05  20                 	db	32
  3146  009F06  53                 	db	83
  3147  009F07  74                 	db	116
  3148  009F08  65                 	db	101
  3149  009F09  70                 	db	112
  3150  009F0A  20                 	db	32
  3151  009F0B  73                 	db	115
  3152  009F0C  69                 	db	105
  3153  009F0D  7A                 	db	122
  3154  009F0E  65                 	db	101
  3155  009F0F  20                 	db	32
  3156  009F10  00                 	db	0
  3157  009F11  20                 	db	32
  3158  009F12  20                 	db	32
  3159  009F13  43                 	db	67
  3160  009F14  6F                 	db	111
  3161  009F15  6E                 	db	110
  3162  009F16  66                 	db	102
  3163  009F17  69                 	db	105
  3164  009F18  72                 	db	114
  3165  009F19  6D                 	db	109
  3166  009F1A  20                 	db	32
  3167  009F1B  20                 	db	32
  3168  009F1C  20                 	db	32
  3169  009F1D  20                 	db	32
  3170  009F1E  20                 	db	32
  3171  009F1F  20                 	db	32
  3172  009F20  20                 	db	32
  3173  009F21  20                 	db	32
  3174  009F22  20                 	db	32
  3175  009F23  20                 	db	32
  3176  009F24  00                 	db	0
  3177  009F25  20                 	db	32
  3178  009F26  20                 	db	32
  3179  009F27  43                 	db	67
  3180  009F28  61                 	db	97
  3181  009F29  6E                 	db	110
  3182  009F2A  63                 	db	99
  3183  009F2B  65                 	db	101
  3184  009F2C  6C                 	db	108
  3185  009F2D  20                 	db	32
  3186  009F2E                     __end_of_dc_arc1:
  3187                           	opt stack 0
  3188  009F2E                     _dc_divide2:
  3189                           	opt stack 0
  3190  009F2E  44                 	db	68
  3191  009F2F  69                 	db	105
  3192  009F30  76                 	db	118
  3193  009F31  69                 	db	105
  3194  009F32  64                 	db	100
  3195  009F33  65                 	db	101
  3196  009F34  3A                 	db	58
  3197  009F35  20                 	db	32
  3198  009F36  20                 	db	32
  3199  009F37  20                 	db	32
  3200  009F38  20                 	db	32
  3201  009F39  20                 	db	32
  3202  009F3A  20                 	db	32
  3203  009F3B  20                 	db	32
  3204  009F3C  20                 	db	32
  3205  009F3D  20                 	db	32
  3206  009F3E  20                 	db	32
  3207  009F3F  20                 	db	32
  3208  009F40  20                 	db	32
  3209  009F41  20                 	db	32
  3210  009F42  50                 	db	80
  3211  009F43  6F                 	db	111
  3212  009F44  73                 	db	115
  3213  009F45  3A                 	db	58
  3214  009F46  20                 	db	32
  3215  009F47  20                 	db	32
  3216  009F48  20                 	db	32
  3217  009F49  20                 	db	32
  3218  009F4A  20                 	db	32
  3219  009F4B  20                 	db	32
  3220  009F4C  20                 	db	32
  3221  009F4D  20                 	db	32
  3222  009F4E  20                 	db	32
  3223  009F4F  20                 	db	32
  3224  009F50  20                 	db	32
  3225  009F51  20                 	db	32
  3226  009F52  20                 	db	32
  3227  009F53  20                 	db	32
  3228  009F54  20                 	db	32
  3229  009F55  20                 	db	32
  3230  009F56  4A                 	db	74
  3231  009F57  75                 	db	117
  3232  009F58  6D                 	db	109
  3233  009F59  70                 	db	112
  3234  009F5A  20                 	db	32
  3235  009F5B  73                 	db	115
  3236  009F5C  69                 	db	105
  3237  009F5D  7A                 	db	122
  3238  009F5E  65                 	db	101
  3239  009F5F  3A                 	db	58
  3240  009F60  20                 	db	32
  3241  009F61  20                 	db	32
  3242  009F62  20                 	db	32
  3243  009F63  20                 	db	32
  3244  009F64  20                 	db	32
  3245  009F65  20                 	db	32
  3246  009F66  20                 	db	32
  3247  009F67  20                 	db	32
  3248  009F68  20                 	db	32
  3249  009F69  20                 	db	32
  3250  009F6A  50                 	db	80
  3251  009F6B  72                 	db	114
  3252  009F6C  65                 	db	101
  3253  009F6D  73                 	db	115
  3254  009F6E  73                 	db	115
  3255  009F6F  54                 	db	84
  3256  009F70  6F                 	db	111
  3257  009F71  4A                 	db	74
  3258  009F72  75                 	db	117
  3259  009F73  6D                 	db	109
  3260  009F74  70                 	db	112
  3261  009F75  20                 	db	32
  3262  009F76  00                 	db	0
  3263  009F77  20                 	db	32
  3264  009F78  43                 	db	67
  3265  009F79  61                 	db	97
  3266  009F7A  6E                 	db	110
  3267  009F7B  63                 	db	99
  3268  009F7C  65                 	db	101
  3269  009F7D  6C                 	db	108
  3270  009F7E                     __end_of_dc_divide2:
  3271                           	opt stack 0
  3272  009F7E                     _dc_divide1:
  3273                           	opt stack 0
  3274  009F7E  44                 	db	68
  3275  009F7F  69                 	db	105
  3276  009F80  76                 	db	118
  3277  009F81  69                 	db	105
  3278  009F82  64                 	db	100
  3279  009F83  65                 	db	101
  3280  009F84  3A                 	db	58
  3281  009F85  20                 	db	32
  3282  009F86  53                 	db	83
  3283  009F87  65                 	db	101
  3284  009F88  74                 	db	116
  3285  009F89  20                 	db	32
  3286  009F8A  64                 	db	100
  3287  009F8B  69                 	db	105
  3288  009F8C  76                 	db	118
  3289  009F8D  69                 	db	105
  3290  009F8E  73                 	db	115
  3291  009F8F  69                 	db	105
  3292  009F90  6F                 	db	111
  3293  009F91  6E                 	db	110
  3294  009F92  20                 	db	32
  3295  009F93  20                 	db	32
  3296  009F94  20                 	db	32
  3297  009F95  20                 	db	32
  3298  009F96  20                 	db	32
  3299  009F97  20                 	db	32
  3300  009F98  20                 	db	32
  3301  009F99  20                 	db	32
  3302  009F9A  20                 	db	32
  3303  009F9B  20                 	db	32
  3304  009F9C  20                 	db	32
  3305  009F9D  20                 	db	32
  3306  009F9E  20                 	db	32
  3307  009F9F  20                 	db	32
  3308  009FA0  20                 	db	32
  3309  009FA1  20                 	db	32
  3310  009FA2  20                 	db	32
  3311  009FA3  20                 	db	32
  3312  009FA4  20                 	db	32
  3313  009FA5  20                 	db	32
  3314  009FA6  20                 	db	32
  3315  009FA7  20                 	db	32
  3316  009FA8  20                 	db	32
  3317  009FA9  2F                 	db	47
  3318  009FAA  73                 	db	115
  3319  009FAB  74                 	db	116
  3320  009FAC  65                 	db	101
  3321  009FAD  70                 	db	112
  3322  009FAE  20                 	db	32
  3323  009FAF  20                 	db	32
  3324  009FB0  00                 	db	0
  3325  009FB1  20                 	db	32
  3326  009FB2  20                 	db	32
  3327  009FB3  43                 	db	67
  3328  009FB4  6F                 	db	111
  3329  009FB5  6E                 	db	110
  3330  009FB6  66                 	db	102
  3331  009FB7  69                 	db	105
  3332  009FB8  72                 	db	114
  3333  009FB9  6D                 	db	109
  3334  009FBA  31                 	db	49
  3335  009FBB  32                 	db	50
  3336  009FBC  33                 	db	51
  3337  009FBD  34                 	db	52
  3338  009FBE  20                 	db	32
  3339  009FBF  20                 	db	32
  3340  009FC0  20                 	db	32
  3341  009FC1  20                 	db	32
  3342  009FC2  20                 	db	32
  3343  009FC3  20                 	db	32
  3344  009FC4  00                 	db	0
  3345  009FC5  20                 	db	32
  3346  009FC6  20                 	db	32
  3347  009FC7  43                 	db	67
  3348  009FC8  61                 	db	97
  3349  009FC9  6E                 	db	110
  3350  009FCA  63                 	db	99
  3351  009FCB  65                 	db	101
  3352  009FCC  6C                 	db	108
  3353  009FCD  20                 	db	32
  3354  009FCE                     __end_of_dc_divide1:
  3355                           	opt stack 0
  3356  009FCE                     _dc_setup2:
  3357                           	opt stack 0
  3358  009FCE  53                 	db	83
  3359  009FCF  65                 	db	101
  3360  009FD0  74                 	db	116
  3361  009FD1  75                 	db	117
  3362  009FD2  70                 	db	112
  3363  009FD3  3A                 	db	58
  3364  009FD4  20                 	db	32
  3365  009FD5  53                 	db	83
  3366  009FD6  65                 	db	101
  3367  009FD7  74                 	db	116
  3368  009FD8  20                 	db	32
  3369  009FD9  64                 	db	100
  3370  009FDA  69                 	db	105
  3371  009FDB  72                 	db	114
  3372  009FDC  65                 	db	101
  3373  009FDD  63                 	db	99
  3374  009FDE  74                 	db	116
  3375  009FDF  69                 	db	105
  3376  009FE0  6F                 	db	111
  3377  009FE1  6E                 	db	110
  3378  009FE2  20                 	db	32
  3379  009FE3  20                 	db	32
  3380  009FE4  20                 	db	32
  3381  009FE5  20                 	db	32
  3382  009FE6  20                 	db	32
  3383  009FE7  20                 	db	32
  3384  009FE8  20                 	db	32
  3385  009FE9  20                 	db	32
  3386  009FEA  20                 	db	32
  3387  009FEB  20                 	db	32
  3388  009FEC  20                 	db	32
  3389  009FED  20                 	db	32
  3390  009FEE  20                 	db	32
  3391  009FEF  20                 	db	32
  3392  009FF0  20                 	db	32
  3393  009FF1  20                 	db	32
  3394  009FF2  20                 	db	32
  3395  009FF3  20                 	db	32
  3396  009FF4  20                 	db	32
  3397  009FF5  20                 	db	32
  3398  009FF6  20                 	db	32
  3399  009FF7  43                 	db	67
  3400  009FF8  6F                 	db	111
  3401  009FF9  75                 	db	117
  3402  009FFA  6E                 	db	110
  3403  009FFB  74                 	db	116
  3404  009FFC  65                 	db	101
  3405  009FFD  72                 	db	114
  3406  009FFE  43                 	db	67
  3407  009FFF  6C                 	db	108
  3408  00A000  6F                 	db	111
  3409  00A001  63                 	db	99
  3410  00A002  6B                 	db	107
  3411  00A003  77                 	db	119
  3412  00A004  69                 	db	105
  3413  00A005  73                 	db	115
  3414  00A006  65                 	db	101
  3415  00A007  20                 	db	32
  3416  00A008  20                 	db	32
  3417  00A009  20                 	db	32
  3418  00A00A  20                 	db	32
  3419  00A00B  43                 	db	67
  3420  00A00C  6C                 	db	108
  3421  00A00D  6F                 	db	111
  3422  00A00E  63                 	db	99
  3423  00A00F  6B                 	db	107
  3424  00A010  77                 	db	119
  3425  00A011  69                 	db	105
  3426  00A012  73                 	db	115
  3427  00A013  65                 	db	101
  3428  00A014  20                 	db	32
  3429  00A015  20                 	db	32
  3430  00A016  20                 	db	32
  3431  00A017  20                 	db	32
  3432  00A018  20                 	db	32
  3433  00A019  20                 	db	32
  3434  00A01A  20                 	db	32
  3435  00A01B  20                 	db	32
  3436  00A01C  20                 	db	32
  3437  00A01D  20                 	db	32
  3438  00A01E                     __end_of_dc_setup2:
  3439                           	opt stack 0
  3440  00A01E                     _dc_setup1:
  3441                           	opt stack 0
  3442  00A01E  53                 	db	83
  3443  00A01F  65                 	db	101
  3444  00A020  74                 	db	116
  3445  00A021  75                 	db	117
  3446  00A022  70                 	db	112
  3447  00A023  3A                 	db	58
  3448  00A024  20                 	db	32
  3449  00A025  53                 	db	83
  3450  00A026  65                 	db	101
  3451  00A027  74                 	db	116
  3452  00A028  20                 	db	32
  3453  00A029  7A                 	db	122
  3454  00A02A  65                 	db	101
  3455  00A02B  72                 	db	114
  3456  00A02C  6F                 	db	111
  3457  00A02D  20                 	db	32
  3458  00A02E  70                 	db	112
  3459  00A02F  6F                 	db	111
  3460  00A030  73                 	db	115
  3461  00A031  2E                 	db	46
  3462  00A032  20                 	db	32
  3463  00A033  20                 	db	32
  3464  00A034  20                 	db	32
  3465  00A035  20                 	db	32
  3466  00A036  20                 	db	32
  3467  00A037  20                 	db	32
  3468  00A038  20                 	db	32
  3469  00A039  20                 	db	32
  3470  00A03A  20                 	db	32
  3471  00A03B  20                 	db	32
  3472  00A03C  20                 	db	32
  3473  00A03D  20                 	db	32
  3474  00A03E  20                 	db	32
  3475  00A03F  20                 	db	32
  3476  00A040  20                 	db	32
  3477  00A041  20                 	db	32
  3478  00A042  20                 	db	32
  3479  00A043  20                 	db	32
  3480  00A044  20                 	db	32
  3481  00A045  20                 	db	32
  3482  00A046  53                 	db	83
  3483  00A047  74                 	db	116
  3484  00A048  65                 	db	101
  3485  00A049  70                 	db	112
  3486  00A04A  20                 	db	32
  3487  00A04B  73                 	db	115
  3488  00A04C  69                 	db	105
  3489  00A04D  7A                 	db	122
  3490  00A04E  65                 	db	101
  3491  00A04F  20                 	db	32
  3492  00A050  00                 	db	0
  3493  00A051  20                 	db	32
  3494  00A052  20                 	db	32
  3495  00A053  43                 	db	67
  3496  00A054  6F                 	db	111
  3497  00A055  6E                 	db	110
  3498  00A056  66                 	db	102
  3499  00A057  69                 	db	105
  3500  00A058  72                 	db	114
  3501  00A059  6D                 	db	109
  3502  00A05A  20                 	db	32
  3503  00A05B  78                 	db	120
  3504  00A05C  2E                 	db	46
  3505  00A05D  78                 	db	120
  3506  00A05E  78                 	db	120
  3507  00A05F  01                 	db	1
  3508  00A060  20                 	db	32
  3509  00A061  20                 	db	32
  3510  00A062  20                 	db	32
  3511  00A063  20                 	db	32
  3512  00A064  00                 	db	0
  3513  00A065  20                 	db	32
  3514  00A066  20                 	db	32
  3515  00A067  43                 	db	67
  3516  00A068  61                 	db	97
  3517  00A069  6E                 	db	110
  3518  00A06A  63                 	db	99
  3519  00A06B  65                 	db	101
  3520  00A06C  6C                 	db	108
  3521  00A06D  20                 	db	32
  3522  00A06E                     __end_of_dc_setup1:
  3523                           	opt stack 0
  3524  00A06E                     _dc_main:
  3525                           	opt stack 0
  3526  00A06E  4D                 	db	77
  3527  00A06F  61                 	db	97
  3528  00A070  69                 	db	105
  3529  00A071  6E                 	db	110
  3530  00A072  20                 	db	32
  3531  00A073  4D                 	db	77
  3532  00A074  65                 	db	101
  3533  00A075  6E                 	db	110
  3534  00A076  75                 	db	117
  3535  00A077  3A                 	db	58
  3536  00A078  20                 	db	32
  3537  00A079  20                 	db	32
  3538  00A07A  20                 	db	32
  3539  00A07B  20                 	db	32
  3540  00A07C  20                 	db	32
  3541  00A07D  20                 	db	32
  3542  00A07E  20                 	db	32
  3543  00A07F  20                 	db	32
  3544  00A080  20                 	db	32
  3545  00A081  20                 	db	32
  3546  00A082  20                 	db	32
  3547  00A083  53                 	db	83
  3548  00A084  65                 	db	101
  3549  00A085  74                 	db	116
  3550  00A086  75                 	db	117
  3551  00A087  70                 	db	112
  3552  00A088  20                 	db	32
  3553  00A089  20                 	db	32
  3554  00A08A  20                 	db	32
  3555  00A08B  20                 	db	32
  3556  00A08C  44                 	db	68
  3557  00A08D  69                 	db	105
  3558  00A08E  76                 	db	118
  3559  00A08F  69                 	db	105
  3560  00A090  64                 	db	100
  3561  00A091  65                 	db	101
  3562  00A092  20                 	db	32
  3563  00A093  20                 	db	32
  3564  00A094  20                 	db	32
  3565  00A095  20                 	db	32
  3566  00A096  20                 	db	32
  3567  00A097  41                 	db	65
  3568  00A098  72                 	db	114
  3569  00A099  63                 	db	99
  3570  00A09A  20                 	db	32
  3571  00A09B  20                 	db	32
  3572  00A09C  20                 	db	32
  3573  00A09D  20                 	db	32
  3574  00A09E  20                 	db	32
  3575  00A09F  20                 	db	32
  3576  00A0A0  4D                 	db	77
  3577  00A0A1  61                 	db	97
  3578  00A0A2  6E                 	db	110
  3579  00A0A3  75                 	db	117
  3580  00A0A4  61                 	db	97
  3581  00A0A5  6C                 	db	108
  3582  00A0A6  20                 	db	32
  3583  00A0A7  20                 	db	32
  3584  00A0A8  20                 	db	32
  3585  00A0A9  20                 	db	32
  3586  00A0AA  20                 	db	32
  3587  00A0AB  47                 	db	71
  3588  00A0AC  6F                 	db	111
  3589  00A0AD  32                 	db	50
  3590  00A0AE  5A                 	db	90
  3591  00A0AF  65                 	db	101
  3592  00A0B0  72                 	db	114
  3593  00A0B1  6F                 	db	111
  3594  00A0B2  20                 	db	32
  3595  00A0B3  20                 	db	32
  3596  00A0B4  20                 	db	32
  3597  00A0B5  20                 	db	32
  3598  00A0B6  20                 	db	32
  3599  00A0B7  20                 	db	32
  3600  00A0B8  20                 	db	32
  3601  00A0B9  20                 	db	32
  3602  00A0BA  20                 	db	32
  3603  00A0BB  20                 	db	32
  3604  00A0BC  20                 	db	32
  3605  00A0BD  20                 	db	32
  3606  00A0BE                     __end_of_dc_main:
  3607                           	opt stack 0
  3608  00A0BE                     _configDescriptor1:
  3609                           	opt stack 0
  3610  00A0BE  09                 	db	9
  3611  00A0BF  02                 	db	2
  3612  00A0C0  40                 	db	64
  3613  00A0C1  00                 	db	0
  3614  00A0C2  02                 	db	2
  3615  00A0C3  01                 	db	1
  3616  00A0C4  00                 	db	0
  3617  00A0C5  C0                 	db	192
  3618  00A0C6  32                 	db	50
  3619  00A0C7  09                 	db	9
  3620  00A0C8  04                 	db	4
  3621  00A0C9  00                 	db	0
  3622  00A0CA  00                 	db	0
  3623  00A0CB  02                 	db	2
  3624  00A0CC  03                 	db	3
  3625  00A0CD  00                 	db	0
  3626  00A0CE  00                 	db	0
  3627  00A0CF  00                 	db	0
  3628  00A0D0  09                 	db	9
  3629  00A0D1  21                 	db	33
  3630  00A0D2  11                 	db	17
  3631  00A0D3  01                 	db	1
  3632  00A0D4  00                 	db	0
  3633  00A0D5  01                 	db	1
  3634  00A0D6  22                 	db	34
  3635  00A0D7  1D                 	db	29
  3636  00A0D8  00                 	db	0
  3637  00A0D9  07                 	db	7
  3638  00A0DA  05                 	db	5
  3639  00A0DB  81                 	db	129
  3640  00A0DC  03                 	db	3
  3641  00A0DD  40                 	db	64
  3642  00A0DE  00                 	db	0
  3643  00A0DF  01                 	db	1
  3644  00A0E0  07                 	db	7
  3645  00A0E1  05                 	db	5
  3646  00A0E2  01                 	db	1
  3647  00A0E3  03                 	db	3
  3648  00A0E4  40                 	db	64
  3649  00A0E5  00                 	db	0
  3650  00A0E6  01                 	db	1
  3651  00A0E7  09                 	db	9
  3652  00A0E8  04                 	db	4
  3653  00A0E9  01                 	db	1
  3654  00A0EA  00                 	db	0
  3655  00A0EB  02                 	db	2
  3656  00A0EC  08                 	db	8
  3657  00A0ED  06                 	db	6
  3658  00A0EE  50                 	db	80
  3659  00A0EF  00                 	db	0
  3660  00A0F0  07                 	db	7
  3661  00A0F1  05                 	db	5
  3662  00A0F2  82                 	db	130
  3663  00A0F3  02                 	db	2
  3664  00A0F4  40                 	db	64
  3665  00A0F5  00                 	db	0
  3666  00A0F6  01                 	db	1
  3667  00A0F7  07                 	db	7
  3668  00A0F8  05                 	db	5
  3669  00A0F9  02                 	db	2
  3670  00A0FA  02                 	db	2
  3671  00A0FB  40                 	db	64
  3672  00A0FC  00                 	db	0
  3673  00A0FD  01                 	db	1
  3674  00A0FE                     __end_of_configDescriptor1:
  3675                           	opt stack 0
  3676  00A0FE                     _sd001:
  3677                           	opt stack 0
  3678  00A0FE  34                 	db	52
  3679  00A0FF  03                 	db	3
  3680  00A100  0053               	dw	83
  3681  00A102  006F               	dw	111
  3682  00A104  006C               	dw	108
  3683  00A106  0064               	dw	100
  3684  00A108  0065               	dw	101
  3685  00A10A  0072               	dw	114
  3686  00A10C  006E               	dw	110
  3687  00A10E  0065               	dw	101
  3688  00A110  0072               	dw	114
  3689  00A112  0064               	dw	100
  3690  00A114  002E               	dw	46
  3691  00A116  0063               	dw	99
  3692  00A118  006F               	dw	111
  3693  00A11A  006D               	dw	109
  3694  00A11C  0020               	dw	32
  3695  00A11E  0020               	dw	32
  3696  00A120  0020               	dw	32
  3697  00A122  0020               	dw	32
  3698  00A124  0020               	dw	32
  3699  00A126  0020               	dw	32
  3700  00A128  0020               	dw	32
  3701  00A12A  0020               	dw	32
  3702  00A12C  0020               	dw	32
  3703  00A12E  0020               	dw	32
  3704  00A130  0020               	dw	32
  3705  00A132                     __end_of_sd001:
  3706                           	opt stack 0
  3707  00A132                     _sd002:
  3708                           	opt stack 0
  3709  00A132  2E                 	db	46
  3710  00A133  03                 	db	3
  3711  00A134  0053               	dw	83
  3712  00A136  0074               	dw	116
  3713  00A138  0065               	dw	101
  3714  00A13A  0070               	dw	112
  3715  00A13C  0070               	dw	112
  3716  00A13E  0065               	dw	101
  3717  00A140  0072               	dw	114
  3718  00A142  004D               	dw	77
  3719  00A144  006F               	dw	111
  3720  00A146  0074               	dw	116
  3721  00A148  006F               	dw	111
  3722  00A14A  0072               	dw	114
  3723  00A14C  0043               	dw	67
  3724  00A14E  006F               	dw	111
  3725  00A150  006E               	dw	110
  3726  00A152  0074               	dw	116
  3727  00A154  0072               	dw	114
  3728  00A156  006F               	dw	111
  3729  00A158  006C               	dw	108
  3730  00A15A  006C               	dw	108
  3731  00A15C  0065               	dw	101
  3732  00A15E  0072               	dw	114
  3733  00A160                     __end_of_sd002:
  3734                           	opt stack 0
  3735  00A160                     _inq_resp:
  3736                           	opt stack 0
  3737  00A160  00                 	db	0
  3738  00A161  80                 	db	128
  3739  00A162  04                 	db	4
  3740  00A163  02                 	db	2
  3741  00A164  20                 	db	32
  3742  00A165  00                 	db	0
  3743  00A166  00                 	db	0
  3744  00A167  00                 	db	0
  3745  00A168  4D                 	db	77
  3746  00A169  69                 	db	105
  3747  00A16A  63                 	db	99
  3748  00A16B  72                 	db	114
  3749  00A16C  6F                 	db	111
  3750  00A16D  63                 	db	99
  3751  00A16E  68                 	db	104
  3752  00A16F  70                 	db	112
  3753  00A170  4D                 	db	77
  3754  00A171  61                 	db	97
  3755  00A172  73                 	db	115
  3756  00A173  73                 	db	115
  3757  00A174  20                 	db	32
  3758  00A175  53                 	db	83
  3759  00A176  74                 	db	116
  3760  00A177  6F                 	db	111
  3761  00A178  72                 	db	114
  3762  00A179  61                 	db	97
  3763  00A17A  67                 	db	103
  3764  00A17B  65                 	db	101
  3765  00A17C  20                 	db	32
  3766  00A17D  20                 	db	32
  3767  00A17E  20                 	db	32
  3768  00A17F  20                 	db	32
  3769  00A180  30                 	db	48
  3770  00A181  30                 	db	48
  3771  00A182  30                 	db	48
  3772  00A183  31                 	db	49
  3773  00A184                     __end_of_inq_resp:
  3774                           	opt stack 0
  3775  00A184                     _hid_rpt01:
  3776                           	opt stack 0
  3777  00A184  06                 	db	6
  3778  00A185  00                 	db	0
  3779  00A186  FF                 	db	255
  3780  00A187  09                 	db	9
  3781  00A188  01                 	db	1
  3782  00A189  A1                 	db	161
  3783  00A18A  01                 	db	1
  3784  00A18B  19                 	db	25
  3785  00A18C  01                 	db	1
  3786  00A18D  29                 	db	41
  3787  00A18E  40                 	db	64
  3788  00A18F  15                 	db	21
  3789  00A190  00                 	db	0
  3790  00A191  26                 	db	38
  3791  00A192  FF                 	db	255
  3792  00A193  00                 	db	0
  3793  00A194  75                 	db	117
  3794  00A195  08                 	db	8
  3795  00A196  95                 	db	149
  3796  00A197  40                 	db	64
  3797  00A198  81                 	db	129
  3798  00A199  00                 	db	0
  3799  00A19A  19                 	db	25
  3800  00A19B  01                 	db	1
  3801  00A19C  29                 	db	41
  3802  00A19D  40                 	db	64
  3803  00A19E  91                 	db	145
  3804  00A19F  00                 	db	0
  3805  00A1A0  C0                 	db	192
  3806  00A1A1                     __end_of_hid_rpt01:
  3807                           	opt stack 0
  3808  00A1A1                     _sd003:
  3809                           	opt stack 0
  3810  00A1A1  1A                 	db	26
  3811  00A1A2  03                 	db	3
  3812  00A1A3  0031               	dw	49
  3813  00A1A5  0032               	dw	50
  3814  00A1A7  0033               	dw	51
  3815  00A1A9  0034               	dw	52
  3816  00A1AB  0035               	dw	53
  3817  00A1AD  0036               	dw	54
  3818  00A1AF  0037               	dw	55
  3819  00A1B1  0038               	dw	56
  3820  00A1B3  0039               	dw	57
  3821  00A1B5  0030               	dw	48
  3822  00A1B7  0039               	dw	57
  3823  00A1B9  0039               	dw	57
  3824  00A1BB                     __end_of_sd003:
  3825                           	opt stack 0
  3826  00A1BB                     _device_dsc:
  3827                           	opt stack 0
  3828  00A1BB  12                 	db	18
  3829  00A1BC  01                 	db	1
  3830  00A1BD  0200               	dw	512
  3831  00A1BF  00                 	db	0
  3832  00A1C0  00                 	db	0
  3833  00A1C1  00                 	db	0
  3834  00A1C2  08                 	db	8
  3835  00A1C3  04D8               	dw	1240
  3836  00A1C5  EDCF               	dw	60879
  3837  00A1C7  0100               	dw	256
  3838  00A1C9  01                 	db	1
  3839  00A1CA  02                 	db	2
  3840  00A1CB  00                 	db	0
  3841  00A1CC  01                 	db	1
  3842  00A1CD                     __end_of_device_dsc:
  3843                           	opt stack 0
  3844  00A1CD                     _bit_pattern_ae:
  3845                           	opt stack 0
  3846  00A1CD  0A                 	db	10
  3847  00A1CE  00                 	db	0
  3848  00A1CF  0E                 	db	14
  3849  00A1D0  01                 	db	1
  3850  00A1D1  0F                 	db	15
  3851  00A1D2  11                 	db	17
  3852  00A1D3  0F                 	db	15
  3853  00A1D4  00                 	db	0
  3854  00A1D5                     __end_of_bit_pattern_ae:
  3855                           	opt stack 0
  3856  00A1D5                     _bit_pattern_degree:
  3857                           	opt stack 0
  3858  00A1D5  18                 	db	24
  3859  00A1D6  18                 	db	24
  3860  00A1D7  00                 	db	0
  3861  00A1D8  00                 	db	0
  3862  00A1D9  00                 	db	0
  3863  00A1DA  00                 	db	0
  3864  00A1DB  00                 	db	0
  3865  00A1DC  00                 	db	0
  3866  00A1DD                     __end_of_bit_pattern_degree:
  3867                           	opt stack 0
  3868  00A1DD                     _bit_pattern_verticalbar:
  3869                           	opt stack 0
  3870  00A1DD  04                 	db	4
  3871  00A1DE  04                 	db	4
  3872  00A1DF  04                 	db	4
  3873  00A1E0  04                 	db	4
  3874  00A1E1  04                 	db	4
  3875  00A1E2  04                 	db	4
  3876  00A1E3  04                 	db	4
  3877  00A1E4  04                 	db	4
  3878  00A1E5                     __end_of_bit_pattern_verticalbar:
  3879                           	opt stack 0
  3880  00A1E5                     _flash_command_pagesize_528:
  3881                           	opt stack 0
  3882  00A1E5  3D                 	db	61
  3883  00A1E6  2A                 	db	42
  3884  00A1E7  80                 	db	128
  3885  00A1E8  A7                 	db	167
  3886  00A1E9                     __end_of_flash_command_pagesize_528:
  3887                           	opt stack 0
  3888  00A1E9                     _flash_command_pagesize_512:
  3889                           	opt stack 0
  3890  00A1E9  3D                 	db	61
  3891  00A1EA  2A                 	db	42
  3892  00A1EB  80                 	db	128
  3893  00A1EC  A6                 	db	166
  3894  00A1ED                     __end_of_flash_command_pagesize_512:
  3895                           	opt stack 0
  3896  00A1ED                     _sd000:
  3897                           	opt stack 0
  3898  00A1ED  04                 	db	4
  3899  00A1EE  03                 	db	3
  3900  00A1EF  0409               	dw	1033
  3901  00A1F1                     __end_of_sd000:
  3902                           	opt stack 0
  3903  0000                     _RPINR22	set	3837
  3904  0000                     _RPOR23	set	3799
  3905  0000                     _RPOR21	set	3797
  3906  0000                     _RPINR21	set	3836
  3907  0000                     _RPOR4	set	3780
  3908  0000                     _PPSCONbits	set	3775
  3909  0000                     _CCPTMRS0bits	set	3922
  3910  0000                     _ANCON0bits	set	3912
  3911  0000                     _ANCON1bits	set	3913
  3912  0000                     _UEP0bits	set	3878
  3913  0000                     _UIEbits	set	3894
  3914  0000                     _UADDR	set	3896
  3915  0000                     _UIE	set	3894
  3916  0000                     _UEIE	set	3895
  3917  0000                     _UCFG	set	3897
  3918  0000                     _UEP1	set	3879
  3919  0000                     _UEP0	set	3878
  3920  0000                     _PORTA	set	3968
  3921  0000                     _PORTE	set	3972
  3922  0000                     _TMR2	set	4044
  3923  0000                     _PIE1bits	set	3997
  3924  0000                     _CCPR1L	set	4027
  3925  0000                     _PR2	set	4043
  3926  0000                     _T2CONbits	set	4042
  3927  0000                     _CCP1CONbits	set	4026
  3928  0000                     _RXADDRL	set	3945
  3929  0000                     _RXADDRH	set	3944
  3930  0000                     _DMABCL	set	3943
  3931  0000                     _DMABCH	set	3942
  3932  0000                     _TXADDRL	set	3947
  3933  0000                     _TXADDRH	set	3946
  3934  0000                     _DMACON2bits	set	3974
  3935  0000                     _DMACON1bits	set	3976
  3936  0000                     _SSP2CON1bits	set	3954
  3937  0000                     _SSP2STATbits	set	3955
  3938  0000                     _PORTDbits	set	3971
  3939  0000                     _PORTEbits	set	3972
  3940  0000                     _SSP1BUF	set	4041
  3941  0000                     _SSP1CON2bits	set	4037
  3942  0000                     _SSP1CON1bits	set	4038
  3943  0000                     _SSP1ADD	set	4040
  3944  0000                     _SSP1STATbits	set	4039
  3945  0000                     _PORTAbits	set	3968
  3946  0000                     _T0CONbits	set	4053
  3947  0000                     _TRISEbits	set	3990
  3948  0000                     _EECON2	set	4007
  3949  0000                     _LATBbits	set	3978
  3950  0000                     _LATAbits	set	3977
  3951  0000                     _TRISAbits	set	3986
  3952  0000                     _LATCbits	set	3979
  3953  0000                     _TRISCbits	set	3988
  3954  0000                     _TRISBbits	set	3987
  3955  0000                     _LATDbits	set	3980
  3956  0000                     _TRISDbits	set	3989
  3957  0000                     _TMR0L	set	4054
  3958  0000                     _TMR0H	set	4055
  3959  0000                     _PIR1bits	set	3998
  3960  0000                     _OSCCON	set	4051
  3961  0000                     _OSCTUNEbits	set	3995
  3962  0000                     _INTCONbits	set	4082
  3963  0000                     _IPR2bits	set	4002
  3964  0000                     _RCONbits	set	4048
  3965  0000                     _UCON	set	3941
  3966  0000                     _USTAT	set	3940
  3967  0000                     _PIR2bits	set	4001
  3968  0000                     _UIRbits	set	3938
  3969  0000                     _UCONbits	set	3941
  3970  0000                     _UIR	set	3938
  3971  0000                     _UEIR	set	3939
  3972  0000                     _PIE2bits	set	4000
  3973  00A1F1                     STR_18:
  3974                           
  3975                           ; BSR set to: 1
  3976  00A1F1  68                 	db	104	;'h'
  3977  00A1F2  65                 	db	101	;'e'
  3978  00A1F3  6C                 	db	108	;'l'
  3979  00A1F4  6C                 	db	108	;'l'
  3980  00A1F5  6F                 	db	111	;'o'
  3981  00A1F6  20                 	db	32
  3982  00A1F7  77                 	db	119	;'w'
  3983  00A1F8  6F                 	db	111	;'o'
  3984  00A1F9  72                 	db	114	;'r'
  3985  00A1FA  6C                 	db	108	;'l'
  3986  00A1FB  64                 	db	100	;'d'
  3987  00A1FC  21                 	db	33
  3988  00A1FD  00                 	db	0
  3989  00A1FE                     STR_15:
  3990                           
  3991                           ; BSR set to: 1
  3992  00A1FE  53                 	db	83	;'S'
  3993  00A1FF  6F                 	db	111	;'o'
  3994  00A200  6C                 	db	108	;'l'
  3995  00A201  61                 	db	97	;'a'
  3996  00A202  72                 	db	114	;'r'
  3997  00A203  43                 	db	67	;'C'
  3998  00A204  68                 	db	104	;'h'
  3999  00A205  61                 	db	97	;'a'
  4000  00A206  72                 	db	114	;'r'
  4001  00A207  67                 	db	103	;'g'
  4002  00A208  72                 	db	114	;'r'
  4003  00A209  00                 	db	0
  4004  00A20A                     STR_16:
  4005                           
  4006                           ; BSR set to: 1
  4007  00A20A  46                 	db	70	;'F'
  4008  00A20B  49                 	db	73	;'I'
  4009  00A20C  4C                 	db	76	;'L'
  4010  00A20D  45                 	db	69	;'E'
  4011  00A20E  20                 	db	32
  4012  00A20F  20                 	db	32
  4013  00A210  20                 	db	32
  4014  00A211  20                 	db	32
  4015  00A212  00                 	db	0
  4016  00A213                     STR_7:
  4017                           
  4018                           ; BSR set to: 1
  4019  00A213  4D                 	db	77	;'M'
  4020  00A214  53                 	db	83	;'S'
  4021  00A215  44                 	db	68	;'D'
  4022  00A216  4F                 	db	79	;'O'
  4023  00A217  53                 	db	83	;'S'
  4024  00A218  35                 	db	53	;'5'
  4025  00A219  2E                 	db	46
  4026  00A21A  30                 	db	48	;'0'
  4027  00A21B  00                 	db	0
  4028  00A21C                     STR_1:
  4029                           
  4030                           ; BSR set to: 1
  4031  00A21C  20                 	db	32
  4032  00A21D  20                 	db	32
  4033  00A21E  20                 	db	32
  4034  00A21F  20                 	db	32
  4035  00A220  20                 	db	32
  4036  00A221  20                 	db	32
  4037  00A222  20                 	db	32
  4038  00A223  20                 	db	32
  4039  00A224  00                 	db	0
  4040  00A225                     STR_2:
  4041                           
  4042                           ; BSR set to: 1
  4043  00A225  43                 	db	67	;'C'
  4044  00A226  61                 	db	97	;'a'
  4045  00A227  6E                 	db	110	;'n'
  4046  00A228  63                 	db	99	;'c'
  4047  00A229  65                 	db	101	;'e'
  4048  00A22A  6C                 	db	108	;'l'
  4049  00A22B  00                 	db	0
  4050  00A22C                     STR_6:
  4051                           
  4052                           ; BSR set to: 1
  4053  00A22C  53                 	db	83	;'S'
  4054  00A22D  74                 	db	116	;'t'
  4055  00A22E  6F                 	db	111	;'o'
  4056  00A22F  70                 	db	112	;'p'
  4057  00A230  20                 	db	32
  4058  00A231  00                 	db	0
  4059  00A232                     STR_17:
  4060                           
  4061                           ; BSR set to: 1
  4062  00A232  54                 	db	84	;'T'
  4063  00A233  58                 	db	88	;'X'
  4064  00A234  54                 	db	84	;'T'
  4065  00A235  00                 	db	0
  4066  0000                     
  4067                           ; #config settings
  4068  00A236  00                 	db	0	; dummy byte at the end
  4069  0000                     
  4070                           	psect	cinit
  4071  010D40                     __pcinit:
  4072                           	opt stack 0
  4073  010D40                     start_initialization:
  4074                           	opt stack 0
  4075  010D40                     __initialization:
  4076                           	opt stack 0
  4077                           
  4078                           ; Initialize objects allocated to BANK2 (26 bytes)
  4079                           ; load TBLPTR registers with __pidataBANK2
  4080  010D40  0E88               	movlw	low __pidataBANK2
  4081  010D42  6EF6               	movwf	tblptrl,c
  4082  010D44  0E22               	movlw	high __pidataBANK2
  4083  010D46  6EF7               	movwf	tblptrh,c
  4084  010D48  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4085  010D4A  6EF8               	movwf	tblptru,c
  4086  010D4C  EE02  F0B8         	lfsr	0,__pdataBANK2
  4087  010D50  EE10 F01A          	lfsr	1,26
  4088  010D54                     copy_data0:
  4089  010D54  0009               	tblrd		*+
  4090  010D56  CFF5 FFEE          	movff	tablat,postinc0
  4091  010D5A  50E5               	movf	postdec1,w,c
  4092  010D5C  50E1               	movf	fsr1l,w,c
  4093  010D5E  E1FA               	bnz	copy_data0
  4094                           
  4095                           ; Initialize objects allocated to BANK1 (109 bytes)
  4096                           ; load TBLPTR registers with __pidataBANK1
  4097  010D60  0EFE               	movlw	low __pidataBANK1
  4098  010D62  6EF6               	movwf	tblptrl,c
  4099  010D64  0E11               	movlw	high __pidataBANK1
  4100  010D66  6EF7               	movwf	tblptrh,c
  4101  010D68  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  4102  010D6A  6EF8               	movwf	tblptru,c
  4103  010D6C  EE01  F090         	lfsr	0,__pdataBANK1
  4104  010D70  EE10 F06D          	lfsr	1,109
  4105  010D74                     copy_data1:
  4106  010D74  0009               	tblrd		*+
  4107  010D76  CFF5 FFEE          	movff	tablat,postinc0
  4108  010D7A  50E5               	movf	postdec1,w,c
  4109  010D7C  50E1               	movf	fsr1l,w,c
  4110  010D7E  E1FA               	bnz	copy_data1
  4111                           
  4112                           ; Clear objects allocated to BIGRAMll (512 bytes)
  4113  010D80  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4114  010D84  EE12 F000          	lfsr	1,512
  4115  010D88                     clear_0:
  4116  010D88  6AEE               	clrf	postinc0,c
  4117  010D8A  50E5               	movf	postdec1,w,c
  4118  010D8C  50E1               	movf	fsr1l,w,c
  4119  010D8E  E1FC               	bnz	clear_0
  4120  010D90  50E2               	movf	fsr1h,w,c
  4121  010D92  E1FA               	bnz	clear_0
  4122                           
  4123                           ; Clear objects allocated to BANK2 (184 bytes)
  4124  010D94  EE02  F000         	lfsr	0,__pbssBANK2
  4125  010D98  0EB8               	movlw	184
  4126  010D9A                     clear_1:
  4127  010D9A  6AEE               	clrf	postinc0,c
  4128  010D9C  06E8               	decf	wreg,f,c
  4129  010D9E  E1FD               	bnz	clear_1
  4130                           
  4131                           ; Clear objects allocated to BANK1 (144 bytes)
  4132  010DA0  EE01  F000         	lfsr	0,__pbssBANK1
  4133  010DA4  0E90               	movlw	144
  4134  010DA6                     clear_2:
  4135  010DA6  6AEE               	clrf	postinc0,c
  4136  010DA8  06E8               	decf	wreg,f,c
  4137  010DAA  E1FD               	bnz	clear_2
  4138                           
  4139                           ; Clear objects allocated to BANK0 (54 bytes)
  4140  010DAC  EE00  F0CA         	lfsr	0,__pbssBANK0
  4141  010DB0  0E36               	movlw	54
  4142  010DB2                     clear_3:
  4143  010DB2  6AEE               	clrf	postinc0,c
  4144  010DB4  06E8               	decf	wreg,f,c
  4145  010DB6  E1FD               	bnz	clear_3
  4146                           
  4147                           ; Clear objects allocated to COMRAM (45 bytes)
  4148  010DB8  EE00  F001         	lfsr	0,__pbssCOMRAM
  4149  010DBC  0E2D               	movlw	45
  4150  010DBE                     clear_4:
  4151  010DBE  6AEE               	clrf	postinc0,c
  4152  010DC0  06E8               	decf	wreg,f,c
  4153  010DC2  E1FD               	bnz	clear_4
  4154  010DC4                     end_of_initialization:
  4155                           	opt stack 0
  4156  010DC4                     __end_of__initialization:
  4157                           	opt stack 0
  4158  010DC4  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4159  010DC6  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4160  010DC8  0100               	movlb	0
  4161  010DCA  EF70  F073         	goto	_main	;jump to C main() function
  4162                           tblptru	equ	0xFF8
  4163                           tblptrh	equ	0xFF7
  4164                           tblptrl	equ	0xFF6
  4165                           tablat	equ	0xFF5
  4166                           postinc0	equ	0xFEE
  4167                           wreg	equ	0xFE8
  4168                           postdec1	equ	0xFE5
  4169                           fsr1h	equ	0xFE2
  4170                           fsr1l	equ	0xFE1
  4171                           
  4172                           	psect	bssCOMRAM
  4173  000001                     __pbssCOMRAM:
  4174                           	opt stack 0
  4175  000001                     _outPipes:
  4176                           	opt stack 0
  4177  000001                     	ds	9
  4178  00000A                     _inPipes:
  4179                           	opt stack 0
  4180  00000A                     	ds	6
  4181  000010                     _pBDTEntryIn:
  4182                           	opt stack 0
  4183  000010                     	ds	6
  4184  000016                     _motor_current_stepcount:
  4185                           	opt stack 0
  4186  000016                     	ds	4
  4187  00001A                     _pBDTEntryEP0OutNext:
  4188                           	opt stack 0
  4189  00001A                     	ds	2
  4190  00001C                     _pBDTEntryEP0OutCurrent:
  4191                           	opt stack 0
  4192  00001C                     	ds	2
  4193  00001E                     _enc2:
  4194                           	opt stack 0
  4195  00001E                     	ds	1
  4196  00001F                     _enc1:
  4197                           	opt stack 0
  4198  00001F                     	ds	1
  4199  000020                     _motor_mode:
  4200                           	opt stack 0
  4201  000020                     	ds	1
  4202  000021                     _MSDWriteState:
  4203                           	opt stack 0
  4204  000021                     	ds	1
  4205  000022                     _USBStatusStageEnabledFlag1:
  4206                           	opt stack 0
  4207  000022                     	ds	1
  4208  000023                     _USBDeferStatusStagePacket:
  4209                           	opt stack 0
  4210  000023                     	ds	1
  4211  000024                     _USBStatusStageTimeoutCounter:
  4212                           	opt stack 0
  4213  000024                     	ds	1
  4214  000025                     _BothEP0OutUOWNsSet:
  4215                           	opt stack 0
  4216  000025                     	ds	1
  4217  000026                     _endpoint_number:
  4218                           	opt stack 0
  4219  000026                     	ds	1
  4220  000027                     _USBBusIsSuspended:
  4221                           	opt stack 0
  4222  000027                     	ds	1
  4223  000028                     _RemoteWakeup:
  4224                           	opt stack 0
  4225  000028                     	ds	1
  4226  000029                     _controlTransferState:
  4227                           	opt stack 0
  4228  000029                     	ds	1
  4229  00002A                     _shortPacketStatus:
  4230                           	opt stack 0
  4231  00002A                     	ds	1
  4232  00002B                     _USBDeviceState:
  4233                           	opt stack 0
  4234  00002B                     	ds	1
  4235  00002C                     _USTATcopy:
  4236                           	opt stack 0
  4237  00002C                     	ds	1
  4238  00002D                     _USBActiveConfiguration:
  4239                           	opt stack 0
  4240  00002D                     	ds	1
  4241                           tblptru	equ	0xFF8
  4242                           tblptrh	equ	0xFF7
  4243                           tblptrl	equ	0xFF6
  4244                           tablat	equ	0xFF5
  4245                           postinc0	equ	0xFEE
  4246                           wreg	equ	0xFE8
  4247                           postdec1	equ	0xFE5
  4248                           fsr1h	equ	0xFE2
  4249                           fsr1l	equ	0xFE1
  4250                           
  4251                           	psect	bssBANK0
  4252  0000CA                     __pbssBANK0:
  4253                           	opt stack 0
  4254  0000CA                     _os:
  4255                           	opt stack 0
  4256  0000CA                     	ds	39
  4257  0000F1                     _motor_current_speed:
  4258                           	opt stack 0
  4259  0000F1                     	ds	2
  4260  0000F3                     _TransferLength:
  4261                           	opt stack 0
  4262  0000F3                     	ds	2
  4263  0000F5                     _USBMSDInHandle:
  4264                           	opt stack 0
  4265  0000F5                     	ds	2
  4266  0000F7                     _USBMSDOutHandle:
  4267                           	opt stack 0
  4268  0000F7                     	ds	2
  4269  0000F9                     _motor_direction:
  4270                           	opt stack 0
  4271  0000F9                     	ds	1
  4272  0000FA                     _motor_cue_write_index:
  4273                           	opt stack 0
  4274  0000FA                     	ds	1
  4275  0000FB                     _motor_cue_read_index:
  4276                           	opt stack 0
  4277  0000FB                     	ds	1
  4278  0000FC                     _power_state:
  4279                           	opt stack 0
  4280  0000FC                     	ds	1
  4281  0000FD                     _MSDHostNoData:
  4282                           	opt stack 0
  4283  0000FD                     	ds	1
  4284  0000FE                     _MSDCommandState:
  4285                           	opt stack 0
  4286  0000FE                     	ds	1
  4287  0000FF                     _MSD_State:
  4288                           	opt stack 0
  4289  0000FF                     	ds	1
  4290                           tblptru	equ	0xFF8
  4291                           tblptrh	equ	0xFF7
  4292                           tblptrl	equ	0xFF6
  4293                           tablat	equ	0xFF5
  4294                           postinc0	equ	0xFEE
  4295                           wreg	equ	0xFE8
  4296                           postdec1	equ	0xFE5
  4297                           fsr1h	equ	0xFE2
  4298                           fsr1l	equ	0xFE1
  4299                           
  4300                           	psect	bssBANK1
  4301  000100                     __pbssBANK1:
  4302                           	opt stack 0
  4303  000100                     _gblCBW:
  4304                           	opt stack 0
  4305  000100                     	ds	31
  4306  00011F                     _config:
  4307                           	opt stack 0
  4308  00011F                     	ds	20
  4309  000133                     _gblSenseData:
  4310                           	opt stack 0
  4311  000133                     	ds	18
  4312  000145                     _pBDTEntryOut:
  4313                           	opt stack 0
  4314  000145                     	ds	6
  4315  00014B                     _motor_next_speed_check:
  4316                           	opt stack 0
  4317  00014B                     	ds	4
  4318  00014F                     _motor_final_stepcount:
  4319                           	opt stack 0
  4320  00014F                     	ds	4
  4321  000153                     _gblBLKLen:
  4322                           	opt stack 0
  4323  000153                     	ds	4
  4324  000157                     _gblNumBLKS:
  4325                           	opt stack 0
  4326  000157                     	ds	4
  4327  00015B                     _LBA:
  4328                           	opt stack 0
  4329  00015B                     	ds	4
  4330  00015F                     _USB1msTickCount:
  4331                           	opt stack 0
  4332  00015F                     	ds	4
  4333  000163                     _config_external:
  4334                           	opt stack 0
  4335  000163                     	ds	3
  4336  000166                     _config_internal:
  4337                           	opt stack 0
  4338  000166                     	ds	3
  4339  000169                     _ep_data_out:
  4340                           	opt stack 0
  4341  000169                     	ds	3
  4342  00016C                     _ep_data_in:
  4343                           	opt stack 0
  4344  00016C                     	ds	3
  4345  00016F                     _motor_maximum_speed:
  4346                           	opt stack 0
  4347  00016F                     	ds	2
  4348  000171                     _USBInHandle:
  4349                           	opt stack 0
  4350  000171                     	ds	2
  4351  000173                     _USBOutHandle:
  4352                           	opt stack 0
  4353  000173                     	ds	2
  4354  000175                     _gblMediaPresent:
  4355                           	opt stack 0
  4356  000175                     	ds	2
  4357  000177                     _MSBBufferIndex:
  4358                           	opt stack 0
  4359  000177                     	ds	2
  4360  000179                     _ptrNextData:
  4361                           	opt stack 0
  4362  000179                     	ds	2
  4363  00017B                     _pDst:
  4364                           	opt stack 0
  4365  00017B                     	ds	2
  4366  00017D                     _active_configuration:
  4367                           	opt stack 0
  4368  00017D                     	ds	1
  4369  00017E                     _MSDCBWValid:
  4370                           	opt stack 0
  4371  00017E                     	ds	1
  4372  00017F                     _SoftDetach:
  4373                           	opt stack 0
  4374  00017F                     	ds	1
  4375  000180                     _gblCBWLength:
  4376                           	opt stack 0
  4377  000180                     	ds	1
  4378  000181                     _MSDRetryAttempt:
  4379                           	opt stack 0
  4380  000181                     	ds	1
  4381  000182                     _MSDReadState:
  4382                           	opt stack 0
  4383  000182                     	ds	1
  4384  000183                     _USBTicksSinceSuspendEnd:
  4385                           	opt stack 0
  4386  000183                     	ds	1
  4387  000184                     _USBDeferOUTDataStagePackets:
  4388                           	opt stack 0
  4389  000184                     	ds	1
  4390  000185                     _USBDeferINDataStagePackets:
  4391                           	opt stack 0
  4392  000185                     	ds	1
  4393  000186                     _USBStatusStageEnabledFlag2:
  4394                           	opt stack 0
  4395  000186                     	ds	1
  4396  000187                     _mediaInformation:
  4397                           	opt stack 0
  4398  000187                     	ds	5
  4399  00018C                     _USBAlternateInterface:
  4400                           	opt stack 0
  4401  00018C                     	ds	2
  4402  00018E                     _active_protocol:
  4403                           	opt stack 0
  4404  00018E                     	ds	1
  4405  00018F                     _idle_rate:
  4406                           	opt stack 0
  4407  00018F                     	ds	1
  4408                           tblptru	equ	0xFF8
  4409                           tblptrh	equ	0xFF7
  4410                           tblptrl	equ	0xFF6
  4411                           tablat	equ	0xFF5
  4412                           postinc0	equ	0xFEE
  4413                           wreg	equ	0xFE8
  4414                           postdec1	equ	0xFE5
  4415                           fsr1h	equ	0xFE2
  4416                           fsr1l	equ	0xFE1
  4417                           
  4418                           	psect	dataBANK1
  4419  000190                     __pdataBANK1:
  4420                           	opt stack 0
  4421  000190                     _LUN:
  4422                           	opt stack 0
  4423  000190                     	ds	29
  4424  0001AD                     _display_content:
  4425                           	opt stack 0
  4426  0001AD                     	ds	80
  4427                           tblptru	equ	0xFF8
  4428                           tblptrh	equ	0xFF7
  4429                           tblptrl	equ	0xFF6
  4430                           tablat	equ	0xFF5
  4431                           postinc0	equ	0xFEE
  4432                           wreg	equ	0xFE8
  4433                           postdec1	equ	0xFE5
  4434                           fsr1h	equ	0xFE2
  4435                           fsr1l	equ	0xFE1
  4436                           
  4437                           	psect	bssBANK2
  4438  000200                     __pbssBANK2:
  4439                           	opt stack 0
  4440  000200                     _motor_command_cue:
  4441                           	opt stack 0
  4442  000200                     	ds	56
  4443  000238                     _ToSendDataBuffer:
  4444                           	opt stack 0
  4445  000238                     	ds	64
  4446  000278                     _ReceivedDataBuffer:
  4447                           	opt stack 0
  4448  000278                     	ds	64
  4449                           tblptru	equ	0xFF8
  4450                           tblptrh	equ	0xFF7
  4451                           tblptrl	equ	0xFF6
  4452                           tablat	equ	0xFF5
  4453                           postinc0	equ	0xFEE
  4454                           wreg	equ	0xFE8
  4455                           postdec1	equ	0xFE5
  4456                           fsr1h	equ	0xFE2
  4457                           fsr1l	equ	0xFE1
  4458                           
  4459                           	psect	dataBANK2
  4460  0002B8                     __pdataBANK2:
  4461                           	opt stack 0
  4462  0002B8                     i2c_display_init@F6892:
  4463                           	opt stack 0
  4464  0002B8                     	ds	9
  4465  0002C1                     __i2c_display_send_init_sequence@F6889:
  4466                           	opt stack 0
  4467  0002C1                     	ds	9
  4468  0002CA                     	ds	8
  4469                           tblptru	equ	0xFF8
  4470                           tblptrh	equ	0xFF7
  4471                           tblptrl	equ	0xFF6
  4472                           tablat	equ	0xFF5
  4473                           postinc0	equ	0xFEE
  4474                           wreg	equ	0xFE8
  4475                           postdec1	equ	0xFE5
  4476                           fsr1h	equ	0xFE2
  4477                           fsr1l	equ	0xFE1
  4478                           
  4479                           	psect	bssBIGRAMll
  4480  000800                     __pbssBIGRAMll:
  4481                           	opt stack 0
  4482  000800                     _buffer:
  4483                           	opt stack 0
  4484  000800                     	ds	512
  4485                           tblptru	equ	0xFF8
  4486                           tblptrh	equ	0xFF7
  4487                           tblptrl	equ	0xFF6
  4488                           tablat	equ	0xFF5
  4489                           postinc0	equ	0xFEE
  4490                           wreg	equ	0xFE8
  4491                           postdec1	equ	0xFE5
  4492                           fsr1h	equ	0xFE2
  4493                           fsr1l	equ	0xFE1
  4494                           
  4495                           	psect	cstackBANK2
  4496  0002D2                     __pcstackBANK2:
  4497                           	opt stack 0
  4498  0002D2                     main@tmp:
  4499                           	opt stack 0
  4500                           
  4501                           ; 4 bytes @ 0x0
  4502  0002D2                     	ds	4
  4503                           tblptru	equ	0xFF8
  4504                           tblptrh	equ	0xFF7
  4505                           tblptrl	equ	0xFF6
  4506                           tablat	equ	0xFF5
  4507                           postinc0	equ	0xFEE
  4508                           wreg	equ	0xFE8
  4509                           postdec1	equ	0xFE5
  4510                           fsr1h	equ	0xFE2
  4511                           fsr1l	equ	0xFE1
  4512                           
  4513                           	psect	cstackBANK0
  4514  000060                     __pcstackBANK0:
  4515                           	opt stack 0
  4516  000060                     ??__i2c_wait_idle:
  4517  000060                     ??__display_clear:
  4518  000060                     ??_motor_stop:
  4519  000060                     ?_USBTransferOnePacket:
  4520                           	opt stack 0
  4521  000060                     ?_ExternalFlash_MediaInitialize:
  4522                           	opt stack 0
  4523  000060                     ?_ExternalFlash_SectorSizeRead:
  4524                           	opt stack 0
  4525  000060                     ?_strlen:
  4526                           	opt stack 0
  4527  000060                     ?_encoder_next_setup_stepsize:
  4528                           	opt stack 0
  4529  000060                     ?_encoder_next_arc_step_size:
  4530                           	opt stack 0
  4531  000060                     ?___lwdiv:
  4532                           	opt stack 0
  4533  000060                     ?___lwmod:
  4534                           	opt stack 0
  4535  000060                     ?_ExternalFlash_CapacityRead:
  4536                           	opt stack 0
  4537  000060                     ?___lmul:
  4538                           	opt stack 0
  4539  000060                     ?___aldiv:
  4540                           	opt stack 0
  4541  000060                     ?___almod:
  4542                           	opt stack 0
  4543  000060                     ?___fltol:
  4544                           	opt stack 0
  4545  000060                     ?___xxtofl:
  4546                           	opt stack 0
  4547  000060                     USBTransferOnePacket@dir:
  4548                           	opt stack 0
  4549  000060                     USBStallEndpoint@dir:
  4550                           	opt stack 0
  4551  000060                     SYSTEM_Initialize@state:
  4552                           	opt stack 0
  4553  000060                     __i2c_send@dat:
  4554                           	opt stack 0
  4555  000060                     display_get_character@position:
  4556                           	opt stack 0
  4557  000060                     encoder_next_divide_step_size@old_stepsize:
  4558                           	opt stack 0
  4559  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  4560                           	opt stack 0
  4561  000060                     ExternalFlash_MediaInitialize@config:
  4562                           	opt stack 0
  4563  000060                     ExternalFlash_SectorSizeRead@config:
  4564                           	opt stack 0
  4565  000060                     ExternalFlash_CapacityRead@config:
  4566                           	opt stack 0
  4567  000060                     ExternalFlash_MediaDetect@config:
  4568                           	opt stack 0
  4569  000060                     ExternalFlash_WriteProtectStateGet@config:
  4570                           	opt stack 0
  4571  000060                     ExternalFlash_SectorWrite@config:
  4572                           	opt stack 0
  4573  000060                     __get_mbr@idx:
  4574                           	opt stack 0
  4575  000060                     __get_fbr@idx:
  4576                           	opt stack 0
  4577  000060                     __get_fat@idx:
  4578                           	opt stack 0
  4579  000060                     __get_root@idx:
  4580                           	opt stack 0
  4581  000060                     __get_data@idx:
  4582                           	opt stack 0
  4583  000060                     spi_tx@data:
  4584                           	opt stack 0
  4585  000060                     spi_tx_tx@command:
  4586                           	opt stack 0
  4587  000060                     spi_tx_rx@command:
  4588                           	opt stack 0
  4589  000060                     __fill_buffer_get_bootloader_details@outBuffer:
  4590                           	opt stack 0
  4591  000060                     motor_change_speed@new_speed:
  4592                           	opt stack 0
  4593  000060                     encoder_next_setup_stepsize@old_stepsize:
  4594                           	opt stack 0
  4595  000060                     encoder_next_arc_step_size@old_stepsize:
  4596                           	opt stack 0
  4597  000060                     ___lwdiv@dividend:
  4598                           	opt stack 0
  4599  000060                     ___lwmod@dividend:
  4600                           	opt stack 0
  4601  000060                     memcpy@d1:
  4602                           	opt stack 0
  4603  000060                     memset@p1:
  4604                           	opt stack 0
  4605  000060                     strlen@s:
  4606                           	opt stack 0
  4607  000060                     __spi_init@details:
  4608                           	opt stack 0
  4609  000060                     __motor_run@distance_in_steps:
  4610                           	opt stack 0
  4611  000060                     ___lmul@multiplier:
  4612                           	opt stack 0
  4613  000060                     ___aldiv@dividend:
  4614                           	opt stack 0
  4615  000060                     ___almod@dividend:
  4616                           	opt stack 0
  4617  000060                     ___fltol@f1:
  4618                           	opt stack 0
  4619  000060                     ___xxtofl@val:
  4620                           	opt stack 0
  4621                           
  4622                           ; 4 bytes @ 0x0
  4623  000060                     	ds	1
  4624  000061                     ??_USBStallEndpoint:
  4625  000061                     ??_display_get_character:
  4626  000061                     USBTransferOnePacket@data:
  4627                           	opt stack 0
  4628  000061                     SYSTEM_Initialize@pll_startup_counter:
  4629                           	opt stack 0
  4630                           
  4631                           ; 2 bytes @ 0x1
  4632  000061                     	ds	1
  4633  000062                     ??_MSDComputeDeviceInAndResidue:
  4634  000062                     ??_strlen:
  4635  000062                     ??_encoder_next_setup_stepsize:
  4636  000062                     ??_encoder_next_arc_step_size:
  4637  000062                     ??__get_mbr:
  4638  000062                     ??__get_fbr:
  4639  000062                     ??__get_fat:
  4640  000062                     ??__get_root:
  4641  000062                     __display_clear@row:
  4642                           	opt stack 0
  4643  000062                     spi_tx@length:
  4644                           	opt stack 0
  4645  000062                     spi_tx_tx@command_length:
  4646                           	opt stack 0
  4647  000062                     spi_tx_rx@command_length:
  4648                           	opt stack 0
  4649  000062                     ___lwdiv@divisor:
  4650                           	opt stack 0
  4651  000062                     ___lwmod@divisor:
  4652                           	opt stack 0
  4653  000062                     memcpy@s1:
  4654                           	opt stack 0
  4655  000062                     memset@c:
  4656                           	opt stack 0
  4657  000062                     ExternalFlash_SectorWrite@sector_addr:
  4658                           	opt stack 0
  4659                           
  4660                           ; 4 bytes @ 0x2
  4661  000062                     	ds	1
  4662  000063                     USBTransferOnePacket@len:
  4663                           	opt stack 0
  4664  000063                     __display_clear@col:
  4665                           	opt stack 0
  4666  000063                     display_get_character@line:
  4667                           	opt stack 0
  4668  000063                     spi_init@configuration:
  4669                           	opt stack 0
  4670  000063                     SYSTEM_Initialize@pll_startup_counter_3095:
  4671                           	opt stack 0
  4672                           
  4673                           ; 2 bytes @ 0x3
  4674  000063                     	ds	1
  4675  000064                     ??_USBTransferOnePacket:
  4676  000064                     ??_spi_tx:
  4677  000064                     ??___fltol:
  4678  000064                     ??___xxtofl:
  4679  000064                     ___lwdiv@counter:
  4680                           	opt stack 0
  4681  000064                     ___lwmod@counter:
  4682                           	opt stack 0
  4683  000064                     spi_tx_tx@data:
  4684                           	opt stack 0
  4685  000064                     spi_tx_rx@data:
  4686                           	opt stack 0
  4687  000064                     __fill_buffer_get_display@outBuffer:
  4688                           	opt stack 0
  4689  000064                     __motor_run@speed:
  4690                           	opt stack 0
  4691  000064                     memcpy@n:
  4692                           	opt stack 0
  4693  000064                     memset@n:
  4694                           	opt stack 0
  4695  000064                     strlen@cp:
  4696                           	opt stack 0
  4697  000064                     ___lmul@multiplicand:
  4698                           	opt stack 0
  4699  000064                     ___aldiv@divisor:
  4700                           	opt stack 0
  4701  000064                     ___almod@divisor:
  4702                           	opt stack 0
  4703                           
  4704                           ; 4 bytes @ 0x4
  4705  000064                     	ds	1
  4706  000065                     USBStallEndpoint@ep:
  4707                           	opt stack 0
  4708  000065                     __i2c_eeprom_busy@busy:
  4709                           	opt stack 0
  4710  000065                     __i2c_write@data:
  4711                           	opt stack 0
  4712  000065                     i2c_display_write_fixed@data:
  4713                           	opt stack 0
  4714  000065                     ___lwdiv@quotient:
  4715                           	opt stack 0
  4716                           
  4717                           ; 2 bytes @ 0x5
  4718  000065                     	ds	1
  4719  000066                     ??__motor_run:
  4720  000066                     __fill_buffer_get_display@secondHalf:
  4721                           	opt stack 0
  4722  000066                     memcpy@tmp:
  4723                           	opt stack 0
  4724  000066                     USBStallEndpoint@p:
  4725                           	opt stack 0
  4726  000066                     ExternalFlash_SectorWrite@buffer:
  4727                           	opt stack 0
  4728  000066                     spi_tx_tx@data_length:
  4729                           	opt stack 0
  4730  000066                     spi_tx_rx@data_length:
  4731                           	opt stack 0
  4732  000066                     memset@p:
  4733                           	opt stack 0
  4734                           
  4735                           ; 2 bytes @ 0x6
  4736  000066                     	ds	1
  4737  000067                     ??__fill_buffer_get_display:
  4738  000067                     __i2c_write@length:
  4739                           	opt stack 0
  4740  000067                     i2c_display_write_fixed@length:
  4741                           	opt stack 0
  4742  000067                     utoa@buf:
  4743                           	opt stack 0
  4744  000067                     memcpy@d:
  4745                           	opt stack 0
  4746                           
  4747                           ; 2 bytes @ 0x7
  4748  000067                     	ds	1
  4749  000068                     ??_spi_tx_rx:
  4750  000068                     ??_spi_tx_tx:
  4751  000068                     USBDeviceInit@i:
  4752                           	opt stack 0
  4753  000068                     USBTransferOnePacket@ep:
  4754                           	opt stack 0
  4755  000068                     MSDErrorHandler@ErrorCase:
  4756                           	opt stack 0
  4757  000068                     __i2c_write@slave_address:
  4758                           	opt stack 0
  4759  000068                     i2c_display_write_fixed@pos:
  4760                           	opt stack 0
  4761  000068                     __flash_wakeup@command:
  4762                           	opt stack 0
  4763  000068                     ExternalFlash_SectorWrite@allowWriteToZero:
  4764                           	opt stack 0
  4765  000068                     ___aldiv@counter:
  4766                           	opt stack 0
  4767  000068                     ___almod@counter:
  4768                           	opt stack 0
  4769  000068                     ___fltol@sign1:
  4770                           	opt stack 0
  4771  000068                     ___xxtofl@sign:
  4772                           	opt stack 0
  4773  000068                     ___lmul@product:
  4774                           	opt stack 0
  4775                           
  4776                           ; 4 bytes @ 0x8
  4777  000068                     	ds	1
  4778  000069                     MSDErrorHandler@OldMSD_State:
  4779                           	opt stack 0
  4780  000069                     __i2c_write@cntr:
  4781                           	opt stack 0
  4782  000069                     ___aldiv@sign:
  4783                           	opt stack 0
  4784  000069                     ___almod@sign:
  4785                           	opt stack 0
  4786  000069                     ___fltol@exp1:
  4787                           	opt stack 0
  4788  000069                     ___xxtofl@exp:
  4789                           	opt stack 0
  4790  000069                     USBTransferOnePacket@handle:
  4791                           	opt stack 0
  4792  000069                     utoa@val:
  4793                           	opt stack 0
  4794  000069                     memcpy@s:
  4795                           	opt stack 0
  4796                           
  4797                           ; 2 bytes @ 0x9
  4798  000069                     	ds	1
  4799  00006A                     ??_i2c_display_init:
  4800  00006A                     __ic2_display_set_ddram_address@address:
  4801                           	opt stack 0
  4802  00006A                     __motor_run@direction:
  4803                           	opt stack 0
  4804  00006A                     i2c_eeprom_writeByte@address:
  4805                           	opt stack 0
  4806  00006A                     __ic2_display_set_cgram_address@data_array:
  4807                           	opt stack 0
  4808  00006A                     MSDCheckForErrorCases@DeviceBytes:
  4809                           	opt stack 0
  4810  00006A                     ___aldiv@quotient:
  4811                           	opt stack 0
  4812  00006A                     ___xxtofl@arg:
  4813                           	opt stack 0
  4814                           
  4815                           ; 4 bytes @ 0xA
  4816  00006A                     	ds	1
  4817  00006B                     __ic2_display_set_ddram_address@data_array:
  4818                           	opt stack 0
  4819  00006B                     utoa@base:
  4820                           	opt stack 0
  4821  00006B                     i2c_display_init@init_sequence:
  4822                           	opt stack 0
  4823                           
  4824                           ; 9 bytes @ 0xB
  4825  00006B                     	ds	1
  4826  00006C                     ?__flash_get_status:
  4827                           	opt stack 0
  4828  00006C                     i2c_eeprom_writeByte@data:
  4829                           	opt stack 0
  4830  00006C                     __fill_buffer_get_display@cntr:
  4831                           	opt stack 0
  4832                           
  4833                           ; 1 bytes @ 0xC
  4834  00006C                     	ds	1
  4835  00006D                     ??_i2c_eeprom_writeByte:
  4836  00006D                     __ic2_display_set_cgram_address@address:
  4837                           	opt stack 0
  4838  00006D                     i2c_display_cursor@position:
  4839                           	opt stack 0
  4840  00006D                     __fill_buffer_get_display@line:
  4841                           	opt stack 0
  4842  00006D                     utoa@v:
  4843                           	opt stack 0
  4844                           
  4845                           ; 2 bytes @ 0xD
  4846  00006D                     	ds	1
  4847  00006E                     ?___fldiv:
  4848                           	opt stack 0
  4849  00006E                     ?___flmul:
  4850                           	opt stack 0
  4851  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  4852                           	opt stack 0
  4853  00006E                     i2c_display_cursor@line:
  4854                           	opt stack 0
  4855  00006E                     __flash_get_status@command:
  4856                           	opt stack 0
  4857  00006E                     __fill_buffer_get_display@start_line:
  4858                           	opt stack 0
  4859  00006E                     i2c_display_program_custom_character@bit_pattern:
  4860                           	opt stack 0
  4861  00006E                     ___fldiv@b:
  4862                           	opt stack 0
  4863  00006E                     ___flmul@b:
  4864                           	opt stack 0
  4865                           
  4866                           ; 4 bytes @ 0xE
  4867  00006E                     	ds	1
  4868  00006F                     MSDCheckForErrorCases@DeviceNoData:
  4869                           	opt stack 0
  4870  00006F                     i2c_display_cursor@address:
  4871                           	opt stack 0
  4872  00006F                     __fill_buffer_get_display@position:
  4873                           	opt stack 0
  4874  00006F                     utoa@c:
  4875                           	opt stack 0
  4876  00006F                     __flash_get_status@status:
  4877                           	opt stack 0
  4878                           
  4879                           ; 2 bytes @ 0xF
  4880  00006F                     	ds	1
  4881  000070                     ??_i2c_display_program_custom_character:
  4882  000070                     MSDCheckForErrorCases@MSDErrorCase:
  4883                           	opt stack 0
  4884  000070                     i2c_eeprom_writeByte@slave_address:
  4885                           	opt stack 0
  4886  000070                     display_update@line:
  4887                           	opt stack 0
  4888  000070                     itoa@buf:
  4889                           	opt stack 0
  4890                           
  4891                           ; 2 bytes @ 0x10
  4892  000070                     	ds	1
  4893  000071                     ??_MSDWriteHandler:
  4894  000071                     i2c_eeprom_writeByte@dat:
  4895                           	opt stack 0
  4896  000071                     __flash_is_busy@status:
  4897                           	opt stack 0
  4898                           
  4899                           ; 2 bytes @ 0x11
  4900  000071                     	ds	1
  4901  000072                     itoa@val:
  4902                           	opt stack 0
  4903  000072                     ___fldiv@a:
  4904                           	opt stack 0
  4905  000072                     ___flmul@a:
  4906                           	opt stack 0
  4907                           
  4908                           ; 4 bytes @ 0x12
  4909  000072                     	ds	1
  4910  000073                     flash_is_busy@result:
  4911                           	opt stack 0
  4912  000073                     __parse_command_short@cmd:
  4913                           	opt stack 0
  4914  000073                     __flash_compare_page_to_buffer@page:
  4915                           	opt stack 0
  4916  000073                     __flash_write_to_buffer@start:
  4917                           	opt stack 0
  4918  000073                     __flash_write_page_from_buffer@page:
  4919                           	opt stack 0
  4920  000073                     __flash_partial_read@page:
  4921                           	opt stack 0
  4922  000073                     __flash_set_page_size@command:
  4923                           	opt stack 0
  4924                           
  4925                           ; 4 bytes @ 0x13
  4926  000073                     	ds	1
  4927  000074                     __fill_buffer_get_status@outBuffer:
  4928                           	opt stack 0
  4929  000074                     itoa@base:
  4930                           	opt stack 0
  4931  000074                     i2c_display_program_custom_character@data_array:
  4932                           	opt stack 0
  4933                           
  4934                           ; 11 bytes @ 0x14
  4935  000074                     	ds	1
  4936  000075                     __flash_compare_page_to_buffer@buffer:
  4937                           	opt stack 0
  4938  000075                     __flash_write_page_from_buffer@buffer:
  4939                           	opt stack 0
  4940  000075                     __flash_write_to_buffer@data:
  4941                           	opt stack 0
  4942  000075                     __flash_partial_read@start:
  4943                           	opt stack 0
  4944                           
  4945                           ; 2 bytes @ 0x15
  4946  000075                     	ds	1
  4947  000076                     ??___fldiv:
  4948  000076                     ??___flmul:
  4949  000076                     ??__flash_compare_page_to_buffer:
  4950  000076                     ??__flash_write_page_from_buffer:
  4951  000076                     api_prepare@inBuffer:
  4952                           	opt stack 0
  4953  000076                     itoa@cp:
  4954                           	opt stack 0
  4955                           
  4956                           ; 2 bytes @ 0x16
  4957  000076                     	ds	1
  4958  000077                     __flash_set_page_size@size:
  4959                           	opt stack 0
  4960  000077                     __flash_write_to_buffer@data_length:
  4961                           	opt stack 0
  4962  000077                     __flash_partial_read@length:
  4963                           	opt stack 0
  4964                           
  4965                           ; 2 bytes @ 0x17
  4966  000077                     	ds	1
  4967  000078                     __display_padded_itoa@value:
  4968                           	opt stack 0
  4969  000078                     api_prepare@outBuffer:
  4970                           	opt stack 0
  4971                           
  4972                           ; 2 bytes @ 0x18
  4973  000078                     	ds	1
  4974  000079                     __flash_write_to_buffer@buffer:
  4975                           	opt stack 0
  4976  000079                     __flash_compare_page_to_buffer@status:
  4977                           	opt stack 0
  4978  000079                     __flash_partial_read@data:
  4979                           	opt stack 0
  4980  000079                     __flash_write_page_from_buffer@command:
  4981                           	opt stack 0
  4982                           
  4983                           ; 4 bytes @ 0x19
  4984  000079                     	ds	1
  4985  00007A                     __display_padded_itoa@length:
  4986                           	opt stack 0
  4987  00007A                     api_prepare@command:
  4988                           	opt stack 0
  4989  00007A                     ___flmul@sign:
  4990                           	opt stack 0
  4991  00007A                     __flash_write_to_buffer@command:
  4992                           	opt stack 0
  4993  00007A                     ___fldiv@rem:
  4994                           	opt stack 0
  4995                           
  4996                           ; 4 bytes @ 0x1A
  4997  00007A                     	ds	1
  4998  00007B                     ??__flash_partial_read:
  4999  00007B                     ___flmul@aexp:
  5000                           	opt stack 0
  5001  00007B                     __display_padded_itoa@text:
  5002                           	opt stack 0
  5003  00007B                     __flash_compare_page_to_buffer@command:
  5004                           	opt stack 0
  5005                           
  5006                           ; 4 bytes @ 0x1B
  5007  00007B                     	ds	1
  5008  00007C                     ___flmul@grs:
  5009                           	opt stack 0
  5010                           
  5011                           ; 4 bytes @ 0x1C
  5012  00007C                     	ds	1
  5013  00007D                     ??__display_padded_itoa:
  5014                           
  5015                           ; 1 bytes @ 0x1D
  5016  00007D                     	ds	1
  5017  00007E                     ___fldiv@sign:
  5018                           	opt stack 0
  5019                           
  5020                           ; 1 bytes @ 0x1E
  5021  00007E                     	ds	1
  5022  00007F                     i2c_display_program_custom_character@address:
  5023                           	opt stack 0
  5024  00007F                     flash_sector_write@page:
  5025                           	opt stack 0
  5026  00007F                     ___fldiv@new_exp:
  5027                           	opt stack 0
  5028  00007F                     __flash_partial_read@command:
  5029                           	opt stack 0
  5030                           
  5031                           ; 4 bytes @ 0x1F
  5032  00007F                     	ds	1
  5033  000080                     i2c_display_program_custom_character@cntr:
  5034                           	opt stack 0
  5035  000080                     ___flmul@bexp:
  5036                           	opt stack 0
  5037                           
  5038                           ; 1 bytes @ 0x20
  5039  000080                     	ds	1
  5040  000081                     flash_sector_write@data:
  5041                           	opt stack 0
  5042  000081                     ___fldiv@grs:
  5043                           	opt stack 0
  5044  000081                     ___flmul@prod:
  5045                           	opt stack 0
  5046                           
  5047                           ; 4 bytes @ 0x21
  5048  000081                     	ds	1
  5049  000082                     __display_padded_itoa@tmp:
  5050                           	opt stack 0
  5051                           
  5052                           ; 10 bytes @ 0x22
  5053  000082                     	ds	1
  5054  000083                     flash_sector_write@match:
  5055                           	opt stack 0
  5056  000083                     __flash_partial_read@address:
  5057                           	opt stack 0
  5058                           
  5059                           ; 4 bytes @ 0x23
  5060  000083                     	ds	1
  5061  000084                     fat_format@cntr:
  5062                           	opt stack 0
  5063                           
  5064                           ; 2 bytes @ 0x24
  5065  000084                     	ds	1
  5066  000085                     ___fldiv@bexp:
  5067                           	opt stack 0
  5068  000085                     ___flmul@temp:
  5069                           	opt stack 0
  5070                           
  5071                           ; 2 bytes @ 0x25
  5072  000085                     	ds	1
  5073  000086                     ___fldiv@aexp:
  5074                           	opt stack 0
  5075  000086                     __parse_format_drive@data:
  5076                           	opt stack 0
  5077                           
  5078                           ; 2 bytes @ 0x26
  5079  000086                     	ds	1
  5080  000087                     ?__motor_get_speed_in_degrees:
  5081                           	opt stack 0
  5082  000087                     ?_motor_steps_from_degrees:
  5083                           	opt stack 0
  5084  000087                     flash_sector_read@page:
  5085                           	opt stack 0
  5086  000087                     motor_steps_from_degrees@degrees:
  5087                           	opt stack 0
  5088  000087                     __motor_get_speed_in_degrees@speed_index:
  5089                           	opt stack 0
  5090                           
  5091                           ; 2 bytes @ 0x27
  5092  000087                     	ds	1
  5093  000088                     __parse_format_drive@out_buffer:
  5094                           	opt stack 0
  5095                           
  5096                           ; 2 bytes @ 0x28
  5097  000088                     	ds	1
  5098  000089                     ??__motor_get_speed_in_degrees:
  5099  000089                     flash_sector_read@data:
  5100                           	opt stack 0
  5101                           
  5102                           ; 2 bytes @ 0x29
  5103  000089                     	ds	1
  5104  00008A                     __parse_format_drive@out_idx_ptr:
  5105                           	opt stack 0
  5106                           
  5107                           ; 2 bytes @ 0x2A
  5108  00008A                     	ds	1
  5109  00008B                     ??_fat_get_format_status:
  5110  00008B                     ExternalFlash_SectorRead@config:
  5111                           	opt stack 0
  5112  00008B                     motor_steps_from_degrees@steps:
  5113                           	opt stack 0
  5114  00008B                     __motor_get_speed_in_degrees@speed:
  5115                           	opt stack 0
  5116                           
  5117                           ; 4 bytes @ 0x2B
  5118  00008B                     	ds	1
  5119  00008C                     ??__parse_format_drive:
  5120  00008C                     __display_padded_itoa@len:
  5121                           	opt stack 0
  5122                           
  5123                           ; 1 bytes @ 0x2C
  5124  00008C                     	ds	1
  5125  00008D                     __display_padded_itoa@pos:
  5126                           	opt stack 0
  5127  00008D                     __parse_format_drive@return_value:
  5128                           	opt stack 0
  5129  00008D                     fat_get_format_status@cntr:
  5130                           	opt stack 0
  5131  00008D                     ExternalFlash_SectorRead@sector_addr:
  5132                           	opt stack 0
  5133                           
  5134                           ; 4 bytes @ 0x2D
  5135  00008D                     	ds	1
  5136  00008E                     __display_padded_itoa@padding:
  5137                           	opt stack 0
  5138  00008E                     __parse_command_long@data:
  5139                           	opt stack 0
  5140                           
  5141                           ; 2 bytes @ 0x2E
  5142  00008E                     	ds	1
  5143  00008F                     ?_motor_nonzero_steps_from_degrees:
  5144                           	opt stack 0
  5145  00008F                     __display_signed_itoa@value:
  5146                           	opt stack 0
  5147  00008F                     motor_nonzero_steps_from_degrees@degrees:
  5148                           	opt stack 0
  5149  00008F                     __motor_get_speed_in_degrees@lookup:
  5150                           	opt stack 0
  5151                           
  5152                           ; 4 bytes @ 0x2F
  5153  00008F                     	ds	1
  5154  000090                     __parse_command_long@out_buffer:
  5155                           	opt stack 0
  5156                           
  5157                           ; 2 bytes @ 0x30
  5158  000090                     	ds	1
  5159  000091                     __display_signed_itoa@text:
  5160                           	opt stack 0
  5161  000091                     ExternalFlash_SectorRead@buffer:
  5162                           	opt stack 0
  5163                           
  5164                           ; 2 bytes @ 0x31
  5165  000091                     	ds	1
  5166  000092                     __parse_command_long@out_idx_ptr:
  5167                           	opt stack 0
  5168                           
  5169                           ; 2 bytes @ 0x32
  5170  000092                     	ds	1
  5171  000093                     ?_motor_speed_from_index:
  5172                           	opt stack 0
  5173  000093                     ExternalFlash_SectorRead@page:
  5174                           	opt stack 0
  5175  000093                     motor_speed_from_index@speed_index:
  5176                           	opt stack 0
  5177  000093                     motor_nonzero_steps_from_degrees@steps:
  5178                           	opt stack 0
  5179                           
  5180                           ; 4 bytes @ 0x33
  5181  000093                     	ds	1
  5182  000094                     __parse_command_long@length:
  5183                           	opt stack 0
  5184                           
  5185                           ; 1 bytes @ 0x34
  5186  000094                     	ds	1
  5187  000095                     ??_MSDReadHandler:
  5188  000095                     __display_itoa@value:
  5189                           	opt stack 0
  5190  000095                     api_parse@inBuffer:
  5191                           	opt stack 0
  5192                           
  5193                           ; 2 bytes @ 0x35
  5194  000095                     	ds	2
  5195  000097                     __display_itoa@decimals:
  5196                           	opt stack 0
  5197  000097                     api_parse@receivedDataLength:
  5198                           	opt stack 0
  5199  000097                     motor_schedule_command@distance_in_steps:
  5200                           	opt stack 0
  5201                           
  5202                           ; 4 bytes @ 0x37
  5203  000097                     	ds	1
  5204  000098                     __display_itoa@text:
  5205                           	opt stack 0
  5206  000098                     api_parse@outBuffer:
  5207                           	opt stack 0
  5208                           
  5209                           ; 2 bytes @ 0x38
  5210  000098                     	ds	1
  5211  000099                     ??_MSDProcessCommandMediaPresent:
  5212                           
  5213                           ; 1 bytes @ 0x39
  5214  000099                     	ds	1
  5215  00009A                     ??_api_parse:
  5216  00009A                     ??__display_itoa:
  5217                           
  5218                           ; 1 bytes @ 0x3A
  5219  00009A                     	ds	1
  5220  00009B                     _MSDProcessCommandMediaPresent$2606:
  5221                           	opt stack 0
  5222  00009B                     motor_schedule_command@speed:
  5223                           	opt stack 0
  5224                           
  5225                           ; 2 bytes @ 0x3B
  5226  00009B                     	ds	1
  5227  00009C                     api_parse@out_idx_ptr:
  5228                           	opt stack 0
  5229                           
  5230                           ; 2 bytes @ 0x3C
  5231  00009C                     	ds	1
  5232  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  5233                           	opt stack 0
  5234  00009D                     motor_schedule_command@direction:
  5235                           	opt stack 0
  5236                           
  5237                           ; 1 bytes @ 0x3D
  5238  00009D                     	ds	1
  5239  00009E                     ??_encoder_statemachine:
  5240  00009E                     api_parse@out_idx:
  5241                           	opt stack 0
  5242  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  5243                           	opt stack 0
  5244                           
  5245                           ; 4 bytes @ 0x3E
  5246  00009E                     	ds	1
  5247  00009F                     api_parse@in_idx:
  5248                           	opt stack 0
  5249                           
  5250                           ; 1 bytes @ 0x3F
  5251  00009F                     	ds	1
  5252  0000A0                     __display_itoa@tmp:
  5253                           	opt stack 0
  5254                           
  5255                           ; 10 bytes @ 0x40
  5256  0000A0                     	ds	2
  5257  0000A2                     MSDProcessCommandMediaPresent@capacity:
  5258                           	opt stack 0
  5259                           
  5260                           ; 4 bytes @ 0x42
  5261  0000A2                     	ds	4
  5262  0000A6                     MSDProcessCommandMediaPresent@i:
  5263                           	opt stack 0
  5264  0000A6                     encoder_statemachine@target_position_in_steps:
  5265                           	opt stack 0
  5266                           
  5267                           ; 4 bytes @ 0x46
  5268  0000A6                     	ds	1
  5269  0000A7                     ??_MSDProcessCommand:
  5270  0000A7                     
  5271                           ; 1 bytes @ 0x47
  5272  0000A7                     	ds	3
  5273  0000AA                     __display_itoa@len:
  5274                           	opt stack 0
  5275  0000AA                     encoder_statemachine@target_divide_position:
  5276                           	opt stack 0
  5277                           
  5278                           ; 2 bytes @ 0x4A
  5279  0000AA                     	ds	1
  5280  0000AB                     __display_itoa@missing:
  5281                           	opt stack 0
  5282                           
  5283                           ; 1 bytes @ 0x4B
  5284  0000AB                     	ds	1
  5285  0000AC                     ??_MSDTasks:
  5286  0000AC                     __display_itoa@pos:
  5287                           	opt stack 0
  5288  0000AC                     encoder_statemachine@distance_to_target_in_steps:
  5289                           	opt stack 0
  5290                           
  5291                           ; 4 bytes @ 0x4C
  5292  0000AC                     	ds	1
  5293  0000AD                     _MSDTasks$2588:
  5294                           	opt stack 0
  5295  0000AD                     __display_itoa_long@value:
  5296                           	opt stack 0
  5297                           
  5298                           ; 4 bytes @ 0x4D
  5299  0000AD                     	ds	2
  5300  0000AF                     _MSDTasks$2589:
  5301                           	opt stack 0
  5302                           
  5303                           ; 2 bytes @ 0x4F
  5304  0000AF                     	ds	1
  5305  0000B0                     encoder_statemachine@tmp:
  5306                           	opt stack 0
  5307                           
  5308                           ; 4 bytes @ 0x50
  5309  0000B0                     	ds	1
  5310  0000B1                     MSDTasks@i:
  5311                           	opt stack 0
  5312  0000B1                     __display_itoa_long@decimals:
  5313                           	opt stack 0
  5314                           
  5315                           ; 1 bytes @ 0x51
  5316  0000B1                     	ds	1
  5317  0000B2                     __display_itoa_long@text:
  5318                           	opt stack 0
  5319                           
  5320                           ; 2 bytes @ 0x52
  5321  0000B2                     	ds	2
  5322  0000B4                     ??__display_itoa_long:
  5323                           
  5324                           ; 1 bytes @ 0x54
  5325  0000B4                     	ds	4
  5326  0000B8                     __display_itoa_long@length:
  5327                           	opt stack 0
  5328                           
  5329                           ; 1 bytes @ 0x58
  5330  0000B8                     	ds	1
  5331  0000B9                     __display_itoa_long@short_value:
  5332                           	opt stack 0
  5333                           
  5334                           ; 2 bytes @ 0x59
  5335  0000B9                     	ds	2
  5336  0000BB                     __display_itoa_long@last_digit:
  5337                           	opt stack 0
  5338                           
  5339                           ; 1 bytes @ 0x5B
  5340  0000BB                     	ds	1
  5341  0000BC                     ??_display_prepare:
  5342                           
  5343                           ; 1 bytes @ 0x5C
  5344  0000BC                     	ds	2
  5345  0000BE                     display_prepare@temp:
  5346                           	opt stack 0
  5347                           
  5348                           ; 10 bytes @ 0x5E
  5349  0000BE                     	ds	10
  5350  0000C8                     display_prepare@space:
  5351                           	opt stack 0
  5352                           
  5353                           ; 1 bytes @ 0x68
  5354  0000C8                     	ds	1
  5355  0000C9                     display_prepare@cntr:
  5356                           	opt stack 0
  5357                           
  5358                           ; 1 bytes @ 0x69
  5359  0000C9                     	ds	1
  5360  0000CA                     tblptru	equ	0xFF8
  5361                           tblptrh	equ	0xFF7
  5362                           tblptrl	equ	0xFF6
  5363                           tablat	equ	0xFF5
  5364                           postinc0	equ	0xFEE
  5365                           wreg	equ	0xFE8
  5366                           postdec1	equ	0xFE5
  5367                           fsr1h	equ	0xFE2
  5368                           fsr1l	equ	0xFE1
  5369                           
  5370                           ; 1 bytes @ 0x6A
  5371                           
  5372                           	psect	cstackCOMRAM
  5373  00002E                     __pcstackCOMRAM:
  5374                           	opt stack 0
  5375  00002E                     ??_motor_isr:
  5376  00002E                     ??_USBStdGetDscHandler:
  5377  00002E                     ??_USBStdGetStatusHandler:
  5378  00002E                     ?i2_USBTransferOnePacket:
  5379                           	opt stack 0
  5380  00002E                     ?i2_ExternalFlash_MediaInitialize:
  5381                           	opt stack 0
  5382  00002E                     USBConfigureEndpoint@direction:
  5383                           	opt stack 0
  5384  00002E                     USBCtrlTrfTxService@byteToSend:
  5385                           	opt stack 0
  5386  00002E                     USBCtrlTrfRxService@i:
  5387                           	opt stack 0
  5388  00002E                     i2USBTransferOnePacket@dir:
  5389                           	opt stack 0
  5390  00002E                     i2USBStallEndpoint@dir:
  5391                           	opt stack 0
  5392  00002E                     i2SYSTEM_Initialize@pll_startup_counter:
  5393                           	opt stack 0
  5394  00002E                     i2ExternalFlash_MediaInitialize@config:
  5395                           	opt stack 0
  5396  00002E                     i2ExternalFlash_MediaDetect@config:
  5397                           	opt stack 0
  5398  00002E                     i2memcpy@d1:
  5399                           	opt stack 0
  5400  00002E                     i2memset@p1:
  5401                           	opt stack 0
  5402                           
  5403                           ; 2 bytes @ 0x0
  5404  00002E                     	ds	1
  5405  00002F                     ??_USBConfigureEndpoint:
  5406  00002F                     ??i2_USBStallEndpoint:
  5407  00002F                     USBCtrlTrfRxService@byteToRead:
  5408                           	opt stack 0
  5409  00002F                     USBCtrlTrfInHandler@lastDTS:
  5410                           	opt stack 0
  5411  00002F                     USBStdGetStatusHandler@p:
  5412                           	opt stack 0
  5413  00002F                     i2USBTransferOnePacket@data:
  5414                           	opt stack 0
  5415                           
  5416                           ; 2 bytes @ 0x1
  5417  00002F                     	ds	1
  5418  000030                     i2SYSTEM_Initialize@pll_startup_counter_3095:
  5419                           	opt stack 0
  5420  000030                     i2memcpy@s1:
  5421                           	opt stack 0
  5422  000030                     i2memset@c:
  5423                           	opt stack 0
  5424                           
  5425                           ; 2 bytes @ 0x2
  5426  000030                     	ds	1
  5427  000031                     i2USBTransferOnePacket@len:
  5428                           	opt stack 0
  5429                           
  5430                           ; 1 bytes @ 0x3
  5431  000031                     	ds	1
  5432  000032                     ??i2_USBTransferOnePacket:
  5433  000032                     i2SYSTEM_Initialize@state:
  5434                           	opt stack 0
  5435  000032                     i2memcpy@n:
  5436                           	opt stack 0
  5437  000032                     i2memset@n:
  5438                           	opt stack 0
  5439                           
  5440                           ; 2 bytes @ 0x4
  5441  000032                     	ds	1
  5442  000033                     USBConfigureEndpoint@EPNum:
  5443                           	opt stack 0
  5444  000033                     i2USBStallEndpoint@ep:
  5445                           	opt stack 0
  5446                           
  5447                           ; 1 bytes @ 0x5
  5448  000033                     	ds	1
  5449  000034                     USBConfigureEndpoint@handle:
  5450                           	opt stack 0
  5451  000034                     i2USBStallEndpoint@p:
  5452                           	opt stack 0
  5453  000034                     i2memcpy@d:
  5454                           	opt stack 0
  5455  000034                     i2memset@p:
  5456                           	opt stack 0
  5457                           
  5458                           ; 2 bytes @ 0x6
  5459  000034                     	ds	2
  5460  000036                     USBEnableEndpoint@options:
  5461                           	opt stack 0
  5462  000036                     i2USBDeviceInit@i:
  5463                           	opt stack 0
  5464  000036                     i2USBTransferOnePacket@ep:
  5465                           	opt stack 0
  5466  000036                     i2memcpy@s:
  5467                           	opt stack 0
  5468                           
  5469                           ; 2 bytes @ 0x8
  5470  000036                     	ds	1
  5471  000037                     USBEnableEndpoint@p:
  5472                           	opt stack 0
  5473  000037                     i2USBTransferOnePacket@handle:
  5474                           	opt stack 0
  5475                           
  5476                           ; 2 bytes @ 0x9
  5477  000037                     	ds	1
  5478  000038                     i2memcpy@tmp:
  5479                           	opt stack 0
  5480                           
  5481                           ; 1 bytes @ 0xA
  5482  000038                     	ds	1
  5483  000039                     ??_USBMSDInit:
  5484  000039                     USBEnableEndpoint@ep:
  5485                           	opt stack 0
  5486  000039                     _USBCheckMSDRequest$2534:
  5487                           	opt stack 0
  5488  000039                     MSDTransferTerminated@handle:
  5489                           	opt stack 0
  5490                           
  5491                           ; 2 bytes @ 0xB
  5492  000039                     	ds	1
  5493  00003A                     
  5494                           ; 1 bytes @ 0xC
  5495  00003A                     	ds	1
  5496  00003B                     _USBCheckMSDRequest$2535:
  5497                           	opt stack 0
  5498  00003B                     _MSDTransferTerminated$2623:
  5499                           	opt stack 0
  5500                           
  5501                           ; 2 bytes @ 0xD
  5502  00003B                     	ds	1
  5503  00003C                     
  5504                           ; 1 bytes @ 0xE
  5505  00003C                     	ds	1
  5506  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  5507                           	opt stack 0
  5508                           
  5509                           ; 2 bytes @ 0xF
  5510  00003D                     	ds	1
  5511  00003E                     motor_isr@steps_until_standstill:
  5512                           	opt stack 0
  5513                           
  5514                           ; 2 bytes @ 0x10
  5515  00003E                     	ds	1
  5516  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  5517                           	opt stack 0
  5518                           
  5519                           ; 2 bytes @ 0x11
  5520  00003F                     	ds	1
  5521  000040                     motor_isr@steps_until_standstill_if_accelerate:
  5522                           	opt stack 0
  5523                           
  5524                           ; 2 bytes @ 0x12
  5525  000040                     	ds	1
  5526  000041                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  5527                           	opt stack 0
  5528                           
  5529                           ; 2 bytes @ 0x13
  5530  000041                     	ds	1
  5531  000042                     motor_isr@steps_remaining:
  5532                           	opt stack 0
  5533                           
  5534                           ; 4 bytes @ 0x14
  5535  000042                     	ds	1
  5536  000043                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  5537                           
  5538                           ; 1 bytes @ 0x15
  5539  000043                     	ds	2
  5540  000045                     ??_USBStdFeatureReqHandler:
  5541  000045                     USBStdSetCfgHandler@i:
  5542                           	opt stack 0
  5543                           
  5544                           ; 1 bytes @ 0x17
  5545  000045                     	ds	1
  5546  000046                     USBStdFeatureReqHandler@pUEP:
  5547                           	opt stack 0
  5548                           
  5549                           ; 2 bytes @ 0x18
  5550  000046                     	ds	2
  5551  000048                     USBStdFeatureReqHandler@current_ep_data:
  5552                           	opt stack 0
  5553                           
  5554                           ; 1 bytes @ 0x1A
  5555  000048                     	ds	1
  5556  000049                     USBStdFeatureReqHandler@p:
  5557                           	opt stack 0
  5558                           
  5559                           ; 2 bytes @ 0x1B
  5560  000049                     	ds	2
  5561  00004B                     ??_USBCtrlEPService:
  5562  00004B                     
  5563                           ; 1 bytes @ 0x1D
  5564  00004B                     	ds	1
  5565  00004C                     USBDeviceTasks@i:
  5566                           	opt stack 0
  5567                           
  5568                           ; 1 bytes @ 0x1E
  5569  00004C                     	ds	1
  5570  00004D                     ??_SYS_InterruptHigh:
  5571                           
  5572                           ; 1 bytes @ 0x1F
  5573  00004D                     	ds	14
  5574                           tblptru	equ	0xFF8
  5575                           tblptrh	equ	0xFF7
  5576                           tblptrl	equ	0xFF6
  5577                           tablat	equ	0xFF5
  5578                           postinc0	equ	0xFEE
  5579                           wreg	equ	0xFE8
  5580                           postdec1	equ	0xFE5
  5581                           fsr1h	equ	0xFE2
  5582                           fsr1l	equ	0xFE1
  5583                           
  5584 ;;
  5585 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5586 ;;
  5587 ;; *************** function _main *****************
  5588 ;; Defined at:
  5589 ;;		line 52 in file "main.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;		None
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  tmp             4    0[BANK2 ] float 
  5594 ;;  startup_time    1    0        unsigned char 
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  1    wreg      void 
  5597 ;; Registers used:
  5598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5605 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
  5606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5607 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
  5608 ;;Total ram usage:        4 bytes
  5609 ;; Hardware stack levels required when called:   22
  5610 ;; This function calls:
  5611 ;;		_APP_DeviceCustomHIDTasks
  5612 ;;		_APP_DeviceMSDTasks
  5613 ;;		_SYSTEM_Initialize
  5614 ;;		_USBDeviceAttach
  5615 ;;		_USBDeviceInit
  5616 ;;		___fldiv
  5617 ;;		___flmul
  5618 ;;		___fltol
  5619 ;;		___xxtofl
  5620 ;;		_display_prepare
  5621 ;;		_display_update
  5622 ;;		_encoder_statemachine
  5623 ;;		_motor_process_cue
  5624 ;;		_system_init
  5625 ;; This function is called by:
  5626 ;;		Startup code after reset
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           	psect	text0
  5631  00E6E0                     __ptext0:
  5632                           	opt stack 0
  5633  00E6E0                     _main:
  5634                           	opt stack 9
  5635                           
  5636                           ;main.c: 54: uint8_t startup_timer;;main.c: 55: float tmp;;main.c: 58: system_init();
  5637                           
  5638                           ;incstack = 0
  5639  00E6E0  EC21  F07C         	call	_system_init	;wreg free
  5640                           
  5641                           ;main.c: 60: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  5642  00E6E4  0E00               	movlw	0
  5643  00E6E6  ECEF  F08A         	call	_SYSTEM_Initialize
  5644                           
  5645                           ;main.c: 62: USBDeviceInit();
  5646  00E6EA  ECE5  F070         	call	_USBDeviceInit	;wreg free
  5647                           
  5648                           ;main.c: 63: USBDeviceAttach();
  5649  00E6EE  ECB2  F08F         	call	_USBDeviceAttach	;wreg free
  5650  00E6F2                     
  5651                           ;main.c: 66: {;main.c: 68: APP_DeviceMSDTasks();
  5652  00E6F2  EC73  F091         	call	_APP_DeviceMSDTasks	;wreg free
  5653                           
  5654                           ;main.c: 70: if(!os.done)
  5655  00E6F6  0100               	movlb	0	; () banked
  5656  00E6F8  51CC               	movf	(_os+2)& (0+255),w,b	;volatile
  5657  00E6FA  A4D8               	btfss	status,2,c
  5658  00E6FC  D7FA               	goto	l857
  5659                           
  5660                           ; BSR set to: 0
  5661  00E6FE  0004               	clrwdt		;# 
  5662                           
  5663                           ;main.c: 76: APP_DeviceCustomHIDTasks();
  5664  00E700  ECF0  F083         	call	_APP_DeviceCustomHIDTasks	;wreg free
  5665                           
  5666                           ;main.c: 79: encoder_statemachine();
  5667  00E704  EC1C  F051         	call	_encoder_statemachine	;wreg free
  5668                           
  5669                           ;main.c: 82: motor_process_cue();
  5670  00E708  ECE3  F087         	call	_motor_process_cue	;wreg free
  5671                           
  5672                           ;main.c: 85: switch(os.timeSlot)
  5673  00E70C  D073               	goto	l859
  5674  00E70E                     
  5675                           ;main.c: 89: tmp = (float) os.current_position_in_steps;
  5676  00E70E  C0D1  F060         	movff	_os+7,___xxtofl@val	;volatile
  5677  00E712  C0D2  F061         	movff	_os+8,___xxtofl@val+1	;volatile
  5678  00E716  C0D3  F062         	movff	_os+9,___xxtofl@val+2	;volatile
  5679  00E71A  C0D4  F063         	movff	_os+10,___xxtofl@val+3	;volatile
  5680  00E71E  0E00               	movlw	0
  5681  00E720  EC8A  F071         	call	___xxtofl
  5682  00E724  C060  F2D2         	movff	?___xxtofl,main@tmp
  5683  00E728  C061  F2D3         	movff	?___xxtofl+1,main@tmp+1
  5684  00E72C  C062  F2D4         	movff	?___xxtofl+2,main@tmp+2
  5685  00E730  C063  F2D5         	movff	?___xxtofl+3,main@tmp+3
  5686                           
  5687                           ;main.c: 90: tmp *= 36000;
  5688  00E734  C2D2  F06E         	movff	main@tmp,___flmul@b
  5689  00E738  C2D3  F06F         	movff	main@tmp+1,___flmul@b+1
  5690  00E73C  C2D4  F070         	movff	main@tmp+2,___flmul@b+2
  5691  00E740  C2D5  F071         	movff	main@tmp+3,___flmul@b+3
  5692  00E744  0E00               	movlw	0
  5693  00E746  0100               	movlb	0	; () banked
  5694  00E748  6F72               	movwf	___flmul@a& (0+255),b
  5695  00E74A  0EA0               	movlw	160
  5696  00E74C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5697  00E74E  0E0C               	movlw	12
  5698  00E750  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5699  00E752  0E47               	movlw	71
  5700  00E754  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5701  00E756  ECF5  F063         	call	___flmul	;wreg free
  5702  00E75A  C06E  F2D2         	movff	?___flmul,main@tmp
  5703  00E75E  C06F  F2D3         	movff	?___flmul+1,main@tmp+1
  5704  00E762  C070  F2D4         	movff	?___flmul+2,main@tmp+2
  5705  00E766  C071  F2D5         	movff	?___flmul+3,main@tmp+3
  5706                           
  5707                           ;main.c: 91: tmp /= config.full_circle_in_steps;
  5708  00E76A  C2D2  F06E         	movff	main@tmp,___fldiv@b
  5709  00E76E  C2D3  F06F         	movff	main@tmp+1,___fldiv@b+1
  5710  00E772  C2D4  F070         	movff	main@tmp+2,___fldiv@b+2
  5711  00E776  C2D5  F071         	movff	main@tmp+3,___fldiv@b+3
  5712  00E77A  C11F  F060         	movff	_config,___xxtofl@val
  5713  00E77E  C120  F061         	movff	_config+1,___xxtofl@val+1
  5714  00E782  C121  F062         	movff	_config+2,___xxtofl@val+2
  5715  00E786  C122  F063         	movff	_config+3,___xxtofl@val+3
  5716  00E78A  0E00               	movlw	0
  5717  00E78C  EC8A  F071         	call	___xxtofl
  5718  00E790  C060  F072         	movff	?___xxtofl,___fldiv@a
  5719  00E794  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
  5720  00E798  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
  5721  00E79C  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
  5722  00E7A0  EC0C  F067         	call	___fldiv	;wreg free
  5723  00E7A4  C06E  F2D2         	movff	?___fldiv,main@tmp
  5724  00E7A8  C06F  F2D3         	movff	?___fldiv+1,main@tmp+1
  5725  00E7AC  C070  F2D4         	movff	?___fldiv+2,main@tmp+2
  5726  00E7B0  C071  F2D5         	movff	?___fldiv+3,main@tmp+3
  5727                           
  5728                           ;main.c: 93: os.current_position_in_degrees = (uint16_t) tmp;
  5729  00E7B4  C2D2  F060         	movff	main@tmp,___fltol@f1
  5730  00E7B8  C2D3  F061         	movff	main@tmp+1,___fltol@f1+1
  5731  00E7BC  C2D4  F062         	movff	main@tmp+2,___fltol@f1+2
  5732  00E7C0  C2D5  F063         	movff	main@tmp+3,___fltol@f1+3
  5733  00E7C4  EC05  F07D         	call	___fltol	;wreg free
  5734  00E7C8  C060  F0D5         	movff	?___fltol,_os+11	;volatile
  5735  00E7CC  C061  F0D6         	movff	?___fltol+1,_os+12	;volatile
  5736                           
  5737                           ;main.c: 94: if(os.current_position_in_degrees==36000)
  5738  00E7D0  0EA0               	movlw	160
  5739  00E7D2  0100               	movlb	0	; () banked
  5740  00E7D4  19D5               	xorwf	(_os+11)& (0+255),w,b	;volatile
  5741  00E7D6  E108               	bnz	l21452
  5742  00E7D8  0E8C               	movlw	140
  5743  00E7DA  19D6               	xorwf	(_os+12)& (0+255),w,b	;volatile
  5744  00E7DC  A4D8               	btfss	status,2,c
  5745  00E7DE  D004               	goto	l861
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;main.c: 95: {;main.c: 97: os.current_position_in_degrees = 0;
  5749  00E7E0  0E00               	movlw	0
  5750  00E7E2  6FD6               	movwf	(_os+12)& (0+255),b	;volatile
  5751  00E7E4  0E00               	movlw	0
  5752  00E7E6  6FD5               	movwf	(_os+11)& (0+255),b	;volatile
  5753  00E7E8                     l861:
  5754  00E7E8                     l21452:
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;main.c: 101: display_prepare();
  5758  00E7E8  EC0B  F059         	call	_display_prepare	;wreg free
  5759                           
  5760                           ;main.c: 102: break;
  5761  00E7EC  D014               	goto	l863
  5762  00E7EE                     
  5763                           ;main.c: 105: display_update();
  5764  00E7EE  EC12  F08F         	call	_display_update	;wreg free
  5765                           
  5766                           ;main.c: 115: }
  5767                           
  5768                           ;main.c: 114: break;
  5769                           
  5770                           ;main.c: 112: case 1:
  5771                           
  5772                           ;main.c: 110: break;
  5773                           
  5774                           ;main.c: 108: case 0:
  5775                           
  5776                           ;main.c: 106: break;
  5777  00E7F2  D011               	goto	l863
  5778  00E7F4                     l859:
  5779  00E7F4  0100               	movlb	0	; () banked
  5780  00E7F6  51CB               	movf	(_os+1)& (0+255),w,b	;volatile
  5781                           
  5782                           ; Switch size 1, requested type "space"
  5783                           ; Number of cases is 5, Range of values is 0 to 7
  5784                           ; switch strategies available:
  5785                           ; Name         Instructions Cycles
  5786                           ; simple_byte           16     9 (average)
  5787                           ;	Chosen strategy is simple_byte
  5788  00E7F8  0A00               	xorlw	0	; case 0
  5789  00E7FA  B4D8               	btfsc	status,2,c
  5790  00E7FC  D00C               	goto	l863
  5791  00E7FE  0A01               	xorlw	1	; case 1
  5792  00E800  B4D8               	btfsc	status,2,c
  5793  00E802  D009               	goto	l863
  5794  00E804  0A04               	xorlw	4	; case 5
  5795  00E806  B4D8               	btfsc	status,2,c
  5796  00E808  D782               	goto	l860
  5797  00E80A  0A03               	xorlw	3	; case 6
  5798  00E80C  B4D8               	btfsc	status,2,c
  5799  00E80E  D7EC               	goto	l861
  5800  00E810  0A01               	xorlw	1	; case 7
  5801  00E812  B4D8               	btfsc	status,2,c
  5802  00E814  D7EC               	goto	l864
  5803  00E816                     l863:
  5804                           
  5805                           ;main.c: 117: os.done = 1;
  5806                           
  5807                           ; BSR set to: 0
  5808  00E816  0E01               	movlw	1
  5809  00E818  0100               	movlb	0	; () banked
  5810  00E81A  6FCC               	movwf	(_os+2)& (0+255),b	;volatile
  5811                           
  5812                           ; BSR set to: 0
  5813                           
  5814                           ; BSR set to: 0
  5815  00E81C  D76A               	goto	l857
  5816  00E81E                     __end_of_main:
  5817                           	opt stack 0
  5818                           tblptru	equ	0xFF8
  5819                           tblptrh	equ	0xFF7
  5820                           tblptrl	equ	0xFF6
  5821                           tablat	equ	0xFF5
  5822                           postinc0	equ	0xFEE
  5823                           wreg	equ	0xFE8
  5824                           postdec1	equ	0xFE5
  5825                           fsr1h	equ	0xFE2
  5826                           fsr1l	equ	0xFE1
  5827                           status	equ	0xFD8
  5828                           
  5829 ;; *************** function _system_init *****************
  5830 ;; Defined at:
  5831 ;;		line 191 in file "os.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;		None
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;		None
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      void 
  5838 ;; Registers used:
  5839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5849 ;;Total ram usage:        0 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; Hardware stack levels required when called:   17
  5852 ;; This function calls:
  5853 ;;		__backlight_init
  5854 ;;		__system_pin_setup
  5855 ;;		__system_timer0_init
  5856 ;;		_display_init
  5857 ;;		_display_update
  5858 ;;		_encoder_init
  5859 ;;		_fat_init
  5860 ;;		_flash_init
  5861 ;;		_i2c_init
  5862 ;;		_motor_init
  5863 ;; This function is called by:
  5864 ;;		_main
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868                           	psect	text1
  5869  00F842                     __ptext1:
  5870                           	opt stack 0
  5871  00F842                     _system_init:
  5872                           	opt stack 13
  5873                           
  5874                           ;os.c: 194: _system_pin_setup();
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;incstack = 0
  5878  00F842  EC36  F089         	call	__system_pin_setup	;wreg free
  5879                           
  5880                           ;os.c: 197: flash_init();
  5881  00F846  EC8C  F091         	call	_flash_init	;wreg free
  5882                           
  5883                           ;os.c: 200: fat_init();
  5884  00F84A  EC7C  F091         	call	_fat_init	;wreg free
  5885                           
  5886                           ;os.c: 203: encoder_init();
  5887  00F84E  ECBF  F090         	call	_encoder_init	;wreg free
  5888                           
  5889                           ;os.c: 206: i2c_init();
  5890  00F852  EC36  F091         	call	_i2c_init	;wreg free
  5891                           
  5892                           ;os.c: 209: display_init();
  5893  00F856  EC2E  F08F         	call	_display_init	;wreg free
  5894                           
  5895                           ;os.c: 210: display_update();
  5896  00F85A  EC12  F08F         	call	_display_update	;wreg free
  5897                           
  5898                           ;os.c: 211: _backlight_init();
  5899  00F85E  ECBC  F091         	call	__backlight_init	;wreg free
  5900                           
  5901                           ;os.c: 214: motor_init();
  5902  00F862  EC27  F091         	call	_motor_init	;wreg free
  5903                           
  5904                           ;os.c: 217: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  5905  00F866  0E01               	movlw	1
  5906  00F868  0100               	movlb	0	; () banked
  5907  00F86A  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;os.c: 218: os.busy = 0;
  5911  00F86C  0E00               	movlw	0
  5912  00F86E  6FD8               	movwf	(_os+14)& (0+255),b	;volatile
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;os.c: 219: os.current_position_in_steps = 0;
  5916  00F870  0E00               	movlw	0
  5917  00F872  6FD1               	movwf	(_os+7)& (0+255),b	;volatile
  5918  00F874  0E00               	movlw	0
  5919  00F876  6FD2               	movwf	(_os+8)& (0+255),b	;volatile
  5920  00F878  0E00               	movlw	0
  5921  00F87A  6FD3               	movwf	(_os+9)& (0+255),b	;volatile
  5922  00F87C  0E00               	movlw	0
  5923  00F87E  6FD4               	movwf	(_os+10)& (0+255),b	;volatile
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;os.c: 220: os.last_approach_direction = MOTOR_DIRECTION_CW;
  5927  00F880  0E01               	movlw	1
  5928  00F882  6FD9               	movwf	(_os+15)& (0+255),b	;volatile
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;os.c: 221: os.setup_step_size = 1000;
  5932  00F884  0E03               	movlw	3
  5933  00F886  6FDB               	movwf	(_os+17)& (0+255),b	;volatile
  5934  00F888  0EE8               	movlw	232
  5935  00F88A  6FDA               	movwf	(_os+16)& (0+255),b	;volatile
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;os.c: 222: os.approach_direction = MOTOR_DIRECTION_CW;
  5939  00F88C  0E01               	movlw	1
  5940  00F88E  6FDC               	movwf	(_os+18)& (0+255),b	;volatile
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;os.c: 223: os.division = 36;
  5944  00F890  0E00               	movlw	0
  5945  00F892  6FDE               	movwf	(_os+20)& (0+255),b	;volatile
  5946  00F894  0E24               	movlw	36
  5947  00F896  6FDD               	movwf	(_os+19)& (0+255),b	;volatile
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;os.c: 224: os.divide_step_size = 10;
  5951  00F898  0E0A               	movlw	10
  5952  00F89A  6FDF               	movwf	(_os+21)& (0+255),b	;volatile
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;os.c: 225: os.divide_position = 0;
  5956  00F89C  0E00               	movlw	0
  5957  00F89E  6FE1               	movwf	(_os+23)& (0+255),b	;volatile
  5958  00F8A0  0E00               	movlw	0
  5959  00F8A2  6FE0               	movwf	(_os+22)& (0+255),b	;volatile
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;os.c: 226: os.divide_jump_size = 1;
  5963  00F8A4  0E00               	movlw	0
  5964  00F8A6  6FE3               	movwf	(_os+25)& (0+255),b	;volatile
  5965  00F8A8  0E01               	movlw	1
  5966  00F8AA  6FE2               	movwf	(_os+24)& (0+255),b	;volatile
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;os.c: 227: os.arc_step_size = 1000;
  5970  00F8AC  0E03               	movlw	3
  5971  00F8AE  6FE5               	movwf	(_os+27)& (0+255),b	;volatile
  5972  00F8B0  0EE8               	movlw	232
  5973  00F8B2  6FE4               	movwf	(_os+26)& (0+255),b	;volatile
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;os.c: 228: os.arc_size = 1000;
  5977  00F8B4  0EE8               	movlw	232
  5978  00F8B6  6FE6               	movwf	(_os+28)& (0+255),b	;volatile
  5979  00F8B8  0E03               	movlw	3
  5980  00F8BA  6FE7               	movwf	(_os+29)& (0+255),b	;volatile
  5981  00F8BC  0E00               	movlw	0
  5982  00F8BE  6FE8               	movwf	(_os+30)& (0+255),b	;volatile
  5983  00F8C0  0E00               	movlw	0
  5984  00F8C2  6FE9               	movwf	(_os+31)& (0+255),b	;volatile
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;os.c: 229: os.arc_speed = 30;
  5988  00F8C4  0E00               	movlw	0
  5989  00F8C6  6FEB               	movwf	(_os+33)& (0+255),b	;volatile
  5990  00F8C8  0E1E               	movlw	30
  5991  00F8CA  6FEA               	movwf	(_os+32)& (0+255),b	;volatile
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;os.c: 230: os.arc_direction = MOTOR_DIRECTION_CW;
  5995  00F8CC  0E01               	movlw	1
  5996  00F8CE  6FEC               	movwf	(_os+34)& (0+255),b	;volatile
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;os.c: 231: os.manual_speed = 30;
  6000  00F8D0  0E00               	movlw	0
  6001  00F8D2  6FEE               	movwf	(_os+36)& (0+255),b	;volatile
  6002  00F8D4  0E1E               	movlw	30
  6003  00F8D6  6FED               	movwf	(_os+35)& (0+255),b	;volatile
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;os.c: 232: os.manual_direction = MOTOR_DIRECTION_CW;
  6007  00F8D8  0E01               	movlw	1
  6008  00F8DA  6FEF               	movwf	(_os+37)& (0+255),b	;volatile
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;os.c: 233: os.beep_count = 0;
  6012  00F8DC  0E00               	movlw	0
  6013  00F8DE  6FF0               	movwf	(_os+38)& (0+255),b	;volatile
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;os.c: 235: config.full_circle_in_steps = 576000;
  6017  00F8E0  0E00               	movlw	0
  6018  00F8E2  0101               	movlb	1	; () banked
  6019  00F8E4  6F1F               	movwf	_config& (0+255),b
  6020  00F8E6  0ECA               	movlw	202
  6021  00F8E8  6F20               	movwf	(_config+1)& (0+255),b
  6022  00F8EA  0E08               	movlw	8
  6023  00F8EC  6F21               	movwf	(_config+2)& (0+255),b
  6024  00F8EE  0E00               	movlw	0
  6025  00F8F0  6F22               	movwf	(_config+3)& (0+255),b
  6026                           
  6027                           ; BSR set to: 1
  6028                           ;os.c: 236: config.inverse_direction = 1;
  6029  00F8F2  0E01               	movlw	1
  6030  00F8F4  6F23               	movwf	(_config+4)& (0+255),b
  6031                           
  6032                           ; BSR set to: 1
  6033                           ;os.c: 237: config.overshoot_in_steps = 6400;
  6034  00F8F6  0E19               	movlw	25
  6035  00F8F8  6F25               	movwf	(_config+6)& (0+255),b
  6036  00F8FA  0E00               	movlw	0
  6037  00F8FC  6F24               	movwf	(_config+5)& (0+255),b
  6038                           
  6039                           ; BSR set to: 1
  6040                           ;os.c: 238: config.minimum_speed = 1;
  6041  00F8FE  0E00               	movlw	0
  6042  00F900  6F27               	movwf	(_config+8)& (0+255),b
  6043  00F902  0E01               	movlw	1
  6044  00F904  6F26               	movwf	(_config+7)& (0+255),b
  6045                           
  6046                           ; BSR set to: 1
  6047                           ;os.c: 239: config.maximum_speed = 380;
  6048  00F906  0E01               	movlw	1
  6049  00F908  6F29               	movwf	(_config+10)& (0+255),b
  6050  00F90A  0E7C               	movlw	124
  6051  00F90C  6F28               	movwf	(_config+9)& (0+255),b
  6052                           
  6053                           ; BSR set to: 1
  6054                           ;os.c: 240: config.maximum_speed_arc = 305;
  6055  00F90E  0E01               	movlw	1
  6056  00F910  6F2D               	movwf	(_config+14)& (0+255),b
  6057  00F912  0E31               	movlw	49
  6058  00F914  6F2C               	movwf	(_config+13)& (0+255),b
  6059                           
  6060                           ; BSR set to: 1
  6061                           ;os.c: 241: config.maximum_speed_manual = 305;
  6062  00F916  0E01               	movlw	1
  6063  00F918  6F31               	movwf	(_config+18)& (0+255),b
  6064  00F91A  0E31               	movlw	49
  6065  00F91C  6F30               	movwf	(_config+17)& (0+255),b
  6066                           
  6067                           ; BSR set to: 1
  6068                           ;os.c: 242: config.beep_duration = 30;
  6069  00F91E  0E1E               	movlw	30
  6070  00F920  6F32               	movwf	(_config+19)& (0+255),b
  6071                           
  6072                           ; BSR set to: 1
  6073                           ;os.c: 245: _system_timer0_init();
  6074  00F922  EC41  F090         	call	__system_timer0_init	;wreg free
  6075  00F926  0012               	return		;funcret
  6076  00F928                     __end_of_system_init:
  6077                           	opt stack 0
  6078                           tblptru	equ	0xFF8
  6079                           tblptrh	equ	0xFF7
  6080                           tblptrl	equ	0xFF6
  6081                           tablat	equ	0xFF5
  6082                           postinc0	equ	0xFEE
  6083                           wreg	equ	0xFE8
  6084                           postdec1	equ	0xFE5
  6085                           fsr1h	equ	0xFE2
  6086                           fsr1l	equ	0xFE1
  6087                           status	equ	0xFD8
  6088                           
  6089 ;; *************** function _motor_init *****************
  6090 ;; Defined at:
  6091 ;;		line 141 in file "motor.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;		None
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;		None
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      void 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6109 ;;Total ram usage:        0 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:   10
  6112 ;; This function calls:
  6113 ;;		Nothing
  6114 ;; This function is called by:
  6115 ;;		_system_init
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           	psect	text2
  6120  01224E                     __ptext2:
  6121                           	opt stack 0
  6122  01224E                     _motor_init:
  6123                           	opt stack 19
  6124                           
  6125                           ;motor.c: 144: motor_cue_read_index = 0;
  6126                           
  6127                           ;incstack = 0
  6128  01224E  0E00               	movlw	0
  6129  012250  0100               	movlb	0	; () banked
  6130  012252  6FFB               	movwf	_motor_cue_read_index& (0+255),b
  6131                           
  6132                           ;motor.c: 145: motor_cue_write_index = 0;
  6133  012254  0E00               	movlw	0
  6134  012256  6FFA               	movwf	_motor_cue_write_index& (0+255),b
  6135                           
  6136                           ; BSR set to: 0
  6137                           ;motor.c: 151: CCPTMRS0bits.C2TSEL = 0b000;
  6138  012258  010F               	movlb	15	; () banked
  6139  01225A  9752               	bcf	82,3,b	;volatile
  6140  01225C  9952               	bcf	82,4,b	;volatile
  6141  01225E  9B52               	bcf	82,5,b	;volatile
  6142                           
  6143                           ;motor.c: 156: CCP1CONbits.P1M = 0b00;
  6144  012260  0E3F               	movlw	-193
  6145  012262  16BA               	andwf	4026,f,c	;volatile
  6146                           
  6147                           ;motor.c: 159: CCP1CONbits.DC1B = 0b00;
  6148  012264  0ECF               	movlw	-49
  6149  012266  16BA               	andwf	4026,f,c	;volatile
  6150                           
  6151                           ; BSR set to: 15
  6152                           ;motor.c: 162: LATBbits.LB0 = 0;
  6153  012268  908A               	bcf	3978,0,c	;volatile
  6154                           
  6155                           ; BSR set to: 15
  6156  01226A  0012               	return		;funcret
  6157  01226C                     __end_of_motor_init:
  6158                           	opt stack 0
  6159                           tblptru	equ	0xFF8
  6160                           tblptrh	equ	0xFF7
  6161                           tblptrl	equ	0xFF6
  6162                           tablat	equ	0xFF5
  6163                           postinc0	equ	0xFEE
  6164                           wreg	equ	0xFE8
  6165                           postdec1	equ	0xFE5
  6166                           fsr1h	equ	0xFE2
  6167                           fsr1l	equ	0xFE1
  6168                           status	equ	0xFD8
  6169                           
  6170 ;; *************** function _i2c_init *****************
  6171 ;; Defined at:
  6172 ;;		line 24 in file "i2c.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;		None
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;		None
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  1    wreg      void 
  6179 ;; Registers used:
  6180 ;;		wreg, status,2
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6190 ;;Total ram usage:        0 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; Hardware stack levels required when called:   10
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_system_init
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text3
  6201  01226C                     __ptext3:
  6202                           	opt stack 0
  6203  01226C                     _i2c_init:
  6204                           	opt stack 19
  6205                           
  6206                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  6207                           
  6208                           ; BSR set to: 15
  6209                           ;incstack = 0
  6210  01226C  8A93               	bsf	3987,5,c	;volatile
  6211                           
  6212                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  6213  01226E  8893               	bsf	3987,4,c	;volatile
  6214                           
  6215                           ;i2c.c: 28: SSP1STATbits.SMP = 0;
  6216  012270  9EC7               	bcf	4039,7,c	;volatile
  6217                           
  6218                           ;i2c.c: 29: SSP1STATbits.CKE = 0;
  6219  012272  9CC7               	bcf	4039,6,c	;volatile
  6220                           
  6221                           ;i2c.c: 31: SSP1ADD = 119;
  6222  012274  0E77               	movlw	119
  6223  012276  6EC8               	movwf	4040,c	;volatile
  6224                           
  6225                           ;i2c.c: 33: SSP1CON1bits.WCOL = 0;
  6226  012278  9EC6               	bcf	4038,7,c	;volatile
  6227                           
  6228                           ;i2c.c: 34: SSP1CON1bits.SSPOV = 0;
  6229  01227A  9CC6               	bcf	4038,6,c	;volatile
  6230                           
  6231                           ;i2c.c: 35: SSP1CON1bits.SSPM = 0b1000;
  6232  01227C  50C6               	movf	4038,w,c	;volatile
  6233  01227E  0BF0               	andlw	-16
  6234  012280  0908               	iorlw	8
  6235  012282  6EC6               	movwf	4038,c	;volatile
  6236                           
  6237                           ;i2c.c: 36: SSP1CON1bits.SSPEN = 1;
  6238  012284  8AC6               	bsf	4038,5,c	;volatile
  6239  012286  0012               	return		;funcret
  6240  012288                     __end_of_i2c_init:
  6241                           	opt stack 0
  6242                           tblptru	equ	0xFF8
  6243                           tblptrh	equ	0xFF7
  6244                           tblptrl	equ	0xFF6
  6245                           tablat	equ	0xFF5
  6246                           postinc0	equ	0xFEE
  6247                           wreg	equ	0xFE8
  6248                           postdec1	equ	0xFE5
  6249                           fsr1h	equ	0xFE2
  6250                           fsr1l	equ	0xFE1
  6251                           status	equ	0xFD8
  6252                           
  6253 ;; *************** function _flash_init *****************
  6254 ;; Defined at:
  6255 ;;		line 361 in file "flash.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;		None
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;		None
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  1    wreg      void 
  6262 ;; Registers used:
  6263 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6273 ;;Total ram usage:        0 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; Hardware stack levels required when called:   14
  6276 ;; This function calls:
  6277 ;;		__flash_set_page_size
  6278 ;;		_spi_init
  6279 ;; This function is called by:
  6280 ;;		_system_init
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           	psect	text4
  6285  012318                     __ptext4:
  6286                           	opt stack 0
  6287  012318                     _flash_init:
  6288                           	opt stack 15
  6289                           
  6290                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  6291                           
  6292                           ;incstack = 0
  6293  012318  0E00               	movlw	0
  6294  01231A  EC5D  F08E         	call	_spi_init
  6295                           
  6296                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  6297  01231E  0E00               	movlw	0
  6298  012320  ECC8  F088         	call	__flash_set_page_size
  6299  012324  0012               	return		;funcret
  6300  012326                     __end_of_flash_init:
  6301                           	opt stack 0
  6302                           tblptru	equ	0xFF8
  6303                           tblptrh	equ	0xFF7
  6304                           tblptrl	equ	0xFF6
  6305                           tablat	equ	0xFF5
  6306                           postinc0	equ	0xFEE
  6307                           wreg	equ	0xFE8
  6308                           postdec1	equ	0xFE5
  6309                           fsr1h	equ	0xFE2
  6310                           fsr1l	equ	0xFE1
  6311                           status	equ	0xFD8
  6312                           
  6313 ;; *************** function _spi_init *****************
  6314 ;; Defined at:
  6315 ;;		line 89 in file "spi.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  configuratio    1    wreg     enum E6791
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;  configuratio    1    3[BANK0 ] enum E6791
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  1    wreg      void 
  6322 ;; Registers used:
  6323 ;;		wreg, status,2, status,0, cstack
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6332 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6333 ;;Total ram usage:        1 bytes
  6334 ;; Hardware stack levels used:    1
  6335 ;; Hardware stack levels required when called:   11
  6336 ;; This function calls:
  6337 ;;		__spi_init
  6338 ;; This function is called by:
  6339 ;;		_flash_init
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           	psect	text5
  6344  011CBA                     __ptext5:
  6345                           	opt stack 0
  6346  011CBA                     _spi_init:
  6347                           	opt stack 17
  6348                           
  6349                           ;incstack = 0
  6350                           ;spi_init@configuration stored from wreg
  6351  011CBA  0100               	movlb	0	; () banked
  6352  011CBC  6F63               	movwf	spi_init@configuration& (0+255),b
  6353                           
  6354                           ;spi.c: 91: switch(configuration)
  6355  011CBE  D012               	goto	l2107
  6356  011CC0                     
  6357                           ;spi.c: 94: _spi_init(config_internal);
  6358  011CC0  C166  F060         	movff	_config_internal,__spi_init@details
  6359  011CC4  C167  F061         	movff	_config_internal+1,__spi_init@details+1
  6360  011CC8  C168  F062         	movff	_config_internal+2,__spi_init@details+2
  6361  011CCC  ECF6  F08E         	call	__spi_init	;wreg free
  6362                           
  6363                           ;spi.c: 95: break;
  6364  011CD0  D011               	goto	l2109
  6365  011CD2                     
  6366                           ;spi.c: 98: _spi_init(config_external);
  6367  011CD2  C163  F060         	movff	_config_external,__spi_init@details
  6368  011CD6  C164  F061         	movff	_config_external+1,__spi_init@details+1
  6369  011CDA  C165  F062         	movff	_config_external+2,__spi_init@details+2
  6370  011CDE  ECF6  F08E         	call	__spi_init	;wreg free
  6371                           
  6372                           ;spi.c: 100: }
  6373                           
  6374                           ;spi.c: 99: break;
  6375  011CE2  D008               	goto	l2109
  6376  011CE4                     l2107:
  6377  011CE4  0100               	movlb	0	; () banked
  6378  011CE6  5163               	movf	spi_init@configuration& (0+255),w,b
  6379                           
  6380                           ; Switch size 1, requested type "space"
  6381                           ; Number of cases is 2, Range of values is 0 to 1
  6382                           ; switch strategies available:
  6383                           ; Name         Instructions Cycles
  6384                           ; simple_byte            7     4 (average)
  6385                           ;	Chosen strategy is simple_byte
  6386  011CE8  0A00               	xorlw	0	; case 0
  6387  011CEA  B4D8               	btfsc	status,2,c
  6388  011CEC  D7E9               	goto	l2108
  6389  011CEE  0A01               	xorlw	1	; case 1
  6390  011CF0  B4D8               	btfsc	status,2,c
  6391  011CF2  D7EF               	goto	l2110
  6392  011CF4                     l2109:
  6393                           
  6394                           ;spi.c: 102: active_configuration = configuration;
  6395  011CF4  C063  F17D         	movff	spi_init@configuration,_active_configuration
  6396  011CF8  0012               	return		;funcret
  6397  011CFA                     __end_of_spi_init:
  6398                           	opt stack 0
  6399                           tblptru	equ	0xFF8
  6400                           tblptrh	equ	0xFF7
  6401                           tblptrl	equ	0xFF6
  6402                           tablat	equ	0xFF5
  6403                           postinc0	equ	0xFEE
  6404                           wreg	equ	0xFE8
  6405                           postdec1	equ	0xFE5
  6406                           fsr1h	equ	0xFE2
  6407                           fsr1l	equ	0xFE1
  6408                           status	equ	0xFD8
  6409                           
  6410 ;; *************** function __spi_init *****************
  6411 ;; Defined at:
  6412 ;;		line 24 in file "spi.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;  details         3    0[BANK0 ] struct .
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;		None
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      void 
  6419 ;; Registers used:
  6420 ;;		wreg, status,2
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6426 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6429 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6430 ;;Total ram usage:        3 bytes
  6431 ;; Hardware stack levels used:    1
  6432 ;; Hardware stack levels required when called:   10
  6433 ;; This function calls:
  6434 ;;		Nothing
  6435 ;; This function is called by:
  6436 ;;		_spi_init
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text6
  6441  011DEC                     __ptext6:
  6442                           	opt stack 0
  6443  011DEC                     __spi_init:
  6444                           	opt stack 17
  6445                           
  6446                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6447                           
  6448                           ;incstack = 0
  6449  011DEC  0E55               	movlw	85
  6450  011DEE  6EA7               	movwf	4007,c	;volsfr
  6451  011DF0  0EAA               	movlw	170
  6452  011DF2  6EA7               	movwf	4007,c	;volsfr
  6453  011DF4  010E               	movlb	14	; () banked
  6454  011DF6  91BF               	bcf	191,0,b	;volatile
  6455                           
  6456                           ;spi.c: 31: RPINR21 = 22;
  6457  011DF8  0E16               	movlw	22
  6458  011DFA  6FFC               	movwf	252,b	;volatile
  6459                           
  6460                           ;spi.c: 32: RPOR21 = 10;
  6461  011DFC  0E0A               	movlw	10
  6462  011DFE  6FD5               	movwf	213,b	;volatile
  6463                           
  6464                           ;spi.c: 34: RPOR23 = 11;
  6465  011E00  0E0B               	movlw	11
  6466  011E02  6FD7               	movwf	215,b	;volatile
  6467                           
  6468                           ;spi.c: 35: RPINR22 = 23;
  6469  011E04  0E17               	movlw	23
  6470  011E06  6FFD               	movwf	253,b	;volatile
  6471                           
  6472                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  6473  011E08  0E55               	movlw	85
  6474  011E0A  6EA7               	movwf	4007,c	;volsfr
  6475  011E0C  0EAA               	movlw	170
  6476  011E0E  6EA7               	movwf	4007,c	;volsfr
  6477                           
  6478                           ; BSR set to: 14
  6479  011E10  81BF               	bsf	191,0,b	;volatile
  6480                           
  6481                           ; BSR set to: 14
  6482                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  6483  011E12  8E73               	bsf	3955,7,c	;volatile
  6484                           
  6485                           ; BSR set to: 14
  6486                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  6487  011E14  8C73               	bsf	3955,6,c	;volatile
  6488                           
  6489                           ; BSR set to: 14
  6490                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  6491  011E16  9872               	bcf	3954,4,c	;volatile
  6492                           
  6493                           ; BSR set to: 14
  6494                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  6495  011E18  9072               	bcf	3954,0,c	;volatile
  6496  011E1A  9272               	bcf	3954,1,c	;volatile
  6497  011E1C  9472               	bcf	3954,2,c	;volatile
  6498  011E1E  9672               	bcf	3954,3,c	;volatile
  6499                           
  6500                           ; BSR set to: 14
  6501                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  6502  011E20  8A72               	bsf	3954,5,c	;volatile
  6503                           
  6504                           ; BSR set to: 14
  6505  011E22  0012               	return		;funcret
  6506  011E24                     __end_of__spi_init:
  6507                           	opt stack 0
  6508                           tblptru	equ	0xFF8
  6509                           tblptrh	equ	0xFF7
  6510                           tblptrl	equ	0xFF6
  6511                           tablat	equ	0xFF5
  6512                           postinc0	equ	0xFEE
  6513                           wreg	equ	0xFE8
  6514                           postdec1	equ	0xFE5
  6515                           fsr1h	equ	0xFE2
  6516                           fsr1l	equ	0xFE1
  6517                           status	equ	0xFD8
  6518                           
  6519 ;; *************** function __flash_set_page_size *****************
  6520 ;; Defined at:
  6521 ;;		line 99 in file "flash.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;  size            1    wreg     enum E6954
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;  size            1   23[BANK0 ] enum E6954
  6526 ;;  command         4   19[BANK0 ] unsigned char [4]
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  1    wreg      void 
  6529 ;; Registers used:
  6530 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6537 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6539 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6540 ;;Total ram usage:        5 bytes
  6541 ;; Hardware stack levels used:    1
  6542 ;; Hardware stack levels required when called:   13
  6543 ;; This function calls:
  6544 ;;		__flash_is_busy
  6545 ;;		_memcpy
  6546 ;;		_spi_tx
  6547 ;; This function is called by:
  6548 ;;		_flash_init
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text7
  6553  011190                     __ptext7:
  6554                           	opt stack 0
  6555  011190                     __flash_set_page_size:
  6556                           	opt stack 15
  6557                           
  6558                           ; BSR set to: 14
  6559                           ;incstack = 0
  6560                           ;__flash_set_page_size@size stored from wreg
  6561  011190  0100               	movlb	0	; () banked
  6562  011192  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  6563  011194                     
  6564                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  6565  011194  ECE3  F090         	call	__flash_is_busy	;wreg free
  6566  011198  0900               	iorlw	0
  6567  01119A  A4D8               	btfss	status,2,c
  6568  01119C  D7FB               	goto	l19008
  6569                           
  6570                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  6571  01119E  0100               	movlb	0	; () banked
  6572  0111A0  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  6573  0111A2  A4D8               	btfss	status,2,c
  6574  0111A4  D00E               	goto	l1468
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  6578  0111A6  0E73               	movlw	low __flash_set_page_size@command
  6579  0111A8  6F60               	movwf	memcpy@d1& (0+255),b
  6580  0111AA  0E00               	movlw	high __flash_set_page_size@command
  6581  0111AC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  6582  0111AE  0EE9               	movlw	low _flash_command_pagesize_512
  6583  0111B0  6F62               	movwf	memcpy@s1& (0+255),b
  6584  0111B2  0EA1               	movlw	high _flash_command_pagesize_512
  6585  0111B4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  6586  0111B6  0E00               	movlw	0
  6587  0111B8  6F65               	movwf	(memcpy@n+1)& (0+255),b
  6588  0111BA  0E04               	movlw	4
  6589  0111BC  6F64               	movwf	memcpy@n& (0+255),b
  6590  0111BE  EC63  F08A         	call	_memcpy	;wreg free
  6591  0111C2                     l1468:
  6592                           
  6593                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  6594  0111C2  0100               	movlb	0	; () banked
  6595  0111C4  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  6596  0111C6  A4D8               	btfss	status,2,c
  6597  0111C8  D00E               	goto	l1469
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  6601  0111CA  0E73               	movlw	low __flash_set_page_size@command
  6602  0111CC  6F60               	movwf	memcpy@d1& (0+255),b
  6603  0111CE  0E00               	movlw	high __flash_set_page_size@command
  6604  0111D0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  6605  0111D2  0EE5               	movlw	low _flash_command_pagesize_528
  6606  0111D4  6F62               	movwf	memcpy@s1& (0+255),b
  6607  0111D6  0EA1               	movlw	high _flash_command_pagesize_528
  6608  0111D8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  6609  0111DA  0E00               	movlw	0
  6610  0111DC  6F65               	movwf	(memcpy@n+1)& (0+255),b
  6611  0111DE  0E04               	movlw	4
  6612  0111E0  6F64               	movwf	memcpy@n& (0+255),b
  6613  0111E2  EC63  F08A         	call	_memcpy	;wreg free
  6614  0111E6                     l1469:
  6615                           
  6616                           ;flash.c: 113: spi_tx(command, 4);
  6617  0111E6  0E73               	movlw	low __flash_set_page_size@command
  6618  0111E8  0100               	movlb	0	; () banked
  6619  0111EA  6F60               	movwf	spi_tx@data& (0+255),b
  6620  0111EC  0E00               	movlw	high __flash_set_page_size@command
  6621  0111EE  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  6622  0111F0  0E00               	movlw	0
  6623  0111F2  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  6624  0111F4  0E04               	movlw	4
  6625  0111F6  6F62               	movwf	spi_tx@length& (0+255),b
  6626  0111F8  EC49  F08B         	call	_spi_tx	;wreg free
  6627  0111FC  0012               	return		;funcret
  6628  0111FE                     __end_of__flash_set_page_size:
  6629                           	opt stack 0
  6630                           tblptru	equ	0xFF8
  6631                           tblptrh	equ	0xFF7
  6632                           tblptrl	equ	0xFF6
  6633                           tablat	equ	0xFF5
  6634                           postinc0	equ	0xFEE
  6635                           wreg	equ	0xFE8
  6636                           postdec1	equ	0xFE5
  6637                           fsr1h	equ	0xFE2
  6638                           fsr1l	equ	0xFE1
  6639                           status	equ	0xFD8
  6640                           
  6641 ;; *************** function _fat_init *****************
  6642 ;; Defined at:
  6643 ;;		line 1382 in file "fat16.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;		None
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;		None
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  1    wreg      void 
  6650 ;; Registers used:
  6651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6661 ;;Total ram usage:        0 bytes
  6662 ;; Hardware stack levels used:    1
  6663 ;; Hardware stack levels required when called:   16
  6664 ;; This function calls:
  6665 ;;		_fat_format
  6666 ;;		_fat_get_format_status
  6667 ;; This function is called by:
  6668 ;;		_system_init
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text8
  6673  0122F8                     __ptext8:
  6674                           	opt stack 0
  6675  0122F8                     _fat_init:
  6676                           	opt stack 13
  6677                           
  6678                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  6679                           
  6680                           ;incstack = 0
  6681  0122F8  EC96  F082         	call	_fat_get_format_status	;wreg free
  6682  0122FC  0900               	iorlw	0
  6683  0122FE  A4D8               	btfss	status,2,c
  6684  012300  0012               	return	
  6685                           
  6686                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  6687  012302  EC1E  F06D         	call	_fat_format	;wreg free
  6688  012306  0012               	return	
  6689  012308                     __end_of_fat_init:
  6690                           	opt stack 0
  6691                           tblptru	equ	0xFF8
  6692                           tblptrh	equ	0xFF7
  6693                           tblptrl	equ	0xFF6
  6694                           tablat	equ	0xFF5
  6695                           postinc0	equ	0xFEE
  6696                           wreg	equ	0xFE8
  6697                           postdec1	equ	0xFE5
  6698                           fsr1h	equ	0xFE2
  6699                           fsr1l	equ	0xFE1
  6700                           status	equ	0xFD8
  6701                           
  6702 ;; *************** function _fat_get_format_status *****************
  6703 ;; Defined at:
  6704 ;;		line 1292 in file "fat16.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;		None
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;  cntr            2   45[BANK0 ] unsigned int 
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  1    wreg      enum E6928
  6711 ;; Registers used:
  6712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6719 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6721 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6722 ;;Total ram usage:        4 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; Hardware stack levels required when called:   15
  6725 ;; This function calls:
  6726 ;;		__get_fbr
  6727 ;;		__get_mbr
  6728 ;;		_flash_sector_read
  6729 ;; This function is called by:
  6730 ;;		_fat_init
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text9
  6735  01052C                     __ptext9:
  6736                           	opt stack 0
  6737  01052C                     _fat_get_format_status:
  6738                           	opt stack 13
  6739                           
  6740                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  6741                           
  6742                           ;incstack = 0
  6743  01052C  0E00               	movlw	0
  6744  01052E  0100               	movlb	0	; () banked
  6745  010530  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  6746  010532  0E00               	movlw	0
  6747  010534  6F87               	movwf	flash_sector_read@page& (0+255),b
  6748  010536  0E00               	movlw	low _buffer
  6749  010538  6F89               	movwf	flash_sector_read@data& (0+255),b
  6750  01053A  0E08               	movlw	high _buffer
  6751  01053C  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  6752  01053E  EC97  F090         	call	_flash_sector_read	;wreg free
  6753                           
  6754                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  6755  010542  0E00               	movlw	0
  6756  010544  0100               	movlb	0	; () banked
  6757  010546  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  6758  010548  0E00               	movlw	0
  6759  01054A  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  6760  01054C                     l19038:
  6761                           
  6762                           ; BSR set to: 0
  6763  01054C  0E02               	movlw	2
  6764  01054E  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  6765  010550  B0D8               	btfsc	status,0,c
  6766  010552  D017               	goto	u18880
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  6770                           
  6771                           ; BSR set to: 0
  6772                           
  6773                           ; BSR set to: 0
  6774  010554  0E00               	movlw	low _buffer
  6775  010556  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  6776  010558  6ED9               	movwf	fsr2l,c
  6777  01055A  0E08               	movlw	high _buffer
  6778  01055C  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  6779  01055E  6EDA               	movwf	fsr2h,c
  6780  010560  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6781  010564  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6782  010568  ECBD  F07E         	call	__get_mbr	;wreg free
  6783  01056C  0100               	movlb	0	; () banked
  6784  01056E  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  6785  010570  50DE               	movf	postinc2,w,c
  6786  010572  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  6787  010574  B4D8               	btfsc	status,2,c
  6788  010576  D002               	goto	l1989
  6789                           
  6790                           ; BSR set to: 0
  6791                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  6792  010578  0E00               	movlw	0
  6793                           
  6794                           ; BSR set to: 0
  6795  01057A  0012               	return	
  6796  01057C                     l1989:
  6797                           
  6798                           ; BSR set to: 0
  6799                           
  6800                           ; BSR set to: 0
  6801  01057C  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  6802  01057E  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  6803  010580  D7E5               	goto	l19038
  6804  010582                     u18880:
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  6808                           
  6809                           ; BSR set to: 0
  6810  010582  0E00               	movlw	0
  6811  010584  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  6812  010586  0E01               	movlw	1
  6813  010588  6F87               	movwf	flash_sector_read@page& (0+255),b
  6814  01058A  0E00               	movlw	low _buffer
  6815  01058C  6F89               	movwf	flash_sector_read@data& (0+255),b
  6816  01058E  0E08               	movlw	high _buffer
  6817  010590  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  6818  010592  EC97  F090         	call	_flash_sector_read	;wreg free
  6819                           
  6820                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  6821  010596  0E00               	movlw	0
  6822  010598  0100               	movlb	0	; () banked
  6823  01059A  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  6824  01059C  0E00               	movlw	0
  6825  01059E  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  6826  0105A0                     l19056:
  6827                           
  6828                           ; BSR set to: 0
  6829  0105A0  0E02               	movlw	2
  6830  0105A2  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  6831  0105A4  B0D8               	btfsc	status,0,c
  6832  0105A6  D017               	goto	u18910
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  6836                           
  6837                           ; BSR set to: 0
  6838                           
  6839                           ; BSR set to: 0
  6840  0105A8  0E00               	movlw	low _buffer
  6841  0105AA  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  6842  0105AC  6ED9               	movwf	fsr2l,c
  6843  0105AE  0E08               	movlw	high _buffer
  6844  0105B0  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  6845  0105B2  6EDA               	movwf	fsr2h,c
  6846  0105B4  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6847  0105B8  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6848  0105BC  ECA5  F069         	call	__get_fbr	;wreg free
  6849  0105C0  0100               	movlb	0	; () banked
  6850  0105C2  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  6851  0105C4  50DE               	movf	postinc2,w,c
  6852  0105C6  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  6853  0105C8  B4D8               	btfsc	status,2,c
  6854  0105CA  D002               	goto	l1993
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  6858  0105CC  0E00               	movlw	0
  6859                           
  6860                           ; BSR set to: 0
  6861  0105CE  0012               	return	
  6862  0105D0                     l1993:
  6863                           
  6864                           ; BSR set to: 0
  6865                           
  6866                           ; BSR set to: 0
  6867  0105D0  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  6868  0105D2  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  6869  0105D4  D7E5               	goto	l19056
  6870  0105D6                     u18910:
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  6874                           
  6875                           ; BSR set to: 0
  6876  0105D6  0E01               	movlw	1
  6877  0105D8  0012               	return	
  6878  0105DA                     __end_of_fat_get_format_status:
  6879                           	opt stack 0
  6880                           tblptru	equ	0xFF8
  6881                           tblptrh	equ	0xFF7
  6882                           tblptrl	equ	0xFF6
  6883                           tablat	equ	0xFF5
  6884                           postinc0	equ	0xFEE
  6885                           wreg	equ	0xFE8
  6886                           postdec1	equ	0xFE5
  6887                           fsr1h	equ	0xFE2
  6888                           fsr1l	equ	0xFE1
  6889                           postinc2	equ	0xFDE
  6890                           fsr2h	equ	0xFDA
  6891                           fsr2l	equ	0xFD9
  6892                           status	equ	0xFD8
  6893                           
  6894 ;; *************** function _encoder_init *****************
  6895 ;; Defined at:
  6896 ;;		line 14 in file "encoder.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;		None
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;		None
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  1    wreg      void 
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6914 ;;Total ram usage:        0 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:   10
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_system_init
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text10
  6925  01217E                     __ptext10:
  6926                           	opt stack 0
  6927  01217E                     _encoder_init:
  6928                           	opt stack 19
  6929                           
  6930                           ;encoder.c: 16: enc1 = PORTE & 0b00000111;
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;incstack = 0
  6934  01217E  5084               	movf	3972,w,c	;volatile
  6935  012180  0B07               	andlw	7
  6936  012182  6E1F               	movwf	_enc1,c
  6937                           
  6938                           ;encoder.c: 17: enc2 = PORTA & 0b00000111;
  6939  012184  5080               	movf	3968,w,c	;volatile
  6940  012186  0B07               	andlw	7
  6941  012188  6E1E               	movwf	_enc2,c
  6942                           
  6943                           ;encoder.c: 18: os.encoder1Count = 0;
  6944  01218A  0E00               	movlw	0
  6945  01218C  0100               	movlb	0	; () banked
  6946  01218E  6FCD               	movwf	(_os+3)& (0+255),b	;volatile
  6947                           
  6948                           ; BSR set to: 0
  6949                           ;encoder.c: 19: os.encoder2Count = 0;
  6950  012190  0E00               	movlw	0
  6951  012192  6FCF               	movwf	(_os+5)& (0+255),b	;volatile
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;encoder.c: 20: os.button1 = 0;
  6955  012194  0E00               	movlw	0
  6956  012196  6FCE               	movwf	(_os+4)& (0+255),b	;volatile
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;encoder.c: 21: os.button2 = 0;
  6960  012198  0E00               	movlw	0
  6961  01219A  6FD0               	movwf	(_os+6)& (0+255),b	;volatile
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;encoder.c: 22: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  6965  01219C  0E01               	movlw	1
  6966  01219E  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  6967                           
  6968                           ; BSR set to: 0
  6969  0121A0  0012               	return		;funcret
  6970  0121A2                     __end_of_encoder_init:
  6971                           	opt stack 0
  6972                           tblptru	equ	0xFF8
  6973                           tblptrh	equ	0xFF7
  6974                           tblptrl	equ	0xFF6
  6975                           tablat	equ	0xFF5
  6976                           postinc0	equ	0xFEE
  6977                           wreg	equ	0xFE8
  6978                           postdec1	equ	0xFE5
  6979                           fsr1h	equ	0xFE2
  6980                           fsr1l	equ	0xFE1
  6981                           postinc2	equ	0xFDE
  6982                           fsr2h	equ	0xFDA
  6983                           fsr2l	equ	0xFD9
  6984                           status	equ	0xFD8
  6985                           
  6986 ;; *************** function _display_update *****************
  6987 ;; Defined at:
  6988 ;;		line 570 in file "display.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;		None
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;  line            1   16[BANK0 ] unsigned char 
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  1    wreg      void 
  6995 ;; Registers used:
  6996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7005 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7006 ;;Total ram usage:        1 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; Hardware stack levels required when called:   14
  7009 ;; This function calls:
  7010 ;;		_i2c_display_cursor
  7011 ;;		_i2c_display_write_fixed
  7012 ;; This function is called by:
  7013 ;;		_main
  7014 ;;		_system_init
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text11
  7019  011E24                     __ptext11:
  7020                           	opt stack 0
  7021  011E24                     _display_update:
  7022                           	opt stack 15
  7023                           
  7024                           ;display.c: 572: uint8_t line;;display.c: 573: for(line=0; line<4; ++line)
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;incstack = 0
  7028  011E24  0E00               	movlw	0
  7029  011E26  0100               	movlb	0	; () banked
  7030  011E28  6F70               	movwf	display_update@line& (0+255),b
  7031  011E2A                     l19504:
  7032                           
  7033                           ; BSR set to: 0
  7034  011E2A  0E03               	movlw	3
  7035  011E2C  6570               	cpfsgt	display_update@line& (0+255),b
  7036  011E2E  D001               	goto	l1431
  7037  011E30  0012               	return	
  7038  011E32                     l1431:
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;display.c: 574: {;display.c: 575: i2c_display_cursor(line, 0);
  7042                           
  7043                           ; BSR set to: 0
  7044  011E32  0E00               	movlw	0
  7045  011E34  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
  7046  011E36  5170               	movf	display_update@line& (0+255),w,b
  7047  011E38  ECF5  F090         	call	_i2c_display_cursor
  7048                           
  7049                           ;display.c: 576: i2c_display_write_fixed(display_content[line], 20);
  7050  011E3C  0100               	movlb	0	; () banked
  7051  011E3E  5170               	movf	display_update@line& (0+255),w,b
  7052  011E40  0D14               	mullw	20
  7053  011E42  0EAD               	movlw	low _display_content
  7054  011E44  24F3               	addwf	prodl,w,c
  7055  011E46  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
  7056  011E48  0E01               	movlw	high _display_content
  7057  011E4A  20F4               	addwfc	prodh,w,c
  7058  011E4C  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
  7059  011E4E  0E14               	movlw	20
  7060  011E50  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
  7061  011E52  EC25  F08C         	call	_i2c_display_write_fixed	;wreg free
  7062  011E56  0100               	movlb	0	; () banked
  7063  011E58  2B70               	incf	display_update@line& (0+255),f,b
  7064  011E5A  D7E7               	goto	l19504
  7065  011E5C                     __end_of_display_update:
  7066                           	opt stack 0
  7067                           tblptru	equ	0xFF8
  7068                           tblptrh	equ	0xFF7
  7069                           tblptrl	equ	0xFF6
  7070                           tablat	equ	0xFF5
  7071                           prodh	equ	0xFF4
  7072                           prodl	equ	0xFF3
  7073                           postinc0	equ	0xFEE
  7074                           wreg	equ	0xFE8
  7075                           postdec1	equ	0xFE5
  7076                           fsr1h	equ	0xFE2
  7077                           fsr1l	equ	0xFE1
  7078                           postinc2	equ	0xFDE
  7079                           fsr2h	equ	0xFDA
  7080                           fsr2l	equ	0xFD9
  7081                           status	equ	0xFD8
  7082                           
  7083 ;; *************** function _i2c_display_write_fixed *****************
  7084 ;; Defined at:
  7085 ;;		line 395 in file "i2c.c"
  7086 ;; Parameters:    Size  Location     Type
  7087 ;;  data            2    5[BANK0 ] PTR unsigned char 
  7088 ;;		 -> display_content(80), 
  7089 ;;  length          1    7[BANK0 ] unsigned char 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  pos             1    8[BANK0 ] unsigned char 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  1    wreg      void 
  7094 ;; Registers used:
  7095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7101 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7102 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7104 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7105 ;;Total ram usage:        4 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:   11
  7108 ;; This function calls:
  7109 ;;		__i2c_send
  7110 ;;		__i2c_start
  7111 ;;		__i2c_stop
  7112 ;;		__i2c_wait_idle
  7113 ;; This function is called by:
  7114 ;;		_display_update
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           	psect	text12
  7119  01184A                     __ptext12:
  7120                           	opt stack 0
  7121  01184A                     _i2c_display_write_fixed:
  7122                           	opt stack 17
  7123                           
  7124                           ;i2c.c: 397: uint8_t pos;;i2c.c: 402: _i2c_wait_idle();
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;incstack = 0
  7128  01184A  EC9E  F089         	call	__i2c_wait_idle	;wreg free
  7129                           
  7130                           ;i2c.c: 403: _i2c_start();
  7131  01184E  ECB8  F091         	call	__i2c_start	;wreg free
  7132                           
  7133                           ;i2c.c: 404: _i2c_wait_idle();
  7134  011852  EC9E  F089         	call	__i2c_wait_idle	;wreg free
  7135                           
  7136                           ;i2c.c: 405: _i2c_send(0b01111000);
  7137  011856  0E78               	movlw	120
  7138  011858  ECAF  F091         	call	__i2c_send
  7139                           
  7140                           ;i2c.c: 406: _i2c_wait_idle();
  7141  01185C  EC9E  F089         	call	__i2c_wait_idle	;wreg free
  7142                           
  7143                           ;i2c.c: 407: _i2c_send(0b01000000);
  7144  011860  0E40               	movlw	64
  7145  011862  ECAF  F091         	call	__i2c_send
  7146                           
  7147                           ;i2c.c: 408: _i2c_wait_idle();
  7148  011866  EC9E  F089         	call	__i2c_wait_idle	;wreg free
  7149                           
  7150                           ;i2c.c: 411: for(pos=0; pos<length; ++pos)
  7151  01186A  0E00               	movlw	0
  7152  01186C  0100               	movlb	0	; () banked
  7153  01186E  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
  7154  011870  D00F               	goto	l1207
  7155  011872                     
  7156                           ; BSR set to: 0
  7157                           ;i2c.c: 412: {;i2c.c: 413: _i2c_send(data[pos]);
  7158                           
  7159                           ; BSR set to: 0
  7160  011872  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
  7161  011874  0D01               	mullw	1
  7162  011876  50F3               	movf	prodl,w,c
  7163  011878  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
  7164  01187A  6ED9               	movwf	fsr2l,c
  7165  01187C  50F4               	movf	prodh,w,c
  7166  01187E  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
  7167  011880  6EDA               	movwf	fsr2h,c
  7168  011882  50DF               	movf	indf2,w,c
  7169  011884  ECAF  F091         	call	__i2c_send
  7170                           
  7171                           ;i2c.c: 414: _i2c_wait_idle();
  7172  011888  EC9E  F089         	call	__i2c_wait_idle	;wreg free
  7173  01188C  0100               	movlb	0	; () banked
  7174  01188E  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
  7175  011890                     l1207:
  7176                           
  7177                           ; BSR set to: 0
  7178                           
  7179                           ; BSR set to: 0
  7180  011890  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
  7181  011892  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
  7182  011894  A0D8               	btfss	status,0,c
  7183  011896  D7ED               	goto	l1208
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;i2c.c: 415: };i2c.c: 417: _i2c_stop();
  7187                           
  7188                           ; BSR set to: 0
  7189  011898  ECB4  F091         	call	__i2c_stop	;wreg free
  7190  01189C  0012               	return		;funcret
  7191  01189E                     __end_of_i2c_display_write_fixed:
  7192                           	opt stack 0
  7193                           tblptru	equ	0xFF8
  7194                           tblptrh	equ	0xFF7
  7195                           tblptrl	equ	0xFF6
  7196                           tablat	equ	0xFF5
  7197                           prodh	equ	0xFF4
  7198                           prodl	equ	0xFF3
  7199                           postinc0	equ	0xFEE
  7200                           wreg	equ	0xFE8
  7201                           postdec1	equ	0xFE5
  7202                           fsr1h	equ	0xFE2
  7203                           fsr1l	equ	0xFE1
  7204                           indf2	equ	0xFDF
  7205                           postinc2	equ	0xFDE
  7206                           fsr2h	equ	0xFDA
  7207                           fsr2l	equ	0xFD9
  7208                           status	equ	0xFD8
  7209                           
  7210 ;; *************** function _i2c_display_cursor *****************
  7211 ;; Defined at:
  7212 ;;		line 355 in file "i2c.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  line            1    wreg     unsigned char 
  7215 ;;  position        1   13[BANK0 ] unsigned char 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  line            1   14[BANK0 ] unsigned char 
  7218 ;;  address         1   15[BANK0 ] unsigned char 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  1    wreg      void 
  7221 ;; Registers used:
  7222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7228 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7231 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7232 ;;Total ram usage:        3 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:   13
  7235 ;; This function calls:
  7236 ;;		__ic2_display_set_ddram_address
  7237 ;; This function is called by:
  7238 ;;		_display_update
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242                           	psect	text13
  7243  0121EA                     __ptext13:
  7244                           	opt stack 0
  7245  0121EA                     _i2c_display_cursor:
  7246                           	opt stack 15
  7247                           
  7248                           ;incstack = 0
  7249                           ;i2c_display_cursor@line stored from wreg
  7250  0121EA  0100               	movlb	0	; () banked
  7251  0121EC  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
  7252                           
  7253                           ;i2c.c: 357: uint8_t address;;i2c.c: 360: line &= 0b11;
  7254  0121EE  0E03               	movlw	3
  7255  0121F0  0100               	movlb	0	; () banked
  7256  0121F2  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
  7257                           
  7258                           ;i2c.c: 361: address = line<<5;
  7259  0121F4  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
  7260  0121F6  46E8               	rlncf	wreg,f,c
  7261  0121F8  0BE0               	andlw	224
  7262  0121FA  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
  7263                           
  7264                           ;i2c.c: 362: position &= 0b11111;
  7265  0121FC  0E1F               	movlw	31
  7266  0121FE  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
  7267                           
  7268                           ;i2c.c: 363: address |= position;
  7269  012200  516D               	movf	i2c_display_cursor@position& (0+255),w,b
  7270  012202  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;i2c.c: 369: _ic2_display_set_ddram_address(address);
  7274  012204  516F               	movf	i2c_display_cursor@address& (0+255),w,b
  7275  012206  ECD1  F090         	call	__ic2_display_set_ddram_address
  7276  01220A  0012               	return		;funcret
  7277  01220C                     __end_of_i2c_display_cursor:
  7278                           	opt stack 0
  7279                           tblptru	equ	0xFF8
  7280                           tblptrh	equ	0xFF7
  7281                           tblptrl	equ	0xFF6
  7282                           tablat	equ	0xFF5
  7283                           prodh	equ	0xFF4
  7284                           prodl	equ	0xFF3
  7285                           postinc0	equ	0xFEE
  7286                           wreg	equ	0xFE8
  7287                           postdec1	equ	0xFE5
  7288                           fsr1h	equ	0xFE2
  7289                           fsr1l	equ	0xFE1
  7290                           indf2	equ	0xFDF
  7291                           postinc2	equ	0xFDE
  7292                           fsr2h	equ	0xFDA
  7293                           fsr2l	equ	0xFD9
  7294                           status	equ	0xFD8
  7295                           
  7296 ;; *************** function __ic2_display_set_ddram_address *****************
  7297 ;; Defined at:
  7298 ;;		line 326 in file "i2c.c"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;  address         1    wreg     unsigned char 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;  address         1   10[BANK0 ] unsigned char 
  7303 ;;  data_array      2   11[BANK0 ] unsigned char [2]
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7314 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7316 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7317 ;;Total ram usage:        3 bytes
  7318 ;; Hardware stack levels used:    1
  7319 ;; Hardware stack levels required when called:   12
  7320 ;; This function calls:
  7321 ;;		__i2c_write
  7322 ;; This function is called by:
  7323 ;;		_i2c_display_cursor
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text14
  7328  0121A2                     __ptext14:
  7329                           	opt stack 0
  7330  0121A2                     __ic2_display_set_ddram_address:
  7331                           	opt stack 15
  7332                           
  7333                           ;incstack = 0
  7334                           ;__ic2_display_set_ddram_address@address stored from wreg
  7335  0121A2  0100               	movlb	0	; () banked
  7336  0121A4  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
  7337                           
  7338                           ;i2c.c: 328: uint8_t data_array[2];;i2c.c: 329: data_array[0] = 0b00000000;
  7339  0121A6  0E00               	movlw	0
  7340  0121A8  0100               	movlb	0	; () banked
  7341  0121AA  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;i2c.c: 330: data_array[1] = 0b10000000 | address;
  7345  0121AC  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
  7346  0121AE  0980               	iorlw	128
  7347  0121B0  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
  7348                           
  7349                           ; BSR set to: 0
  7350                           ;i2c.c: 336: _i2c_write(0b01111000, &data_array[0], 2);
  7351  0121B2  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
  7352  0121B4  6F65               	movwf	__i2c_write@data& (0+255),b
  7353  0121B6  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
  7354  0121B8  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7355  0121BA  0E02               	movlw	2
  7356  0121BC  6F67               	movwf	__i2c_write@length& (0+255),b
  7357  0121BE  0E78               	movlw	120
  7358  0121C0  ECF4  F08C         	call	__i2c_write
  7359  0121C4  0012               	return		;funcret
  7360  0121C6                     __end_of__ic2_display_set_ddram_address:
  7361                           	opt stack 0
  7362                           tblptru	equ	0xFF8
  7363                           tblptrh	equ	0xFF7
  7364                           tblptrl	equ	0xFF6
  7365                           tablat	equ	0xFF5
  7366                           prodh	equ	0xFF4
  7367                           prodl	equ	0xFF3
  7368                           postinc0	equ	0xFEE
  7369                           wreg	equ	0xFE8
  7370                           postdec1	equ	0xFE5
  7371                           fsr1h	equ	0xFE2
  7372                           fsr1l	equ	0xFE1
  7373                           indf2	equ	0xFDF
  7374                           postinc2	equ	0xFDE
  7375                           fsr2h	equ	0xFDA
  7376                           fsr2l	equ	0xFD9
  7377                           status	equ	0xFD8
  7378                           
  7379 ;; *************** function _display_init *****************
  7380 ;; Defined at:
  7381 ;;		line 222 in file "display.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;		None
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;		None
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  1    wreg      void 
  7388 ;; Registers used:
  7389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7399 ;;Total ram usage:        0 bytes
  7400 ;; Hardware stack levels used:    1
  7401 ;; Hardware stack levels required when called:   14
  7402 ;; This function calls:
  7403 ;;		_i2c_display_init
  7404 ;;		_i2c_display_program_custom_character
  7405 ;; This function is called by:
  7406 ;;		_system_init
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text15
  7411  011E5C                     __ptext15:
  7412                           	opt stack 0
  7413  011E5C                     _display_init:
  7414                           	opt stack 15
  7415                           
  7416                           ;display.c: 224: i2c_display_init();
  7417                           
  7418                           ;incstack = 0
  7419  011E5C  ECCC  F08C         	call	_i2c_display_init	;wreg free
  7420                           
  7421                           ;display.c: 225: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
  7422  011E60  0EDD               	movlw	low _bit_pattern_verticalbar
  7423  011E62  0100               	movlb	0	; () banked
  7424  011E64  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
  7425  011E66  0EA1               	movlw	high _bit_pattern_verticalbar
  7426  011E68  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
  7427  011E6A  0E00               	movlw	0
  7428  011E6C  EC2A  F087         	call	_i2c_display_program_custom_character
  7429                           
  7430                           ;display.c: 226: i2c_display_program_custom_character(0x01, bit_pattern_degree);
  7431  011E70  0ED5               	movlw	low _bit_pattern_degree
  7432  011E72  0100               	movlb	0	; () banked
  7433  011E74  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
  7434  011E76  0EA1               	movlw	high _bit_pattern_degree
  7435  011E78  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
  7436  011E7A  0E01               	movlw	1
  7437  011E7C  EC2A  F087         	call	_i2c_display_program_custom_character
  7438                           
  7439                           ;display.c: 227: i2c_display_program_custom_character(0x02, bit_pattern_ae);
  7440  011E80  0ECD               	movlw	low _bit_pattern_ae
  7441  011E82  0100               	movlb	0	; () banked
  7442  011E84  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
  7443  011E86  0EA1               	movlw	high _bit_pattern_ae
  7444  011E88  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
  7445  011E8A  0E02               	movlw	2
  7446  011E8C  EC2A  F087         	call	_i2c_display_program_custom_character
  7447  011E90  0012               	return		;funcret
  7448  011E92                     __end_of_display_init:
  7449                           	opt stack 0
  7450                           tblptru	equ	0xFF8
  7451                           tblptrh	equ	0xFF7
  7452                           tblptrl	equ	0xFF6
  7453                           tablat	equ	0xFF5
  7454                           prodh	equ	0xFF4
  7455                           prodl	equ	0xFF3
  7456                           postinc0	equ	0xFEE
  7457                           wreg	equ	0xFE8
  7458                           postdec1	equ	0xFE5
  7459                           fsr1h	equ	0xFE2
  7460                           fsr1l	equ	0xFE1
  7461                           indf2	equ	0xFDF
  7462                           postinc2	equ	0xFDE
  7463                           fsr2h	equ	0xFDA
  7464                           fsr2l	equ	0xFD9
  7465                           status	equ	0xFD8
  7466                           
  7467 ;; *************** function _i2c_display_program_custom_character *****************
  7468 ;; Defined at:
  7469 ;;		line 420 in file "i2c.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;  address         1    wreg     unsigned char 
  7472 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
  7473 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;  address         1   31[BANK0 ] unsigned char 
  7476 ;;  data_array     11   20[BANK0 ] unsigned char [11]
  7477 ;;  cntr            1   32[BANK0 ] unsigned char 
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  1    wreg      void 
  7480 ;; Registers used:
  7481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 0/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7488 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7489 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7490 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7491 ;;Total ram usage:       19 bytes
  7492 ;; Hardware stack levels used:    1
  7493 ;; Hardware stack levels required when called:   13
  7494 ;; This function calls:
  7495 ;;		__i2c_write
  7496 ;;		__ic2_display_set_cgram_address
  7497 ;; This function is called by:
  7498 ;;		_display_init
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text16
  7503  010E54                     __ptext16:
  7504                           	opt stack 0
  7505  010E54                     _i2c_display_program_custom_character:
  7506                           	opt stack 15
  7507                           
  7508                           ;incstack = 0
  7509                           ;i2c_display_program_custom_character@address stored from wreg
  7510  010E54  0100               	movlb	0	; () banked
  7511  010E56  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
  7512                           
  7513                           ;i2c.c: 422: uint8_t cntr;;i2c.c: 423: uint8_t data_array[11];;i2c.c: 426: _ic2_display_
      +                          set_cgram_address(address<<3);
  7514  010E58  0100               	movlb	0	; () banked
  7515  010E5A  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
  7516  010E5C  42E8               	rrncf	wreg,f,c
  7517  010E5E  0BF8               	andlw	248
  7518  010E60  EC6D  F090         	call	__ic2_display_set_cgram_address
  7519                           
  7520                           ;i2c.c: 429: data_array[0] = 0b01000000;
  7521  010E64  0E40               	movlw	64
  7522  010E66  0100               	movlb	0	; () banked
  7523  010E68  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;i2c.c: 430: for(cntr=0; cntr<8; ++cntr)
  7527  010E6A  0E00               	movlw	0
  7528  010E6C  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
  7529  010E6E                     l18910:
  7530                           
  7531                           ; BSR set to: 0
  7532  010E6E  0E07               	movlw	7
  7533  010E70  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
  7534  010E72  D001               	goto	l1213
  7535  010E74  D023               	goto	u18680
  7536  010E76                     l1213:
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;i2c.c: 431: {;i2c.c: 432: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
  7540                           
  7541                           ; BSR set to: 0
  7542  010E76  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
  7543  010E78  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
  7544  010E7A  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
  7545  010E7C  0E01               	movlw	1
  7546  010E7E  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
  7547  010E80  0E00               	movlw	0
  7548  010E82  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
  7549  010E84  0E74               	movlw	low i2c_display_program_custom_character@data_array
  7550  010E86  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
  7551  010E88  6ED9               	movwf	fsr2l,c
  7552  010E8A  0E00               	movlw	high i2c_display_program_custom_character@data_array
  7553  010E8C  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
  7554  010E8E  6EDA               	movwf	fsr2h,c
  7555  010E90  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
  7556  010E92  0D01               	mullw	1
  7557  010E94  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
  7558  010E98  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
  7559  010E9C  50F3               	movf	prodl,w,c
  7560  010E9E  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
  7561  010EA0  50F4               	movf	prodh,w,c
  7562  010EA2  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
  7563  010EA4  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
  7564  010EA8  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
  7565  010EAC                     	if	0	;tblptru may be non-zero
  7566  010EAC                     	endif
  7567  010EAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7568  010EAC  0E00               	movlw	low (__mediumconst shr (0+16))
  7569  010EAE  6EF8               	movwf	tblptru,c
  7570  010EB0                     	endif
  7571  010EB0  0008               	tblrd		*
  7572  010EB2  50F5               	movf	tablat,w,c
  7573  010EB4  0B1F               	andlw	31
  7574  010EB6  6EDF               	movwf	indf2,c
  7575                           
  7576                           ; BSR set to: 0
  7577  010EB8  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
  7578  010EBA  D7D9               	goto	l18910
  7579  010EBC                     u18680:
  7580                           
  7581                           ; BSR set to: 0
  7582                           ;i2c.c: 433: };i2c.c: 434: _i2c_write(0b01111000, data_array, 9);
  7583                           
  7584                           ; BSR set to: 0
  7585  010EBC  0E74               	movlw	low i2c_display_program_custom_character@data_array
  7586  010EBE  6F65               	movwf	__i2c_write@data& (0+255),b
  7587  010EC0  0E00               	movlw	high i2c_display_program_custom_character@data_array
  7588  010EC2  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7589  010EC4  0E09               	movlw	9
  7590  010EC6  6F67               	movwf	__i2c_write@length& (0+255),b
  7591  010EC8  0E78               	movlw	120
  7592  010ECA  ECF4  F08C         	call	__i2c_write
  7593  010ECE  0012               	return		;funcret
  7594  010ED0                     __end_of_i2c_display_program_custom_character:
  7595                           	opt stack 0
  7596                           tblptru	equ	0xFF8
  7597                           tblptrh	equ	0xFF7
  7598                           tblptrl	equ	0xFF6
  7599                           tablat	equ	0xFF5
  7600                           prodh	equ	0xFF4
  7601                           prodl	equ	0xFF3
  7602                           postinc0	equ	0xFEE
  7603                           wreg	equ	0xFE8
  7604                           postdec1	equ	0xFE5
  7605                           fsr1h	equ	0xFE2
  7606                           fsr1l	equ	0xFE1
  7607                           indf2	equ	0xFDF
  7608                           postinc2	equ	0xFDE
  7609                           fsr2h	equ	0xFDA
  7610                           fsr2l	equ	0xFD9
  7611                           status	equ	0xFD8
  7612                           
  7613 ;; *************** function __ic2_display_set_cgram_address *****************
  7614 ;; Defined at:
  7615 ;;		line 339 in file "i2c.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  address         1    wreg     unsigned char 
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;  address         1   13[BANK0 ] unsigned char 
  7620 ;;  data_array      3   10[BANK0 ] unsigned char [3]
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  1    wreg      void 
  7623 ;; Registers used:
  7624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7631 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7634 ;;Total ram usage:        4 bytes
  7635 ;; Hardware stack levels used:    1
  7636 ;; Hardware stack levels required when called:   12
  7637 ;; This function calls:
  7638 ;;		__i2c_write
  7639 ;; This function is called by:
  7640 ;;		_i2c_display_program_custom_character
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text17
  7645  0120DA                     __ptext17:
  7646                           	opt stack 0
  7647  0120DA                     __ic2_display_set_cgram_address:
  7648                           	opt stack 15
  7649                           
  7650                           ;incstack = 0
  7651                           ;__ic2_display_set_cgram_address@address stored from wreg
  7652  0120DA  0100               	movlb	0	; () banked
  7653  0120DC  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
  7654                           
  7655                           ;i2c.c: 341: uint8_t data_array[3];;i2c.c: 346: address &= 0b001111111;
  7656  0120DE  0100               	movlb	0	; () banked
  7657  0120E0  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;i2c.c: 347: data_array[0] = 0b00000000;
  7661  0120E2  0E00               	movlw	0
  7662  0120E4  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;i2c.c: 348: data_array[1] = 0b00111000;
  7666  0120E6  0E38               	movlw	56
  7667  0120E8  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
  7668                           
  7669                           ;i2c.c: 349: data_array[2] = 0b01000000 | address;
  7670  0120EA  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
  7671  0120EC  0940               	iorlw	64
  7672  0120EE  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
  7673                           
  7674                           ; BSR set to: 0
  7675                           ;i2c.c: 352: _i2c_write(0b01111000, data_array, 3);
  7676  0120F0  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
  7677  0120F2  6F65               	movwf	__i2c_write@data& (0+255),b
  7678  0120F4  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
  7679  0120F6  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7680  0120F8  0E03               	movlw	3
  7681  0120FA  6F67               	movwf	__i2c_write@length& (0+255),b
  7682  0120FC  0E78               	movlw	120
  7683  0120FE  ECF4  F08C         	call	__i2c_write
  7684  012102  0012               	return		;funcret
  7685  012104                     __end_of__ic2_display_set_cgram_address:
  7686                           	opt stack 0
  7687                           tblptru	equ	0xFF8
  7688                           tblptrh	equ	0xFF7
  7689                           tblptrl	equ	0xFF6
  7690                           tablat	equ	0xFF5
  7691                           prodh	equ	0xFF4
  7692                           prodl	equ	0xFF3
  7693                           postinc0	equ	0xFEE
  7694                           wreg	equ	0xFE8
  7695                           postdec1	equ	0xFE5
  7696                           fsr1h	equ	0xFE2
  7697                           fsr1l	equ	0xFE1
  7698                           indf2	equ	0xFDF
  7699                           postinc2	equ	0xFDE
  7700                           fsr2h	equ	0xFDA
  7701                           fsr2l	equ	0xFD9
  7702                           status	equ	0xFD8
  7703                           
  7704 ;; *************** function _i2c_display_init *****************
  7705 ;; Defined at:
  7706 ;;		line 297 in file "i2c.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;		None
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1    wreg      void 
  7713 ;; Registers used:
  7714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7721 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7722 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7723 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7724 ;;Total ram usage:       10 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:   12
  7727 ;; This function calls:
  7728 ;;		__i2c_write
  7729 ;; This function is called by:
  7730 ;;		_display_init
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text18
  7735  011998                     __ptext18:
  7736                           	opt stack 0
  7737  011998                     _i2c_display_init:
  7738                           	opt stack 16
  7739                           
  7740                           ;i2c.c: 299: uint8_t init_sequence[9] = {;i2c.c: 300: 0x3A,;i2c.c: 302: 0b00011110,;i2c.
      +                          c: 303: 0x39,;i2c.c: 305: 0b00001100,;i2c.c: 306: 0x74,;i2c.c: 307: 0b1011100,;i2c.c: 30
      +                          8: 0x6d,;i2c.c: 309: 0x0c,;i2c.c: 310: 0x01;i2c.c: 311: };
  7741                           
  7742                           ;incstack = 0
  7743  011998  EE22  F0B8         	lfsr	2,i2c_display_init@F6892
  7744  01199C  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
  7745  0119A0  0E08               	movlw	8
  7746  0119A2                     u18651:
  7747  0119A2  CFDB FFE3          	movff	plusw2,plusw1
  7748  0119A6  06E8               	decf	wreg,f,c
  7749  0119A8  E2FC               	bc	u18651
  7750                           
  7751                           ;i2c.c: 314: LATAbits.LA3 = 0;
  7752  0119AA  9689               	bcf	3977,3,c	;volatile
  7753                           
  7754                           ;i2c.c: 315: _delay((unsigned long)((10)*(8000000/4000.0)));
  7755  0119AC  0E1A               	movlw	26
  7756  0119AE  0100               	movlb	0	; () banked
  7757  0119B0  6F6A               	movwf	??_i2c_display_init& (0+255),b
  7758  0119B2  0EF8               	movlw	248
  7759  0119B4                     u22677:
  7760  0119B4  2EE8               	decfsz	wreg,f,c
  7761  0119B6  D7FE               	bra	u22677
  7762  0119B8  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
  7763  0119BA  D7FC               	bra	u22677
  7764  0119BC  F000               	nop	
  7765                           
  7766                           ;i2c.c: 316: LATAbits.LA3 = 1;
  7767  0119BE  8689               	bsf	3977,3,c	;volatile
  7768                           
  7769                           ;i2c.c: 317: _delay((unsigned long)((50)*(8000000/4000.0)));
  7770  0119C0  0E82               	movlw	130
  7771  0119C2  0100               	movlb	0	; () banked
  7772  0119C4  6F6A               	movwf	??_i2c_display_init& (0+255),b
  7773  0119C6  0EDD               	movlw	221
  7774  0119C8                     u22687:
  7775  0119C8  2EE8               	decfsz	wreg,f,c
  7776  0119CA  D7FE               	bra	u22687
  7777  0119CC  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
  7778  0119CE  D7FC               	bra	u22687
  7779  0119D0  D000               	nop2	
  7780                           
  7781                           ;i2c.c: 323: _i2c_write(0b01111000, &init_sequence[0], 9);
  7782  0119D2  0E6B               	movlw	low i2c_display_init@init_sequence
  7783  0119D4  0100               	movlb	0	; () banked
  7784  0119D6  6F65               	movwf	__i2c_write@data& (0+255),b
  7785  0119D8  0E00               	movlw	high i2c_display_init@init_sequence
  7786  0119DA  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7787  0119DC  0E09               	movlw	9
  7788  0119DE  6F67               	movwf	__i2c_write@length& (0+255),b
  7789  0119E0  0E78               	movlw	120
  7790  0119E2  ECF4  F08C         	call	__i2c_write
  7791  0119E6  0012               	return		;funcret
  7792  0119E8                     __end_of_i2c_display_init:
  7793                           	opt stack 0
  7794                           tblptru	equ	0xFF8
  7795                           tblptrh	equ	0xFF7
  7796                           tblptrl	equ	0xFF6
  7797                           tablat	equ	0xFF5
  7798                           prodh	equ	0xFF4
  7799                           prodl	equ	0xFF3
  7800                           postinc0	equ	0xFEE
  7801                           wreg	equ	0xFE8
  7802                           postdec1	equ	0xFE5
  7803                           plusw1	equ	0xFE3
  7804                           fsr1h	equ	0xFE2
  7805                           fsr1l	equ	0xFE1
  7806                           indf2	equ	0xFDF
  7807                           postinc2	equ	0xFDE
  7808                           plusw2	equ	0xFDB
  7809                           fsr2h	equ	0xFDA
  7810                           fsr2l	equ	0xFD9
  7811                           status	equ	0xFD8
  7812                           
  7813 ;; *************** function __system_timer0_init *****************
  7814 ;; Defined at:
  7815 ;;		line 121 in file "os.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;		None
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1    wreg      void 
  7822 ;; Registers used:
  7823 ;;		wreg, status,2
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7833 ;;Total ram usage:        0 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:   10
  7836 ;; This function calls:
  7837 ;;		Nothing
  7838 ;; This function is called by:
  7839 ;;		_system_init
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text19
  7844  012082                     __ptext19:
  7845                           	opt stack 0
  7846  012082                     __system_timer0_init:
  7847                           	opt stack 19
  7848                           
  7849                           ;os.c: 126: T0CONbits.T0CS = 0;
  7850                           
  7851                           ;incstack = 0
  7852  012082  9AD5               	bcf	4053,5,c	;volatile
  7853                           
  7854                           ;os.c: 128: T0CONbits.T08BIT = 0;
  7855  012084  9CD5               	bcf	4053,6,c	;volatile
  7856                           
  7857                           ;os.c: 130: T0CONbits.T0PS2 = 0;
  7858  012086  94D5               	bcf	4053,2,c	;volatile
  7859                           
  7860                           ;os.c: 131: T0CONbits.T0PS1 = 1;
  7861  012088  82D5               	bsf	4053,1,c	;volatile
  7862                           
  7863                           ;os.c: 132: T0CONbits.T0PS0 = 0;
  7864  01208A  90D5               	bcf	4053,0,c	;volatile
  7865                           
  7866                           ;os.c: 134: T0CONbits.PSA = 0;
  7867  01208C  96D5               	bcf	4053,3,c	;volatile
  7868                           
  7869                           ;os.c: 136: TMR0H = 0xFA;
  7870  01208E  0EFA               	movlw	250
  7871  012090  6ED7               	movwf	4055,c	;volatile
  7872                           
  7873                           ;os.c: 137: TMR0L = 0x24;
  7874  012092  0E24               	movlw	36
  7875  012094  6ED6               	movwf	4054,c	;volatile
  7876                           
  7877                           ;os.c: 139: T0CONbits.TMR0ON = 1;
  7878  012096  8ED5               	bsf	4053,7,c	;volatile
  7879                           
  7880                           ;os.c: 142: INTCONbits.TMR0IF = 0;
  7881  012098  94F2               	bcf	intcon,2,c	;volatile
  7882                           
  7883                           ;os.c: 143: INTCONbits.TMR0IE = 1;
  7884  01209A  8AF2               	bsf	intcon,5,c	;volatile
  7885                           
  7886                           ;os.c: 144: INTCONbits.GIE = 1;
  7887  01209C  8EF2               	bsf	intcon,7,c	;volatile
  7888                           
  7889                           ;os.c: 147: os.subTimeSlot = 0;
  7890  01209E  0E00               	movlw	0
  7891  0120A0  0100               	movlb	0	; () banked
  7892  0120A2  6FCA               	movwf	_os& (0+255),b	;volatile
  7893                           
  7894                           ;os.c: 148: os.timeSlot = 0;
  7895  0120A4  0E00               	movlw	0
  7896  0120A6  6FCB               	movwf	(_os+1)& (0+255),b	;volatile
  7897                           
  7898                           ;os.c: 149: os.done = 0;
  7899  0120A8  0E00               	movlw	0
  7900  0120AA  6FCC               	movwf	(_os+2)& (0+255),b	;volatile
  7901                           
  7902                           ; BSR set to: 0
  7903  0120AC  0012               	return		;funcret
  7904  0120AE                     __end_of__system_timer0_init:
  7905                           	opt stack 0
  7906                           tblptru	equ	0xFF8
  7907                           tblptrh	equ	0xFF7
  7908                           tblptrl	equ	0xFF6
  7909                           tablat	equ	0xFF5
  7910                           prodh	equ	0xFF4
  7911                           prodl	equ	0xFF3
  7912                           intcon	equ	0xFF2
  7913                           postinc0	equ	0xFEE
  7914                           wreg	equ	0xFE8
  7915                           postdec1	equ	0xFE5
  7916                           plusw1	equ	0xFE3
  7917                           fsr1h	equ	0xFE2
  7918                           fsr1l	equ	0xFE1
  7919                           indf2	equ	0xFDF
  7920                           postinc2	equ	0xFDE
  7921                           plusw2	equ	0xFDB
  7922                           fsr2h	equ	0xFDA
  7923                           fsr2l	equ	0xFD9
  7924                           status	equ	0xFD8
  7925                           
  7926 ;; *************** function __system_pin_setup *****************
  7927 ;; Defined at:
  7928 ;;		line 55 in file "os.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;		None
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;		None
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  1    wreg      void 
  7935 ;; Registers used:
  7936 ;;		wreg, status,2
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7946 ;;Total ram usage:        0 bytes
  7947 ;; Hardware stack levels used:    1
  7948 ;; Hardware stack levels required when called:   10
  7949 ;; This function calls:
  7950 ;;		Nothing
  7951 ;; This function is called by:
  7952 ;;		_system_init
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           	psect	text20
  7957  01126C                     __ptext20:
  7958                           	opt stack 0
  7959  01126C                     __system_pin_setup:
  7960                           	opt stack 19
  7961                           
  7962                           ;os.c: 58: TRISDbits.TRISD5 = 1;
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;incstack = 0
  7966  01126C  8A95               	bsf	3989,5,c	;volatile
  7967                           
  7968                           ;os.c: 59: TRISDbits.TRISD4 = 0;
  7969  01126E  9895               	bcf	3989,4,c	;volatile
  7970                           
  7971                           ;os.c: 60: TRISDbits.TRISD6 = 0;
  7972  011270  9C95               	bcf	3989,6,c	;volatile
  7973                           
  7974                           ;os.c: 61: TRISDbits.TRISD7 = 0;
  7975  011272  9E95               	bcf	3989,7,c	;volatile
  7976                           
  7977                           ;os.c: 62: LATDbits.LD7 = 1;
  7978  011274  8E8C               	bsf	3980,7,c	;volatile
  7979                           
  7980                           ;os.c: 64: TRISBbits.TRISB3 = 1;
  7981  011276  8693               	bsf	3987,3,c	;volatile
  7982                           
  7983                           ;os.c: 65: ANCON1bits.PCFG9 = 0;
  7984  011278  010F               	movlb	15	; () banked
  7985  01127A  9349               	bcf	73,1,b	;volatile
  7986                           
  7987                           ;os.c: 67: TRISCbits.TRISC7 = 0;
  7988  01127C  9E94               	bcf	3988,7,c	;volatile
  7989                           
  7990                           ;os.c: 68: LATCbits.LC7 = 0;
  7991  01127E  9E8B               	bcf	3979,7,c	;volatile
  7992                           
  7993                           ;os.c: 70: TRISCbits.TRISC6 = 0;
  7994  011280  9C94               	bcf	3988,6,c	;volatile
  7995                           
  7996                           ;os.c: 71: LATCbits.LC6 = 0;
  7997  011282  9C8B               	bcf	3979,6,c	;volatile
  7998                           
  7999                           ;os.c: 73: TRISAbits.TRISA3 = 0;
  8000  011284  9692               	bcf	3986,3,c	;volatile
  8001                           
  8002                           ;os.c: 74: LATAbits.LA3 = 0;
  8003  011286  9689               	bcf	3977,3,c	;volatile
  8004                           
  8005                           ;os.c: 76: TRISCbits.TRISC1 = 0;
  8006  011288  9294               	bcf	3988,1,c	;volatile
  8007                           
  8008                           ;os.c: 77: LATCbits.LC1 = 0;
  8009  01128A  928B               	bcf	3979,1,c	;volatile
  8010                           
  8011                           ;os.c: 82: TRISBbits.TRISB5 = 1;
  8012  01128C  8A93               	bsf	3987,5,c	;volatile
  8013                           
  8014                           ;os.c: 83: TRISBbits.TRISB4 = 1;
  8015  01128E  8893               	bsf	3987,4,c	;volatile
  8016                           
  8017                           ;os.c: 85: TRISBbits.TRISB0 = 0;
  8018  011290  9093               	bcf	3987,0,c	;volatile
  8019                           
  8020                           ;os.c: 86: LATBbits.LB0 = 1;
  8021  011292  808A               	bsf	3978,0,c	;volatile
  8022                           
  8023                           ;os.c: 88: TRISBbits.TRISB2 = 0;
  8024  011294  9493               	bcf	3987,2,c	;volatile
  8025                           
  8026                           ;os.c: 89: LATBbits.LB2 = 0;
  8027  011296  948A               	bcf	3978,2,c	;volatile
  8028                           
  8029                           ;os.c: 91: TRISBbits.TRISB1 = 0;
  8030  011298  9293               	bcf	3987,1,c	;volatile
  8031                           
  8032                           ;os.c: 92: ANCON1bits.PCFG10 = 1;
  8033  01129A  8549               	bsf	73,2,b	;volatile
  8034                           
  8035                           ;os.c: 93: LATBbits.LB1 = 0;
  8036  01129C  928A               	bcf	3978,1,c	;volatile
  8037                           
  8038                           ; BSR set to: 15
  8039                           ;os.c: 94: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8040  01129E  0E55               	movlw	85
  8041  0112A0  6EA7               	movwf	4007,c	;volsfr
  8042  0112A2  0EAA               	movlw	170
  8043  0112A4  6EA7               	movwf	4007,c	;volsfr
  8044                           
  8045                           ; BSR set to: 15
  8046  0112A6  010E               	movlb	14	; () banked
  8047  0112A8  91BF               	bcf	191,0,b	;volatile
  8048                           
  8049                           ;os.c: 95: RPOR4 = 14;
  8050  0112AA  0E0E               	movlw	14
  8051  0112AC  6FC4               	movwf	196,b	;volatile
  8052                           
  8053                           ;os.c: 96: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8054  0112AE  0E55               	movlw	85
  8055  0112B0  6EA7               	movwf	4007,c	;volsfr
  8056  0112B2  0EAA               	movlw	170
  8057  0112B4  6EA7               	movwf	4007,c	;volsfr
  8058                           
  8059                           ; BSR set to: 14
  8060  0112B6  81BF               	bsf	191,0,b	;volatile
  8061                           
  8062                           ; BSR set to: 14
  8063                           ;os.c: 98: TRISDbits.TRISD2 = 1;
  8064  0112B8  8495               	bsf	3989,2,c	;volatile
  8065                           
  8066                           ; BSR set to: 14
  8067                           ;os.c: 100: TRISEbits.TRISE2 = 1;
  8068  0112BA  8496               	bsf	3990,2,c	;volatile
  8069                           
  8070                           ; BSR set to: 14
  8071                           ;os.c: 101: ANCON0bits.PCFG7 = 1;
  8072  0112BC  010F               	movlb	15	; () banked
  8073  0112BE  8F48               	bsf	72,7,b	;volatile
  8074                           
  8075                           ; BSR set to: 15
  8076                           ;os.c: 103: TRISEbits.TRISE0 = 1;
  8077  0112C0  8096               	bsf	3990,0,c	;volatile
  8078                           
  8079                           ; BSR set to: 15
  8080                           ;os.c: 104: ANCON0bits.PCFG5 = 1;
  8081  0112C2  8B48               	bsf	72,5,b	;volatile
  8082                           
  8083                           ; BSR set to: 15
  8084                           ;os.c: 106: TRISEbits.TRISE1 = 1;
  8085  0112C4  8296               	bsf	3990,1,c	;volatile
  8086                           
  8087                           ; BSR set to: 15
  8088                           ;os.c: 107: ANCON0bits.PCFG6 = 1;
  8089  0112C6  8D48               	bsf	72,6,b	;volatile
  8090                           
  8091                           ; BSR set to: 15
  8092                           ;os.c: 109: TRISAbits.TRISA0 = 1;
  8093  0112C8  8092               	bsf	3986,0,c	;volatile
  8094                           
  8095                           ; BSR set to: 15
  8096                           ;os.c: 110: ANCON0bits.PCFG0 = 1;
  8097  0112CA  8148               	bsf	72,0,b	;volatile
  8098                           
  8099                           ; BSR set to: 15
  8100                           ;os.c: 112: TRISAbits.TRISA2 = 1;
  8101  0112CC  8492               	bsf	3986,2,c	;volatile
  8102                           
  8103                           ; BSR set to: 15
  8104                           ;os.c: 113: ANCON0bits.PCFG2 = 1;
  8105  0112CE  8548               	bsf	72,2,b	;volatile
  8106                           
  8107                           ; BSR set to: 15
  8108                           ;os.c: 115: TRISAbits.TRISA1 = 1;
  8109  0112D0  8292               	bsf	3986,1,c	;volatile
  8110                           
  8111                           ; BSR set to: 15
  8112                           ;os.c: 116: ANCON0bits.PCFG1 = 1;
  8113  0112D2  8348               	bsf	72,1,b	;volatile
  8114                           
  8115                           ; BSR set to: 15
  8116  0112D4  0012               	return		;funcret
  8117  0112D6                     __end_of__system_pin_setup:
  8118                           	opt stack 0
  8119                           tblptru	equ	0xFF8
  8120                           tblptrh	equ	0xFF7
  8121                           tblptrl	equ	0xFF6
  8122                           tablat	equ	0xFF5
  8123                           prodh	equ	0xFF4
  8124                           prodl	equ	0xFF3
  8125                           intcon	equ	0xFF2
  8126                           postinc0	equ	0xFEE
  8127                           wreg	equ	0xFE8
  8128                           postdec1	equ	0xFE5
  8129                           plusw1	equ	0xFE3
  8130                           fsr1h	equ	0xFE2
  8131                           fsr1l	equ	0xFE1
  8132                           indf2	equ	0xFDF
  8133                           postinc2	equ	0xFDE
  8134                           plusw2	equ	0xFDB
  8135                           fsr2h	equ	0xFDA
  8136                           fsr2l	equ	0xFD9
  8137                           status	equ	0xFD8
  8138                           
  8139 ;; *************** function __backlight_init *****************
  8140 ;; Defined at:
  8141 ;;		line 154 in file "os.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;		None
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;		None
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  1    wreg      void 
  8148 ;; Registers used:
  8149 ;;		None
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8159 ;;Total ram usage:        0 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; Hardware stack levels required when called:   10
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_system_init
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text21
  8170  012378                     __ptext21:
  8171                           	opt stack 0
  8172  012378                     __backlight_init:
  8173                           	opt stack 19
  8174                           
  8175                           ;os.c: 156: LATCbits.LC1 = 1;
  8176                           
  8177                           ; BSR set to: 15
  8178                           ;incstack = 0
  8179  012378  828B               	bsf	3979,1,c	;volatile
  8180  01237A  0012               	return		;funcret
  8181  01237C                     __end_of__backlight_init:
  8182                           	opt stack 0
  8183                           tblptru	equ	0xFF8
  8184                           tblptrh	equ	0xFF7
  8185                           tblptrl	equ	0xFF6
  8186                           tablat	equ	0xFF5
  8187                           prodh	equ	0xFF4
  8188                           prodl	equ	0xFF3
  8189                           intcon	equ	0xFF2
  8190                           postinc0	equ	0xFEE
  8191                           wreg	equ	0xFE8
  8192                           postdec1	equ	0xFE5
  8193                           plusw1	equ	0xFE3
  8194                           fsr1h	equ	0xFE2
  8195                           fsr1l	equ	0xFE1
  8196                           indf2	equ	0xFDF
  8197                           postinc2	equ	0xFDE
  8198                           plusw2	equ	0xFDB
  8199                           fsr2h	equ	0xFDA
  8200                           fsr2l	equ	0xFD9
  8201                           status	equ	0xFD8
  8202                           
  8203 ;; *************** function _motor_process_cue *****************
  8204 ;; Defined at:
  8205 ;;		line 116 in file "motor.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;		None
  8208 ;; Auto vars:     Size  Location     Type
  8209 ;;		None
  8210 ;; Return value:  Size  Location     Type
  8211 ;;                  1    wreg      void 
  8212 ;; Registers used:
  8213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8214 ;; Tracked objects:
  8215 ;;		On entry : 0/0
  8216 ;;		On exit  : 0/0
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8223 ;;Total ram usage:        0 bytes
  8224 ;; Hardware stack levels used:    1
  8225 ;; Hardware stack levels required when called:   11
  8226 ;; This function calls:
  8227 ;;		__motor_run
  8228 ;;		_motor_items_in_cue
  8229 ;; This function is called by:
  8230 ;;		_main
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           	psect	text22
  8235  010FC6                     __ptext22:
  8236                           	opt stack 0
  8237  010FC6                     _motor_process_cue:
  8238                           	opt stack 19
  8239                           
  8240                           ;motor.c: 118: if(motor_items_in_cue()==0)
  8241                           
  8242                           ;incstack = 0
  8243  010FC6  EC93  F091         	call	_motor_items_in_cue	;wreg free
  8244  010FCA  0900               	iorlw	0
  8245  010FCC  B4D8               	btfsc	status,2,c
  8246  010FCE  0012               	return	
  8247                           
  8248                           ;motor.c: 123: else if(os.busy)
  8249                           
  8250                           ;motor.c: 122: }
  8251                           
  8252                           ;motor.c: 119: {;motor.c: 121: return;
  8253  010FD0  0100               	movlb	0	; () banked
  8254  010FD2  51D8               	movf	(_os+14)& (0+255),w,b	;volatile
  8255  010FD4  A4D8               	btfss	status,2,c
  8256  010FD6  0012               	return	
  8257                           
  8258                           ; BSR set to: 0
  8259                           ;motor.c: 128: else;motor.c: 129: {;motor.c: 131: _motor_run(;motor.c: 132: motor_comman
      +                          d_cue[motor_cue_read_index].direction,;motor.c: 133: motor_command_cue[motor_cue_read_in
      +                          dex].distance,;motor.c: 134: motor_command_cue[motor_cue_read_index].speed;motor.c: 135:
      +                           );
  8260                           
  8261                           ; BSR set to: 0
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;motor.c: 127: }
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;motor.c: 124: {;motor.c: 126: return;
  8268  010FD8  51FB               	movf	_motor_cue_read_index& (0+255),w,b
  8269  010FDA  0D07               	mullw	7
  8270  010FDC  0E01               	movlw	1
  8271  010FDE  26F3               	addwf	prodl,f,c
  8272  010FE0  0E00               	movlw	0
  8273  010FE2  22F4               	addwfc	prodh,f,c
  8274  010FE4  0E00               	movlw	low _motor_command_cue
  8275  010FE6  24F3               	addwf	prodl,w,c
  8276  010FE8  6ED9               	movwf	fsr2l,c
  8277  010FEA  0E02               	movlw	high _motor_command_cue
  8278  010FEC  20F4               	addwfc	prodh,w,c
  8279  010FEE  6EDA               	movwf	fsr2h,c
  8280  010FF0  CFDE F060          	movff	postinc2,__motor_run@distance_in_steps
  8281  010FF4  CFDE F061          	movff	postinc2,__motor_run@distance_in_steps+1
  8282  010FF8  CFDE F062          	movff	postinc2,__motor_run@distance_in_steps+2
  8283  010FFC  CFDE F063          	movff	postinc2,__motor_run@distance_in_steps+3
  8284  011000  51FB               	movf	_motor_cue_read_index& (0+255),w,b
  8285  011002  0D07               	mullw	7
  8286  011004  0E05               	movlw	5
  8287  011006  26F3               	addwf	prodl,f,c
  8288  011008  0E00               	movlw	0
  8289  01100A  22F4               	addwfc	prodh,f,c
  8290  01100C  0E00               	movlw	low _motor_command_cue
  8291  01100E  24F3               	addwf	prodl,w,c
  8292  011010  6ED9               	movwf	fsr2l,c
  8293  011012  0E02               	movlw	high _motor_command_cue
  8294  011014  20F4               	addwfc	prodh,w,c
  8295  011016  6EDA               	movwf	fsr2h,c
  8296  011018  CFDE F064          	movff	postinc2,__motor_run@speed
  8297  01101C  CFDD F065          	movff	postdec2,__motor_run@speed+1
  8298  011020  51FB               	movf	_motor_cue_read_index& (0+255),w,b
  8299  011022  0D07               	mullw	7
  8300  011024  0E00               	movlw	low _motor_command_cue
  8301  011026  24F3               	addwf	prodl,w,c
  8302  011028  6ED9               	movwf	fsr2l,c
  8303  01102A  0E02               	movlw	high _motor_command_cue
  8304  01102C  20F4               	addwfc	prodh,w,c
  8305  01102E  6EDA               	movwf	fsr2h,c
  8306  011030  50DF               	movf	indf2,w,c
  8307  011032  EC2A  F06E         	call	__motor_run
  8308                           
  8309                           ;motor.c: 137: ++motor_cue_read_index;
  8310  011036  0100               	movlb	0	; () banked
  8311  011038  2BFB               	incf	_motor_cue_read_index& (0+255),f,b
  8312                           
  8313                           ; BSR set to: 0
  8314  01103A  0012               	return	
  8315  01103C                     __end_of_motor_process_cue:
  8316                           	opt stack 0
  8317                           tblptru	equ	0xFF8
  8318                           tblptrh	equ	0xFF7
  8319                           tblptrl	equ	0xFF6
  8320                           tablat	equ	0xFF5
  8321                           prodh	equ	0xFF4
  8322                           prodl	equ	0xFF3
  8323                           intcon	equ	0xFF2
  8324                           postinc0	equ	0xFEE
  8325                           wreg	equ	0xFE8
  8326                           postdec1	equ	0xFE5
  8327                           plusw1	equ	0xFE3
  8328                           fsr1h	equ	0xFE2
  8329                           fsr1l	equ	0xFE1
  8330                           indf2	equ	0xFDF
  8331                           postinc2	equ	0xFDE
  8332                           postdec2	equ	0xFDD
  8333                           plusw2	equ	0xFDB
  8334                           fsr2h	equ	0xFDA
  8335                           fsr2l	equ	0xFD9
  8336                           status	equ	0xFD8
  8337                           
  8338 ;; *************** function _encoder_statemachine *****************
  8339 ;; Defined at:
  8340 ;;		line 132 in file "encoder.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;		None
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;  tmp             4   80[BANK0 ] float 
  8345 ;;  distance_to_    4   76[BANK0 ] long 
  8346 ;;  target_posit    4   70[BANK0 ] unsigned long 
  8347 ;;  target_divid    2   74[BANK0 ] unsigned int 
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  1    wreg      void 
  8350 ;; Registers used:
  8351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8358 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8359 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8360 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8361 ;;Total ram usage:       22 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; Hardware stack levels required when called:   13
  8364 ;; This function calls:
  8365 ;;		___fldiv
  8366 ;;		___flmul
  8367 ;;		___fltol
  8368 ;;		___xxtofl
  8369 ;;		_encoder_next_arc_step_size
  8370 ;;		_encoder_next_divide_step_size
  8371 ;;		_encoder_next_setup_stepsize
  8372 ;;		_motor_change_speed
  8373 ;;		_motor_nonzero_steps_from_degrees
  8374 ;;		_motor_schedule_command
  8375 ;;		_motor_stop
  8376 ;; This function is called by:
  8377 ;;		_main
  8378 ;; This function uses a non-reentrant model
  8379 ;;
  8380                           
  8381                           	psect	text23
  8382  00A238                     __ptext23:
  8383                           	opt stack 0
  8384  00A238                     _encoder_statemachine:
  8385                           	opt stack 17
  8386                           
  8387                           ;encoder.c: 134: uint16_t target_divide_position;;encoder.c: 135: uint32_t target_positi
      +                          on_in_steps;;encoder.c: 136: int32_t distance_to_target_in_steps;;encoder.c: 137: float 
      +                          tmp;;encoder.c: 140: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && o
      +                          s.button2==0)
  8388                           
  8389                           ;incstack = 0
  8390  00A238  0100               	movlb	0	; () banked
  8391  00A23A  51CD               	movf	(_os+3)& (0+255),w,b	;volatile
  8392  00A23C  A4D8               	btfss	status,2,c
  8393  00A23E  EFD8  F058         	goto	l2448
  8394                           
  8395                           ; BSR set to: 0
  8396  00A242  51CF               	movf	(_os+5)& (0+255),w,b	;volatile
  8397  00A244  A4D8               	btfss	status,2,c
  8398  00A246  EFD8  F058         	goto	l2448
  8399                           
  8400                           ; BSR set to: 0
  8401  00A24A  51CE               	movf	(_os+4)& (0+255),w,b	;volatile
  8402  00A24C  A4D8               	btfss	status,2,c
  8403  00A24E  EFD8  F058         	goto	l2448
  8404                           
  8405                           ; BSR set to: 0
  8406  00A252  51D0               	movf	(_os+6)& (0+255),w,b	;volatile
  8407  00A254  B4D8               	btfsc	status,2,c
  8408  00A256  0012               	return	
  8409  00A258  EFD8  F058         	goto	l2448
  8410  00A25C                     
  8411                           ; BSR set to: 0
  8412                           ;encoder.c: 152: if(os.button1==1 || os.button2==1)
  8413                           
  8414                           ; BSR set to: 0
  8415  00A25C  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
  8416  00A25E  B4D8               	btfsc	status,2,c
  8417  00A260  D003               	goto	u20370
  8418                           
  8419                           ; BSR set to: 0
  8420  00A262  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
  8421  00A264  A4D8               	btfss	status,2,c
  8422  00A266  D002               	goto	l2452
  8423  00A268                     u20370:
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;encoder.c: 153: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
  8427                           
  8428                           ; BSR set to: 0
  8429  00A268  0E11               	movlw	17
  8430  00A26A  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8431  00A26C                     l2452:
  8432                           
  8433                           ; BSR set to: 0
  8434                           ;encoder.c: 154: if(os.encoder1Count+os.encoder2Count>0)
  8435                           
  8436                           ; BSR set to: 0
  8437  00A26C  C0CF  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8438  00A270  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8439  00A272  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8440  00A274  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8441  00A276  C0CD  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8442  00A27A  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8443  00A27C  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8444  00A27E  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8445  00A280  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8446  00A282  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8447  00A284  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8448  00A286  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8449  00A288  BFA1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
  8450  00A28A  D007               	goto	l2455
  8451  00A28C  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  8452  00A28E  E103               	bnz	u20380
  8453  00A290  05A0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
  8454  00A292  A0D8               	btfss	status,0,c
  8455  00A294  D002               	goto	l2455
  8456  00A296                     u20380:
  8457                           
  8458                           ; BSR set to: 0
  8459                           ;encoder.c: 155: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
  8460  00A296  0E02               	movlw	2
  8461  00A298  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8462  00A29A                     l2455:
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;encoder.c: 156: if(os.encoder1Count+os.encoder2Count<0)
  8466                           
  8467                           ; BSR set to: 0
  8468  00A29A  C0CF  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8469  00A29E  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8470  00A2A0  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8471  00A2A2  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8472  00A2A4  C0CD  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8473  00A2A8  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8474  00A2AA  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8475  00A2AC  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8476  00A2AE  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8477  00A2B0  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8478  00A2B2  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8479  00A2B4  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8480  00A2B6  AFA1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
  8481  00A2B8  EF01  F059         	goto	l2483
  8482                           
  8483                           ; BSR set to: 0
  8484                           ;encoder.c: 157: os.displayState = DISPLAY_STATE_MAIN_ZERO;
  8485  00A2BC  0E05               	movlw	5
  8486  00A2BE  EFC7  F058         	goto	L17
  8487  00A2C2                     
  8488                           ; BSR set to: 0
  8489                           ;encoder.c: 160: if(os.button1==1 || os.button2==1)
  8490                           
  8491                           ; BSR set to: 0
  8492  00A2C2  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
  8493  00A2C4  B4D8               	btfsc	status,2,c
  8494  00A2C6  D003               	goto	u20410
  8495                           
  8496                           ; BSR set to: 0
  8497  00A2C8  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
  8498  00A2CA  A4D8               	btfss	status,2,c
  8499  00A2CC  D002               	goto	l2459
  8500  00A2CE                     u20410:
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;encoder.c: 161: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
  8504                           
  8505                           ; BSR set to: 0
  8506  00A2CE  0E31               	movlw	49
  8507  00A2D0  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8508  00A2D2                     l2459:
  8509                           
  8510                           ; BSR set to: 0
  8511                           ;encoder.c: 162: if(os.encoder1Count+os.encoder2Count>0)
  8512                           
  8513                           ; BSR set to: 0
  8514  00A2D2  C0CF  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8515  00A2D6  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8516  00A2D8  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8517  00A2DA  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8518  00A2DC  C0CD  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8519  00A2E0  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8520  00A2E2  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8521  00A2E4  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8522  00A2E6  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8523  00A2E8  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8524  00A2EA  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8525  00A2EC  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8526  00A2EE  BFA1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
  8527  00A2F0  D007               	goto	l2462
  8528  00A2F2  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  8529  00A2F4  E103               	bnz	u20420
  8530  00A2F6  05A0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
  8531  00A2F8  A0D8               	btfss	status,0,c
  8532  00A2FA  D002               	goto	l2462
  8533  00A2FC                     u20420:
  8534                           
  8535                           ; BSR set to: 0
  8536                           ;encoder.c: 163: os.displayState = DISPLAY_STATE_MAIN_ARC;
  8537  00A2FC  0E03               	movlw	3
  8538  00A2FE  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8539  00A300                     l2462:
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;encoder.c: 164: if(os.encoder1Count+os.encoder2Count<0)
  8543                           
  8544                           ; BSR set to: 0
  8545  00A300  C0CF  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8546  00A304  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8547  00A306  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8548  00A308  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8549  00A30A  C0CD  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8550  00A30E  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8551  00A310  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8552  00A312  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8553  00A314  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8554  00A316  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8555  00A318  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8556  00A31A  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8557  00A31C  AFA1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
  8558  00A31E  EF01  F059         	goto	l2483
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;encoder.c: 165: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  8562  00A322  0E01               	movlw	1
  8563  00A324  EFC7  F058         	goto	L17
  8564  00A328                     
  8565                           ; BSR set to: 0
  8566                           ;encoder.c: 168: if(os.button1==1 || os.button2==1)
  8567                           
  8568                           ; BSR set to: 0
  8569  00A328  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
  8570  00A32A  B4D8               	btfsc	status,2,c
  8571  00A32C  D003               	goto	u20450
  8572                           
  8573                           ; BSR set to: 0
  8574  00A32E  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
  8575  00A330  A4D8               	btfss	status,2,c
  8576  00A332  D002               	goto	l2465
  8577  00A334                     u20450:
  8578                           
  8579                           ; BSR set to: 0
  8580                           ;encoder.c: 169: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
  8581                           
  8582                           ; BSR set to: 0
  8583  00A334  0E51               	movlw	81
  8584  00A336  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8585  00A338                     l2465:
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;encoder.c: 170: if(os.encoder1Count+os.encoder2Count>0)
  8589                           
  8590                           ; BSR set to: 0
  8591  00A338  C0CF  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8592  00A33C  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8593  00A33E  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8594  00A340  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8595  00A342  C0CD  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8596  00A346  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8597  00A348  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8598  00A34A  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8599  00A34C  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8600  00A34E  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8601  00A350  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8602  00A352  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8603  00A354  BFA1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
  8604  00A356  D007               	goto	l2468
  8605  00A358  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  8606  00A35A  E103               	bnz	u20460
  8607  00A35C  05A0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
  8608  00A35E  A0D8               	btfss	status,0,c
  8609  00A360  D002               	goto	l2468
  8610  00A362                     u20460:
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;encoder.c: 171: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
  8614  00A362  0E04               	movlw	4
  8615  00A364  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8616  00A366                     l2468:
  8617                           
  8618                           ; BSR set to: 0
  8619                           ;encoder.c: 172: if(os.encoder1Count+os.encoder2Count<0)
  8620                           
  8621                           ; BSR set to: 0
  8622  00A366  C0CF  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8623  00A36A  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8624  00A36C  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8625  00A36E  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8626  00A370  C0CD  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8627  00A374  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8628  00A376  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8629  00A378  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8630  00A37A  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8631  00A37C  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8632  00A37E  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8633  00A380  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8634  00A382  AFA1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
  8635  00A384  EF01  F059         	goto	l2483
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;encoder.c: 173: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
  8639  00A388  0E02               	movlw	2
  8640  00A38A  EFC7  F058         	goto	L17
  8641  00A38E                     
  8642                           ; BSR set to: 0
  8643                           ;encoder.c: 176: if(os.button1==1 || os.button2==1)
  8644                           
  8645                           ; BSR set to: 0
  8646  00A38E  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
  8647  00A390  B4D8               	btfsc	status,2,c
  8648  00A392  D003               	goto	u20490
  8649                           
  8650                           ; BSR set to: 0
  8651  00A394  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
  8652  00A396  A4D8               	btfss	status,2,c
  8653  00A398  D002               	goto	l2471
  8654  00A39A                     u20490:
  8655                           
  8656                           ; BSR set to: 0
  8657                           ;encoder.c: 177: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
  8658                           
  8659                           ; BSR set to: 0
  8660  00A39A  0E82               	movlw	130
  8661  00A39C  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8662  00A39E                     l2471:
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;encoder.c: 178: if(os.encoder1Count+os.encoder2Count>0)
  8666                           
  8667                           ; BSR set to: 0
  8668  00A39E  C0CF  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8669  00A3A2  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8670  00A3A4  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8671  00A3A6  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8672  00A3A8  C0CD  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8673  00A3AC  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8674  00A3AE  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8675  00A3B0  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8676  00A3B2  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8677  00A3B4  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8678  00A3B6  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8679  00A3B8  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8680  00A3BA  BFA1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
  8681  00A3BC  D007               	goto	l2474
  8682  00A3BE  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  8683  00A3C0  E103               	bnz	u20500
  8684  00A3C2  05A0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
  8685  00A3C4  A0D8               	btfss	status,0,c
  8686  00A3C6  D002               	goto	l2474
  8687  00A3C8                     u20500:
  8688                           
  8689                           ; BSR set to: 0
  8690                           ;encoder.c: 179: os.displayState = DISPLAY_STATE_MAIN_ZERO;
  8691  00A3C8  0E05               	movlw	5
  8692  00A3CA  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8693  00A3CC                     l2474:
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;encoder.c: 180: if(os.encoder1Count+os.encoder2Count<0)
  8697                           
  8698                           ; BSR set to: 0
  8699  00A3CC  C0CF  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8700  00A3D0  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8701  00A3D2  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8702  00A3D4  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8703  00A3D6  C0CD  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8704  00A3DA  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8705  00A3DC  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8706  00A3DE  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8707  00A3E0  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8708  00A3E2  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8709  00A3E4  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8710  00A3E6  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8711  00A3E8  AFA1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
  8712  00A3EA  EF01  F059         	goto	l2483
  8713                           
  8714                           ; BSR set to: 0
  8715                           ;encoder.c: 181: os.displayState = DISPLAY_STATE_MAIN_ARC;
  8716  00A3EE  0E03               	movlw	3
  8717  00A3F0  EFC7  F058         	goto	L17
  8718  00A3F4                     
  8719                           ; BSR set to: 0
  8720                           ;encoder.c: 184: if(os.button1==1 || os.button2==1)
  8721                           
  8722                           ; BSR set to: 0
  8723  00A3F4  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
  8724  00A3F6  B4D8               	btfsc	status,2,c
  8725  00A3F8  D003               	goto	u20530
  8726                           
  8727                           ; BSR set to: 0
  8728  00A3FA  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
  8729  00A3FC  A4D8               	btfss	status,2,c
  8730  00A3FE  D002               	goto	l2477
  8731  00A400                     u20530:
  8732                           
  8733                           ; BSR set to: 0
  8734                           ;encoder.c: 185: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
  8735                           
  8736                           ; BSR set to: 0
  8737  00A400  0E71               	movlw	113
  8738  00A402  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8739  00A404                     l2477:
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;encoder.c: 186: if(os.encoder1Count+os.encoder2Count>0)
  8743                           
  8744                           ; BSR set to: 0
  8745  00A404  C0CF  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8746  00A408  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8747  00A40A  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8748  00A40C  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8749  00A40E  C0CD  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8750  00A412  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8751  00A414  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8752  00A416  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8753  00A418  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8754  00A41A  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8755  00A41C  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8756  00A41E  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8757  00A420  BFA1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
  8758  00A422  D007               	goto	l2480
  8759  00A424  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  8760  00A426  E103               	bnz	u20540
  8761  00A428  05A0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
  8762  00A42A  A0D8               	btfss	status,0,c
  8763  00A42C  D002               	goto	l2480
  8764  00A42E                     u20540:
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;encoder.c: 187: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  8768  00A42E  0E01               	movlw	1
  8769  00A430  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8770  00A432                     l2480:
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;encoder.c: 188: if(os.encoder1Count+os.encoder2Count<0)
  8774                           
  8775                           ; BSR set to: 0
  8776  00A432  C0CF  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8777  00A436  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8778  00A438  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8779  00A43A  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8780  00A43C  C0CD  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8781  00A440  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8782  00A442  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8783  00A444  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8784  00A446  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8785  00A448  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8786  00A44A  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8787  00A44C  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8788  00A44E  AFA1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
  8789  00A450  EF01  F059         	goto	l2483
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;encoder.c: 189: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
  8793  00A454  0E04               	movlw	4
  8794  00A456  EFC7  F058         	goto	L17
  8795  00A45A                     
  8796                           ; BSR set to: 0
  8797                           
  8798                           ; BSR set to: 0
  8799  00A45A  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
  8800                           
  8801                           ; Switch size 1, requested type "space"
  8802                           ; Number of cases is 6, Range of values is 1 to 240
  8803                           ; switch strategies available:
  8804                           ; Name         Instructions Cycles
  8805                           ; simple_byte           19    10 (average)
  8806                           ;	Chosen strategy is simple_byte
  8807  00A45C  0A01               	xorlw	1	; case 1
  8808  00A45E  B4D8               	btfsc	status,2,c
  8809  00A460  D6FD               	goto	l2451
  8810  00A462  0A03               	xorlw	3	; case 2
  8811  00A464  B4D8               	btfsc	status,2,c
  8812  00A466  D72D               	goto	l2458
  8813  00A468  0A01               	xorlw	1	; case 3
  8814  00A46A  B4D8               	btfsc	status,2,c
  8815  00A46C  D75D               	goto	l2464
  8816  00A46E  0A07               	xorlw	7	; case 4
  8817  00A470  B4D8               	btfsc	status,2,c
  8818  00A472  D78D               	goto	l2470
  8819  00A474  0A01               	xorlw	1	; case 5
  8820  00A476  B4D8               	btfsc	status,2,c
  8821  00A478  D7BD               	goto	l2476
  8822  00A47A  0AF5               	xorlw	245	; case 240
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;encoder.c: 195: break;
  8826  00A47C  EF01  F059         	goto	l2483
  8827  00A480                     
  8828                           ; BSR set to: 0
  8829                           ;encoder.c: 201: if(os.button1==1)
  8830                           
  8831                           ; BSR set to: 0
  8832  00A480  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
  8833  00A482  A4D8               	btfss	status,2,c
  8834  00A484  D00E               	goto	l2487
  8835                           
  8836                           ; BSR set to: 0
  8837                           ;encoder.c: 202: {;encoder.c: 203: os.current_position_in_steps = 0;
  8838  00A486  0E00               	movlw	0
  8839  00A488  6FD1               	movwf	(_os+7)& (0+255),b	;volatile
  8840  00A48A  0E00               	movlw	0
  8841  00A48C  6FD2               	movwf	(_os+8)& (0+255),b	;volatile
  8842  00A48E  0E00               	movlw	0
  8843  00A490  6FD3               	movwf	(_os+9)& (0+255),b	;volatile
  8844  00A492  0E00               	movlw	0
  8845  00A494  6FD4               	movwf	(_os+10)& (0+255),b	;volatile
  8846                           
  8847                           ;encoder.c: 204: os.divide_position = 0;
  8848  00A496  0E00               	movlw	0
  8849  00A498  6FE1               	movwf	(_os+23)& (0+255),b	;volatile
  8850  00A49A  0E00               	movlw	0
  8851  00A49C  6FE0               	movwf	(_os+22)& (0+255),b	;volatile
  8852                           
  8853                           ;encoder.c: 205: os.displayState = DISPLAY_STATE_SETUP2_CCW;
  8854  00A49E  0E21               	movlw	33
  8855  00A4A0  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8856  00A4A2                     l2487:
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;encoder.c: 206: };encoder.c: 207: if(os.encoder1Count>0)
  8860                           
  8861                           ; BSR set to: 0
  8862  00A4A2  51CD               	movf	(_os+3)& (0+255),w,b	;volatile
  8863  00A4A4  0A80               	xorlw	128
  8864  00A4A6  0F7F               	addlw	-129
  8865  00A4A8  A0D8               	btfss	status,0,c
  8866  00A4AA  D002               	goto	l2488
  8867                           
  8868                           ; BSR set to: 0
  8869                           ;encoder.c: 208: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
  8870  00A4AC  0E12               	movlw	18
  8871  00A4AE  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8872  00A4B0                     l2488:
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;encoder.c: 209: if(os.encoder1Count<0)
  8876                           
  8877                           ; BSR set to: 0
  8878  00A4B0  AFCD               	btfss	(_os+3)& (0+255),7,b	;volatile
  8879  00A4B2  D01A               	goto	l2490
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;encoder.c: 210: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
  8883  00A4B4  0E12               	movlw	18
  8884  00A4B6  D00F               	goto	L6
  8885  00A4B8                     
  8886                           ; BSR set to: 0
  8887                           ;encoder.c: 213: if(os.button1==1)
  8888                           
  8889                           ; BSR set to: 0
  8890  00A4B8  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
  8891  00A4BA  A4D8               	btfss	status,2,c
  8892  00A4BC  D002               	goto	l2492
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;encoder.c: 214: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  8896  00A4BE  0E01               	movlw	1
  8897  00A4C0  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8898  00A4C2                     l2492:
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;encoder.c: 215: if(os.encoder1Count>0)
  8902                           
  8903                           ; BSR set to: 0
  8904  00A4C2  51CD               	movf	(_os+3)& (0+255),w,b	;volatile
  8905  00A4C4  0A80               	xorlw	128
  8906  00A4C6  0F7F               	addlw	-129
  8907  00A4C8  A0D8               	btfss	status,0,c
  8908  00A4CA  D002               	goto	l2493
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;encoder.c: 216: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
  8912  00A4CC  0E11               	movlw	17
  8913  00A4CE  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8914  00A4D0                     l2493:
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;encoder.c: 217: if(os.encoder1Count<0)
  8918                           
  8919                           ; BSR set to: 0
  8920  00A4D0  AFCD               	btfss	(_os+3)& (0+255),7,b	;volatile
  8921  00A4D2  D00A               	goto	l2490
  8922                           
  8923                           ; BSR set to: 0
  8924                           ;encoder.c: 218: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
  8925  00A4D4  0E11               	movlw	17
  8926  00A4D6                     L6:
  8927  00A4D6  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;encoder.c: 220: }
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;encoder.c: 219: break;
  8934  00A4D8  D007               	goto	l2490
  8935  00A4DA                     
  8936                           ; BSR set to: 0
  8937                           
  8938                           ; BSR set to: 0
  8939  00A4DA  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
  8940                           
  8941                           ; Switch size 1, requested type "space"
  8942                           ; Number of cases is 2, Range of values is 17 to 18
  8943                           ; switch strategies available:
  8944                           ; Name         Instructions Cycles
  8945                           ; simple_byte            7     4 (average)
  8946                           ;	Chosen strategy is simple_byte
  8947  00A4DC  0A11               	xorlw	17	; case 17
  8948  00A4DE  B4D8               	btfsc	status,2,c
  8949  00A4E0  D7CF               	goto	l2486
  8950  00A4E2  0A03               	xorlw	3	; case 18
  8951  00A4E4  B4D8               	btfsc	status,2,c
  8952  00A4E6  D7E8               	goto	l2491
  8953  00A4E8                     l2490:
  8954                           
  8955                           ; BSR set to: 0
  8956                           ;encoder.c: 221: if(os.button2==1)
  8957                           
  8958                           ; BSR set to: 0
  8959  00A4E8  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
  8960  00A4EA  A4D8               	btfss	status,2,c
  8961  00A4EC  D00A               	goto	l2495
  8962                           
  8963                           ; BSR set to: 0
  8964                           ;encoder.c: 222: {;encoder.c: 223: os.setup_step_size = encoder_next_setup_stepsize(os.s
      +                          etup_step_size);
  8965  00A4EE  C0DA  F060         	movff	_os+16,encoder_next_setup_stepsize@old_stepsize	;volatile
  8966  00A4F2  C0DB  F061         	movff	_os+17,encoder_next_setup_stepsize@old_stepsize+1	;volatile
  8967  00A4F6  EC58  F088         	call	_encoder_next_setup_stepsize	;wreg free
  8968  00A4FA  C060  F0DA         	movff	?_encoder_next_setup_stepsize,_os+16	;volatile
  8969  00A4FE  C061  F0DB         	movff	?_encoder_next_setup_stepsize+1,_os+17	;volatile
  8970  00A502                     l2495:
  8971                           
  8972                           ;encoder.c: 224: };encoder.c: 225: if(os.encoder2Count>0)
  8973  00A502  0100               	movlb	0	; () banked
  8974  00A504  51CF               	movf	(_os+5)& (0+255),w,b	;volatile
  8975  00A506  0A80               	xorlw	128
  8976  00A508  0F7F               	addlw	-129
  8977  00A50A  A0D8               	btfss	status,0,c
  8978  00A50C  D019               	goto	l2497
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;encoder.c: 226: {;encoder.c: 228: if(!os.busy)
  8982  00A50E  51D8               	movf	(_os+14)& (0+255),w,b	;volatile
  8983  00A510  A4D8               	btfss	status,2,c
  8984  00A512  D016               	goto	l2497
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;encoder.c: 229: motor_schedule_command(MOTOR_DIRECTION_CW, motor_nonzero_steps_from_deg
      +                          rees(os.setup_step_size), 0);
  8988  00A514  C0DA  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
  8989  00A518  C0DB  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
  8990  00A51C  EC44  F08D         	call	_motor_nonzero_steps_from_degrees	;wreg free
  8991  00A520  C08F  F097         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
  8992  00A524  C090  F098         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
  8993  00A528  C091  F099         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
  8994  00A52C  C092  F09A         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
  8995  00A530  0E00               	movlw	0
  8996  00A532  0100               	movlb	0	; () banked
  8997  00A534  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  8998  00A536  0E00               	movlw	0
  8999  00A538  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9000  00A53A  0E01               	movlw	1
  9001  00A53C  EC44  F084         	call	_motor_schedule_command
  9002  00A540                     l2497:
  9003                           
  9004                           ;encoder.c: 230: };encoder.c: 231: if(os.encoder2Count<0)
  9005  00A540  0100               	movlb	0	; () banked
  9006  00A542  AFCF               	btfss	(_os+5)& (0+255),7,b	;volatile
  9007  00A544  EF01  F059         	goto	l2483
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;encoder.c: 232: {;encoder.c: 234: if(!os.busy)
  9011  00A548  51D8               	movf	(_os+14)& (0+255),w,b	;volatile
  9012  00A54A  A4D8               	btfss	status,2,c
  9013  00A54C  EF01  F059         	goto	l2483
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;encoder.c: 235: motor_schedule_command(MOTOR_DIRECTION_CCW, motor_nonzero_steps_from_de
      +                          grees(os.setup_step_size), 0);
  9017  00A550  C0DA  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
  9018  00A554  C0DB  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
  9019  00A558  EC44  F08D         	call	_motor_nonzero_steps_from_degrees	;wreg free
  9020  00A55C  C08F  F097         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
  9021  00A560  C090  F098         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
  9022  00A564  C091  F099         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
  9023  00A568  C092  F09A         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
  9024  00A56C  0E00               	movlw	0
  9025  00A56E  0100               	movlb	0	; () banked
  9026  00A570  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9027  00A572  0E00               	movlw	0
  9028  00A574  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9029  00A576  0EFF               	movlw	255
  9030  00A578  EC44  F084         	call	_motor_schedule_command
  9031                           
  9032                           ;encoder.c: 236: };encoder.c: 237: break;
  9033  00A57C  EF01  F059         	goto	l2483
  9034  00A580                     
  9035                           ;encoder.c: 243: if(os.button1==1 || os.button2==1)
  9036  00A580  0100               	movlb	0	; () banked
  9037  00A582  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
  9038  00A584  B4D8               	btfsc	status,2,c
  9039  00A586  D003               	goto	u20680
  9040                           
  9041                           ; BSR set to: 0
  9042  00A588  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
  9043  00A58A  A4D8               	btfss	status,2,c
  9044  00A58C  D01F               	goto	l2503
  9045  00A58E                     u20680:
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;encoder.c: 244: {;encoder.c: 245: motor_schedule_command(MOTOR_DIRECTION_CW, config.ove
      +                          rshoot_in_steps, 0);
  9049                           
  9050                           ; BSR set to: 0
  9051  00A58E  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
  9052  00A592  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
  9053  00A596  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  9054  00A598  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  9055  00A59A  0E00               	movlw	0
  9056  00A59C  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9057  00A59E  0E00               	movlw	0
  9058  00A5A0  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9059  00A5A2  0E01               	movlw	1
  9060  00A5A4  EC44  F084         	call	_motor_schedule_command
  9061                           
  9062                           ;encoder.c: 246: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 
      +                          0);
  9063  00A5A8  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
  9064  00A5AC  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
  9065  00A5B0  0100               	movlb	0	; () banked
  9066  00A5B2  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  9067  00A5B4  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  9068  00A5B6  0E00               	movlw	0
  9069  00A5B8  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9070  00A5BA  0E00               	movlw	0
  9071  00A5BC  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9072  00A5BE  0EFF               	movlw	255
  9073  00A5C0  EC44  F084         	call	_motor_schedule_command
  9074                           
  9075                           ;encoder.c: 247: os.approach_direction = MOTOR_DIRECTION_CCW;
  9076  00A5C4  0100               	movlb	0	; () banked
  9077  00A5C6  69DC               	setf	(_os+18)& (0+255),b	;volatile
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;encoder.c: 248: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  9081  00A5C8  0E01               	movlw	1
  9082  00A5CA  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  9083  00A5CC                     l2503:
  9084                           
  9085                           ; BSR set to: 0
  9086                           ;encoder.c: 249: };encoder.c: 250: if(os.encoder1Count+os.encoder2Count>0)
  9087                           
  9088                           ; BSR set to: 0
  9089  00A5CC  C0CF  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  9090  00A5D0  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  9091  00A5D2  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  9092  00A5D4  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  9093  00A5D6  C0CD  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  9094  00A5DA  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  9095  00A5DC  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  9096  00A5DE  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  9097  00A5E0  519E               	movf	??_encoder_statemachine& (0+255),w,b
  9098  00A5E2  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  9099  00A5E4  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  9100  00A5E6  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  9101  00A5E8  BFA1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
  9102  00A5EA  D007               	goto	l2506
  9103  00A5EC  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  9104  00A5EE  E103               	bnz	u20690
  9105  00A5F0  05A0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
  9106  00A5F2  A0D8               	btfss	status,0,c
  9107  00A5F4  D002               	goto	l2506
  9108  00A5F6                     u20690:
  9109                           
  9110                           ; BSR set to: 0
  9111                           ;encoder.c: 251: os.displayState = DISPLAY_STATE_SETUP2_CW;
  9112  00A5F6  0E22               	movlw	34
  9113  00A5F8  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  9114  00A5FA                     l2506:
  9115                           
  9116                           ; BSR set to: 0
  9117                           ;encoder.c: 252: if(os.encoder1Count+os.encoder2Count<0)
  9118                           
  9119                           ; BSR set to: 0
  9120  00A5FA  C0CF  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  9121  00A5FE  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  9122  00A600  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  9123  00A602  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  9124  00A604  C0CD  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  9125  00A608  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  9126  00A60A  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  9127  00A60C  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  9128  00A60E  519E               	movf	??_encoder_statemachine& (0+255),w,b
  9129  00A610  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  9130  00A612  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  9131  00A614  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  9132  00A616  AFA1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
  9133  00A618  EF01  F059         	goto	l2483
  9134                           
  9135                           ; BSR set to: 0
  9136                           ;encoder.c: 253: os.displayState = DISPLAY_STATE_SETUP2_CW;
  9137  00A61C  0E22               	movlw	34
  9138  00A61E  EFC7  F058         	goto	L17
  9139  00A622                     
  9140                           ; BSR set to: 0
  9141                           ;encoder.c: 256: if(os.button1==1 || os.button2==1)
  9142                           
  9143                           ; BSR set to: 0
  9144  00A622  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
  9145  00A624  B4D8               	btfsc	status,2,c
  9146  00A626  D003               	goto	u20720
  9147                           
  9148                           ; BSR set to: 0
  9149  00A628  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
  9150  00A62A  A4D8               	btfss	status,2,c
  9151  00A62C  D020               	goto	l2510
  9152  00A62E                     u20720:
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;encoder.c: 257: {;encoder.c: 258: motor_schedule_command(MOTOR_DIRECTION_CCW, config.ov
      +                          ershoot_in_steps, 0);
  9156                           
  9157                           ; BSR set to: 0
  9158  00A62E  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
  9159  00A632  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
  9160  00A636  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  9161  00A638  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  9162  00A63A  0E00               	movlw	0
  9163  00A63C  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9164  00A63E  0E00               	movlw	0
  9165  00A640  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9166  00A642  0EFF               	movlw	255
  9167  00A644  EC44  F084         	call	_motor_schedule_command
  9168                           
  9169                           ;encoder.c: 259: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0
      +                          );
  9170  00A648  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
  9171  00A64C  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
  9172  00A650  0100               	movlb	0	; () banked
  9173  00A652  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  9174  00A654  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  9175  00A656  0E00               	movlw	0
  9176  00A658  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9177  00A65A  0E00               	movlw	0
  9178  00A65C  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9179  00A65E  0E01               	movlw	1
  9180  00A660  EC44  F084         	call	_motor_schedule_command
  9181                           
  9182                           ;encoder.c: 260: os.approach_direction = MOTOR_DIRECTION_CW;
  9183  00A664  0E01               	movlw	1
  9184  00A666  0100               	movlb	0	; () banked
  9185  00A668  6FDC               	movwf	(_os+18)& (0+255),b	;volatile
  9186                           
  9187                           ; BSR set to: 0
  9188                           ;encoder.c: 261: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  9189  00A66A  0E01               	movlw	1
  9190  00A66C  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  9191  00A66E                     l2510:
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;encoder.c: 262: };encoder.c: 263: if(os.encoder1Count+os.encoder2Count>0)
  9195                           
  9196                           ; BSR set to: 0
  9197  00A66E  C0CF  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  9198  00A672  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  9199  00A674  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  9200  00A676  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  9201  00A678  C0CD  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  9202  00A67C  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  9203  00A67E  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  9204  00A680  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  9205  00A682  519E               	movf	??_encoder_statemachine& (0+255),w,b
  9206  00A684  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  9207  00A686  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  9208  00A688  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  9209  00A68A  BFA1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
  9210  00A68C  D007               	goto	l2513
  9211  00A68E  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  9212  00A690  E103               	bnz	u20730
  9213  00A692  05A0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
  9214  00A694  A0D8               	btfss	status,0,c
  9215  00A696  D002               	goto	l2513
  9216  00A698                     u20730:
  9217                           
  9218                           ; BSR set to: 0
  9219                           ;encoder.c: 264: os.displayState = DISPLAY_STATE_SETUP2_CCW;
  9220  00A698  0E21               	movlw	33
  9221  00A69A  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  9222  00A69C                     l2513:
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;encoder.c: 265: if(os.encoder1Count+os.encoder2Count<0)
  9226                           
  9227                           ; BSR set to: 0
  9228  00A69C  C0CF  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  9229  00A6A0  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  9230  00A6A2  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  9231  00A6A4  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  9232  00A6A6  C0CD  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  9233  00A6AA  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  9234  00A6AC  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  9235  00A6AE  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  9236  00A6B0  519E               	movf	??_encoder_statemachine& (0+255),w,b
  9237  00A6B2  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  9238  00A6B4  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  9239  00A6B6  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  9240  00A6B8  AFA1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
  9241  00A6BA  EF01  F059         	goto	l2483
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;encoder.c: 266: os.displayState = DISPLAY_STATE_SETUP2_CCW;
  9245  00A6BE  0E21               	movlw	33
  9246  00A6C0  EFC7  F058         	goto	L17
  9247  00A6C4                     
  9248                           ; BSR set to: 0
  9249  00A6C4  0100               	movlb	0	; () banked
  9250  00A6C6  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
  9251                           
  9252                           ; Switch size 1, requested type "space"
  9253                           ; Number of cases is 2, Range of values is 33 to 34
  9254                           ; switch strategies available:
  9255                           ; Name         Instructions Cycles
  9256                           ; simple_byte            7     4 (average)
  9257                           ;	Chosen strategy is simple_byte
  9258  00A6C8  0A21               	xorlw	33	; case 33
  9259  00A6CA  B4D8               	btfsc	status,2,c
  9260  00A6CC  D759               	goto	l2502
  9261  00A6CE  0A03               	xorlw	3	; case 34
  9262  00A6D0  B4D8               	btfsc	status,2,c
  9263  00A6D2  D7A7               	goto	l2509
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;encoder.c: 269: break;
  9267  00A6D4  EF01  F059         	goto	l2483
  9268  00A6D8                     
  9269                           ; BSR set to: 0
  9270                           ;encoder.c: 275: if(os.button1==1)
  9271                           
  9272                           ; BSR set to: 0
  9273  00A6D8  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
  9274  00A6DA  A4D8               	btfss	status,2,c
  9275  00A6DC  D002               	goto	l2518
  9276                           
  9277                           ; BSR set to: 0
  9278                           ;encoder.c: 276: {;encoder.c: 278: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
  9279  00A6DE  0E41               	movlw	65
  9280  00A6E0  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  9281  00A6E2                     l2518:
  9282                           
  9283                           ; BSR set to: 0
  9284                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
  9285                           
  9286                           ; BSR set to: 0
  9287  00A6E2  51CD               	movf	(_os+3)& (0+255),w,b	;volatile
  9288  00A6E4  0A80               	xorlw	128
  9289  00A6E6  0F7F               	addlw	-129
  9290  00A6E8  A0D8               	btfss	status,0,c
  9291  00A6EA  D002               	goto	l2519
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
  9295  00A6EC  0E32               	movlw	50
  9296  00A6EE  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  9297  00A6F0                     l2519:
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;encoder.c: 282: if(os.encoder1Count<0)
  9301                           
  9302                           ; BSR set to: 0
  9303  00A6F0  AFCD               	btfss	(_os+3)& (0+255),7,b	;volatile
  9304  00A6F2  D01A               	goto	l2521
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
  9308  00A6F4  0E32               	movlw	50
  9309  00A6F6  D00F               	goto	L9
  9310  00A6F8                     
  9311                           ; BSR set to: 0
  9312                           ;encoder.c: 286: if(os.button1==1)
  9313                           
  9314                           ; BSR set to: 0
  9315  00A6F8  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
  9316  00A6FA  A4D8               	btfss	status,2,c
  9317  00A6FC  D002               	goto	l2523
  9318                           
  9319                           ; BSR set to: 0
  9320                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
  9321  00A6FE  0E02               	movlw	2
  9322  00A700  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  9323  00A702                     l2523:
  9324                           
  9325                           ; BSR set to: 0
  9326                           ;encoder.c: 288: if(os.encoder1Count>0)
  9327                           
  9328                           ; BSR set to: 0
  9329  00A702  51CD               	movf	(_os+3)& (0+255),w,b	;volatile
  9330  00A704  0A80               	xorlw	128
  9331  00A706  0F7F               	addlw	-129
  9332  00A708  A0D8               	btfss	status,0,c
  9333  00A70A  D002               	goto	l2524
  9334                           
  9335                           ; BSR set to: 0
  9336                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
  9337  00A70C  0E31               	movlw	49
  9338  00A70E  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  9339  00A710                     l2524:
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;encoder.c: 290: if(os.encoder1Count<0)
  9343                           
  9344                           ; BSR set to: 0
  9345  00A710  AFCD               	btfss	(_os+3)& (0+255),7,b	;volatile
  9346  00A712  D00A               	goto	l2521
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
  9350  00A714  0E31               	movlw	49
  9351  00A716                     L9:
  9352  00A716  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  9353                           
  9354                           ; BSR set to: 0
  9355                           ;encoder.c: 293: }
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;encoder.c: 292: break;
  9359  00A718  D007               	goto	l2521
  9360  00A71A                     
  9361                           ; BSR set to: 0
  9362                           
  9363                           ; BSR set to: 0
  9364  00A71A  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
  9365                           
  9366                           ; Switch size 1, requested type "space"
  9367                           ; Number of cases is 2, Range of values is 49 to 50
  9368                           ; switch strategies available:
  9369                           ; Name         Instructions Cycles
  9370                           ; simple_byte            7     4 (average)
  9371                           ;	Chosen strategy is simple_byte
  9372  00A71C  0A31               	xorlw	49	; case 49
  9373  00A71E  B4D8               	btfsc	status,2,c
  9374  00A720  D7DB               	goto	l2517
  9375  00A722  0A03               	xorlw	3	; case 50
  9376  00A724  B4D8               	btfsc	status,2,c
  9377  00A726  D7E8               	goto	l2522
  9378  00A728                     l2521:
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;encoder.c: 294: if(os.button2==1)
  9382                           
  9383                           ; BSR set to: 0
  9384  00A728  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
  9385  00A72A  A4D8               	btfss	status,2,c
  9386  00A72C  D005               	goto	l2526
  9387                           
  9388                           ; BSR set to: 0
  9389                           ;encoder.c: 295: {;encoder.c: 296: os.divide_step_size = encoder_next_divide_step_size(o
      +                          s.divide_step_size);
  9390  00A72E  51DF               	movf	(_os+21)& (0+255),w,b	;volatile
  9391  00A730  EC13  F090         	call	_encoder_next_divide_step_size
  9392  00A734  0100               	movlb	0	; () banked
  9393  00A736  6FDF               	movwf	(_os+21)& (0+255),b	;volatile
  9394  00A738                     l2526:
  9395                           
  9396                           ; BSR set to: 0
  9397                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
  9398                           
  9399                           ; BSR set to: 0
  9400  00A738  51CF               	movf	(_os+5)& (0+255),w,b	;volatile
  9401  00A73A  0A80               	xorlw	128
  9402  00A73C  0F7F               	addlw	-129
  9403  00A73E  A0D8               	btfss	status,0,c
  9404  00A740  D004               	goto	l2527
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;encoder.c: 299: {;encoder.c: 300: os.division += os.divide_step_size;
  9408  00A742  51DF               	movf	(_os+21)& (0+255),w,b	;volatile
  9409  00A744  27DD               	addwf	(_os+19)& (0+255),f,b	;volatile
  9410  00A746  0E00               	movlw	0
  9411  00A748  23DE               	addwfc	(_os+20)& (0+255),f,b	;volatile
  9412  00A74A                     l2527:
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;encoder.c: 301: };encoder.c: 302: if(os.encoder2Count<0)
  9416  00A74A  AFCF               	btfss	(_os+5)& (0+255),7,b	;volatile
  9417  00A74C  EF01  F059         	goto	l2483
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;encoder.c: 303: {;encoder.c: 304: if(os.division>os.divide_step_size)
  9421  00A750  51DF               	movf	(_os+21)& (0+255),w,b	;volatile
  9422  00A752  6F9E               	movwf	??_encoder_statemachine& (0+255),b
  9423  00A754  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  9424  00A756  51DD               	movf	(_os+19)& (0+255),w,b	;volatile
  9425  00A758  5D9E               	subwf	??_encoder_statemachine& (0+255),w,b
  9426  00A75A  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  9427  00A75C  0A80               	xorlw	128
  9428  00A75E  6FA0               	movwf	(??_encoder_statemachine+2)& (0+255),b
  9429  00A760  51DE               	movf	(_os+20)& (0+255),w,b	;volatile
  9430  00A762  0A80               	xorlw	128
  9431  00A764  59A0               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
  9432  00A766  B0D8               	btfsc	status,0,c
  9433  00A768  D006               	goto	l2529
  9434                           
  9435                           ; BSR set to: 0
  9436                           ;encoder.c: 305: {;encoder.c: 306: os.division -= os.divide_step_size;
  9437  00A76A  51DF               	movf	(_os+21)& (0+255),w,b	;volatile
  9438  00A76C  5FDD               	subwf	(_os+19)& (0+255),f,b	;volatile
  9439  00A76E  0E00               	movlw	0
  9440  00A770  5BDE               	subwfb	(_os+20)& (0+255),f,b	;volatile
  9441                           
  9442                           ;encoder.c: 307: }
  9443  00A772  EF01  F059         	goto	l2483
  9444  00A776                     l2529:
  9445                           
  9446                           ; BSR set to: 0
  9447                           ;encoder.c: 308: else;encoder.c: 309: {;encoder.c: 310: os.division = 1;
  9448                           
  9449                           ; BSR set to: 0
  9450  00A776  0E00               	movlw	0
  9451  00A778  6FDE               	movwf	(_os+20)& (0+255),b	;volatile
  9452  00A77A  0E01               	movlw	1
  9453  00A77C  6FDD               	movwf	(_os+19)& (0+255),b	;volatile
  9454                           
  9455                           ; BSR set to: 0
  9456                           ;encoder.c: 311: };encoder.c: 312: };encoder.c: 313: break;
  9457                           
  9458                           ; BSR set to: 0
  9459  00A77E  EF01  F059         	goto	l2483
  9460  00A782                     
  9461                           ; BSR set to: 0
  9462                           ;encoder.c: 316: if(os.button1==1)
  9463                           
  9464                           ; BSR set to: 0
  9465  00A782  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
  9466  00A784  A4D8               	btfss	status,2,c
  9467  00A786  D002               	goto	l2532
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;encoder.c: 317: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
  9471  00A788  0E02               	movlw	2
  9472  00A78A  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
  9473  00A78C                     l2532:
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;encoder.c: 318: if(os.button2==1)
  9477                           
  9478                           ; BSR set to: 0
  9479  00A78C  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
  9480  00A78E  A4D8               	btfss	status,2,c
  9481  00A790  D193               	goto	l2533
  9482                           
  9483                           ; BSR set to: 0
  9484                           ;encoder.c: 319: {;encoder.c: 321: if(os.divide_jump_size>0)
  9485  00A792  BFE3               	btfsc	(_os+25)& (0+255),7,b	;volatile
  9486  00A794  D018               	goto	l2534
  9487  00A796  51E3               	movf	(_os+25)& (0+255),w,b	;volatile
  9488  00A798  E103               	bnz	u20870
  9489  00A79A  05E2               	decf	(_os+24)& (0+255),w,b	;volatile
  9490  00A79C  A0D8               	btfss	status,0,c
  9491  00A79E  D013               	goto	l2534
  9492  00A7A0                     u20870:
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;encoder.c: 322: {;encoder.c: 323: target_divide_position = os.divide_position + os.divi
      +                          de_jump_size;
  9496  00A7A0  51E2               	movf	(_os+24)& (0+255),w,b	;volatile
  9497  00A7A2  25E0               	addwf	(_os+22)& (0+255),w,b	;volatile
  9498  00A7A4  6FAA               	movwf	encoder_statemachine@target_divide_position& (0+255),b
  9499  00A7A6  51E3               	movf	(_os+25)& (0+255),w,b	;volatile
  9500  00A7A8  21E1               	addwfc	(_os+23)& (0+255),w,b	;volatile
  9501  00A7AA  6FAB               	movwf	(encoder_statemachine@target_divide_position+1)& (0+255),b
  9502                           
  9503                           ;encoder.c: 324: if(target_divide_position>=os.division)
  9504  00A7AC  51DD               	movf	(_os+19)& (0+255),w,b	;volatile
  9505  00A7AE  5DAA               	subwf	encoder_statemachine@target_divide_position& (0+255),w,b
  9506  00A7B0  51DE               	movf	(_os+20)& (0+255),w,b	;volatile
  9507  00A7B2  59AB               	subwfb	(encoder_statemachine@target_divide_position+1)& (0+255),w,b
  9508  00A7B4  A0D8               	btfss	status,0,c
  9509  00A7B6  D019               	goto	l2537
  9510                           
  9511                           ; BSR set to: 0
  9512                           ;encoder.c: 325: target_divide_position -= os.division;
  9513  00A7B8  EE20  F0DD         	lfsr	2,_os+19	;volatile
  9514  00A7BC  50DE               	movf	postinc2,w,c
  9515  00A7BE  5FAA               	subwf	encoder_statemachine@target_divide_position& (0+255),f,b
  9516  00A7C0  50DD               	movf	postdec2,w,c
  9517  00A7C2  5BAB               	subwfb	(encoder_statemachine@target_divide_position+1)& (0+255),f,b
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;encoder.c: 326: }
  9521  00A7C4  D012               	goto	l2537
  9522  00A7C6                     l2534:
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;encoder.c: 327: else;encoder.c: 328: {;encoder.c: 329: target_divide_position = os.divi
      +                          de_position + os.divide_jump_size;
  9526                           
  9527                           ; BSR set to: 0
  9528  00A7C6  51E2               	movf	(_os+24)& (0+255),w,b	;volatile
  9529  00A7C8  25E0               	addwf	(_os+22)& (0+255),w,b	;volatile
  9530  00A7CA  6FAA               	movwf	encoder_statemachine@target_divide_position& (0+255),b
  9531  00A7CC  51E3               	movf	(_os+25)& (0+255),w,b	;volatile
  9532  00A7CE  21E1               	addwfc	(_os+23)& (0+255),w,b	;volatile
  9533  00A7D0  6FAB               	movwf	(encoder_statemachine@target_divide_position+1)& (0+255),b
  9534                           
  9535                           ;encoder.c: 330: if(target_divide_position>=os.division)
  9536  00A7D2  51DD               	movf	(_os+19)& (0+255),w,b	;volatile
  9537  00A7D4  5DAA               	subwf	encoder_statemachine@target_divide_position& (0+255),w,b
  9538  00A7D6  51DE               	movf	(_os+20)& (0+255),w,b	;volatile
  9539  00A7D8  59AB               	subwfb	(encoder_statemachine@target_divide_position+1)& (0+255),w,b
  9540  00A7DA  A0D8               	btfss	status,0,c
  9541  00A7DC  D006               	goto	l2537
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;encoder.c: 331: target_divide_position += os.division;
  9545  00A7DE  EE20  F0DD         	lfsr	2,_os+19	;volatile
  9546  00A7E2  50DE               	movf	postinc2,w,c
  9547  00A7E4  27AA               	addwf	encoder_statemachine@target_divide_position& (0+255),f,b
  9548  00A7E6  50DD               	movf	postdec2,w,c
  9549  00A7E8  23AB               	addwfc	(encoder_statemachine@target_divide_position+1)& (0+255),f,b
  9550  00A7EA                     l2537:
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;encoder.c: 332: };encoder.c: 335: tmp = (float) config.full_circle_in_steps;
  9554                           
  9555                           ; BSR set to: 0
  9556                           
  9557                           ; BSR set to: 0
  9558  00A7EA  C11F  F060         	movff	_config,___xxtofl@val
  9559  00A7EE  C120  F061         	movff	_config+1,___xxtofl@val+1
  9560  00A7F2  C121  F062         	movff	_config+2,___xxtofl@val+2
  9561  00A7F6  C122  F063         	movff	_config+3,___xxtofl@val+3
  9562  00A7FA  0E00               	movlw	0
  9563  00A7FC  EC8A  F071         	call	___xxtofl
  9564  00A800  C060  F0B0         	movff	?___xxtofl,encoder_statemachine@tmp
  9565  00A804  C061  F0B1         	movff	?___xxtofl+1,encoder_statemachine@tmp+1
  9566  00A808  C062  F0B2         	movff	?___xxtofl+2,encoder_statemachine@tmp+2
  9567  00A80C  C063  F0B3         	movff	?___xxtofl+3,encoder_statemachine@tmp+3
  9568                           
  9569                           ;encoder.c: 336: tmp *= target_divide_position;
  9570  00A810  C0B0  F06E         	movff	encoder_statemachine@tmp,___flmul@b
  9571  00A814  C0B1  F06F         	movff	encoder_statemachine@tmp+1,___flmul@b+1
  9572  00A818  C0B2  F070         	movff	encoder_statemachine@tmp+2,___flmul@b+2
  9573  00A81C  C0B3  F071         	movff	encoder_statemachine@tmp+3,___flmul@b+3
  9574  00A820  C0AA  F060         	movff	encoder_statemachine@target_divide_position,___xxtofl@val
  9575  00A824  C0AB  F061         	movff	encoder_statemachine@target_divide_position+1,___xxtofl@val+1
  9576  00A828  0100               	movlb	0	; () banked
  9577  00A82A  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  9578  00A82C  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  9579  00A82E  0E00               	movlw	0
  9580  00A830  EC8A  F071         	call	___xxtofl
  9581  00A834  C060  F072         	movff	?___xxtofl,___flmul@a
  9582  00A838  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
  9583  00A83C  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
  9584  00A840  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
  9585  00A844  ECF5  F063         	call	___flmul	;wreg free
  9586  00A848  C06E  F0B0         	movff	?___flmul,encoder_statemachine@tmp
  9587  00A84C  C06F  F0B1         	movff	?___flmul+1,encoder_statemachine@tmp+1
  9588  00A850  C070  F0B2         	movff	?___flmul+2,encoder_statemachine@tmp+2
  9589  00A854  C071  F0B3         	movff	?___flmul+3,encoder_statemachine@tmp+3
  9590                           
  9591                           ;encoder.c: 337: tmp /= os.division;
  9592  00A858  C0B0  F06E         	movff	encoder_statemachine@tmp,___fldiv@b
  9593  00A85C  C0B1  F06F         	movff	encoder_statemachine@tmp+1,___fldiv@b+1
  9594  00A860  C0B2  F070         	movff	encoder_statemachine@tmp+2,___fldiv@b+2
  9595  00A864  C0B3  F071         	movff	encoder_statemachine@tmp+3,___fldiv@b+3
  9596  00A868  EE20  F0DD         	lfsr	2,_os+19	;volatile
  9597  00A86C  CFDE F060          	movff	postinc2,___xxtofl@val
  9598  00A870  CFDD F061          	movff	postdec2,___xxtofl@val+1
  9599  00A874  0100               	movlb	0	; () banked
  9600  00A876  0E00               	movlw	0
  9601  00A878  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  9602  00A87A  0EFF               	movlw	-1
  9603  00A87C  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  9604  00A87E  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  9605  00A880  0E01               	movlw	1
  9606  00A882  EC8A  F071         	call	___xxtofl
  9607  00A886  C060  F072         	movff	?___xxtofl,___fldiv@a
  9608  00A88A  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
  9609  00A88E  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
  9610  00A892  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
  9611  00A896  EC0C  F067         	call	___fldiv	;wreg free
  9612  00A89A  C06E  F0B0         	movff	?___fldiv,encoder_statemachine@tmp
  9613  00A89E  C06F  F0B1         	movff	?___fldiv+1,encoder_statemachine@tmp+1
  9614  00A8A2  C070  F0B2         	movff	?___fldiv+2,encoder_statemachine@tmp+2
  9615  00A8A6  C071  F0B3         	movff	?___fldiv+3,encoder_statemachine@tmp+3
  9616                           
  9617                           ;encoder.c: 338: target_position_in_steps = (uint32_t) tmp;
  9618  00A8AA  C0B0  F060         	movff	encoder_statemachine@tmp,___fltol@f1
  9619  00A8AE  C0B1  F061         	movff	encoder_statemachine@tmp+1,___fltol@f1+1
  9620  00A8B2  C0B2  F062         	movff	encoder_statemachine@tmp+2,___fltol@f1+2
  9621  00A8B6  C0B3  F063         	movff	encoder_statemachine@tmp+3,___fltol@f1+3
  9622  00A8BA  EC05  F07D         	call	___fltol	;wreg free
  9623  00A8BE  C060  F0A6         	movff	?___fltol,encoder_statemachine@target_position_in_steps
  9624  00A8C2  C061  F0A7         	movff	?___fltol+1,encoder_statemachine@target_position_in_steps+1
  9625  00A8C6  C062  F0A8         	movff	?___fltol+2,encoder_statemachine@target_position_in_steps+2
  9626  00A8CA  C063  F0A9         	movff	?___fltol+3,encoder_statemachine@target_position_in_steps+3
  9627                           
  9628                           ;encoder.c: 341: distance_to_target_in_steps = target_position_in_steps - os.current_pos
      +                          ition_in_steps;
  9629  00A8CE  C0D1  F09E         	movff	_os+7,??_encoder_statemachine	;volatile
  9630  00A8D2  C0D2  F09F         	movff	_os+8,??_encoder_statemachine+1	;volatile
  9631  00A8D6  C0D3  F0A0         	movff	_os+9,??_encoder_statemachine+2	;volatile
  9632  00A8DA  C0D4  F0A1         	movff	_os+10,??_encoder_statemachine+3	;volatile
  9633  00A8DE  0100               	movlb	0	; () banked
  9634  00A8E0  1F9E               	comf	??_encoder_statemachine& (0+255),f,b
  9635  00A8E2  1F9F               	comf	(??_encoder_statemachine+1)& (0+255),f,b
  9636  00A8E4  1FA0               	comf	(??_encoder_statemachine+2)& (0+255),f,b
  9637  00A8E6  1FA1               	comf	(??_encoder_statemachine+3)& (0+255),f,b
  9638  00A8E8  2B9E               	incf	??_encoder_statemachine& (0+255),f,b
  9639  00A8EA  0E00               	movlw	0
  9640  00A8EC  239F               	addwfc	(??_encoder_statemachine+1)& (0+255),f,b
  9641  00A8EE  23A0               	addwfc	(??_encoder_statemachine+2)& (0+255),f,b
  9642  00A8F0  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  9643  00A8F2  51A6               	movf	encoder_statemachine@target_position_in_steps& (0+255),w,b
  9644  00A8F4  259E               	addwf	??_encoder_statemachine& (0+255),w,b
  9645  00A8F6  6FAC               	movwf	encoder_statemachine@distance_to_target_in_steps& (0+255),b
  9646  00A8F8  51A7               	movf	(encoder_statemachine@target_position_in_steps+1)& (0+255),w,b
  9647  00A8FA  219F               	addwfc	(??_encoder_statemachine+1)& (0+255),w,b
  9648  00A8FC  6FAD               	movwf	(encoder_statemachine@distance_to_target_in_steps+1)& (0+255),b
  9649  00A8FE  51A8               	movf	(encoder_statemachine@target_position_in_steps+2)& (0+255),w,b
  9650  00A900  21A0               	addwfc	(??_encoder_statemachine+2)& (0+255),w,b
  9651  00A902  6FAE               	movwf	(encoder_statemachine@distance_to_target_in_steps+2)& (0+255),b
  9652  00A904  51A9               	movf	(encoder_statemachine@target_position_in_steps+3)& (0+255),w,b
  9653  00A906  21A1               	addwfc	(??_encoder_statemachine+3)& (0+255),w,b
  9654  00A908  6FAF               	movwf	(encoder_statemachine@distance_to_target_in_steps+3)& (0+255),b
  9655                           
  9656                           ; BSR set to: 0
  9657                           ;encoder.c: 342: distance_to_target_in_steps += config.full_circle_in_steps;
  9658  00A90A  0101               	movlb	1	; () banked
  9659  00A90C  511F               	movf	_config& (0+255),w,b
  9660  00A90E  0100               	movlb	0	; () banked
  9661  00A910  27AC               	addwf	encoder_statemachine@distance_to_target_in_steps& (0+255),f,b
  9662  00A912  0101               	movlb	1	; () banked
  9663  00A914  5120               	movf	(_config+1)& (0+255),w,b
  9664  00A916  0100               	movlb	0	; () banked
  9665  00A918  23AD               	addwfc	(encoder_statemachine@distance_to_target_in_steps+1)& (0+255),f,b
  9666  00A91A  0101               	movlb	1	; () banked
  9667  00A91C  5121               	movf	(_config+2)& (0+255),w,b
  9668  00A91E  0100               	movlb	0	; () banked
  9669  00A920  23AE               	addwfc	(encoder_statemachine@distance_to_target_in_steps+2)& (0+255),f,b
  9670  00A922  0101               	movlb	1	; () banked
  9671  00A924  5122               	movf	(_config+3)& (0+255),w,b
  9672  00A926  0100               	movlb	0	; () banked
  9673  00A928  23AF               	addwfc	(encoder_statemachine@distance_to_target_in_steps+3)& (0+255),f,b
  9674                           
  9675                           ;encoder.c: 343: while(distance_to_target_in_steps>((int32_t)(config.full_circle_in_step
      +                          s>>1)))
  9676  00A92A  D010               	goto	l2538
  9677  00A92C                     
  9678                           ; BSR set to: 0
  9679                           ;encoder.c: 344: {;encoder.c: 345: distance_to_target_in_steps -= config.full_circle_in_
      +                          steps;
  9680                           
  9681                           ; BSR set to: 0
  9682  00A92C  0101               	movlb	1	; () banked
  9683  00A92E  511F               	movf	_config& (0+255),w,b
  9684  00A930  0100               	movlb	0	; () banked
  9685  00A932  5FAC               	subwf	encoder_statemachine@distance_to_target_in_steps& (0+255),f,b
  9686  00A934  0101               	movlb	1	; () banked
  9687  00A936  5120               	movf	(_config+1)& (0+255),w,b
  9688  00A938  0100               	movlb	0	; () banked
  9689  00A93A  5BAD               	subwfb	(encoder_statemachine@distance_to_target_in_steps+1)& (0+255),f,b
  9690  00A93C  0101               	movlb	1	; () banked
  9691  00A93E  5121               	movf	(_config+2)& (0+255),w,b
  9692  00A940  0100               	movlb	0	; () banked
  9693  00A942  5BAE               	subwfb	(encoder_statemachine@distance_to_target_in_steps+2)& (0+255),f,b
  9694  00A944  0101               	movlb	1	; () banked
  9695  00A946  5122               	movf	(_config+3)& (0+255),w,b
  9696  00A948  0100               	movlb	0	; () banked
  9697  00A94A  5BAF               	subwfb	(encoder_statemachine@distance_to_target_in_steps+3)& (0+255),f,b
  9698  00A94C                     l2538:
  9699                           
  9700                           ; BSR set to: 0
  9701  00A94C  C11F  F09E         	movff	_config,??_encoder_statemachine
  9702  00A950  C120  F09F         	movff	_config+1,??_encoder_statemachine+1
  9703  00A954  C121  F0A0         	movff	_config+2,??_encoder_statemachine+2
  9704  00A958  C122  F0A1         	movff	_config+3,??_encoder_statemachine+3
  9705  00A95C  90D8               	bcf	status,0,c
  9706  00A95E  33A1               	rrcf	(??_encoder_statemachine+3)& (0+255),f,b
  9707  00A960  33A0               	rrcf	(??_encoder_statemachine+2)& (0+255),f,b
  9708  00A962  339F               	rrcf	(??_encoder_statemachine+1)& (0+255),f,b
  9709  00A964  339E               	rrcf	??_encoder_statemachine& (0+255),f,b
  9710  00A966  51AC               	movf	encoder_statemachine@distance_to_target_in_steps& (0+255),w,b
  9711  00A968  5D9E               	subwf	??_encoder_statemachine& (0+255),w,b
  9712  00A96A  51AD               	movf	(encoder_statemachine@distance_to_target_in_steps+1)& (0+255),w,b
  9713  00A96C  599F               	subwfb	(??_encoder_statemachine+1)& (0+255),w,b
  9714  00A96E  51AE               	movf	(encoder_statemachine@distance_to_target_in_steps+2)& (0+255),w,b
  9715  00A970  59A0               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
  9716  00A972  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  9717  00A974  0A80               	xorlw	128
  9718  00A976  6FA2               	movwf	(??_encoder_statemachine+4)& (0+255),b
  9719  00A978  51AF               	movf	(encoder_statemachine@distance_to_target_in_steps+3)& (0+255),w,b
  9720  00A97A  0A80               	xorlw	128
  9721  00A97C  59A2               	subwfb	(??_encoder_statemachine+4)& (0+255),w,b
  9722  00A97E  A0D8               	btfss	status,0,c
  9723  00A980  D7D5               	goto	l2539
  9724                           
  9725                           ; BSR set to: 0
  9726                           ;encoder.c: 346: };encoder.c: 371: if(distance_to_target_in_steps<0)
  9727                           
  9728                           ; BSR set to: 0
  9729  00A982  AFAF               	btfss	(encoder_statemachine@distance_to_target_in_steps+3)& (0+255),7,b
  9730  00A984  D05C               	goto	l2541
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;encoder.c: 372: {;encoder.c: 373: if(os.approach_direction==MOTOR_DIRECTION_CCW)
  9734  00A986  29DC               	incf	(_os+18)& (0+255),w,b	;volatile
  9735  00A988  A4D8               	btfss	status,2,c
  9736  00A98A  D021               	goto	l2542
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;encoder.c: 374: {;encoder.c: 375: motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t
      +                          )(-distance_to_target_in_steps), 0);
  9740  00A98C  C0AC  F09E         	movff	encoder_statemachine@distance_to_target_in_steps,??_encoder_statemachine
  9741  00A990  C0AD  F09F         	movff	encoder_statemachine@distance_to_target_in_steps+1,??_encoder_statemachine+1
  9742  00A994  C0AE  F0A0         	movff	encoder_statemachine@distance_to_target_in_steps+2,??_encoder_statemachine+2
  9743  00A998  C0AF  F0A1         	movff	encoder_statemachine@distance_to_target_in_steps+3,??_encoder_statemachine+3
  9744  00A99C  1F9E               	comf	??_encoder_statemachine& (0+255),f,b
  9745  00A99E  1F9F               	comf	(??_encoder_statemachine+1)& (0+255),f,b
  9746  00A9A0  1FA0               	comf	(??_encoder_statemachine+2)& (0+255),f,b
  9747  00A9A2  1FA1               	comf	(??_encoder_statemachine+3)& (0+255),f,b
  9748  00A9A4  2B9E               	incf	??_encoder_statemachine& (0+255),f,b
  9749  00A9A6  0E00               	movlw	0
  9750  00A9A8  239F               	addwfc	(??_encoder_statemachine+1)& (0+255),f,b
  9751  00A9AA  23A0               	addwfc	(??_encoder_statemachine+2)& (0+255),f,b
  9752  00A9AC  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  9753  00A9AE  C09E  F097         	movff	??_encoder_statemachine,motor_schedule_command@distance_in_steps
  9754  00A9B2  C09F  F098         	movff	??_encoder_statemachine+1,motor_schedule_command@distance_in_steps+1
  9755  00A9B6  C0A0  F099         	movff	??_encoder_statemachine+2,motor_schedule_command@distance_in_steps+2
  9756  00A9BA  C0A1  F09A         	movff	??_encoder_statemachine+3,motor_schedule_command@distance_in_steps+3
  9757  00A9BE  0E00               	movlw	0
  9758  00A9C0  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9759  00A9C2  0E00               	movlw	0
  9760  00A9C4  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9761  00A9C6  0EFF               	movlw	255
  9762  00A9C8  EC44  F084         	call	_motor_schedule_command
  9763                           
  9764                           ;encoder.c: 376: }
  9765  00A9CC  D071               	goto	l2546
  9766  00A9CE                     l2542:
  9767                           
  9768                           ;encoder.c: 377: else;encoder.c: 378: {;encoder.c: 379: motor_schedule_command(MOTOR_DIR
      +                          ECTION_CCW, ((uint32_t)(-distance_to_target_in_steps))+config.overshoot_in_steps, 0);
  9769  00A9CE  C0AC  F09E         	movff	encoder_statemachine@distance_to_target_in_steps,??_encoder_statemachine
  9770  00A9D2  C0AD  F09F         	movff	encoder_statemachine@distance_to_target_in_steps+1,??_encoder_statemachine+1
  9771  00A9D6  C0AE  F0A0         	movff	encoder_statemachine@distance_to_target_in_steps+2,??_encoder_statemachine+2
  9772  00A9DA  C0AF  F0A1         	movff	encoder_statemachine@distance_to_target_in_steps+3,??_encoder_statemachine+3
  9773  00A9DE  0100               	movlb	0	; () banked
  9774  00A9E0  1F9E               	comf	??_encoder_statemachine& (0+255),f,b
  9775  00A9E2  1F9F               	comf	(??_encoder_statemachine+1)& (0+255),f,b
  9776  00A9E4  1FA0               	comf	(??_encoder_statemachine+2)& (0+255),f,b
  9777  00A9E6  1FA1               	comf	(??_encoder_statemachine+3)& (0+255),f,b
  9778  00A9E8  2B9E               	incf	??_encoder_statemachine& (0+255),f,b
  9779  00A9EA  0E00               	movlw	0
  9780  00A9EC  239F               	addwfc	(??_encoder_statemachine+1)& (0+255),f,b
  9781  00A9EE  23A0               	addwfc	(??_encoder_statemachine+2)& (0+255),f,b
  9782  00A9F0  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  9783  00A9F2  0101               	movlb	1	; () banked
  9784  00A9F4  5124               	movf	(_config+5)& (0+255),w,b
  9785  00A9F6  0100               	movlb	0	; () banked
  9786  00A9F8  259E               	addwf	??_encoder_statemachine& (0+255),w,b
  9787  00A9FA  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
  9788  00A9FC  0101               	movlb	1	; () banked
  9789  00A9FE  5125               	movf	(_config+6)& (0+255),w,b
  9790  00AA00  0100               	movlb	0	; () banked
  9791  00AA02  219F               	addwfc	(??_encoder_statemachine+1)& (0+255),w,b
  9792  00AA04  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
  9793  00AA06  0E00               	movlw	0
  9794  00AA08  21A0               	addwfc	(??_encoder_statemachine+2)& (0+255),w,b
  9795  00AA0A  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  9796  00AA0C  0E00               	movlw	0
  9797  00AA0E  21A1               	addwfc	(??_encoder_statemachine+3)& (0+255),w,b
  9798  00AA10  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  9799  00AA12  0E00               	movlw	0
  9800  00AA14  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9801  00AA16  0E00               	movlw	0
  9802  00AA18  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9803  00AA1A  0EFF               	movlw	255
  9804  00AA1C  EC44  F084         	call	_motor_schedule_command
  9805                           
  9806                           ;encoder.c: 380: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0
      +                          );
  9807  00AA20  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
  9808  00AA24  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
  9809  00AA28  0100               	movlb	0	; () banked
  9810  00AA2A  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  9811  00AA2C  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  9812  00AA2E  0E00               	movlw	0
  9813  00AA30  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9814  00AA32  0E00               	movlw	0
  9815  00AA34  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9816  00AA36  0E01               	movlw	1
  9817  00AA38  EC44  F084         	call	_motor_schedule_command
  9818                           
  9819                           ;encoder.c: 381: };encoder.c: 382: }
  9820  00AA3C  D039               	goto	l2546
  9821  00AA3E                     l2541:
  9822                           
  9823                           ;encoder.c: 383: else;encoder.c: 384: {;encoder.c: 385: if(os.approach_direction==MOTOR_
      +                          DIRECTION_CW)
  9824  00AA3E  0100               	movlb	0	; () banked
  9825  00AA40  05DC               	decf	(_os+18)& (0+255),w,b	;volatile
  9826  00AA42  A4D8               	btfss	status,2,c
  9827  00AA44  D010               	goto	l2545
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;encoder.c: 386: {;encoder.c: 387: motor_schedule_command(MOTOR_DIRECTION_CW, (uint32_t)
      +                           distance_to_target_in_steps, 0);
  9831  00AA46  C0AC  F097         	movff	encoder_statemachine@distance_to_target_in_steps,motor_schedule_command@distance_
      +                          in_steps
  9832  00AA4A  C0AD  F098         	movff	encoder_statemachine@distance_to_target_in_steps+1,motor_schedule_command@distanc
      +                          e_in_steps+1
  9833  00AA4E  C0AE  F099         	movff	encoder_statemachine@distance_to_target_in_steps+2,motor_schedule_command@distanc
      +                          e_in_steps+2
  9834  00AA52  C0AF  F09A         	movff	encoder_statemachine@distance_to_target_in_steps+3,motor_schedule_command@distanc
      +                          e_in_steps+3
  9835  00AA56  0E00               	movlw	0
  9836  00AA58  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9837  00AA5A  0E00               	movlw	0
  9838  00AA5C  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9839  00AA5E  0E01               	movlw	1
  9840  00AA60  EC44  F084         	call	_motor_schedule_command
  9841                           
  9842                           ;encoder.c: 388: }
  9843  00AA64  D025               	goto	l2546
  9844  00AA66                     l2545:
  9845                           
  9846                           ;encoder.c: 389: else;encoder.c: 390: {;encoder.c: 391: motor_schedule_command(MOTOR_DIR
      +                          ECTION_CW, (uint32_t) distance_to_target_in_steps+config.overshoot_in_steps, 0);
  9847  00AA66  0101               	movlb	1	; () banked
  9848  00AA68  5124               	movf	(_config+5)& (0+255),w,b
  9849  00AA6A  0100               	movlb	0	; () banked
  9850  00AA6C  25AC               	addwf	encoder_statemachine@distance_to_target_in_steps& (0+255),w,b
  9851  00AA6E  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
  9852  00AA70  0101               	movlb	1	; () banked
  9853  00AA72  5125               	movf	(_config+6)& (0+255),w,b
  9854  00AA74  0100               	movlb	0	; () banked
  9855  00AA76  21AD               	addwfc	(encoder_statemachine@distance_to_target_in_steps+1)& (0+255),w,b
  9856  00AA78  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
  9857  00AA7A  0E00               	movlw	0
  9858  00AA7C  21AE               	addwfc	(encoder_statemachine@distance_to_target_in_steps+2)& (0+255),w,b
  9859  00AA7E  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  9860  00AA80  0E00               	movlw	0
  9861  00AA82  21AF               	addwfc	(encoder_statemachine@distance_to_target_in_steps+3)& (0+255),w,b
  9862  00AA84  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  9863  00AA86  0E00               	movlw	0
  9864  00AA88  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9865  00AA8A  0E00               	movlw	0
  9866  00AA8C  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9867  00AA8E  0E01               	movlw	1
  9868  00AA90  EC44  F084         	call	_motor_schedule_command
  9869                           
  9870                           ;encoder.c: 392: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 
      +                          0);
  9871  00AA94  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
  9872  00AA98  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
  9873  00AA9C  0100               	movlb	0	; () banked
  9874  00AA9E  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  9875  00AAA0  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  9876  00AAA2  0E00               	movlw	0
  9877  00AAA4  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9878  00AAA6  0E00               	movlw	0
  9879  00AAA8  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9880  00AAAA  0EFF               	movlw	255
  9881  00AAAC  EC44  F084         	call	_motor_schedule_command
  9882  00AAB0                     l2546:
  9883                           
  9884                           ;encoder.c: 393: };encoder.c: 394: };encoder.c: 396: os.divide_position = target_divide_
      +                          position;
  9885  00AAB0  C0AA  F0E0         	movff	encoder_statemachine@target_divide_position,_os+22	;volatile
  9886  00AAB4  C0AB  F0E1         	movff	encoder_statemachine@target_divide_position+1,_os+23	;volatile
  9887  00AAB8                     l2533:
  9888                           
  9889                           ;encoder.c: 397: };encoder.c: 398: if(os.encoder2Count>0)
  9890  00AAB8  0100               	movlb	0	; () banked
  9891  00AABA  51CF               	movf	(_os+5)& (0+255),w,b	;volatile
  9892  00AABC  0A80               	xorlw	128
  9893  00AABE  0F7F               	addlw	-129
  9894  00AAC0  A0D8               	btfss	status,0,c
  9895  00AAC2  D01A               	goto	l2549
  9896                           
  9897                           ; BSR set to: 0
  9898                           ;encoder.c: 399: {;encoder.c: 400: ++os.divide_jump_size;
  9899  00AAC4  4BE2               	infsnz	(_os+24)& (0+255),f,b	;volatile
  9900  00AAC6  2BE3               	incf	(_os+25)& (0+255),f,b	;volatile
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;encoder.c: 401: if(os.divide_jump_size==0)
  9904  00AAC8  51E2               	movf	(_os+24)& (0+255),w,b	;volatile
  9905  00AACA  11E3               	iorwf	(_os+25)& (0+255),w,b	;volatile
  9906  00AACC  A4D8               	btfss	status,2,c
  9907  00AACE  D004               	goto	l2548
  9908                           
  9909                           ; BSR set to: 0
  9910                           ;encoder.c: 402: os.divide_jump_size = 1;
  9911  00AAD0  0E00               	movlw	0
  9912  00AAD2  6FE3               	movwf	(_os+25)& (0+255),b	;volatile
  9913  00AAD4  0E01               	movlw	1
  9914  00AAD6  6FE2               	movwf	(_os+24)& (0+255),b	;volatile
  9915  00AAD8                     l2548:
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;encoder.c: 403: if(os.divide_jump_size>=os.division)
  9919                           
  9920                           ; BSR set to: 0
  9921  00AAD8  51DD               	movf	(_os+19)& (0+255),w,b	;volatile
  9922  00AADA  5DE2               	subwf	(_os+24)& (0+255),w,b	;volatile
  9923  00AADC  51E3               	movf	(_os+25)& (0+255),w,b	;volatile
  9924  00AADE  0A80               	xorlw	128
  9925  00AAE0  6F9E               	movwf	??_encoder_statemachine& (0+255),b
  9926  00AAE2  51DE               	movf	(_os+20)& (0+255),w,b	;volatile
  9927  00AAE4  0A80               	xorlw	128
  9928  00AAE6  599E               	subwfb	??_encoder_statemachine& (0+255),w,b
  9929  00AAE8  A0D8               	btfss	status,0,c
  9930  00AAEA  D006               	goto	l2549
  9931                           
  9932                           ; BSR set to: 0
  9933                           ;encoder.c: 404: os.divide_jump_size = os.division - 1;
  9934  00AAEC  0EFF               	movlw	255
  9935  00AAEE  25DD               	addwf	(_os+19)& (0+255),w,b	;volatile
  9936  00AAF0  6FE2               	movwf	(_os+24)& (0+255),b	;volatile
  9937  00AAF2  0EFF               	movlw	255
  9938  00AAF4  21DE               	addwfc	(_os+20)& (0+255),w,b	;volatile
  9939  00AAF6  6FE3               	movwf	(_os+25)& (0+255),b	;volatile
  9940  00AAF8                     l2549:
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;encoder.c: 405: };encoder.c: 406: if(os.encoder2Count<0)
  9944                           
  9945                           ; BSR set to: 0
  9946  00AAF8  AFCF               	btfss	(_os+5)& (0+255),7,b	;volatile
  9947  00AAFA  D383               	goto	l2483
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;encoder.c: 407: {;encoder.c: 408: --os.divide_jump_size;
  9951  00AAFC  07E2               	decf	(_os+24)& (0+255),f,b	;volatile
  9952  00AAFE  A0D8               	btfss	status,0,c
  9953  00AB00  07E3               	decf	(_os+25)& (0+255),f,b	;volatile
  9954                           
  9955                           ; BSR set to: 0
  9956                           ;encoder.c: 409: if(os.divide_jump_size==0)
  9957  00AB02  51E2               	movf	(_os+24)& (0+255),w,b	;volatile
  9958  00AB04  11E3               	iorwf	(_os+25)& (0+255),w,b	;volatile
  9959  00AB06  A4D8               	btfss	status,2,c
  9960  00AB08  D002               	goto	l2551
  9961                           
  9962                           ; BSR set to: 0
  9963                           ;encoder.c: 410: os.divide_jump_size = -1;
  9964  00AB0A  69E2               	setf	(_os+24)& (0+255),b	;volatile
  9965  00AB0C  69E3               	setf	(_os+25)& (0+255),b	;volatile
  9966  00AB0E                     l2551:
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;encoder.c: 411: if(os.divide_jump_size<=(-os.division))
  9970                           
  9971                           ; BSR set to: 0
  9972  00AB0E  EE20  F0DD         	lfsr	2,_os+19	;volatile
  9973  00AB12  CFDE F09E          	movff	postinc2,??_encoder_statemachine
  9974  00AB16  CFDD F09F          	movff	postdec2,??_encoder_statemachine+1
  9975  00AB1A  1F9E               	comf	??_encoder_statemachine& (0+255),f,b
  9976  00AB1C  1F9F               	comf	(??_encoder_statemachine+1)& (0+255),f,b
  9977  00AB1E  4B9E               	infsnz	??_encoder_statemachine& (0+255),f,b
  9978  00AB20  2B9F               	incf	(??_encoder_statemachine+1)& (0+255),f,b
  9979  00AB22  51E2               	movf	(_os+24)& (0+255),w,b	;volatile
  9980  00AB24  5D9E               	subwf	??_encoder_statemachine& (0+255),w,b
  9981  00AB26  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  9982  00AB28  0A80               	xorlw	128
  9983  00AB2A  6FA0               	movwf	(??_encoder_statemachine+2)& (0+255),b
  9984  00AB2C  51E3               	movf	(_os+25)& (0+255),w,b	;volatile
  9985  00AB2E  0A80               	xorlw	128
  9986  00AB30  59A0               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
  9987  00AB32  A0D8               	btfss	status,0,c
  9988  00AB34  D366               	goto	l2483
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;encoder.c: 412: os.divide_jump_size = 1 - os.division;
  9992  00AB36  EE20  F0DD         	lfsr	2,_os+19	;volatile
  9993  00AB3A  CFDE F09E          	movff	postinc2,??_encoder_statemachine
  9994  00AB3E  CFDD F09F          	movff	postdec2,??_encoder_statemachine+1
  9995  00AB42  1F9E               	comf	??_encoder_statemachine& (0+255),f,b
  9996  00AB44  1F9F               	comf	(??_encoder_statemachine+1)& (0+255),f,b
  9997  00AB46  4B9E               	infsnz	??_encoder_statemachine& (0+255),f,b
  9998  00AB48  2B9F               	incf	(??_encoder_statemachine+1)& (0+255),f,b
  9999  00AB4A  0E01               	movlw	1
 10000  00AB4C  259E               	addwf	??_encoder_statemachine& (0+255),w,b
 10001  00AB4E  6FE2               	movwf	(_os+24)& (0+255),b	;volatile
 10002  00AB50  0E00               	movlw	0
 10003  00AB52  219F               	addwfc	(??_encoder_statemachine+1)& (0+255),w,b
 10004  00AB54  6FE3               	movwf	(_os+25)& (0+255),b	;volatile
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;encoder.c: 413: };encoder.c: 414: break;
 10008                           
 10009                           ; BSR set to: 0
 10010  00AB56  D355               	goto	l2483
 10011  00AB58                     
 10012                           ; BSR set to: 0
 10013                           ;encoder.c: 420: if(os.button1==1)
 10014                           
 10015                           ; BSR set to: 0
 10016  00AB58  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
 10017  00AB5A  A4D8               	btfss	status,2,c
 10018  00AB5C  D002               	goto	l2556
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;encoder.c: 421: {;encoder.c: 422: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 10022  00AB5E  0E62               	movlw	98
 10023  00AB60  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 10024  00AB62                     l2556:
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;encoder.c: 423: };encoder.c: 424: if(os.encoder1Count>0)
 10028                           
 10029                           ; BSR set to: 0
 10030  00AB62  51CD               	movf	(_os+3)& (0+255),w,b	;volatile
 10031  00AB64  0A80               	xorlw	128
 10032  00AB66  0F7F               	addlw	-129
 10033  00AB68  A0D8               	btfss	status,0,c
 10034  00AB6A  D002               	goto	l2557
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;encoder.c: 425: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 10038  00AB6C  0E52               	movlw	82
 10039  00AB6E  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 10040  00AB70                     l2557:
 10041                           
 10042                           ; BSR set to: 0
 10043                           ;encoder.c: 426: if(os.encoder1Count<0)
 10044                           
 10045                           ; BSR set to: 0
 10046  00AB70  AFCD               	btfss	(_os+3)& (0+255),7,b	;volatile
 10047  00AB72  D01A               	goto	l2559
 10048                           
 10049                           ; BSR set to: 0
 10050                           ;encoder.c: 427: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 10051  00AB74  0E52               	movlw	82
 10052  00AB76  D00F               	goto	L10
 10053  00AB78                     
 10054                           ; BSR set to: 0
 10055                           ;encoder.c: 430: if(os.button1==1)
 10056                           
 10057                           ; BSR set to: 0
 10058  00AB78  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
 10059  00AB7A  A4D8               	btfss	status,2,c
 10060  00AB7C  D002               	goto	l2561
 10061                           
 10062                           ; BSR set to: 0
 10063                           ;encoder.c: 431: os.displayState = DISPLAY_STATE_MAIN_ARC;
 10064  00AB7E  0E03               	movlw	3
 10065  00AB80  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 10066  00AB82                     l2561:
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;encoder.c: 432: if(os.encoder1Count>0)
 10070                           
 10071                           ; BSR set to: 0
 10072  00AB82  51CD               	movf	(_os+3)& (0+255),w,b	;volatile
 10073  00AB84  0A80               	xorlw	128
 10074  00AB86  0F7F               	addlw	-129
 10075  00AB88  A0D8               	btfss	status,0,c
 10076  00AB8A  D002               	goto	l2562
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;encoder.c: 433: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 10080  00AB8C  0E51               	movlw	81
 10081  00AB8E  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 10082  00AB90                     l2562:
 10083                           
 10084                           ; BSR set to: 0
 10085                           ;encoder.c: 434: if(os.encoder1Count<0)
 10086                           
 10087                           ; BSR set to: 0
 10088  00AB90  AFCD               	btfss	(_os+3)& (0+255),7,b	;volatile
 10089  00AB92  D00A               	goto	l2559
 10090                           
 10091                           ; BSR set to: 0
 10092                           ;encoder.c: 435: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 10093  00AB94  0E51               	movlw	81
 10094  00AB96                     L10:
 10095  00AB96  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;encoder.c: 437: }
 10099                           
 10100                           ; BSR set to: 0
 10101                           ;encoder.c: 436: break;
 10102  00AB98  D007               	goto	l2559
 10103  00AB9A                     
 10104                           ; BSR set to: 0
 10105                           
 10106                           ; BSR set to: 0
 10107  00AB9A  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
 10108                           
 10109                           ; Switch size 1, requested type "space"
 10110                           ; Number of cases is 2, Range of values is 81 to 82
 10111                           ; switch strategies available:
 10112                           ; Name         Instructions Cycles
 10113                           ; simple_byte            7     4 (average)
 10114                           ;	Chosen strategy is simple_byte
 10115  00AB9C  0A51               	xorlw	81	; case 81
 10116  00AB9E  B4D8               	btfsc	status,2,c
 10117  00ABA0  D7DB               	goto	l2555
 10118  00ABA2  0A03               	xorlw	3	; case 82
 10119  00ABA4  B4D8               	btfsc	status,2,c
 10120  00ABA6  D7E8               	goto	l2560
 10121  00ABA8                     l2559:
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;encoder.c: 438: if(os.button2==1)
 10125                           
 10126                           ; BSR set to: 0
 10127  00ABA8  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
 10128  00ABAA  A4D8               	btfss	status,2,c
 10129  00ABAC  D00A               	goto	l2564
 10130                           
 10131                           ; BSR set to: 0
 10132                           ;encoder.c: 439: {;encoder.c: 440: os.arc_step_size = encoder_next_arc_step_size(os.arc_
      +                          step_size);
 10133  00ABAE  C0E4  F060         	movff	_os+26,encoder_next_arc_step_size@old_stepsize	;volatile
 10134  00ABB2  C0E5  F061         	movff	_os+27,encoder_next_arc_step_size@old_stepsize+1	;volatile
 10135  00ABB6  EC90  F088         	call	_encoder_next_arc_step_size	;wreg free
 10136  00ABBA  C060  F0E4         	movff	?_encoder_next_arc_step_size,_os+26	;volatile
 10137  00ABBE  C061  F0E5         	movff	?_encoder_next_arc_step_size+1,_os+27	;volatile
 10138  00ABC2                     l2564:
 10139                           
 10140                           ;encoder.c: 441: };encoder.c: 442: if(os.encoder2Count>0)
 10141  00ABC2  0100               	movlb	0	; () banked
 10142  00ABC4  51CF               	movf	(_os+5)& (0+255),w,b	;volatile
 10143  00ABC6  0A80               	xorlw	128
 10144  00ABC8  0F7F               	addlw	-129
 10145  00ABCA  A0D8               	btfss	status,0,c
 10146  00ABCC  D01C               	goto	l2566
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;encoder.c: 443: {;encoder.c: 444: os.arc_size += os.arc_step_size;
 10150  00ABCE  51E4               	movf	(_os+26)& (0+255),w,b	;volatile
 10151  00ABD0  27E6               	addwf	(_os+28)& (0+255),f,b	;volatile
 10152  00ABD2  51E5               	movf	(_os+27)& (0+255),w,b	;volatile
 10153  00ABD4  23E7               	addwfc	(_os+29)& (0+255),f,b	;volatile
 10154  00ABD6  0E00               	movlw	0
 10155  00ABD8  23E8               	addwfc	(_os+30)& (0+255),f,b	;volatile
 10156  00ABDA  0E00               	movlw	0
 10157  00ABDC  23E9               	addwfc	(_os+31)& (0+255),f,b	;volatile
 10158                           
 10159                           ; BSR set to: 0
 10160                           ;encoder.c: 445: if(os.arc_size>100000)
 10161  00ABDE  BFE9               	btfsc	(_os+31)& (0+255),7,b	;volatile
 10162  00ABE0  D012               	goto	l2566
 10163  00ABE2  51E9               	movf	(_os+31)& (0+255),w,b	;volatile
 10164  00ABE4  E108               	bnz	u21080
 10165  00ABE6  0EA1               	movlw	161
 10166  00ABE8  5DE6               	subwf	(_os+28)& (0+255),w,b	;volatile
 10167  00ABEA  0E86               	movlw	134
 10168  00ABEC  59E7               	subwfb	(_os+29)& (0+255),w,b	;volatile
 10169  00ABEE  0E01               	movlw	1
 10170  00ABF0  59E8               	subwfb	(_os+30)& (0+255),w,b	;volatile
 10171  00ABF2  A0D8               	btfss	status,0,c
 10172  00ABF4  D008               	goto	l2566
 10173  00ABF6                     u21080:
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;encoder.c: 446: os.arc_size = 100000;
 10177  00ABF6  0EA0               	movlw	160
 10178  00ABF8  6FE6               	movwf	(_os+28)& (0+255),b	;volatile
 10179  00ABFA  0E86               	movlw	134
 10180  00ABFC  6FE7               	movwf	(_os+29)& (0+255),b	;volatile
 10181  00ABFE  0E01               	movlw	1
 10182  00AC00  6FE8               	movwf	(_os+30)& (0+255),b	;volatile
 10183  00AC02  0E00               	movlw	0
 10184  00AC04  6FE9               	movwf	(_os+31)& (0+255),b	;volatile
 10185  00AC06                     l2566:
 10186                           
 10187                           ; BSR set to: 0
 10188                           ;encoder.c: 447: };encoder.c: 448: if(os.encoder2Count<0)
 10189                           
 10190                           ; BSR set to: 0
 10191                           
 10192                           ; BSR set to: 0
 10193  00AC06  AFCF               	btfss	(_os+5)& (0+255),7,b	;volatile
 10194  00AC08  D2FC               	goto	l2483
 10195                           
 10196                           ; BSR set to: 0
 10197                           ;encoder.c: 449: {;encoder.c: 450: os.arc_size -= os.arc_step_size;
 10198  00AC0A  51E4               	movf	(_os+26)& (0+255),w,b	;volatile
 10199  00AC0C  6F9E               	movwf	??_encoder_statemachine& (0+255),b
 10200  00AC0E  51E5               	movf	(_os+27)& (0+255),w,b	;volatile
 10201  00AC10  6F9F               	movwf	(??_encoder_statemachine+1)& (0+255),b
 10202  00AC12  6BA0               	clrf	(??_encoder_statemachine+2)& (0+255),b
 10203  00AC14  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
 10204  00AC16  519E               	movf	??_encoder_statemachine& (0+255),w,b
 10205  00AC18  5FE6               	subwf	(_os+28)& (0+255),f,b	;volatile
 10206  00AC1A  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 10207  00AC1C  5BE7               	subwfb	(_os+29)& (0+255),f,b	;volatile
 10208  00AC1E  51A0               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 10209  00AC20  5BE8               	subwfb	(_os+30)& (0+255),f,b	;volatile
 10210  00AC22  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 10211  00AC24  5BE9               	subwfb	(_os+31)& (0+255),f,b	;volatile
 10212                           
 10213                           ;encoder.c: 451: if(os.arc_size<1)
 10214  00AC26  BFE9               	btfsc	(_os+31)& (0+255),7,b	;volatile
 10215  00AC28  D007               	goto	u21100
 10216  00AC2A  51E9               	movf	(_os+31)& (0+255),w,b	;volatile
 10217  00AC2C  11E8               	iorwf	(_os+30)& (0+255),w,b	;volatile
 10218  00AC2E  11E7               	iorwf	(_os+29)& (0+255),w,b	;volatile
 10219  00AC30  E102               	bnz	u21101
 10220  00AC32  05E6               	decf	(_os+28)& (0+255),w,b	;volatile
 10221  00AC34  B0D8               	btfsc	status,0,c
 10222  00AC36                     u21101:
 10223  00AC36  D2E5               	goto	l2483
 10224  00AC38                     u21100:
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;encoder.c: 452: os.arc_size = 1;
 10228  00AC38  0E01               	movlw	1
 10229  00AC3A  6FE6               	movwf	(_os+28)& (0+255),b	;volatile
 10230  00AC3C  0E00               	movlw	0
 10231  00AC3E  6FE7               	movwf	(_os+29)& (0+255),b	;volatile
 10232  00AC40  0E00               	movlw	0
 10233  00AC42  6FE8               	movwf	(_os+30)& (0+255),b	;volatile
 10234  00AC44  0E00               	movlw	0
 10235  00AC46  6FE9               	movwf	(_os+31)& (0+255),b	;volatile
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;encoder.c: 453: };encoder.c: 454: break;
 10239                           
 10240                           ; BSR set to: 0
 10241  00AC48  D2DC               	goto	l2483
 10242  00AC4A                     
 10243                           ; BSR set to: 0
 10244                           ;encoder.c: 457: if(os.encoder1Count>0)
 10245                           
 10246                           ; BSR set to: 0
 10247  00AC4A  51CD               	movf	(_os+3)& (0+255),w,b	;volatile
 10248  00AC4C  0A80               	xorlw	128
 10249  00AC4E  0F7F               	addlw	-129
 10250  00AC50  A0D8               	btfss	status,0,c
 10251  00AC52  D015               	goto	l2572
 10252                           
 10253                           ; BSR set to: 0
 10254                           ;encoder.c: 458: {;encoder.c: 459: if(os.arc_speed<config.maximum_speed_arc)
 10255  00AC54  0101               	movlb	1	; () banked
 10256  00AC56  512C               	movf	(_config+13)& (0+255),w,b
 10257  00AC58  0100               	movlb	0	; () banked
 10258  00AC5A  5DEA               	subwf	(_os+32)& (0+255),w,b	;volatile
 10259  00AC5C  0101               	movlb	1	; () banked
 10260  00AC5E  512D               	movf	(_config+14)& (0+255),w,b
 10261  00AC60  0100               	movlb	0	; () banked
 10262  00AC62  59EB               	subwfb	(_os+33)& (0+255),w,b	;volatile
 10263  00AC64  B0D8               	btfsc	status,0,c
 10264  00AC66  D002               	goto	l2571
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;encoder.c: 460: ++os.arc_speed;
 10268  00AC68  4BEA               	infsnz	(_os+32)& (0+255),f,b	;volatile
 10269  00AC6A  2BEB               	incf	(_os+33)& (0+255),f,b	;volatile
 10270  00AC6C                     l2571:
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;encoder.c: 461: if(os.busy)
 10274                           
 10275                           ; BSR set to: 0
 10276  00AC6C  51D8               	movf	(_os+14)& (0+255),w,b	;volatile
 10277  00AC6E  B4D8               	btfsc	status,2,c
 10278  00AC70  D006               	goto	l2572
 10279                           
 10280                           ; BSR set to: 0
 10281                           ;encoder.c: 462: motor_change_speed(os.arc_speed);
 10282  00AC72  C0EA  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 10283  00AC76  C0EB  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 10284  00AC7A  ECA5  F091         	call	_motor_change_speed	;wreg free
 10285  00AC7E                     l2572:
 10286                           
 10287                           ;encoder.c: 463: };encoder.c: 464: if(os.encoder1Count<0)
 10288  00AC7E  0100               	movlb	0	; () banked
 10289  00AC80  AFCD               	btfss	(_os+3)& (0+255),7,b	;volatile
 10290  00AC82  D11D               	goto	l2576
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;encoder.c: 465: {;encoder.c: 466: if(os.arc_speed>config.minimum_speed)
 10294  00AC84  51EA               	movf	(_os+32)& (0+255),w,b	;volatile
 10295  00AC86  0101               	movlb	1	; () banked
 10296  00AC88  5D26               	subwf	(_config+7)& (0+255),w,b
 10297  00AC8A  0100               	movlb	0	; () banked
 10298  00AC8C  51EB               	movf	(_os+33)& (0+255),w,b	;volatile
 10299  00AC8E  0101               	movlb	1	; () banked
 10300  00AC90  5927               	subwfb	(_config+8)& (0+255),w,b
 10301  00AC92  B0D8               	btfsc	status,0,c
 10302  00AC94  D004               	goto	l2574
 10303                           
 10304                           ; BSR set to: 1
 10305                           ;encoder.c: 467: --os.arc_speed;
 10306  00AC96  0100               	movlb	0	; () banked
 10307  00AC98  07EA               	decf	(_os+32)& (0+255),f,b	;volatile
 10308  00AC9A  A0D8               	btfss	status,0,c
 10309  00AC9C  07EB               	decf	(_os+33)& (0+255),f,b	;volatile
 10310  00AC9E                     l2574:
 10311                           
 10312                           ;encoder.c: 468: if(os.busy)
 10313                           
 10314                           ; BSR set to: 0
 10315  00AC9E  0100               	movlb	0	; () banked
 10316  00ACA0  51D8               	movf	(_os+14)& (0+255),w,b	;volatile
 10317  00ACA2  B4D8               	btfsc	status,2,c
 10318  00ACA4  D10C               	goto	l2576
 10319                           
 10320                           ; BSR set to: 0
 10321                           ;encoder.c: 469: motor_change_speed(os.arc_speed);
 10322  00ACA6  C0EA  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 10323  00ACAA  C0EB  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 10324  00ACAE  ECA5  F091         	call	_motor_change_speed	;wreg free
 10325                           
 10326                           ;encoder.c: 470: };encoder.c: 471: switch(os.displayState)
 10327  00ACB2  D105               	goto	l2576
 10328  00ACB4                     
 10329                           ;encoder.c: 474: if(os.button2==1)
 10330  00ACB4  0100               	movlb	0	; () banked
 10331  00ACB6  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
 10332  00ACB8  A4D8               	btfss	status,2,c
 10333  00ACBA  D06F               	goto	l2578
 10334                           
 10335                           ; BSR set to: 0
 10336                           ;encoder.c: 475: {;encoder.c: 476: tmp = (float) os.arc_size;
 10337  00ACBC  C0E6  F060         	movff	_os+28,___xxtofl@val	;volatile
 10338  00ACC0  C0E7  F061         	movff	_os+29,___xxtofl@val+1	;volatile
 10339  00ACC4  C0E8  F062         	movff	_os+30,___xxtofl@val+2	;volatile
 10340  00ACC8  C0E9  F063         	movff	_os+31,___xxtofl@val+3	;volatile
 10341  00ACCC  0E01               	movlw	1
 10342  00ACCE  EC8A  F071         	call	___xxtofl
 10343  00ACD2  C060  F0B0         	movff	?___xxtofl,encoder_statemachine@tmp
 10344  00ACD6  C061  F0B1         	movff	?___xxtofl+1,encoder_statemachine@tmp+1
 10345  00ACDA  C062  F0B2         	movff	?___xxtofl+2,encoder_statemachine@tmp+2
 10346  00ACDE  C063  F0B3         	movff	?___xxtofl+3,encoder_statemachine@tmp+3
 10347                           
 10348                           ;encoder.c: 477: tmp *= config.full_circle_in_steps;
 10349  00ACE2  C0B0  F06E         	movff	encoder_statemachine@tmp,___flmul@b
 10350  00ACE6  C0B1  F06F         	movff	encoder_statemachine@tmp+1,___flmul@b+1
 10351  00ACEA  C0B2  F070         	movff	encoder_statemachine@tmp+2,___flmul@b+2
 10352  00ACEE  C0B3  F071         	movff	encoder_statemachine@tmp+3,___flmul@b+3
 10353  00ACF2  C11F  F060         	movff	_config,___xxtofl@val
 10354  00ACF6  C120  F061         	movff	_config+1,___xxtofl@val+1
 10355  00ACFA  C121  F062         	movff	_config+2,___xxtofl@val+2
 10356  00ACFE  C122  F063         	movff	_config+3,___xxtofl@val+3
 10357  00AD02  0E00               	movlw	0
 10358  00AD04  EC8A  F071         	call	___xxtofl
 10359  00AD08  C060  F072         	movff	?___xxtofl,___flmul@a
 10360  00AD0C  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 10361  00AD10  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 10362  00AD14  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 10363  00AD18  ECF5  F063         	call	___flmul	;wreg free
 10364  00AD1C  C06E  F0B0         	movff	?___flmul,encoder_statemachine@tmp
 10365  00AD20  C06F  F0B1         	movff	?___flmul+1,encoder_statemachine@tmp+1
 10366  00AD24  C070  F0B2         	movff	?___flmul+2,encoder_statemachine@tmp+2
 10367  00AD28  C071  F0B3         	movff	?___flmul+3,encoder_statemachine@tmp+3
 10368                           
 10369                           ;encoder.c: 478: tmp /= 36000;
 10370  00AD2C  C0B0  F06E         	movff	encoder_statemachine@tmp,___fldiv@b
 10371  00AD30  C0B1  F06F         	movff	encoder_statemachine@tmp+1,___fldiv@b+1
 10372  00AD34  C0B2  F070         	movff	encoder_statemachine@tmp+2,___fldiv@b+2
 10373  00AD38  C0B3  F071         	movff	encoder_statemachine@tmp+3,___fldiv@b+3
 10374  00AD3C  0E00               	movlw	0
 10375  00AD3E  0100               	movlb	0	; () banked
 10376  00AD40  6F72               	movwf	___fldiv@a& (0+255),b
 10377  00AD42  0EA0               	movlw	160
 10378  00AD44  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 10379  00AD46  0E0C               	movlw	12
 10380  00AD48  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 10381  00AD4A  0E47               	movlw	71
 10382  00AD4C  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 10383  00AD4E  EC0C  F067         	call	___fldiv	;wreg free
 10384  00AD52  C06E  F0B0         	movff	?___fldiv,encoder_statemachine@tmp
 10385  00AD56  C06F  F0B1         	movff	?___fldiv+1,encoder_statemachine@tmp+1
 10386  00AD5A  C070  F0B2         	movff	?___fldiv+2,encoder_statemachine@tmp+2
 10387  00AD5E  C071  F0B3         	movff	?___fldiv+3,encoder_statemachine@tmp+3
 10388                           
 10389                           ;encoder.c: 479: motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t ) tmp, os.arc_spe
      +                          ed);
 10390  00AD62  C0B0  F060         	movff	encoder_statemachine@tmp,___fltol@f1
 10391  00AD66  C0B1  F061         	movff	encoder_statemachine@tmp+1,___fltol@f1+1
 10392  00AD6A  C0B2  F062         	movff	encoder_statemachine@tmp+2,___fltol@f1+2
 10393  00AD6E  C0B3  F063         	movff	encoder_statemachine@tmp+3,___fltol@f1+3
 10394  00AD72  EC05  F07D         	call	___fltol	;wreg free
 10395  00AD76  C060  F097         	movff	?___fltol,motor_schedule_command@distance_in_steps
 10396  00AD7A  C061  F098         	movff	?___fltol+1,motor_schedule_command@distance_in_steps+1
 10397  00AD7E  C062  F099         	movff	?___fltol+2,motor_schedule_command@distance_in_steps+2
 10398  00AD82  C063  F09A         	movff	?___fltol+3,motor_schedule_command@distance_in_steps+3
 10399  00AD86  C0EA  F09B         	movff	_os+32,motor_schedule_command@speed	;volatile
 10400  00AD8A  C0EB  F09C         	movff	_os+33,motor_schedule_command@speed+1	;volatile
 10401  00AD8E  0EFF               	movlw	255
 10402  00AD90  EC44  F084         	call	_motor_schedule_command
 10403                           
 10404                           ;encoder.c: 480: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 10405  00AD94  0E62               	movlw	98
 10406  00AD96  0100               	movlb	0	; () banked
 10407  00AD98  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 10408  00AD9A                     l2578:
 10409                           
 10410                           ; BSR set to: 0
 10411                           ;encoder.c: 481: };encoder.c: 482: if(os.encoder2Count>0)
 10412                           
 10413                           ; BSR set to: 0
 10414  00AD9A  51CF               	movf	(_os+5)& (0+255),w,b	;volatile
 10415  00AD9C  0A80               	xorlw	128
 10416  00AD9E  0F7F               	addlw	-129
 10417  00ADA0  A0D8               	btfss	status,0,c
 10418  00ADA2  D22F               	goto	l2483
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;encoder.c: 483: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 10422  00ADA4  0E62               	movlw	98
 10423  00ADA6  D1F3               	goto	L17
 10424  00ADA8                     
 10425                           ; BSR set to: 0
 10426                           ;encoder.c: 486: if(os.button2==1)
 10427                           
 10428                           ; BSR set to: 0
 10429  00ADA8  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
 10430  00ADAA  A4D8               	btfss	status,2,c
 10431  00ADAC  D007               	goto	l2582
 10432                           
 10433                           ; BSR set to: 0
 10434                           ;encoder.c: 487: {;encoder.c: 488: if(os.busy)
 10435  00ADAE  51D8               	movf	(_os+14)& (0+255),w,b	;volatile
 10436  00ADB0  A4D8               	btfss	status,2,c
 10437                           
 10438                           ; BSR set to: 0
 10439                           ;encoder.c: 489: motor_stop();
 10440  00ADB2  EC8F  F08D         	call	_motor_stop	;wreg free
 10441                           
 10442                           ;encoder.c: 490: os.displayState = DISPLAY_STATE_MAIN_ARC;
 10443  00ADB6  0E03               	movlw	3
 10444  00ADB8  0100               	movlb	0	; () banked
 10445  00ADBA  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 10446  00ADBC                     l2582:
 10447                           
 10448                           ; BSR set to: 0
 10449                           ;encoder.c: 491: };encoder.c: 492: if(os.encoder2Count>0)
 10450                           
 10451                           ; BSR set to: 0
 10452  00ADBC  51CF               	movf	(_os+5)& (0+255),w,b	;volatile
 10453  00ADBE  0A80               	xorlw	128
 10454  00ADC0  0F7F               	addlw	-129
 10455  00ADC2  A0D8               	btfss	status,0,c
 10456  00ADC4  D002               	goto	l2584
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;encoder.c: 493: os.displayState = DISPLAY_STATE_ARC2_CW;
 10460  00ADC6  0E63               	movlw	99
 10461  00ADC8  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 10462  00ADCA                     l2584:
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;encoder.c: 494: if(os.encoder2Count<0)
 10466                           
 10467                           ; BSR set to: 0
 10468  00ADCA  AFCF               	btfss	(_os+5)& (0+255),7,b	;volatile
 10469  00ADCC  D21A               	goto	l2483
 10470                           
 10471                           ; BSR set to: 0
 10472                           ;encoder.c: 495: os.displayState = DISPLAY_STATE_ARC2_CCW;
 10473  00ADCE  0E61               	movlw	97
 10474  00ADD0  D1DE               	goto	L17
 10475  00ADD2                     
 10476                           ; BSR set to: 0
 10477                           ;encoder.c: 498: if(os.button2==1)
 10478                           
 10479                           ; BSR set to: 0
 10480  00ADD2  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
 10481  00ADD4  A4D8               	btfss	status,2,c
 10482  00ADD6  D06F               	goto	l2587
 10483                           
 10484                           ; BSR set to: 0
 10485                           ;encoder.c: 499: {;encoder.c: 500: tmp = (float) os.arc_size;
 10486  00ADD8  C0E6  F060         	movff	_os+28,___xxtofl@val	;volatile
 10487  00ADDC  C0E7  F061         	movff	_os+29,___xxtofl@val+1	;volatile
 10488  00ADE0  C0E8  F062         	movff	_os+30,___xxtofl@val+2	;volatile
 10489  00ADE4  C0E9  F063         	movff	_os+31,___xxtofl@val+3	;volatile
 10490  00ADE8  0E01               	movlw	1
 10491  00ADEA  EC8A  F071         	call	___xxtofl
 10492  00ADEE  C060  F0B0         	movff	?___xxtofl,encoder_statemachine@tmp
 10493  00ADF2  C061  F0B1         	movff	?___xxtofl+1,encoder_statemachine@tmp+1
 10494  00ADF6  C062  F0B2         	movff	?___xxtofl+2,encoder_statemachine@tmp+2
 10495  00ADFA  C063  F0B3         	movff	?___xxtofl+3,encoder_statemachine@tmp+3
 10496                           
 10497                           ;encoder.c: 501: tmp *= config.full_circle_in_steps;
 10498  00ADFE  C0B0  F06E         	movff	encoder_statemachine@tmp,___flmul@b
 10499  00AE02  C0B1  F06F         	movff	encoder_statemachine@tmp+1,___flmul@b+1
 10500  00AE06  C0B2  F070         	movff	encoder_statemachine@tmp+2,___flmul@b+2
 10501  00AE0A  C0B3  F071         	movff	encoder_statemachine@tmp+3,___flmul@b+3
 10502  00AE0E  C11F  F060         	movff	_config,___xxtofl@val
 10503  00AE12  C120  F061         	movff	_config+1,___xxtofl@val+1
 10504  00AE16  C121  F062         	movff	_config+2,___xxtofl@val+2
 10505  00AE1A  C122  F063         	movff	_config+3,___xxtofl@val+3
 10506  00AE1E  0E00               	movlw	0
 10507  00AE20  EC8A  F071         	call	___xxtofl
 10508  00AE24  C060  F072         	movff	?___xxtofl,___flmul@a
 10509  00AE28  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 10510  00AE2C  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 10511  00AE30  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 10512  00AE34  ECF5  F063         	call	___flmul	;wreg free
 10513  00AE38  C06E  F0B0         	movff	?___flmul,encoder_statemachine@tmp
 10514  00AE3C  C06F  F0B1         	movff	?___flmul+1,encoder_statemachine@tmp+1
 10515  00AE40  C070  F0B2         	movff	?___flmul+2,encoder_statemachine@tmp+2
 10516  00AE44  C071  F0B3         	movff	?___flmul+3,encoder_statemachine@tmp+3
 10517                           
 10518                           ;encoder.c: 502: tmp /= 36000;
 10519  00AE48  C0B0  F06E         	movff	encoder_statemachine@tmp,___fldiv@b
 10520  00AE4C  C0B1  F06F         	movff	encoder_statemachine@tmp+1,___fldiv@b+1
 10521  00AE50  C0B2  F070         	movff	encoder_statemachine@tmp+2,___fldiv@b+2
 10522  00AE54  C0B3  F071         	movff	encoder_statemachine@tmp+3,___fldiv@b+3
 10523  00AE58  0E00               	movlw	0
 10524  00AE5A  0100               	movlb	0	; () banked
 10525  00AE5C  6F72               	movwf	___fldiv@a& (0+255),b
 10526  00AE5E  0EA0               	movlw	160
 10527  00AE60  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 10528  00AE62  0E0C               	movlw	12
 10529  00AE64  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 10530  00AE66  0E47               	movlw	71
 10531  00AE68  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 10532  00AE6A  EC0C  F067         	call	___fldiv	;wreg free
 10533  00AE6E  C06E  F0B0         	movff	?___fldiv,encoder_statemachine@tmp
 10534  00AE72  C06F  F0B1         	movff	?___fldiv+1,encoder_statemachine@tmp+1
 10535  00AE76  C070  F0B2         	movff	?___fldiv+2,encoder_statemachine@tmp+2
 10536  00AE7A  C071  F0B3         	movff	?___fldiv+3,encoder_statemachine@tmp+3
 10537                           
 10538                           ;encoder.c: 503: motor_schedule_command(MOTOR_DIRECTION_CW, (uint32_t ) tmp, os.arc_spee
      +                          d);
 10539  00AE7E  C0B0  F060         	movff	encoder_statemachine@tmp,___fltol@f1
 10540  00AE82  C0B1  F061         	movff	encoder_statemachine@tmp+1,___fltol@f1+1
 10541  00AE86  C0B2  F062         	movff	encoder_statemachine@tmp+2,___fltol@f1+2
 10542  00AE8A  C0B3  F063         	movff	encoder_statemachine@tmp+3,___fltol@f1+3
 10543  00AE8E  EC05  F07D         	call	___fltol	;wreg free
 10544  00AE92  C060  F097         	movff	?___fltol,motor_schedule_command@distance_in_steps
 10545  00AE96  C061  F098         	movff	?___fltol+1,motor_schedule_command@distance_in_steps+1
 10546  00AE9A  C062  F099         	movff	?___fltol+2,motor_schedule_command@distance_in_steps+2
 10547  00AE9E  C063  F09A         	movff	?___fltol+3,motor_schedule_command@distance_in_steps+3
 10548  00AEA2  C0EA  F09B         	movff	_os+32,motor_schedule_command@speed	;volatile
 10549  00AEA6  C0EB  F09C         	movff	_os+33,motor_schedule_command@speed+1	;volatile
 10550  00AEAA  0E01               	movlw	1
 10551  00AEAC  EC44  F084         	call	_motor_schedule_command
 10552                           
 10553                           ;encoder.c: 504: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 10554  00AEB0  0E62               	movlw	98
 10555  00AEB2  0100               	movlb	0	; () banked
 10556  00AEB4  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 10557  00AEB6                     l2587:
 10558                           
 10559                           ; BSR set to: 0
 10560                           ;encoder.c: 505: };encoder.c: 506: if(os.encoder2Count<0)
 10561                           
 10562                           ; BSR set to: 0
 10563  00AEB6  AFCF               	btfss	(_os+5)& (0+255),7,b	;volatile
 10564  00AEB8  D1A4               	goto	l2483
 10565                           
 10566                           ; BSR set to: 0
 10567                           ;encoder.c: 507: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 10568  00AEBA  0E62               	movlw	98
 10569  00AEBC  D168               	goto	L17
 10570  00AEBE                     l2576:
 10571                           
 10572                           ; BSR set to: 0
 10573  00AEBE  0100               	movlb	0	; () banked
 10574  00AEC0  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
 10575                           
 10576                           ; Switch size 1, requested type "space"
 10577                           ; Number of cases is 3, Range of values is 97 to 99
 10578                           ; switch strategies available:
 10579                           ; Name         Instructions Cycles
 10580                           ; simple_byte           10     6 (average)
 10581                           ;	Chosen strategy is simple_byte
 10582  00AEC2  0A61               	xorlw	97	; case 97
 10583  00AEC4  B4D8               	btfsc	status,2,c
 10584  00AEC6  D6F6               	goto	l2577
 10585  00AEC8  0A03               	xorlw	3	; case 98
 10586  00AECA  B4D8               	btfsc	status,2,c
 10587  00AECC  D76D               	goto	l2581
 10588  00AECE  0A01               	xorlw	1	; case 99
 10589  00AED0  B4D8               	btfsc	status,2,c
 10590  00AED2  D77F               	goto	l2586
 10591                           
 10592                           ; BSR set to: 0
 10593                           ;encoder.c: 510: break;
 10594  00AED4  D196               	goto	l2483
 10595  00AED6                     
 10596                           ; BSR set to: 0
 10597                           ;encoder.c: 513: if(os.button2==1)
 10598                           
 10599                           ; BSR set to: 0
 10600  00AED6  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
 10601  00AED8  A4D8               	btfss	status,2,c
 10602  00AEDA  D0D9               	goto	l2590
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;encoder.c: 514: {;encoder.c: 516: if(os.current_position_in_steps==0)
 10606  00AEDC  51D1               	movf	(_os+7)& (0+255),w,b	;volatile
 10607  00AEDE  11D2               	iorwf	(_os+8)& (0+255),w,b	;volatile
 10608  00AEE0  11D3               	iorwf	(_os+9)& (0+255),w,b	;volatile
 10609  00AEE2  11D4               	iorwf	(_os+10)& (0+255),w,b	;volatile
 10610  00AEE4  B4D8               	btfsc	status,2,c
 10611  00AEE6  D0CC               	goto	l2598
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;encoder.c: 520: else if(os.current_position_in_steps<=(config.full_circle_in_steps>>1))
 10615                           
 10616                           ; BSR set to: 0
 10617                           
 10618                           ; BSR set to: 0
 10619                           ;encoder.c: 517: {;encoder.c: 519: }
 10620  00AEE8  C11F  F09E         	movff	_config,??_encoder_statemachine
 10621  00AEEC  C120  F09F         	movff	_config+1,??_encoder_statemachine+1
 10622  00AEF0  C121  F0A0         	movff	_config+2,??_encoder_statemachine+2
 10623  00AEF4  C122  F0A1         	movff	_config+3,??_encoder_statemachine+3
 10624  00AEF8  90D8               	bcf	status,0,c
 10625  00AEFA  33A1               	rrcf	(??_encoder_statemachine+3)& (0+255),f,b
 10626  00AEFC  33A0               	rrcf	(??_encoder_statemachine+2)& (0+255),f,b
 10627  00AEFE  339F               	rrcf	(??_encoder_statemachine+1)& (0+255),f,b
 10628  00AF00  339E               	rrcf	??_encoder_statemachine& (0+255),f,b
 10629  00AF02  51D1               	movf	(_os+7)& (0+255),w,b	;volatile
 10630  00AF04  5D9E               	subwf	??_encoder_statemachine& (0+255),w,b
 10631  00AF06  51D2               	movf	(_os+8)& (0+255),w,b	;volatile
 10632  00AF08  599F               	subwfb	(??_encoder_statemachine+1)& (0+255),w,b
 10633  00AF0A  51D3               	movf	(_os+9)& (0+255),w,b	;volatile
 10634  00AF0C  59A0               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 10635  00AF0E  51D4               	movf	(_os+10)& (0+255),w,b	;volatile
 10636  00AF10  59A1               	subwfb	(??_encoder_statemachine+3)& (0+255),w,b
 10637  00AF12  A0D8               	btfss	status,0,c
 10638  00AF14  D039               	goto	l2593
 10639                           
 10640                           ; BSR set to: 0
 10641                           ;encoder.c: 521: {;encoder.c: 522: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 10642  00AF16  29DC               	incf	(_os+18)& (0+255),w,b	;volatile
 10643  00AF18  A4D8               	btfss	status,2,c
 10644  00AF1A  D010               	goto	l2594
 10645                           
 10646                           ; BSR set to: 0
 10647                           ;encoder.c: 523: {;encoder.c: 524: motor_schedule_command(MOTOR_DIRECTION_CCW, os.curren
      +                          t_position_in_steps, 0);
 10648  00AF1C  C0D1  F097         	movff	_os+7,motor_schedule_command@distance_in_steps	;volatile
 10649  00AF20  C0D2  F098         	movff	_os+8,motor_schedule_command@distance_in_steps+1	;volatile
 10650  00AF24  C0D3  F099         	movff	_os+9,motor_schedule_command@distance_in_steps+2	;volatile
 10651  00AF28  C0D4  F09A         	movff	_os+10,motor_schedule_command@distance_in_steps+3	;volatile
 10652  00AF2C  0E00               	movlw	0
 10653  00AF2E  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 10654  00AF30  0E00               	movlw	0
 10655  00AF32  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 10656  00AF34  0EFF               	movlw	255
 10657  00AF36  EC44  F084         	call	_motor_schedule_command
 10658                           
 10659                           ;encoder.c: 525: }
 10660  00AF3A  D0A2               	goto	l2598
 10661  00AF3C                     l2594:
 10662                           
 10663                           ;encoder.c: 526: else;encoder.c: 527: {;encoder.c: 528: motor_schedule_command(MOTOR_DIR
      +                          ECTION_CCW, os.current_position_in_steps+config.overshoot_in_steps, 0);
 10664  00AF3C  0101               	movlb	1	; () banked
 10665  00AF3E  5124               	movf	(_config+5)& (0+255),w,b
 10666  00AF40  0100               	movlb	0	; () banked
 10667  00AF42  25D1               	addwf	(_os+7)& (0+255),w,b	;volatile
 10668  00AF44  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 10669  00AF46  0101               	movlb	1	; () banked
 10670  00AF48  5125               	movf	(_config+6)& (0+255),w,b
 10671  00AF4A  0100               	movlb	0	; () banked
 10672  00AF4C  21D2               	addwfc	(_os+8)& (0+255),w,b	;volatile
 10673  00AF4E  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 10674  00AF50  0E00               	movlw	0
 10675  00AF52  21D3               	addwfc	(_os+9)& (0+255),w,b	;volatile
 10676  00AF54  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 10677  00AF56  0E00               	movlw	0
 10678  00AF58  21D4               	addwfc	(_os+10)& (0+255),w,b	;volatile
 10679  00AF5A  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 10680  00AF5C  0E00               	movlw	0
 10681  00AF5E  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 10682  00AF60  0E00               	movlw	0
 10683  00AF62  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 10684  00AF64  0EFF               	movlw	255
 10685  00AF66  EC44  F084         	call	_motor_schedule_command
 10686                           
 10687                           ;encoder.c: 529: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0
      +                          );
 10688  00AF6A  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 10689  00AF6E  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 10690  00AF72  0100               	movlb	0	; () banked
 10691  00AF74  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 10692  00AF76  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 10693  00AF78  0E00               	movlw	0
 10694  00AF7A  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 10695  00AF7C  0E00               	movlw	0
 10696  00AF7E  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 10697  00AF80  0E01               	movlw	1
 10698  00AF82  EC44  F084         	call	_motor_schedule_command
 10699                           
 10700                           ;encoder.c: 530: };encoder.c: 531: }
 10701  00AF86  D07C               	goto	l2598
 10702  00AF88                     l2593:
 10703                           
 10704                           ;encoder.c: 532: else;encoder.c: 533: {;encoder.c: 534: if(os.approach_direction==MOTOR_
      +                          DIRECTION_CW)
 10705  00AF88  0100               	movlb	0	; () banked
 10706  00AF8A  05DC               	decf	(_os+18)& (0+255),w,b	;volatile
 10707  00AF8C  A4D8               	btfss	status,2,c
 10708  00AF8E  D02D               	goto	l2597
 10709                           
 10710                           ; BSR set to: 0
 10711                           ;encoder.c: 535: {;encoder.c: 536: motor_schedule_command(MOTOR_DIRECTION_CW, (config.fu
      +                          ll_circle_in_steps-os.current_position_in_steps), 0);
 10712  00AF90  C0D1  F09E         	movff	_os+7,??_encoder_statemachine	;volatile
 10713  00AF94  C0D2  F09F         	movff	_os+8,??_encoder_statemachine+1	;volatile
 10714  00AF98  C0D3  F0A0         	movff	_os+9,??_encoder_statemachine+2	;volatile
 10715  00AF9C  C0D4  F0A1         	movff	_os+10,??_encoder_statemachine+3	;volatile
 10716  00AFA0  1F9E               	comf	??_encoder_statemachine& (0+255),f,b
 10717  00AFA2  1F9F               	comf	(??_encoder_statemachine+1)& (0+255),f,b
 10718  00AFA4  1FA0               	comf	(??_encoder_statemachine+2)& (0+255),f,b
 10719  00AFA6  1FA1               	comf	(??_encoder_statemachine+3)& (0+255),f,b
 10720  00AFA8  2B9E               	incf	??_encoder_statemachine& (0+255),f,b
 10721  00AFAA  0E00               	movlw	0
 10722  00AFAC  239F               	addwfc	(??_encoder_statemachine+1)& (0+255),f,b
 10723  00AFAE  23A0               	addwfc	(??_encoder_statemachine+2)& (0+255),f,b
 10724  00AFB0  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 10725  00AFB2  0101               	movlb	1	; () banked
 10726  00AFB4  511F               	movf	_config& (0+255),w,b
 10727  00AFB6  0100               	movlb	0	; () banked
 10728  00AFB8  259E               	addwf	??_encoder_statemachine& (0+255),w,b
 10729  00AFBA  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 10730  00AFBC  0101               	movlb	1	; () banked
 10731  00AFBE  5120               	movf	(_config+1)& (0+255),w,b
 10732  00AFC0  0100               	movlb	0	; () banked
 10733  00AFC2  219F               	addwfc	(??_encoder_statemachine+1)& (0+255),w,b
 10734  00AFC4  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 10735  00AFC6  0101               	movlb	1	; () banked
 10736  00AFC8  5121               	movf	(_config+2)& (0+255),w,b
 10737  00AFCA  0100               	movlb	0	; () banked
 10738  00AFCC  21A0               	addwfc	(??_encoder_statemachine+2)& (0+255),w,b
 10739  00AFCE  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 10740  00AFD0  0101               	movlb	1	; () banked
 10741  00AFD2  5122               	movf	(_config+3)& (0+255),w,b
 10742  00AFD4  0100               	movlb	0	; () banked
 10743  00AFD6  21A1               	addwfc	(??_encoder_statemachine+3)& (0+255),w,b
 10744  00AFD8  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 10745  00AFDA  0E00               	movlw	0
 10746  00AFDC  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 10747  00AFDE  0E00               	movlw	0
 10748  00AFE0  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 10749  00AFE2  0E01               	movlw	1
 10750  00AFE4  EC44  F084         	call	_motor_schedule_command
 10751                           
 10752                           ;encoder.c: 537: }
 10753  00AFE8  D04B               	goto	l2598
 10754  00AFEA                     l2597:
 10755                           
 10756                           ;encoder.c: 538: else;encoder.c: 539: {;encoder.c: 540: motor_schedule_command(MOTOR_DIR
      +                          ECTION_CW, (config.full_circle_in_steps-os.current_position_in_steps+config.overshoot_in
      +                          _steps), 0);
 10757  00AFEA  C0D1  F09E         	movff	_os+7,??_encoder_statemachine	;volatile
 10758  00AFEE  C0D2  F09F         	movff	_os+8,??_encoder_statemachine+1	;volatile
 10759  00AFF2  C0D3  F0A0         	movff	_os+9,??_encoder_statemachine+2	;volatile
 10760  00AFF6  C0D4  F0A1         	movff	_os+10,??_encoder_statemachine+3	;volatile
 10761  00AFFA  0100               	movlb	0	; () banked
 10762  00AFFC  1F9E               	comf	??_encoder_statemachine& (0+255),f,b
 10763  00AFFE  1F9F               	comf	(??_encoder_statemachine+1)& (0+255),f,b
 10764  00B000  1FA0               	comf	(??_encoder_statemachine+2)& (0+255),f,b
 10765  00B002  1FA1               	comf	(??_encoder_statemachine+3)& (0+255),f,b
 10766  00B004  2B9E               	incf	??_encoder_statemachine& (0+255),f,b
 10767  00B006  0E00               	movlw	0
 10768  00B008  239F               	addwfc	(??_encoder_statemachine+1)& (0+255),f,b
 10769  00B00A  23A0               	addwfc	(??_encoder_statemachine+2)& (0+255),f,b
 10770  00B00C  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 10771  00B00E  0101               	movlb	1	; () banked
 10772  00B010  5124               	movf	(_config+5)& (0+255),w,b
 10773  00B012  0100               	movlb	0	; () banked
 10774  00B014  259E               	addwf	??_encoder_statemachine& (0+255),w,b
 10775  00B016  6FA2               	movwf	(??_encoder_statemachine+4)& (0+255),b
 10776  00B018  0101               	movlb	1	; () banked
 10777  00B01A  5125               	movf	(_config+6)& (0+255),w,b
 10778  00B01C  0100               	movlb	0	; () banked
 10779  00B01E  219F               	addwfc	(??_encoder_statemachine+1)& (0+255),w,b
 10780  00B020  6FA3               	movwf	(??_encoder_statemachine+5)& (0+255),b
 10781  00B022  0E00               	movlw	0
 10782  00B024  21A0               	addwfc	(??_encoder_statemachine+2)& (0+255),w,b
 10783  00B026  6FA4               	movwf	(??_encoder_statemachine+6)& (0+255),b
 10784  00B028  0E00               	movlw	0
 10785  00B02A  21A1               	addwfc	(??_encoder_statemachine+3)& (0+255),w,b
 10786  00B02C  6FA5               	movwf	(??_encoder_statemachine+7)& (0+255),b
 10787  00B02E  0101               	movlb	1	; () banked
 10788  00B030  511F               	movf	_config& (0+255),w,b
 10789  00B032  0100               	movlb	0	; () banked
 10790  00B034  25A2               	addwf	(??_encoder_statemachine+4)& (0+255),w,b
 10791  00B036  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 10792  00B038  0101               	movlb	1	; () banked
 10793  00B03A  5120               	movf	(_config+1)& (0+255),w,b
 10794  00B03C  0100               	movlb	0	; () banked
 10795  00B03E  21A3               	addwfc	(??_encoder_statemachine+5)& (0+255),w,b
 10796  00B040  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 10797  00B042  0101               	movlb	1	; () banked
 10798  00B044  5121               	movf	(_config+2)& (0+255),w,b
 10799  00B046  0100               	movlb	0	; () banked
 10800  00B048  21A4               	addwfc	(??_encoder_statemachine+6)& (0+255),w,b
 10801  00B04A  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 10802  00B04C  0101               	movlb	1	; () banked
 10803  00B04E  5122               	movf	(_config+3)& (0+255),w,b
 10804  00B050  0100               	movlb	0	; () banked
 10805  00B052  21A5               	addwfc	(??_encoder_statemachine+7)& (0+255),w,b
 10806  00B054  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 10807  00B056  0E00               	movlw	0
 10808  00B058  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 10809  00B05A  0E00               	movlw	0
 10810  00B05C  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 10811  00B05E  0E01               	movlw	1
 10812  00B060  EC44  F084         	call	_motor_schedule_command
 10813                           
 10814                           ;encoder.c: 541: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 
      +                          0);
 10815  00B064  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 10816  00B068  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 10817  00B06C  0100               	movlb	0	; () banked
 10818  00B06E  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 10819  00B070  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 10820  00B072  0E00               	movlw	0
 10821  00B074  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 10822  00B076  0E00               	movlw	0
 10823  00B078  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 10824  00B07A  0EFF               	movlw	255
 10825  00B07C  EC44  F084         	call	_motor_schedule_command
 10826  00B080                     l2598:
 10827                           
 10828                           ;encoder.c: 542: };encoder.c: 543: };encoder.c: 544: os.displayState = DISPLAY_STATE_MAI
      +                          N_ZERO;
 10829  00B080  0E05               	movlw	5
 10830  00B082  0100               	movlb	0	; () banked
 10831  00B084  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;encoder.c: 545: os.divide_position = 0;
 10835  00B086  0E00               	movlw	0
 10836  00B088  6FE1               	movwf	(_os+23)& (0+255),b	;volatile
 10837  00B08A  0E00               	movlw	0
 10838  00B08C  6FE0               	movwf	(_os+22)& (0+255),b	;volatile
 10839  00B08E                     l2590:
 10840                           
 10841                           ; BSR set to: 0
 10842                           ;encoder.c: 546: };encoder.c: 547: if(os.button1==1)
 10843                           
 10844                           ; BSR set to: 0
 10845  00B08E  05CE               	decf	(_os+4)& (0+255),w,b	;volatile
 10846  00B090  A4D8               	btfss	status,2,c
 10847  00B092  D0B7               	goto	l2483
 10848                           
 10849                           ; BSR set to: 0
 10850                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 10851  00B094  0E05               	movlw	5
 10852  00B096  D07B               	goto	L17
 10853  00B098                     
 10854                           ; BSR set to: 0
 10855                           ;encoder.c: 552: if(os.encoder1Count>0)
 10856                           
 10857                           ; BSR set to: 0
 10858  00B098  51CD               	movf	(_os+3)& (0+255),w,b	;volatile
 10859  00B09A  0A80               	xorlw	128
 10860  00B09C  0F7F               	addlw	-129
 10861  00B09E  A0D8               	btfss	status,0,c
 10862  00B0A0  D012               	goto	l2602
 10863                           
 10864                           ; BSR set to: 0
 10865                           ;encoder.c: 553: {;encoder.c: 554: if(os.manual_speed<config.maximum_speed_manual)
 10866  00B0A2  0101               	movlb	1	; () banked
 10867  00B0A4  5130               	movf	(_config+17)& (0+255),w,b
 10868  00B0A6  0100               	movlb	0	; () banked
 10869  00B0A8  5DED               	subwf	(_os+35)& (0+255),w,b	;volatile
 10870  00B0AA  0101               	movlb	1	; () banked
 10871  00B0AC  5131               	movf	(_config+18)& (0+255),w,b
 10872  00B0AE  0100               	movlb	0	; () banked
 10873  00B0B0  59EE               	subwfb	(_os+36)& (0+255),w,b	;volatile
 10874  00B0B2  B0D8               	btfsc	status,0,c
 10875  00B0B4  D008               	goto	l2602
 10876                           
 10877                           ; BSR set to: 0
 10878                           ;encoder.c: 555: {;encoder.c: 556: ++os.manual_speed;
 10879  00B0B6  4BED               	infsnz	(_os+35)& (0+255),f,b	;volatile
 10880  00B0B8  2BEE               	incf	(_os+36)& (0+255),f,b	;volatile
 10881                           
 10882                           ; BSR set to: 0
 10883                           ;encoder.c: 557: motor_change_speed(os.manual_speed);
 10884  00B0BA  C0ED  F060         	movff	_os+35,motor_change_speed@new_speed	;volatile
 10885  00B0BE  C0EE  F061         	movff	_os+36,motor_change_speed@new_speed+1	;volatile
 10886  00B0C2  ECA5  F091         	call	_motor_change_speed	;wreg free
 10887  00B0C6                     l2602:
 10888                           
 10889                           ;encoder.c: 558: };encoder.c: 560: };encoder.c: 561: if(os.encoder1Count<0)
 10890  00B0C6  0100               	movlb	0	; () banked
 10891  00B0C8  AFCD               	btfss	(_os+3)& (0+255),7,b	;volatile
 10892  00B0CA  D063               	goto	l2605
 10893                           
 10894                           ; BSR set to: 0
 10895                           ;encoder.c: 562: {;encoder.c: 563: if(os.manual_speed>config.minimum_speed)
 10896  00B0CC  51ED               	movf	(_os+35)& (0+255),w,b	;volatile
 10897  00B0CE  0101               	movlb	1	; () banked
 10898  00B0D0  5D26               	subwf	(_config+7)& (0+255),w,b
 10899  00B0D2  0100               	movlb	0	; () banked
 10900  00B0D4  51EE               	movf	(_os+36)& (0+255),w,b	;volatile
 10901  00B0D6  0101               	movlb	1	; () banked
 10902  00B0D8  5927               	subwfb	(_config+8)& (0+255),w,b
 10903  00B0DA  B0D8               	btfsc	status,0,c
 10904  00B0DC  D05A               	goto	l2605
 10905                           
 10906                           ; BSR set to: 1
 10907                           ;encoder.c: 564: {;encoder.c: 565: --os.manual_speed;
 10908  00B0DE  0100               	movlb	0	; () banked
 10909  00B0E0  07ED               	decf	(_os+35)& (0+255),f,b	;volatile
 10910  00B0E2  A0D8               	btfss	status,0,c
 10911  00B0E4  07EE               	decf	(_os+36)& (0+255),f,b	;volatile
 10912                           
 10913                           ; BSR set to: 0
 10914                           ;encoder.c: 566: motor_change_speed(os.manual_speed);
 10915  00B0E6  C0ED  F060         	movff	_os+35,motor_change_speed@new_speed	;volatile
 10916  00B0EA  C0EE  F061         	movff	_os+36,motor_change_speed@new_speed+1	;volatile
 10917  00B0EE  ECA5  F091         	call	_motor_change_speed	;wreg free
 10918                           
 10919                           ;encoder.c: 567: };encoder.c: 568: };encoder.c: 569: switch(os.displayState)
 10920  00B0F2  D04F               	goto	l2605
 10921  00B0F4                     
 10922                           ;encoder.c: 572: if(os.button2==1)
 10923  00B0F4  0100               	movlb	0	; () banked
 10924  00B0F6  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
 10925  00B0F8  A4D8               	btfss	status,2,c
 10926  00B0FA  D012               	goto	l2607
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;encoder.c: 573: {;encoder.c: 574: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.man
      +                          ual_speed);
 10930  00B0FC  0E00               	movlw	0
 10931  00B0FE  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 10932  00B100  0E00               	movlw	0
 10933  00B102  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 10934  00B104  0E00               	movlw	0
 10935  00B106  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 10936  00B108  0E00               	movlw	0
 10937  00B10A  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 10938  00B10C  C0ED  F09B         	movff	_os+35,motor_schedule_command@speed	;volatile
 10939  00B110  C0EE  F09C         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 10940  00B114  0EFF               	movlw	255
 10941  00B116  EC44  F084         	call	_motor_schedule_command
 10942                           
 10943                           ;encoder.c: 575: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 10944  00B11A  0E84               	movlw	132
 10945  00B11C  0100               	movlb	0	; () banked
 10946  00B11E  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 10947  00B120                     l2607:
 10948                           
 10949                           ; BSR set to: 0
 10950                           ;encoder.c: 576: };encoder.c: 577: if(os.encoder2Count>0)
 10951                           
 10952                           ; BSR set to: 0
 10953  00B120  51CF               	movf	(_os+5)& (0+255),w,b	;volatile
 10954  00B122  0A80               	xorlw	128
 10955  00B124  0F7F               	addlw	-129
 10956  00B126  A0D8               	btfss	status,0,c
 10957  00B128  D06C               	goto	l2483
 10958                           
 10959                           ; BSR set to: 0
 10960                           ;encoder.c: 578: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 10961  00B12A  0E82               	movlw	130
 10962  00B12C  D030               	goto	L17
 10963  00B12E                     
 10964                           ; BSR set to: 0
 10965                           ;encoder.c: 581: if(os.button2==1)
 10966                           
 10967                           ; BSR set to: 0
 10968  00B12E  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
 10969  00B130  A4D8               	btfss	status,2,c
 10970  00B132  D002               	goto	l2611
 10971                           
 10972                           ; BSR set to: 0
 10973                           ;encoder.c: 582: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 10974  00B134  0E04               	movlw	4
 10975  00B136  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 10976  00B138                     l2611:
 10977                           
 10978                           ; BSR set to: 0
 10979                           ;encoder.c: 583: if(os.encoder2Count>0)
 10980                           
 10981                           ; BSR set to: 0
 10982  00B138  51CF               	movf	(_os+5)& (0+255),w,b	;volatile
 10983  00B13A  0A80               	xorlw	128
 10984  00B13C  0F7F               	addlw	-129
 10985  00B13E  A0D8               	btfss	status,0,c
 10986  00B140  D002               	goto	l2612
 10987                           
 10988                           ; BSR set to: 0
 10989                           ;encoder.c: 584: os.displayState = DISPLAY_STATE_MANUAL_CW;
 10990  00B142  0E83               	movlw	131
 10991  00B144  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 10992  00B146                     l2612:
 10993                           
 10994                           ; BSR set to: 0
 10995                           ;encoder.c: 585: if(os.encoder2Count<0)
 10996                           
 10997                           ; BSR set to: 0
 10998  00B146  AFCF               	btfss	(_os+5)& (0+255),7,b	;volatile
 10999  00B148  D05C               	goto	l2483
 11000                           
 11001                           ; BSR set to: 0
 11002                           ;encoder.c: 586: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 11003  00B14A  0E81               	movlw	129
 11004  00B14C  D020               	goto	L17
 11005  00B14E                     
 11006                           ; BSR set to: 0
 11007                           ;encoder.c: 589: if(os.button2==1)
 11008                           
 11009                           ; BSR set to: 0
 11010  00B14E  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
 11011  00B150  A4D8               	btfss	status,2,c
 11012  00B152  D011               	goto	l2615
 11013                           
 11014                           ; BSR set to: 0
 11015                           ;encoder.c: 590: {;encoder.c: 591: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 11016  00B154  0E84               	movlw	132
 11017  00B156  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 11018                           
 11019                           ; BSR set to: 0
 11020                           ;encoder.c: 592: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed);
 11021  00B158  0E00               	movlw	0
 11022  00B15A  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 11023  00B15C  0E00               	movlw	0
 11024  00B15E  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 11025  00B160  0E00               	movlw	0
 11026  00B162  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 11027  00B164  0E00               	movlw	0
 11028  00B166  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 11029  00B168  C0ED  F09B         	movff	_os+35,motor_schedule_command@speed	;volatile
 11030  00B16C  C0EE  F09C         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 11031  00B170  0E01               	movlw	1
 11032  00B172  EC44  F084         	call	_motor_schedule_command
 11033  00B176                     l2615:
 11034                           
 11035                           ;encoder.c: 594: };encoder.c: 595: if(os.encoder2Count<0)
 11036  00B176  0100               	movlb	0	; () banked
 11037  00B178  AFCF               	btfss	(_os+5)& (0+255),7,b	;volatile
 11038  00B17A  D043               	goto	l2483
 11039                           
 11040                           ; BSR set to: 0
 11041                           ;encoder.c: 596: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 11042  00B17C  0E82               	movlw	130
 11043  00B17E  D007               	goto	L17
 11044  00B180                     
 11045                           ; BSR set to: 0
 11046                           ;encoder.c: 599: if(os.button2==1)
 11047                           
 11048                           ; BSR set to: 0
 11049  00B180  05D0               	decf	(_os+6)& (0+255),w,b	;volatile
 11050  00B182  A4D8               	btfss	status,2,c
 11051  00B184  D03E               	goto	l2483
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;encoder.c: 600: {;encoder.c: 601: motor_stop();
 11055  00B186  EC8F  F08D         	call	_motor_stop	;wreg free
 11056                           
 11057                           ;encoder.c: 602: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 11058  00B18A  0E82               	movlw	130
 11059  00B18C  0100               	movlb	0	; () banked
 11060  00B18E                     L17:
 11061  00B18E  6FD7               	movwf	(_os+13)& (0+255),b	;volatile
 11062                           
 11063                           ; BSR set to: 0
 11064                           ;encoder.c: 605: }
 11065                           
 11066                           ; BSR set to: 0
 11067                           ;encoder.c: 603: };encoder.c: 604: break;
 11068  00B190  D038               	goto	l2483
 11069  00B192                     l2605:
 11070                           
 11071                           ; BSR set to: 0
 11072  00B192  0100               	movlb	0	; () banked
 11073  00B194  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
 11074                           
 11075                           ; Switch size 1, requested type "space"
 11076                           ; Number of cases is 4, Range of values is 129 to 132
 11077                           ; switch strategies available:
 11078                           ; Name         Instructions Cycles
 11079                           ; simple_byte           13     7 (average)
 11080                           ;	Chosen strategy is simple_byte
 11081  00B196  0A81               	xorlw	129	; case 129
 11082  00B198  B4D8               	btfsc	status,2,c
 11083  00B19A  D7AC               	goto	l2606
 11084  00B19C  0A03               	xorlw	3	; case 130
 11085  00B19E  B4D8               	btfsc	status,2,c
 11086  00B1A0  D7C6               	goto	l2610
 11087  00B1A2  0A01               	xorlw	1	; case 131
 11088  00B1A4  B4D8               	btfsc	status,2,c
 11089  00B1A6  D7D3               	goto	l2614
 11090  00B1A8  0A07               	xorlw	7	; case 132
 11091  00B1AA  B4D8               	btfsc	status,2,c
 11092  00B1AC  D7E9               	goto	l2617
 11093                           
 11094                           ; BSR set to: 0
 11095                           ;encoder.c: 607: }
 11096                           
 11097                           ; BSR set to: 0
 11098                           ;encoder.c: 606: break;
 11099  00B1AE  D029               	goto	l2483
 11100  00B1B0                     l2448:
 11101                           
 11102                           ; BSR set to: 0
 11103                           
 11104                           ; BSR set to: 0
 11105  00B1B0  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
 11106  00B1B2  0BF0               	andlw	240
 11107  00B1B4  6F9E               	movwf	??_encoder_statemachine& (0+255),b
 11108  00B1B6  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11109                           
 11110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11111                           ; Switch size 1, requested type "space"
 11112                           ; Number of cases is 1, Range of values is 0 to 0
 11113                           ; switch strategies available:
 11114                           ; Name         Instructions Cycles
 11115                           ; simple_byte            4     3 (average)
 11116                           ;	Chosen strategy is simple_byte
 11117  00B1B8  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11118  00B1BA  0A00               	xorlw	0	; case 0
 11119  00B1BC  A4D8               	btfss	status,2,c
 11120  00B1BE  D021               	goto	l2483
 11121                           
 11122                           ; BSR set to: 0
 11123                           ; Switch size 1, requested type "space"
 11124                           ; Number of cases is 9, Range of values is 0 to 128
 11125                           ; switch strategies available:
 11126                           ; Name         Instructions Cycles
 11127                           ; simple_byte           28    15 (average)
 11128                           ;	Chosen strategy is simple_byte
 11129  00B1C0  519E               	movf	??_encoder_statemachine& (0+255),w,b
 11130  00B1C2  0A00               	xorlw	0	; case 0
 11131  00B1C4  B4D8               	btfsc	status,2,c
 11132  00B1C6  EF2D  F052         	goto	l2450
 11133  00B1CA  0A10               	xorlw	16	; case 16
 11134  00B1CC  B4D8               	btfsc	status,2,c
 11135  00B1CE  EF6D  F052         	goto	l2485
 11136  00B1D2  0A30               	xorlw	48	; case 32
 11137  00B1D4  B4D8               	btfsc	status,2,c
 11138  00B1D6  EF62  F053         	goto	l2501
 11139  00B1DA  0A10               	xorlw	16	; case 48
 11140  00B1DC  B4D8               	btfsc	status,2,c
 11141  00B1DE  EF8D  F053         	goto	l2516
 11142  00B1E2  0A70               	xorlw	112	; case 64
 11143  00B1E4  B4D8               	btfsc	status,2,c
 11144  00B1E6  EFC1  F053         	goto	l2531
 11145  00B1EA  0A10               	xorlw	16	; case 80
 11146  00B1EC  B4D8               	btfsc	status,2,c
 11147  00B1EE  D4D5               	goto	l2554
 11148  00B1F0  0A30               	xorlw	48	; case 96
 11149  00B1F2  B4D8               	btfsc	status,2,c
 11150  00B1F4  D52A               	goto	l2569
 11151  00B1F6  0A10               	xorlw	16	; case 112
 11152  00B1F8  B4D8               	btfsc	status,2,c
 11153  00B1FA  D66D               	goto	l2589
 11154  00B1FC  0AF0               	xorlw	240	; case 128
 11155  00B1FE  B4D8               	btfsc	status,2,c
 11156  00B200  D74B               	goto	l2600
 11157  00B202                     l2483:
 11158                           
 11159                           ;encoder.c: 610: os.encoder1Count = 0;
 11160                           
 11161                           ; BSR set to: 0
 11162  00B202  0E00               	movlw	0
 11163  00B204  0100               	movlb	0	; () banked
 11164  00B206  6FCD               	movwf	(_os+3)& (0+255),b	;volatile
 11165                           
 11166                           ;encoder.c: 611: os.encoder2Count = 0;
 11167  00B208  0E00               	movlw	0
 11168  00B20A  6FCF               	movwf	(_os+5)& (0+255),b	;volatile
 11169                           
 11170                           ;encoder.c: 612: os.button1 = 0;
 11171  00B20C  0E00               	movlw	0
 11172  00B20E  6FCE               	movwf	(_os+4)& (0+255),b	;volatile
 11173                           
 11174                           ;encoder.c: 613: os.button2 = 0;
 11175  00B210  0E00               	movlw	0
 11176  00B212  6FD0               	movwf	(_os+6)& (0+255),b	;volatile
 11177                           
 11178                           ; BSR set to: 0
 11179  00B214  0012               	return		;funcret
 11180  00B216                     __end_of_encoder_statemachine:
 11181                           	opt stack 0
 11182                           tblptru	equ	0xFF8
 11183                           tblptrh	equ	0xFF7
 11184                           tblptrl	equ	0xFF6
 11185                           tablat	equ	0xFF5
 11186                           prodh	equ	0xFF4
 11187                           prodl	equ	0xFF3
 11188                           intcon	equ	0xFF2
 11189                           postinc0	equ	0xFEE
 11190                           wreg	equ	0xFE8
 11191                           postdec1	equ	0xFE5
 11192                           plusw1	equ	0xFE3
 11193                           fsr1h	equ	0xFE2
 11194                           fsr1l	equ	0xFE1
 11195                           indf2	equ	0xFDF
 11196                           postinc2	equ	0xFDE
 11197                           postdec2	equ	0xFDD
 11198                           plusw2	equ	0xFDB
 11199                           fsr2h	equ	0xFDA
 11200                           fsr2l	equ	0xFD9
 11201                           status	equ	0xFD8
 11202                           
 11203 ;; *************** function _motor_stop *****************
 11204 ;; Defined at:
 11205 ;;		line 421 in file "motor.c"
 11206 ;; Parameters:    Size  Location     Type
 11207 ;;		None
 11208 ;; Auto vars:     Size  Location     Type
 11209 ;;		None
 11210 ;; Return value:  Size  Location     Type
 11211 ;;                  1    wreg      void 
 11212 ;; Registers used:
 11213 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 11214 ;; Tracked objects:
 11215 ;;		On entry : 0/0
 11216 ;;		On exit  : 0/0
 11217 ;;		Unchanged: 0/0
 11218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11221 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11222 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11223 ;;Total ram usage:        2 bytes
 11224 ;; Hardware stack levels used:    1
 11225 ;; Hardware stack levels required when called:   10
 11226 ;; This function calls:
 11227 ;;		Nothing
 11228 ;; This function is called by:
 11229 ;;		_encoder_statemachine
 11230 ;; This function uses a non-reentrant model
 11231 ;;
 11232                           
 11233                           	psect	text24
 11234  011B1E                     __ptext24:
 11235                           	opt stack 0
 11236  011B1E                     _motor_stop:
 11237                           	opt stack 19
 11238                           
 11239                           ;motor.c: 423: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 11240                           
 11241                           ; BSR set to: 0
 11242                           ;incstack = 0
 11243  011B1E  90D8               	bcf	status,0,c
 11244  011B20  0100               	movlb	0	; () banked
 11245  011B22  35F1               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 11246  011B24  6EF6               	movwf	tblptrl,c
 11247  011B26  35F2               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 11248  011B28  6EF7               	movwf	tblptrh,c
 11249  011B2A  0E61               	movlw	low _motor_steps_lookup
 11250  011B2C  26F6               	addwf	tblptrl,f,c
 11251  011B2E  0E94               	movlw	high _motor_steps_lookup
 11252  011B30  22F7               	addwfc	tblptrh,f,c
 11253  011B32                     	if	1	;There are 3 active tblptr bytes
 11254  011B32  6AF8               	clrf	tblptru,c
 11255  011B34  0E00               	movlw	low (__mediumconst shr (0+16))
 11256  011B36  22F8               	addwfc	tblptru,f,c
 11257  011B38                     	endif
 11258  011B38  0009               	tblrd		*+
 11259  011B3A  CFF5 F060          	movff	tablat,??_motor_stop
 11260  011B3E  0009               	tblrd		*+
 11261  011B40  CFF5 F061          	movff	tablat,??_motor_stop+1
 11262  011B44  5160               	movf	??_motor_stop& (0+255),w,b
 11263  011B46  2416               	addwf	_motor_current_stepcount,w,c	;volatile
 11264  011B48  0101               	movlb	1	; () banked
 11265  011B4A  6F4F               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 11266  011B4C  0100               	movlb	0	; () banked
 11267  011B4E  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 11268  011B50  2017               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 11269  011B52  0101               	movlb	1	; () banked
 11270  011B54  6F50               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 11271  011B56  0E00               	movlw	0
 11272  011B58  2018               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 11273  011B5A  6F51               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 11274  011B5C  0E00               	movlw	0
 11275  011B5E  2019               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 11276  011B60  6F52               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 11277                           
 11278                           ; BSR set to: 1
 11279  011B62  0012               	return		;funcret
 11280  011B64                     __end_of_motor_stop:
 11281                           	opt stack 0
 11282                           tblptru	equ	0xFF8
 11283                           tblptrh	equ	0xFF7
 11284                           tblptrl	equ	0xFF6
 11285                           tablat	equ	0xFF5
 11286                           prodh	equ	0xFF4
 11287                           prodl	equ	0xFF3
 11288                           intcon	equ	0xFF2
 11289                           postinc0	equ	0xFEE
 11290                           wreg	equ	0xFE8
 11291                           postdec1	equ	0xFE5
 11292                           plusw1	equ	0xFE3
 11293                           fsr1h	equ	0xFE2
 11294                           fsr1l	equ	0xFE1
 11295                           indf2	equ	0xFDF
 11296                           postinc2	equ	0xFDE
 11297                           postdec2	equ	0xFDD
 11298                           plusw2	equ	0xFDB
 11299                           fsr2h	equ	0xFDA
 11300                           fsr2l	equ	0xFD9
 11301                           status	equ	0xFD8
 11302                           
 11303 ;; *************** function _motor_schedule_command *****************
 11304 ;; Defined at:
 11305 ;;		line 87 in file "motor.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;  direction       1    wreg     enum E6622
 11308 ;;  distance_in_    4   55[BANK0 ] unsigned long 
 11309 ;;  speed           2   59[BANK0 ] unsigned int 
 11310 ;; Auto vars:     Size  Location     Type
 11311 ;;  direction       1   61[BANK0 ] enum E6622
 11312 ;; Return value:  Size  Location     Type
 11313 ;;                  1    wreg      unsigned char 
 11314 ;; Registers used:
 11315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11316 ;; Tracked objects:
 11317 ;;		On entry : 0/0
 11318 ;;		On exit  : 0/0
 11319 ;;		Unchanged: 0/0
 11320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11321 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11324 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11325 ;;Total ram usage:        7 bytes
 11326 ;; Hardware stack levels used:    1
 11327 ;; Hardware stack levels required when called:   11
 11328 ;; This function calls:
 11329 ;;		__motor_run
 11330 ;;		_motor_items_in_cue
 11331 ;; This function is called by:
 11332 ;;		_encoder_statemachine
 11333 ;; This function uses a non-reentrant model
 11334 ;;
 11335                           
 11336                           	psect	text25
 11337  010888                     __ptext25:
 11338                           	opt stack 0
 11339  010888                     _motor_schedule_command:
 11340                           	opt stack 18
 11341                           
 11342                           ; BSR set to: 1
 11343                           ;incstack = 0
 11344                           ;motor_schedule_command@direction stored from wreg
 11345  010888  0100               	movlb	0	; () banked
 11346  01088A  6F9D               	movwf	motor_schedule_command@direction& (0+255),b
 11347                           
 11348                           ;motor.c: 89: if((motor_items_in_cue()==0) && (os.busy==0))
 11349  01088C  EC93  F091         	call	_motor_items_in_cue	;wreg free
 11350  010890  0900               	iorlw	0
 11351  010892  A4D8               	btfss	status,2,c
 11352  010894  D014               	goto	l2323
 11353  010896  0100               	movlb	0	; () banked
 11354  010898  51D8               	movf	(_os+14)& (0+255),w,b	;volatile
 11355  01089A  A4D8               	btfss	status,2,c
 11356  01089C  D010               	goto	l2323
 11357                           
 11358                           ; BSR set to: 0
 11359                           ;motor.c: 90: {;motor.c: 93: _motor_run(direction, distance_in_steps, speed);
 11360  01089E  C097  F060         	movff	motor_schedule_command@distance_in_steps,__motor_run@distance_in_steps
 11361  0108A2  C098  F061         	movff	motor_schedule_command@distance_in_steps+1,__motor_run@distance_in_steps+1
 11362  0108A6  C099  F062         	movff	motor_schedule_command@distance_in_steps+2,__motor_run@distance_in_steps+2
 11363  0108AA  C09A  F063         	movff	motor_schedule_command@distance_in_steps+3,__motor_run@distance_in_steps+3
 11364  0108AE  C09B  F064         	movff	motor_schedule_command@speed,__motor_run@speed
 11365  0108B2  C09C  F065         	movff	motor_schedule_command@speed+1,__motor_run@speed+1
 11366  0108B6  519D               	movf	motor_schedule_command@direction& (0+255),w,b
 11367  0108B8  EC2A  F06E         	call	__motor_run
 11368                           
 11369                           ;motor.c: 95: return 1;;	Return value of _motor_schedule_command is never used
 11370  0108BC  0012               	return	
 11371  0108BE                     l2323:
 11372                           
 11373                           ;motor.c: 96: };motor.c: 97: if(motor_items_in_cue()==8-1)
 11374  0108BE  EC93  F091         	call	_motor_items_in_cue	;wreg free
 11375  0108C2  0A07               	xorlw	7
 11376  0108C4  B4D8               	btfsc	status,2,c
 11377  0108C6  0012               	return	
 11378                           
 11379                           ;motor.c: 103: else;motor.c: 104: {;motor.c: 106: motor_command_cue[motor_cue_write_inde
      +                          x].direction = direction;
 11380                           
 11381                           ;motor.c: 102: }
 11382                           
 11383                           ;motor.c: 98: {;motor.c: 101: return 0;;	Return value of _motor_schedule_command is neve
      +                          r used
 11384  0108C8  0100               	movlb	0	; () banked
 11385  0108CA  51FA               	movf	_motor_cue_write_index& (0+255),w,b
 11386  0108CC  0D07               	mullw	7
 11387  0108CE  0E00               	movlw	low _motor_command_cue
 11388  0108D0  24F3               	addwf	prodl,w,c
 11389  0108D2  6ED9               	movwf	fsr2l,c
 11390  0108D4  0E02               	movlw	high _motor_command_cue
 11391  0108D6  20F4               	addwfc	prodh,w,c
 11392  0108D8  6EDA               	movwf	fsr2h,c
 11393  0108DA  C09D  FFDF         	movff	motor_schedule_command@direction,indf2
 11394                           
 11395                           ;motor.c: 107: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 11396  0108DE  51FA               	movf	_motor_cue_write_index& (0+255),w,b
 11397  0108E0  0D07               	mullw	7
 11398  0108E2  0E01               	movlw	1
 11399  0108E4  26F3               	addwf	prodl,f,c
 11400  0108E6  0E00               	movlw	0
 11401  0108E8  22F4               	addwfc	prodh,f,c
 11402  0108EA  0E00               	movlw	low _motor_command_cue
 11403  0108EC  24F3               	addwf	prodl,w,c
 11404  0108EE  6ED9               	movwf	fsr2l,c
 11405  0108F0  0E02               	movlw	high _motor_command_cue
 11406  0108F2  20F4               	addwfc	prodh,w,c
 11407  0108F4  6EDA               	movwf	fsr2h,c
 11408  0108F6  C097  FFDE         	movff	motor_schedule_command@distance_in_steps,postinc2
 11409  0108FA  C098  FFDE         	movff	motor_schedule_command@distance_in_steps+1,postinc2
 11410  0108FE  C099  FFDE         	movff	motor_schedule_command@distance_in_steps+2,postinc2
 11411  010902  C09A  FFDE         	movff	motor_schedule_command@distance_in_steps+3,postinc2
 11412                           
 11413                           ;motor.c: 108: motor_command_cue[motor_cue_write_index].speed = speed;
 11414  010906  51FA               	movf	_motor_cue_write_index& (0+255),w,b
 11415  010908  0D07               	mullw	7
 11416  01090A  0E05               	movlw	5
 11417  01090C  26F3               	addwf	prodl,f,c
 11418  01090E  0E00               	movlw	0
 11419  010910  22F4               	addwfc	prodh,f,c
 11420  010912  0E00               	movlw	low _motor_command_cue
 11421  010914  24F3               	addwf	prodl,w,c
 11422  010916  6ED9               	movwf	fsr2l,c
 11423  010918  0E02               	movlw	high _motor_command_cue
 11424  01091A  20F4               	addwfc	prodh,w,c
 11425  01091C  6EDA               	movwf	fsr2h,c
 11426  01091E  C09B  FFDE         	movff	motor_schedule_command@speed,postinc2
 11427  010922  C09C  FFDD         	movff	motor_schedule_command@speed+1,postdec2
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;motor.c: 110: ++motor_cue_write_index;
 11431  010926  2BFA               	incf	_motor_cue_write_index& (0+255),f,b
 11432                           
 11433                           ; BSR set to: 0
 11434                           ;motor.c: 112: return 1;;	Return value of _motor_schedule_command is never used
 11435  010928  0012               	return	
 11436  01092A                     __end_of_motor_schedule_command:
 11437                           	opt stack 0
 11438                           tblptru	equ	0xFF8
 11439                           tblptrh	equ	0xFF7
 11440                           tblptrl	equ	0xFF6
 11441                           tablat	equ	0xFF5
 11442                           prodh	equ	0xFF4
 11443                           prodl	equ	0xFF3
 11444                           intcon	equ	0xFF2
 11445                           postinc0	equ	0xFEE
 11446                           wreg	equ	0xFE8
 11447                           postdec1	equ	0xFE5
 11448                           plusw1	equ	0xFE3
 11449                           fsr1h	equ	0xFE2
 11450                           fsr1l	equ	0xFE1
 11451                           indf2	equ	0xFDF
 11452                           postinc2	equ	0xFDE
 11453                           postdec2	equ	0xFDD
 11454                           plusw2	equ	0xFDB
 11455                           fsr2h	equ	0xFDA
 11456                           fsr2l	equ	0xFD9
 11457                           status	equ	0xFD8
 11458                           
 11459 ;; *************** function _motor_items_in_cue *****************
 11460 ;; Defined at:
 11461 ;;		line 82 in file "motor.c"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;		None
 11464 ;; Auto vars:     Size  Location     Type
 11465 ;;		None
 11466 ;; Return value:  Size  Location     Type
 11467 ;;                  1    wreg      unsigned char 
 11468 ;; Registers used:
 11469 ;;		wreg, status,2, status,0
 11470 ;; Tracked objects:
 11471 ;;		On entry : 0/0
 11472 ;;		On exit  : 0/0
 11473 ;;		Unchanged: 0/0
 11474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11479 ;;Total ram usage:        0 bytes
 11480 ;; Hardware stack levels used:    1
 11481 ;; Hardware stack levels required when called:   10
 11482 ;; This function calls:
 11483 ;;		Nothing
 11484 ;; This function is called by:
 11485 ;;		_motor_schedule_command
 11486 ;;		_motor_process_cue
 11487 ;; This function uses a non-reentrant model
 11488 ;;
 11489                           
 11490                           	psect	text26
 11491  012326                     __ptext26:
 11492                           	opt stack 0
 11493  012326                     _motor_items_in_cue:
 11494                           	opt stack 19
 11495                           
 11496                           ;motor.c: 84: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 11497                           
 11498                           ;incstack = 0
 11499  012326  0100               	movlb	0	; () banked
 11500  012328  51FB               	movf	_motor_cue_read_index& (0+255),w,b
 11501  01232A  0800               	sublw	0
 11502  01232C  25FA               	addwf	_motor_cue_write_index& (0+255),w,b
 11503  01232E  0B07               	andlw	7
 11504  012330  0012               	return	
 11505  012332                     __end_of_motor_items_in_cue:
 11506                           	opt stack 0
 11507                           tblptru	equ	0xFF8
 11508                           tblptrh	equ	0xFF7
 11509                           tblptrl	equ	0xFF6
 11510                           tablat	equ	0xFF5
 11511                           prodh	equ	0xFF4
 11512                           prodl	equ	0xFF3
 11513                           intcon	equ	0xFF2
 11514                           postinc0	equ	0xFEE
 11515                           wreg	equ	0xFE8
 11516                           postdec1	equ	0xFE5
 11517                           plusw1	equ	0xFE3
 11518                           fsr1h	equ	0xFE2
 11519                           fsr1l	equ	0xFE1
 11520                           indf2	equ	0xFDF
 11521                           postinc2	equ	0xFDE
 11522                           postdec2	equ	0xFDD
 11523                           plusw2	equ	0xFDB
 11524                           fsr2h	equ	0xFDA
 11525                           fsr2l	equ	0xFD9
 11526                           status	equ	0xFD8
 11527                           
 11528 ;; *************** function __motor_run *****************
 11529 ;; Defined at:
 11530 ;;		line 165 in file "motor.c"
 11531 ;; Parameters:    Size  Location     Type
 11532 ;;  direction       1    wreg     enum E6622
 11533 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 11534 ;;  speed           2    4[BANK0 ] unsigned int 
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;  direction       1   10[BANK0 ] enum E6622
 11537 ;; Return value:  Size  Location     Type
 11538 ;;                  1    wreg      void 
 11539 ;; Registers used:
 11540 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 11541 ;; Tracked objects:
 11542 ;;		On entry : 0/0
 11543 ;;		On exit  : 0/0
 11544 ;;		Unchanged: 0/0
 11545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11546 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11548 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11549 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11550 ;;Total ram usage:       11 bytes
 11551 ;; Hardware stack levels used:    1
 11552 ;; Hardware stack levels required when called:   10
 11553 ;; This function calls:
 11554 ;;		Nothing
 11555 ;; This function is called by:
 11556 ;;		_motor_schedule_command
 11557 ;;		_motor_process_cue
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561                           	psect	text27
 11562  00DC54                     __ptext27:
 11563                           	opt stack 0
 11564  00DC54                     __motor_run:
 11565                           	opt stack 19
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;incstack = 0
 11569                           ;__motor_run@direction stored from wreg
 11570  00DC54  0100               	movlb	0	; () banked
 11571  00DC56  6F6A               	movwf	__motor_run@direction& (0+255),b
 11572                           
 11573                           ;motor.c: 168: motor_direction = direction;
 11574  00DC58  C06A  F0F9         	movff	__motor_run@direction,_motor_direction
 11575                           
 11576                           ;motor.c: 171: if(distance_in_steps==0)
 11577  00DC5C  0100               	movlb	0	; () banked
 11578  00DC5E  5160               	movf	__motor_run@distance_in_steps& (0+255),w,b
 11579  00DC60  1161               	iorwf	(__motor_run@distance_in_steps+1)& (0+255),w,b
 11580  00DC62  1162               	iorwf	(__motor_run@distance_in_steps+2)& (0+255),w,b
 11581  00DC64  1163               	iorwf	(__motor_run@distance_in_steps+3)& (0+255),w,b
 11582  00DC66  A4D8               	btfss	status,2,c
 11583  00DC68  D00A               	goto	l2339
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;motor.c: 172: {;motor.c: 174: motor_final_stepcount = 0xFFFFFF00;
 11587  00DC6A  0E00               	movlw	0
 11588  00DC6C  0101               	movlb	1	; () banked
 11589  00DC6E  6F4F               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 11590  00DC70  0EFF               	movlw	255
 11591  00DC72  6F50               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 11592  00DC74  0EFF               	movlw	255
 11593  00DC76  6F51               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 11594  00DC78  0EFF               	movlw	255
 11595  00DC7A  6F52               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 11596                           
 11597                           ;motor.c: 175: }
 11598  00DC7C  D008               	goto	l2340
 11599  00DC7E                     l2339:
 11600                           
 11601                           ; BSR set to: 0
 11602                           ;motor.c: 176: else;motor.c: 177: {;motor.c: 178: motor_final_stepcount = distance_in_st
      +                          eps;
 11603  00DC7E  C060  F14F         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 11604  00DC82  C061  F150         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 11605  00DC86  C062  F151         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 11606  00DC8A  C063  F152         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 11607  00DC8E                     l2340:
 11608                           
 11609                           ;motor.c: 180: };motor.c: 183: if(speed==0)
 11610                           
 11611                           ; BSR set to: 0
 11612  00DC8E  0100               	movlb	0	; () banked
 11613  00DC90  5164               	movf	__motor_run@speed& (0+255),w,b
 11614  00DC92  1165               	iorwf	(__motor_run@speed+1)& (0+255),w,b
 11615  00DC94  A4D8               	btfss	status,2,c
 11616  00DC96  D005               	goto	l2341
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;motor.c: 184: {;motor.c: 185: motor_maximum_speed = config.maximum_speed;
 11620  00DC98  C128  F16F         	movff	_config+9,_motor_maximum_speed
 11621  00DC9C  C129  F170         	movff	_config+10,_motor_maximum_speed+1
 11622                           
 11623                           ;motor.c: 186: }
 11624  00DCA0  D004               	goto	l2342
 11625  00DCA2                     l2341:
 11626                           
 11627                           ; BSR set to: 0
 11628                           ;motor.c: 187: else;motor.c: 188: {;motor.c: 189: motor_maximum_speed = speed;
 11629  00DCA2  C064  F16F         	movff	__motor_run@speed,_motor_maximum_speed
 11630  00DCA6  C065  F170         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 11631  00DCAA                     l2342:
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;motor.c: 190: };motor.c: 193: motor_current_speed = 0;
 11635                           
 11636                           ; BSR set to: 0
 11637  00DCAA  0E00               	movlw	0
 11638  00DCAC  6FF2               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 11639  00DCAE  0E00               	movlw	0
 11640  00DCB0  6FF1               	movwf	_motor_current_speed& (0+255),b	;volatile
 11641                           
 11642                           ;motor.c: 194: motor_current_stepcount = 0;
 11643  00DCB2  0E00               	movlw	0
 11644  00DCB4  6E16               	movwf	_motor_current_stepcount,c	;volatile
 11645  00DCB6  0E00               	movlw	0
 11646  00DCB8  6E17               	movwf	_motor_current_stepcount+1,c	;volatile
 11647  00DCBA  0E00               	movlw	0
 11648  00DCBC  6E18               	movwf	_motor_current_stepcount+2,c	;volatile
 11649  00DCBE  0E00               	movlw	0
 11650  00DCC0  6E19               	movwf	_motor_current_stepcount+3,c	;volatile
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;motor.c: 196: motor_next_speed_check = motor_steps_lookup[1];
 11654  00DCC2  0E63               	movlw	low (_motor_steps_lookup+2)
 11655  00DCC4  6EF6               	movwf	tblptrl,c
 11656  00DCC6  0E94               	movlw	high (_motor_steps_lookup+2)
 11657  00DCC8  6EF7               	movwf	tblptrh,c
 11658  00DCCA                     	if	0	;tblptru may be non-zero
 11659  00DCCA                     	endif
 11660  00DCCA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11661  00DCCA  0E00               	movlw	low (__mediumconst shr (0+16))
 11662  00DCCC  6EF8               	movwf	tblptru,c
 11663  00DCCE                     	endif
 11664  00DCCE  0009               	tblrd		*+
 11665  00DCD0  CFF5 F066          	movff	tablat,??__motor_run
 11666  00DCD4  0009               	tblrd		*+
 11667  00DCD6  CFF5 F067          	movff	tablat,??__motor_run+1
 11668  00DCDA  C066  F14B         	movff	??__motor_run,_motor_next_speed_check	;volatile
 11669  00DCDE  C067  F14C         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 11670  00DCE2  0101               	movlb	1	; () banked
 11671  00DCE4  6B4D               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 11672  00DCE6  6B4E               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 11673                           
 11674                           ; BSR set to: 1
 11675                           ;motor.c: 199: CCP1CONbits.CCP1M = 0b0000;
 11676  00DCE8  90BA               	bcf	4026,0,c	;volatile
 11677  00DCEA  92BA               	bcf	4026,1,c	;volatile
 11678  00DCEC  94BA               	bcf	4026,2,c	;volatile
 11679  00DCEE  96BA               	bcf	4026,3,c	;volatile
 11680                           
 11681                           ; BSR set to: 1
 11682                           ;motor.c: 202: LATBbits.LB0 = 0;
 11683  00DCF0  908A               	bcf	3978,0,c	;volatile
 11684                           
 11685                           ; BSR set to: 1
 11686                           ;motor.c: 203: if(direction==MOTOR_DIRECTION_CCW)
 11687  00DCF2  0100               	movlb	0	; () banked
 11688  00DCF4  296A               	incf	__motor_run@direction& (0+255),w,b
 11689  00DCF6  A4D8               	btfss	status,2,c
 11690  00DCF8  D005               	goto	l2343
 11691                           
 11692                           ; BSR set to: 0
 11693                           ;motor.c: 204: {;motor.c: 205: if(config.inverse_direction)
 11694  00DCFA  0101               	movlb	1	; () banked
 11695  00DCFC  5123               	movf	(_config+4)& (0+255),w,b
 11696  00DCFE  B4D8               	btfsc	status,2,c
 11697  00DD00  D005               	goto	u19020
 11698  00DD02  D006               	goto	l2347
 11699  00DD04                     l2343:
 11700                           
 11701                           ;motor.c: 210: else;motor.c: 211: {;motor.c: 212: if(config.inverse_direction)
 11702                           
 11703                           ; BSR set to: 1
 11704  00DD04  0101               	movlb	1	; () banked
 11705  00DD06  5123               	movf	(_config+4)& (0+255),w,b
 11706  00DD08  B4D8               	btfsc	status,2,c
 11707  00DD0A  D002               	goto	l2347
 11708  00DD0C                     u19020:
 11709                           
 11710                           ; BSR set to: 1
 11711                           ;motor.c: 213: LATBbits.LB2 = 0;
 11712  00DD0C  948A               	bcf	3978,2,c	;volatile
 11713  00DD0E  D001               	goto	l2348
 11714  00DD10                     l2347:
 11715                           
 11716                           ; BSR set to: 1
 11717                           ;motor.c: 214: else;motor.c: 215: LATBbits.LB2 = 1;
 11718  00DD10  848A               	bsf	3978,2,c	;volatile
 11719  00DD12                     l2348:
 11720                           
 11721                           ; BSR set to: 1
 11722                           ;motor.c: 216: };motor.c: 219: LATBbits.LB1 = 1;
 11723                           
 11724                           ; BSR set to: 1
 11725  00DD12  828A               	bsf	3978,1,c	;volatile
 11726                           
 11727                           ; BSR set to: 1
 11728                           ;motor.c: 222: ++motor_current_stepcount;
 11729  00DD14  0E01               	movlw	1
 11730  00DD16  2616               	addwf	_motor_current_stepcount,f,c	;volatile
 11731  00DD18  0E00               	movlw	0
 11732  00DD1A  2217               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 11733  00DD1C  2218               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 11734  00DD1E  2219               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 11735                           
 11736                           ;motor.c: 225: os.current_position_in_steps += motor_direction;
 11737  00DD20  0100               	movlb	0	; () banked
 11738  00DD22  51F9               	movf	_motor_direction& (0+255),w,b
 11739  00DD24  6F66               	movwf	??__motor_run& (0+255),b
 11740  00DD26  0E00               	movlw	0
 11741  00DD28  BF66               	btfsc	??__motor_run& (0+255),7,b
 11742  00DD2A  0EFF               	movlw	255
 11743  00DD2C  6F67               	movwf	(??__motor_run+1)& (0+255),b
 11744  00DD2E  6F68               	movwf	(??__motor_run+2)& (0+255),b
 11745  00DD30  6F69               	movwf	(??__motor_run+3)& (0+255),b
 11746  00DD32  5166               	movf	??__motor_run& (0+255),w,b
 11747  00DD34  27D1               	addwf	(_os+7)& (0+255),f,b	;volatile
 11748  00DD36  5167               	movf	(??__motor_run+1)& (0+255),w,b
 11749  00DD38  23D2               	addwfc	(_os+8)& (0+255),f,b	;volatile
 11750  00DD3A  5168               	movf	(??__motor_run+2)& (0+255),w,b
 11751  00DD3C  23D3               	addwfc	(_os+9)& (0+255),f,b	;volatile
 11752  00DD3E  5169               	movf	(??__motor_run+3)& (0+255),w,b
 11753  00DD40  23D4               	addwfc	(_os+10)& (0+255),f,b	;volatile
 11754                           
 11755                           ;motor.c: 226: if(os.current_position_in_steps==config.full_circle_in_steps)
 11756  00DD42  0101               	movlb	1	; () banked
 11757  00DD44  511F               	movf	_config& (0+255),w,b
 11758  00DD46  0100               	movlb	0	; () banked
 11759  00DD48  19D1               	xorwf	(_os+7)& (0+255),w,b	;volatile
 11760  00DD4A  E118               	bnz	l19224
 11761  00DD4C  0101               	movlb	1	; () banked
 11762  00DD4E  5120               	movf	(_config+1)& (0+255),w,b
 11763  00DD50  0100               	movlb	0	; () banked
 11764  00DD52  19D2               	xorwf	(_os+8)& (0+255),w,b	;volatile
 11765  00DD54  E113               	bnz	l19224
 11766  00DD56  0101               	movlb	1	; () banked
 11767  00DD58  5121               	movf	(_config+2)& (0+255),w,b
 11768  00DD5A  0100               	movlb	0	; () banked
 11769  00DD5C  19D3               	xorwf	(_os+9)& (0+255),w,b	;volatile
 11770  00DD5E  E10E               	bnz	l19224
 11771  00DD60  0101               	movlb	1	; () banked
 11772  00DD62  5122               	movf	(_config+3)& (0+255),w,b
 11773  00DD64  0100               	movlb	0	; () banked
 11774  00DD66  19D4               	xorwf	(_os+10)& (0+255),w,b	;volatile
 11775  00DD68  A4D8               	btfss	status,2,c
 11776  00DD6A  D008               	goto	l2349
 11777                           
 11778                           ; BSR set to: 0
 11779                           ;motor.c: 227: os.current_position_in_steps = 0;
 11780  00DD6C  0E00               	movlw	0
 11781  00DD6E  6FD1               	movwf	(_os+7)& (0+255),b	;volatile
 11782  00DD70  0E00               	movlw	0
 11783  00DD72  6FD2               	movwf	(_os+8)& (0+255),b	;volatile
 11784  00DD74  0E00               	movlw	0
 11785  00DD76  6FD3               	movwf	(_os+9)& (0+255),b	;volatile
 11786  00DD78  0E00               	movlw	0
 11787  00DD7A  6FD4               	movwf	(_os+10)& (0+255),b	;volatile
 11788  00DD7C                     l2349:
 11789  00DD7C                     l19224:
 11790                           
 11791                           ; BSR set to: 0
 11792                           ;motor.c: 228: if(os.current_position_in_steps==0xFFFFFFFF)
 11793  00DD7C  29D1               	incf	(_os+7)& (0+255),w,b	;volatile
 11794  00DD7E  E11B               	bnz	l19228
 11795  00DD80  29D2               	incf	(_os+8)& (0+255),w,b	;volatile
 11796  00DD82  E119               	bnz	l19228
 11797  00DD84  29D3               	incf	(_os+9)& (0+255),w,b	;volatile
 11798  00DD86  E117               	bnz	l19228
 11799  00DD88  29D4               	incf	(_os+10)& (0+255),w,b	;volatile
 11800  00DD8A  A4D8               	btfss	status,2,c
 11801  00DD8C  D014               	goto	l2350
 11802                           
 11803                           ; BSR set to: 0
 11804                           ;motor.c: 229: os.current_position_in_steps = (config.full_circle_in_steps-1);
 11805  00DD8E  0EFF               	movlw	255
 11806  00DD90  0101               	movlb	1	; () banked
 11807  00DD92  251F               	addwf	_config& (0+255),w,b
 11808  00DD94  0100               	movlb	0	; () banked
 11809  00DD96  6FD1               	movwf	(_os+7)& (0+255),b	;volatile
 11810  00DD98  0EFF               	movlw	255
 11811  00DD9A  0101               	movlb	1	; () banked
 11812  00DD9C  2120               	addwfc	(_config+1)& (0+255),w,b
 11813  00DD9E  0100               	movlb	0	; () banked
 11814  00DDA0  6FD2               	movwf	(_os+8)& (0+255),b	;volatile
 11815  00DDA2  0EFF               	movlw	255
 11816  00DDA4  0101               	movlb	1	; () banked
 11817  00DDA6  2121               	addwfc	(_config+2)& (0+255),w,b
 11818  00DDA8  0100               	movlb	0	; () banked
 11819  00DDAA  6FD3               	movwf	(_os+9)& (0+255),b	;volatile
 11820  00DDAC  0EFF               	movlw	255
 11821  00DDAE  0101               	movlb	1	; () banked
 11822  00DDB0  2122               	addwfc	(_config+3)& (0+255),w,b
 11823  00DDB2  0100               	movlb	0	; () banked
 11824  00DDB4  6FD4               	movwf	(_os+10)& (0+255),b	;volatile
 11825  00DDB6                     l2350:
 11826  00DDB6                     l19228:
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;motor.c: 232: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11830  00DDB6  0E55               	movlw	85
 11831  00DDB8  6EA7               	movwf	4007,c	;volsfr
 11832                           
 11833                           ; BSR set to: 0
 11834  00DDBA  0EAA               	movlw	170
 11835  00DDBC  6EA7               	movwf	4007,c	;volsfr
 11836                           
 11837                           ; BSR set to: 0
 11838  00DDBE  010E               	movlb	14	; () banked
 11839  00DDC0  91BF               	bcf	191,0,b	;volatile
 11840                           
 11841                           ; BSR set to: 14
 11842                           ;motor.c: 233: RPOR4 = 0;
 11843  00DDC2  0E00               	movlw	0
 11844  00DDC4  6FC4               	movwf	196,b	;volatile
 11845                           
 11846                           ; BSR set to: 14
 11847                           ;motor.c: 234: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 11848  00DDC6  0E55               	movlw	85
 11849  00DDC8  6EA7               	movwf	4007,c	;volsfr
 11850                           
 11851                           ; BSR set to: 14
 11852  00DDCA  0EAA               	movlw	170
 11853  00DDCC  6EA7               	movwf	4007,c	;volsfr
 11854                           
 11855                           ; BSR set to: 14
 11856  00DDCE  81BF               	bsf	191,0,b	;volatile
 11857                           
 11858                           ; BSR set to: 14
 11859                           ;motor.c: 237: motor_mode = MOTOR_MODE_MANUAL;
 11860  00DDD0  0E00               	movlw	0
 11861  00DDD2  6E20               	movwf	_motor_mode,c
 11862                           
 11863                           ; BSR set to: 14
 11864                           ;motor.c: 241: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 11865  00DDD4  0EFD               	movlw	low _motor_prescaler_lookup
 11866  00DDD6  0100               	movlb	0	; () banked
 11867  00DDD8  25F1               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 11868  00DDDA  6EF6               	movwf	tblptrl,c
 11869  00DDDC  0E9B               	movlw	high _motor_prescaler_lookup
 11870  00DDDE  21F2               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 11871  00DDE0  6EF7               	movwf	tblptrh,c
 11872  00DDE2                     	if	1	;There are 3 active tblptr bytes
 11873  00DDE2  6AF8               	clrf	tblptru,c
 11874  00DDE4  0E00               	movlw	low (__mediumconst shr (0+16))
 11875  00DDE6  22F8               	addwfc	tblptru,f,c
 11876  00DDE8                     	endif
 11877  00DDE8  0008               	tblrd		*
 11878  00DDEA  CFF5 F066          	movff	tablat,??__motor_run
 11879  00DDEE  50CA               	movf	4042,w,c	;volatile
 11880  00DDF0  1966               	xorwf	??__motor_run& (0+255),w,b
 11881  00DDF2  0BFC               	andlw	-4
 11882  00DDF4  1966               	xorwf	??__motor_run& (0+255),w,b
 11883  00DDF6  6ECA               	movwf	4042,c	;volatile
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;motor.c: 243: PR2 = motor_period_lookup[motor_current_speed];
 11887  00DDF8  0E16               	movlw	low _motor_period_lookup
 11888  00DDFA  25F1               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 11889  00DDFC  6EF6               	movwf	tblptrl,c
 11890  00DDFE  0E9A               	movlw	high _motor_period_lookup
 11891  00DE00  21F2               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 11892  00DE02  6EF7               	movwf	tblptrh,c
 11893  00DE04                     	if	1	;There are 3 active tblptr bytes
 11894  00DE04  6AF8               	clrf	tblptru,c
 11895  00DE06  0E00               	movlw	low (__mediumconst shr (0+16))
 11896  00DE08  22F8               	addwfc	tblptru,f,c
 11897  00DE0A                     	endif
 11898  00DE0A  0008               	tblrd		*
 11899  00DE0C  CFF5 FFCB          	movff	tablat,4043	;volatile
 11900                           
 11901                           ; BSR set to: 0
 11902                           ;motor.c: 245: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 11903  00DE10  0E2F               	movlw	low _motor_postscaler_lookup
 11904  00DE12  25F1               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 11905  00DE14  6EF6               	movwf	tblptrl,c
 11906  00DE16  0E98               	movlw	high _motor_postscaler_lookup
 11907  00DE18  21F2               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 11908  00DE1A  6EF7               	movwf	tblptrh,c
 11909  00DE1C                     	if	1	;There are 3 active tblptr bytes
 11910  00DE1C  6AF8               	clrf	tblptru,c
 11911  00DE1E  0E00               	movlw	low (__mediumconst shr (0+16))
 11912  00DE20  22F8               	addwfc	tblptru,f,c
 11913  00DE22                     	endif
 11914  00DE22  0008               	tblrd		*
 11915  00DE24  CFF5 F066          	movff	tablat,??__motor_run
 11916  00DE28  4766               	rlncf	??__motor_run& (0+255),f,b
 11917  00DE2A  4766               	rlncf	??__motor_run& (0+255),f,b
 11918  00DE2C  4766               	rlncf	??__motor_run& (0+255),f,b
 11919  00DE2E  50CA               	movf	4042,w,c	;volatile
 11920  00DE30  1966               	xorwf	??__motor_run& (0+255),w,b
 11921  00DE32  0B87               	andlw	-121
 11922  00DE34  1966               	xorwf	??__motor_run& (0+255),w,b
 11923  00DE36  6ECA               	movwf	4042,c	;volatile
 11924                           
 11925                           ; BSR set to: 0
 11926                           ;motor.c: 247: CCPR1L = PR2>>1;
 11927  00DE38  90D8               	bcf	status,0,c
 11928  00DE3A  30CB               	rrcf	4043,w,c	;volatile
 11929  00DE3C  6EBB               	movwf	4027,c	;volatile
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;motor.c: 250: PIR1bits.TMR2IF = 0;
 11933  00DE3E  929E               	bcf	3998,1,c	;volatile
 11934                           
 11935                           ; BSR set to: 0
 11936                           ;motor.c: 251: PIE1bits.TMR2IE = 1;
 11937  00DE40  829D               	bsf	3997,1,c	;volatile
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;motor.c: 254: TMR2 = 0;
 11941  00DE42  0E00               	movlw	0
 11942  00DE44  6ECC               	movwf	4044,c	;volatile
 11943                           
 11944                           ; BSR set to: 0
 11945                           ;motor.c: 255: T2CONbits.TMR2ON = 1;
 11946  00DE46  84CA               	bsf	4042,2,c	;volatile
 11947                           
 11948                           ; BSR set to: 0
 11949                           ;motor.c: 258: os.busy = 1;
 11950  00DE48  0E01               	movlw	1
 11951  00DE4A  6FD8               	movwf	(_os+14)& (0+255),b	;volatile
 11952                           
 11953                           ; BSR set to: 0
 11954  00DE4C  0012               	return		;funcret
 11955  00DE4E                     __end_of__motor_run:
 11956                           	opt stack 0
 11957                           tblptru	equ	0xFF8
 11958                           tblptrh	equ	0xFF7
 11959                           tblptrl	equ	0xFF6
 11960                           tablat	equ	0xFF5
 11961                           prodh	equ	0xFF4
 11962                           prodl	equ	0xFF3
 11963                           intcon	equ	0xFF2
 11964                           postinc0	equ	0xFEE
 11965                           wreg	equ	0xFE8
 11966                           postdec1	equ	0xFE5
 11967                           plusw1	equ	0xFE3
 11968                           fsr1h	equ	0xFE2
 11969                           fsr1l	equ	0xFE1
 11970                           indf2	equ	0xFDF
 11971                           postinc2	equ	0xFDE
 11972                           postdec2	equ	0xFDD
 11973                           plusw2	equ	0xFDB
 11974                           fsr2h	equ	0xFDA
 11975                           fsr2l	equ	0xFD9
 11976                           status	equ	0xFD8
 11977                           
 11978 ;; *************** function _motor_nonzero_steps_from_degrees *****************
 11979 ;; Defined at:
 11980 ;;		line 41 in file "motor.c"
 11981 ;; Parameters:    Size  Location     Type
 11982 ;;  degrees         2   47[BANK0 ] unsigned int 
 11983 ;; Auto vars:     Size  Location     Type
 11984 ;;  steps           4   51[BANK0 ] unsigned long 
 11985 ;; Return value:  Size  Location     Type
 11986 ;;                  4   47[BANK0 ] unsigned long 
 11987 ;; Registers used:
 11988 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11989 ;; Tracked objects:
 11990 ;;		On entry : 0/0
 11991 ;;		On exit  : 0/0
 11992 ;;		Unchanged: 0/0
 11993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11994 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11995 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11997 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11998 ;;Total ram usage:        8 bytes
 11999 ;; Hardware stack levels used:    1
 12000 ;; Hardware stack levels required when called:   12
 12001 ;; This function calls:
 12002 ;;		_motor_steps_from_degrees
 12003 ;; This function is called by:
 12004 ;;		_encoder_statemachine
 12005 ;; This function uses a non-reentrant model
 12006 ;;
 12007                           
 12008                           	psect	text28
 12009  011A88                     __ptext28:
 12010                           	opt stack 0
 12011  011A88                     _motor_nonzero_steps_from_degrees:
 12012                           	opt stack 17
 12013                           
 12014                           ;motor.c: 43: uint32_t steps;;motor.c: 44: steps = motor_steps_from_degrees(degrees);
 12015                           
 12016                           ; BSR set to: 0
 12017                           ;incstack = 0
 12018  011A88  C08F  F087         	movff	motor_nonzero_steps_from_degrees@degrees,motor_steps_from_degrees@degrees
 12019  011A8C  C090  F088         	movff	motor_nonzero_steps_from_degrees@degrees+1,motor_steps_from_degrees@degrees+1
 12020  011A90  EC5C  F080         	call	_motor_steps_from_degrees	;wreg free
 12021  011A94  C087  F093         	movff	?_motor_steps_from_degrees,motor_nonzero_steps_from_degrees@steps
 12022  011A98  C088  F094         	movff	?_motor_steps_from_degrees+1,motor_nonzero_steps_from_degrees@steps+1
 12023  011A9C  C089  F095         	movff	?_motor_steps_from_degrees+2,motor_nonzero_steps_from_degrees@steps+2
 12024  011AA0  C08A  F096         	movff	?_motor_steps_from_degrees+3,motor_nonzero_steps_from_degrees@steps+3
 12025                           
 12026                           ;motor.c: 45: if(steps==0)
 12027  011AA4  0100               	movlb	0	; () banked
 12028  011AA6  5193               	movf	motor_nonzero_steps_from_degrees@steps& (0+255),w,b
 12029  011AA8  1194               	iorwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),w,b
 12030  011AAA  1195               	iorwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),w,b
 12031  011AAC  1196               	iorwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),w,b
 12032  011AAE  A4D8               	btfss	status,2,c
 12033  011AB0  D008               	goto	l2304
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;motor.c: 46: steps = 1;
 12037  011AB2  0E01               	movlw	1
 12038  011AB4  6F93               	movwf	motor_nonzero_steps_from_degrees@steps& (0+255),b
 12039  011AB6  0E00               	movlw	0
 12040  011AB8  6F94               	movwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),b
 12041  011ABA  0E00               	movlw	0
 12042  011ABC  6F95               	movwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),b
 12043  011ABE  0E00               	movlw	0
 12044  011AC0  6F96               	movwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),b
 12045  011AC2                     l2304:
 12046                           
 12047                           ; BSR set to: 0
 12048                           ;motor.c: 47: return steps;
 12049                           
 12050                           ; BSR set to: 0
 12051  011AC2  C093  F08F         	movff	motor_nonzero_steps_from_degrees@steps,?_motor_nonzero_steps_from_degrees
 12052  011AC6  C094  F090         	movff	motor_nonzero_steps_from_degrees@steps+1,?_motor_nonzero_steps_from_degrees+1
 12053  011ACA  C095  F091         	movff	motor_nonzero_steps_from_degrees@steps+2,?_motor_nonzero_steps_from_degrees+2
 12054  011ACE  C096  F092         	movff	motor_nonzero_steps_from_degrees@steps+3,?_motor_nonzero_steps_from_degrees+3
 12055  011AD2  0012               	return	
 12056  011AD4                     __end_of_motor_nonzero_steps_from_degrees:
 12057                           	opt stack 0
 12058                           tblptru	equ	0xFF8
 12059                           tblptrh	equ	0xFF7
 12060                           tblptrl	equ	0xFF6
 12061                           tablat	equ	0xFF5
 12062                           prodh	equ	0xFF4
 12063                           prodl	equ	0xFF3
 12064                           intcon	equ	0xFF2
 12065                           postinc0	equ	0xFEE
 12066                           wreg	equ	0xFE8
 12067                           postdec1	equ	0xFE5
 12068                           plusw1	equ	0xFE3
 12069                           fsr1h	equ	0xFE2
 12070                           fsr1l	equ	0xFE1
 12071                           indf2	equ	0xFDF
 12072                           postinc2	equ	0xFDE
 12073                           postdec2	equ	0xFDD
 12074                           plusw2	equ	0xFDB
 12075                           fsr2h	equ	0xFDA
 12076                           fsr2l	equ	0xFD9
 12077                           status	equ	0xFD8
 12078                           
 12079 ;; *************** function _motor_steps_from_degrees *****************
 12080 ;; Defined at:
 12081 ;;		line 30 in file "motor.c"
 12082 ;; Parameters:    Size  Location     Type
 12083 ;;  degrees         2   39[BANK0 ] unsigned int 
 12084 ;; Auto vars:     Size  Location     Type
 12085 ;;  steps           4   43[BANK0 ] float 
 12086 ;; Return value:  Size  Location     Type
 12087 ;;                  4   39[BANK0 ] unsigned long 
 12088 ;; Registers used:
 12089 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12090 ;; Tracked objects:
 12091 ;;		On entry : 0/0
 12092 ;;		On exit  : 0/0
 12093 ;;		Unchanged: 0/0
 12094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12096 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12098 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12099 ;;Total ram usage:        8 bytes
 12100 ;; Hardware stack levels used:    1
 12101 ;; Hardware stack levels required when called:   11
 12102 ;; This function calls:
 12103 ;;		___fldiv
 12104 ;;		___flmul
 12105 ;;		___fltol
 12106 ;;		___xxtofl
 12107 ;; This function is called by:
 12108 ;;		_motor_nonzero_steps_from_degrees
 12109 ;; This function uses a non-reentrant model
 12110 ;;
 12111                           
 12112                           	psect	text29
 12113  0100B8                     __ptext29:
 12114                           	opt stack 0
 12115  0100B8                     _motor_steps_from_degrees:
 12116                           	opt stack 17
 12117                           
 12118                           ;motor.c: 32: float steps;;motor.c: 33: steps = (float) degrees;
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;incstack = 0
 12122  0100B8  C087  F060         	movff	motor_steps_from_degrees@degrees,___xxtofl@val
 12123  0100BC  C088  F061         	movff	motor_steps_from_degrees@degrees+1,___xxtofl@val+1
 12124  0100C0  0100               	movlb	0	; () banked
 12125  0100C2  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 12126  0100C4  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 12127  0100C6  0E00               	movlw	0
 12128  0100C8  EC8A  F071         	call	___xxtofl
 12129  0100CC  C060  F08B         	movff	?___xxtofl,motor_steps_from_degrees@steps
 12130  0100D0  C061  F08C         	movff	?___xxtofl+1,motor_steps_from_degrees@steps+1
 12131  0100D4  C062  F08D         	movff	?___xxtofl+2,motor_steps_from_degrees@steps+2
 12132  0100D8  C063  F08E         	movff	?___xxtofl+3,motor_steps_from_degrees@steps+3
 12133                           
 12134                           ;motor.c: 34: steps *= config.full_circle_in_steps;
 12135  0100DC  C08B  F06E         	movff	motor_steps_from_degrees@steps,___flmul@b
 12136  0100E0  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___flmul@b+1
 12137  0100E4  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___flmul@b+2
 12138  0100E8  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___flmul@b+3
 12139  0100EC  C11F  F060         	movff	_config,___xxtofl@val
 12140  0100F0  C120  F061         	movff	_config+1,___xxtofl@val+1
 12141  0100F4  C121  F062         	movff	_config+2,___xxtofl@val+2
 12142  0100F8  C122  F063         	movff	_config+3,___xxtofl@val+3
 12143  0100FC  0E00               	movlw	0
 12144  0100FE  EC8A  F071         	call	___xxtofl
 12145  010102  C060  F072         	movff	?___xxtofl,___flmul@a
 12146  010106  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 12147  01010A  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 12148  01010E  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 12149  010112  ECF5  F063         	call	___flmul	;wreg free
 12150  010116  C06E  F08B         	movff	?___flmul,motor_steps_from_degrees@steps
 12151  01011A  C06F  F08C         	movff	?___flmul+1,motor_steps_from_degrees@steps+1
 12152  01011E  C070  F08D         	movff	?___flmul+2,motor_steps_from_degrees@steps+2
 12153  010122  C071  F08E         	movff	?___flmul+3,motor_steps_from_degrees@steps+3
 12154                           
 12155                           ;motor.c: 35: steps /= 36000;
 12156  010126  C08B  F06E         	movff	motor_steps_from_degrees@steps,___fldiv@b
 12157  01012A  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___fldiv@b+1
 12158  01012E  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___fldiv@b+2
 12159  010132  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___fldiv@b+3
 12160  010136  0E00               	movlw	0
 12161  010138  0100               	movlb	0	; () banked
 12162  01013A  6F72               	movwf	___fldiv@a& (0+255),b
 12163  01013C  0EA0               	movlw	160
 12164  01013E  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 12165  010140  0E0C               	movlw	12
 12166  010142  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 12167  010144  0E47               	movlw	71
 12168  010146  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 12169  010148  EC0C  F067         	call	___fldiv	;wreg free
 12170  01014C  C06E  F08B         	movff	?___fldiv,motor_steps_from_degrees@steps
 12171  010150  C06F  F08C         	movff	?___fldiv+1,motor_steps_from_degrees@steps+1
 12172  010154  C070  F08D         	movff	?___fldiv+2,motor_steps_from_degrees@steps+2
 12173  010158  C071  F08E         	movff	?___fldiv+3,motor_steps_from_degrees@steps+3
 12174                           
 12175                           ;motor.c: 37: return (uint32_t) steps;
 12176  01015C  C08B  F060         	movff	motor_steps_from_degrees@steps,___fltol@f1
 12177  010160  C08C  F061         	movff	motor_steps_from_degrees@steps+1,___fltol@f1+1
 12178  010164  C08D  F062         	movff	motor_steps_from_degrees@steps+2,___fltol@f1+2
 12179  010168  C08E  F063         	movff	motor_steps_from_degrees@steps+3,___fltol@f1+3
 12180  01016C  EC05  F07D         	call	___fltol	;wreg free
 12181  010170  C060  F087         	movff	?___fltol,?_motor_steps_from_degrees
 12182  010174  C061  F088         	movff	?___fltol+1,?_motor_steps_from_degrees+1
 12183  010178  C062  F089         	movff	?___fltol+2,?_motor_steps_from_degrees+2
 12184  01017C  C063  F08A         	movff	?___fltol+3,?_motor_steps_from_degrees+3
 12185  010180  0012               	return	
 12186  010182                     __end_of_motor_steps_from_degrees:
 12187                           	opt stack 0
 12188                           tblptru	equ	0xFF8
 12189                           tblptrh	equ	0xFF7
 12190                           tblptrl	equ	0xFF6
 12191                           tablat	equ	0xFF5
 12192                           prodh	equ	0xFF4
 12193                           prodl	equ	0xFF3
 12194                           intcon	equ	0xFF2
 12195                           postinc0	equ	0xFEE
 12196                           wreg	equ	0xFE8
 12197                           postdec1	equ	0xFE5
 12198                           plusw1	equ	0xFE3
 12199                           fsr1h	equ	0xFE2
 12200                           fsr1l	equ	0xFE1
 12201                           indf2	equ	0xFDF
 12202                           postinc2	equ	0xFDE
 12203                           postdec2	equ	0xFDD
 12204                           plusw2	equ	0xFDB
 12205                           fsr2h	equ	0xFDA
 12206                           fsr2l	equ	0xFD9
 12207                           status	equ	0xFD8
 12208                           
 12209 ;; *************** function ___flmul *****************
 12210 ;; Defined at:
 12211 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 12212 ;; Parameters:    Size  Location     Type
 12213 ;;  b               4   14[BANK0 ] unsigned long 
 12214 ;;  a               4   18[BANK0 ] unsigned long 
 12215 ;; Auto vars:     Size  Location     Type
 12216 ;;  prod            4   33[BANK0 ] struct .
 12217 ;;  grs             4   28[BANK0 ] unsigned long 
 12218 ;;  temp            2   37[BANK0 ] struct .
 12219 ;;  bexp            1   32[BANK0 ] unsigned char 
 12220 ;;  aexp            1   27[BANK0 ] unsigned char 
 12221 ;;  sign            1   26[BANK0 ] unsigned char 
 12222 ;; Return value:  Size  Location     Type
 12223 ;;                  4   14[BANK0 ] unsigned char 
 12224 ;; Registers used:
 12225 ;;		wreg, status,2, status,0, prodl, prodh
 12226 ;; Tracked objects:
 12227 ;;		On entry : 0/0
 12228 ;;		On exit  : 0/0
 12229 ;;		Unchanged: 0/0
 12230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12231 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12232 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12233 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12234 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12235 ;;Total ram usage:       25 bytes
 12236 ;; Hardware stack levels used:    1
 12237 ;; Hardware stack levels required when called:   10
 12238 ;; This function calls:
 12239 ;;		Nothing
 12240 ;; This function is called by:
 12241 ;;		_main
 12242 ;;		_motor_steps_from_degrees
 12243 ;;		_encoder_statemachine
 12244 ;; This function uses a non-reentrant model
 12245 ;;
 12246                           
 12247                           	psect	text30
 12248  00C7EA                     __ptext30:
 12249                           	opt stack 0
 12250  00C7EA                     ___flmul:
 12251                           	opt stack 17
 12252                           
 12253                           ;incstack = 0
 12254  00C7EA  0100               	movlb	0	; () banked
 12255  00C7EC  5171               	movf	(___flmul@b+3)& (0+255),w,b
 12256  00C7EE  0B80               	andlw	128
 12257  00C7F0  6F7A               	movwf	___flmul@sign& (0+255),b
 12258  00C7F2  5171               	movf	(___flmul@b+3)& (0+255),w,b
 12259  00C7F4  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 12260  00C7F6  6F80               	movwf	___flmul@bexp& (0+255),b
 12261                           
 12262                           ; BSR set to: 0
 12263  00C7F8  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 12264                           
 12265                           ; BSR set to: 0
 12266  00C7FA  8180               	bsf	___flmul@bexp& (0+255),0,b
 12267                           
 12268                           ; BSR set to: 0
 12269                           
 12270                           ; BSR set to: 0
 12271  00C7FC  5180               	movf	___flmul@bexp& (0+255),w,b
 12272  00C7FE  B4D8               	btfsc	status,2,c
 12273  00C800  D00D               	goto	l3246
 12274                           
 12275                           ; BSR set to: 0
 12276  00C802  2980               	incf	___flmul@bexp& (0+255),w,b
 12277  00C804  A4D8               	btfss	status,2,c
 12278  00C806  D008               	goto	l3247
 12279                           
 12280                           ; BSR set to: 0
 12281  00C808  0E00               	movlw	0
 12282  00C80A  6F6E               	movwf	___flmul@b& (0+255),b
 12283  00C80C  0E00               	movlw	0
 12284  00C80E  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 12285  00C810  0E00               	movlw	0
 12286  00C812  6F70               	movwf	(___flmul@b+2)& (0+255),b
 12287  00C814  0E00               	movlw	0
 12288  00C816  6F71               	movwf	(___flmul@b+3)& (0+255),b
 12289  00C818                     l3247:
 12290                           
 12291                           ; BSR set to: 0
 12292                           
 12293                           ; BSR set to: 0
 12294  00C818  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 12295  00C81A  D008               	goto	l3248
 12296  00C81C                     l3246:
 12297                           
 12298                           ; BSR set to: 0
 12299                           
 12300                           ; BSR set to: 0
 12301  00C81C  0E00               	movlw	0
 12302  00C81E  6F6E               	movwf	___flmul@b& (0+255),b
 12303  00C820  0E00               	movlw	0
 12304  00C822  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 12305  00C824  0E00               	movlw	0
 12306  00C826  6F70               	movwf	(___flmul@b+2)& (0+255),b
 12307  00C828  0E00               	movlw	0
 12308  00C82A  6F71               	movwf	(___flmul@b+3)& (0+255),b
 12309  00C82C                     l3248:
 12310                           
 12311                           ; BSR set to: 0
 12312                           
 12313                           ; BSR set to: 0
 12314  00C82C  5175               	movf	(___flmul@a+3)& (0+255),w,b
 12315  00C82E  0B80               	andlw	128
 12316  00C830  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 12317                           
 12318                           ; BSR set to: 0
 12319  00C832  5175               	movf	(___flmul@a+3)& (0+255),w,b
 12320  00C834  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 12321  00C836  6F7B               	movwf	___flmul@aexp& (0+255),b
 12322                           
 12323                           ; BSR set to: 0
 12324  00C838  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 12325                           
 12326                           ; BSR set to: 0
 12327  00C83A  817B               	bsf	___flmul@aexp& (0+255),0,b
 12328                           
 12329                           ; BSR set to: 0
 12330                           
 12331                           ; BSR set to: 0
 12332  00C83C  517B               	movf	___flmul@aexp& (0+255),w,b
 12333  00C83E  B4D8               	btfsc	status,2,c
 12334  00C840  D00D               	goto	l3250
 12335                           
 12336                           ; BSR set to: 0
 12337  00C842  297B               	incf	___flmul@aexp& (0+255),w,b
 12338  00C844  A4D8               	btfss	status,2,c
 12339  00C846  D008               	goto	l3251
 12340                           
 12341                           ; BSR set to: 0
 12342  00C848  0E00               	movlw	0
 12343  00C84A  6F72               	movwf	___flmul@a& (0+255),b
 12344  00C84C  0E00               	movlw	0
 12345  00C84E  6F73               	movwf	(___flmul@a+1)& (0+255),b
 12346  00C850  0E00               	movlw	0
 12347  00C852  6F74               	movwf	(___flmul@a+2)& (0+255),b
 12348  00C854  0E00               	movlw	0
 12349  00C856  6F75               	movwf	(___flmul@a+3)& (0+255),b
 12350  00C858                     l3251:
 12351                           
 12352                           ; BSR set to: 0
 12353                           
 12354                           ; BSR set to: 0
 12355  00C858  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 12356  00C85A  D008               	goto	l3252
 12357  00C85C                     l3250:
 12358                           
 12359                           ; BSR set to: 0
 12360                           
 12361                           ; BSR set to: 0
 12362  00C85C  0E00               	movlw	0
 12363  00C85E  6F72               	movwf	___flmul@a& (0+255),b
 12364  00C860  0E00               	movlw	0
 12365  00C862  6F73               	movwf	(___flmul@a+1)& (0+255),b
 12366  00C864  0E00               	movlw	0
 12367  00C866  6F74               	movwf	(___flmul@a+2)& (0+255),b
 12368  00C868  0E00               	movlw	0
 12369  00C86A  6F75               	movwf	(___flmul@a+3)& (0+255),b
 12370  00C86C                     l3252:
 12371                           
 12372                           ; BSR set to: 0
 12373  00C86C  517B               	movf	___flmul@aexp& (0+255),w,b
 12374  00C86E  B4D8               	btfsc	status,2,c
 12375  00C870  D003               	goto	u18270
 12376                           
 12377                           ; BSR set to: 0
 12378  00C872  5180               	movf	___flmul@bexp& (0+255),w,b
 12379  00C874  A4D8               	btfss	status,2,c
 12380  00C876  D009               	goto	l3253
 12381  00C878                     u18270:
 12382                           
 12383                           ; BSR set to: 0
 12384                           
 12385                           ; BSR set to: 0
 12386  00C878  0E00               	movlw	0
 12387  00C87A  6F6E               	movwf	?___flmul& (0+255),b
 12388  00C87C  0E00               	movlw	0
 12389  00C87E  6F6F               	movwf	(?___flmul+1)& (0+255),b
 12390  00C880  0E00               	movlw	0
 12391  00C882  6F70               	movwf	(?___flmul+2)& (0+255),b
 12392  00C884  0E00               	movlw	0
 12393  00C886  6F71               	movwf	(?___flmul+3)& (0+255),b
 12394                           
 12395                           ; BSR set to: 0
 12396  00C888  0012               	return	
 12397  00C88A                     l3253:
 12398                           
 12399                           ; BSR set to: 0
 12400                           
 12401                           ; BSR set to: 0
 12402  00C88A  5174               	movf	(___flmul@a+2)& (0+255),w,b
 12403  00C88C  036E               	mulwf	___flmul@b& (0+255),b
 12404  00C88E  CFF3 F085          	movff	prodl,___flmul@temp
 12405  00C892  CFF4 F086          	movff	prodh,___flmul@temp+1
 12406                           
 12407                           ; BSR set to: 0
 12408  00C896  5185               	movf	___flmul@temp& (0+255),w,b
 12409  00C898  6F7C               	movwf	___flmul@grs& (0+255),b
 12410  00C89A  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
 12411  00C89C  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
 12412  00C89E  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
 12413                           
 12414                           ; BSR set to: 0
 12415  00C8A0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12416  00C8A2  6F81               	movwf	___flmul@prod& (0+255),b
 12417  00C8A4  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 12418  00C8A6  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 12419  00C8A8  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 12420  00C8AA  5173               	movf	(___flmul@a+1)& (0+255),w,b
 12421  00C8AC  036F               	mulwf	(___flmul@b+1)& (0+255),b
 12422  00C8AE  CFF3 F085          	movff	prodl,___flmul@temp
 12423  00C8B2  CFF4 F086          	movff	prodh,___flmul@temp+1
 12424                           
 12425                           ; BSR set to: 0
 12426  00C8B6  5185               	movf	___flmul@temp& (0+255),w,b
 12427  00C8B8  277C               	addwf	___flmul@grs& (0+255),f,b
 12428  00C8BA  0E00               	movlw	0
 12429  00C8BC  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12430  00C8BE  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12431  00C8C0  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12432                           
 12433                           ; BSR set to: 0
 12434  00C8C2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12435  00C8C4  2781               	addwf	___flmul@prod& (0+255),f,b
 12436  00C8C6  0E00               	movlw	0
 12437  00C8C8  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12438  00C8CA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12439  00C8CC  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12440  00C8CE  5172               	movf	___flmul@a& (0+255),w,b
 12441  00C8D0  0370               	mulwf	(___flmul@b+2)& (0+255),b
 12442  00C8D2  CFF3 F085          	movff	prodl,___flmul@temp
 12443  00C8D6  CFF4 F086          	movff	prodh,___flmul@temp+1
 12444                           
 12445                           ; BSR set to: 0
 12446  00C8DA  5185               	movf	___flmul@temp& (0+255),w,b
 12447  00C8DC  277C               	addwf	___flmul@grs& (0+255),f,b
 12448  00C8DE  0E00               	movlw	0
 12449  00C8E0  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12450  00C8E2  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12451  00C8E4  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12452                           
 12453                           ; BSR set to: 0
 12454  00C8E6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12455  00C8E8  2781               	addwf	___flmul@prod& (0+255),f,b
 12456  00C8EA  0E00               	movlw	0
 12457  00C8EC  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12458  00C8EE  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12459  00C8F0  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12460                           
 12461                           ; BSR set to: 0
 12462  00C8F2  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 12463  00C8F6  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 12464  00C8FA  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 12465  00C8FE  6B7C               	clrf	___flmul@grs& (0+255),b
 12466                           
 12467                           ; BSR set to: 0
 12468  00C900  5172               	movf	___flmul@a& (0+255),w,b
 12469  00C902  036F               	mulwf	(___flmul@b+1)& (0+255),b
 12470  00C904  CFF3 F085          	movff	prodl,___flmul@temp
 12471  00C908  CFF4 F086          	movff	prodh,___flmul@temp+1
 12472                           
 12473                           ; BSR set to: 0
 12474  00C90C  5185               	movf	___flmul@temp& (0+255),w,b
 12475  00C90E  277C               	addwf	___flmul@grs& (0+255),f,b
 12476  00C910  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12477  00C912  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12478  00C914  0E00               	movlw	0
 12479  00C916  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12480  00C918  0E00               	movlw	0
 12481  00C91A  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12482                           
 12483                           ; BSR set to: 0
 12484  00C91C  5173               	movf	(___flmul@a+1)& (0+255),w,b
 12485  00C91E  036E               	mulwf	___flmul@b& (0+255),b
 12486  00C920  CFF3 F085          	movff	prodl,___flmul@temp
 12487  00C924  CFF4 F086          	movff	prodh,___flmul@temp+1
 12488                           
 12489                           ; BSR set to: 0
 12490  00C928  5185               	movf	___flmul@temp& (0+255),w,b
 12491  00C92A  277C               	addwf	___flmul@grs& (0+255),f,b
 12492  00C92C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12493  00C92E  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12494  00C930  0E00               	movlw	0
 12495  00C932  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12496  00C934  0E00               	movlw	0
 12497  00C936  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12498                           
 12499                           ; BSR set to: 0
 12500  00C938  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 12501  00C93C  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 12502  00C940  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 12503  00C944  6B7C               	clrf	___flmul@grs& (0+255),b
 12504  00C946  5172               	movf	___flmul@a& (0+255),w,b
 12505  00C948  036E               	mulwf	___flmul@b& (0+255),b
 12506  00C94A  CFF3 F085          	movff	prodl,___flmul@temp
 12507  00C94E  CFF4 F086          	movff	prodh,___flmul@temp+1
 12508                           
 12509                           ; BSR set to: 0
 12510  00C952  5185               	movf	___flmul@temp& (0+255),w,b
 12511  00C954  277C               	addwf	___flmul@grs& (0+255),f,b
 12512  00C956  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12513  00C958  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12514  00C95A  0E00               	movlw	0
 12515  00C95C  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12516  00C95E  0E00               	movlw	0
 12517  00C960  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12518                           
 12519                           ; BSR set to: 0
 12520  00C962  5174               	movf	(___flmul@a+2)& (0+255),w,b
 12521  00C964  036F               	mulwf	(___flmul@b+1)& (0+255),b
 12522  00C966  CFF3 F085          	movff	prodl,___flmul@temp
 12523  00C96A  CFF4 F086          	movff	prodh,___flmul@temp+1
 12524  00C96E  5185               	movf	___flmul@temp& (0+255),w,b
 12525  00C970  2781               	addwf	___flmul@prod& (0+255),f,b
 12526  00C972  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12527  00C974  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12528  00C976  0E00               	movlw	0
 12529  00C978  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12530  00C97A  0E00               	movlw	0
 12531  00C97C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12532                           
 12533                           ; BSR set to: 0
 12534  00C97E  5173               	movf	(___flmul@a+1)& (0+255),w,b
 12535  00C980  0370               	mulwf	(___flmul@b+2)& (0+255),b
 12536  00C982  CFF3 F085          	movff	prodl,___flmul@temp
 12537  00C986  CFF4 F086          	movff	prodh,___flmul@temp+1
 12538                           
 12539                           ; BSR set to: 0
 12540  00C98A  5185               	movf	___flmul@temp& (0+255),w,b
 12541  00C98C  2781               	addwf	___flmul@prod& (0+255),f,b
 12542  00C98E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12543  00C990  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12544  00C992  0E00               	movlw	0
 12545  00C994  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12546  00C996  0E00               	movlw	0
 12547  00C998  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12548  00C99A  5174               	movf	(___flmul@a+2)& (0+255),w,b
 12549  00C99C  0370               	mulwf	(___flmul@b+2)& (0+255),b
 12550  00C99E  CFF3 F085          	movff	prodl,___flmul@temp
 12551  00C9A2  CFF4 F086          	movff	prodh,___flmul@temp+1
 12552                           
 12553                           ; BSR set to: 0
 12554  00C9A6  5185               	movf	___flmul@temp& (0+255),w,b
 12555  00C9A8  6F76               	movwf	??___flmul& (0+255),b
 12556  00C9AA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12557  00C9AC  6F77               	movwf	(??___flmul+1)& (0+255),b
 12558  00C9AE  6B78               	clrf	(??___flmul+2)& (0+255),b
 12559  00C9B0  6B79               	clrf	(??___flmul+3)& (0+255),b
 12560  00C9B2  C078  F079         	movff	??___flmul+2,??___flmul+3
 12561  00C9B6  C077  F078         	movff	??___flmul+1,??___flmul+2
 12562  00C9BA  C076  F077         	movff	??___flmul,??___flmul+1
 12563  00C9BE  6B76               	clrf	??___flmul& (0+255),b
 12564  00C9C0  5176               	movf	??___flmul& (0+255),w,b
 12565  00C9C2  2781               	addwf	___flmul@prod& (0+255),f,b
 12566  00C9C4  5177               	movf	(??___flmul+1)& (0+255),w,b
 12567  00C9C6  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12568  00C9C8  5178               	movf	(??___flmul+2)& (0+255),w,b
 12569  00C9CA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12570  00C9CC  5179               	movf	(??___flmul+3)& (0+255),w,b
 12571  00C9CE  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12572                           
 12573                           ; BSR set to: 0
 12574  00C9D0  C07C  F076         	movff	___flmul@grs,??___flmul
 12575  00C9D4  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
 12576  00C9D8  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
 12577  00C9DC  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
 12578  00C9E0  0E19               	movlw	25
 12579  00C9E2  D005               	goto	u18280
 12580  00C9E4                     u18285:
 12581  00C9E4  90D8               	bcf	status,0,c
 12582  00C9E6  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 12583  00C9E8  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 12584  00C9EA  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 12585  00C9EC  3376               	rrcf	??___flmul& (0+255),f,b
 12586  00C9EE                     u18280:
 12587  00C9EE  2EE8               	decfsz	wreg,f,c
 12588  00C9F0  D7F9               	goto	u18285
 12589  00C9F2  5176               	movf	??___flmul& (0+255),w,b
 12590  00C9F4  2781               	addwf	___flmul@prod& (0+255),f,b
 12591  00C9F6  5177               	movf	(??___flmul+1)& (0+255),w,b
 12592  00C9F8  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12593  00C9FA  5178               	movf	(??___flmul+2)& (0+255),w,b
 12594  00C9FC  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12595  00C9FE  5179               	movf	(??___flmul+3)& (0+255),w,b
 12596  00CA00  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12597                           
 12598                           ; BSR set to: 0
 12599  00CA02  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 12600  00CA06  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 12601  00CA0A  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 12602  00CA0E  6B7C               	clrf	___flmul@grs& (0+255),b
 12603                           
 12604                           ; BSR set to: 0
 12605  00CA10  517B               	movf	___flmul@aexp& (0+255),w,b
 12606  00CA12  C080  F076         	movff	___flmul@bexp,??___flmul
 12607  00CA16  6B77               	clrf	(??___flmul+1)& (0+255),b
 12608  00CA18  2776               	addwf	??___flmul& (0+255),f,b
 12609  00CA1A  0E00               	movlw	0
 12610  00CA1C  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 12611  00CA1E  0E82               	movlw	130
 12612  00CA20  2576               	addwf	??___flmul& (0+255),w,b
 12613  00CA22  6F85               	movwf	___flmul@temp& (0+255),b
 12614  00CA24  0EFF               	movlw	255
 12615  00CA26  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 12616  00CA28  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 12617  00CA2A  D00F               	goto	l3257
 12618  00CA2C                     
 12619                           ; BSR set to: 0
 12620                           
 12621                           ; BSR set to: 0
 12622  00CA2C  90D8               	bcf	status,0,c
 12623  00CA2E  3781               	rlcf	___flmul@prod& (0+255),f,b
 12624  00CA30  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12625  00CA32  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12626  00CA34  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12627                           
 12628                           ; BSR set to: 0
 12629  00CA36  BF7F               	btfsc	(___flmul@grs+3)& (0+255),7,b
 12630                           
 12631                           ; BSR set to: 0
 12632  00CA38  8181               	bsf	___flmul@prod& (0+255),0,b
 12633                           
 12634                           ; BSR set to: 0
 12635  00CA3A  90D8               	bcf	status,0,c
 12636  00CA3C  377C               	rlcf	___flmul@grs& (0+255),f,b
 12637  00CA3E  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12638  00CA40  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12639  00CA42  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12640  00CA44  0785               	decf	___flmul@temp& (0+255),f,b
 12641  00CA46  A0D8               	btfss	status,0,c
 12642  00CA48  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 12643  00CA4A                     l3257:
 12644                           
 12645                           ; BSR set to: 0
 12646                           
 12647                           ; BSR set to: 0
 12648  00CA4A  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 12649  00CA4C  D7EF               	goto	l3258
 12650                           
 12651                           ; BSR set to: 0
 12652                           
 12653                           ; BSR set to: 0
 12654  00CA4E  0E00               	movlw	0
 12655  00CA50  6F7B               	movwf	___flmul@aexp& (0+255),b
 12656                           
 12657                           ; BSR set to: 0
 12658  00CA52  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 12659  00CA54  D016               	goto	l3264
 12660                           
 12661                           ; BSR set to: 0
 12662  00CA56  0EFF               	movlw	255
 12663  00CA58  157C               	andwf	___flmul@grs& (0+255),w,b
 12664  00CA5A  6F76               	movwf	??___flmul& (0+255),b
 12665  00CA5C  0EFF               	movlw	255
 12666  00CA5E  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
 12667  00CA60  6F77               	movwf	(??___flmul+1)& (0+255),b
 12668  00CA62  0EFF               	movlw	255
 12669  00CA64  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
 12670  00CA66  6F78               	movwf	(??___flmul+2)& (0+255),b
 12671  00CA68  0E7F               	movlw	127
 12672  00CA6A  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
 12673  00CA6C  6F79               	movwf	(??___flmul+3)& (0+255),b
 12674  00CA6E  5176               	movf	??___flmul& (0+255),w,b
 12675  00CA70  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 12676  00CA72  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 12677  00CA74  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 12678  00CA76  A4D8               	btfss	status,2,c
 12679  00CA78  D002               	goto	u18330
 12680                           
 12681                           ; BSR set to: 0
 12682                           
 12683                           ; BSR set to: 0
 12684  00CA7A  A181               	btfss	___flmul@prod& (0+255),0,b
 12685  00CA7C  D002               	goto	l3264
 12686  00CA7E                     u18330:
 12687                           
 12688                           ; BSR set to: 0
 12689  00CA7E  0E01               	movlw	1
 12690  00CA80  6F7B               	movwf	___flmul@aexp& (0+255),b
 12691  00CA82                     l3264:
 12692                           
 12693                           ; BSR set to: 0
 12694                           
 12695                           ; BSR set to: 0
 12696                           
 12697                           ; BSR set to: 0
 12698  00CA82  517B               	movf	___flmul@aexp& (0+255),w,b
 12699  00CA84  B4D8               	btfsc	status,2,c
 12700  00CA86  D01F               	goto	l3266
 12701                           
 12702                           ; BSR set to: 0
 12703  00CA88  0E01               	movlw	1
 12704  00CA8A  2781               	addwf	___flmul@prod& (0+255),f,b
 12705  00CA8C  0E00               	movlw	0
 12706  00CA8E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12707  00CA90  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12708  00CA92  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12709                           
 12710                           ; BSR set to: 0
 12711  00CA94  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 12712  00CA96  D017               	goto	l3266
 12713                           
 12714                           ; BSR set to: 0
 12715  00CA98  C081  F076         	movff	___flmul@prod,??___flmul
 12716  00CA9C  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 12717  00CAA0  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 12718  00CAA4  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 12719  00CAA8  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 12720  00CAAA  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 12721  00CAAC  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 12722  00CAAE  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 12723  00CAB0  3376               	rrcf	??___flmul& (0+255),f,b
 12724  00CAB2  C076  F081         	movff	??___flmul,___flmul@prod
 12725  00CAB6  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 12726  00CABA  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 12727  00CABE  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 12728                           
 12729                           ; BSR set to: 0
 12730  00CAC2  4B85               	infsnz	___flmul@temp& (0+255),f,b
 12731  00CAC4  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 12732  00CAC6                     l3266:
 12733                           
 12734                           ; BSR set to: 0
 12735                           
 12736                           ; BSR set to: 0
 12737                           
 12738                           ; BSR set to: 0
 12739  00CAC6  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12740  00CAC8  D00D               	goto	l3267
 12741  00CACA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12742  00CACC  E103               	bnz	u18360
 12743  00CACE  2985               	incf	___flmul@temp& (0+255),w,b
 12744  00CAD0  A0D8               	btfss	status,0,c
 12745  00CAD2  D008               	goto	l3267
 12746  00CAD4                     u18360:
 12747                           
 12748                           ; BSR set to: 0
 12749  00CAD4  0E00               	movlw	0
 12750  00CAD6  6F81               	movwf	___flmul@prod& (0+255),b
 12751  00CAD8  0E00               	movlw	0
 12752  00CADA  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 12753  00CADC  0E80               	movlw	128
 12754  00CADE  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 12755  00CAE0  0E7F               	movlw	127
 12756  00CAE2  D020               	goto	L18
 12757  00CAE4                     l3267:
 12758                           
 12759                           ; BSR set to: 0
 12760                           
 12761                           ; BSR set to: 0
 12762  00CAE4  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12763  00CAE6  D005               	goto	u18370
 12764  00CAE8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12765  00CAEA  E10E               	bnz	l3269
 12766  00CAEC  0585               	decf	___flmul@temp& (0+255),w,b
 12767  00CAEE  B0D8               	btfsc	status,0,c
 12768  00CAF0  D00B               	goto	l3269
 12769  00CAF2                     u18370:
 12770                           
 12771                           ; BSR set to: 0
 12772  00CAF2  0E00               	movlw	0
 12773  00CAF4  6F81               	movwf	___flmul@prod& (0+255),b
 12774  00CAF6  0E00               	movlw	0
 12775  00CAF8  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 12776  00CAFA  0E00               	movlw	0
 12777  00CAFC  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 12778  00CAFE  0E00               	movlw	0
 12779  00CB00  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 12780  00CB02  0E00               	movlw	0
 12781  00CB04  6F7A               	movwf	___flmul@sign& (0+255),b
 12782  00CB06  D00F               	goto	l3270
 12783  00CB08                     l3269:
 12784                           
 12785                           ; BSR set to: 0
 12786  00CB08  C085  F080         	movff	___flmul@temp,___flmul@bexp
 12787                           
 12788                           ; BSR set to: 0
 12789  00CB0C  0EFF               	movlw	255
 12790  00CB0E  1781               	andwf	___flmul@prod& (0+255),f,b
 12791  00CB10  0EFF               	movlw	255
 12792  00CB12  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 12793  00CB14  0E7F               	movlw	127
 12794  00CB16  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 12795  00CB18  0E00               	movlw	0
 12796  00CB1A  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 12797                           
 12798                           ; BSR set to: 0
 12799  00CB1C  B180               	btfsc	___flmul@bexp& (0+255),0,b
 12800                           
 12801                           ; BSR set to: 0
 12802  00CB1E  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 12803                           
 12804                           ; BSR set to: 0
 12805                           
 12806                           ; BSR set to: 0
 12807  00CB20  90D8               	bcf	status,0,c
 12808  00CB22  3180               	rrcf	___flmul@bexp& (0+255),w,b
 12809  00CB24                     L18:
 12810  00CB24  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 12811  00CB26                     l3270:
 12812                           
 12813                           ; BSR set to: 0
 12814                           
 12815                           ; BSR set to: 0
 12816                           
 12817                           ; BSR set to: 0
 12818  00CB26  517A               	movf	___flmul@sign& (0+255),w,b
 12819  00CB28  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 12820                           
 12821                           ; BSR set to: 0
 12822  00CB2A  C081  F06E         	movff	___flmul@prod,?___flmul
 12823  00CB2E  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 12824  00CB32  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 12825  00CB36  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 12826  00CB3A  0012               	return	
 12827  00CB3C                     __end_of___flmul:
 12828                           	opt stack 0
 12829                           tblptru	equ	0xFF8
 12830                           tblptrh	equ	0xFF7
 12831                           tblptrl	equ	0xFF6
 12832                           tablat	equ	0xFF5
 12833                           prodh	equ	0xFF4
 12834                           prodl	equ	0xFF3
 12835                           intcon	equ	0xFF2
 12836                           postinc0	equ	0xFEE
 12837                           wreg	equ	0xFE8
 12838                           postdec1	equ	0xFE5
 12839                           plusw1	equ	0xFE3
 12840                           fsr1h	equ	0xFE2
 12841                           fsr1l	equ	0xFE1
 12842                           indf2	equ	0xFDF
 12843                           postinc2	equ	0xFDE
 12844                           postdec2	equ	0xFDD
 12845                           plusw2	equ	0xFDB
 12846                           fsr2h	equ	0xFDA
 12847                           fsr2l	equ	0xFD9
 12848                           status	equ	0xFD8
 12849                           
 12850 ;; *************** function _motor_change_speed *****************
 12851 ;; Defined at:
 12852 ;;		line 426 in file "motor.c"
 12853 ;; Parameters:    Size  Location     Type
 12854 ;;  new_speed       2    0[BANK0 ] unsigned int 
 12855 ;; Auto vars:     Size  Location     Type
 12856 ;;		None
 12857 ;; Return value:  Size  Location     Type
 12858 ;;                  1    wreg      void 
 12859 ;; Registers used:
 12860 ;;		None
 12861 ;; Tracked objects:
 12862 ;;		On entry : 0/0
 12863 ;;		On exit  : 0/0
 12864 ;;		Unchanged: 0/0
 12865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12866 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12869 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12870 ;;Total ram usage:        2 bytes
 12871 ;; Hardware stack levels used:    1
 12872 ;; Hardware stack levels required when called:   10
 12873 ;; This function calls:
 12874 ;;		Nothing
 12875 ;; This function is called by:
 12876 ;;		_encoder_statemachine
 12877 ;; This function uses a non-reentrant model
 12878 ;;
 12879                           
 12880                           	psect	text31
 12881  01234A                     __ptext31:
 12882                           	opt stack 0
 12883  01234A                     _motor_change_speed:
 12884                           	opt stack 19
 12885                           
 12886                           ;motor.c: 428: motor_maximum_speed = new_speed;
 12887                           
 12888                           ; BSR set to: 0
 12889                           ;incstack = 0
 12890  01234A  C060  F16F         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 12891  01234E  C061  F170         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 12892  012352  0012               	return		;funcret
 12893  012354                     __end_of_motor_change_speed:
 12894                           	opt stack 0
 12895                           tblptru	equ	0xFF8
 12896                           tblptrh	equ	0xFF7
 12897                           tblptrl	equ	0xFF6
 12898                           tablat	equ	0xFF5
 12899                           prodh	equ	0xFF4
 12900                           prodl	equ	0xFF3
 12901                           intcon	equ	0xFF2
 12902                           postinc0	equ	0xFEE
 12903                           wreg	equ	0xFE8
 12904                           postdec1	equ	0xFE5
 12905                           plusw1	equ	0xFE3
 12906                           fsr1h	equ	0xFE2
 12907                           fsr1l	equ	0xFE1
 12908                           indf2	equ	0xFDF
 12909                           postinc2	equ	0xFDE
 12910                           postdec2	equ	0xFDD
 12911                           plusw2	equ	0xFDB
 12912                           fsr2h	equ	0xFDA
 12913                           fsr2l	equ	0xFD9
 12914                           status	equ	0xFD8
 12915                           
 12916 ;; *************** function _encoder_next_setup_stepsize *****************
 12917 ;; Defined at:
 12918 ;;		line 617 in file "encoder.c"
 12919 ;; Parameters:    Size  Location     Type
 12920 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 12921 ;; Auto vars:     Size  Location     Type
 12922 ;;		None
 12923 ;; Return value:  Size  Location     Type
 12924 ;;                  2    0[BANK0 ] unsigned int 
 12925 ;; Registers used:
 12926 ;;		wreg, status,2, status,0
 12927 ;; Tracked objects:
 12928 ;;		On entry : 0/0
 12929 ;;		On exit  : 0/0
 12930 ;;		Unchanged: 0/0
 12931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12934 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12935 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12936 ;;Total ram usage:        4 bytes
 12937 ;; Hardware stack levels used:    1
 12938 ;; Hardware stack levels required when called:   10
 12939 ;; This function calls:
 12940 ;;		Nothing
 12941 ;; This function is called by:
 12942 ;;		_encoder_statemachine
 12943 ;; This function uses a non-reentrant model
 12944 ;;
 12945                           
 12946                           	psect	text32
 12947  0110B0                     __ptext32:
 12948                           	opt stack 0
 12949  0110B0                     _encoder_next_setup_stepsize:
 12950                           	opt stack 19
 12951                           
 12952                           ;encoder.c: 619: switch(old_stepsize)
 12953                           
 12954                           ;incstack = 0
 12955  0110B0  D01A               	goto	l2621
 12956  0110B2                     
 12957                           ;encoder.c: 622: return 100;
 12958  0110B2  0E00               	movlw	0
 12959  0110B4  0100               	movlb	0	; () banked
 12960  0110B6  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 12961  0110B8  0E64               	movlw	100
 12962  0110BA  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 12963                           
 12964                           ; BSR set to: 0
 12965  0110BC  0012               	return	
 12966  0110BE                     
 12967                           ; BSR set to: 0
 12968                           ;encoder.c: 624: return 10;
 12969                           
 12970                           ; BSR set to: 0
 12971  0110BE  0E00               	movlw	0
 12972  0110C0  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 12973  0110C2  0E0A               	movlw	10
 12974  0110C4  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 12975                           
 12976                           ; BSR set to: 0
 12977  0110C6  0012               	return	
 12978  0110C8                     
 12979                           ; BSR set to: 0
 12980                           ;encoder.c: 626: return 1;
 12981                           
 12982                           ; BSR set to: 0
 12983  0110C8  0E00               	movlw	0
 12984  0110CA  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 12985  0110CC  0E01               	movlw	1
 12986  0110CE  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 12987                           
 12988                           ; BSR set to: 0
 12989  0110D0  0012               	return	
 12990  0110D2                     
 12991                           ; BSR set to: 0
 12992                           ;encoder.c: 628: return 1000;
 12993                           
 12994                           ; BSR set to: 0
 12995  0110D2  0E03               	movlw	3
 12996  0110D4  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 12997  0110D6  0EE8               	movlw	232
 12998  0110D8  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 12999                           
 13000                           ; BSR set to: 0
 13001  0110DA  0012               	return	
 13002  0110DC                     
 13003                           ; BSR set to: 0
 13004                           ;encoder.c: 630: return 100;
 13005                           
 13006                           ; BSR set to: 0
 13007  0110DC  0E00               	movlw	0
 13008  0110DE  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 13009  0110E0  0E64               	movlw	100
 13010  0110E2  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;encoder.c: 631: }
 13014                           
 13015                           ; BSR set to: 0
 13016  0110E4  0012               	return	
 13017  0110E6                     l2621:
 13018                           
 13019                           ; BSR set to: 0
 13020  0110E6  C060  F062         	movff	encoder_next_setup_stepsize@old_stepsize,??_encoder_next_setup_stepsize
 13021  0110EA  C061  F063         	movff	encoder_next_setup_stepsize@old_stepsize+1,??_encoder_next_setup_stepsize+1
 13022                           
 13023                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 13024                           ; Switch size 1, requested type "space"
 13025                           ; Number of cases is 2, Range of values is 0 to 3
 13026                           ; switch strategies available:
 13027                           ; Name         Instructions Cycles
 13028                           ; simple_byte            7     4 (average)
 13029                           ;	Chosen strategy is simple_byte
 13030  0110EE  0100               	movlb	0	; () banked
 13031  0110F0  5163               	movf	(??_encoder_next_setup_stepsize+1)& (0+255),w,b
 13032  0110F2  0A00               	xorlw	0	; case 0
 13033  0110F4  B4D8               	btfsc	status,2,c
 13034  0110F6  D004               	goto	l22232
 13035  0110F8  0A03               	xorlw	3	; case 3
 13036  0110FA  B4D8               	btfsc	status,2,c
 13037  0110FC  D00C               	goto	l22234
 13038  0110FE  D7EE               	goto	l2627
 13039  011100                     l22232:
 13040                           
 13041                           ; BSR set to: 0
 13042                           ; Switch size 1, requested type "space"
 13043                           ; Number of cases is 3, Range of values is 1 to 100
 13044                           ; switch strategies available:
 13045                           ; Name         Instructions Cycles
 13046                           ; simple_byte           10     6 (average)
 13047                           ;	Chosen strategy is simple_byte
 13048  011100  5162               	movf	??_encoder_next_setup_stepsize& (0+255),w,b
 13049  011102  0A01               	xorlw	1	; case 1
 13050  011104  B4D8               	btfsc	status,2,c
 13051  011106  D7E5               	goto	l2626
 13052  011108  0A0B               	xorlw	11	; case 10
 13053  01110A  B4D8               	btfsc	status,2,c
 13054  01110C  D7DD               	goto	l2625
 13055  01110E  0A6E               	xorlw	110	; case 100
 13056  011110  B4D8               	btfsc	status,2,c
 13057  011112  D7D5               	goto	l2624
 13058  011114  D7E3               	goto	l2627
 13059  011116                     l22234:
 13060                           
 13061                           ; BSR set to: 0
 13062                           ; Switch size 1, requested type "space"
 13063                           ; Number of cases is 1, Range of values is 232 to 232
 13064                           ; switch strategies available:
 13065                           ; Name         Instructions Cycles
 13066                           ; simple_byte            4     3 (average)
 13067                           ;	Chosen strategy is simple_byte
 13068  011116  5162               	movf	??_encoder_next_setup_stepsize& (0+255),w,b
 13069  011118  0AE8               	xorlw	232	; case 232
 13070  01111A  B4D8               	btfsc	status,2,c
 13071  01111C  D7CA               	goto	l2622
 13072  01111E  D7DE               	goto	l2627
 13073  011120                     __end_of_encoder_next_setup_stepsize:
 13074                           	opt stack 0
 13075                           tblptru	equ	0xFF8
 13076                           tblptrh	equ	0xFF7
 13077                           tblptrl	equ	0xFF6
 13078                           tablat	equ	0xFF5
 13079                           prodh	equ	0xFF4
 13080                           prodl	equ	0xFF3
 13081                           intcon	equ	0xFF2
 13082                           postinc0	equ	0xFEE
 13083                           wreg	equ	0xFE8
 13084                           postdec1	equ	0xFE5
 13085                           plusw1	equ	0xFE3
 13086                           fsr1h	equ	0xFE2
 13087                           fsr1l	equ	0xFE1
 13088                           indf2	equ	0xFDF
 13089                           postinc2	equ	0xFDE
 13090                           postdec2	equ	0xFDD
 13091                           plusw2	equ	0xFDB
 13092                           fsr2h	equ	0xFDA
 13093                           fsr2l	equ	0xFD9
 13094                           status	equ	0xFD8
 13095                           
 13096 ;; *************** function _encoder_next_divide_step_size *****************
 13097 ;; Defined at:
 13098 ;;		line 634 in file "encoder.c"
 13099 ;; Parameters:    Size  Location     Type
 13100 ;;  old_stepsize    1    wreg     unsigned char 
 13101 ;; Auto vars:     Size  Location     Type
 13102 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 13103 ;; Return value:  Size  Location     Type
 13104 ;;                  1    wreg      unsigned char 
 13105 ;; Registers used:
 13106 ;;		wreg, status,2, status,0
 13107 ;; Tracked objects:
 13108 ;;		On entry : 0/0
 13109 ;;		On exit  : 0/0
 13110 ;;		Unchanged: 0/0
 13111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13113 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13115 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13116 ;;Total ram usage:        1 bytes
 13117 ;; Hardware stack levels used:    1
 13118 ;; Hardware stack levels required when called:   10
 13119 ;; This function calls:
 13120 ;;		Nothing
 13121 ;; This function is called by:
 13122 ;;		_encoder_statemachine
 13123 ;; This function uses a non-reentrant model
 13124 ;;
 13125                           
 13126                           	psect	text33
 13127  012026                     __ptext33:
 13128                           	opt stack 0
 13129  012026                     _encoder_next_divide_step_size:
 13130                           	opt stack 19
 13131                           
 13132                           ; BSR set to: 0
 13133                           ;incstack = 0
 13134                           ;encoder_next_divide_step_size@old_stepsize stored from wreg
 13135  012026  0100               	movlb	0	; () banked
 13136  012028  6F60               	movwf	encoder_next_divide_step_size@old_stepsize& (0+255),b
 13137                           
 13138                           ;encoder.c: 636: switch(old_stepsize)
 13139  01202A  D008               	goto	l2631
 13140  01202C                     
 13141                           ;encoder.c: 639: return 10;
 13142  01202C  0E0A               	movlw	10
 13143  01202E  0012               	return	
 13144  012030                     
 13145                           ;encoder.c: 641: return 1;
 13146  012030  0E01               	movlw	1
 13147  012032  0012               	return	
 13148  012034                     
 13149                           ;encoder.c: 643: return 100;
 13150  012034  0E64               	movlw	100
 13151  012036  0012               	return	
 13152  012038                     
 13153                           ;encoder.c: 645: return 1;
 13154  012038  0E01               	movlw	1
 13155                           
 13156                           ;encoder.c: 646: }
 13157  01203A  0012               	return	
 13158  01203C                     l2631:
 13159  01203C  0100               	movlb	0	; () banked
 13160  01203E  5160               	movf	encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 13161                           
 13162                           ; Switch size 1, requested type "space"
 13163                           ; Number of cases is 3, Range of values is 1 to 100
 13164                           ; switch strategies available:
 13165                           ; Name         Instructions Cycles
 13166                           ; simple_byte           10     6 (average)
 13167                           ;	Chosen strategy is simple_byte
 13168  012040  0A01               	xorlw	1	; case 1
 13169  012042  B4D8               	btfsc	status,2,c
 13170  012044  D7F7               	goto	l2635
 13171  012046  0A0B               	xorlw	11	; case 10
 13172  012048  B4D8               	btfsc	status,2,c
 13173  01204A  D7F2               	goto	l2634
 13174  01204C  0A6E               	xorlw	110	; case 100
 13175  01204E  B4D8               	btfsc	status,2,c
 13176  012050  D7ED               	goto	l2632
 13177  012052  D7F2               	goto	l2636
 13178  012054                     __end_of_encoder_next_divide_step_size:
 13179                           	opt stack 0
 13180                           tblptru	equ	0xFF8
 13181                           tblptrh	equ	0xFF7
 13182                           tblptrl	equ	0xFF6
 13183                           tablat	equ	0xFF5
 13184                           prodh	equ	0xFF4
 13185                           prodl	equ	0xFF3
 13186                           intcon	equ	0xFF2
 13187                           postinc0	equ	0xFEE
 13188                           wreg	equ	0xFE8
 13189                           postdec1	equ	0xFE5
 13190                           plusw1	equ	0xFE3
 13191                           fsr1h	equ	0xFE2
 13192                           fsr1l	equ	0xFE1
 13193                           indf2	equ	0xFDF
 13194                           postinc2	equ	0xFDE
 13195                           postdec2	equ	0xFDD
 13196                           plusw2	equ	0xFDB
 13197                           fsr2h	equ	0xFDA
 13198                           fsr2l	equ	0xFD9
 13199                           status	equ	0xFD8
 13200                           
 13201 ;; *************** function _encoder_next_arc_step_size *****************
 13202 ;; Defined at:
 13203 ;;		line 649 in file "encoder.c"
 13204 ;; Parameters:    Size  Location     Type
 13205 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 13206 ;; Auto vars:     Size  Location     Type
 13207 ;;		None
 13208 ;; Return value:  Size  Location     Type
 13209 ;;                  2    0[BANK0 ] unsigned int 
 13210 ;; Registers used:
 13211 ;;		wreg, status,2, status,0
 13212 ;; Tracked objects:
 13213 ;;		On entry : 0/0
 13214 ;;		On exit  : 0/0
 13215 ;;		Unchanged: 0/0
 13216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13217 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13219 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13220 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13221 ;;Total ram usage:        4 bytes
 13222 ;; Hardware stack levels used:    1
 13223 ;; Hardware stack levels required when called:   10
 13224 ;; This function calls:
 13225 ;;		Nothing
 13226 ;; This function is called by:
 13227 ;;		_encoder_statemachine
 13228 ;; This function uses a non-reentrant model
 13229 ;;
 13230                           
 13231                           	psect	text34
 13232  011120                     __ptext34:
 13233                           	opt stack 0
 13234  011120                     _encoder_next_arc_step_size:
 13235                           	opt stack 19
 13236                           
 13237                           ;encoder.c: 651: switch(old_stepsize)
 13238                           
 13239                           ;incstack = 0
 13240  011120  D01A               	goto	l2640
 13241  011122                     
 13242                           ;encoder.c: 654: return 100;
 13243  011122  0E00               	movlw	0
 13244  011124  0100               	movlb	0	; () banked
 13245  011126  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 13246  011128  0E64               	movlw	100
 13247  01112A  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 13248                           
 13249                           ; BSR set to: 0
 13250  01112C  0012               	return	
 13251  01112E                     
 13252                           ; BSR set to: 0
 13253                           ;encoder.c: 656: return 10;
 13254                           
 13255                           ; BSR set to: 0
 13256  01112E  0E00               	movlw	0
 13257  011130  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 13258  011132  0E0A               	movlw	10
 13259  011134  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 13260                           
 13261                           ; BSR set to: 0
 13262  011136  0012               	return	
 13263  011138                     
 13264                           ; BSR set to: 0
 13265                           ;encoder.c: 658: return 1;
 13266                           
 13267                           ; BSR set to: 0
 13268  011138  0E00               	movlw	0
 13269  01113A  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 13270  01113C  0E01               	movlw	1
 13271  01113E  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 13272                           
 13273                           ; BSR set to: 0
 13274  011140  0012               	return	
 13275  011142                     
 13276                           ; BSR set to: 0
 13277                           ;encoder.c: 660: return 1000;
 13278                           
 13279                           ; BSR set to: 0
 13280  011142  0E03               	movlw	3
 13281  011144  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 13282  011146  0EE8               	movlw	232
 13283  011148  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 13284                           
 13285                           ; BSR set to: 0
 13286  01114A  0012               	return	
 13287  01114C                     
 13288                           ; BSR set to: 0
 13289                           ;encoder.c: 662: return 100;
 13290                           
 13291                           ; BSR set to: 0
 13292  01114C  0E00               	movlw	0
 13293  01114E  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 13294  011150  0E64               	movlw	100
 13295  011152  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 13296                           
 13297                           ; BSR set to: 0
 13298                           ;encoder.c: 663: }
 13299                           
 13300                           ; BSR set to: 0
 13301  011154  0012               	return	
 13302  011156                     l2640:
 13303                           
 13304                           ; BSR set to: 0
 13305  011156  C060  F062         	movff	encoder_next_arc_step_size@old_stepsize,??_encoder_next_arc_step_size
 13306  01115A  C061  F063         	movff	encoder_next_arc_step_size@old_stepsize+1,??_encoder_next_arc_step_size+1
 13307                           
 13308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 13309                           ; Switch size 1, requested type "space"
 13310                           ; Number of cases is 2, Range of values is 0 to 3
 13311                           ; switch strategies available:
 13312                           ; Name         Instructions Cycles
 13313                           ; simple_byte            7     4 (average)
 13314                           ;	Chosen strategy is simple_byte
 13315  01115E  0100               	movlb	0	; () banked
 13316  011160  5163               	movf	(??_encoder_next_arc_step_size+1)& (0+255),w,b
 13317  011162  0A00               	xorlw	0	; case 0
 13318  011164  B4D8               	btfsc	status,2,c
 13319  011166  D004               	goto	l22236
 13320  011168  0A03               	xorlw	3	; case 3
 13321  01116A  B4D8               	btfsc	status,2,c
 13322  01116C  D00C               	goto	l22238
 13323  01116E  D7EE               	goto	l2646
 13324  011170                     l22236:
 13325                           
 13326                           ; BSR set to: 0
 13327                           ; Switch size 1, requested type "space"
 13328                           ; Number of cases is 3, Range of values is 1 to 100
 13329                           ; switch strategies available:
 13330                           ; Name         Instructions Cycles
 13331                           ; simple_byte           10     6 (average)
 13332                           ;	Chosen strategy is simple_byte
 13333  011170  5162               	movf	??_encoder_next_arc_step_size& (0+255),w,b
 13334  011172  0A01               	xorlw	1	; case 1
 13335  011174  B4D8               	btfsc	status,2,c
 13336  011176  D7E5               	goto	l2645
 13337  011178  0A0B               	xorlw	11	; case 10
 13338  01117A  B4D8               	btfsc	status,2,c
 13339  01117C  D7DD               	goto	l2644
 13340  01117E  0A6E               	xorlw	110	; case 100
 13341  011180  B4D8               	btfsc	status,2,c
 13342  011182  D7D5               	goto	l2643
 13343  011184  D7E3               	goto	l2646
 13344  011186                     l22238:
 13345                           
 13346                           ; BSR set to: 0
 13347                           ; Switch size 1, requested type "space"
 13348                           ; Number of cases is 1, Range of values is 232 to 232
 13349                           ; switch strategies available:
 13350                           ; Name         Instructions Cycles
 13351                           ; simple_byte            4     3 (average)
 13352                           ;	Chosen strategy is simple_byte
 13353  011186  5162               	movf	??_encoder_next_arc_step_size& (0+255),w,b
 13354  011188  0AE8               	xorlw	232	; case 232
 13355  01118A  B4D8               	btfsc	status,2,c
 13356  01118C  D7CA               	goto	l2641
 13357  01118E  D7DE               	goto	l2646
 13358  011190                     __end_of_encoder_next_arc_step_size:
 13359                           	opt stack 0
 13360                           tblptru	equ	0xFF8
 13361                           tblptrh	equ	0xFF7
 13362                           tblptrl	equ	0xFF6
 13363                           tablat	equ	0xFF5
 13364                           prodh	equ	0xFF4
 13365                           prodl	equ	0xFF3
 13366                           intcon	equ	0xFF2
 13367                           postinc0	equ	0xFEE
 13368                           wreg	equ	0xFE8
 13369                           postdec1	equ	0xFE5
 13370                           plusw1	equ	0xFE3
 13371                           fsr1h	equ	0xFE2
 13372                           fsr1l	equ	0xFE1
 13373                           indf2	equ	0xFDF
 13374                           postinc2	equ	0xFDE
 13375                           postdec2	equ	0xFDD
 13376                           plusw2	equ	0xFDB
 13377                           fsr2h	equ	0xFDA
 13378                           fsr2l	equ	0xFD9
 13379                           status	equ	0xFD8
 13380                           
 13381 ;; *************** function _display_prepare *****************
 13382 ;; Defined at:
 13383 ;;		line 230 in file "display.c"
 13384 ;; Parameters:    Size  Location     Type
 13385 ;;		None
 13386 ;; Auto vars:     Size  Location     Type
 13387 ;;  temp           10   94[BANK0 ] unsigned char [10]
 13388 ;;  cntr            1  105[BANK0 ] unsigned char 
 13389 ;;  space           1  104[BANK0 ] unsigned char 
 13390 ;; Return value:  Size  Location     Type
 13391 ;;                  1    wreg      void 
 13392 ;; Registers used:
 13393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13394 ;; Tracked objects:
 13395 ;;		On entry : 0/0
 13396 ;;		On exit  : 0/0
 13397 ;;		Unchanged: 0/0
 13398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13400 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13401 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13402 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13403 ;;Total ram usage:       14 bytes
 13404 ;; Hardware stack levels used:    1
 13405 ;; Hardware stack levels required when called:   15
 13406 ;; This function calls:
 13407 ;;		__display_clear
 13408 ;;		__display_itoa
 13409 ;;		__display_itoa_long
 13410 ;;		__display_padded_itoa
 13411 ;;		__display_signed_itoa
 13412 ;;		_memcpy
 13413 ;;		_motor_speed_from_index
 13414 ;;		_strlen
 13415 ;; This function is called by:
 13416 ;;		_main
 13417 ;; This function uses a non-reentrant model
 13418 ;;
 13419                           
 13420                           	psect	text35
 13421  00B216                     __ptext35:
 13422                           	opt stack 0
 13423  00B216                     _display_prepare:
 13424                           	opt stack 15
 13425                           
 13426                           ;display.c: 232: uint8_t cntr;;display.c: 233: uint8_t space;;display.c: 234: char temp[
      +                          10];;display.c: 236: switch(os.displayState & 0xF0)
 13427                           
 13428                           ; BSR set to: 0
 13429                           ;incstack = 0
 13430  00B216  EFF4  F05E         	goto	l1322
 13431  00B21A                     
 13432                           ;display.c: 240: memcpy(display_content, dc_main, sizeof display_content);
 13433  00B21A  0EAD               	movlw	low _display_content
 13434  00B21C  0100               	movlb	0	; () banked
 13435  00B21E  6F60               	movwf	memcpy@d1& (0+255),b
 13436  00B220  0E01               	movlw	high _display_content
 13437  00B222  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13438  00B224  0E6E               	movlw	low _dc_main
 13439  00B226  6F62               	movwf	memcpy@s1& (0+255),b
 13440  00B228  0EA0               	movlw	high _dc_main
 13441  00B22A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13442  00B22C  0E00               	movlw	0
 13443  00B22E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13444  00B230  0E50               	movlw	80
 13445  00B232  6F64               	movwf	memcpy@n& (0+255),b
 13446  00B234  EC63  F08A         	call	_memcpy	;wreg free
 13447                           
 13448                           ;display.c: 241: switch(os.displayState)
 13449  00B238  D00F               	goto	l1324
 13450  00B23A                     
 13451                           ;display.c: 244: display_content[1][0] = '>';
 13452  00B23A  0E3E               	movlw	62
 13453  00B23C  0101               	movlb	1	; () banked
 13454  00B23E  6FC1               	movwf	(_display_content+20)& (0+255),b
 13455                           
 13456                           ;display.c: 245: break;
 13457  00B240  EF21  F05F         	goto	l1331
 13458  00B244                     
 13459                           ;display.c: 247: display_content[1][9] = '>';
 13460                           
 13461                           ; BSR set to: 1
 13462  00B244  0E3E               	movlw	62
 13463  00B246  0101               	movlb	1	; () banked
 13464  00B248  6FCA               	movwf	(_display_content+29)& (0+255),b
 13465                           
 13466                           ;display.c: 248: break;
 13467  00B24A  EF21  F05F         	goto	l1331
 13468  00B24E                     
 13469                           ;display.c: 253: display_content[2][9] = '>';
 13470                           
 13471                           ; BSR set to: 1
 13472  00B24E  0E3E               	movlw	62
 13473  00B250  0101               	movlb	1	; () banked
 13474  00B252  6FDE               	movwf	(_display_content+49)& (0+255),b
 13475                           
 13476                           ;display.c: 254: break;
 13477  00B254  EF21  F05F         	goto	l1331
 13478  00B258                     l1324:
 13479                           
 13480                           ; BSR set to: 1
 13481  00B258  0100               	movlb	0	; () banked
 13482  00B25A  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
 13483                           
 13484                           ; Switch size 1, requested type "space"
 13485                           ; Number of cases is 5, Range of values is 1 to 5
 13486                           ; switch strategies available:
 13487                           ; Name         Instructions Cycles
 13488                           ; simple_byte           16     9 (average)
 13489                           ;	Chosen strategy is simple_byte
 13490  00B25C  0A01               	xorlw	1	; case 1
 13491  00B25E  B4D8               	btfsc	status,2,c
 13492  00B260  D7EC               	goto	l1325
 13493  00B262  0A03               	xorlw	3	; case 2
 13494  00B264  B4D8               	btfsc	status,2,c
 13495  00B266  D7EE               	goto	l1327
 13496  00B268  0A01               	xorlw	1	; case 3
 13497  00B26A  B4D8               	btfsc	status,2,c
 13498  00B26C  D064               	goto	l1344
 13499  00B26E  0A07               	xorlw	7	; case 4
 13500  00B270  B4D8               	btfsc	status,2,c
 13501  00B272  D7ED               	goto	l1329
 13502  00B274  0A01               	xorlw	1	; case 5
 13503  00B276  D06F               	goto	L74
 13504  00B278                     
 13505                           ; BSR set to: 0
 13506                           ;display.c: 262: memcpy(display_content, dc_setup1, sizeof display_content);
 13507                           
 13508                           ; BSR set to: 0
 13509  00B278  0EAD               	movlw	low _display_content
 13510  00B27A  6F60               	movwf	memcpy@d1& (0+255),b
 13511  00B27C  0E01               	movlw	high _display_content
 13512  00B27E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13513  00B280  0E1E               	movlw	low _dc_setup1
 13514  00B282  6F62               	movwf	memcpy@s1& (0+255),b
 13515  00B284  0EA0               	movlw	high _dc_setup1
 13516  00B286  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13517  00B288  0E00               	movlw	0
 13518  00B28A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13519  00B28C  0E50               	movlw	80
 13520  00B28E  6F64               	movwf	memcpy@n& (0+255),b
 13521  00B290  EC63  F08A         	call	_memcpy	;wreg free
 13522                           
 13523                           ;display.c: 263: _display_itoa(os.setup_step_size, 2, temp);
 13524  00B294  C0DA  F095         	movff	_os+16,__display_itoa@value	;volatile
 13525  00B298  C0DB  F096         	movff	_os+17,__display_itoa@value+1	;volatile
 13526  00B29C  0E02               	movlw	2
 13527  00B29E  0100               	movlb	0	; () banked
 13528  00B2A0  6F97               	movwf	__display_itoa@decimals& (0+255),b
 13529  00B2A2  0EBE               	movlw	low display_prepare@temp
 13530  00B2A4  6F98               	movwf	__display_itoa@text& (0+255),b
 13531  00B2A6  0E00               	movlw	high display_prepare@temp
 13532  00B2A8  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 13533  00B2AA  EC0C  F06C         	call	__display_itoa	;wreg free
 13534                           
 13535                           ;display.c: 264: if(os.setup_step_size>999)
 13536  00B2AE  0EE8               	movlw	232
 13537  00B2B0  0100               	movlb	0	; () banked
 13538  00B2B2  5DDA               	subwf	(_os+16)& (0+255),w,b	;volatile
 13539  00B2B4  0E03               	movlw	3
 13540  00B2B6  59DB               	subwfb	(_os+17)& (0+255),w,b	;volatile
 13541  00B2B8  A0D8               	btfss	status,0,c
 13542  00B2BA  D002               	goto	l1333
 13543                           
 13544                           ; BSR set to: 0
 13545                           ;display.c: 265: space = 0;
 13546  00B2BC  0E00               	movlw	0
 13547  00B2BE  D001               	goto	L19
 13548  00B2C0                     l1333:
 13549                           
 13550                           ; BSR set to: 0
 13551                           ;display.c: 266: else;display.c: 267: space = 1;
 13552                           
 13553                           ; BSR set to: 0
 13554  00B2C0  0E01               	movlw	1
 13555  00B2C2                     L19:
 13556  00B2C2  6FC8               	movwf	display_prepare@space& (0+255),b
 13557                           
 13558                           ; BSR set to: 0
 13559                           ;display.c: 268: for(cntr=0; temp[cntr]; ++cntr)
 13560  00B2C4  0E00               	movlw	0
 13561  00B2C6  6FC9               	movwf	display_prepare@cntr& (0+255),b
 13562  00B2C8  D018               	goto	l1335
 13563  00B2CA                     
 13564                           ; BSR set to: 0
 13565                           ;display.c: 269: {;display.c: 270: display_content[3][space+cntr] = temp[cntr];
 13566                           
 13567                           ; BSR set to: 0
 13568  00B2CA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13569  00B2CC  0D01               	mullw	1
 13570  00B2CE  0EBE               	movlw	low display_prepare@temp
 13571  00B2D0  24F3               	addwf	prodl,w,c
 13572  00B2D2  6ED9               	movwf	fsr2l,c
 13573  00B2D4  0E00               	movlw	high display_prepare@temp
 13574  00B2D6  20F4               	addwfc	prodh,w,c
 13575  00B2D8  6EDA               	movwf	fsr2h,c
 13576  00B2DA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13577  00B2DC  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 13578  00B2E0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13579  00B2E2  27BC               	addwf	??_display_prepare& (0+255),f,b
 13580  00B2E4  0E00               	movlw	0
 13581  00B2E6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13582  00B2E8  0EE9               	movlw	low (_display_content+60)
 13583  00B2EA  25BC               	addwf	??_display_prepare& (0+255),w,b
 13584  00B2EC  6EE1               	movwf	fsr1l,c
 13585  00B2EE  0E01               	movlw	high (_display_content+60)
 13586  00B2F0  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13587  00B2F2  6EE2               	movwf	fsr1h,c
 13588  00B2F4  CFDF FFE7          	movff	indf2,indf1
 13589                           
 13590                           ; BSR set to: 0
 13591  00B2F8  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 13592  00B2FA                     l1335:
 13593                           
 13594                           ; BSR set to: 0
 13595                           
 13596                           ; BSR set to: 0
 13597  00B2FA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13598  00B2FC  0D01               	mullw	1
 13599  00B2FE  0EBE               	movlw	low display_prepare@temp
 13600  00B300  24F3               	addwf	prodl,w,c
 13601  00B302  6ED9               	movwf	fsr2l,c
 13602  00B304  0E00               	movlw	high display_prepare@temp
 13603  00B306  20F4               	addwfc	prodh,w,c
 13604  00B308  6EDA               	movwf	fsr2h,c
 13605  00B30A  50DF               	movf	indf2,w,c
 13606  00B30C  A4D8               	btfss	status,2,c
 13607  00B30E  D7DD               	goto	l1336
 13608                           
 13609                           ; BSR set to: 1
 13610                           
 13611                           ; BSR set to: 1
 13612                           ;display.c: 280: }
 13613                           
 13614                           ;display.c: 279: break;
 13615                           
 13616                           ;display.c: 278: display_content[3][12] = '>';
 13617                           
 13618                           ; BSR set to: 1
 13619                           
 13620                           ;display.c: 277: case DISPLAY_STATE_SETUP1_CANCEL:
 13621                           
 13622                           ;display.c: 276: break;
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;display.c: 275: display_content[2][12] = '>';
 13626                           
 13627                           ; BSR set to: 0
 13628                           
 13629                           ;display.c: 273: {;display.c: 274: case DISPLAY_STATE_SETUP1_CONFIRM:
 13630                           
 13631                           ; BSR set to: 0
 13632                           ;display.c: 271: };display.c: 272: switch(os.displayState)
 13633  00B310  0100               	movlb	0	; () banked
 13634  00B312  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
 13635                           
 13636                           ; Switch size 1, requested type "space"
 13637                           ; Number of cases is 2, Range of values is 17 to 18
 13638                           ; switch strategies available:
 13639                           ; Name         Instructions Cycles
 13640                           ; simple_byte            7     4 (average)
 13641                           ;	Chosen strategy is simple_byte
 13642  00B314  0A11               	xorlw	17	; case 17
 13643  00B316  D08C               	goto	L25
 13644  00B318                     
 13645                           ; BSR set to: 0
 13646                           ;display.c: 284: memcpy(display_content, dc_setup2, sizeof display_content);
 13647                           
 13648                           ; BSR set to: 0
 13649  00B318  0EAD               	movlw	low _display_content
 13650  00B31A  6F60               	movwf	memcpy@d1& (0+255),b
 13651  00B31C  0E01               	movlw	high _display_content
 13652  00B31E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13653  00B320  0ECE               	movlw	low _dc_setup2
 13654  00B322  6F62               	movwf	memcpy@s1& (0+255),b
 13655  00B324  0E9F               	movlw	high _dc_setup2
 13656  00B326  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13657  00B328  0E00               	movlw	0
 13658  00B32A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13659  00B32C  0E50               	movlw	80
 13660  00B32E  6F64               	movwf	memcpy@n& (0+255),b
 13661  00B330  EC63  F08A         	call	_memcpy	;wreg free
 13662                           
 13663                           ;display.c: 285: switch(os.displayState)
 13664  00B334  D00A               	goto	l1343
 13665  00B336                     l1344:
 13666                           
 13667                           ;display.c: 288: display_content[2][0] = '>';
 13668  00B336  0E3E               	movlw	62
 13669  00B338  0101               	movlb	1	; () banked
 13670  00B33A  6FD5               	movwf	(_display_content+40)& (0+255),b
 13671                           
 13672                           ;display.c: 289: break;
 13673  00B33C  EF21  F05F         	goto	l1331
 13674  00B340                     l1346:
 13675                           
 13676                           ;display.c: 291: display_content[3][0] = '>';
 13677                           
 13678                           ; BSR set to: 1
 13679  00B340  0E3E               	movlw	62
 13680  00B342  0101               	movlb	1	; () banked
 13681  00B344  6FE9               	movwf	(_display_content+60)& (0+255),b
 13682                           
 13683                           ; BSR set to: 1
 13684                           ;display.c: 293: }
 13685                           
 13686                           ;display.c: 292: break;
 13687  00B346  EF21  F05F         	goto	l1331
 13688  00B34A                     l1343:
 13689                           
 13690                           ; BSR set to: 1
 13691  00B34A  0100               	movlb	0	; () banked
 13692  00B34C  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
 13693                           
 13694                           ; Switch size 1, requested type "space"
 13695                           ; Number of cases is 2, Range of values is 33 to 34
 13696                           ; switch strategies available:
 13697                           ; Name         Instructions Cycles
 13698                           ; simple_byte            7     4 (average)
 13699                           ;	Chosen strategy is simple_byte
 13700  00B34E  0A21               	xorlw	33	; case 33
 13701  00B350  B4D8               	btfsc	status,2,c
 13702  00B352  D7F1               	goto	l1344
 13703  00B354  0A03               	xorlw	3	; case 34
 13704  00B356                     L74:
 13705  00B356  B4D8               	btfsc	status,2,c
 13706  00B358  D7F3               	goto	l1346
 13707                           
 13708                           ; BSR set to: 0
 13709                           ;display.c: 294: break;
 13710  00B35A  EF21  F05F         	goto	l1331
 13711  00B35E                     
 13712                           ; BSR set to: 0
 13713                           ;display.c: 297: memcpy(display_content, dc_divide1, sizeof display_content);
 13714                           
 13715                           ; BSR set to: 0
 13716  00B35E  0EAD               	movlw	low _display_content
 13717  00B360  6F60               	movwf	memcpy@d1& (0+255),b
 13718  00B362  0E01               	movlw	high _display_content
 13719  00B364  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13720  00B366  0E7E               	movlw	low _dc_divide1
 13721  00B368  6F62               	movwf	memcpy@s1& (0+255),b
 13722  00B36A  0E9F               	movlw	high _dc_divide1
 13723  00B36C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13724  00B36E  0E00               	movlw	0
 13725  00B370  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13726  00B372  0E50               	movlw	80
 13727  00B374  6F64               	movwf	memcpy@n& (0+255),b
 13728  00B376  EC63  F08A         	call	_memcpy	;wreg free
 13729                           
 13730                           ;display.c: 299: _display_padded_itoa(os.divide_step_size, 3, temp);
 13731  00B37A  C0DF  F078         	movff	_os+21,__display_padded_itoa@value	;volatile
 13732  00B37E  0100               	movlb	0	; () banked
 13733  00B380  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 13734  00B382  0E03               	movlw	3
 13735  00B384  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 13736  00B386  0EBE               	movlw	low display_prepare@temp
 13737  00B388  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 13738  00B38A  0E00               	movlw	high display_prepare@temp
 13739  00B38C  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 13740  00B38E  EC94  F07C         	call	__display_padded_itoa	;wreg free
 13741                           
 13742                           ;display.c: 300: for(cntr=0; cntr<3; ++cntr)
 13743  00B392  0E00               	movlw	0
 13744  00B394  0100               	movlb	0	; () banked
 13745  00B396  6FC9               	movwf	display_prepare@cntr& (0+255),b
 13746  00B398                     l20900:
 13747                           
 13748                           ; BSR set to: 0
 13749  00B398  0E02               	movlw	2
 13750  00B39A  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 13751  00B39C  D001               	goto	l1348
 13752  00B39E  D014               	goto	u21480
 13753  00B3A0                     l1348:
 13754                           
 13755                           ; BSR set to: 0
 13756                           ;display.c: 301: {;display.c: 302: display_content[2][cntr] = temp[cntr];
 13757                           
 13758                           ; BSR set to: 0
 13759  00B3A0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13760  00B3A2  0D01               	mullw	1
 13761  00B3A4  0EBE               	movlw	low display_prepare@temp
 13762  00B3A6  24F3               	addwf	prodl,w,c
 13763  00B3A8  6ED9               	movwf	fsr2l,c
 13764  00B3AA  0E00               	movlw	high display_prepare@temp
 13765  00B3AC  20F4               	addwfc	prodh,w,c
 13766  00B3AE  6EDA               	movwf	fsr2h,c
 13767  00B3B0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13768  00B3B2  0D01               	mullw	1
 13769  00B3B4  0ED5               	movlw	low (_display_content+40)
 13770  00B3B6  24F3               	addwf	prodl,w,c
 13771  00B3B8  6EE1               	movwf	fsr1l,c
 13772  00B3BA  0E01               	movlw	high (_display_content+40)
 13773  00B3BC  20F4               	addwfc	prodh,w,c
 13774  00B3BE  6EE2               	movwf	fsr1h,c
 13775  00B3C0  CFDF FFE7          	movff	indf2,indf1
 13776                           
 13777                           ; BSR set to: 0
 13778  00B3C4  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 13779  00B3C6  D7E8               	goto	l20900
 13780  00B3C8                     u21480:
 13781                           
 13782                           ; BSR set to: 0
 13783                           ;display.c: 303: };display.c: 305: _display_padded_itoa(os.division, 4, temp);
 13784                           
 13785                           ; BSR set to: 0
 13786  00B3C8  C0DD  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 13787  00B3CC  C0DE  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 13788  00B3D0  0E04               	movlw	4
 13789  00B3D2  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 13790  00B3D4  0EBE               	movlw	low display_prepare@temp
 13791  00B3D6  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 13792  00B3D8  0E00               	movlw	high display_prepare@temp
 13793  00B3DA  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 13794  00B3DC  EC94  F07C         	call	__display_padded_itoa	;wreg free
 13795                           
 13796                           ;display.c: 306: for(cntr=0; cntr<4; ++cntr)
 13797  00B3E0  0E00               	movlw	0
 13798  00B3E2  0100               	movlb	0	; () banked
 13799  00B3E4  6FC9               	movwf	display_prepare@cntr& (0+255),b
 13800  00B3E6                     l20914:
 13801                           
 13802                           ; BSR set to: 0
 13803  00B3E6  0E03               	movlw	3
 13804  00B3E8  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 13805  00B3EA  D001               	goto	l1350
 13806  00B3EC  D01E               	goto	l1352
 13807  00B3EE                     l1350:
 13808                           
 13809                           ; BSR set to: 0
 13810                           ;display.c: 307: {;display.c: 308: display_content[3][cntr] = temp[cntr];
 13811                           
 13812                           ; BSR set to: 0
 13813  00B3EE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13814  00B3F0  0D01               	mullw	1
 13815  00B3F2  0EBE               	movlw	low display_prepare@temp
 13816  00B3F4  24F3               	addwf	prodl,w,c
 13817  00B3F6  6ED9               	movwf	fsr2l,c
 13818  00B3F8  0E00               	movlw	high display_prepare@temp
 13819  00B3FA  20F4               	addwfc	prodh,w,c
 13820  00B3FC  6EDA               	movwf	fsr2h,c
 13821  00B3FE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13822  00B400  0D01               	mullw	1
 13823  00B402  0EE9               	movlw	low (_display_content+60)
 13824  00B404  24F3               	addwf	prodl,w,c
 13825  00B406  6EE1               	movwf	fsr1l,c
 13826  00B408  0E01               	movlw	high (_display_content+60)
 13827  00B40A  20F4               	addwfc	prodh,w,c
 13828  00B40C  6EE2               	movwf	fsr1h,c
 13829  00B40E  CFDF FFE7          	movff	indf2,indf1
 13830                           
 13831                           ; BSR set to: 0
 13832  00B412  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 13833  00B414  D7E8               	goto	l20914
 13834  00B416                     
 13835                           ; BSR set to: 0
 13836                           ;display.c: 313: display_content[2][12] = '>';
 13837                           
 13838                           ; BSR set to: 0
 13839  00B416  0E3E               	movlw	62
 13840  00B418  0101               	movlb	1	; () banked
 13841  00B41A  6FE1               	movwf	(_display_content+52)& (0+255),b
 13842                           
 13843                           ;display.c: 314: break;
 13844  00B41C  EF21  F05F         	goto	l1331
 13845  00B420                     
 13846                           ;display.c: 316: display_content[3][12] = '>';
 13847                           
 13848                           ; BSR set to: 1
 13849  00B420  0E3E               	movlw	62
 13850  00B422  0101               	movlb	1	; () banked
 13851  00B424  6FF5               	movwf	(_display_content+72)& (0+255),b
 13852                           
 13853                           ; BSR set to: 1
 13854                           ;display.c: 318: }
 13855                           
 13856                           ;display.c: 317: break;
 13857  00B426  EF21  F05F         	goto	l1331
 13858  00B42A                     l1352:
 13859                           
 13860                           ; BSR set to: 1
 13861  00B42A  0100               	movlb	0	; () banked
 13862  00B42C  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
 13863                           
 13864                           ; Switch size 1, requested type "space"
 13865                           ; Number of cases is 2, Range of values is 49 to 50
 13866                           ; switch strategies available:
 13867                           ; Name         Instructions Cycles
 13868                           ; simple_byte            7     4 (average)
 13869                           ;	Chosen strategy is simple_byte
 13870  00B42E  0A31               	xorlw	49	; case 49
 13871  00B430                     L25:
 13872  00B430  B4D8               	btfsc	status,2,c
 13873  00B432  D7F1               	goto	l1353
 13874  00B434  0A03               	xorlw	3	; case 50
 13875  00B436  B4D8               	btfsc	status,2,c
 13876  00B438  D7F3               	goto	l1355
 13877                           
 13878                           ; BSR set to: 0
 13879                           ;display.c: 319: break;
 13880  00B43A  EF21  F05F         	goto	l1331
 13881  00B43E                     
 13882                           ; BSR set to: 0
 13883                           ;display.c: 322: memcpy(display_content, dc_divide2, sizeof display_content);
 13884                           
 13885                           ; BSR set to: 0
 13886  00B43E  0EAD               	movlw	low _display_content
 13887  00B440  6F60               	movwf	memcpy@d1& (0+255),b
 13888  00B442  0E01               	movlw	high _display_content
 13889  00B444  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13890  00B446  0E2E               	movlw	low _dc_divide2
 13891  00B448  6F62               	movwf	memcpy@s1& (0+255),b
 13892  00B44A  0E9F               	movlw	high _dc_divide2
 13893  00B44C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13894  00B44E  0E00               	movlw	0
 13895  00B450  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13896  00B452  0E50               	movlw	80
 13897  00B454  6F64               	movwf	memcpy@n& (0+255),b
 13898  00B456  EC63  F08A         	call	_memcpy	;wreg free
 13899                           
 13900                           ;display.c: 324: _display_padded_itoa(os.division, 0, temp);
 13901  00B45A  C0DD  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 13902  00B45E  C0DE  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 13903  00B462  0E00               	movlw	0
 13904  00B464  0100               	movlb	0	; () banked
 13905  00B466  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 13906  00B468  0EBE               	movlw	low display_prepare@temp
 13907  00B46A  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 13908  00B46C  0E00               	movlw	high display_prepare@temp
 13909  00B46E  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 13910  00B470  EC94  F07C         	call	__display_padded_itoa	;wreg free
 13911                           
 13912                           ;display.c: 325: for(cntr=0; temp[cntr]; ++cntr)
 13913  00B474  0E00               	movlw	0
 13914  00B476  0100               	movlb	0	; () banked
 13915  00B478  6FC9               	movwf	display_prepare@cntr& (0+255),b
 13916  00B47A  D018               	goto	l1357
 13917  00B47C                     
 13918                           ; BSR set to: 0
 13919                           ;display.c: 326: {;display.c: 327: display_content[0][cntr+8] = temp[cntr];
 13920                           
 13921                           ; BSR set to: 0
 13922  00B47C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13923  00B47E  0D01               	mullw	1
 13924  00B480  0EBE               	movlw	low display_prepare@temp
 13925  00B482  24F3               	addwf	prodl,w,c
 13926  00B484  6ED9               	movwf	fsr2l,c
 13927  00B486  0E00               	movlw	high display_prepare@temp
 13928  00B488  20F4               	addwfc	prodh,w,c
 13929  00B48A  6EDA               	movwf	fsr2h,c
 13930  00B48C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13931  00B48E  6FBC               	movwf	??_display_prepare& (0+255),b
 13932  00B490  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13933  00B492  0E08               	movlw	8
 13934  00B494  27BC               	addwf	??_display_prepare& (0+255),f,b
 13935  00B496  0E00               	movlw	0
 13936  00B498  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13937  00B49A  0EAD               	movlw	low _display_content
 13938  00B49C  25BC               	addwf	??_display_prepare& (0+255),w,b
 13939  00B49E  6EE1               	movwf	fsr1l,c
 13940  00B4A0  0E01               	movlw	high _display_content
 13941  00B4A2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13942  00B4A4  6EE2               	movwf	fsr1h,c
 13943  00B4A6  CFDF FFE7          	movff	indf2,indf1
 13944                           
 13945                           ; BSR set to: 0
 13946  00B4AA  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 13947  00B4AC                     l1357:
 13948                           
 13949                           ; BSR set to: 0
 13950                           
 13951                           ; BSR set to: 0
 13952  00B4AC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13953  00B4AE  0D01               	mullw	1
 13954  00B4B0  0EBE               	movlw	low display_prepare@temp
 13955  00B4B2  24F3               	addwf	prodl,w,c
 13956  00B4B4  6ED9               	movwf	fsr2l,c
 13957  00B4B6  0E00               	movlw	high display_prepare@temp
 13958  00B4B8  20F4               	addwfc	prodh,w,c
 13959  00B4BA  6EDA               	movwf	fsr2h,c
 13960  00B4BC  50DF               	movf	indf2,w,c
 13961  00B4BE  A4D8               	btfss	status,2,c
 13962  00B4C0  D7DD               	goto	l1358
 13963                           
 13964                           ; BSR set to: 0
 13965                           ;display.c: 328: };display.c: 330: display_content[0][cntr+8] = ',';
 13966                           
 13967                           ; BSR set to: 0
 13968  00B4C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13969  00B4C4  6FBC               	movwf	??_display_prepare& (0+255),b
 13970  00B4C6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13971  00B4C8  0E08               	movlw	8
 13972  00B4CA  27BC               	addwf	??_display_prepare& (0+255),f,b
 13973  00B4CC  0E00               	movlw	0
 13974  00B4CE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13975  00B4D0  0EAD               	movlw	low _display_content
 13976  00B4D2  25BC               	addwf	??_display_prepare& (0+255),w,b
 13977  00B4D4  6ED9               	movwf	fsr2l,c
 13978  00B4D6  0E01               	movlw	high _display_content
 13979  00B4D8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13980  00B4DA  6EDA               	movwf	fsr2h,c
 13981  00B4DC  0E2C               	movlw	44
 13982  00B4DE  6EDF               	movwf	indf2,c
 13983                           
 13984                           ; BSR set to: 0
 13985                           ;display.c: 331: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 13986  00B4E0  29DC               	incf	(_os+18)& (0+255),w,b	;volatile
 13987  00B4E2  A4D8               	btfss	status,2,c
 13988  00B4E4  D023               	goto	l1360
 13989                           
 13990                           ; BSR set to: 0
 13991                           ;display.c: 332: {;display.c: 333: display_content[0][cntr+10] = 'C';
 13992  00B4E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13993  00B4E8  6FBC               	movwf	??_display_prepare& (0+255),b
 13994  00B4EA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13995  00B4EC  0E0A               	movlw	10
 13996  00B4EE  27BC               	addwf	??_display_prepare& (0+255),f,b
 13997  00B4F0  0E00               	movlw	0
 13998  00B4F2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13999  00B4F4  0EAD               	movlw	low _display_content
 14000  00B4F6  25BC               	addwf	??_display_prepare& (0+255),w,b
 14001  00B4F8  6ED9               	movwf	fsr2l,c
 14002  00B4FA  0E01               	movlw	high _display_content
 14003  00B4FC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14004  00B4FE  6EDA               	movwf	fsr2h,c
 14005  00B500  0E43               	movlw	67
 14006  00B502  6EDF               	movwf	indf2,c
 14007                           
 14008                           ;display.c: 334: display_content[0][cntr+11] = 'C';
 14009  00B504  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14010  00B506  6FBC               	movwf	??_display_prepare& (0+255),b
 14011  00B508  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14012  00B50A  0E0B               	movlw	11
 14013  00B50C  27BC               	addwf	??_display_prepare& (0+255),f,b
 14014  00B50E  0E00               	movlw	0
 14015  00B510  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14016  00B512  0EAD               	movlw	low _display_content
 14017  00B514  25BC               	addwf	??_display_prepare& (0+255),w,b
 14018  00B516  6ED9               	movwf	fsr2l,c
 14019  00B518  0E01               	movlw	high _display_content
 14020  00B51A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14021  00B51C  6EDA               	movwf	fsr2h,c
 14022  00B51E  0E43               	movlw	67
 14023  00B520  6EDF               	movwf	indf2,c
 14024                           
 14025                           ;display.c: 335: display_content[0][cntr+12] = 'W';
 14026  00B522  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14027  00B524  6FBC               	movwf	??_display_prepare& (0+255),b
 14028  00B526  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14029  00B528  0E0C               	movlw	12
 14030  00B52A  D013               	goto	L26
 14031  00B52C                     l1360:
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;display.c: 337: else;display.c: 338: {;display.c: 339: display_content[0][cntr+10] = 'C
      +                          ';
 14035                           
 14036                           ; BSR set to: 0
 14037  00B52C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14038  00B52E  6FBC               	movwf	??_display_prepare& (0+255),b
 14039  00B530  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14040  00B532  0E0A               	movlw	10
 14041  00B534  27BC               	addwf	??_display_prepare& (0+255),f,b
 14042  00B536  0E00               	movlw	0
 14043  00B538  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14044  00B53A  0EAD               	movlw	low _display_content
 14045  00B53C  25BC               	addwf	??_display_prepare& (0+255),w,b
 14046  00B53E  6ED9               	movwf	fsr2l,c
 14047  00B540  0E01               	movlw	high _display_content
 14048  00B542  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14049  00B544  6EDA               	movwf	fsr2h,c
 14050  00B546  0E43               	movlw	67
 14051  00B548  6EDF               	movwf	indf2,c
 14052                           
 14053                           ;display.c: 340: display_content[0][cntr+11] = 'W';
 14054  00B54A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14055  00B54C  6FBC               	movwf	??_display_prepare& (0+255),b
 14056  00B54E  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14057  00B550  0E0B               	movlw	11
 14058  00B552                     L26:
 14059  00B552  27BC               	addwf	??_display_prepare& (0+255),f,b
 14060  00B554  0E00               	movlw	0
 14061  00B556  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14062  00B558  0EAD               	movlw	low _display_content
 14063  00B55A  25BC               	addwf	??_display_prepare& (0+255),w,b
 14064  00B55C  6ED9               	movwf	fsr2l,c
 14065  00B55E  0E01               	movlw	high _display_content
 14066  00B560  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14067  00B562  6EDA               	movwf	fsr2h,c
 14068  00B564  0E57               	movlw	87
 14069  00B566  6EDF               	movwf	indf2,c
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;display.c: 341: };display.c: 343: _display_padded_itoa(os.divide_position, 0, temp);
 14073                           
 14074                           ; BSR set to: 0
 14075  00B568  C0E0  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 14076  00B56C  C0E1  F079         	movff	_os+23,__display_padded_itoa@value+1	;volatile
 14077  00B570  0E00               	movlw	0
 14078  00B572  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 14079  00B574  0EBE               	movlw	low display_prepare@temp
 14080  00B576  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 14081  00B578  0E00               	movlw	high display_prepare@temp
 14082  00B57A  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 14083  00B57C  EC94  F07C         	call	__display_padded_itoa	;wreg free
 14084                           
 14085                           ;display.c: 344: for(cntr=0; temp[cntr]; ++cntr)
 14086  00B580  0E00               	movlw	0
 14087  00B582  0100               	movlb	0	; () banked
 14088  00B584  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14089  00B586  D018               	goto	l1362
 14090  00B588                     
 14091                           ; BSR set to: 0
 14092                           ;display.c: 345: {;display.c: 346: display_content[1][cntr+5] = temp[cntr];
 14093                           
 14094                           ; BSR set to: 0
 14095  00B588  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14096  00B58A  0D01               	mullw	1
 14097  00B58C  0EBE               	movlw	low display_prepare@temp
 14098  00B58E  24F3               	addwf	prodl,w,c
 14099  00B590  6ED9               	movwf	fsr2l,c
 14100  00B592  0E00               	movlw	high display_prepare@temp
 14101  00B594  20F4               	addwfc	prodh,w,c
 14102  00B596  6EDA               	movwf	fsr2h,c
 14103  00B598  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14104  00B59A  6FBC               	movwf	??_display_prepare& (0+255),b
 14105  00B59C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14106  00B59E  0E05               	movlw	5
 14107  00B5A0  27BC               	addwf	??_display_prepare& (0+255),f,b
 14108  00B5A2  0E00               	movlw	0
 14109  00B5A4  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14110  00B5A6  0EC1               	movlw	low (_display_content+20)
 14111  00B5A8  25BC               	addwf	??_display_prepare& (0+255),w,b
 14112  00B5AA  6EE1               	movwf	fsr1l,c
 14113  00B5AC  0E01               	movlw	high (_display_content+20)
 14114  00B5AE  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14115  00B5B0  6EE2               	movwf	fsr1h,c
 14116  00B5B2  CFDF FFE7          	movff	indf2,indf1
 14117                           
 14118                           ; BSR set to: 0
 14119  00B5B6  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14120  00B5B8                     l1362:
 14121                           
 14122                           ; BSR set to: 0
 14123                           
 14124                           ; BSR set to: 0
 14125  00B5B8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14126  00B5BA  0D01               	mullw	1
 14127  00B5BC  0EBE               	movlw	low display_prepare@temp
 14128  00B5BE  24F3               	addwf	prodl,w,c
 14129  00B5C0  6ED9               	movwf	fsr2l,c
 14130  00B5C2  0E00               	movlw	high display_prepare@temp
 14131  00B5C4  20F4               	addwfc	prodh,w,c
 14132  00B5C6  6EDA               	movwf	fsr2h,c
 14133  00B5C8  50DF               	movf	indf2,w,c
 14134  00B5CA  A4D8               	btfss	status,2,c
 14135  00B5CC  D7DD               	goto	l1363
 14136                           
 14137                           ; BSR set to: 0
 14138                           ;display.c: 347: };display.c: 349: display_content[1][cntr+6] = '(';
 14139                           
 14140                           ; BSR set to: 0
 14141  00B5CE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14142  00B5D0  6FBC               	movwf	??_display_prepare& (0+255),b
 14143  00B5D2  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14144  00B5D4  0E06               	movlw	6
 14145  00B5D6  27BC               	addwf	??_display_prepare& (0+255),f,b
 14146  00B5D8  0E00               	movlw	0
 14147  00B5DA  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14148  00B5DC  0EC1               	movlw	low (_display_content+20)
 14149  00B5DE  25BC               	addwf	??_display_prepare& (0+255),w,b
 14150  00B5E0  6ED9               	movwf	fsr2l,c
 14151  00B5E2  0E01               	movlw	high (_display_content+20)
 14152  00B5E4  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14153  00B5E6  6EDA               	movwf	fsr2h,c
 14154  00B5E8  0E28               	movlw	40
 14155  00B5EA  6EDF               	movwf	indf2,c
 14156                           
 14157                           ; BSR set to: 0
 14158                           ;display.c: 350: space = cntr + 7;
 14159  00B5EC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14160  00B5EE  0F07               	addlw	7
 14161  00B5F0  6FC8               	movwf	display_prepare@space& (0+255),b
 14162                           
 14163                           ; BSR set to: 0
 14164                           ;display.c: 351: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 14165  00B5F2  C0D5  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 14166  00B5F6  C0D6  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 14167  00B5FA  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 14168  00B5FC  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 14169  00B5FE  0E02               	movlw	2
 14170  00B600  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 14171  00B602  0EBE               	movlw	low display_prepare@temp
 14172  00B604  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 14173  00B606  0E00               	movlw	high display_prepare@temp
 14174  00B608  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 14175  00B60A  EC86  F077         	call	__display_itoa_long	;wreg free
 14176                           
 14177                           ;display.c: 352: for(cntr=0; temp[cntr]; ++cntr)
 14178  00B60E  0E00               	movlw	0
 14179  00B610  0100               	movlb	0	; () banked
 14180  00B612  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14181  00B614  D018               	goto	l1365
 14182  00B616                     
 14183                           ; BSR set to: 0
 14184                           ;display.c: 353: {;display.c: 354: display_content[1][cntr+space] = temp[cntr];
 14185                           
 14186                           ; BSR set to: 0
 14187  00B616  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14188  00B618  0D01               	mullw	1
 14189  00B61A  0EBE               	movlw	low display_prepare@temp
 14190  00B61C  24F3               	addwf	prodl,w,c
 14191  00B61E  6ED9               	movwf	fsr2l,c
 14192  00B620  0E00               	movlw	high display_prepare@temp
 14193  00B622  20F4               	addwfc	prodh,w,c
 14194  00B624  6EDA               	movwf	fsr2h,c
 14195  00B626  51C8               	movf	display_prepare@space& (0+255),w,b
 14196  00B628  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 14197  00B62C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14198  00B62E  27BC               	addwf	??_display_prepare& (0+255),f,b
 14199  00B630  0E00               	movlw	0
 14200  00B632  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14201  00B634  0EC1               	movlw	low (_display_content+20)
 14202  00B636  25BC               	addwf	??_display_prepare& (0+255),w,b
 14203  00B638  6EE1               	movwf	fsr1l,c
 14204  00B63A  0E01               	movlw	high (_display_content+20)
 14205  00B63C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14206  00B63E  6EE2               	movwf	fsr1h,c
 14207  00B640  CFDF FFE7          	movff	indf2,indf1
 14208                           
 14209                           ; BSR set to: 0
 14210  00B644  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14211  00B646                     l1365:
 14212                           
 14213                           ; BSR set to: 0
 14214                           
 14215                           ; BSR set to: 0
 14216  00B646  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14217  00B648  0D01               	mullw	1
 14218  00B64A  0EBE               	movlw	low display_prepare@temp
 14219  00B64C  24F3               	addwf	prodl,w,c
 14220  00B64E  6ED9               	movwf	fsr2l,c
 14221  00B650  0E00               	movlw	high display_prepare@temp
 14222  00B652  20F4               	addwfc	prodh,w,c
 14223  00B654  6EDA               	movwf	fsr2h,c
 14224  00B656  50DF               	movf	indf2,w,c
 14225  00B658  A4D8               	btfss	status,2,c
 14226  00B65A  D7DD               	goto	l1366
 14227                           
 14228                           ; BSR set to: 0
 14229                           ;display.c: 355: };display.c: 356: display_content[1][cntr+space] = 0x01;
 14230                           
 14231                           ; BSR set to: 0
 14232  00B65C  51C8               	movf	display_prepare@space& (0+255),w,b
 14233  00B65E  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 14234  00B662  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14235  00B664  27BC               	addwf	??_display_prepare& (0+255),f,b
 14236  00B666  0E00               	movlw	0
 14237  00B668  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14238  00B66A  0EC1               	movlw	low (_display_content+20)
 14239  00B66C  25BC               	addwf	??_display_prepare& (0+255),w,b
 14240  00B66E  6ED9               	movwf	fsr2l,c
 14241  00B670  0E01               	movlw	high (_display_content+20)
 14242  00B672  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14243  00B674  6EDA               	movwf	fsr2h,c
 14244  00B676  0E01               	movlw	1
 14245  00B678  6EDF               	movwf	indf2,c
 14246                           
 14247                           ;display.c: 357: display_content[1][cntr+space+1] = ')';
 14248  00B67A  51C8               	movf	display_prepare@space& (0+255),w,b
 14249  00B67C  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 14250  00B680  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14251  00B682  27BC               	addwf	??_display_prepare& (0+255),f,b
 14252  00B684  0E00               	movlw	0
 14253  00B686  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14254  00B688  0E01               	movlw	1
 14255  00B68A  27BC               	addwf	??_display_prepare& (0+255),f,b
 14256  00B68C  0E00               	movlw	0
 14257  00B68E  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14258  00B690  0EC1               	movlw	low (_display_content+20)
 14259  00B692  25BC               	addwf	??_display_prepare& (0+255),w,b
 14260  00B694  6ED9               	movwf	fsr2l,c
 14261  00B696  0E01               	movlw	high (_display_content+20)
 14262  00B698  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14263  00B69A  6EDA               	movwf	fsr2h,c
 14264  00B69C  0E29               	movlw	41
 14265  00B69E  6EDF               	movwf	indf2,c
 14266                           
 14267                           ; BSR set to: 0
 14268                           ;display.c: 359: _display_signed_itoa(os.divide_jump_size, temp);
 14269  00B6A0  C0E2  F08F         	movff	_os+24,__display_signed_itoa@value	;volatile
 14270  00B6A4  C0E3  F090         	movff	_os+25,__display_signed_itoa@value+1	;volatile
 14271  00B6A8  0EBE               	movlw	low display_prepare@temp
 14272  00B6AA  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 14273  00B6AC  0E00               	movlw	high display_prepare@temp
 14274  00B6AE  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 14275  00B6B0  ECD5  F08D         	call	__display_signed_itoa	;wreg free
 14276                           
 14277                           ;display.c: 360: for(cntr=0; temp[cntr]; ++cntr)
 14278  00B6B4  0E00               	movlw	0
 14279  00B6B6  0100               	movlb	0	; () banked
 14280  00B6B8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14281  00B6BA  D018               	goto	l1368
 14282  00B6BC                     
 14283                           ; BSR set to: 0
 14284                           ;display.c: 361: {;display.c: 362: display_content[2][cntr+11] = temp[cntr];
 14285                           
 14286                           ; BSR set to: 0
 14287  00B6BC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14288  00B6BE  0D01               	mullw	1
 14289  00B6C0  0EBE               	movlw	low display_prepare@temp
 14290  00B6C2  24F3               	addwf	prodl,w,c
 14291  00B6C4  6ED9               	movwf	fsr2l,c
 14292  00B6C6  0E00               	movlw	high display_prepare@temp
 14293  00B6C8  20F4               	addwfc	prodh,w,c
 14294  00B6CA  6EDA               	movwf	fsr2h,c
 14295  00B6CC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14296  00B6CE  6FBC               	movwf	??_display_prepare& (0+255),b
 14297  00B6D0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14298  00B6D2  0E0B               	movlw	11
 14299  00B6D4  27BC               	addwf	??_display_prepare& (0+255),f,b
 14300  00B6D6  0E00               	movlw	0
 14301  00B6D8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14302  00B6DA  0ED5               	movlw	low (_display_content+40)
 14303  00B6DC  25BC               	addwf	??_display_prepare& (0+255),w,b
 14304  00B6DE  6EE1               	movwf	fsr1l,c
 14305  00B6E0  0E01               	movlw	high (_display_content+40)
 14306  00B6E2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14307  00B6E4  6EE2               	movwf	fsr1h,c
 14308  00B6E6  CFDF FFE7          	movff	indf2,indf1
 14309                           
 14310                           ; BSR set to: 0
 14311  00B6EA  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14312  00B6EC                     l1368:
 14313                           
 14314                           ; BSR set to: 0
 14315                           
 14316                           ; BSR set to: 0
 14317  00B6EC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14318  00B6EE  0D01               	mullw	1
 14319  00B6F0  0EBE               	movlw	low display_prepare@temp
 14320  00B6F2  24F3               	addwf	prodl,w,c
 14321  00B6F4  6ED9               	movwf	fsr2l,c
 14322  00B6F6  0E00               	movlw	high display_prepare@temp
 14323  00B6F8  20F4               	addwfc	prodh,w,c
 14324  00B6FA  6EDA               	movwf	fsr2h,c
 14325  00B6FC  50DF               	movf	indf2,w,c
 14326  00B6FE  B4D8               	btfsc	status,2,c
 14327  00B700  D3A0               	goto	l1331
 14328  00B702  D7DC               	goto	l1369
 14329  00B704                     
 14330                           ; BSR set to: 0
 14331                           ;display.c: 367: memcpy(display_content, dc_arc1, sizeof display_content);
 14332                           
 14333                           ; BSR set to: 0
 14334  00B704  0EAD               	movlw	low _display_content
 14335  00B706  6F60               	movwf	memcpy@d1& (0+255),b
 14336  00B708  0E01               	movlw	high _display_content
 14337  00B70A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14338  00B70C  0EDE               	movlw	low _dc_arc1
 14339  00B70E  6F62               	movwf	memcpy@s1& (0+255),b
 14340  00B710  0E9E               	movlw	high _dc_arc1
 14341  00B712  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14342  00B714  0E00               	movlw	0
 14343  00B716  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14344  00B718  0E50               	movlw	80
 14345  00B71A  6F64               	movwf	memcpy@n& (0+255),b
 14346  00B71C  EC63  F08A         	call	_memcpy	;wreg free
 14347                           
 14348                           ;display.c: 368: switch(os.displayState)
 14349  00B720  D008               	goto	l1372
 14350  00B722                     
 14351                           ;display.c: 371: display_content[2][12] = '>';
 14352  00B722  0E3E               	movlw	62
 14353  00B724  0101               	movlb	1	; () banked
 14354  00B726  6FE1               	movwf	(_display_content+52)& (0+255),b
 14355                           
 14356                           ;display.c: 372: break;
 14357  00B728  D00C               	goto	l1374
 14358  00B72A                     
 14359                           ;display.c: 374: display_content[3][12] = '>';
 14360                           
 14361                           ; BSR set to: 1
 14362  00B72A  0E3E               	movlw	62
 14363  00B72C  0101               	movlb	1	; () banked
 14364  00B72E  6FF5               	movwf	(_display_content+72)& (0+255),b
 14365                           
 14366                           ; BSR set to: 1
 14367                           ;display.c: 376: }
 14368                           
 14369                           ;display.c: 375: break;
 14370  00B730  D008               	goto	l1374
 14371  00B732                     l1372:
 14372                           
 14373                           ; BSR set to: 1
 14374  00B732  0100               	movlb	0	; () banked
 14375  00B734  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
 14376                           
 14377                           ; Switch size 1, requested type "space"
 14378                           ; Number of cases is 2, Range of values is 81 to 82
 14379                           ; switch strategies available:
 14380                           ; Name         Instructions Cycles
 14381                           ; simple_byte            7     4 (average)
 14382                           ;	Chosen strategy is simple_byte
 14383  00B736  0A51               	xorlw	81	; case 81
 14384  00B738  B4D8               	btfsc	status,2,c
 14385  00B73A  D7F3               	goto	l1373
 14386  00B73C  0A03               	xorlw	3	; case 82
 14387  00B73E  B4D8               	btfsc	status,2,c
 14388  00B740  D7F4               	goto	l1375
 14389  00B742                     l1374:
 14390                           
 14391                           ;display.c: 379: _display_itoa_long(os.arc_size, 2, temp);
 14392                           
 14393                           ; BSR set to: 0
 14394  00B742  C0E6  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 14395  00B746  C0E7  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 14396  00B74A  C0E8  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 14397  00B74E  C0E9  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 14398  00B752  0E02               	movlw	2
 14399  00B754  0100               	movlb	0	; () banked
 14400  00B756  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 14401  00B758  0EBE               	movlw	low display_prepare@temp
 14402  00B75A  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 14403  00B75C  0E00               	movlw	high display_prepare@temp
 14404  00B75E  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 14405  00B760  EC86  F077         	call	__display_itoa_long	;wreg free
 14406                           
 14407                           ;display.c: 380: for(cntr=0; temp[cntr]; ++cntr)
 14408  00B764  0E00               	movlw	0
 14409  00B766  0100               	movlb	0	; () banked
 14410  00B768  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14411  00B76A  D018               	goto	l1376
 14412  00B76C                     
 14413                           ; BSR set to: 0
 14414                           ;display.c: 381: {;display.c: 382: display_content[1][10+cntr] = temp[cntr];
 14415                           
 14416                           ; BSR set to: 0
 14417  00B76C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14418  00B76E  0D01               	mullw	1
 14419  00B770  0EBE               	movlw	low display_prepare@temp
 14420  00B772  24F3               	addwf	prodl,w,c
 14421  00B774  6ED9               	movwf	fsr2l,c
 14422  00B776  0E00               	movlw	high display_prepare@temp
 14423  00B778  20F4               	addwfc	prodh,w,c
 14424  00B77A  6EDA               	movwf	fsr2h,c
 14425  00B77C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14426  00B77E  6FBC               	movwf	??_display_prepare& (0+255),b
 14427  00B780  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14428  00B782  0E0A               	movlw	10
 14429  00B784  27BC               	addwf	??_display_prepare& (0+255),f,b
 14430  00B786  0E00               	movlw	0
 14431  00B788  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14432  00B78A  0EC1               	movlw	low (_display_content+20)
 14433  00B78C  25BC               	addwf	??_display_prepare& (0+255),w,b
 14434  00B78E  6EE1               	movwf	fsr1l,c
 14435  00B790  0E01               	movlw	high (_display_content+20)
 14436  00B792  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14437  00B794  6EE2               	movwf	fsr1h,c
 14438  00B796  CFDF FFE7          	movff	indf2,indf1
 14439                           
 14440                           ; BSR set to: 0
 14441  00B79A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14442  00B79C                     l1376:
 14443                           
 14444                           ; BSR set to: 0
 14445                           
 14446                           ; BSR set to: 0
 14447  00B79C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14448  00B79E  0D01               	mullw	1
 14449  00B7A0  0EBE               	movlw	low display_prepare@temp
 14450  00B7A2  24F3               	addwf	prodl,w,c
 14451  00B7A4  6ED9               	movwf	fsr2l,c
 14452  00B7A6  0E00               	movlw	high display_prepare@temp
 14453  00B7A8  20F4               	addwfc	prodh,w,c
 14454  00B7AA  6EDA               	movwf	fsr2h,c
 14455  00B7AC  50DF               	movf	indf2,w,c
 14456  00B7AE  A4D8               	btfss	status,2,c
 14457  00B7B0  D7DD               	goto	l1377
 14458                           
 14459                           ; BSR set to: 0
 14460                           ;display.c: 383: };display.c: 384: display_content[1][10+cntr] = 0x01;
 14461                           
 14462                           ; BSR set to: 0
 14463  00B7B2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14464  00B7B4  6FBC               	movwf	??_display_prepare& (0+255),b
 14465  00B7B6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14466  00B7B8  0E0A               	movlw	10
 14467  00B7BA  27BC               	addwf	??_display_prepare& (0+255),f,b
 14468  00B7BC  0E00               	movlw	0
 14469  00B7BE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14470  00B7C0  0EC1               	movlw	low (_display_content+20)
 14471  00B7C2  25BC               	addwf	??_display_prepare& (0+255),w,b
 14472  00B7C4  6ED9               	movwf	fsr2l,c
 14473  00B7C6  0E01               	movlw	high (_display_content+20)
 14474  00B7C8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14475  00B7CA  6EDA               	movwf	fsr2h,c
 14476  00B7CC  0E01               	movlw	1
 14477  00B7CE  6EDF               	movwf	indf2,c
 14478                           
 14479                           ; BSR set to: 0
 14480                           ;display.c: 387: _display_itoa(os.arc_step_size, 2, temp);
 14481  00B7D0  C0E4  F095         	movff	_os+26,__display_itoa@value	;volatile
 14482  00B7D4  C0E5  F096         	movff	_os+27,__display_itoa@value+1	;volatile
 14483  00B7D8  0E02               	movlw	2
 14484  00B7DA  6F97               	movwf	__display_itoa@decimals& (0+255),b
 14485  00B7DC  0EBE               	movlw	low display_prepare@temp
 14486  00B7DE  6F98               	movwf	__display_itoa@text& (0+255),b
 14487  00B7E0  0E00               	movlw	high display_prepare@temp
 14488  00B7E2  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 14489  00B7E4  EC0C  F06C         	call	__display_itoa	;wreg free
 14490                           
 14491                           ;display.c: 388: if(os.arc_step_size>999)
 14492  00B7E8  0EE8               	movlw	232
 14493  00B7EA  0100               	movlb	0	; () banked
 14494  00B7EC  5DE4               	subwf	(_os+26)& (0+255),w,b	;volatile
 14495  00B7EE  0E03               	movlw	3
 14496  00B7F0  59E5               	subwfb	(_os+27)& (0+255),w,b	;volatile
 14497  00B7F2  A0D8               	btfss	status,0,c
 14498  00B7F4  D002               	goto	l1379
 14499                           
 14500                           ; BSR set to: 0
 14501                           ;display.c: 389: space = 0;
 14502  00B7F6  0E00               	movlw	0
 14503  00B7F8  D001               	goto	L20
 14504  00B7FA                     l1379:
 14505                           
 14506                           ; BSR set to: 0
 14507                           ;display.c: 390: else;display.c: 391: space = 1;
 14508                           
 14509                           ; BSR set to: 0
 14510  00B7FA  0E01               	movlw	1
 14511  00B7FC                     L20:
 14512  00B7FC  6FC8               	movwf	display_prepare@space& (0+255),b
 14513                           
 14514                           ; BSR set to: 0
 14515                           ;display.c: 392: for(cntr=0; temp[cntr]; ++cntr)
 14516  00B7FE  0E00               	movlw	0
 14517  00B800  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14518  00B802  D018               	goto	l1381
 14519  00B804                     
 14520                           ; BSR set to: 0
 14521                           ;display.c: 393: {;display.c: 394: display_content[3][space+cntr] = temp[cntr];
 14522                           
 14523                           ; BSR set to: 0
 14524  00B804  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14525  00B806  0D01               	mullw	1
 14526  00B808  0EBE               	movlw	low display_prepare@temp
 14527  00B80A  24F3               	addwf	prodl,w,c
 14528  00B80C  6ED9               	movwf	fsr2l,c
 14529  00B80E  0E00               	movlw	high display_prepare@temp
 14530  00B810  20F4               	addwfc	prodh,w,c
 14531  00B812  6EDA               	movwf	fsr2h,c
 14532  00B814  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14533  00B816  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 14534  00B81A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14535  00B81C  27BC               	addwf	??_display_prepare& (0+255),f,b
 14536  00B81E  0E00               	movlw	0
 14537  00B820  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14538  00B822  0EE9               	movlw	low (_display_content+60)
 14539  00B824  25BC               	addwf	??_display_prepare& (0+255),w,b
 14540  00B826  6EE1               	movwf	fsr1l,c
 14541  00B828  0E01               	movlw	high (_display_content+60)
 14542  00B82A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14543  00B82C  6EE2               	movwf	fsr1h,c
 14544  00B82E  CFDF FFE7          	movff	indf2,indf1
 14545                           
 14546                           ; BSR set to: 0
 14547  00B832  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14548  00B834                     l1381:
 14549                           
 14550                           ; BSR set to: 0
 14551                           
 14552                           ; BSR set to: 0
 14553  00B834  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14554  00B836  0D01               	mullw	1
 14555  00B838  0EBE               	movlw	low display_prepare@temp
 14556  00B83A  24F3               	addwf	prodl,w,c
 14557  00B83C  6ED9               	movwf	fsr2l,c
 14558  00B83E  0E00               	movlw	high display_prepare@temp
 14559  00B840  20F4               	addwfc	prodh,w,c
 14560  00B842  6EDA               	movwf	fsr2h,c
 14561  00B844  50DF               	movf	indf2,w,c
 14562  00B846  A4D8               	btfss	status,2,c
 14563  00B848  D7DD               	goto	l1382
 14564                           
 14565                           ; BSR set to: 0
 14566                           ;display.c: 395: };display.c: 396: display_content[3][space+cntr] = 0x01 ;
 14567                           
 14568                           ; BSR set to: 0
 14569  00B84A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14570  00B84C  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 14571  00B850  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14572  00B852  27BC               	addwf	??_display_prepare& (0+255),f,b
 14573  00B854  0E00               	movlw	0
 14574  00B856  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14575  00B858  0EE9               	movlw	low (_display_content+60)
 14576  00B85A  25BC               	addwf	??_display_prepare& (0+255),w,b
 14577  00B85C  6ED9               	movwf	fsr2l,c
 14578  00B85E  0E01               	movlw	high (_display_content+60)
 14579  00B860  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14580  00B862  6EDA               	movwf	fsr2h,c
 14581  00B864  0E01               	movlw	1
 14582  00B866  D25B               	goto	L23
 14583  00B868                     
 14584                           ; BSR set to: 0
 14585                           ;display.c: 401: memcpy(display_content, dc_arc2, sizeof display_content);
 14586                           
 14587                           ; BSR set to: 0
 14588  00B868  0EAD               	movlw	low _display_content
 14589  00B86A  6F60               	movwf	memcpy@d1& (0+255),b
 14590  00B86C  0E01               	movlw	high _display_content
 14591  00B86E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14592  00B870  0E8E               	movlw	low _dc_arc2
 14593  00B872  6F62               	movwf	memcpy@s1& (0+255),b
 14594  00B874  0E9E               	movlw	high _dc_arc2
 14595  00B876  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14596  00B878  0E00               	movlw	0
 14597  00B87A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14598  00B87C  0E50               	movlw	80
 14599  00B87E  6F64               	movwf	memcpy@n& (0+255),b
 14600  00B880  EC63  F08A         	call	_memcpy	;wreg free
 14601                           
 14602                           ;display.c: 402: switch(os.displayState)
 14603  00B884  D025               	goto	l1385
 14604  00B886                     
 14605                           ;display.c: 405: display_content[2][6] = 'W';
 14606  00B886  0E57               	movlw	87
 14607  00B888  0101               	movlb	1	; () banked
 14608  00B88A  6FDB               	movwf	(_display_content+46)& (0+255),b
 14609                           
 14610                           ;display.c: 406: display_content[2][7] = ' ';
 14611  00B88C  0E20               	movlw	32
 14612  00B88E  6FDC               	movwf	(_display_content+47)& (0+255),b
 14613                           
 14614                           ;display.c: 407: break;
 14615  00B890  D027               	goto	l1387
 14616  00B892                     
 14617                           ;display.c: 409: memcpy(display_content[2], "        ", 8);
 14618                           
 14619                           ; BSR set to: 1
 14620  00B892  0ED5               	movlw	low (_display_content+40)
 14621  00B894  0100               	movlb	0	; () banked
 14622  00B896  6F60               	movwf	memcpy@d1& (0+255),b
 14623  00B898  0E01               	movlw	high (_display_content+40)
 14624  00B89A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14625  00B89C  0E1C               	movlw	low STR_1
 14626  00B89E  6F62               	movwf	memcpy@s1& (0+255),b
 14627  00B8A0  0EA2               	movlw	high STR_1
 14628  00B8A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14629  00B8A4  0E00               	movlw	0
 14630  00B8A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14631  00B8A8  0E08               	movlw	8
 14632  00B8AA  6F64               	movwf	memcpy@n& (0+255),b
 14633  00B8AC  EC63  F08A         	call	_memcpy	;wreg free
 14634                           
 14635                           ;display.c: 410: memcpy(display_content[3], "Cancel", 6);
 14636  00B8B0  0EE9               	movlw	low (_display_content+60)
 14637  00B8B2  0100               	movlb	0	; () banked
 14638  00B8B4  6F60               	movwf	memcpy@d1& (0+255),b
 14639  00B8B6  0E01               	movlw	high (_display_content+60)
 14640  00B8B8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14641  00B8BA  0E25               	movlw	low STR_2
 14642  00B8BC  6F62               	movwf	memcpy@s1& (0+255),b
 14643  00B8BE  0EA2               	movlw	high STR_2
 14644  00B8C0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14645  00B8C2  0E00               	movlw	0
 14646  00B8C4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14647  00B8C6  0E06               	movlw	6
 14648  00B8C8  6F64               	movwf	memcpy@n& (0+255),b
 14649  00B8CA  EC63  F08A         	call	_memcpy	;wreg free
 14650                           
 14651                           ;display.c: 412: }
 14652                           
 14653                           ;display.c: 411: break;
 14654  00B8CE  D008               	goto	l1387
 14655  00B8D0                     l1385:
 14656  00B8D0  0100               	movlb	0	; () banked
 14657  00B8D2  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
 14658                           
 14659                           ; Switch size 1, requested type "space"
 14660                           ; Number of cases is 2, Range of values is 98 to 99
 14661                           ; switch strategies available:
 14662                           ; Name         Instructions Cycles
 14663                           ; simple_byte            7     4 (average)
 14664                           ;	Chosen strategy is simple_byte
 14665  00B8D4  0A62               	xorlw	98	; case 98
 14666  00B8D6  B4D8               	btfsc	status,2,c
 14667  00B8D8  D7DC               	goto	l1388
 14668  00B8DA  0A01               	xorlw	1	; case 99
 14669  00B8DC  B4D8               	btfsc	status,2,c
 14670  00B8DE  D7D3               	goto	l1386
 14671  00B8E0                     l1387:
 14672                           
 14673                           ;display.c: 415: _display_itoa_long(os.arc_size, 2, temp);
 14674                           
 14675                           ; BSR set to: 0
 14676  00B8E0  C0E6  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 14677  00B8E4  C0E7  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 14678  00B8E8  C0E8  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 14679  00B8EC  C0E9  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 14680  00B8F0  0E02               	movlw	2
 14681  00B8F2  0100               	movlb	0	; () banked
 14682  00B8F4  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 14683  00B8F6  0EBE               	movlw	low display_prepare@temp
 14684  00B8F8  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 14685  00B8FA  0E00               	movlw	high display_prepare@temp
 14686  00B8FC  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 14687  00B8FE  EC86  F077         	call	__display_itoa_long	;wreg free
 14688                           
 14689                           ;display.c: 416: for(cntr=0; temp[cntr]; ++cntr)
 14690  00B902  0E00               	movlw	0
 14691  00B904  0100               	movlb	0	; () banked
 14692  00B906  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14693  00B908  D018               	goto	l1389
 14694  00B90A                     
 14695                           ; BSR set to: 0
 14696                           ;display.c: 417: {;display.c: 418: display_content[0][10+cntr] = temp[cntr];
 14697                           
 14698                           ; BSR set to: 0
 14699  00B90A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14700  00B90C  0D01               	mullw	1
 14701  00B90E  0EBE               	movlw	low display_prepare@temp
 14702  00B910  24F3               	addwf	prodl,w,c
 14703  00B912  6ED9               	movwf	fsr2l,c
 14704  00B914  0E00               	movlw	high display_prepare@temp
 14705  00B916  20F4               	addwfc	prodh,w,c
 14706  00B918  6EDA               	movwf	fsr2h,c
 14707  00B91A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14708  00B91C  6FBC               	movwf	??_display_prepare& (0+255),b
 14709  00B91E  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14710  00B920  0E0A               	movlw	10
 14711  00B922  27BC               	addwf	??_display_prepare& (0+255),f,b
 14712  00B924  0E00               	movlw	0
 14713  00B926  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14714  00B928  0EAD               	movlw	low _display_content
 14715  00B92A  25BC               	addwf	??_display_prepare& (0+255),w,b
 14716  00B92C  6EE1               	movwf	fsr1l,c
 14717  00B92E  0E01               	movlw	high _display_content
 14718  00B930  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14719  00B932  6EE2               	movwf	fsr1h,c
 14720  00B934  CFDF FFE7          	movff	indf2,indf1
 14721                           
 14722                           ; BSR set to: 0
 14723  00B938  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14724  00B93A                     l1389:
 14725                           
 14726                           ; BSR set to: 0
 14727                           
 14728                           ; BSR set to: 0
 14729  00B93A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14730  00B93C  0D01               	mullw	1
 14731  00B93E  0EBE               	movlw	low display_prepare@temp
 14732  00B940  24F3               	addwf	prodl,w,c
 14733  00B942  6ED9               	movwf	fsr2l,c
 14734  00B944  0E00               	movlw	high display_prepare@temp
 14735  00B946  20F4               	addwfc	prodh,w,c
 14736  00B948  6EDA               	movwf	fsr2h,c
 14737  00B94A  50DF               	movf	indf2,w,c
 14738  00B94C  A4D8               	btfss	status,2,c
 14739  00B94E  D7DD               	goto	l1390
 14740                           
 14741                           ; BSR set to: 0
 14742                           ;display.c: 419: };display.c: 420: display_content[0][10+cntr] = 0x01;
 14743                           
 14744                           ; BSR set to: 0
 14745  00B950  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14746  00B952  6FBC               	movwf	??_display_prepare& (0+255),b
 14747  00B954  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14748  00B956  0E0A               	movlw	10
 14749  00B958  27BC               	addwf	??_display_prepare& (0+255),f,b
 14750  00B95A  0E00               	movlw	0
 14751  00B95C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14752  00B95E  0EAD               	movlw	low _display_content
 14753  00B960  25BC               	addwf	??_display_prepare& (0+255),w,b
 14754  00B962  6ED9               	movwf	fsr2l,c
 14755  00B964  0E01               	movlw	high _display_content
 14756  00B966  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14757  00B968  6EDA               	movwf	fsr2h,c
 14758  00B96A  0E01               	movlw	1
 14759  00B96C  6EDF               	movwf	indf2,c
 14760                           
 14761                           ; BSR set to: 0
 14762                           ;display.c: 423: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 14763  00B96E  C0D5  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 14764  00B972  C0D6  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 14765  00B976  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 14766  00B978  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 14767  00B97A  0E02               	movlw	2
 14768  00B97C  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 14769  00B97E  0EBE               	movlw	low display_prepare@temp
 14770  00B980  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 14771  00B982  0E00               	movlw	high display_prepare@temp
 14772  00B984  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 14773  00B986  EC86  F077         	call	__display_itoa_long	;wreg free
 14774                           
 14775                           ;display.c: 424: space = 6-strlen(temp);
 14776  00B98A  0EBE               	movlw	low display_prepare@temp
 14777  00B98C  0100               	movlb	0	; () banked
 14778  00B98E  6F60               	movwf	strlen@s& (0+255),b
 14779  00B990  0E00               	movlw	high display_prepare@temp
 14780  00B992  6F61               	movwf	(strlen@s+1)& (0+255),b
 14781  00B994  EC7D  F08E         	call	_strlen	;wreg free
 14782  00B998  0100               	movlb	0	; () banked
 14783  00B99A  5160               	movf	?_strlen& (0+255),w,b
 14784  00B99C  0800               	sublw	0
 14785  00B99E  0F06               	addlw	6
 14786  00B9A0  6FC8               	movwf	display_prepare@space& (0+255),b
 14787                           
 14788                           ; BSR set to: 0
 14789                           ;display.c: 425: for(cntr=0; temp[cntr]; ++cntr)
 14790  00B9A2  0E00               	movlw	0
 14791  00B9A4  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14792  00B9A6  D01C               	goto	l1392
 14793  00B9A8                     
 14794                           ; BSR set to: 0
 14795                           ;display.c: 426: {;display.c: 427: display_content[1][13+space+cntr] = temp[cntr];
 14796                           
 14797                           ; BSR set to: 0
 14798  00B9A8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14799  00B9AA  0D01               	mullw	1
 14800  00B9AC  0EBE               	movlw	low display_prepare@temp
 14801  00B9AE  24F3               	addwf	prodl,w,c
 14802  00B9B0  6ED9               	movwf	fsr2l,c
 14803  00B9B2  0E00               	movlw	high display_prepare@temp
 14804  00B9B4  20F4               	addwfc	prodh,w,c
 14805  00B9B6  6EDA               	movwf	fsr2h,c
 14806  00B9B8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14807  00B9BA  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 14808  00B9BE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14809  00B9C0  27BC               	addwf	??_display_prepare& (0+255),f,b
 14810  00B9C2  0E00               	movlw	0
 14811  00B9C4  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14812  00B9C6  0E0D               	movlw	13
 14813  00B9C8  27BC               	addwf	??_display_prepare& (0+255),f,b
 14814  00B9CA  0E00               	movlw	0
 14815  00B9CC  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14816  00B9CE  0EC1               	movlw	low (_display_content+20)
 14817  00B9D0  25BC               	addwf	??_display_prepare& (0+255),w,b
 14818  00B9D2  6EE1               	movwf	fsr1l,c
 14819  00B9D4  0E01               	movlw	high (_display_content+20)
 14820  00B9D6  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14821  00B9D8  6EE2               	movwf	fsr1h,c
 14822  00B9DA  CFDF FFE7          	movff	indf2,indf1
 14823                           
 14824                           ; BSR set to: 0
 14825  00B9DE  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14826  00B9E0                     l1392:
 14827                           
 14828                           ; BSR set to: 0
 14829                           
 14830                           ; BSR set to: 0
 14831  00B9E0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14832  00B9E2  0D01               	mullw	1
 14833  00B9E4  0EBE               	movlw	low display_prepare@temp
 14834  00B9E6  24F3               	addwf	prodl,w,c
 14835  00B9E8  6ED9               	movwf	fsr2l,c
 14836  00B9EA  0E00               	movlw	high display_prepare@temp
 14837  00B9EC  20F4               	addwfc	prodh,w,c
 14838  00B9EE  6EDA               	movwf	fsr2h,c
 14839  00B9F0  50DF               	movf	indf2,w,c
 14840  00B9F2  A4D8               	btfss	status,2,c
 14841  00B9F4  D7D9               	goto	l1393
 14842                           
 14843                           ; BSR set to: 0
 14844                           ;display.c: 428: };display.c: 431: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 14845                           
 14846                           ; BSR set to: 0
 14847  00B9F6  C0EA  F093         	movff	_os+32,motor_speed_from_index@speed_index	;volatile
 14848  00B9FA  C0EB  F094         	movff	_os+33,motor_speed_from_index@speed_index+1	;volatile
 14849  00B9FE  EC5E  F091         	call	_motor_speed_from_index	;wreg free
 14850  00BA02  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 14851  00BA06  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 14852  00BA0A  0E02               	movlw	2
 14853  00BA0C  0100               	movlb	0	; () banked
 14854  00BA0E  6F97               	movwf	__display_itoa@decimals& (0+255),b
 14855  00BA10  0EBE               	movlw	low display_prepare@temp
 14856  00BA12  6F98               	movwf	__display_itoa@text& (0+255),b
 14857  00BA14  0E00               	movlw	high display_prepare@temp
 14858  00BA16  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 14859  00BA18  EC0C  F06C         	call	__display_itoa	;wreg free
 14860                           
 14861                           ;display.c: 432: for(cntr=0; temp[cntr]; ++cntr)
 14862  00BA1C  0E00               	movlw	0
 14863  00BA1E  0100               	movlb	0	; () banked
 14864  00BA20  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14865  00BA22  D018               	goto	l1395
 14866  00BA24                     
 14867                           ; BSR set to: 0
 14868                           ;display.c: 433: {;display.c: 434: display_content[3][11+cntr] = temp[cntr];
 14869                           
 14870                           ; BSR set to: 0
 14871  00BA24  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14872  00BA26  0D01               	mullw	1
 14873  00BA28  0EBE               	movlw	low display_prepare@temp
 14874  00BA2A  24F3               	addwf	prodl,w,c
 14875  00BA2C  6ED9               	movwf	fsr2l,c
 14876  00BA2E  0E00               	movlw	high display_prepare@temp
 14877  00BA30  20F4               	addwfc	prodh,w,c
 14878  00BA32  6EDA               	movwf	fsr2h,c
 14879  00BA34  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14880  00BA36  6FBC               	movwf	??_display_prepare& (0+255),b
 14881  00BA38  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14882  00BA3A  0E0B               	movlw	11
 14883  00BA3C  27BC               	addwf	??_display_prepare& (0+255),f,b
 14884  00BA3E  0E00               	movlw	0
 14885  00BA40  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14886  00BA42  0EE9               	movlw	low (_display_content+60)
 14887  00BA44  25BC               	addwf	??_display_prepare& (0+255),w,b
 14888  00BA46  6EE1               	movwf	fsr1l,c
 14889  00BA48  0E01               	movlw	high (_display_content+60)
 14890  00BA4A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14891  00BA4C  6EE2               	movwf	fsr1h,c
 14892  00BA4E  CFDF FFE7          	movff	indf2,indf1
 14893                           
 14894                           ; BSR set to: 0
 14895  00BA52  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14896  00BA54                     l1395:
 14897                           
 14898                           ; BSR set to: 0
 14899                           
 14900                           ; BSR set to: 0
 14901  00BA54  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14902  00BA56  0D01               	mullw	1
 14903  00BA58  0EBE               	movlw	low display_prepare@temp
 14904  00BA5A  24F3               	addwf	prodl,w,c
 14905  00BA5C  6ED9               	movwf	fsr2l,c
 14906  00BA5E  0E00               	movlw	high display_prepare@temp
 14907  00BA60  20F4               	addwfc	prodh,w,c
 14908  00BA62  6EDA               	movwf	fsr2h,c
 14909  00BA64  50DF               	movf	indf2,w,c
 14910  00BA66  A4D8               	btfss	status,2,c
 14911  00BA68  D7DD               	goto	l1396
 14912  00BA6A  D12D               	goto	L75
 14913  00BA6C                     
 14914                           ; BSR set to: 0
 14915                           ;display.c: 447: memcpy(display_content, dc_zero, sizeof display_content);
 14916                           
 14917                           ; BSR set to: 0
 14918  00BA6C  0EAD               	movlw	low _display_content
 14919  00BA6E  6F60               	movwf	memcpy@d1& (0+255),b
 14920  00BA70  0E01               	movlw	high _display_content
 14921  00BA72  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14922  00BA74  0E3E               	movlw	low _dc_zero
 14923  00BA76  6F62               	movwf	memcpy@s1& (0+255),b
 14924  00BA78  0E9E               	movlw	high _dc_zero
 14925  00BA7A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14926  00BA7C  0E00               	movlw	0
 14927  00BA7E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14928  00BA80  0E50               	movlw	80
 14929  00BA82  6F64               	movwf	memcpy@n& (0+255),b
 14930  00BA84  EC63  F08A         	call	_memcpy	;wreg free
 14931                           
 14932                           ;display.c: 450: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 14933  00BA88  C0D5  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 14934  00BA8C  C0D6  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 14935  00BA90  0100               	movlb	0	; () banked
 14936  00BA92  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 14937  00BA94  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 14938  00BA96  0E02               	movlw	2
 14939  00BA98  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 14940  00BA9A  0EBE               	movlw	low display_prepare@temp
 14941  00BA9C  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 14942  00BA9E  0E00               	movlw	high display_prepare@temp
 14943  00BAA0  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 14944  00BAA2  EC86  F077         	call	__display_itoa_long	;wreg free
 14945                           
 14946                           ;display.c: 451: for(cntr=0; temp[cntr]; ++cntr)
 14947  00BAA6  0E00               	movlw	0
 14948  00BAA8  0100               	movlb	0	; () banked
 14949  00BAAA  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14950  00BAAC  D018               	goto	l1399
 14951  00BAAE                     
 14952                           ; BSR set to: 0
 14953                           ;display.c: 452: {;display.c: 453: display_content[1][13+cntr] = temp[cntr];
 14954                           
 14955                           ; BSR set to: 0
 14956  00BAAE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14957  00BAB0  0D01               	mullw	1
 14958  00BAB2  0EBE               	movlw	low display_prepare@temp
 14959  00BAB4  24F3               	addwf	prodl,w,c
 14960  00BAB6  6ED9               	movwf	fsr2l,c
 14961  00BAB8  0E00               	movlw	high display_prepare@temp
 14962  00BABA  20F4               	addwfc	prodh,w,c
 14963  00BABC  6EDA               	movwf	fsr2h,c
 14964  00BABE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14965  00BAC0  6FBC               	movwf	??_display_prepare& (0+255),b
 14966  00BAC2  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14967  00BAC4  0E0D               	movlw	13
 14968  00BAC6  27BC               	addwf	??_display_prepare& (0+255),f,b
 14969  00BAC8  0E00               	movlw	0
 14970  00BACA  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14971  00BACC  0EC1               	movlw	low (_display_content+20)
 14972  00BACE  25BC               	addwf	??_display_prepare& (0+255),w,b
 14973  00BAD0  6EE1               	movwf	fsr1l,c
 14974  00BAD2  0E01               	movlw	high (_display_content+20)
 14975  00BAD4  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14976  00BAD6  6EE2               	movwf	fsr1h,c
 14977  00BAD8  CFDF FFE7          	movff	indf2,indf1
 14978                           
 14979                           ; BSR set to: 0
 14980  00BADC  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14981  00BADE                     l1399:
 14982                           
 14983                           ; BSR set to: 0
 14984                           
 14985                           ; BSR set to: 0
 14986  00BADE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14987  00BAE0  0D01               	mullw	1
 14988  00BAE2  0EBE               	movlw	low display_prepare@temp
 14989  00BAE4  24F3               	addwf	prodl,w,c
 14990  00BAE6  6ED9               	movwf	fsr2l,c
 14991  00BAE8  0E00               	movlw	high display_prepare@temp
 14992  00BAEA  20F4               	addwfc	prodh,w,c
 14993  00BAEC  6EDA               	movwf	fsr2h,c
 14994  00BAEE  50DF               	movf	indf2,w,c
 14995  00BAF0  A4D8               	btfss	status,2,c
 14996  00BAF2  D7DD               	goto	l1400
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;display.c: 454: };display.c: 455: display_content[1][13+cntr] = 0x01;
 15000                           
 15001                           ; BSR set to: 0
 15002  00BAF4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15003  00BAF6  6FBC               	movwf	??_display_prepare& (0+255),b
 15004  00BAF8  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 15005  00BAFA  0E0D               	movlw	13
 15006  00BAFC  27BC               	addwf	??_display_prepare& (0+255),f,b
 15007  00BAFE  0E00               	movlw	0
 15008  00BB00  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 15009  00BB02  0EC1               	movlw	low (_display_content+20)
 15010  00BB04  25BC               	addwf	??_display_prepare& (0+255),w,b
 15011  00BB06  6ED9               	movwf	fsr2l,c
 15012  00BB08  0E01               	movlw	high (_display_content+20)
 15013  00BB0A  D6AA               	goto	L32
 15014  00BB0C                     
 15015                           ; BSR set to: 0
 15016                           ;display.c: 460: memcpy(display_content, dc_manual, sizeof display_content);
 15017                           
 15018                           ; BSR set to: 0
 15019  00BB0C  0EAD               	movlw	low _display_content
 15020  00BB0E  6F60               	movwf	memcpy@d1& (0+255),b
 15021  00BB10  0E01               	movlw	high _display_content
 15022  00BB12  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 15023  00BB14  0EEE               	movlw	low _dc_manual
 15024  00BB16  6F62               	movwf	memcpy@s1& (0+255),b
 15025  00BB18  0E9D               	movlw	high _dc_manual
 15026  00BB1A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 15027  00BB1C  0E00               	movlw	0
 15028  00BB1E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 15029  00BB20  0E50               	movlw	80
 15030  00BB22  6F64               	movwf	memcpy@n& (0+255),b
 15031  00BB24  EC63  F08A         	call	_memcpy	;wreg free
 15032                           
 15033                           ;display.c: 461: switch(os.displayState)
 15034  00BB28  D044               	goto	l1403
 15035  00BB2A                     
 15036                           ;display.c: 464: display_content[2][6] = 'W';
 15037  00BB2A  0E57               	movlw	87
 15038  00BB2C  0101               	movlb	1	; () banked
 15039  00BB2E  6FDB               	movwf	(_display_content+46)& (0+255),b
 15040                           
 15041                           ;display.c: 465: display_content[2][7] = ' ';
 15042  00BB30  0E20               	movlw	32
 15043  00BB32  6FDC               	movwf	(_display_content+47)& (0+255),b
 15044                           
 15045                           ;display.c: 466: break;
 15046  00BB34  D049               	goto	l1405
 15047  00BB36                     
 15048                           ;display.c: 468: memcpy(display_content[2], "        ", 8);
 15049                           
 15050                           ; BSR set to: 1
 15051  00BB36  0ED5               	movlw	low (_display_content+40)
 15052  00BB38  0100               	movlb	0	; () banked
 15053  00BB3A  6F60               	movwf	memcpy@d1& (0+255),b
 15054  00BB3C  0E01               	movlw	high (_display_content+40)
 15055  00BB3E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 15056  00BB40  0E1C               	movlw	low STR_1
 15057  00BB42  6F62               	movwf	memcpy@s1& (0+255),b
 15058  00BB44  0EA2               	movlw	high STR_1
 15059  00BB46  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 15060  00BB48  0E00               	movlw	0
 15061  00BB4A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 15062  00BB4C  0E08               	movlw	8
 15063  00BB4E  6F64               	movwf	memcpy@n& (0+255),b
 15064  00BB50  EC63  F08A         	call	_memcpy	;wreg free
 15065                           
 15066                           ;display.c: 469: memcpy(display_content[3], "Cancel", 6);
 15067  00BB54  0EE9               	movlw	low (_display_content+60)
 15068  00BB56  0100               	movlb	0	; () banked
 15069  00BB58  6F60               	movwf	memcpy@d1& (0+255),b
 15070  00BB5A  0E01               	movlw	high (_display_content+60)
 15071  00BB5C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 15072  00BB5E  0E25               	movlw	low STR_2
 15073  00BB60  6F62               	movwf	memcpy@s1& (0+255),b
 15074  00BB62  0EA2               	movlw	high STR_2
 15075  00BB64  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 15076  00BB66  0E00               	movlw	0
 15077  00BB68  6F65               	movwf	(memcpy@n+1)& (0+255),b
 15078  00BB6A  0E06               	movlw	6
 15079  00BB6C  6F64               	movwf	memcpy@n& (0+255),b
 15080  00BB6E  EC63  F08A         	call	_memcpy	;wreg free
 15081                           
 15082                           ;display.c: 470: break;
 15083  00BB72  D02A               	goto	l1405
 15084  00BB74                     
 15085                           ;display.c: 472: memcpy(&display_content[2][0], "        ", 8);
 15086  00BB74  0ED5               	movlw	low (_display_content+40)
 15087  00BB76  0100               	movlb	0	; () banked
 15088  00BB78  6F60               	movwf	memcpy@d1& (0+255),b
 15089  00BB7A  0E01               	movlw	high (_display_content+40)
 15090  00BB7C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 15091  00BB7E  0E1C               	movlw	low STR_1
 15092  00BB80  6F62               	movwf	memcpy@s1& (0+255),b
 15093  00BB82  0EA2               	movlw	high STR_1
 15094  00BB84  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 15095  00BB86  0E00               	movlw	0
 15096  00BB88  6F65               	movwf	(memcpy@n+1)& (0+255),b
 15097  00BB8A  0E08               	movlw	8
 15098  00BB8C  6F64               	movwf	memcpy@n& (0+255),b
 15099  00BB8E  EC63  F08A         	call	_memcpy	;wreg free
 15100                           
 15101                           ;display.c: 473: memcpy(&display_content[3][0], "Stop ", 5);
 15102  00BB92  0EE9               	movlw	low (_display_content+60)
 15103  00BB94  0100               	movlb	0	; () banked
 15104  00BB96  6F60               	movwf	memcpy@d1& (0+255),b
 15105  00BB98  0E01               	movlw	high (_display_content+60)
 15106  00BB9A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 15107  00BB9C  0E2C               	movlw	low STR_6
 15108  00BB9E  6F62               	movwf	memcpy@s1& (0+255),b
 15109  00BBA0  0EA2               	movlw	high STR_6
 15110  00BBA2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 15111  00BBA4  0E00               	movlw	0
 15112  00BBA6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 15113  00BBA8  0E05               	movlw	5
 15114  00BBAA  6F64               	movwf	memcpy@n& (0+255),b
 15115  00BBAC  EC63  F08A         	call	_memcpy	;wreg free
 15116                           
 15117                           ;display.c: 475: }
 15118                           
 15119                           ;display.c: 474: break;
 15120  00BBB0  D00B               	goto	l1405
 15121  00BBB2                     l1403:
 15122  00BBB2  0100               	movlb	0	; () banked
 15123  00BBB4  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
 15124                           
 15125                           ; Switch size 1, requested type "space"
 15126                           ; Number of cases is 3, Range of values is 130 to 132
 15127                           ; switch strategies available:
 15128                           ; Name         Instructions Cycles
 15129                           ; simple_byte           10     6 (average)
 15130                           ;	Chosen strategy is simple_byte
 15131  00BBB6  0A82               	xorlw	130	; case 130
 15132  00BBB8  B4D8               	btfsc	status,2,c
 15133  00BBBA  D7BD               	goto	l1406
 15134  00BBBC  0A01               	xorlw	1	; case 131
 15135  00BBBE  B4D8               	btfsc	status,2,c
 15136  00BBC0  D7B4               	goto	l1404
 15137  00BBC2  0A07               	xorlw	7	; case 132
 15138  00BBC4  B4D8               	btfsc	status,2,c
 15139  00BBC6  D7D6               	goto	l1407
 15140  00BBC8                     l1405:
 15141                           
 15142                           ;display.c: 478: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 15143                           
 15144                           ; BSR set to: 0
 15145  00BBC8  C0D5  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 15146  00BBCC  C0D6  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 15147  00BBD0  0100               	movlb	0	; () banked
 15148  00BBD2  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 15149  00BBD4  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 15150  00BBD6  0E02               	movlw	2
 15151  00BBD8  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 15152  00BBDA  0EBE               	movlw	low display_prepare@temp
 15153  00BBDC  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 15154  00BBDE  0E00               	movlw	high display_prepare@temp
 15155  00BBE0  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 15156  00BBE2  EC86  F077         	call	__display_itoa_long	;wreg free
 15157                           
 15158                           ;display.c: 479: space = 7-strlen(temp);
 15159  00BBE6  0EBE               	movlw	low display_prepare@temp
 15160  00BBE8  0100               	movlb	0	; () banked
 15161  00BBEA  6F60               	movwf	strlen@s& (0+255),b
 15162  00BBEC  0E00               	movlw	high display_prepare@temp
 15163  00BBEE  6F61               	movwf	(strlen@s+1)& (0+255),b
 15164  00BBF0  EC7D  F08E         	call	_strlen	;wreg free
 15165  00BBF4  0100               	movlb	0	; () banked
 15166  00BBF6  5160               	movf	?_strlen& (0+255),w,b
 15167  00BBF8  0800               	sublw	0
 15168  00BBFA  0F07               	addlw	7
 15169  00BBFC  6FC8               	movwf	display_prepare@space& (0+255),b
 15170                           
 15171                           ; BSR set to: 0
 15172                           ;display.c: 480: for(cntr=0; temp[cntr]; ++cntr)
 15173  00BBFE  0E00               	movlw	0
 15174  00BC00  6FC9               	movwf	display_prepare@cntr& (0+255),b
 15175  00BC02  D01C               	goto	l1408
 15176  00BC04                     
 15177                           ; BSR set to: 0
 15178                           ;display.c: 481: {;display.c: 482: display_content[1][12+space+cntr] = temp[cntr];
 15179                           
 15180                           ; BSR set to: 0
 15181  00BC04  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15182  00BC06  0D01               	mullw	1
 15183  00BC08  0EBE               	movlw	low display_prepare@temp
 15184  00BC0A  24F3               	addwf	prodl,w,c
 15185  00BC0C  6ED9               	movwf	fsr2l,c
 15186  00BC0E  0E00               	movlw	high display_prepare@temp
 15187  00BC10  20F4               	addwfc	prodh,w,c
 15188  00BC12  6EDA               	movwf	fsr2h,c
 15189  00BC14  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15190  00BC16  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 15191  00BC1A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 15192  00BC1C  27BC               	addwf	??_display_prepare& (0+255),f,b
 15193  00BC1E  0E00               	movlw	0
 15194  00BC20  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 15195  00BC22  0E0C               	movlw	12
 15196  00BC24  27BC               	addwf	??_display_prepare& (0+255),f,b
 15197  00BC26  0E00               	movlw	0
 15198  00BC28  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 15199  00BC2A  0EC1               	movlw	low (_display_content+20)
 15200  00BC2C  25BC               	addwf	??_display_prepare& (0+255),w,b
 15201  00BC2E  6EE1               	movwf	fsr1l,c
 15202  00BC30  0E01               	movlw	high (_display_content+20)
 15203  00BC32  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 15204  00BC34  6EE2               	movwf	fsr1h,c
 15205  00BC36  CFDF FFE7          	movff	indf2,indf1
 15206                           
 15207                           ; BSR set to: 0
 15208  00BC3A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 15209  00BC3C                     l1408:
 15210                           
 15211                           ; BSR set to: 0
 15212                           
 15213                           ; BSR set to: 0
 15214  00BC3C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15215  00BC3E  0D01               	mullw	1
 15216  00BC40  0EBE               	movlw	low display_prepare@temp
 15217  00BC42  24F3               	addwf	prodl,w,c
 15218  00BC44  6ED9               	movwf	fsr2l,c
 15219  00BC46  0E00               	movlw	high display_prepare@temp
 15220  00BC48  20F4               	addwfc	prodh,w,c
 15221  00BC4A  6EDA               	movwf	fsr2h,c
 15222  00BC4C  50DF               	movf	indf2,w,c
 15223  00BC4E  A4D8               	btfss	status,2,c
 15224  00BC50  D7D9               	goto	l1409
 15225                           
 15226                           ; BSR set to: 0
 15227                           ;display.c: 483: };display.c: 486: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 15228                           
 15229                           ; BSR set to: 0
 15230  00BC52  C0ED  F093         	movff	_os+35,motor_speed_from_index@speed_index	;volatile
 15231  00BC56  C0EE  F094         	movff	_os+36,motor_speed_from_index@speed_index+1	;volatile
 15232  00BC5A  EC5E  F091         	call	_motor_speed_from_index	;wreg free
 15233  00BC5E  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 15234  00BC62  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 15235  00BC66  0E02               	movlw	2
 15236  00BC68  0100               	movlb	0	; () banked
 15237  00BC6A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 15238  00BC6C  0EBE               	movlw	low display_prepare@temp
 15239  00BC6E  6F98               	movwf	__display_itoa@text& (0+255),b
 15240  00BC70  0E00               	movlw	high display_prepare@temp
 15241  00BC72  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 15242  00BC74  EC0C  F06C         	call	__display_itoa	;wreg free
 15243                           
 15244                           ;display.c: 487: for(cntr=0; temp[cntr]; ++cntr)
 15245  00BC78  0E00               	movlw	0
 15246  00BC7A  0100               	movlb	0	; () banked
 15247  00BC7C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 15248  00BC7E  D018               	goto	l1411
 15249  00BC80                     
 15250                           ; BSR set to: 0
 15251                           ;display.c: 488: {;display.c: 489: display_content[3][11+cntr] = temp[cntr];
 15252                           
 15253                           ; BSR set to: 0
 15254  00BC80  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15255  00BC82  0D01               	mullw	1
 15256  00BC84  0EBE               	movlw	low display_prepare@temp
 15257  00BC86  24F3               	addwf	prodl,w,c
 15258  00BC88  6ED9               	movwf	fsr2l,c
 15259  00BC8A  0E00               	movlw	high display_prepare@temp
 15260  00BC8C  20F4               	addwfc	prodh,w,c
 15261  00BC8E  6EDA               	movwf	fsr2h,c
 15262  00BC90  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15263  00BC92  6FBC               	movwf	??_display_prepare& (0+255),b
 15264  00BC94  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 15265  00BC96  0E0B               	movlw	11
 15266  00BC98  27BC               	addwf	??_display_prepare& (0+255),f,b
 15267  00BC9A  0E00               	movlw	0
 15268  00BC9C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 15269  00BC9E  0EE9               	movlw	low (_display_content+60)
 15270  00BCA0  25BC               	addwf	??_display_prepare& (0+255),w,b
 15271  00BCA2  6EE1               	movwf	fsr1l,c
 15272  00BCA4  0E01               	movlw	high (_display_content+60)
 15273  00BCA6  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 15274  00BCA8  6EE2               	movwf	fsr1h,c
 15275  00BCAA  CFDF FFE7          	movff	indf2,indf1
 15276                           
 15277                           ; BSR set to: 0
 15278  00BCAE  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 15279  00BCB0                     l1411:
 15280                           
 15281                           ; BSR set to: 0
 15282                           
 15283                           ; BSR set to: 0
 15284  00BCB0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15285  00BCB2  0D01               	mullw	1
 15286  00BCB4  0EBE               	movlw	low display_prepare@temp
 15287  00BCB6  24F3               	addwf	prodl,w,c
 15288  00BCB8  6ED9               	movwf	fsr2l,c
 15289  00BCBA  0E00               	movlw	high display_prepare@temp
 15290  00BCBC  20F4               	addwfc	prodh,w,c
 15291  00BCBE  6EDA               	movwf	fsr2h,c
 15292  00BCC0  50DF               	movf	indf2,w,c
 15293  00BCC2  A4D8               	btfss	status,2,c
 15294  00BCC4  D7DD               	goto	l1412
 15295  00BCC6                     L75:
 15296                           
 15297                           ; BSR set to: 0
 15298                           ;display.c: 490: };display.c: 491: display_content[3][11+cntr] = 0x01;
 15299                           
 15300                           ; BSR set to: 0
 15301  00BCC6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15302  00BCC8  6FBC               	movwf	??_display_prepare& (0+255),b
 15303  00BCCA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 15304  00BCCC  0E0B               	movlw	11
 15305  00BCCE  27BC               	addwf	??_display_prepare& (0+255),f,b
 15306  00BCD0  0E00               	movlw	0
 15307  00BCD2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 15308  00BCD4  0EE9               	movlw	low (_display_content+60)
 15309  00BCD6  25BC               	addwf	??_display_prepare& (0+255),w,b
 15310  00BCD8  6ED9               	movwf	fsr2l,c
 15311  00BCDA  0E01               	movlw	high (_display_content+60)
 15312  00BCDC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 15313  00BCDE  6EDA               	movwf	fsr2h,c
 15314  00BCE0  0E01               	movlw	1
 15315  00BCE2  6EDF               	movwf	indf2,c
 15316                           
 15317                           ;display.c: 492: display_content[3][12+cntr] = '/';
 15318  00BCE4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15319  00BCE6  6FBC               	movwf	??_display_prepare& (0+255),b
 15320  00BCE8  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 15321  00BCEA  0E0C               	movlw	12
 15322  00BCEC  27BC               	addwf	??_display_prepare& (0+255),f,b
 15323  00BCEE  0E00               	movlw	0
 15324  00BCF0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 15325  00BCF2  0EE9               	movlw	low (_display_content+60)
 15326  00BCF4  25BC               	addwf	??_display_prepare& (0+255),w,b
 15327  00BCF6  6ED9               	movwf	fsr2l,c
 15328  00BCF8  0E01               	movlw	high (_display_content+60)
 15329  00BCFA  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 15330  00BCFC  6EDA               	movwf	fsr2h,c
 15331  00BCFE  0E2F               	movlw	47
 15332  00BD00  6EDF               	movwf	indf2,c
 15333                           
 15334                           ;display.c: 493: display_content[3][13+cntr] = 's';
 15335  00BD02  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15336  00BD04  6FBC               	movwf	??_display_prepare& (0+255),b
 15337  00BD06  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 15338  00BD08  0E0D               	movlw	13
 15339  00BD0A  27BC               	addwf	??_display_prepare& (0+255),f,b
 15340  00BD0C  0E00               	movlw	0
 15341  00BD0E  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 15342  00BD10  0EE9               	movlw	low (_display_content+60)
 15343  00BD12  25BC               	addwf	??_display_prepare& (0+255),w,b
 15344  00BD14  6ED9               	movwf	fsr2l,c
 15345  00BD16  0E01               	movlw	high (_display_content+60)
 15346  00BD18  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 15347  00BD1A  6EDA               	movwf	fsr2h,c
 15348  00BD1C  0E73               	movlw	115
 15349  00BD1E                     L23:
 15350  00BD1E  6EDF               	movwf	indf2,c
 15351                           
 15352                           ;display.c: 494: break;
 15353  00BD20  D090               	goto	l1331
 15354  00BD22                     
 15355                           ; BSR set to: 0
 15356                           ;display.c: 497: _display_clear();
 15357                           
 15358                           ; BSR set to: 0
 15359  00BD22  EC6A  F08D         	call	__display_clear	;wreg free
 15360                           
 15361                           ;display.c: 498: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 15362  00BD26  0100               	movlb	0	; () banked
 15363  00BD28  51CD               	movf	(_os+3)& (0+255),w,b	;volatile
 15364  00BD2A  6F95               	movwf	__display_itoa@value& (0+255),b
 15365  00BD2C  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 15366  00BD2E  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 15367  00BD30  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 15368  00BD32  0E00               	movlw	0
 15369  00BD34  6F97               	movwf	__display_itoa@decimals& (0+255),b
 15370  00BD36  0EAD               	movlw	low _display_content
 15371  00BD38  6F98               	movwf	__display_itoa@text& (0+255),b
 15372  00BD3A  0E01               	movlw	high _display_content
 15373  00BD3C  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 15374  00BD3E  EC0C  F06C         	call	__display_itoa	;wreg free
 15375                           
 15376                           ;display.c: 499: if(PORTEbits.RE2)
 15377  00BD42  A484               	btfss	3972,2,c	;volatile
 15378  00BD44  D002               	goto	l1415
 15379                           
 15380                           ;display.c: 500: display_content[0][8] = 'H';
 15381  00BD46  0E48               	movlw	72
 15382  00BD48  D001               	goto	L27
 15383  00BD4A                     l1415:
 15384                           
 15385                           ;display.c: 501: else;display.c: 502: display_content[0][8] = 'L';
 15386                           
 15387                           ; BSR set to: 1
 15388  00BD4A  0E4C               	movlw	76
 15389  00BD4C                     L27:
 15390  00BD4C  0101               	movlb	1	; () banked
 15391  00BD4E  6FB5               	movwf	(_display_content+8)& (0+255),b
 15392                           
 15393                           ; BSR set to: 1
 15394                           ;display.c: 503: if(PORTEbits.RE0)
 15395                           
 15396                           ; BSR set to: 1
 15397  00BD50  A084               	btfss	3972,0,c	;volatile
 15398  00BD52  D002               	goto	l1417
 15399                           
 15400                           ; BSR set to: 1
 15401                           ;display.c: 504: display_content[0][9] = 'H';
 15402  00BD54  0E48               	movlw	72
 15403  00BD56  D001               	goto	L28
 15404  00BD58                     l1417:
 15405                           
 15406                           ; BSR set to: 1
 15407                           ;display.c: 505: else;display.c: 506: display_content[0][9] = 'L';
 15408                           
 15409                           ; BSR set to: 1
 15410  00BD58  0E4C               	movlw	76
 15411  00BD5A                     L28:
 15412  00BD5A  6FB6               	movwf	(_display_content+9)& (0+255),b
 15413                           
 15414                           ; BSR set to: 1
 15415                           ;display.c: 507: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 15416                           
 15417                           ; BSR set to: 1
 15418  00BD5C  0100               	movlb	0	; () banked
 15419  00BD5E  51CE               	movf	(_os+4)& (0+255),w,b	;volatile
 15420  00BD60  6F95               	movwf	__display_itoa@value& (0+255),b
 15421  00BD62  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 15422  00BD64  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 15423  00BD66  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 15424  00BD68  0E00               	movlw	0
 15425  00BD6A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 15426  00BD6C  0EC1               	movlw	low (_display_content+20)
 15427  00BD6E  6F98               	movwf	__display_itoa@text& (0+255),b
 15428  00BD70  0E01               	movlw	high (_display_content+20)
 15429  00BD72  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 15430  00BD74  EC0C  F06C         	call	__display_itoa	;wreg free
 15431                           
 15432                           ;display.c: 508: if(PORTEbits.RE1)
 15433  00BD78  A284               	btfss	3972,1,c	;volatile
 15434  00BD7A  D002               	goto	l1419
 15435                           
 15436                           ;display.c: 509: display_content[1][8] = 'H';
 15437  00BD7C  0E48               	movlw	72
 15438  00BD7E  D001               	goto	L29
 15439  00BD80                     l1419:
 15440                           
 15441                           ;display.c: 510: else;display.c: 511: display_content[1][8] = 'L';
 15442                           
 15443                           ; BSR set to: 1
 15444  00BD80  0E4C               	movlw	76
 15445  00BD82                     L29:
 15446  00BD82  0101               	movlb	1	; () banked
 15447  00BD84  6FC9               	movwf	(_display_content+28)& (0+255),b
 15448                           
 15449                           ; BSR set to: 1
 15450                           ;display.c: 512: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 15451                           
 15452                           ; BSR set to: 1
 15453  00BD86  0100               	movlb	0	; () banked
 15454  00BD88  51CF               	movf	(_os+5)& (0+255),w,b	;volatile
 15455  00BD8A  6F95               	movwf	__display_itoa@value& (0+255),b
 15456  00BD8C  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 15457  00BD8E  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 15458  00BD90  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 15459  00BD92  0E00               	movlw	0
 15460  00BD94  6F97               	movwf	__display_itoa@decimals& (0+255),b
 15461  00BD96  0ED5               	movlw	low (_display_content+40)
 15462  00BD98  6F98               	movwf	__display_itoa@text& (0+255),b
 15463  00BD9A  0E01               	movlw	high (_display_content+40)
 15464  00BD9C  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 15465  00BD9E  EC0C  F06C         	call	__display_itoa	;wreg free
 15466                           
 15467                           ;display.c: 513: if(PORTAbits.RA0)
 15468  00BDA2  A080               	btfss	3968,0,c	;volatile
 15469  00BDA4  D002               	goto	l1421
 15470                           
 15471                           ;display.c: 514: display_content[2][8] = 'H';
 15472  00BDA6  0E48               	movlw	72
 15473  00BDA8  D001               	goto	L30
 15474  00BDAA                     l1421:
 15475                           
 15476                           ;display.c: 515: else;display.c: 516: display_content[2][8] = 'L';
 15477                           
 15478                           ; BSR set to: 1
 15479  00BDAA  0E4C               	movlw	76
 15480  00BDAC                     L30:
 15481  00BDAC  0101               	movlb	1	; () banked
 15482  00BDAE  6FDD               	movwf	(_display_content+48)& (0+255),b
 15483                           
 15484                           ; BSR set to: 1
 15485                           ;display.c: 517: if(PORTAbits.RA2)
 15486                           
 15487                           ; BSR set to: 1
 15488  00BDB0  A480               	btfss	3968,2,c	;volatile
 15489  00BDB2  D002               	goto	l1423
 15490                           
 15491                           ; BSR set to: 1
 15492                           ;display.c: 518: display_content[2][9] = 'H';
 15493  00BDB4  0E48               	movlw	72
 15494  00BDB6  D001               	goto	L31
 15495  00BDB8                     l1423:
 15496                           
 15497                           ; BSR set to: 1
 15498                           ;display.c: 519: else;display.c: 520: display_content[2][9] = 'L';
 15499                           
 15500                           ; BSR set to: 1
 15501  00BDB8  0E4C               	movlw	76
 15502  00BDBA                     L31:
 15503  00BDBA  6FDE               	movwf	(_display_content+49)& (0+255),b
 15504                           
 15505                           ; BSR set to: 1
 15506                           ;display.c: 521: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 15507                           
 15508                           ; BSR set to: 1
 15509  00BDBC  0100               	movlb	0	; () banked
 15510  00BDBE  51D0               	movf	(_os+6)& (0+255),w,b	;volatile
 15511  00BDC0  6F95               	movwf	__display_itoa@value& (0+255),b
 15512  00BDC2  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 15513  00BDC4  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 15514  00BDC6  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 15515  00BDC8  0E00               	movlw	0
 15516  00BDCA  6F97               	movwf	__display_itoa@decimals& (0+255),b
 15517  00BDCC  0EE9               	movlw	low (_display_content+60)
 15518  00BDCE  6F98               	movwf	__display_itoa@text& (0+255),b
 15519  00BDD0  0E01               	movlw	high (_display_content+60)
 15520  00BDD2  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 15521  00BDD4  EC0C  F06C         	call	__display_itoa	;wreg free
 15522                           
 15523                           ;display.c: 522: if(PORTAbits.RA1)
 15524  00BDD8  A280               	btfss	3968,1,c	;volatile
 15525  00BDDA  D002               	goto	l1425
 15526                           
 15527                           ;display.c: 523: display_content[3][8] = 'H';
 15528  00BDDC  0E48               	movlw	72
 15529  00BDDE  D001               	goto	L24
 15530  00BDE0                     l1425:
 15531                           
 15532                           ;display.c: 524: else;display.c: 525: display_content[3][8] = 'L';
 15533                           
 15534                           ; BSR set to: 1
 15535  00BDE0  0E4C               	movlw	76
 15536  00BDE2                     L24:
 15537  00BDE2  0101               	movlb	1	; () banked
 15538  00BDE4  6FF1               	movwf	(_display_content+68)& (0+255),b
 15539                           
 15540                           ; BSR set to: 1
 15541                           ;display.c: 527: }
 15542                           
 15543                           ; BSR set to: 1
 15544                           ;display.c: 526: break;
 15545  00BDE6  D02D               	goto	l1331
 15546  00BDE8                     l1322:
 15547                           
 15548                           ; BSR set to: 1
 15549  00BDE8  0100               	movlb	0	; () banked
 15550  00BDEA  51D7               	movf	(_os+13)& (0+255),w,b	;volatile
 15551  00BDEC  0BF0               	andlw	240
 15552  00BDEE  6FBC               	movwf	??_display_prepare& (0+255),b
 15553  00BDF0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 15554                           
 15555                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15556                           ; Switch size 1, requested type "space"
 15557                           ; Number of cases is 1, Range of values is 0 to 0
 15558                           ; switch strategies available:
 15559                           ; Name         Instructions Cycles
 15560                           ; simple_byte            4     3 (average)
 15561                           ;	Chosen strategy is simple_byte
 15562  00BDF2  51BD               	movf	(??_display_prepare+1)& (0+255),w,b
 15563  00BDF4  0A00               	xorlw	0	; case 0
 15564  00BDF6  A4D8               	btfss	status,2,c
 15565  00BDF8  D024               	goto	l1331
 15566                           
 15567                           ; BSR set to: 0
 15568                           ; Switch size 1, requested type "space"
 15569                           ; Number of cases is 10, Range of values is 0 to 240
 15570                           ; switch strategies available:
 15571                           ; Name         Instructions Cycles
 15572                           ; simple_byte           31    16 (average)
 15573                           ;	Chosen strategy is simple_byte
 15574  00BDFA  51BC               	movf	??_display_prepare& (0+255),w,b
 15575  00BDFC  0A00               	xorlw	0	; case 0
 15576  00BDFE  B4D8               	btfsc	status,2,c
 15577  00BE00  EF0D  F059         	goto	l1323
 15578  00BE04  0A10               	xorlw	16	; case 16
 15579  00BE06  B4D8               	btfsc	status,2,c
 15580  00BE08  EF3C  F059         	goto	l1332
 15581  00BE0C  0A30               	xorlw	48	; case 32
 15582  00BE0E  B4D8               	btfsc	status,2,c
 15583  00BE10  EF8C  F059         	goto	l1342
 15584  00BE14  0A10               	xorlw	16	; case 48
 15585  00BE16  B4D8               	btfsc	status,2,c
 15586  00BE18  EFAF  F059         	goto	l1347
 15587  00BE1C  0A70               	xorlw	112	; case 64
 15588  00BE1E  B4D8               	btfsc	status,2,c
 15589  00BE20  EF1F  F05A         	goto	l1356
 15590  00BE24  0A10               	xorlw	16	; case 80
 15591  00BE26  B4D8               	btfsc	status,2,c
 15592  00BE28  D46D               	goto	l1371
 15593  00BE2A  0A30               	xorlw	48	; case 96
 15594  00BE2C  B4D8               	btfsc	status,2,c
 15595  00BE2E  D51C               	goto	l1384
 15596  00BE30  0A10               	xorlw	16	; case 112
 15597  00BE32  B4D8               	btfsc	status,2,c
 15598  00BE34  D61B               	goto	l1398
 15599  00BE36  0AF0               	xorlw	240	; case 128
 15600  00BE38  B4D8               	btfsc	status,2,c
 15601  00BE3A  D668               	goto	l1402
 15602  00BE3C  0A70               	xorlw	112	; case 240
 15603  00BE3E  B4D8               	btfsc	status,2,c
 15604  00BE40  D770               	goto	l1414
 15605  00BE42                     l1331:
 15606                           
 15607                           ;display.c: 529: if(!PORTDbits.RD2)
 15608  00BE42  B483               	btfsc	3971,2,c	;volatile
 15609  00BE44  0012               	return	
 15610                           
 15611                           ;display.c: 530: {;display.c: 531: display_content[0][0] = 'E';
 15612  00BE46  0E45               	movlw	69
 15613  00BE48  0101               	movlb	1	; () banked
 15614  00BE4A  6FAD               	movwf	_display_content& (0+255),b
 15615                           
 15616                           ;display.c: 532: display_content[0][1] = 'R';
 15617  00BE4C  0E52               	movlw	82
 15618  00BE4E  6FAE               	movwf	(_display_content+1)& (0+255),b
 15619                           
 15620                           ;display.c: 533: display_content[0][2] = 'R';
 15621  00BE50  0E52               	movlw	82
 15622  00BE52  6FAF               	movwf	(_display_content+2)& (0+255),b
 15623                           
 15624                           ;display.c: 534: display_content[0][3] = 'O';
 15625  00BE54  0E4F               	movlw	79
 15626  00BE56  6FB0               	movwf	(_display_content+3)& (0+255),b
 15627                           
 15628                           ;display.c: 535: display_content[0][4] = 'R';
 15629  00BE58  0E52               	movlw	82
 15630  00BE5A  6FB1               	movwf	(_display_content+4)& (0+255),b
 15631  00BE5C  0012               	return	
 15632  00BE5E                     __end_of_display_prepare:
 15633                           	opt stack 0
 15634                           tblptru	equ	0xFF8
 15635                           tblptrh	equ	0xFF7
 15636                           tblptrl	equ	0xFF6
 15637                           tablat	equ	0xFF5
 15638                           prodh	equ	0xFF4
 15639                           prodl	equ	0xFF3
 15640                           intcon	equ	0xFF2
 15641                           postinc0	equ	0xFEE
 15642                           wreg	equ	0xFE8
 15643                           indf1	equ	0xFE7
 15644                           postdec1	equ	0xFE5
 15645                           plusw1	equ	0xFE3
 15646                           fsr1h	equ	0xFE2
 15647                           fsr1l	equ	0xFE1
 15648                           indf2	equ	0xFDF
 15649                           postinc2	equ	0xFDE
 15650                           postdec2	equ	0xFDD
 15651                           plusw2	equ	0xFDB
 15652                           fsr2h	equ	0xFDA
 15653                           fsr2l	equ	0xFD9
 15654                           status	equ	0xFD8
 15655                           
 15656 ;; *************** function _motor_speed_from_index *****************
 15657 ;; Defined at:
 15658 ;;		line 77 in file "motor.c"
 15659 ;; Parameters:    Size  Location     Type
 15660 ;;  speed_index     2   51[BANK0 ] unsigned int 
 15661 ;; Auto vars:     Size  Location     Type
 15662 ;;		None
 15663 ;; Return value:  Size  Location     Type
 15664 ;;                  2   51[BANK0 ] unsigned int 
 15665 ;; Registers used:
 15666 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15667 ;; Tracked objects:
 15668 ;;		On entry : 0/0
 15669 ;;		On exit  : 0/0
 15670 ;;		Unchanged: 0/0
 15671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15672 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15675 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15676 ;;Total ram usage:        2 bytes
 15677 ;; Hardware stack levels used:    1
 15678 ;; Hardware stack levels required when called:   12
 15679 ;; This function calls:
 15680 ;;		__motor_get_speed_in_degrees
 15681 ;; This function is called by:
 15682 ;;		_display_prepare
 15683 ;; This function uses a non-reentrant model
 15684 ;;
 15685                           
 15686                           	psect	text36
 15687  0122BC                     __ptext36:
 15688                           	opt stack 0
 15689  0122BC                     _motor_speed_from_index:
 15690                           	opt stack 17
 15691                           
 15692                           ;motor.c: 79: return _motor_get_speed_in_degrees(speed_index);
 15693                           
 15694                           ;incstack = 0
 15695  0122BC  C093  F087         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 15696  0122C0  C094  F088         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 15697  0122C4  EC0F  F074         	call	__motor_get_speed_in_degrees	;wreg free
 15698  0122C8  C087  F093         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 15699  0122CC  C088  F094         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 15700  0122D0  0012               	return	
 15701  0122D2                     __end_of_motor_speed_from_index:
 15702                           	opt stack 0
 15703                           tblptru	equ	0xFF8
 15704                           tblptrh	equ	0xFF7
 15705                           tblptrl	equ	0xFF6
 15706                           tablat	equ	0xFF5
 15707                           prodh	equ	0xFF4
 15708                           prodl	equ	0xFF3
 15709                           intcon	equ	0xFF2
 15710                           postinc0	equ	0xFEE
 15711                           wreg	equ	0xFE8
 15712                           indf1	equ	0xFE7
 15713                           postdec1	equ	0xFE5
 15714                           plusw1	equ	0xFE3
 15715                           fsr1h	equ	0xFE2
 15716                           fsr1l	equ	0xFE1
 15717                           indf2	equ	0xFDF
 15718                           postinc2	equ	0xFDE
 15719                           postdec2	equ	0xFDD
 15720                           plusw2	equ	0xFDB
 15721                           fsr2h	equ	0xFDA
 15722                           fsr2l	equ	0xFD9
 15723                           status	equ	0xFD8
 15724                           
 15725 ;; *************** function __motor_get_speed_in_degrees *****************
 15726 ;; Defined at:
 15727 ;;		line 50 in file "motor.c"
 15728 ;; Parameters:    Size  Location     Type
 15729 ;;  speed_index     2   39[BANK0 ] unsigned int 
 15730 ;; Auto vars:     Size  Location     Type
 15731 ;;  lookup          4   47[BANK0 ] unsigned long 
 15732 ;;  speed           4   43[BANK0 ] float 
 15733 ;; Return value:  Size  Location     Type
 15734 ;;                  2   39[BANK0 ] unsigned int 
 15735 ;; Registers used:
 15736 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15737 ;; Tracked objects:
 15738 ;;		On entry : 0/0
 15739 ;;		On exit  : 0/0
 15740 ;;		Unchanged: 0/0
 15741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15742 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15743 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15744 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15745 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15746 ;;Total ram usage:       12 bytes
 15747 ;; Hardware stack levels used:    1
 15748 ;; Hardware stack levels required when called:   11
 15749 ;; This function calls:
 15750 ;;		___fldiv
 15751 ;;		___fltol
 15752 ;;		___lmul
 15753 ;;		___xxtofl
 15754 ;; This function is called by:
 15755 ;;		_motor_speed_from_index
 15756 ;;		_motor_get_maximum_speed
 15757 ;;		_motor_get_current_speed
 15758 ;; This function uses a non-reentrant model
 15759 ;;
 15760                           
 15761                           	psect	text37
 15762  00E81E                     __ptext37:
 15763                           	opt stack 0
 15764  00E81E                     __motor_get_speed_in_degrees:
 15765                           	opt stack 17
 15766                           
 15767                           ;motor.c: 52: uint32_t lookup;;motor.c: 53: float speed;;motor.c: 55: lookup = motor_spe
      +                          ed_lookup[speed_index];
 15768                           
 15769                           ;incstack = 0
 15770  00E81E  90D8               	bcf	status,0,c
 15771  00E820  0100               	movlb	0	; () banked
 15772  00E822  3587               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 15773  00E824  6EF6               	movwf	tblptrl,c
 15774  00E826  3588               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 15775  00E828  6EF7               	movwf	tblptrh,c
 15776  00E82A  0E93               	movlw	low _motor_speed_lookup
 15777  00E82C  26F6               	addwf	tblptrl,f,c
 15778  00E82E  0E90               	movlw	high _motor_speed_lookup
 15779  00E830  22F7               	addwfc	tblptrh,f,c
 15780  00E832                     	if	1	;There are 3 active tblptr bytes
 15781  00E832  6AF8               	clrf	tblptru,c
 15782  00E834  0E00               	movlw	low (__mediumconst shr (0+16))
 15783  00E836  22F8               	addwfc	tblptru,f,c
 15784  00E838                     	endif
 15785  00E838  0009               	tblrd		*+
 15786  00E83A  CFF5 F089          	movff	tablat,??__motor_get_speed_in_degrees
 15787  00E83E  0009               	tblrd		*+
 15788  00E840  CFF5 F08A          	movff	tablat,??__motor_get_speed_in_degrees+1
 15789  00E844  C089  F08F         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 15790  00E848  C08A  F090         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 15791  00E84C  6B91               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 15792  00E84E  6B92               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 15793                           
 15794                           ; BSR set to: 0
 15795                           ;motor.c: 56: lookup *= 16;
 15796  00E850  0E04               	movlw	4
 15797  00E852                     u18975:
 15798  00E852  90D8               	bcf	status,0,c
 15799  00E854  378F               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 15800  00E856  3790               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 15801  00E858  3791               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 15802  00E85A  3792               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 15803  00E85C  2EE8               	decfsz	wreg,f,c
 15804  00E85E  D7F9               	goto	u18975
 15805                           
 15806                           ; BSR set to: 0
 15807                           ;motor.c: 57: lookup *= 360;
 15808  00E860  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 15809  00E864  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 15810  00E868  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 15811  00E86C  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 15812  00E870  0E68               	movlw	104
 15813  00E872  6F64               	movwf	___lmul@multiplicand& (0+255),b
 15814  00E874  0E01               	movlw	1
 15815  00E876  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15816  00E878  0E00               	movlw	0
 15817  00E87A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15818  00E87C  0E00               	movlw	0
 15819  00E87E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15820  00E880  EC76  F08B         	call	___lmul	;wreg free
 15821  00E884  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 15822  00E888  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 15823  00E88C  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 15824  00E890  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 15825                           
 15826                           ;motor.c: 58: lookup *= 100;
 15827  00E894  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 15828  00E898  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 15829  00E89C  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 15830  00E8A0  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 15831  00E8A4  0E64               	movlw	100
 15832  00E8A6  0100               	movlb	0	; () banked
 15833  00E8A8  6F64               	movwf	___lmul@multiplicand& (0+255),b
 15834  00E8AA  0E00               	movlw	0
 15835  00E8AC  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15836  00E8AE  0E00               	movlw	0
 15837  00E8B0  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15838  00E8B2  0E00               	movlw	0
 15839  00E8B4  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15840  00E8B6  EC76  F08B         	call	___lmul	;wreg free
 15841  00E8BA  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 15842  00E8BE  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 15843  00E8C2  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 15844  00E8C6  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 15845                           
 15846                           ;motor.c: 60: speed = (float) lookup;
 15847  00E8CA  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 15848  00E8CE  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 15849  00E8D2  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 15850  00E8D6  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 15851  00E8DA  0E00               	movlw	0
 15852  00E8DC  EC8A  F071         	call	___xxtofl
 15853  00E8E0  C060  F08B         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 15854  00E8E4  C061  F08C         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 15855  00E8E8  C062  F08D         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 15856  00E8EC  C063  F08E         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 15857                           
 15858                           ;motor.c: 61: speed /= config.full_circle_in_steps;
 15859  00E8F0  C08B  F06E         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 15860  00E8F4  C08C  F06F         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 15861  00E8F8  C08D  F070         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 15862  00E8FC  C08E  F071         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 15863  00E900  C11F  F060         	movff	_config,___xxtofl@val
 15864  00E904  C120  F061         	movff	_config+1,___xxtofl@val+1
 15865  00E908  C121  F062         	movff	_config+2,___xxtofl@val+2
 15866  00E90C  C122  F063         	movff	_config+3,___xxtofl@val+3
 15867  00E910  0E00               	movlw	0
 15868  00E912  EC8A  F071         	call	___xxtofl
 15869  00E916  C060  F072         	movff	?___xxtofl,___fldiv@a
 15870  00E91A  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 15871  00E91E  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 15872  00E922  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 15873  00E926  EC0C  F067         	call	___fldiv	;wreg free
 15874  00E92A  C06E  F08B         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 15875  00E92E  C06F  F08C         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 15876  00E932  C070  F08D         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 15877  00E936  C071  F08E         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 15878                           
 15879                           ;motor.c: 64: return (uint16_t) speed;
 15880  00E93A  C08B  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 15881  00E93E  C08C  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 15882  00E942  C08D  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 15883  00E946  C08E  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 15884  00E94A  EC05  F07D         	call	___fltol	;wreg free
 15885  00E94E  C060  F087         	movff	?___fltol,?__motor_get_speed_in_degrees
 15886  00E952  C061  F088         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 15887  00E956  0012               	return	
 15888  00E958                     __end_of__motor_get_speed_in_degrees:
 15889                           	opt stack 0
 15890                           tblptru	equ	0xFF8
 15891                           tblptrh	equ	0xFF7
 15892                           tblptrl	equ	0xFF6
 15893                           tablat	equ	0xFF5
 15894                           prodh	equ	0xFF4
 15895                           prodl	equ	0xFF3
 15896                           intcon	equ	0xFF2
 15897                           postinc0	equ	0xFEE
 15898                           wreg	equ	0xFE8
 15899                           indf1	equ	0xFE7
 15900                           postdec1	equ	0xFE5
 15901                           plusw1	equ	0xFE3
 15902                           fsr1h	equ	0xFE2
 15903                           fsr1l	equ	0xFE1
 15904                           indf2	equ	0xFDF
 15905                           postinc2	equ	0xFDE
 15906                           postdec2	equ	0xFDD
 15907                           plusw2	equ	0xFDB
 15908                           fsr2h	equ	0xFDA
 15909                           fsr2l	equ	0xFD9
 15910                           status	equ	0xFD8
 15911                           
 15912 ;; *************** function ___xxtofl *****************
 15913 ;; Defined at:
 15914 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 15915 ;; Parameters:    Size  Location     Type
 15916 ;;  sign            1    wreg     unsigned char 
 15917 ;;  val             4    0[BANK0 ] long 
 15918 ;; Auto vars:     Size  Location     Type
 15919 ;;  sign            1    8[BANK0 ] unsigned char 
 15920 ;;  arg             4   10[BANK0 ] unsigned long 
 15921 ;;  exp             1    9[BANK0 ] unsigned char 
 15922 ;; Return value:  Size  Location     Type
 15923 ;;                  4    0[BANK0 ] unsigned char 
 15924 ;; Registers used:
 15925 ;;		wreg, status,2, status,0
 15926 ;; Tracked objects:
 15927 ;;		On entry : 0/0
 15928 ;;		On exit  : 0/0
 15929 ;;		Unchanged: 0/0
 15930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15931 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15932 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15933 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15934 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15935 ;;Total ram usage:       14 bytes
 15936 ;; Hardware stack levels used:    1
 15937 ;; Hardware stack levels required when called:   10
 15938 ;; This function calls:
 15939 ;;		Nothing
 15940 ;; This function is called by:
 15941 ;;		_main
 15942 ;;		_motor_steps_from_degrees
 15943 ;;		__motor_get_speed_in_degrees
 15944 ;;		_encoder_statemachine
 15945 ;; This function uses a non-reentrant model
 15946 ;;
 15947                           
 15948                           	psect	text38
 15949  00E314                     __ptext38:
 15950                           	opt stack 0
 15951  00E314                     ___xxtofl:
 15952                           	opt stack 17
 15953                           
 15954                           ;incstack = 0
 15955                           ;___xxtofl@sign stored from wreg
 15956  00E314  0100               	movlb	0	; () banked
 15957  00E316  6F68               	movwf	___xxtofl@sign& (0+255),b
 15958  00E318  0100               	movlb	0	; () banked
 15959  00E31A  5168               	movf	___xxtofl@sign& (0+255),w,b
 15960  00E31C  A4D8               	btfss	status,2,c
 15961                           
 15962                           ; BSR set to: 0
 15963  00E31E  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 15964  00E320  D01A               	goto	l3293
 15965                           
 15966                           ; BSR set to: 0
 15967  00E322  C060  F064         	movff	___xxtofl@val,??___xxtofl
 15968  00E326  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 15969  00E32A  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 15970  00E32E  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 15971  00E332  1F64               	comf	??___xxtofl& (0+255),f,b
 15972  00E334  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 15973  00E336  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 15974  00E338  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 15975  00E33A  2B64               	incf	??___xxtofl& (0+255),f,b
 15976  00E33C  0E00               	movlw	0
 15977  00E33E  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 15978  00E340  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 15979  00E342  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 15980  00E344  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 15981  00E348  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 15982  00E34C  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 15983  00E350  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 15984  00E354  D008               	goto	l3294
 15985  00E356                     l3293:
 15986                           
 15987                           ; BSR set to: 0
 15988  00E356  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 15989  00E35A  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15990  00E35E  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15991  00E362  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15992  00E366                     l3294:
 15993                           
 15994                           ; BSR set to: 0
 15995                           
 15996                           ; BSR set to: 0
 15997  00E366  5160               	movf	___xxtofl@val& (0+255),w,b
 15998  00E368  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 15999  00E36A  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 16000  00E36C  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 16001  00E36E  A4D8               	btfss	status,2,c
 16002  00E370  D009               	goto	l3295
 16003                           
 16004                           ; BSR set to: 0
 16005  00E372  0E00               	movlw	0
 16006  00E374  6F60               	movwf	?___xxtofl& (0+255),b
 16007  00E376  0E00               	movlw	0
 16008  00E378  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 16009  00E37A  0E00               	movlw	0
 16010  00E37C  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 16011  00E37E  0E00               	movlw	0
 16012  00E380  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 16013                           
 16014                           ; BSR set to: 0
 16015  00E382  0012               	return	
 16016  00E384                     l3295:
 16017                           
 16018                           ; BSR set to: 0
 16019                           
 16020                           ; BSR set to: 0
 16021  00E384  0E96               	movlw	150
 16022  00E386  6F69               	movwf	___xxtofl@exp& (0+255),b
 16023  00E388  D006               	goto	l3297
 16024  00E38A                     
 16025                           ; BSR set to: 0
 16026                           
 16027                           ; BSR set to: 0
 16028  00E38A  2B69               	incf	___xxtofl@exp& (0+255),f,b
 16029  00E38C  90D8               	bcf	status,0,c
 16030  00E38E  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16031  00E390  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16032  00E392  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16033  00E394  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 16034  00E396                     l3297:
 16035                           
 16036                           ; BSR set to: 0
 16037                           
 16038                           ; BSR set to: 0
 16039  00E396  0E00               	movlw	0
 16040  00E398  156A               	andwf	___xxtofl@arg& (0+255),w,b
 16041  00E39A  6F64               	movwf	??___xxtofl& (0+255),b
 16042  00E39C  0E00               	movlw	0
 16043  00E39E  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16044  00E3A0  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 16045  00E3A2  0E00               	movlw	0
 16046  00E3A4  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16047  00E3A6  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 16048  00E3A8  0EFE               	movlw	254
 16049  00E3AA  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16050  00E3AC  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 16051  00E3AE  5164               	movf	??___xxtofl& (0+255),w,b
 16052  00E3B0  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16053  00E3B2  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16054  00E3B4  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16055  00E3B6  B4D8               	btfsc	status,2,c
 16056  00E3B8  D00D               	goto	l3300
 16057  00E3BA  D7E7               	goto	l3298
 16058  00E3BC                     
 16059                           ; BSR set to: 0
 16060                           
 16061                           ; BSR set to: 0
 16062  00E3BC  2B69               	incf	___xxtofl@exp& (0+255),f,b
 16063                           
 16064                           ; BSR set to: 0
 16065  00E3BE  0E01               	movlw	1
 16066  00E3C0  276A               	addwf	___xxtofl@arg& (0+255),f,b
 16067  00E3C2  0E00               	movlw	0
 16068  00E3C4  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 16069  00E3C6  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 16070  00E3C8  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 16071                           
 16072                           ; BSR set to: 0
 16073  00E3CA  90D8               	bcf	status,0,c
 16074  00E3CC  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16075  00E3CE  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16076  00E3D0  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16077  00E3D2  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 16078  00E3D4                     l3300:
 16079                           
 16080                           ; BSR set to: 0
 16081  00E3D4  0E00               	movlw	0
 16082  00E3D6  156A               	andwf	___xxtofl@arg& (0+255),w,b
 16083  00E3D8  6F64               	movwf	??___xxtofl& (0+255),b
 16084  00E3DA  0E00               	movlw	0
 16085  00E3DC  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16086  00E3DE  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 16087  00E3E0  0E00               	movlw	0
 16088  00E3E2  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16089  00E3E4  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 16090  00E3E6  0EFF               	movlw	255
 16091  00E3E8  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16092  00E3EA  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 16093  00E3EC  5164               	movf	??___xxtofl& (0+255),w,b
 16094  00E3EE  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16095  00E3F0  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16096  00E3F2  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16097  00E3F4  B4D8               	btfsc	status,2,c
 16098  00E3F6  D007               	goto	l3303
 16099  00E3F8  D7E1               	goto	l3301
 16100  00E3FA                     
 16101                           ; BSR set to: 0
 16102                           
 16103                           ; BSR set to: 0
 16104  00E3FA  0769               	decf	___xxtofl@exp& (0+255),f,b
 16105  00E3FC  90D8               	bcf	status,0,c
 16106  00E3FE  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 16107  00E400  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 16108  00E402  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 16109  00E404  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 16110  00E406                     l3303:
 16111                           
 16112                           ; BSR set to: 0
 16113                           
 16114                           ; BSR set to: 0
 16115  00E406  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 16116  00E408  D003               	goto	u18520
 16117                           
 16118                           ; BSR set to: 0
 16119  00E40A  0E02               	movlw	2
 16120  00E40C  6169               	cpfslt	___xxtofl@exp& (0+255),b
 16121  00E40E  D7F5               	goto	l3304
 16122  00E410                     u18520:
 16123                           
 16124                           ; BSR set to: 0
 16125                           
 16126                           ; BSR set to: 0
 16127  00E410  A169               	btfss	___xxtofl@exp& (0+255),0,b
 16128                           
 16129                           ; BSR set to: 0
 16130  00E412  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 16131                           
 16132                           ; BSR set to: 0
 16133                           
 16134                           ; BSR set to: 0
 16135  00E414  90D8               	bcf	status,0,c
 16136  00E416  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 16137                           
 16138                           ; BSR set to: 0
 16139  00E418  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 16140  00E41C  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 16141  00E41E  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 16142  00E420  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 16143  00E422  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 16144  00E426  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 16145  00E428  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 16146  00E42A  6B64               	clrf	??___xxtofl& (0+255),b
 16147  00E42C  5164               	movf	??___xxtofl& (0+255),w,b
 16148  00E42E  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 16149  00E430  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 16150  00E432  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 16151  00E434  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 16152  00E436  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 16153  00E438  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 16154  00E43A  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 16155                           
 16156                           ; BSR set to: 0
 16157  00E43C  5168               	movf	___xxtofl@sign& (0+255),w,b
 16158  00E43E  A4D8               	btfss	status,2,c
 16159                           
 16160                           ; BSR set to: 0
 16161  00E440  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 16162  00E442  D001               	goto	l3309
 16163                           
 16164                           ; BSR set to: 0
 16165  00E444  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 16166  00E446                     l3309:
 16167                           
 16168                           ; BSR set to: 0
 16169                           
 16170                           ; BSR set to: 0
 16171  00E446  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 16172  00E44A  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 16173  00E44E  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 16174  00E452  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 16175  00E456  0012               	return	
 16176  00E458                     __end_of___xxtofl:
 16177                           	opt stack 0
 16178                           tblptru	equ	0xFF8
 16179                           tblptrh	equ	0xFF7
 16180                           tblptrl	equ	0xFF6
 16181                           tablat	equ	0xFF5
 16182                           prodh	equ	0xFF4
 16183                           prodl	equ	0xFF3
 16184                           intcon	equ	0xFF2
 16185                           postinc0	equ	0xFEE
 16186                           wreg	equ	0xFE8
 16187                           indf1	equ	0xFE7
 16188                           postdec1	equ	0xFE5
 16189                           plusw1	equ	0xFE3
 16190                           fsr1h	equ	0xFE2
 16191                           fsr1l	equ	0xFE1
 16192                           indf2	equ	0xFDF
 16193                           postinc2	equ	0xFDE
 16194                           postdec2	equ	0xFDD
 16195                           plusw2	equ	0xFDB
 16196                           fsr2h	equ	0xFDA
 16197                           fsr2l	equ	0xFD9
 16198                           status	equ	0xFD8
 16199                           
 16200 ;; *************** function ___lmul *****************
 16201 ;; Defined at:
 16202 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 16203 ;; Parameters:    Size  Location     Type
 16204 ;;  multiplier      4    0[BANK0 ] unsigned long 
 16205 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 16206 ;; Auto vars:     Size  Location     Type
 16207 ;;  product         4    8[BANK0 ] unsigned long 
 16208 ;; Return value:  Size  Location     Type
 16209 ;;                  4    0[BANK0 ] unsigned long 
 16210 ;; Registers used:
 16211 ;;		wreg, status,2, status,0
 16212 ;; Tracked objects:
 16213 ;;		On entry : 0/0
 16214 ;;		On exit  : 0/0
 16215 ;;		Unchanged: 0/0
 16216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16217 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16218 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16220 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16221 ;;Total ram usage:       12 bytes
 16222 ;; Hardware stack levels used:    1
 16223 ;; Hardware stack levels required when called:   10
 16224 ;; This function calls:
 16225 ;;		Nothing
 16226 ;; This function is called by:
 16227 ;;		__motor_get_speed_in_degrees
 16228 ;; This function uses a non-reentrant model
 16229 ;;
 16230                           
 16231                           	psect	text39
 16232  0116EC                     __ptext39:
 16233                           	opt stack 0
 16234  0116EC                     ___lmul:
 16235                           	opt stack 17
 16236                           
 16237                           ; BSR set to: 0
 16238                           ;incstack = 0
 16239  0116EC  0E00               	movlw	0
 16240  0116EE  0100               	movlb	0	; () banked
 16241  0116F0  6F68               	movwf	___lmul@product& (0+255),b
 16242  0116F2  0E00               	movlw	0
 16243  0116F4  6F69               	movwf	(___lmul@product+1)& (0+255),b
 16244  0116F6  0E00               	movlw	0
 16245  0116F8  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 16246  0116FA  0E00               	movlw	0
 16247  0116FC  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 16248  0116FE                     
 16249                           ; BSR set to: 0
 16250                           
 16251                           ; BSR set to: 0
 16252  0116FE  A160               	btfss	___lmul@multiplier& (0+255),0,b
 16253  011700  D008               	goto	l2660
 16254                           
 16255                           ; BSR set to: 0
 16256  011702  5164               	movf	___lmul@multiplicand& (0+255),w,b
 16257  011704  2768               	addwf	___lmul@product& (0+255),f,b
 16258  011706  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 16259  011708  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 16260  01170A  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 16261  01170C  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 16262  01170E  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 16263  011710  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 16264  011712                     l2660:
 16265                           
 16266                           ; BSR set to: 0
 16267                           
 16268                           ; BSR set to: 0
 16269  011712  90D8               	bcf	status,0,c
 16270  011714  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 16271  011716  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 16272  011718  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 16273  01171A  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 16274                           
 16275                           ; BSR set to: 0
 16276  01171C  90D8               	bcf	status,0,c
 16277  01171E  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 16278  011720  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 16279  011722  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 16280  011724  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 16281  011726  5160               	movf	___lmul@multiplier& (0+255),w,b
 16282  011728  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 16283  01172A  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 16284  01172C  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 16285  01172E  A4D8               	btfss	status,2,c
 16286  011730  D7E6               	goto	l2659
 16287                           
 16288                           ; BSR set to: 0
 16289  011732  C068  F060         	movff	___lmul@product,?___lmul
 16290  011736  C069  F061         	movff	___lmul@product+1,?___lmul+1
 16291  01173A  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 16292  01173E  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 16293                           
 16294                           ; BSR set to: 0
 16295  011742  0012               	return		;funcret
 16296  011744                     __end_of___lmul:
 16297                           	opt stack 0
 16298                           tblptru	equ	0xFF8
 16299                           tblptrh	equ	0xFF7
 16300                           tblptrl	equ	0xFF6
 16301                           tablat	equ	0xFF5
 16302                           prodh	equ	0xFF4
 16303                           prodl	equ	0xFF3
 16304                           intcon	equ	0xFF2
 16305                           postinc0	equ	0xFEE
 16306                           wreg	equ	0xFE8
 16307                           indf1	equ	0xFE7
 16308                           postdec1	equ	0xFE5
 16309                           plusw1	equ	0xFE3
 16310                           fsr1h	equ	0xFE2
 16311                           fsr1l	equ	0xFE1
 16312                           indf2	equ	0xFDF
 16313                           postinc2	equ	0xFDE
 16314                           postdec2	equ	0xFDD
 16315                           plusw2	equ	0xFDB
 16316                           fsr2h	equ	0xFDA
 16317                           fsr2l	equ	0xFD9
 16318                           status	equ	0xFD8
 16319                           
 16320 ;; *************** function ___fltol *****************
 16321 ;; Defined at:
 16322 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 16323 ;; Parameters:    Size  Location     Type
 16324 ;;  f1              4    0[BANK0 ] unsigned long 
 16325 ;; Auto vars:     Size  Location     Type
 16326 ;;  exp1            1    9[BANK0 ] unsigned char 
 16327 ;;  sign1           1    8[BANK0 ] unsigned char 
 16328 ;; Return value:  Size  Location     Type
 16329 ;;                  4    0[BANK0 ] long 
 16330 ;; Registers used:
 16331 ;;		wreg, status,2, status,0
 16332 ;; Tracked objects:
 16333 ;;		On entry : 0/0
 16334 ;;		On exit  : 0/0
 16335 ;;		Unchanged: 0/0
 16336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16337 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16338 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16339 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16340 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16341 ;;Total ram usage:       10 bytes
 16342 ;; Hardware stack levels used:    1
 16343 ;; Hardware stack levels required when called:   10
 16344 ;; This function calls:
 16345 ;;		Nothing
 16346 ;; This function is called by:
 16347 ;;		_main
 16348 ;;		_motor_steps_from_degrees
 16349 ;;		__motor_get_speed_in_degrees
 16350 ;;		_encoder_statemachine
 16351 ;; This function uses a non-reentrant model
 16352 ;;
 16353                           
 16354                           	psect	text40
 16355  00FA0A                     __ptext40:
 16356                           	opt stack 0
 16357  00FA0A                     ___fltol:
 16358                           	opt stack 17
 16359                           
 16360                           ; BSR set to: 0
 16361                           ;incstack = 0
 16362  00FA0A  0100               	movlb	0	; () banked
 16363  00FA0C  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 16364  00FA0E  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 16365  00FA10  6F69               	movwf	___fltol@exp1& (0+255),b
 16366  00FA12  5169               	movf	___fltol@exp1& (0+255),w,b
 16367  00FA14  A4D8               	btfss	status,2,c
 16368  00FA16  D009               	goto	l2938
 16369                           
 16370                           ; BSR set to: 0
 16371  00FA18  0E00               	movlw	0
 16372  00FA1A  6F60               	movwf	?___fltol& (0+255),b
 16373  00FA1C  0E00               	movlw	0
 16374  00FA1E  6F61               	movwf	(?___fltol+1)& (0+255),b
 16375  00FA20  0E00               	movlw	0
 16376  00FA22  6F62               	movwf	(?___fltol+2)& (0+255),b
 16377  00FA24  0E00               	movlw	0
 16378  00FA26  6F63               	movwf	(?___fltol+3)& (0+255),b
 16379                           
 16380                           ; BSR set to: 0
 16381  00FA28  0012               	return	
 16382  00FA2A                     l2938:
 16383                           
 16384                           ; BSR set to: 0
 16385                           
 16386                           ; BSR set to: 0
 16387  00FA2A  C060  F064         	movff	___fltol@f1,??___fltol
 16388  00FA2E  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 16389  00FA32  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 16390  00FA36  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 16391  00FA3A  0E20               	movlw	32
 16392  00FA3C  D005               	goto	u18400
 16393  00FA3E                     u18405:
 16394  00FA3E  90D8               	bcf	status,0,c
 16395  00FA40  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 16396  00FA42  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 16397  00FA44  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 16398  00FA46  3364               	rrcf	??___fltol& (0+255),f,b
 16399  00FA48                     u18400:
 16400  00FA48  2EE8               	decfsz	wreg,f,c
 16401  00FA4A  D7F9               	goto	u18405
 16402  00FA4C  5164               	movf	??___fltol& (0+255),w,b
 16403  00FA4E  6F68               	movwf	___fltol@sign1& (0+255),b
 16404                           
 16405                           ; BSR set to: 0
 16406  00FA50  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 16407                           
 16408                           ; BSR set to: 0
 16409  00FA52  0EFF               	movlw	255
 16410  00FA54  1760               	andwf	___fltol@f1& (0+255),f,b
 16411  00FA56  0EFF               	movlw	255
 16412  00FA58  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 16413  00FA5A  0EFF               	movlw	255
 16414  00FA5C  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 16415  00FA5E  0E00               	movlw	0
 16416  00FA60  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 16417                           
 16418                           ; BSR set to: 0
 16419  00FA62  0E96               	movlw	150
 16420  00FA64  5F69               	subwf	___fltol@exp1& (0+255),f,b
 16421                           
 16422                           ; BSR set to: 0
 16423  00FA66  AF69               	btfss	___fltol@exp1& (0+255),7,b
 16424  00FA68  D016               	goto	l2940
 16425                           
 16426                           ; BSR set to: 0
 16427  00FA6A  5169               	movf	___fltol@exp1& (0+255),w,b
 16428  00FA6C  0A80               	xorlw	128
 16429  00FA6E  0F97               	addlw	151
 16430  00FA70  B0D8               	btfsc	status,0,c
 16431  00FA72  D009               	goto	l2941
 16432                           
 16433                           ; BSR set to: 0
 16434  00FA74  0E00               	movlw	0
 16435  00FA76  6F60               	movwf	?___fltol& (0+255),b
 16436  00FA78  0E00               	movlw	0
 16437  00FA7A  6F61               	movwf	(?___fltol+1)& (0+255),b
 16438  00FA7C  0E00               	movlw	0
 16439  00FA7E  6F62               	movwf	(?___fltol+2)& (0+255),b
 16440  00FA80  0E00               	movlw	0
 16441  00FA82  6F63               	movwf	(?___fltol+3)& (0+255),b
 16442                           
 16443                           ; BSR set to: 0
 16444  00FA84  0012               	return	
 16445  00FA86                     l2941:
 16446                           
 16447                           ; BSR set to: 0
 16448                           
 16449                           ; BSR set to: 0
 16450                           
 16451                           ; BSR set to: 0
 16452  00FA86  90D8               	bcf	status,0,c
 16453  00FA88  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 16454  00FA8A  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 16455  00FA8C  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 16456  00FA8E  3360               	rrcf	___fltol@f1& (0+255),f,b
 16457                           
 16458                           ; BSR set to: 0
 16459  00FA90  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 16460  00FA92  D7F9               	goto	l2941
 16461                           
 16462                           ; BSR set to: 0
 16463  00FA94  D015               	goto	u18440
 16464  00FA96                     l2940:
 16465                           
 16466                           ; BSR set to: 0
 16467                           
 16468                           ; BSR set to: 0
 16469  00FA96  0E1F               	movlw	31
 16470  00FA98  6569               	cpfsgt	___fltol@exp1& (0+255),b
 16471  00FA9A  D00F               	goto	l2946
 16472                           
 16473                           ; BSR set to: 0
 16474  00FA9C  0E00               	movlw	0
 16475  00FA9E  6F60               	movwf	?___fltol& (0+255),b
 16476  00FAA0  0E00               	movlw	0
 16477  00FAA2  6F61               	movwf	(?___fltol+1)& (0+255),b
 16478  00FAA4  0E00               	movlw	0
 16479  00FAA6  6F62               	movwf	(?___fltol+2)& (0+255),b
 16480  00FAA8  0E00               	movlw	0
 16481  00FAAA  6F63               	movwf	(?___fltol+3)& (0+255),b
 16482                           
 16483                           ; BSR set to: 0
 16484  00FAAC  0012               	return	
 16485  00FAAE                     
 16486                           ; BSR set to: 0
 16487                           
 16488                           ; BSR set to: 0
 16489  00FAAE  90D8               	bcf	status,0,c
 16490  00FAB0  3760               	rlcf	___fltol@f1& (0+255),f,b
 16491  00FAB2  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 16492  00FAB4  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 16493  00FAB6  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 16494  00FAB8  0769               	decf	___fltol@exp1& (0+255),f,b
 16495  00FABA                     l2946:
 16496                           
 16497                           ; BSR set to: 0
 16498                           
 16499                           ; BSR set to: 0
 16500  00FABA  5169               	movf	___fltol@exp1& (0+255),w,b
 16501  00FABC  A4D8               	btfss	status,2,c
 16502  00FABE  D7F7               	goto	l2947
 16503  00FAC0                     u18440:
 16504                           
 16505                           ; BSR set to: 0
 16506                           
 16507                           ; BSR set to: 0
 16508                           
 16509                           ; BSR set to: 0
 16510  00FAC0  5168               	movf	___fltol@sign1& (0+255),w,b
 16511  00FAC2  B4D8               	btfsc	status,2,c
 16512  00FAC4  D008               	goto	l2949
 16513                           
 16514                           ; BSR set to: 0
 16515  00FAC6  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 16516  00FAC8  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 16517  00FACA  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 16518  00FACC  6D60               	negf	___fltol@f1& (0+255),b
 16519  00FACE  0E00               	movlw	0
 16520  00FAD0  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 16521  00FAD2  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 16522  00FAD4  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 16523  00FAD6                     l2949:
 16524                           
 16525                           ; BSR set to: 0
 16526                           
 16527                           ; BSR set to: 0
 16528  00FAD6  C060  F060         	movff	___fltol@f1,?___fltol
 16529  00FADA  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 16530  00FADE  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 16531  00FAE2  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 16532  00FAE6  0012               	return	
 16533  00FAE8                     __end_of___fltol:
 16534                           	opt stack 0
 16535                           tblptru	equ	0xFF8
 16536                           tblptrh	equ	0xFF7
 16537                           tblptrl	equ	0xFF6
 16538                           tablat	equ	0xFF5
 16539                           prodh	equ	0xFF4
 16540                           prodl	equ	0xFF3
 16541                           intcon	equ	0xFF2
 16542                           postinc0	equ	0xFEE
 16543                           wreg	equ	0xFE8
 16544                           indf1	equ	0xFE7
 16545                           postdec1	equ	0xFE5
 16546                           plusw1	equ	0xFE3
 16547                           fsr1h	equ	0xFE2
 16548                           fsr1l	equ	0xFE1
 16549                           indf2	equ	0xFDF
 16550                           postinc2	equ	0xFDE
 16551                           postdec2	equ	0xFDD
 16552                           plusw2	equ	0xFDB
 16553                           fsr2h	equ	0xFDA
 16554                           fsr2l	equ	0xFD9
 16555                           status	equ	0xFD8
 16556                           
 16557 ;; *************** function ___fldiv *****************
 16558 ;; Defined at:
 16559 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 16560 ;; Parameters:    Size  Location     Type
 16561 ;;  b               4   14[BANK0 ] long 
 16562 ;;  a               4   18[BANK0 ] long 
 16563 ;; Auto vars:     Size  Location     Type
 16564 ;;  grs             4   33[BANK0 ] unsigned long 
 16565 ;;  rem             4   26[BANK0 ] unsigned long 
 16566 ;;  new_exp         2   31[BANK0 ] int 
 16567 ;;  aexp            1   38[BANK0 ] unsigned char 
 16568 ;;  bexp            1   37[BANK0 ] unsigned char 
 16569 ;;  sign            1   30[BANK0 ] unsigned char 
 16570 ;; Return value:  Size  Location     Type
 16571 ;;                  4   14[BANK0 ] unsigned char 
 16572 ;; Registers used:
 16573 ;;		wreg, status,2, status,0
 16574 ;; Tracked objects:
 16575 ;;		On entry : 0/0
 16576 ;;		On exit  : 0/0
 16577 ;;		Unchanged: 0/0
 16578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16579 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16580 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16581 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16582 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16583 ;;Total ram usage:       25 bytes
 16584 ;; Hardware stack levels used:    1
 16585 ;; Hardware stack levels required when called:   10
 16586 ;; This function calls:
 16587 ;;		Nothing
 16588 ;; This function is called by:
 16589 ;;		_main
 16590 ;;		_motor_steps_from_degrees
 16591 ;;		__motor_get_speed_in_degrees
 16592 ;;		_encoder_statemachine
 16593 ;; This function uses a non-reentrant model
 16594 ;;
 16595                           
 16596                           	psect	text41
 16597  00CE18                     __ptext41:
 16598                           	opt stack 0
 16599  00CE18                     ___fldiv:
 16600                           	opt stack 17
 16601                           
 16602                           ; BSR set to: 0
 16603                           ;incstack = 0
 16604  00CE18  0100               	movlb	0	; () banked
 16605  00CE1A  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 16606  00CE1C  0B80               	andlw	128
 16607  00CE1E  6F7E               	movwf	___fldiv@sign& (0+255),b
 16608  00CE20  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 16609  00CE22  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 16610  00CE24  6F85               	movwf	___fldiv@bexp& (0+255),b
 16611                           
 16612                           ; BSR set to: 0
 16613  00CE26  BF70               	btfsc	(___fldiv@b+2)& (0+255),7,b
 16614                           
 16615                           ; BSR set to: 0
 16616  00CE28  8185               	bsf	___fldiv@bexp& (0+255),0,b
 16617                           
 16618                           ; BSR set to: 0
 16619                           
 16620                           ; BSR set to: 0
 16621  00CE2A  5185               	movf	___fldiv@bexp& (0+255),w,b
 16622  00CE2C  B4D8               	btfsc	status,2,c
 16623  00CE2E  D00D               	goto	l3212
 16624                           
 16625                           ; BSR set to: 0
 16626  00CE30  2985               	incf	___fldiv@bexp& (0+255),w,b
 16627  00CE32  A4D8               	btfss	status,2,c
 16628  00CE34  D008               	goto	l3213
 16629                           
 16630                           ; BSR set to: 0
 16631  00CE36  0E00               	movlw	0
 16632  00CE38  6F6E               	movwf	___fldiv@b& (0+255),b
 16633  00CE3A  0E00               	movlw	0
 16634  00CE3C  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 16635  00CE3E  0E00               	movlw	0
 16636  00CE40  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 16637  00CE42  0E00               	movlw	0
 16638  00CE44  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 16639  00CE46                     l3213:
 16640                           
 16641                           ; BSR set to: 0
 16642                           
 16643                           ; BSR set to: 0
 16644  00CE46  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 16645  00CE48  D006               	goto	L33
 16646  00CE4A                     l3212:
 16647                           
 16648                           ; BSR set to: 0
 16649                           
 16650                           ; BSR set to: 0
 16651  00CE4A  0E00               	movlw	0
 16652  00CE4C  6F6E               	movwf	___fldiv@b& (0+255),b
 16653  00CE4E  0E00               	movlw	0
 16654  00CE50  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 16655  00CE52  0E00               	movlw	0
 16656  00CE54  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 16657  00CE56                     L33:
 16658  00CE56  0E00               	movlw	0
 16659  00CE58  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 16660                           
 16661                           ; BSR set to: 0
 16662                           
 16663                           ; BSR set to: 0
 16664  00CE5A  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 16665  00CE5C  0B80               	andlw	128
 16666  00CE5E  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
 16667                           
 16668                           ; BSR set to: 0
 16669  00CE60  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 16670  00CE62  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 16671  00CE64  6F86               	movwf	___fldiv@aexp& (0+255),b
 16672                           
 16673                           ; BSR set to: 0
 16674  00CE66  BF74               	btfsc	(___fldiv@a+2)& (0+255),7,b
 16675                           
 16676                           ; BSR set to: 0
 16677  00CE68  8186               	bsf	___fldiv@aexp& (0+255),0,b
 16678                           
 16679                           ; BSR set to: 0
 16680                           
 16681                           ; BSR set to: 0
 16682  00CE6A  5186               	movf	___fldiv@aexp& (0+255),w,b
 16683  00CE6C  B4D8               	btfsc	status,2,c
 16684  00CE6E  D00D               	goto	l3216
 16685                           
 16686                           ; BSR set to: 0
 16687  00CE70  2986               	incf	___fldiv@aexp& (0+255),w,b
 16688  00CE72  A4D8               	btfss	status,2,c
 16689  00CE74  D008               	goto	l3217
 16690                           
 16691                           ; BSR set to: 0
 16692  00CE76  0E00               	movlw	0
 16693  00CE78  6F72               	movwf	___fldiv@a& (0+255),b
 16694  00CE7A  0E00               	movlw	0
 16695  00CE7C  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 16696  00CE7E  0E00               	movlw	0
 16697  00CE80  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 16698  00CE82  0E00               	movlw	0
 16699  00CE84  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 16700  00CE86                     l3217:
 16701                           
 16702                           ; BSR set to: 0
 16703                           
 16704                           ; BSR set to: 0
 16705  00CE86  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 16706  00CE88  D006               	goto	L34
 16707  00CE8A                     l3216:
 16708                           
 16709                           ; BSR set to: 0
 16710                           
 16711                           ; BSR set to: 0
 16712  00CE8A  0E00               	movlw	0
 16713  00CE8C  6F72               	movwf	___fldiv@a& (0+255),b
 16714  00CE8E  0E00               	movlw	0
 16715  00CE90  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 16716  00CE92  0E00               	movlw	0
 16717  00CE94  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 16718  00CE96                     L34:
 16719  00CE96  0E00               	movlw	0
 16720  00CE98  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 16721                           
 16722                           ; BSR set to: 0
 16723                           
 16724                           ; BSR set to: 0
 16725  00CE9A  5172               	movf	___fldiv@a& (0+255),w,b
 16726  00CE9C  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 16727  00CE9E  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 16728  00CEA0  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 16729  00CEA2  A4D8               	btfss	status,2,c
 16730  00CEA4  D017               	goto	l3219
 16731                           
 16732                           ; BSR set to: 0
 16733  00CEA6  0E00               	movlw	0
 16734  00CEA8  6F6E               	movwf	___fldiv@b& (0+255),b
 16735  00CEAA  0E00               	movlw	0
 16736  00CEAC  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 16737  00CEAE  0E00               	movlw	0
 16738  00CEB0  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 16739  00CEB2  0E00               	movlw	0
 16740  00CEB4  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 16741                           
 16742                           ; BSR set to: 0
 16743  00CEB6  0E80               	movlw	128
 16744  00CEB8  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 16745  00CEBA  0E7F               	movlw	127
 16746  00CEBC  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16747                           
 16748                           ; BSR set to: 0
 16749  00CEBE  517E               	movf	___fldiv@sign& (0+255),w,b
 16750  00CEC0  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16751                           
 16752                           ; BSR set to: 0
 16753  00CEC2  C06E  F06E         	movff	___fldiv@b,?___fldiv
 16754  00CEC6  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 16755  00CECA  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 16756  00CECE  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 16757                           
 16758                           ; BSR set to: 0
 16759  00CED2  0012               	return	
 16760  00CED4                     l3219:
 16761                           
 16762                           ; BSR set to: 0
 16763                           
 16764                           ; BSR set to: 0
 16765  00CED4  5185               	movf	___fldiv@bexp& (0+255),w,b
 16766  00CED6  A4D8               	btfss	status,2,c
 16767  00CED8  D011               	goto	l3221
 16768                           
 16769                           ; BSR set to: 0
 16770  00CEDA  0E00               	movlw	0
 16771  00CEDC  6F6E               	movwf	___fldiv@b& (0+255),b
 16772  00CEDE  0E00               	movlw	0
 16773  00CEE0  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 16774  00CEE2  0E00               	movlw	0
 16775  00CEE4  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 16776  00CEE6  0E00               	movlw	0
 16777  00CEE8  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 16778                           
 16779                           ; BSR set to: 0
 16780  00CEEA  C06E  F06E         	movff	___fldiv@b,?___fldiv
 16781  00CEEE  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 16782  00CEF2  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 16783  00CEF6  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 16784                           
 16785                           ; BSR set to: 0
 16786  00CEFA  0012               	return	
 16787  00CEFC                     l3221:
 16788                           
 16789                           ; BSR set to: 0
 16790                           
 16791                           ; BSR set to: 0
 16792  00CEFC  5186               	movf	___fldiv@aexp& (0+255),w,b
 16793  00CEFE  6F76               	movwf	??___fldiv& (0+255),b
 16794  00CF00  6B77               	clrf	(??___fldiv+1)& (0+255),b
 16795  00CF02  1F76               	comf	??___fldiv& (0+255),f,b
 16796  00CF04  1F77               	comf	(??___fldiv+1)& (0+255),f,b
 16797  00CF06  4B76               	infsnz	??___fldiv& (0+255),f,b
 16798  00CF08  2B77               	incf	(??___fldiv+1)& (0+255),f,b
 16799  00CF0A  5185               	movf	___fldiv@bexp& (0+255),w,b
 16800  00CF0C  6F78               	movwf	(??___fldiv+2)& (0+255),b
 16801  00CF0E  6B79               	clrf	(??___fldiv+3)& (0+255),b
 16802  00CF10  5176               	movf	??___fldiv& (0+255),w,b
 16803  00CF12  2778               	addwf	(??___fldiv+2)& (0+255),f,b
 16804  00CF14  5177               	movf	(??___fldiv+1)& (0+255),w,b
 16805  00CF16  2379               	addwfc	(??___fldiv+3)& (0+255),f,b
 16806  00CF18  0E7F               	movlw	127
 16807  00CF1A  2578               	addwf	(??___fldiv+2)& (0+255),w,b
 16808  00CF1C  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 16809  00CF1E  0E00               	movlw	0
 16810  00CF20  2179               	addwfc	(??___fldiv+3)& (0+255),w,b
 16811  00CF22  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16812                           
 16813                           ; BSR set to: 0
 16814  00CF24  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
 16815  00CF28  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
 16816  00CF2C  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
 16817  00CF30  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
 16818                           
 16819                           ; BSR set to: 0
 16820  00CF34  0E00               	movlw	0
 16821  00CF36  6F6E               	movwf	___fldiv@b& (0+255),b
 16822  00CF38  0E00               	movlw	0
 16823  00CF3A  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 16824  00CF3C  0E00               	movlw	0
 16825  00CF3E  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 16826  00CF40  0E00               	movlw	0
 16827  00CF42  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 16828                           
 16829                           ; BSR set to: 0
 16830  00CF44  0E00               	movlw	0
 16831  00CF46  6F81               	movwf	___fldiv@grs& (0+255),b
 16832  00CF48  0E00               	movlw	0
 16833  00CF4A  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 16834  00CF4C  0E00               	movlw	0
 16835  00CF4E  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 16836  00CF50  0E00               	movlw	0
 16837  00CF52  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 16838                           
 16839                           ; BSR set to: 0
 16840  00CF54  0E00               	movlw	0
 16841  00CF56  6F86               	movwf	___fldiv@aexp& (0+255),b
 16842  00CF58  D028               	goto	l3222
 16843  00CF5A                     
 16844                           ; BSR set to: 0
 16845                           
 16846                           ; BSR set to: 0
 16847  00CF5A  5186               	movf	___fldiv@aexp& (0+255),w,b
 16848  00CF5C  B4D8               	btfsc	status,2,c
 16849  00CF5E  D011               	goto	l3224
 16850                           
 16851                           ; BSR set to: 0
 16852  00CF60  90D8               	bcf	status,0,c
 16853  00CF62  377A               	rlcf	___fldiv@rem& (0+255),f,b
 16854  00CF64  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 16855  00CF66  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 16856  00CF68  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 16857  00CF6A  90D8               	bcf	status,0,c
 16858  00CF6C  376E               	rlcf	___fldiv@b& (0+255),f,b
 16859  00CF6E  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16860  00CF70  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16861  00CF72  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16862                           
 16863                           ; BSR set to: 0
 16864  00CF74  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 16865                           
 16866                           ; BSR set to: 0
 16867  00CF76  816E               	bsf	___fldiv@b& (0+255),0,b
 16868                           
 16869                           ; BSR set to: 0
 16870  00CF78  90D8               	bcf	status,0,c
 16871  00CF7A  3781               	rlcf	___fldiv@grs& (0+255),f,b
 16872  00CF7C  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16873  00CF7E  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16874  00CF80  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16875  00CF82                     l3224:
 16876                           
 16877                           ; BSR set to: 0
 16878                           
 16879                           ; BSR set to: 0
 16880  00CF82  5172               	movf	___fldiv@a& (0+255),w,b
 16881  00CF84  5D7A               	subwf	___fldiv@rem& (0+255),w,b
 16882  00CF86  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 16883  00CF88  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 16884  00CF8A  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 16885  00CF8C  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 16886  00CF8E  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 16887  00CF90  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 16888  00CF92  A0D8               	btfss	status,0,c
 16889  00CF94  D009               	goto	l3226
 16890                           
 16891                           ; BSR set to: 0
 16892  00CF96  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 16893                           
 16894                           ; BSR set to: 0
 16895  00CF98  5172               	movf	___fldiv@a& (0+255),w,b
 16896  00CF9A  5F7A               	subwf	___fldiv@rem& (0+255),f,b
 16897  00CF9C  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 16898  00CF9E  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 16899  00CFA0  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 16900  00CFA2  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 16901  00CFA4  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 16902  00CFA6  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 16903  00CFA8                     l3226:
 16904                           
 16905                           ; BSR set to: 0
 16906                           
 16907                           ; BSR set to: 0
 16908  00CFA8  2B86               	incf	___fldiv@aexp& (0+255),f,b
 16909  00CFAA                     l3222:
 16910                           
 16911                           ; BSR set to: 0
 16912  00CFAA  0E19               	movlw	25
 16913  00CFAC  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 16914  00CFAE  D7D5               	goto	l3223
 16915                           
 16916                           ; BSR set to: 0
 16917                           
 16918                           ; BSR set to: 0
 16919  00CFB0  517A               	movf	___fldiv@rem& (0+255),w,b
 16920  00CFB2  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 16921  00CFB4  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 16922  00CFB6  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 16923  00CFB8  B4D8               	btfsc	status,2,c
 16924  00CFBA  D011               	goto	l3229
 16925                           
 16926                           ; BSR set to: 0
 16927  00CFBC  8181               	bsf	___fldiv@grs& (0+255),0,b
 16928                           
 16929                           ; BSR set to: 0
 16930  00CFBE  D00F               	goto	l3229
 16931  00CFC0                     
 16932                           ; BSR set to: 0
 16933                           
 16934                           ; BSR set to: 0
 16935  00CFC0  90D8               	bcf	status,0,c
 16936  00CFC2  376E               	rlcf	___fldiv@b& (0+255),f,b
 16937  00CFC4  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16938  00CFC6  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16939  00CFC8  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16940                           
 16941                           ; BSR set to: 0
 16942  00CFCA  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 16943                           
 16944                           ; BSR set to: 0
 16945  00CFCC  816E               	bsf	___fldiv@b& (0+255),0,b
 16946                           
 16947                           ; BSR set to: 0
 16948  00CFCE  90D8               	bcf	status,0,c
 16949  00CFD0  3781               	rlcf	___fldiv@grs& (0+255),f,b
 16950  00CFD2  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16951  00CFD4  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16952  00CFD6  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16953  00CFD8  077F               	decf	___fldiv@new_exp& (0+255),f,b
 16954  00CFDA  A0D8               	btfss	status,0,c
 16955  00CFDC  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 16956  00CFDE                     l3229:
 16957                           
 16958                           ; BSR set to: 0
 16959                           
 16960                           ; BSR set to: 0
 16961  00CFDE  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 16962  00CFE0  D7EF               	goto	l3230
 16963                           
 16964                           ; BSR set to: 0
 16965                           
 16966                           ; BSR set to: 0
 16967  00CFE2  0E00               	movlw	0
 16968  00CFE4  6F86               	movwf	___fldiv@aexp& (0+255),b
 16969                           
 16970                           ; BSR set to: 0
 16971  00CFE6  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16972  00CFE8  D016               	goto	l3236
 16973                           
 16974                           ; BSR set to: 0
 16975  00CFEA  0EFF               	movlw	255
 16976  00CFEC  1581               	andwf	___fldiv@grs& (0+255),w,b
 16977  00CFEE  6F76               	movwf	??___fldiv& (0+255),b
 16978  00CFF0  0EFF               	movlw	255
 16979  00CFF2  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 16980  00CFF4  6F77               	movwf	(??___fldiv+1)& (0+255),b
 16981  00CFF6  0EFF               	movlw	255
 16982  00CFF8  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 16983  00CFFA  6F78               	movwf	(??___fldiv+2)& (0+255),b
 16984  00CFFC  0E7F               	movlw	127
 16985  00CFFE  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 16986  00D000  6F79               	movwf	(??___fldiv+3)& (0+255),b
 16987  00D002  5176               	movf	??___fldiv& (0+255),w,b
 16988  00D004  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 16989  00D006  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 16990  00D008  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 16991  00D00A  A4D8               	btfss	status,2,c
 16992  00D00C  D002               	goto	u18140
 16993                           
 16994                           ; BSR set to: 0
 16995                           
 16996                           ; BSR set to: 0
 16997  00D00E  A16E               	btfss	___fldiv@b& (0+255),0,b
 16998  00D010  D002               	goto	l3236
 16999  00D012                     u18140:
 17000                           
 17001                           ; BSR set to: 0
 17002  00D012  0E01               	movlw	1
 17003  00D014  6F86               	movwf	___fldiv@aexp& (0+255),b
 17004  00D016                     l3236:
 17005                           
 17006                           ; BSR set to: 0
 17007                           
 17008                           ; BSR set to: 0
 17009                           
 17010                           ; BSR set to: 0
 17011  00D016  5186               	movf	___fldiv@aexp& (0+255),w,b
 17012  00D018  B4D8               	btfsc	status,2,c
 17013  00D01A  D01F               	goto	l3238
 17014                           
 17015                           ; BSR set to: 0
 17016  00D01C  0E01               	movlw	1
 17017  00D01E  276E               	addwf	___fldiv@b& (0+255),f,b
 17018  00D020  0E00               	movlw	0
 17019  00D022  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 17020  00D024  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 17021  00D026  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 17022                           
 17023                           ; BSR set to: 0
 17024  00D028  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 17025  00D02A  D017               	goto	l3238
 17026                           
 17027                           ; BSR set to: 0
 17028  00D02C  C06E  F076         	movff	___fldiv@b,??___fldiv
 17029  00D030  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 17030  00D034  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 17031  00D038  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 17032  00D03C  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 17033  00D03E  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 17034  00D040  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 17035  00D042  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 17036  00D044  3376               	rrcf	??___fldiv& (0+255),f,b
 17037  00D046  C076  F06E         	movff	??___fldiv,___fldiv@b
 17038  00D04A  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 17039  00D04E  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 17040  00D052  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 17041                           
 17042                           ; BSR set to: 0
 17043  00D056  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 17044  00D058  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 17045  00D05A                     l3238:
 17046                           
 17047                           ; BSR set to: 0
 17048                           
 17049                           ; BSR set to: 0
 17050                           
 17051                           ; BSR set to: 0
 17052  00D05A  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17053  00D05C  D010               	goto	l3239
 17054  00D05E  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17055  00D060  E103               	bnz	u18170
 17056  00D062  297F               	incf	___fldiv@new_exp& (0+255),w,b
 17057  00D064  A0D8               	btfss	status,0,c
 17058  00D066  D00B               	goto	l3239
 17059  00D068                     u18170:
 17060                           
 17061                           ; BSR set to: 0
 17062  00D068  0E00               	movlw	0
 17063  00D06A  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17064  00D06C  697F               	setf	___fldiv@new_exp& (0+255),b
 17065  00D06E  0E00               	movlw	0
 17066  00D070  6F6E               	movwf	___fldiv@b& (0+255),b
 17067  00D072  0E00               	movlw	0
 17068  00D074  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 17069  00D076  0E00               	movlw	0
 17070  00D078  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 17071  00D07A  0E00               	movlw	0
 17072  00D07C  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 17073  00D07E                     l3239:
 17074                           
 17075                           ; BSR set to: 0
 17076                           
 17077                           ; BSR set to: 0
 17078  00D07E  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17079  00D080  D005               	goto	u18180
 17080  00D082  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17081  00D084  E111               	bnz	l18568
 17082  00D086  057F               	decf	___fldiv@new_exp& (0+255),w,b
 17083  00D088  B0D8               	btfsc	status,0,c
 17084  00D08A  D00E               	goto	l3240
 17085  00D08C                     u18180:
 17086                           
 17087                           ; BSR set to: 0
 17088  00D08C  0E00               	movlw	0
 17089  00D08E  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17090  00D090  0E00               	movlw	0
 17091  00D092  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 17092  00D094  0E00               	movlw	0
 17093  00D096  6F6E               	movwf	___fldiv@b& (0+255),b
 17094  00D098  0E00               	movlw	0
 17095  00D09A  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 17096  00D09C  0E00               	movlw	0
 17097  00D09E  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 17098  00D0A0  0E00               	movlw	0
 17099  00D0A2  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 17100  00D0A4  0E00               	movlw	0
 17101  00D0A6  6F7E               	movwf	___fldiv@sign& (0+255),b
 17102  00D0A8                     l3240:
 17103  00D0A8                     l18568:
 17104                           
 17105                           ; BSR set to: 0
 17106  00D0A8  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 17107                           
 17108                           ; BSR set to: 0
 17109  00D0AC  A185               	btfss	___fldiv@bexp& (0+255),0,b
 17110  00D0AE  D002               	goto	l3241
 17111                           
 17112                           ; BSR set to: 0
 17113  00D0B0  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 17114  00D0B2  D001               	goto	l3242
 17115  00D0B4                     l3241:
 17116                           
 17117                           ; BSR set to: 0
 17118                           
 17119                           ; BSR set to: 0
 17120  00D0B4  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 17121  00D0B6                     l3242:
 17122                           
 17123                           ; BSR set to: 0
 17124                           
 17125                           ; BSR set to: 0
 17126  00D0B6  90D8               	bcf	status,0,c
 17127  00D0B8  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 17128  00D0BA  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 17129                           
 17130                           ; BSR set to: 0
 17131  00D0BC  517E               	movf	___fldiv@sign& (0+255),w,b
 17132  00D0BE  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 17133                           
 17134                           ; BSR set to: 0
 17135  00D0C0  C06E  F06E         	movff	___fldiv@b,?___fldiv
 17136  00D0C4  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 17137  00D0C8  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 17138  00D0CC  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 17139  00D0D0  0012               	return	
 17140  00D0D2                     __end_of___fldiv:
 17141                           	opt stack 0
 17142                           tblptru	equ	0xFF8
 17143                           tblptrh	equ	0xFF7
 17144                           tblptrl	equ	0xFF6
 17145                           tablat	equ	0xFF5
 17146                           prodh	equ	0xFF4
 17147                           prodl	equ	0xFF3
 17148                           intcon	equ	0xFF2
 17149                           postinc0	equ	0xFEE
 17150                           wreg	equ	0xFE8
 17151                           indf1	equ	0xFE7
 17152                           postdec1	equ	0xFE5
 17153                           plusw1	equ	0xFE3
 17154                           fsr1h	equ	0xFE2
 17155                           fsr1l	equ	0xFE1
 17156                           indf2	equ	0xFDF
 17157                           postinc2	equ	0xFDE
 17158                           postdec2	equ	0xFDD
 17159                           plusw2	equ	0xFDB
 17160                           fsr2h	equ	0xFDA
 17161                           fsr2l	equ	0xFD9
 17162                           status	equ	0xFD8
 17163                           
 17164 ;; *************** function __display_signed_itoa *****************
 17165 ;; Defined at:
 17166 ;;		line 116 in file "display.c"
 17167 ;; Parameters:    Size  Location     Type
 17168 ;;  value           2   47[BANK0 ] int 
 17169 ;;  text            2   49[BANK0 ] PTR unsigned char 
 17170 ;;		 -> display_prepare@temp(10), 
 17171 ;; Auto vars:     Size  Location     Type
 17172 ;;		None
 17173 ;; Return value:  Size  Location     Type
 17174 ;;                  1    wreg      void 
 17175 ;; Registers used:
 17176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17177 ;; Tracked objects:
 17178 ;;		On entry : 0/0
 17179 ;;		On exit  : 0/0
 17180 ;;		Unchanged: 0/0
 17181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17182 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17185 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17186 ;;Total ram usage:        4 bytes
 17187 ;; Hardware stack levels used:    1
 17188 ;; Hardware stack levels required when called:   14
 17189 ;; This function calls:
 17190 ;;		__display_padded_itoa
 17191 ;; This function is called by:
 17192 ;;		_display_prepare
 17193 ;; This function uses a non-reentrant model
 17194 ;;
 17195                           
 17196                           	psect	text42
 17197  011BAA                     __ptext42:
 17198                           	opt stack 0
 17199  011BAA                     __display_signed_itoa:
 17200                           	opt stack 15
 17201                           
 17202                           ;display.c: 118: if(value<0)
 17203                           
 17204                           ; BSR set to: 0
 17205                           ;incstack = 0
 17206  011BAA  0100               	movlb	0	; () banked
 17207  011BAC  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 17208  011BAE  D00A               	goto	l1286
 17209                           
 17210                           ; BSR set to: 0
 17211                           ;display.c: 119: {;display.c: 120: value = -value;
 17212  011BB0  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 17213  011BB2  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 17214  011BB4  B0D8               	btfsc	status,0,c
 17215  011BB6  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 17216                           
 17217                           ; BSR set to: 0
 17218                           ;display.c: 121: text[0] = '-';
 17219  011BB8  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 17220  011BBC  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 17221  011BC0  0E2D               	movlw	45
 17222  011BC2  D005               	goto	L35
 17223  011BC4                     l1286:
 17224                           
 17225                           ; BSR set to: 0
 17226                           ;display.c: 123: else;display.c: 124: {;display.c: 125: text[0] = '+';
 17227                           
 17228                           ; BSR set to: 0
 17229  011BC4  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 17230  011BC8  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 17231  011BCC  0E2B               	movlw	43
 17232  011BCE                     L35:
 17233  011BCE  6EDF               	movwf	indf2,c
 17234                           
 17235                           ; BSR set to: 0
 17236                           ;display.c: 126: };display.c: 127: _display_padded_itoa(value, 0, &text[1]);
 17237                           
 17238                           ; BSR set to: 0
 17239  011BD0  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 17240  011BD4  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 17241  011BD8  0E00               	movlw	0
 17242  011BDA  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 17243  011BDC  0E01               	movlw	1
 17244  011BDE  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 17245  011BE0  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 17246  011BE2  0E00               	movlw	0
 17247  011BE4  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 17248  011BE6  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 17249  011BE8  EC94  F07C         	call	__display_padded_itoa	;wreg free
 17250  011BEC  0012               	return		;funcret
 17251  011BEE                     __end_of__display_signed_itoa:
 17252                           	opt stack 0
 17253                           tblptru	equ	0xFF8
 17254                           tblptrh	equ	0xFF7
 17255                           tblptrl	equ	0xFF6
 17256                           tablat	equ	0xFF5
 17257                           prodh	equ	0xFF4
 17258                           prodl	equ	0xFF3
 17259                           intcon	equ	0xFF2
 17260                           postinc0	equ	0xFEE
 17261                           wreg	equ	0xFE8
 17262                           indf1	equ	0xFE7
 17263                           postdec1	equ	0xFE5
 17264                           plusw1	equ	0xFE3
 17265                           fsr1h	equ	0xFE2
 17266                           fsr1l	equ	0xFE1
 17267                           indf2	equ	0xFDF
 17268                           postinc2	equ	0xFDE
 17269                           postdec2	equ	0xFDD
 17270                           plusw2	equ	0xFDB
 17271                           fsr2h	equ	0xFDA
 17272                           fsr2l	equ	0xFD9
 17273                           status	equ	0xFD8
 17274                           
 17275 ;; *************** function __display_padded_itoa *****************
 17276 ;; Defined at:
 17277 ;;		line 94 in file "display.c"
 17278 ;; Parameters:    Size  Location     Type
 17279 ;;  value           2   24[BANK0 ] int 
 17280 ;;  length          1   26[BANK0 ] unsigned char 
 17281 ;;  text            2   27[BANK0 ] PTR unsigned char 
 17282 ;;		 -> display_prepare@temp(10), 
 17283 ;; Auto vars:     Size  Location     Type
 17284 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 17285 ;;  padding         1   46[BANK0 ] unsigned char 
 17286 ;;  pos             1   45[BANK0 ] unsigned char 
 17287 ;;  len             1   44[BANK0 ] unsigned char 
 17288 ;; Return value:  Size  Location     Type
 17289 ;;                  1    wreg      void 
 17290 ;; Registers used:
 17291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17292 ;; Tracked objects:
 17293 ;;		On entry : 0/0
 17294 ;;		On exit  : 0/0
 17295 ;;		Unchanged: 0/0
 17296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17297 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17298 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17299 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17300 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17301 ;;Total ram usage:       23 bytes
 17302 ;; Hardware stack levels used:    1
 17303 ;; Hardware stack levels required when called:   13
 17304 ;; This function calls:
 17305 ;;		_itoa
 17306 ;;		_strlen
 17307 ;; This function is called by:
 17308 ;;		__display_signed_itoa
 17309 ;;		_display_prepare
 17310 ;; This function uses a non-reentrant model
 17311 ;;
 17312                           
 17313                           	psect	text43
 17314  00F928                     __ptext43:
 17315                           	opt stack 0
 17316  00F928                     __display_padded_itoa:
 17317                           	opt stack 15
 17318                           
 17319                           ;display.c: 96: uint8_t pos;;display.c: 97: uint8_t padding;;display.c: 99: uint8_t len;
      +                          ;display.c: 100: char tmp[10];;display.c: 101: itoa(tmp, value, 10);
 17320                           
 17321                           ;incstack = 0
 17322  00F928  0E82               	movlw	low __display_padded_itoa@tmp
 17323  00F92A  0100               	movlb	0	; () banked
 17324  00F92C  6F70               	movwf	itoa@buf& (0+255),b
 17325  00F92E  0E00               	movlw	high __display_padded_itoa@tmp
 17326  00F930  6F71               	movwf	(itoa@buf+1)& (0+255),b
 17327  00F932  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 17328  00F936  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 17329  00F93A  0E00               	movlw	0
 17330  00F93C  6F75               	movwf	(itoa@base+1)& (0+255),b
 17331  00F93E  0E0A               	movlw	10
 17332  00F940  6F74               	movwf	itoa@base& (0+255),b
 17333  00F942  ECF7  F08D         	call	_itoa	;wreg free
 17334                           
 17335                           ;display.c: 102: len = strlen(tmp);
 17336  00F946  0E82               	movlw	low __display_padded_itoa@tmp
 17337  00F948  0100               	movlb	0	; () banked
 17338  00F94A  6F60               	movwf	strlen@s& (0+255),b
 17339  00F94C  0E00               	movlw	high __display_padded_itoa@tmp
 17340  00F94E  6F61               	movwf	(strlen@s+1)& (0+255),b
 17341  00F950  EC7D  F08E         	call	_strlen	;wreg free
 17342  00F954  0100               	movlb	0	; () banked
 17343  00F956  5160               	movf	?_strlen& (0+255),w,b
 17344  00F958  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 17345                           
 17346                           ; BSR set to: 0
 17347                           ;display.c: 103: padding = 0;
 17348  00F95A  0E00               	movlw	0
 17349  00F95C  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 17350                           
 17351                           ;display.c: 104: while((padding+len)<length)
 17352  00F95E  D00B               	goto	l1277
 17353  00F960                     
 17354                           ; BSR set to: 0
 17355                           ;display.c: 105: {;display.c: 106: text[padding] = ' ';
 17356                           
 17357                           ; BSR set to: 0
 17358  00F960  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 17359  00F962  0D01               	mullw	1
 17360  00F964  50F3               	movf	prodl,w,c
 17361  00F966  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 17362  00F968  6ED9               	movwf	fsr2l,c
 17363  00F96A  50F4               	movf	prodh,w,c
 17364  00F96C  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 17365  00F96E  6EDA               	movwf	fsr2h,c
 17366  00F970  0E20               	movlw	32
 17367  00F972  6EDF               	movwf	indf2,c
 17368                           
 17369                           ; BSR set to: 0
 17370                           ;display.c: 107: ++padding;
 17371  00F974  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 17372  00F976                     l1277:
 17373                           
 17374                           ; BSR set to: 0
 17375                           
 17376                           ; BSR set to: 0
 17377  00F976  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 17378  00F978  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 17379  00F97A  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 17380  00F97C  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 17381  00F97E  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 17382  00F982  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 17383  00F984  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 17384  00F986  0E00               	movlw	0
 17385  00F988  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 17386  00F98A  517D               	movf	??__display_padded_itoa& (0+255),w,b
 17387  00F98C  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 17388  00F98E  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 17389  00F990  0A80               	xorlw	128
 17390  00F992  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 17391  00F994  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 17392  00F996  0A80               	xorlw	128
 17393  00F998  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 17394  00F99A  A0D8               	btfss	status,0,c
 17395  00F99C  D7E1               	goto	l1278
 17396                           
 17397                           ; BSR set to: 0
 17398                           ;display.c: 108: };display.c: 109: for(pos=0; tmp[pos]; ++pos)
 17399                           
 17400                           ; BSR set to: 0
 17401  00F99E  0E00               	movlw	0
 17402  00F9A0  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 17403  00F9A2  D018               	goto	l1280
 17404  00F9A4                     
 17405                           ; BSR set to: 0
 17406                           ;display.c: 110: {;display.c: 111: text[pos+padding] = tmp[pos];
 17407                           
 17408                           ; BSR set to: 0
 17409  00F9A4  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 17410  00F9A6  0D01               	mullw	1
 17411  00F9A8  0E82               	movlw	low __display_padded_itoa@tmp
 17412  00F9AA  24F3               	addwf	prodl,w,c
 17413  00F9AC  6ED9               	movwf	fsr2l,c
 17414  00F9AE  0E00               	movlw	high __display_padded_itoa@tmp
 17415  00F9B0  20F4               	addwfc	prodh,w,c
 17416  00F9B2  6EDA               	movwf	fsr2h,c
 17417  00F9B4  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 17418  00F9B6  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 17419  00F9BA  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 17420  00F9BC  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 17421  00F9BE  0E00               	movlw	0
 17422  00F9C0  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 17423  00F9C2  517D               	movf	??__display_padded_itoa& (0+255),w,b
 17424  00F9C4  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 17425  00F9C6  6EE1               	movwf	fsr1l,c
 17426  00F9C8  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 17427  00F9CA  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 17428  00F9CC  6EE2               	movwf	fsr1h,c
 17429  00F9CE  CFDF FFE7          	movff	indf2,indf1
 17430                           
 17431                           ; BSR set to: 0
 17432  00F9D2  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 17433  00F9D4                     l1280:
 17434                           
 17435                           ; BSR set to: 0
 17436                           
 17437                           ; BSR set to: 0
 17438  00F9D4  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 17439  00F9D6  0D01               	mullw	1
 17440  00F9D8  0E82               	movlw	low __display_padded_itoa@tmp
 17441  00F9DA  24F3               	addwf	prodl,w,c
 17442  00F9DC  6ED9               	movwf	fsr2l,c
 17443  00F9DE  0E00               	movlw	high __display_padded_itoa@tmp
 17444  00F9E0  20F4               	addwfc	prodh,w,c
 17445  00F9E2  6EDA               	movwf	fsr2h,c
 17446  00F9E4  50DF               	movf	indf2,w,c
 17447  00F9E6  A4D8               	btfss	status,2,c
 17448  00F9E8  D7DD               	goto	l1281
 17449                           
 17450                           ; BSR set to: 0
 17451                           ;display.c: 112: };display.c: 113: text[pos+padding] = 0x00;
 17452                           
 17453                           ; BSR set to: 0
 17454  00F9EA  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 17455  00F9EC  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 17456  00F9F0  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 17457  00F9F2  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 17458  00F9F4  0E00               	movlw	0
 17459  00F9F6  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 17460  00F9F8  517D               	movf	??__display_padded_itoa& (0+255),w,b
 17461  00F9FA  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 17462  00F9FC  6ED9               	movwf	fsr2l,c
 17463  00F9FE  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 17464  00FA00  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 17465  00FA02  6EDA               	movwf	fsr2h,c
 17466  00FA04  0E00               	movlw	0
 17467  00FA06  6EDF               	movwf	indf2,c
 17468                           
 17469                           ; BSR set to: 0
 17470  00FA08  0012               	return		;funcret
 17471  00FA0A                     __end_of__display_padded_itoa:
 17472                           	opt stack 0
 17473                           tblptru	equ	0xFF8
 17474                           tblptrh	equ	0xFF7
 17475                           tblptrl	equ	0xFF6
 17476                           tablat	equ	0xFF5
 17477                           prodh	equ	0xFF4
 17478                           prodl	equ	0xFF3
 17479                           intcon	equ	0xFF2
 17480                           postinc0	equ	0xFEE
 17481                           wreg	equ	0xFE8
 17482                           indf1	equ	0xFE7
 17483                           postdec1	equ	0xFE5
 17484                           plusw1	equ	0xFE3
 17485                           fsr1h	equ	0xFE2
 17486                           fsr1l	equ	0xFE1
 17487                           indf2	equ	0xFDF
 17488                           postinc2	equ	0xFDE
 17489                           postdec2	equ	0xFDD
 17490                           plusw2	equ	0xFDB
 17491                           fsr2h	equ	0xFDA
 17492                           fsr2l	equ	0xFD9
 17493                           status	equ	0xFD8
 17494                           
 17495 ;; *************** function __display_itoa_long *****************
 17496 ;; Defined at:
 17497 ;;		line 198 in file "display.c"
 17498 ;; Parameters:    Size  Location     Type
 17499 ;;  value           4   77[BANK0 ] long 
 17500 ;;  decimals        1   81[BANK0 ] unsigned char 
 17501 ;;  text            2   82[BANK0 ] PTR unsigned char 
 17502 ;;		 -> display_prepare@temp(10), 
 17503 ;; Auto vars:     Size  Location     Type
 17504 ;;  short_value     2   89[BANK0 ] int 
 17505 ;;  last_digit      1   91[BANK0 ] char 
 17506 ;;  length          1   88[BANK0 ] unsigned char 
 17507 ;; Return value:  Size  Location     Type
 17508 ;;                  1    wreg      void 
 17509 ;; Registers used:
 17510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17511 ;; Tracked objects:
 17512 ;;		On entry : 0/0
 17513 ;;		On exit  : 0/0
 17514 ;;		Unchanged: 0/0
 17515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17516 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17517 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17518 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17519 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17520 ;;Total ram usage:       15 bytes
 17521 ;; Hardware stack levels used:    1
 17522 ;; Hardware stack levels required when called:   14
 17523 ;; This function calls:
 17524 ;;		___aldiv
 17525 ;;		___almod
 17526 ;;		__display_itoa
 17527 ;;		_strlen
 17528 ;; This function is called by:
 17529 ;;		_display_prepare
 17530 ;; This function uses a non-reentrant model
 17531 ;;
 17532                           
 17533                           	psect	text44
 17534  00EF0C                     __ptext44:
 17535                           	opt stack 0
 17536  00EF0C                     __display_itoa_long:
 17537                           	opt stack 15
 17538                           
 17539                           ;display.c: 200: int16_t short_value;;display.c: 201: int8_t last_digit;;display.c: 202:
      +                           uint8_t length;;display.c: 204: short_value = (int16_t) value;
 17540                           
 17541                           ; BSR set to: 0
 17542                           ;incstack = 0
 17543  00EF0C  C0AD  F0B9         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 17544  00EF10  C0AE  F0BA         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 17545                           
 17546                           ;display.c: 205: if(short_value==value)
 17547  00EF14  C0B9  F0B4         	movff	__display_itoa_long@short_value,??__display_itoa_long
 17548  00EF18  C0BA  F0B5         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 17549  00EF1C  0E00               	movlw	0
 17550  00EF1E  0100               	movlb	0	; () banked
 17551  00EF20  BFB5               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 17552  00EF22  0EFF               	movlw	255
 17553  00EF24  6FB6               	movwf	(??__display_itoa_long+2)& (0+255),b
 17554  00EF26  6FB7               	movwf	(??__display_itoa_long+3)& (0+255),b
 17555  00EF28  51AD               	movf	__display_itoa_long@value& (0+255),w,b
 17556  00EF2A  19B4               	xorwf	??__display_itoa_long& (0+255),w,b
 17557  00EF2C  E117               	bnz	l19718
 17558  00EF2E  51AE               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 17559  00EF30  19B5               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 17560  00EF32  E114               	bnz	l19718
 17561  00EF34  51AF               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 17562  00EF36  19B6               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 17563  00EF38  E111               	bnz	l19718
 17564  00EF3A  51B0               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 17565  00EF3C  19B7               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 17566  00EF3E  A4D8               	btfss	status,2,c
 17567  00EF40  D00D               	goto	l1313
 17568                           
 17569                           ; BSR set to: 0
 17570                           ;display.c: 206: {;display.c: 207: _display_itoa(short_value, decimals, text);
 17571  00EF42  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 17572  00EF46  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 17573  00EF4A  C0B1  F097         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 17574  00EF4E  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 17575  00EF52  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 17576  00EF56  EC0C  F06C         	call	__display_itoa	;wreg free
 17577                           
 17578                           ;display.c: 208: }
 17579  00EF5A  0012               	return	
 17580  00EF5C                     l1313:
 17581  00EF5C                     l19718:
 17582                           
 17583                           ;display.c: 209: else;display.c: 210: {;display.c: 211: short_value = value / 10;
 17584  00EF5C  C0AD  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 17585  00EF60  C0AE  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 17586  00EF64  C0AF  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 17587  00EF68  C0B0  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 17588  00EF6C  0E0A               	movlw	10
 17589  00EF6E  0100               	movlb	0	; () banked
 17590  00EF70  6F64               	movwf	___aldiv@divisor& (0+255),b
 17591  00EF72  0E00               	movlw	0
 17592  00EF74  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 17593  00EF76  0E00               	movlw	0
 17594  00EF78  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 17595  00EF7A  0E00               	movlw	0
 17596  00EF7C  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 17597  00EF7E  ECF5  F07F         	call	___aldiv	;wreg free
 17598  00EF82  C060  F0B9         	movff	?___aldiv,__display_itoa_long@short_value
 17599  00EF86  C061  F0BA         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 17600                           
 17601                           ;display.c: 212: _display_itoa(short_value, decimals-1, text);
 17602  00EF8A  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 17603  00EF8E  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 17604  00EF92  0100               	movlb	0	; () banked
 17605  00EF94  05B1               	decf	__display_itoa_long@decimals& (0+255),w,b
 17606  00EF96  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17607  00EF98  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 17608  00EF9C  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 17609  00EFA0  EC0C  F06C         	call	__display_itoa	;wreg free
 17610                           
 17611                           ;display.c: 213: length = strlen(text);
 17612  00EFA4  C0B2  F060         	movff	__display_itoa_long@text,strlen@s
 17613  00EFA8  C0B3  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 17614  00EFAC  EC7D  F08E         	call	_strlen	;wreg free
 17615  00EFB0  0100               	movlb	0	; () banked
 17616  00EFB2  5160               	movf	?_strlen& (0+255),w,b
 17617  00EFB4  6FB8               	movwf	__display_itoa_long@length& (0+255),b
 17618                           
 17619                           ; BSR set to: 0
 17620                           ;display.c: 214: last_digit = value % 10;
 17621  00EFB6  C0AD  F060         	movff	__display_itoa_long@value,___almod@dividend
 17622  00EFBA  C0AE  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 17623  00EFBE  C0AF  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 17624  00EFC2  C0B0  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 17625  00EFC6  0E0A               	movlw	10
 17626  00EFC8  6F64               	movwf	___almod@divisor& (0+255),b
 17627  00EFCA  0E00               	movlw	0
 17628  00EFCC  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 17629  00EFCE  0E00               	movlw	0
 17630  00EFD0  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 17631  00EFD2  0E00               	movlw	0
 17632  00EFD4  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 17633  00EFD6  ECED  F082         	call	___almod	;wreg free
 17634  00EFDA  0100               	movlb	0	; () banked
 17635  00EFDC  5160               	movf	?___almod& (0+255),w,b
 17636  00EFDE  6FBB               	movwf	__display_itoa_long@last_digit& (0+255),b
 17637                           
 17638                           ; BSR set to: 0
 17639                           ;display.c: 215: if(last_digit<0)
 17640  00EFE0  BFBB               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 17641                           
 17642                           ; BSR set to: 0
 17643                           ;display.c: 216: last_digit = -last_digit;
 17644  00EFE2  6DBB               	negf	__display_itoa_long@last_digit& (0+255),b
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;display.c: 217: text[length] = last_digit + 0x30;
 17648                           
 17649                           ; BSR set to: 0
 17650  00EFE4  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 17651  00EFE6  0D01               	mullw	1
 17652  00EFE8  50F3               	movf	prodl,w,c
 17653  00EFEA  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 17654  00EFEC  6ED9               	movwf	fsr2l,c
 17655  00EFEE  50F4               	movf	prodh,w,c
 17656  00EFF0  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 17657  00EFF2  6EDA               	movwf	fsr2h,c
 17658  00EFF4  51BB               	movf	__display_itoa_long@last_digit& (0+255),w,b
 17659  00EFF6  0F30               	addlw	48
 17660  00EFF8  6EDF               	movwf	indf2,c
 17661                           
 17662                           ; BSR set to: 0
 17663                           ;display.c: 218: text[length+1] = 0x00;
 17664  00EFFA  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 17665  00EFFC  6FB4               	movwf	??__display_itoa_long& (0+255),b
 17666  00EFFE  6BB5               	clrf	(??__display_itoa_long+1)& (0+255),b
 17667  00F000  0E01               	movlw	1
 17668  00F002  27B4               	addwf	??__display_itoa_long& (0+255),f,b
 17669  00F004  0E00               	movlw	0
 17670  00F006  23B5               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 17671  00F008  51B4               	movf	??__display_itoa_long& (0+255),w,b
 17672  00F00A  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 17673  00F00C  6ED9               	movwf	fsr2l,c
 17674  00F00E  51B5               	movf	(??__display_itoa_long+1)& (0+255),w,b
 17675  00F010  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 17676  00F012  6EDA               	movwf	fsr2h,c
 17677  00F014  0E00               	movlw	0
 17678  00F016  6EDF               	movwf	indf2,c
 17679  00F018  0012               	return	
 17680  00F01A                     __end_of__display_itoa_long:
 17681                           	opt stack 0
 17682                           tblptru	equ	0xFF8
 17683                           tblptrh	equ	0xFF7
 17684                           tblptrl	equ	0xFF6
 17685                           tablat	equ	0xFF5
 17686                           prodh	equ	0xFF4
 17687                           prodl	equ	0xFF3
 17688                           intcon	equ	0xFF2
 17689                           postinc0	equ	0xFEE
 17690                           wreg	equ	0xFE8
 17691                           indf1	equ	0xFE7
 17692                           postdec1	equ	0xFE5
 17693                           plusw1	equ	0xFE3
 17694                           fsr1h	equ	0xFE2
 17695                           fsr1l	equ	0xFE1
 17696                           indf2	equ	0xFDF
 17697                           postinc2	equ	0xFDE
 17698                           postdec2	equ	0xFDD
 17699                           plusw2	equ	0xFDB
 17700                           fsr2h	equ	0xFDA
 17701                           fsr2l	equ	0xFD9
 17702                           status	equ	0xFD8
 17703                           
 17704 ;; *************** function __display_itoa *****************
 17705 ;; Defined at:
 17706 ;;		line 130 in file "display.c"
 17707 ;; Parameters:    Size  Location     Type
 17708 ;;  value           2   53[BANK0 ] int 
 17709 ;;  decimals        1   55[BANK0 ] unsigned char 
 17710 ;;  text            2   56[BANK0 ] PTR unsigned char 
 17711 ;;		 -> display_prepare@temp(10), display_content(80), 
 17712 ;; Auto vars:     Size  Location     Type
 17713 ;;  tmp            10   64[BANK0 ] unsigned char [10]
 17714 ;;  pos             1   76[BANK0 ] unsigned char 
 17715 ;;  missing         1   75[BANK0 ] char 
 17716 ;;  len             1   74[BANK0 ] unsigned char 
 17717 ;; Return value:  Size  Location     Type
 17718 ;;                  1    wreg      void 
 17719 ;; Registers used:
 17720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17721 ;; Tracked objects:
 17722 ;;		On entry : 0/0
 17723 ;;		On exit  : 0/0
 17724 ;;		Unchanged: 0/0
 17725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17726 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17727 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17728 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17729 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17730 ;;Total ram usage:       24 bytes
 17731 ;; Hardware stack levels used:    1
 17732 ;; Hardware stack levels required when called:   13
 17733 ;; This function calls:
 17734 ;;		_itoa
 17735 ;;		_strlen
 17736 ;; This function is called by:
 17737 ;;		__display_itoa_long
 17738 ;;		_display_prepare
 17739 ;; This function uses a non-reentrant model
 17740 ;;
 17741                           
 17742                           	psect	text45
 17743  00D818                     __ptext45:
 17744                           	opt stack 0
 17745  00D818                     __display_itoa:
 17746                           	opt stack 15
 17747                           
 17748                           ;display.c: 132: uint8_t pos;;display.c: 133: uint8_t len;;display.c: 134: int8_t missin
      +                          g;;display.c: 135: char tmp[10];;display.c: 136: itoa(tmp, value, 10);
 17749                           
 17750                           ;incstack = 0
 17751  00D818  0EA0               	movlw	low __display_itoa@tmp
 17752  00D81A  0100               	movlb	0	; () banked
 17753  00D81C  6F70               	movwf	itoa@buf& (0+255),b
 17754  00D81E  0E00               	movlw	high __display_itoa@tmp
 17755  00D820  6F71               	movwf	(itoa@buf+1)& (0+255),b
 17756  00D822  C095  F072         	movff	__display_itoa@value,itoa@val
 17757  00D826  C096  F073         	movff	__display_itoa@value+1,itoa@val+1
 17758  00D82A  0E00               	movlw	0
 17759  00D82C  6F75               	movwf	(itoa@base+1)& (0+255),b
 17760  00D82E  0E0A               	movlw	10
 17761  00D830  6F74               	movwf	itoa@base& (0+255),b
 17762  00D832  ECF7  F08D         	call	_itoa	;wreg free
 17763                           
 17764                           ;display.c: 137: len = strlen(tmp);
 17765  00D836  0EA0               	movlw	low __display_itoa@tmp
 17766  00D838  0100               	movlb	0	; () banked
 17767  00D83A  6F60               	movwf	strlen@s& (0+255),b
 17768  00D83C  0E00               	movlw	high __display_itoa@tmp
 17769  00D83E  6F61               	movwf	(strlen@s+1)& (0+255),b
 17770  00D840  EC7D  F08E         	call	_strlen	;wreg free
 17771  00D844  0100               	movlb	0	; () banked
 17772  00D846  5160               	movf	?_strlen& (0+255),w,b
 17773  00D848  6FAA               	movwf	__display_itoa@len& (0+255),b
 17774                           
 17775                           ; BSR set to: 0
 17776                           ;display.c: 139: if(value<0)
 17777  00D84A  AF96               	btfss	(__display_itoa@value+1)& (0+255),7,b
 17778  00D84C  D054               	goto	l1291
 17779                           
 17780                           ; BSR set to: 0
 17781                           ;display.c: 140: {;display.c: 141: missing = decimals + 2 - len;
 17782  00D84E  51AA               	movf	__display_itoa@len& (0+255),w,b
 17783  00D850  0800               	sublw	0
 17784  00D852  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 17785  00D854  0F02               	addlw	2
 17786  00D856  6FAB               	movwf	__display_itoa@missing& (0+255),b
 17787                           
 17788                           ;display.c: 142: if(missing>0)
 17789  00D858  51AB               	movf	__display_itoa@missing& (0+255),w,b
 17790  00D85A  0A80               	xorlw	128
 17791  00D85C  0F7F               	addlw	-129
 17792  00D85E  A0D8               	btfss	status,0,c
 17793  00D860  D090               	goto	l1298
 17794                           
 17795                           ; BSR set to: 0
 17796                           ;display.c: 143: {;display.c: 144: for(pos=decimals;pos!=0xFF;--pos)
 17797  00D862  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 17798  00D866                     l18950:
 17799                           
 17800                           ; BSR set to: 0
 17801  00D866  29AC               	incf	__display_itoa@pos& (0+255),w,b
 17802  00D868  B4D8               	btfsc	status,2,c
 17803  00D86A  D042               	goto	u18750
 17804                           
 17805                           ; BSR set to: 0
 17806                           ;display.c: 145: {;display.c: 146: if(pos>=missing)
 17807                           
 17808                           ; BSR set to: 0
 17809                           
 17810                           ; BSR set to: 0
 17811  00D86C  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17812  00D86E  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 17813  00D870  D004               	goto	u18740
 17814  00D872  0AFF               	xorlw	255
 17815  00D874  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 17816  00D876  B0D8               	btfsc	status,0,c
 17817  00D878  D02A               	goto	l1295
 17818  00D87A                     u18740:
 17819                           
 17820                           ; BSR set to: 0
 17821                           ;display.c: 147: {;display.c: 148: tmp[pos+1] = tmp[pos+1-missing];
 17822  00D87A  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 17823  00D87E  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 17824  00D880  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 17825  00D882  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 17826  00D884  1F9A               	comf	??__display_itoa& (0+255),f,b
 17827  00D886  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 17828  00D888  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 17829  00D88A  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 17830  00D88C  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17831  00D88E  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 17832  00D890  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 17833  00D892  519A               	movf	??__display_itoa& (0+255),w,b
 17834  00D894  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 17835  00D896  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 17836  00D898  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 17837  00D89A  0E01               	movlw	1
 17838  00D89C  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 17839  00D89E  0E00               	movlw	0
 17840  00D8A0  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 17841  00D8A2  0EA0               	movlw	low __display_itoa@tmp
 17842  00D8A4  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 17843  00D8A6  6ED9               	movwf	fsr2l,c
 17844  00D8A8  0E00               	movlw	high __display_itoa@tmp
 17845  00D8AA  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 17846  00D8AC  6EDA               	movwf	fsr2h,c
 17847  00D8AE  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17848  00D8B0  6F9E               	movwf	(??__display_itoa+4)& (0+255),b
 17849  00D8B2  6B9F               	clrf	(??__display_itoa+5)& (0+255),b
 17850  00D8B4  0E01               	movlw	1
 17851  00D8B6  279E               	addwf	(??__display_itoa+4)& (0+255),f,b
 17852  00D8B8  0E00               	movlw	0
 17853  00D8BA  239F               	addwfc	(??__display_itoa+5)& (0+255),f,b
 17854  00D8BC  0EA0               	movlw	low __display_itoa@tmp
 17855  00D8BE  259E               	addwf	(??__display_itoa+4)& (0+255),w,b
 17856  00D8C0  6EE1               	movwf	fsr1l,c
 17857  00D8C2  0E00               	movlw	high __display_itoa@tmp
 17858  00D8C4  219F               	addwfc	(??__display_itoa+5)& (0+255),w,b
 17859  00D8C6  6EE2               	movwf	fsr1h,c
 17860  00D8C8  CFDF FFE7          	movff	indf2,indf1
 17861                           
 17862                           ;display.c: 149: }
 17863  00D8CC  D00F               	goto	l1296
 17864  00D8CE                     l1295:
 17865                           
 17866                           ; BSR set to: 0
 17867                           ;display.c: 150: else;display.c: 151: {;display.c: 152: tmp[pos+1] = '0';
 17868                           
 17869                           ; BSR set to: 0
 17870  00D8CE  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17871  00D8D0  6F9A               	movwf	??__display_itoa& (0+255),b
 17872  00D8D2  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 17873  00D8D4  0E01               	movlw	1
 17874  00D8D6  279A               	addwf	??__display_itoa& (0+255),f,b
 17875  00D8D8  0E00               	movlw	0
 17876  00D8DA  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 17877  00D8DC  0EA0               	movlw	low __display_itoa@tmp
 17878  00D8DE  259A               	addwf	??__display_itoa& (0+255),w,b
 17879  00D8E0  6ED9               	movwf	fsr2l,c
 17880  00D8E2  0E00               	movlw	high __display_itoa@tmp
 17881  00D8E4  219B               	addwfc	(??__display_itoa+1)& (0+255),w,b
 17882  00D8E6  6EDA               	movwf	fsr2h,c
 17883  00D8E8  0E30               	movlw	48
 17884  00D8EA  6EDF               	movwf	indf2,c
 17885  00D8EC                     l1296:
 17886                           
 17887                           ; BSR set to: 0
 17888                           
 17889                           ; BSR set to: 0
 17890  00D8EC  07AC               	decf	__display_itoa@pos& (0+255),f,b
 17891  00D8EE  D7BB               	goto	l18950
 17892  00D8F0                     u18750:
 17893                           
 17894                           ; BSR set to: 0
 17895                           ;display.c: 153: };display.c: 154: };display.c: 155: len = decimals + 2;
 17896                           
 17897                           ; BSR set to: 0
 17898  00D8F0  5197               	movf	__display_itoa@decimals& (0+255),w,b
 17899  00D8F2  0F02               	addlw	2
 17900  00D8F4  D045               	goto	L36
 17901  00D8F6                     l1291:
 17902                           
 17903                           ; BSR set to: 0
 17904                           ;display.c: 158: else;display.c: 159: {;display.c: 160: missing = decimals + 1 - len;
 17905                           
 17906                           ; BSR set to: 0
 17907  00D8F6  51AA               	movf	__display_itoa@len& (0+255),w,b
 17908  00D8F8  0800               	sublw	0
 17909  00D8FA  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 17910  00D8FC  6F9A               	movwf	??__display_itoa& (0+255),b
 17911  00D8FE  299A               	incf	??__display_itoa& (0+255),w,b
 17912  00D900  6FAB               	movwf	__display_itoa@missing& (0+255),b
 17913                           
 17914                           ;display.c: 161: if(missing>0)
 17915  00D902  51AB               	movf	__display_itoa@missing& (0+255),w,b
 17916  00D904  0A80               	xorlw	128
 17917  00D906  0F7F               	addlw	-129
 17918  00D908  A0D8               	btfss	status,0,c
 17919  00D90A  D03B               	goto	l1298
 17920                           
 17921                           ; BSR set to: 0
 17922                           ;display.c: 162: {;display.c: 163: for(pos=decimals;pos!=0xFF;--pos)
 17923  00D90C  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 17924  00D910                     l18970:
 17925                           
 17926                           ; BSR set to: 0
 17927  00D910  29AC               	incf	__display_itoa@pos& (0+255),w,b
 17928  00D912  B4D8               	btfsc	status,2,c
 17929  00D914  D034               	goto	u18790
 17930                           
 17931                           ; BSR set to: 0
 17932                           ;display.c: 164: {;display.c: 165: if(pos>=missing)
 17933                           
 17934                           ; BSR set to: 0
 17935                           
 17936                           ; BSR set to: 0
 17937  00D916  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17938  00D918  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 17939  00D91A  D004               	goto	u18780
 17940  00D91C  0AFF               	xorlw	255
 17941  00D91E  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 17942  00D920  B0D8               	btfsc	status,0,c
 17943  00D922  D021               	goto	l1301
 17944  00D924                     u18780:
 17945                           
 17946                           ; BSR set to: 0
 17947                           ;display.c: 166: {;display.c: 167: tmp[pos] = tmp[pos-missing];
 17948  00D924  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 17949  00D928  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 17950  00D92A  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 17951  00D92C  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 17952  00D92E  1F9A               	comf	??__display_itoa& (0+255),f,b
 17953  00D930  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 17954  00D932  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 17955  00D934  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 17956  00D936  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17957  00D938  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 17958  00D93A  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 17959  00D93C  519A               	movf	??__display_itoa& (0+255),w,b
 17960  00D93E  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 17961  00D940  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 17962  00D942  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 17963  00D944  0EA0               	movlw	low __display_itoa@tmp
 17964  00D946  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 17965  00D948  6ED9               	movwf	fsr2l,c
 17966  00D94A  0E00               	movlw	high __display_itoa@tmp
 17967  00D94C  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 17968  00D94E  6EDA               	movwf	fsr2h,c
 17969  00D950  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17970  00D952  0D01               	mullw	1
 17971  00D954  0EA0               	movlw	low __display_itoa@tmp
 17972  00D956  24F3               	addwf	prodl,w,c
 17973  00D958  6EE1               	movwf	fsr1l,c
 17974  00D95A  0E00               	movlw	high __display_itoa@tmp
 17975  00D95C  20F4               	addwfc	prodh,w,c
 17976  00D95E  6EE2               	movwf	fsr1h,c
 17977  00D960  CFDF FFE7          	movff	indf2,indf1
 17978                           
 17979                           ;display.c: 168: }
 17980  00D964  D00A               	goto	l1302
 17981  00D966                     l1301:
 17982                           
 17983                           ; BSR set to: 0
 17984                           ;display.c: 169: else;display.c: 170: {;display.c: 171: tmp[pos] = '0';
 17985                           
 17986                           ; BSR set to: 0
 17987  00D966  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17988  00D968  0D01               	mullw	1
 17989  00D96A  0EA0               	movlw	low __display_itoa@tmp
 17990  00D96C  24F3               	addwf	prodl,w,c
 17991  00D96E  6ED9               	movwf	fsr2l,c
 17992  00D970  0E00               	movlw	high __display_itoa@tmp
 17993  00D972  20F4               	addwfc	prodh,w,c
 17994  00D974  6EDA               	movwf	fsr2h,c
 17995  00D976  0E30               	movlw	48
 17996  00D978  6EDF               	movwf	indf2,c
 17997  00D97A                     l1302:
 17998                           
 17999                           ; BSR set to: 0
 18000                           
 18001                           ; BSR set to: 0
 18002  00D97A  07AC               	decf	__display_itoa@pos& (0+255),f,b
 18003  00D97C  D7C9               	goto	l18970
 18004  00D97E                     u18790:
 18005                           
 18006                           ; BSR set to: 0
 18007                           ;display.c: 172: };display.c: 173: };display.c: 174: len = decimals + 1;
 18008                           
 18009                           ; BSR set to: 0
 18010  00D97E  2997               	incf	__display_itoa@decimals& (0+255),w,b
 18011  00D980                     L36:
 18012  00D980  6FAA               	movwf	__display_itoa@len& (0+255),b
 18013  00D982                     l1298:
 18014                           
 18015                           ; BSR set to: 0
 18016                           ;display.c: 175: };display.c: 176: };display.c: 178: decimals = len - decimals - 1;
 18017                           
 18018                           ; BSR set to: 0
 18019  00D982  5197               	movf	__display_itoa@decimals& (0+255),w,b
 18020  00D984  0800               	sublw	0
 18021  00D986  25AA               	addwf	__display_itoa@len& (0+255),w,b
 18022  00D988  6F9A               	movwf	??__display_itoa& (0+255),b
 18023  00D98A  059A               	decf	??__display_itoa& (0+255),w,b
 18024  00D98C  6F97               	movwf	__display_itoa@decimals& (0+255),b
 18025                           
 18026                           ; BSR set to: 0
 18027                           ;display.c: 180: for(pos=0;pos<len;++pos)
 18028  00D98E  0E00               	movlw	0
 18029  00D990  6FAC               	movwf	__display_itoa@pos& (0+255),b
 18030  00D992  D023               	goto	l1303
 18031  00D994                     
 18032                           ; BSR set to: 0
 18033                           ;display.c: 181: {;display.c: 182: text[pos] = tmp[pos];
 18034                           
 18035                           ; BSR set to: 0
 18036  00D994  51AC               	movf	__display_itoa@pos& (0+255),w,b
 18037  00D996  0D01               	mullw	1
 18038  00D998  0EA0               	movlw	low __display_itoa@tmp
 18039  00D99A  24F3               	addwf	prodl,w,c
 18040  00D99C  6ED9               	movwf	fsr2l,c
 18041  00D99E  0E00               	movlw	high __display_itoa@tmp
 18042  00D9A0  20F4               	addwfc	prodh,w,c
 18043  00D9A2  6EDA               	movwf	fsr2h,c
 18044  00D9A4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 18045  00D9A6  0D01               	mullw	1
 18046  00D9A8  50F3               	movf	prodl,w,c
 18047  00D9AA  2598               	addwf	__display_itoa@text& (0+255),w,b
 18048  00D9AC  6EE1               	movwf	fsr1l,c
 18049  00D9AE  50F4               	movf	prodh,w,c
 18050  00D9B0  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 18051  00D9B2  6EE2               	movwf	fsr1h,c
 18052  00D9B4  CFDF FFE7          	movff	indf2,indf1
 18053                           
 18054                           ; BSR set to: 0
 18055                           ;display.c: 183: if(pos==decimals)
 18056  00D9B8  5197               	movf	__display_itoa@decimals& (0+255),w,b
 18057  00D9BA  19AC               	xorwf	__display_itoa@pos& (0+255),w,b
 18058  00D9BC  A4D8               	btfss	status,2,c
 18059  00D9BE  D00C               	goto	l1305
 18060                           
 18061                           ; BSR set to: 0
 18062                           ;display.c: 184: {;display.c: 186: ++pos;
 18063  00D9C0  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 18064                           
 18065                           ; BSR set to: 0
 18066                           ;display.c: 187: text[pos] = '.';
 18067  00D9C2  51AC               	movf	__display_itoa@pos& (0+255),w,b
 18068  00D9C4  0D01               	mullw	1
 18069  00D9C6  50F3               	movf	prodl,w,c
 18070  00D9C8  2598               	addwf	__display_itoa@text& (0+255),w,b
 18071  00D9CA  6ED9               	movwf	fsr2l,c
 18072  00D9CC  50F4               	movf	prodh,w,c
 18073  00D9CE  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 18074  00D9D0  6EDA               	movwf	fsr2h,c
 18075  00D9D2  0E2E               	movlw	46
 18076  00D9D4  6EDF               	movwf	indf2,c
 18077                           
 18078                           ;display.c: 188: break;
 18079  00D9D6  D01E               	goto	l1307
 18080  00D9D8                     l1305:
 18081                           
 18082                           ; BSR set to: 0
 18083                           
 18084                           ; BSR set to: 0
 18085  00D9D8  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 18086  00D9DA                     l1303:
 18087                           
 18088                           ; BSR set to: 0
 18089                           
 18090                           ; BSR set to: 0
 18091  00D9DA  51AA               	movf	__display_itoa@len& (0+255),w,b
 18092  00D9DC  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 18093  00D9DE  B0D8               	btfsc	status,0,c
 18094  00D9E0  D019               	goto	l1307
 18095  00D9E2  D7D8               	goto	l1304
 18096  00D9E4                     
 18097                           ; BSR set to: 0
 18098                           ;display.c: 192: {;display.c: 193: text[pos+1] = tmp[pos];
 18099                           
 18100                           ; BSR set to: 0
 18101  00D9E4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 18102  00D9E6  0D01               	mullw	1
 18103  00D9E8  0EA0               	movlw	low __display_itoa@tmp
 18104  00D9EA  24F3               	addwf	prodl,w,c
 18105  00D9EC  6ED9               	movwf	fsr2l,c
 18106  00D9EE  0E00               	movlw	high __display_itoa@tmp
 18107  00D9F0  20F4               	addwfc	prodh,w,c
 18108  00D9F2  6EDA               	movwf	fsr2h,c
 18109  00D9F4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 18110  00D9F6  6F9A               	movwf	??__display_itoa& (0+255),b
 18111  00D9F8  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 18112  00D9FA  0E01               	movlw	1
 18113  00D9FC  279A               	addwf	??__display_itoa& (0+255),f,b
 18114  00D9FE  0E00               	movlw	0
 18115  00DA00  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 18116  00DA02  519A               	movf	??__display_itoa& (0+255),w,b
 18117  00DA04  2598               	addwf	__display_itoa@text& (0+255),w,b
 18118  00DA06  6EE1               	movwf	fsr1l,c
 18119  00DA08  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 18120  00DA0A  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 18121  00DA0C  6EE2               	movwf	fsr1h,c
 18122  00DA0E  CFDF FFE7          	movff	indf2,indf1
 18123                           
 18124                           ; BSR set to: 0
 18125  00DA12  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 18126  00DA14                     l1307:
 18127                           
 18128                           ; BSR set to: 0
 18129                           
 18130                           ; BSR set to: 0
 18131  00DA14  51AA               	movf	__display_itoa@len& (0+255),w,b
 18132  00DA16  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 18133  00DA18  A0D8               	btfss	status,0,c
 18134  00DA1A  D7E4               	goto	l1308
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;display.c: 194: };display.c: 195: text[pos+1] = 0;
 18138                           
 18139                           ; BSR set to: 0
 18140  00DA1C  51AC               	movf	__display_itoa@pos& (0+255),w,b
 18141  00DA1E  6F9A               	movwf	??__display_itoa& (0+255),b
 18142  00DA20  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 18143  00DA22  0E01               	movlw	1
 18144  00DA24  279A               	addwf	??__display_itoa& (0+255),f,b
 18145  00DA26  0E00               	movlw	0
 18146  00DA28  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 18147  00DA2A  519A               	movf	??__display_itoa& (0+255),w,b
 18148  00DA2C  2598               	addwf	__display_itoa@text& (0+255),w,b
 18149  00DA2E  6ED9               	movwf	fsr2l,c
 18150  00DA30  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 18151  00DA32  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 18152  00DA34  6EDA               	movwf	fsr2h,c
 18153  00DA36  0E00               	movlw	0
 18154  00DA38  6EDF               	movwf	indf2,c
 18155                           
 18156                           ; BSR set to: 0
 18157  00DA3A  0012               	return		;funcret
 18158  00DA3C                     __end_of__display_itoa:
 18159                           	opt stack 0
 18160                           tblptru	equ	0xFF8
 18161                           tblptrh	equ	0xFF7
 18162                           tblptrl	equ	0xFF6
 18163                           tablat	equ	0xFF5
 18164                           prodh	equ	0xFF4
 18165                           prodl	equ	0xFF3
 18166                           intcon	equ	0xFF2
 18167                           postinc0	equ	0xFEE
 18168                           wreg	equ	0xFE8
 18169                           indf1	equ	0xFE7
 18170                           postdec1	equ	0xFE5
 18171                           plusw1	equ	0xFE3
 18172                           fsr1h	equ	0xFE2
 18173                           fsr1l	equ	0xFE1
 18174                           indf2	equ	0xFDF
 18175                           postinc2	equ	0xFDE
 18176                           postdec2	equ	0xFDD
 18177                           plusw2	equ	0xFDB
 18178                           fsr2h	equ	0xFDA
 18179                           fsr2l	equ	0xFD9
 18180                           status	equ	0xFD8
 18181                           
 18182 ;; *************** function _strlen *****************
 18183 ;; Defined at:
 18184 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 18185 ;; Parameters:    Size  Location     Type
 18186 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 18187 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 18188 ;; Auto vars:     Size  Location     Type
 18189 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 18190 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 18191 ;; Return value:  Size  Location     Type
 18192 ;;                  2    0[BANK0 ] unsigned int 
 18193 ;; Registers used:
 18194 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18195 ;; Tracked objects:
 18196 ;;		On entry : 0/0
 18197 ;;		On exit  : 0/0
 18198 ;;		Unchanged: 0/0
 18199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18201 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18202 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18203 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18204 ;;Total ram usage:        6 bytes
 18205 ;; Hardware stack levels used:    1
 18206 ;; Hardware stack levels required when called:   10
 18207 ;; This function calls:
 18208 ;;		Nothing
 18209 ;; This function is called by:
 18210 ;;		__display_padded_itoa
 18211 ;;		__display_itoa
 18212 ;;		__display_itoa_long
 18213 ;;		_display_prepare
 18214 ;; This function uses a non-reentrant model
 18215 ;;
 18216                           
 18217                           	psect	text46
 18218  011CFA                     __ptext46:
 18219                           	opt stack 0
 18220  011CFA                     _strlen:
 18221                           	opt stack 19
 18222                           
 18223                           ; BSR set to: 0
 18224                           ;incstack = 0
 18225  011CFA  C060  F064         	movff	strlen@s,strlen@cp
 18226  011CFE  C061  F065         	movff	strlen@s+1,strlen@cp+1
 18227  011D02  D003               	goto	l3338
 18228  011D04  0100               	movlb	0	; () banked
 18229  011D06  4B64               	infsnz	strlen@cp& (0+255),f,b
 18230  011D08  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 18231  011D0A                     l3338:
 18232                           
 18233                           ; BSR set to: 0
 18234  011D0A  C064  FFD9         	movff	strlen@cp,fsr2l
 18235  011D0E  C065  FFDA         	movff	strlen@cp+1,fsr2h
 18236  011D12  50DF               	movf	indf2,w,c
 18237  011D14  A4D8               	btfss	status,2,c
 18238  011D16  D7F6               	goto	l3339
 18239  011D18  C060  F062         	movff	strlen@s,??_strlen
 18240  011D1C  C061  F063         	movff	strlen@s+1,??_strlen+1
 18241  011D20  0100               	movlb	0	; () banked
 18242  011D22  1F62               	comf	??_strlen& (0+255),f,b
 18243  011D24  1F63               	comf	(??_strlen+1)& (0+255),f,b
 18244  011D26  4B62               	infsnz	??_strlen& (0+255),f,b
 18245  011D28  2B63               	incf	(??_strlen+1)& (0+255),f,b
 18246  011D2A  5164               	movf	strlen@cp& (0+255),w,b
 18247  011D2C  2562               	addwf	??_strlen& (0+255),w,b
 18248  011D2E  6F60               	movwf	?_strlen& (0+255),b
 18249  011D30  5165               	movf	(strlen@cp+1)& (0+255),w,b
 18250  011D32  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 18251  011D34  6F61               	movwf	(?_strlen+1)& (0+255),b
 18252  011D36  0012               	return	
 18253  011D38                     __end_of_strlen:
 18254                           	opt stack 0
 18255                           tblptru	equ	0xFF8
 18256                           tblptrh	equ	0xFF7
 18257                           tblptrl	equ	0xFF6
 18258                           tablat	equ	0xFF5
 18259                           prodh	equ	0xFF4
 18260                           prodl	equ	0xFF3
 18261                           intcon	equ	0xFF2
 18262                           postinc0	equ	0xFEE
 18263                           wreg	equ	0xFE8
 18264                           indf1	equ	0xFE7
 18265                           postdec1	equ	0xFE5
 18266                           plusw1	equ	0xFE3
 18267                           fsr1h	equ	0xFE2
 18268                           fsr1l	equ	0xFE1
 18269                           indf2	equ	0xFDF
 18270                           postinc2	equ	0xFDE
 18271                           postdec2	equ	0xFDD
 18272                           plusw2	equ	0xFDB
 18273                           fsr2h	equ	0xFDA
 18274                           fsr2l	equ	0xFD9
 18275                           status	equ	0xFD8
 18276                           
 18277 ;; *************** function _itoa *****************
 18278 ;; Defined at:
 18279 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 18280 ;; Parameters:    Size  Location     Type
 18281 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 18282 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 18283 ;;  val             2   18[BANK0 ] int 
 18284 ;;  base            2   20[BANK0 ] int 
 18285 ;; Auto vars:     Size  Location     Type
 18286 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 18287 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 18288 ;; Return value:  Size  Location     Type
 18289 ;;                  2   16[BANK0 ] PTR unsigned char 
 18290 ;; Registers used:
 18291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18292 ;; Tracked objects:
 18293 ;;		On entry : 0/0
 18294 ;;		On exit  : 0/0
 18295 ;;		Unchanged: 0/0
 18296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18297 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18298 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18300 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18301 ;;Total ram usage:        8 bytes
 18302 ;; Hardware stack levels used:    1
 18303 ;; Hardware stack levels required when called:   12
 18304 ;; This function calls:
 18305 ;;		_utoa
 18306 ;; This function is called by:
 18307 ;;		__display_padded_itoa
 18308 ;;		__display_itoa
 18309 ;; This function uses a non-reentrant model
 18310 ;;
 18311                           
 18312                           	psect	text47
 18313  011BEE                     __ptext47:
 18314                           	opt stack 0
 18315  011BEE                     _itoa:
 18316                           	opt stack 15
 18317                           
 18318                           ; BSR set to: 0
 18319                           ;incstack = 0
 18320  011BEE  C070  F076         	movff	itoa@buf,itoa@cp
 18321  011BF2  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 18322  011BF6  0100               	movlb	0	; () banked
 18323  011BF8  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 18324  011BFA  D00C               	goto	l3314
 18325                           
 18326                           ; BSR set to: 0
 18327  011BFC  C070  FFD9         	movff	itoa@buf,fsr2l
 18328  011C00  C071  FFDA         	movff	itoa@buf+1,fsr2h
 18329  011C04  0E2D               	movlw	45
 18330  011C06  6EDF               	movwf	indf2,c
 18331                           
 18332                           ; BSR set to: 0
 18333  011C08  4B70               	infsnz	itoa@buf& (0+255),f,b
 18334  011C0A  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 18335                           
 18336                           ; BSR set to: 0
 18337  011C0C  6D72               	negf	itoa@val& (0+255),b
 18338  011C0E  1F73               	comf	(itoa@val+1)& (0+255),f,b
 18339  011C10  B0D8               	btfsc	status,0,c
 18340  011C12  2B73               	incf	(itoa@val+1)& (0+255),f,b
 18341  011C14                     l3314:
 18342                           
 18343                           ; BSR set to: 0
 18344                           
 18345                           ; BSR set to: 0
 18346  011C14  C070  F067         	movff	itoa@buf,utoa@buf
 18347  011C18  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 18348  011C1C  C072  F069         	movff	itoa@val,utoa@val
 18349  011C20  C073  F06A         	movff	itoa@val+1,utoa@val+1
 18350  011C24  C074  F06B         	movff	itoa@base,utoa@base
 18351  011C28  C075  F06C         	movff	itoa@base+1,utoa@base+1
 18352  011C2C  EC9B  F083         	call	_utoa	;wreg free
 18353  011C30  0012               	return	
 18354  011C32                     __end_of_itoa:
 18355                           	opt stack 0
 18356                           tblptru	equ	0xFF8
 18357                           tblptrh	equ	0xFF7
 18358                           tblptrl	equ	0xFF6
 18359                           tablat	equ	0xFF5
 18360                           prodh	equ	0xFF4
 18361                           prodl	equ	0xFF3
 18362                           intcon	equ	0xFF2
 18363                           postinc0	equ	0xFEE
 18364                           wreg	equ	0xFE8
 18365                           indf1	equ	0xFE7
 18366                           postdec1	equ	0xFE5
 18367                           plusw1	equ	0xFE3
 18368                           fsr1h	equ	0xFE2
 18369                           fsr1l	equ	0xFE1
 18370                           indf2	equ	0xFDF
 18371                           postinc2	equ	0xFDE
 18372                           postdec2	equ	0xFDD
 18373                           plusw2	equ	0xFDB
 18374                           fsr2h	equ	0xFDA
 18375                           fsr2l	equ	0xFD9
 18376                           status	equ	0xFD8
 18377                           
 18378 ;; *************** function _utoa *****************
 18379 ;; Defined at:
 18380 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 18381 ;; Parameters:    Size  Location     Type
 18382 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 18383 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 18384 ;;  val             2    9[BANK0 ] unsigned int 
 18385 ;;  base            2   11[BANK0 ] int 
 18386 ;; Auto vars:     Size  Location     Type
 18387 ;;  v               2   13[BANK0 ] unsigned int 
 18388 ;;  c               1   15[BANK0 ] unsigned char 
 18389 ;; Return value:  Size  Location     Type
 18390 ;;                  2    7[BANK0 ] PTR unsigned char 
 18391 ;; Registers used:
 18392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18393 ;; Tracked objects:
 18394 ;;		On entry : 0/0
 18395 ;;		On exit  : 0/0
 18396 ;;		Unchanged: 0/0
 18397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18398 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18399 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18401 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18402 ;;Total ram usage:        9 bytes
 18403 ;; Hardware stack levels used:    1
 18404 ;; Hardware stack levels required when called:   11
 18405 ;; This function calls:
 18406 ;;		___lwdiv
 18407 ;;		___lwmod
 18408 ;; This function is called by:
 18409 ;;		_itoa
 18410 ;; This function uses a non-reentrant model
 18411 ;;
 18412                           
 18413                           	psect	text48
 18414  010736                     __ptext48:
 18415                           	opt stack 0
 18416  010736                     _utoa:
 18417                           	opt stack 15
 18418                           
 18419                           ;incstack = 0
 18420  010736  C069  F06D         	movff	utoa@val,utoa@v
 18421  01073A  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 18422  01073E  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 18423  010742  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 18424  010746  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 18425  01074A  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 18426  01074E  EC4F  F08C         	call	___lwdiv	;wreg free
 18427  010752  C060  F06D         	movff	?___lwdiv,utoa@v
 18428  010756  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 18429  01075A  0100               	movlb	0	; () banked
 18430  01075C  4B67               	infsnz	utoa@buf& (0+255),f,b
 18431  01075E  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 18432                           
 18433                           ; BSR set to: 0
 18434  010760  516D               	movf	utoa@v& (0+255),w,b
 18435  010762  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 18436  010764  A4D8               	btfss	status,2,c
 18437  010766  D7EB               	goto	l3318
 18438                           
 18439                           ; BSR set to: 0
 18440                           
 18441                           ; BSR set to: 0
 18442  010768  C067  FFD9         	movff	utoa@buf,fsr2l
 18443  01076C  C068  FFDA         	movff	utoa@buf+1,fsr2h
 18444  010770  0E00               	movlw	0
 18445  010772  6EDF               	movwf	indf2,c
 18446                           
 18447                           ; BSR set to: 0
 18448  010774  0767               	decf	utoa@buf& (0+255),f,b
 18449  010776  A0D8               	btfss	status,0,c
 18450  010778  0768               	decf	(utoa@buf+1)& (0+255),f,b
 18451  01077A                     
 18452                           ; BSR set to: 0
 18453                           
 18454                           ; BSR set to: 0
 18455  01077A  C069  F060         	movff	utoa@val,___lwmod@dividend
 18456  01077E  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 18457  010782  C06B  F062         	movff	utoa@base,___lwmod@divisor
 18458  010786  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 18459  01078A  EC19  F08E         	call	___lwmod	;wreg free
 18460  01078E  0100               	movlb	0	; () banked
 18461  010790  5160               	movf	?___lwmod& (0+255),w,b
 18462  010792  6F6F               	movwf	utoa@c& (0+255),b
 18463                           
 18464                           ; BSR set to: 0
 18465  010794  C069  F060         	movff	utoa@val,___lwdiv@dividend
 18466  010798  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 18467  01079C  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 18468  0107A0  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 18469  0107A4  EC4F  F08C         	call	___lwdiv	;wreg free
 18470  0107A8  C060  F069         	movff	?___lwdiv,utoa@val
 18471  0107AC  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 18472  0107B0  0E09               	movlw	9
 18473  0107B2  0100               	movlb	0	; () banked
 18474  0107B4  656F               	cpfsgt	utoa@c& (0+255),b
 18475  0107B6  D002               	goto	l3321
 18476                           
 18477                           ; BSR set to: 0
 18478  0107B8  0E07               	movlw	7
 18479  0107BA  276F               	addwf	utoa@c& (0+255),f,b
 18480  0107BC                     l3321:
 18481                           
 18482                           ; BSR set to: 0
 18483  0107BC  0E30               	movlw	48
 18484  0107BE  276F               	addwf	utoa@c& (0+255),f,b
 18485                           
 18486                           ; BSR set to: 0
 18487  0107C0  C067  FFD9         	movff	utoa@buf,fsr2l
 18488  0107C4  C068  FFDA         	movff	utoa@buf+1,fsr2h
 18489  0107C8  C06F  FFDF         	movff	utoa@c,indf2
 18490                           
 18491                           ; BSR set to: 0
 18492  0107CC  0767               	decf	utoa@buf& (0+255),f,b
 18493  0107CE  A0D8               	btfss	status,0,c
 18494  0107D0  0768               	decf	(utoa@buf+1)& (0+255),f,b
 18495                           
 18496                           ; BSR set to: 0
 18497  0107D2  5169               	movf	utoa@val& (0+255),w,b
 18498  0107D4  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 18499  0107D6  A4D8               	btfss	status,2,c
 18500  0107D8  D7D0               	goto	l3320
 18501                           
 18502                           ; BSR set to: 0
 18503                           ;	Return value of _utoa is never used
 18504                           
 18505                           ; BSR set to: 0
 18506  0107DA  4B67               	infsnz	utoa@buf& (0+255),f,b
 18507  0107DC  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 18508  0107DE  0012               	return	
 18509  0107E0                     __end_of_utoa:
 18510                           	opt stack 0
 18511                           tblptru	equ	0xFF8
 18512                           tblptrh	equ	0xFF7
 18513                           tblptrl	equ	0xFF6
 18514                           tablat	equ	0xFF5
 18515                           prodh	equ	0xFF4
 18516                           prodl	equ	0xFF3
 18517                           intcon	equ	0xFF2
 18518                           postinc0	equ	0xFEE
 18519                           wreg	equ	0xFE8
 18520                           indf1	equ	0xFE7
 18521                           postdec1	equ	0xFE5
 18522                           plusw1	equ	0xFE3
 18523                           fsr1h	equ	0xFE2
 18524                           fsr1l	equ	0xFE1
 18525                           indf2	equ	0xFDF
 18526                           postinc2	equ	0xFDE
 18527                           postdec2	equ	0xFDD
 18528                           plusw2	equ	0xFDB
 18529                           fsr2h	equ	0xFDA
 18530                           fsr2l	equ	0xFD9
 18531                           status	equ	0xFD8
 18532                           
 18533 ;; *************** function ___lwmod *****************
 18534 ;; Defined at:
 18535 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 18536 ;; Parameters:    Size  Location     Type
 18537 ;;  dividend        2    0[BANK0 ] unsigned int 
 18538 ;;  divisor         2    2[BANK0 ] unsigned int 
 18539 ;; Auto vars:     Size  Location     Type
 18540 ;;  counter         1    4[BANK0 ] unsigned char 
 18541 ;; Return value:  Size  Location     Type
 18542 ;;                  2    0[BANK0 ] unsigned int 
 18543 ;; Registers used:
 18544 ;;		wreg, status,2, status,0
 18545 ;; Tracked objects:
 18546 ;;		On entry : 0/0
 18547 ;;		On exit  : 0/0
 18548 ;;		Unchanged: 0/0
 18549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18550 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18551 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18553 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18554 ;;Total ram usage:        5 bytes
 18555 ;; Hardware stack levels used:    1
 18556 ;; Hardware stack levels required when called:   10
 18557 ;; This function calls:
 18558 ;;		Nothing
 18559 ;; This function is called by:
 18560 ;;		_utoa
 18561 ;; This function uses a non-reentrant model
 18562 ;;
 18563                           
 18564                           	psect	text49
 18565  011C32                     __ptext49:
 18566                           	opt stack 0
 18567  011C32                     ___lwmod:
 18568                           	opt stack 15
 18569                           
 18570                           ; BSR set to: 0
 18571                           ;incstack = 0
 18572  011C32  0100               	movlb	0	; () banked
 18573  011C34  5162               	movf	___lwmod@divisor& (0+255),w,b
 18574  011C36  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18575  011C38  B4D8               	btfsc	status,2,c
 18576  011C3A  D018               	goto	l3145
 18577                           
 18578                           ; BSR set to: 0
 18579  011C3C  0E01               	movlw	1
 18580  011C3E  6F64               	movwf	___lwmod@counter& (0+255),b
 18581  011C40  D004               	goto	l3140
 18582  011C42                     
 18583                           ; BSR set to: 0
 18584                           
 18585                           ; BSR set to: 0
 18586  011C42  90D8               	bcf	status,0,c
 18587  011C44  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 18588  011C46  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18589  011C48  2B64               	incf	___lwmod@counter& (0+255),f,b
 18590  011C4A                     l3140:
 18591                           
 18592                           ; BSR set to: 0
 18593                           
 18594                           ; BSR set to: 0
 18595  011C4A  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18596  011C4C  D7FA               	goto	l3141
 18597  011C4E                     u17190:
 18598                           
 18599                           ; BSR set to: 0
 18600                           
 18601                           ; BSR set to: 0
 18602                           
 18603                           ; BSR set to: 0
 18604  011C4E  5162               	movf	___lwmod@divisor& (0+255),w,b
 18605  011C50  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 18606  011C52  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18607  011C54  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18608  011C56  A0D8               	btfss	status,0,c
 18609  011C58  D004               	goto	l3144
 18610                           
 18611                           ; BSR set to: 0
 18612  011C5A  5162               	movf	___lwmod@divisor& (0+255),w,b
 18613  011C5C  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 18614  011C5E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18615  011C60  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18616  011C62                     l3144:
 18617                           
 18618                           ; BSR set to: 0
 18619                           
 18620                           ; BSR set to: 0
 18621  011C62  90D8               	bcf	status,0,c
 18622  011C64  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18623  011C66  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 18624                           
 18625                           ; BSR set to: 0
 18626  011C68  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 18627  011C6A  D7F1               	goto	u17190
 18628  011C6C                     l3145:
 18629                           
 18630                           ; BSR set to: 0
 18631                           
 18632                           ; BSR set to: 0
 18633  011C6C  C060  F060         	movff	___lwmod@dividend,?___lwmod
 18634  011C70  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 18635                           
 18636                           ; BSR set to: 0
 18637  011C74  0012               	return		;funcret
 18638  011C76                     __end_of___lwmod:
 18639                           	opt stack 0
 18640                           tblptru	equ	0xFF8
 18641                           tblptrh	equ	0xFF7
 18642                           tblptrl	equ	0xFF6
 18643                           tablat	equ	0xFF5
 18644                           prodh	equ	0xFF4
 18645                           prodl	equ	0xFF3
 18646                           intcon	equ	0xFF2
 18647                           postinc0	equ	0xFEE
 18648                           wreg	equ	0xFE8
 18649                           indf1	equ	0xFE7
 18650                           postdec1	equ	0xFE5
 18651                           plusw1	equ	0xFE3
 18652                           fsr1h	equ	0xFE2
 18653                           fsr1l	equ	0xFE1
 18654                           indf2	equ	0xFDF
 18655                           postinc2	equ	0xFDE
 18656                           postdec2	equ	0xFDD
 18657                           plusw2	equ	0xFDB
 18658                           fsr2h	equ	0xFDA
 18659                           fsr2l	equ	0xFD9
 18660                           status	equ	0xFD8
 18661                           
 18662 ;; *************** function ___lwdiv *****************
 18663 ;; Defined at:
 18664 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 18665 ;; Parameters:    Size  Location     Type
 18666 ;;  dividend        2    0[BANK0 ] unsigned int 
 18667 ;;  divisor         2    2[BANK0 ] unsigned int 
 18668 ;; Auto vars:     Size  Location     Type
 18669 ;;  quotient        2    5[BANK0 ] unsigned int 
 18670 ;;  counter         1    4[BANK0 ] unsigned char 
 18671 ;; Return value:  Size  Location     Type
 18672 ;;                  2    0[BANK0 ] unsigned int 
 18673 ;; Registers used:
 18674 ;;		wreg, status,2, status,0
 18675 ;; Tracked objects:
 18676 ;;		On entry : 0/0
 18677 ;;		On exit  : 0/0
 18678 ;;		Unchanged: 0/0
 18679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18680 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18681 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18683 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18684 ;;Total ram usage:        7 bytes
 18685 ;; Hardware stack levels used:    1
 18686 ;; Hardware stack levels required when called:   10
 18687 ;; This function calls:
 18688 ;;		Nothing
 18689 ;; This function is called by:
 18690 ;;		_utoa
 18691 ;; This function uses a non-reentrant model
 18692 ;;
 18693                           
 18694                           	psect	text50
 18695  01189E                     __ptext50:
 18696                           	opt stack 0
 18697  01189E                     ___lwdiv:
 18698                           	opt stack 15
 18699                           
 18700                           ; BSR set to: 0
 18701                           ;incstack = 0
 18702  01189E  0E00               	movlw	0
 18703  0118A0  0100               	movlb	0	; () banked
 18704  0118A2  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 18705  0118A4  0E00               	movlw	0
 18706  0118A6  6F65               	movwf	___lwdiv@quotient& (0+255),b
 18707                           
 18708                           ; BSR set to: 0
 18709  0118A8  5162               	movf	___lwdiv@divisor& (0+255),w,b
 18710  0118AA  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 18711  0118AC  B4D8               	btfsc	status,2,c
 18712  0118AE  D01C               	goto	l3135
 18713                           
 18714                           ; BSR set to: 0
 18715  0118B0  0E01               	movlw	1
 18716  0118B2  6F64               	movwf	___lwdiv@counter& (0+255),b
 18717  0118B4  D004               	goto	l3130
 18718  0118B6                     
 18719                           ; BSR set to: 0
 18720                           
 18721                           ; BSR set to: 0
 18722  0118B6  90D8               	bcf	status,0,c
 18723  0118B8  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 18724  0118BA  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 18725  0118BC  2B64               	incf	___lwdiv@counter& (0+255),f,b
 18726  0118BE                     l3130:
 18727                           
 18728                           ; BSR set to: 0
 18729                           
 18730                           ; BSR set to: 0
 18731  0118BE  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 18732  0118C0  D7FA               	goto	l3131
 18733  0118C2                     u17160:
 18734                           
 18735                           ; BSR set to: 0
 18736                           
 18737                           ; BSR set to: 0
 18738                           
 18739                           ; BSR set to: 0
 18740  0118C2  90D8               	bcf	status,0,c
 18741  0118C4  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 18742  0118C6  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 18743                           
 18744                           ; BSR set to: 0
 18745  0118C8  5162               	movf	___lwdiv@divisor& (0+255),w,b
 18746  0118CA  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 18747  0118CC  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 18748  0118CE  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 18749  0118D0  A0D8               	btfss	status,0,c
 18750  0118D2  D005               	goto	l3134
 18751                           
 18752                           ; BSR set to: 0
 18753  0118D4  5162               	movf	___lwdiv@divisor& (0+255),w,b
 18754  0118D6  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 18755  0118D8  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 18756  0118DA  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 18757                           
 18758                           ; BSR set to: 0
 18759  0118DC  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 18760  0118DE                     l3134:
 18761                           
 18762                           ; BSR set to: 0
 18763                           
 18764                           ; BSR set to: 0
 18765  0118DE  90D8               	bcf	status,0,c
 18766  0118E0  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 18767  0118E2  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 18768                           
 18769                           ; BSR set to: 0
 18770  0118E4  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 18771  0118E6  D7ED               	goto	u17160
 18772  0118E8                     l3135:
 18773                           
 18774                           ; BSR set to: 0
 18775                           
 18776                           ; BSR set to: 0
 18777  0118E8  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 18778  0118EC  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 18779                           
 18780                           ; BSR set to: 0
 18781  0118F0  0012               	return		;funcret
 18782  0118F2                     __end_of___lwdiv:
 18783                           	opt stack 0
 18784                           tblptru	equ	0xFF8
 18785                           tblptrh	equ	0xFF7
 18786                           tblptrl	equ	0xFF6
 18787                           tablat	equ	0xFF5
 18788                           prodh	equ	0xFF4
 18789                           prodl	equ	0xFF3
 18790                           intcon	equ	0xFF2
 18791                           postinc0	equ	0xFEE
 18792                           wreg	equ	0xFE8
 18793                           indf1	equ	0xFE7
 18794                           postdec1	equ	0xFE5
 18795                           plusw1	equ	0xFE3
 18796                           fsr1h	equ	0xFE2
 18797                           fsr1l	equ	0xFE1
 18798                           indf2	equ	0xFDF
 18799                           postinc2	equ	0xFDE
 18800                           postdec2	equ	0xFDD
 18801                           plusw2	equ	0xFDB
 18802                           fsr2h	equ	0xFDA
 18803                           fsr2l	equ	0xFD9
 18804                           status	equ	0xFD8
 18805                           
 18806 ;; *************** function ___almod *****************
 18807 ;; Defined at:
 18808 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 18809 ;; Parameters:    Size  Location     Type
 18810 ;;  dividend        4    0[BANK0 ] long 
 18811 ;;  divisor         4    4[BANK0 ] long 
 18812 ;; Auto vars:     Size  Location     Type
 18813 ;;  sign            1    9[BANK0 ] unsigned char 
 18814 ;;  counter         1    8[BANK0 ] unsigned char 
 18815 ;; Return value:  Size  Location     Type
 18816 ;;                  4    0[BANK0 ] long 
 18817 ;; Registers used:
 18818 ;;		wreg, status,2, status,0
 18819 ;; Tracked objects:
 18820 ;;		On entry : 0/0
 18821 ;;		On exit  : 0/0
 18822 ;;		Unchanged: 0/0
 18823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18824 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18825 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18827 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18828 ;;Total ram usage:       10 bytes
 18829 ;; Hardware stack levels used:    1
 18830 ;; Hardware stack levels required when called:   10
 18831 ;; This function calls:
 18832 ;;		Nothing
 18833 ;; This function is called by:
 18834 ;;		__display_itoa_long
 18835 ;; This function uses a non-reentrant model
 18836 ;;
 18837                           
 18838                           	psect	text51
 18839  0105DA                     __ptext51:
 18840                           	opt stack 0
 18841  0105DA                     ___almod:
 18842                           	opt stack 18
 18843                           
 18844                           ; BSR set to: 0
 18845                           ;incstack = 0
 18846  0105DA  0E00               	movlw	0
 18847  0105DC  0100               	movlb	0	; () banked
 18848  0105DE  6F69               	movwf	___almod@sign& (0+255),b
 18849                           
 18850                           ; BSR set to: 0
 18851  0105E0  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 18852  0105E2  D00A               	goto	l2732
 18853                           
 18854                           ; BSR set to: 0
 18855  0105E4  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 18856  0105E6  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 18857  0105E8  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 18858  0105EA  6D60               	negf	___almod@dividend& (0+255),b
 18859  0105EC  0E00               	movlw	0
 18860  0105EE  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18861  0105F0  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18862  0105F2  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18863                           
 18864                           ; BSR set to: 0
 18865  0105F4  0E01               	movlw	1
 18866  0105F6  6F69               	movwf	___almod@sign& (0+255),b
 18867  0105F8                     l2732:
 18868                           
 18869                           ; BSR set to: 0
 18870                           
 18871                           ; BSR set to: 0
 18872  0105F8  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 18873  0105FA  D008               	goto	l2733
 18874                           
 18875                           ; BSR set to: 0
 18876  0105FC  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 18877  0105FE  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 18878  010600  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 18879  010602  6D64               	negf	___almod@divisor& (0+255),b
 18880  010604  0E00               	movlw	0
 18881  010606  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 18882  010608  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 18883  01060A  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 18884  01060C                     l2733:
 18885                           
 18886                           ; BSR set to: 0
 18887                           
 18888                           ; BSR set to: 0
 18889  01060C  5164               	movf	___almod@divisor& (0+255),w,b
 18890  01060E  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 18891  010610  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 18892  010612  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 18893  010614  B4D8               	btfsc	status,2,c
 18894  010616  D024               	goto	l2740
 18895                           
 18896                           ; BSR set to: 0
 18897  010618  0E01               	movlw	1
 18898  01061A  6F68               	movwf	___almod@counter& (0+255),b
 18899  01061C  D006               	goto	l2735
 18900  01061E                     
 18901                           ; BSR set to: 0
 18902                           
 18903                           ; BSR set to: 0
 18904  01061E  90D8               	bcf	status,0,c
 18905  010620  3764               	rlcf	___almod@divisor& (0+255),f,b
 18906  010622  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 18907  010624  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 18908  010626  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 18909  010628  2B68               	incf	___almod@counter& (0+255),f,b
 18910  01062A                     l2735:
 18911                           
 18912                           ; BSR set to: 0
 18913                           
 18914                           ; BSR set to: 0
 18915  01062A  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 18916  01062C  D7F8               	goto	l2736
 18917  01062E                     u19140:
 18918                           
 18919                           ; BSR set to: 0
 18920                           
 18921                           ; BSR set to: 0
 18922                           
 18923                           ; BSR set to: 0
 18924  01062E  5164               	movf	___almod@divisor& (0+255),w,b
 18925  010630  5D60               	subwf	___almod@dividend& (0+255),w,b
 18926  010632  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 18927  010634  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 18928  010636  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 18929  010638  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 18930  01063A  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 18931  01063C  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 18932  01063E  A0D8               	btfss	status,0,c
 18933  010640  D008               	goto	l2739
 18934                           
 18935                           ; BSR set to: 0
 18936  010642  5164               	movf	___almod@divisor& (0+255),w,b
 18937  010644  5F60               	subwf	___almod@dividend& (0+255),f,b
 18938  010646  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 18939  010648  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 18940  01064A  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 18941  01064C  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 18942  01064E  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 18943  010650  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 18944  010652                     l2739:
 18945                           
 18946                           ; BSR set to: 0
 18947                           
 18948                           ; BSR set to: 0
 18949  010652  90D8               	bcf	status,0,c
 18950  010654  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 18951  010656  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 18952  010658  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 18953  01065A  3364               	rrcf	___almod@divisor& (0+255),f,b
 18954                           
 18955                           ; BSR set to: 0
 18956  01065C  2F68               	decfsz	___almod@counter& (0+255),f,b
 18957  01065E  D7E7               	goto	u19140
 18958  010660                     l2740:
 18959                           
 18960                           ; BSR set to: 0
 18961                           
 18962                           ; BSR set to: 0
 18963                           
 18964                           ; BSR set to: 0
 18965  010660  5169               	movf	___almod@sign& (0+255),w,b
 18966  010662  B4D8               	btfsc	status,2,c
 18967  010664  D008               	goto	l2741
 18968                           
 18969                           ; BSR set to: 0
 18970  010666  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 18971  010668  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 18972  01066A  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 18973  01066C  6D60               	negf	___almod@dividend& (0+255),b
 18974  01066E  0E00               	movlw	0
 18975  010670  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18976  010672  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18977  010674  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18978  010676                     l2741:
 18979                           
 18980                           ; BSR set to: 0
 18981                           
 18982                           ; BSR set to: 0
 18983  010676  C060  F060         	movff	___almod@dividend,?___almod
 18984  01067A  C061  F061         	movff	___almod@dividend+1,?___almod+1
 18985  01067E  C062  F062         	movff	___almod@dividend+2,?___almod+2
 18986  010682  C063  F063         	movff	___almod@dividend+3,?___almod+3
 18987  010686  0012               	return	
 18988  010688                     __end_of___almod:
 18989                           	opt stack 0
 18990                           tblptru	equ	0xFF8
 18991                           tblptrh	equ	0xFF7
 18992                           tblptrl	equ	0xFF6
 18993                           tablat	equ	0xFF5
 18994                           prodh	equ	0xFF4
 18995                           prodl	equ	0xFF3
 18996                           intcon	equ	0xFF2
 18997                           postinc0	equ	0xFEE
 18998                           wreg	equ	0xFE8
 18999                           indf1	equ	0xFE7
 19000                           postdec1	equ	0xFE5
 19001                           plusw1	equ	0xFE3
 19002                           fsr1h	equ	0xFE2
 19003                           fsr1l	equ	0xFE1
 19004                           indf2	equ	0xFDF
 19005                           postinc2	equ	0xFDE
 19006                           postdec2	equ	0xFDD
 19007                           plusw2	equ	0xFDB
 19008                           fsr2h	equ	0xFDA
 19009                           fsr2l	equ	0xFD9
 19010                           status	equ	0xFD8
 19011                           
 19012 ;; *************** function ___aldiv *****************
 19013 ;; Defined at:
 19014 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 19015 ;; Parameters:    Size  Location     Type
 19016 ;;  dividend        4    0[BANK0 ] long 
 19017 ;;  divisor         4    4[BANK0 ] long 
 19018 ;; Auto vars:     Size  Location     Type
 19019 ;;  quotient        4   10[BANK0 ] long 
 19020 ;;  sign            1    9[BANK0 ] unsigned char 
 19021 ;;  counter         1    8[BANK0 ] unsigned char 
 19022 ;; Return value:  Size  Location     Type
 19023 ;;                  4    0[BANK0 ] long 
 19024 ;; Registers used:
 19025 ;;		wreg, status,2, status,0
 19026 ;; Tracked objects:
 19027 ;;		On entry : 0/0
 19028 ;;		On exit  : 0/0
 19029 ;;		Unchanged: 0/0
 19030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19031 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19032 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19034 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19035 ;;Total ram usage:       14 bytes
 19036 ;; Hardware stack levels used:    1
 19037 ;; Hardware stack levels required when called:   10
 19038 ;; This function calls:
 19039 ;;		Nothing
 19040 ;; This function is called by:
 19041 ;;		__display_itoa_long
 19042 ;; This function uses a non-reentrant model
 19043 ;;
 19044                           
 19045                           	psect	text52
 19046  00FFEA                     __ptext52:
 19047                           	opt stack 0
 19048  00FFEA                     ___aldiv:
 19049                           	opt stack 18
 19050                           
 19051                           ; BSR set to: 0
 19052                           ;incstack = 0
 19053  00FFEA  0E00               	movlw	0
 19054  00FFEC  0100               	movlb	0	; () banked
 19055  00FFEE  6F69               	movwf	___aldiv@sign& (0+255),b
 19056                           
 19057                           ; BSR set to: 0
 19058  00FFF0  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 19059  00FFF2  D00A               	goto	l2719
 19060                           
 19061                           ; BSR set to: 0
 19062  00FFF4  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 19063  00FFF6  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 19064  00FFF8  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 19065  00FFFA  6D64               	negf	___aldiv@divisor& (0+255),b
 19066  00FFFC  0E00               	movlw	0
 19067  00FFFE  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 19068  010000  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 19069  010002  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 19070                           
 19071                           ; BSR set to: 0
 19072  010004  0E01               	movlw	1
 19073  010006  6F69               	movwf	___aldiv@sign& (0+255),b
 19074  010008                     l2719:
 19075                           
 19076                           ; BSR set to: 0
 19077                           
 19078                           ; BSR set to: 0
 19079  010008  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 19080  01000A  D00A               	goto	l2720
 19081                           
 19082                           ; BSR set to: 0
 19083  01000C  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 19084  01000E  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 19085  010010  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 19086  010012  6D60               	negf	___aldiv@dividend& (0+255),b
 19087  010014  0E00               	movlw	0
 19088  010016  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 19089  010018  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 19090  01001A  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 19091                           
 19092                           ; BSR set to: 0
 19093  01001C  0E01               	movlw	1
 19094  01001E  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 19095  010020                     l2720:
 19096                           
 19097                           ; BSR set to: 0
 19098                           
 19099                           ; BSR set to: 0
 19100  010020  0E00               	movlw	0
 19101  010022  6F6A               	movwf	___aldiv@quotient& (0+255),b
 19102  010024  0E00               	movlw	0
 19103  010026  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 19104  010028  0E00               	movlw	0
 19105  01002A  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 19106  01002C  0E00               	movlw	0
 19107  01002E  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 19108                           
 19109                           ; BSR set to: 0
 19110  010030  5164               	movf	___aldiv@divisor& (0+255),w,b
 19111  010032  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 19112  010034  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 19113  010036  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 19114  010038  B4D8               	btfsc	status,2,c
 19115  01003A  D02A               	goto	l2727
 19116                           
 19117                           ; BSR set to: 0
 19118  01003C  0E01               	movlw	1
 19119  01003E  6F68               	movwf	___aldiv@counter& (0+255),b
 19120  010040  D006               	goto	l2722
 19121  010042                     
 19122                           ; BSR set to: 0
 19123                           
 19124                           ; BSR set to: 0
 19125  010042  90D8               	bcf	status,0,c
 19126  010044  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 19127  010046  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 19128  010048  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 19129  01004A  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 19130  01004C  2B68               	incf	___aldiv@counter& (0+255),f,b
 19131  01004E                     l2722:
 19132                           
 19133                           ; BSR set to: 0
 19134                           
 19135                           ; BSR set to: 0
 19136  01004E  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 19137  010050  D7F8               	goto	l2723
 19138  010052                     u19080:
 19139                           
 19140                           ; BSR set to: 0
 19141                           
 19142                           ; BSR set to: 0
 19143                           
 19144                           ; BSR set to: 0
 19145  010052  90D8               	bcf	status,0,c
 19146  010054  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 19147  010056  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 19148  010058  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 19149  01005A  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 19150                           
 19151                           ; BSR set to: 0
 19152  01005C  5164               	movf	___aldiv@divisor& (0+255),w,b
 19153  01005E  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 19154  010060  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 19155  010062  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 19156  010064  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 19157  010066  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 19158  010068  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 19159  01006A  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 19160  01006C  A0D8               	btfss	status,0,c
 19161  01006E  D009               	goto	l2726
 19162                           
 19163                           ; BSR set to: 0
 19164  010070  5164               	movf	___aldiv@divisor& (0+255),w,b
 19165  010072  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 19166  010074  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 19167  010076  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 19168  010078  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 19169  01007A  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 19170  01007C  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 19171  01007E  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 19172                           
 19173                           ; BSR set to: 0
 19174  010080  816A               	bsf	___aldiv@quotient& (0+255),0,b
 19175  010082                     l2726:
 19176                           
 19177                           ; BSR set to: 0
 19178                           
 19179                           ; BSR set to: 0
 19180  010082  90D8               	bcf	status,0,c
 19181  010084  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 19182  010086  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 19183  010088  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 19184  01008A  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 19185                           
 19186                           ; BSR set to: 0
 19187  01008C  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 19188  01008E  D7E1               	goto	u19080
 19189  010090                     l2727:
 19190                           
 19191                           ; BSR set to: 0
 19192                           
 19193                           ; BSR set to: 0
 19194                           
 19195                           ; BSR set to: 0
 19196  010090  5169               	movf	___aldiv@sign& (0+255),w,b
 19197  010092  B4D8               	btfsc	status,2,c
 19198  010094  D008               	goto	l2728
 19199                           
 19200                           ; BSR set to: 0
 19201  010096  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 19202  010098  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 19203  01009A  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 19204  01009C  6D6A               	negf	___aldiv@quotient& (0+255),b
 19205  01009E  0E00               	movlw	0
 19206  0100A0  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 19207  0100A2  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 19208  0100A4  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 19209  0100A6                     l2728:
 19210                           
 19211                           ; BSR set to: 0
 19212                           
 19213                           ; BSR set to: 0
 19214  0100A6  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 19215  0100AA  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 19216  0100AE  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 19217  0100B2  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 19218  0100B6  0012               	return	
 19219  0100B8                     __end_of___aldiv:
 19220                           	opt stack 0
 19221                           tblptru	equ	0xFF8
 19222                           tblptrh	equ	0xFF7
 19223                           tblptrl	equ	0xFF6
 19224                           tablat	equ	0xFF5
 19225                           prodh	equ	0xFF4
 19226                           prodl	equ	0xFF3
 19227                           intcon	equ	0xFF2
 19228                           postinc0	equ	0xFEE
 19229                           wreg	equ	0xFE8
 19230                           indf1	equ	0xFE7
 19231                           postdec1	equ	0xFE5
 19232                           plusw1	equ	0xFE3
 19233                           fsr1h	equ	0xFE2
 19234                           fsr1l	equ	0xFE1
 19235                           indf2	equ	0xFDF
 19236                           postinc2	equ	0xFDE
 19237                           postdec2	equ	0xFDD
 19238                           plusw2	equ	0xFDB
 19239                           fsr2h	equ	0xFDA
 19240                           fsr2l	equ	0xFD9
 19241                           status	equ	0xFD8
 19242                           
 19243 ;; *************** function __display_clear *****************
 19244 ;; Defined at:
 19245 ;;		line 81 in file "display.c"
 19246 ;; Parameters:    Size  Location     Type
 19247 ;;		None
 19248 ;; Auto vars:     Size  Location     Type
 19249 ;;  col             1    3[BANK0 ] unsigned char 
 19250 ;;  row             1    2[BANK0 ] unsigned char 
 19251 ;; Return value:  Size  Location     Type
 19252 ;;                  1    wreg      void 
 19253 ;; Registers used:
 19254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19255 ;; Tracked objects:
 19256 ;;		On entry : 0/0
 19257 ;;		On exit  : 0/0
 19258 ;;		Unchanged: 0/0
 19259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19261 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19262 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19263 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19264 ;;Total ram usage:        4 bytes
 19265 ;; Hardware stack levels used:    1
 19266 ;; Hardware stack levels required when called:   10
 19267 ;; This function calls:
 19268 ;;		Nothing
 19269 ;; This function is called by:
 19270 ;;		_display_prepare
 19271 ;; This function uses a non-reentrant model
 19272 ;;
 19273                           
 19274                           	psect	text53
 19275  011AD4                     __ptext53:
 19276                           	opt stack 0
 19277  011AD4                     __display_clear:
 19278                           	opt stack 19
 19279                           
 19280                           ;display.c: 83: uint8_t row;;display.c: 84: uint8_t col;;display.c: 85: for(row=0;row<4;
      +                          ++row)
 19281                           
 19282                           ; BSR set to: 0
 19283                           ;incstack = 0
 19284  011AD4  0E00               	movlw	0
 19285  011AD6  0100               	movlb	0	; () banked
 19286  011AD8  6F62               	movwf	__display_clear@row& (0+255),b
 19287  011ADA                     l19682:
 19288                           
 19289                           ; BSR set to: 0
 19290  011ADA  0E03               	movlw	3
 19291  011ADC  6562               	cpfsgt	__display_clear@row& (0+255),b
 19292  011ADE  D001               	goto	l1270
 19293  011AE0  0012               	return	
 19294  011AE2                     l1270:
 19295                           
 19296                           ; BSR set to: 0
 19297                           ;display.c: 86: {;display.c: 87: for(col=0;col<20;++col)
 19298                           
 19299                           ; BSR set to: 0
 19300  011AE2  0E00               	movlw	0
 19301  011AE4  6F63               	movwf	__display_clear@col& (0+255),b
 19302  011AE6                     l19688:
 19303                           
 19304                           ; BSR set to: 0
 19305  011AE6  0E13               	movlw	19
 19306  011AE8  6563               	cpfsgt	__display_clear@col& (0+255),b
 19307  011AEA  D001               	goto	l1272
 19308  011AEC  D016               	goto	u19550
 19309  011AEE                     l1272:
 19310                           
 19311                           ; BSR set to: 0
 19312                           ;display.c: 88: {;display.c: 89: display_content[row][col] = ' ';
 19313                           
 19314                           ; BSR set to: 0
 19315  011AEE  5162               	movf	__display_clear@row& (0+255),w,b
 19316  011AF0  0D14               	mullw	20
 19317  011AF2  0EAD               	movlw	low _display_content
 19318  011AF4  6F60               	movwf	??__display_clear& (0+255),b
 19319  011AF6  0E01               	movlw	high _display_content
 19320  011AF8  6F61               	movwf	(??__display_clear+1)& (0+255),b
 19321  011AFA  50F3               	movf	prodl,w,c
 19322  011AFC  2760               	addwf	??__display_clear& (0+255),f,b
 19323  011AFE  50F4               	movf	prodh,w,c
 19324  011B00  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 19325  011B02  5163               	movf	__display_clear@col& (0+255),w,b
 19326  011B04  0D01               	mullw	1
 19327  011B06  50F3               	movf	prodl,w,c
 19328  011B08  2560               	addwf	??__display_clear& (0+255),w,b
 19329  011B0A  6ED9               	movwf	fsr2l,c
 19330  011B0C  50F4               	movf	prodh,w,c
 19331  011B0E  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 19332  011B10  6EDA               	movwf	fsr2h,c
 19333  011B12  0E20               	movlw	32
 19334  011B14  6EDF               	movwf	indf2,c
 19335                           
 19336                           ; BSR set to: 0
 19337  011B16  2B63               	incf	__display_clear@col& (0+255),f,b
 19338  011B18  D7E6               	goto	l19688
 19339  011B1A                     u19550:
 19340                           
 19341                           ; BSR set to: 0
 19342                           
 19343                           ; BSR set to: 0
 19344  011B1A  2B62               	incf	__display_clear@row& (0+255),f,b
 19345  011B1C  D7DE               	goto	l19682
 19346  011B1E                     __end_of__display_clear:
 19347                           	opt stack 0
 19348                           tblptru	equ	0xFF8
 19349                           tblptrh	equ	0xFF7
 19350                           tblptrl	equ	0xFF6
 19351                           tablat	equ	0xFF5
 19352                           prodh	equ	0xFF4
 19353                           prodl	equ	0xFF3
 19354                           intcon	equ	0xFF2
 19355                           postinc0	equ	0xFEE
 19356                           wreg	equ	0xFE8
 19357                           indf1	equ	0xFE7
 19358                           postdec1	equ	0xFE5
 19359                           plusw1	equ	0xFE3
 19360                           fsr1h	equ	0xFE2
 19361                           fsr1l	equ	0xFE1
 19362                           indf2	equ	0xFDF
 19363                           postinc2	equ	0xFDE
 19364                           postdec2	equ	0xFDD
 19365                           plusw2	equ	0xFDB
 19366                           fsr2h	equ	0xFDA
 19367                           fsr2l	equ	0xFD9
 19368                           status	equ	0xFD8
 19369                           
 19370 ;; *************** function _USBDeviceInit *****************
 19371 ;; Defined at:
 19372 ;;		line 277 in file "usb_device.c"
 19373 ;; Parameters:    Size  Location     Type
 19374 ;;		None
 19375 ;; Auto vars:     Size  Location     Type
 19376 ;;  i               1    8[BANK0 ] unsigned char 
 19377 ;; Return value:  Size  Location     Type
 19378 ;;                  1    wreg      void 
 19379 ;; Registers used:
 19380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19381 ;; Tracked objects:
 19382 ;;		On entry : 0/0
 19383 ;;		On exit  : 0/0
 19384 ;;		Unchanged: 0/0
 19385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19387 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19389 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19390 ;;Total ram usage:        1 bytes
 19391 ;; Hardware stack levels used:    1
 19392 ;; Hardware stack levels required when called:   11
 19393 ;; This function calls:
 19394 ;;		_memset
 19395 ;; This function is called by:
 19396 ;;		_main
 19397 ;; This function uses a non-reentrant model
 19398 ;;
 19399                           
 19400                           	psect	text54
 19401  00E1CA                     __ptext54:
 19402                           	opt stack 0
 19403  00E1CA                     _USBDeviceInit:
 19404                           	opt stack 19
 19405                           
 19406                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 19407                           
 19408                           ; BSR set to: 0
 19409                           ;incstack = 0
 19410  00E1CA  98A0               	bcf	4000,4,c	;volatile
 19411                           
 19412                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 19413  00E1CC  0E00               	movlw	0
 19414  00E1CE  6E63               	movwf	3939,c	;volatile
 19415                           
 19416                           ;usb_device.c: 291: {UIR = 0;};
 19417  00E1D0  0E00               	movlw	0
 19418  00E1D2  6E62               	movwf	3938,c	;volatile
 19419                           
 19420                           ;usb_device.c: 294: UEP0 = 0;
 19421  00E1D4  0E00               	movlw	0
 19422  00E1D6  010F               	movlb	15	; () banked
 19423  00E1D8  6F26               	movwf	38,b	;volatile
 19424                           
 19425                           ; BSR set to: 15
 19426                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 19427  00E1DA  0E27               	movlw	39
 19428  00E1DC  0100               	movlb	0	; () banked
 19429  00E1DE  6F60               	movwf	memset@p1& (0+255),b
 19430  00E1E0  0E0F               	movlw	15
 19431  00E1E2  6F61               	movwf	(memset@p1+1)& (0+255),b
 19432  00E1E4  0E00               	movlw	0
 19433  00E1E6  6F63               	movwf	(memset@c+1)& (0+255),b
 19434  00E1E8  0E00               	movlw	0
 19435  00E1EA  6F62               	movwf	memset@c& (0+255),b
 19436  00E1EC  0E00               	movlw	0
 19437  00E1EE  6F65               	movwf	(memset@n+1)& (0+255),b
 19438  00E1F0  0E02               	movlw	2
 19439  00E1F2  6F64               	movwf	memset@n& (0+255),b
 19440  00E1F4  ECCB  F08F         	call	_memset	;wreg free
 19441                           
 19442                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 19443  00E1F8  0E16               	movlw	22
 19444  00E1FA  010F               	movlb	15	; () banked
 19445  00E1FC  6F39               	movwf	57,b	;volatile
 19446                           
 19447                           ; BSR set to: 15
 19448  00E1FE  0E9F               	movlw	159
 19449  00E200  6F37               	movwf	55,b	;volatile
 19450                           
 19451                           ; BSR set to: 15
 19452  00E202  0E7B               	movlw	123
 19453  00E204  6F36               	movwf	54,b	;volatile
 19454                           
 19455                           ; BSR set to: 15
 19456                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 19457  00E206  0E00               	movlw	0
 19458  00E208  0100               	movlb	0	; () banked
 19459  00E20A  6F68               	movwf	USBDeviceInit@i& (0+255),b
 19460  00E20C                     l20044:
 19461                           
 19462                           ; BSR set to: 0
 19463  00E20C  0E0B               	movlw	11
 19464  00E20E  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 19465  00E210  D001               	goto	l145
 19466  00E212  D00E               	goto	u19920
 19467  00E214                     l145:
 19468                           
 19469                           ; BSR set to: 0
 19470                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 19471                           
 19472                           ; BSR set to: 0
 19473  00E214  5168               	movf	USBDeviceInit@i& (0+255),w,b
 19474  00E216  0D04               	mullw	4
 19475  00E218  0E00               	movlw	0
 19476  00E21A  24F3               	addwf	prodl,w,c
 19477  00E21C  6ED9               	movwf	fsr2l,c
 19478  00E21E  0E0D               	movlw	13
 19479  00E220  20F4               	addwfc	prodh,w,c
 19480  00E222  6EDA               	movwf	fsr2h,c
 19481  00E224  6ADE               	clrf	postinc2,c
 19482  00E226  6ADE               	clrf	postinc2,c
 19483  00E228  6ADE               	clrf	postinc2,c
 19484  00E22A  6ADD               	clrf	postdec2,c
 19485                           
 19486                           ; BSR set to: 0
 19487  00E22C  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 19488  00E22E  D7EE               	goto	l20044
 19489  00E230                     u19920:
 19490                           
 19491                           ; BSR set to: 0
 19492                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 19493  00E230  8C65               	bsf	3941,6,c	;volatile
 19494                           
 19495                           ; BSR set to: 0
 19496                           ;usb_device.c: 316: UADDR = 0x00;
 19497  00E232  0E00               	movlw	0
 19498  00E234  010F               	movlb	15	; () banked
 19499  00E236  6F38               	movwf	56,b	;volatile
 19500                           
 19501                           ; BSR set to: 15
 19502                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 19503  00E238  9865               	bcf	3941,4,c	;volatile
 19504                           
 19505                           ; BSR set to: 15
 19506                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 19507  00E23A  9C65               	bcf	3941,6,c	;volatile
 19508  00E23C                     
 19509                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 19510                           
 19511                           ; BSR set to: 15
 19512  00E23C  9662               	bcf	3938,3,c	;volatile
 19513                           
 19514                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 19515  00E23E  0E00               	movlw	0
 19516  00E240  6E0D               	movwf	_inPipes+3,c	;volatile
 19517                           
 19518                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 19519  00E242  0E00               	movlw	0
 19520  00E244  6E04               	movwf	_outPipes+3,c	;volatile
 19521                           
 19522                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 19523  00E246  0E00               	movlw	0
 19524  00E248  6E06               	movwf	_outPipes+5,c	;volatile
 19525  00E24A  0E00               	movlw	0
 19526  00E24C  6E05               	movwf	_outPipes+4,c	;volatile
 19527                           
 19528                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 19529  00E24E  B662               	btfsc	3938,3,c	;volatile
 19530  00E250  D7F5               	goto	l147
 19531                           
 19532                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 19533  00E252  0E01               	movlw	1
 19534  00E254  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 19535                           
 19536                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 19537  00E256  0E01               	movlw	1
 19538  00E258  0101               	movlb	1	; () banked
 19539  00E25A  6F86               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 19540                           
 19541                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 19542  00E25C  0E00               	movlw	0
 19543  00E25E  6F85               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 19544                           
 19545                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 19546  00E260  0E00               	movlw	0
 19547  00E262  6F84               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 19548                           
 19549                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 19550  00E264  0E00               	movlw	0
 19551  00E266  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 19552                           
 19553                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 19554  00E268  0E00               	movlw	0
 19555  00E26A  0100               	movlb	0	; () banked
 19556  00E26C  6F68               	movwf	USBDeviceInit@i& (0+255),b
 19557  00E26E                     l20072:
 19558                           
 19559                           ; BSR set to: 0
 19560  00E26E  0E02               	movlw	2
 19561  00E270  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 19562  00E272  D001               	goto	l149
 19563  00E274  D02E               	goto	u19950
 19564  00E276                     l149:
 19565                           
 19566                           ; BSR set to: 0
 19567                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 19568                           
 19569                           ; BSR set to: 0
 19570  00E276  5168               	movf	USBDeviceInit@i& (0+255),w,b
 19571  00E278  0D02               	mullw	2
 19572  00E27A  0E10               	movlw	low _pBDTEntryIn
 19573  00E27C  24F3               	addwf	prodl,w,c
 19574  00E27E  6ED9               	movwf	fsr2l,c
 19575  00E280  0E00               	movlw	high _pBDTEntryIn
 19576  00E282  20F4               	addwfc	prodh,w,c
 19577  00E284  6EDA               	movwf	fsr2h,c
 19578  00E286  0E00               	movlw	0
 19579  00E288  6EDE               	movwf	postinc2,c
 19580  00E28A  0E00               	movlw	0
 19581  00E28C  6EDD               	movwf	postdec2,c
 19582                           
 19583                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 19584  00E28E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 19585  00E290  0D02               	mullw	2
 19586  00E292  0E45               	movlw	low _pBDTEntryOut
 19587  00E294  24F3               	addwf	prodl,w,c
 19588  00E296  6ED9               	movwf	fsr2l,c
 19589  00E298  0E01               	movlw	high _pBDTEntryOut
 19590  00E29A  20F4               	addwfc	prodh,w,c
 19591  00E29C  6EDA               	movwf	fsr2h,c
 19592  00E29E  0E00               	movlw	0
 19593  00E2A0  6EDE               	movwf	postinc2,c
 19594  00E2A2  0E00               	movlw	0
 19595  00E2A4  6EDD               	movwf	postdec2,c
 19596                           
 19597                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 19598  00E2A6  5168               	movf	USBDeviceInit@i& (0+255),w,b
 19599  00E2A8  0D01               	mullw	1
 19600  00E2AA  0E6C               	movlw	low _ep_data_in
 19601  00E2AC  24F3               	addwf	prodl,w,c
 19602  00E2AE  6ED9               	movwf	fsr2l,c
 19603  00E2B0  0E01               	movlw	high _ep_data_in
 19604  00E2B2  20F4               	addwfc	prodh,w,c
 19605  00E2B4  6EDA               	movwf	fsr2h,c
 19606  00E2B6  0E00               	movlw	0
 19607  00E2B8  6EDF               	movwf	indf2,c
 19608                           
 19609                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 19610  00E2BA  5168               	movf	USBDeviceInit@i& (0+255),w,b
 19611  00E2BC  0D01               	mullw	1
 19612  00E2BE  0E69               	movlw	low _ep_data_out
 19613  00E2C0  24F3               	addwf	prodl,w,c
 19614  00E2C2  6ED9               	movwf	fsr2l,c
 19615  00E2C4  0E01               	movlw	high _ep_data_out
 19616  00E2C6  20F4               	addwfc	prodh,w,c
 19617  00E2C8  6EDA               	movwf	fsr2h,c
 19618  00E2CA  0E00               	movlw	0
 19619  00E2CC  6EDF               	movwf	indf2,c
 19620                           
 19621                           ; BSR set to: 0
 19622  00E2CE  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 19623  00E2D0  D7CE               	goto	l20072
 19624  00E2D2                     u19950:
 19625                           
 19626                           ; BSR set to: 0
 19627                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 19628                           
 19629                           ; BSR set to: 0
 19630  00E2D2  0E08               	movlw	8
 19631  00E2D4  6E10               	movwf	_pBDTEntryIn,c
 19632  00E2D6  0E0D               	movlw	13
 19633  00E2D8  6E11               	movwf	_pBDTEntryIn+1,c
 19634                           
 19635                           ; BSR set to: 0
 19636                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 19637  00E2DA  0E16               	movlw	22
 19638  00E2DC  010F               	movlb	15	; () banked
 19639  00E2DE  6F26               	movwf	38,b	;volatile
 19640                           
 19641                           ; BSR set to: 15
 19642                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 19643  00E2E0  0E0D               	movlw	13
 19644  00E2E2  010D               	movlb	13	; () banked
 19645  00E2E4  6F03               	movwf	3,b	;volatile
 19646  00E2E6  0E30               	movlw	48
 19647  00E2E8  6F02               	movwf	2,b	;volatile
 19648                           
 19649                           ; BSR set to: 13
 19650                           ;usb_device.c: 359: BDT[0].CNT = 8;
 19651  00E2EA  0E08               	movlw	8
 19652  00E2EC  6F01               	movwf	1,b	;volatile
 19653                           
 19654                           ; BSR set to: 13
 19655                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 19656  00E2EE  0E04               	movlw	4
 19657  00E2F0  6F00               	movwf	0,b	;volatile
 19658                           
 19659                           ; BSR set to: 13
 19660                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 19661  00E2F2  8F00               	bsf	0,7,b	;volatile
 19662                           
 19663                           ; BSR set to: 13
 19664                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 19665  00E2F4  0E00               	movlw	0
 19666  00E2F6  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 19667                           
 19668                           ; BSR set to: 13
 19669                           ;usb_device.c: 366: USB1msTickCount = 0;
 19670  00E2F8  0E00               	movlw	0
 19671  00E2FA  0101               	movlb	1	; () banked
 19672  00E2FC  6F5F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 19673  00E2FE  0E00               	movlw	0
 19674  00E300  6F60               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 19675  00E302  0E00               	movlw	0
 19676  00E304  6F61               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 19677  00E306  0E00               	movlw	0
 19678  00E308  6F62               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 19679                           
 19680                           ; BSR set to: 1
 19681                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 19682  00E30A  0E00               	movlw	0
 19683  00E30C  6F83               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 19684                           
 19685                           ; BSR set to: 1
 19686                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 19687  00E30E  0E00               	movlw	0
 19688  00E310  6E2B               	movwf	_USBDeviceState,c	;volatile
 19689                           
 19690                           ; BSR set to: 1
 19691  00E312  0012               	return		;funcret
 19692  00E314                     __end_of_USBDeviceInit:
 19693                           	opt stack 0
 19694                           tblptru	equ	0xFF8
 19695                           tblptrh	equ	0xFF7
 19696                           tblptrl	equ	0xFF6
 19697                           tablat	equ	0xFF5
 19698                           prodh	equ	0xFF4
 19699                           prodl	equ	0xFF3
 19700                           intcon	equ	0xFF2
 19701                           postinc0	equ	0xFEE
 19702                           wreg	equ	0xFE8
 19703                           indf1	equ	0xFE7
 19704                           postdec1	equ	0xFE5
 19705                           plusw1	equ	0xFE3
 19706                           fsr1h	equ	0xFE2
 19707                           fsr1l	equ	0xFE1
 19708                           indf2	equ	0xFDF
 19709                           postinc2	equ	0xFDE
 19710                           postdec2	equ	0xFDD
 19711                           plusw2	equ	0xFDB
 19712                           fsr2h	equ	0xFDA
 19713                           fsr2l	equ	0xFD9
 19714                           status	equ	0xFD8
 19715                           
 19716 ;; *************** function _memset *****************
 19717 ;; Defined at:
 19718 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 19719 ;; Parameters:    Size  Location     Type
 19720 ;;  p1              2    0[BANK0 ] PTR void 
 19721 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 19722 ;;  c               2    2[BANK0 ] int 
 19723 ;;  n               2    4[BANK0 ] unsigned int 
 19724 ;; Auto vars:     Size  Location     Type
 19725 ;;  p               2    6[BANK0 ] PTR unsigned char 
 19726 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 19727 ;; Return value:  Size  Location     Type
 19728 ;;                  2    0[BANK0 ] PTR void 
 19729 ;; Registers used:
 19730 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19731 ;; Tracked objects:
 19732 ;;		On entry : 0/0
 19733 ;;		On exit  : 0/0
 19734 ;;		Unchanged: 0/0
 19735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19736 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19737 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19739 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19740 ;;Total ram usage:        8 bytes
 19741 ;; Hardware stack levels used:    1
 19742 ;; Hardware stack levels required when called:   10
 19743 ;; This function calls:
 19744 ;;		Nothing
 19745 ;; This function is called by:
 19746 ;;		_USBDeviceInit
 19747 ;; This function uses a non-reentrant model
 19748 ;;
 19749                           
 19750                           	psect	text55
 19751  011F96                     __ptext55:
 19752                           	opt stack 0
 19753  011F96                     _memset:
 19754                           	opt stack 19
 19755                           
 19756                           ; BSR set to: 1
 19757                           ;incstack = 0
 19758  011F96  C060  F066         	movff	memset@p1,memset@p
 19759  011F9A  C061  F067         	movff	memset@p1+1,memset@p+1
 19760  011F9E  D009               	goto	l3332
 19761  011FA0                     l19344:
 19762  011FA0  C066  FFD9         	movff	memset@p,fsr2l
 19763  011FA4  C067  FFDA         	movff	memset@p+1,fsr2h
 19764  011FA8  C062  FFDF         	movff	memset@c,indf2
 19765  011FAC  0100               	movlb	0	; () banked
 19766  011FAE  4B66               	infsnz	memset@p& (0+255),f,b
 19767  011FB0  2B67               	incf	(memset@p+1)& (0+255),f,b
 19768  011FB2                     l3332:
 19769                           
 19770                           ; BSR set to: 0
 19771  011FB2  0100               	movlb	0	; () banked
 19772  011FB4  0764               	decf	memset@n& (0+255),f,b
 19773  011FB6  A0D8               	btfss	status,0,c
 19774  011FB8  0765               	decf	(memset@n+1)& (0+255),f,b
 19775  011FBA  2964               	incf	memset@n& (0+255),w,b
 19776  011FBC  E1F1               	bnz	l19344
 19777  011FBE  2965               	incf	(memset@n+1)& (0+255),w,b
 19778  011FC0  B4D8               	btfsc	status,2,c
 19779  011FC2  0012               	return	
 19780  011FC4  D7ED               	goto	l3333
 19781  011FC6                     __end_of_memset:
 19782                           	opt stack 0
 19783                           tblptru	equ	0xFF8
 19784                           tblptrh	equ	0xFF7
 19785                           tblptrl	equ	0xFF6
 19786                           tablat	equ	0xFF5
 19787                           prodh	equ	0xFF4
 19788                           prodl	equ	0xFF3
 19789                           intcon	equ	0xFF2
 19790                           postinc0	equ	0xFEE
 19791                           wreg	equ	0xFE8
 19792                           indf1	equ	0xFE7
 19793                           postdec1	equ	0xFE5
 19794                           plusw1	equ	0xFE3
 19795                           fsr1h	equ	0xFE2
 19796                           fsr1l	equ	0xFE1
 19797                           indf2	equ	0xFDF
 19798                           postinc2	equ	0xFDE
 19799                           postdec2	equ	0xFDD
 19800                           plusw2	equ	0xFDB
 19801                           fsr2h	equ	0xFDA
 19802                           fsr2l	equ	0xFD9
 19803                           status	equ	0xFD8
 19804                           
 19805 ;; *************** function _USBDeviceAttach *****************
 19806 ;; Defined at:
 19807 ;;		line 1354 in file "usb_device.c"
 19808 ;; Parameters:    Size  Location     Type
 19809 ;;		None
 19810 ;; Auto vars:     Size  Location     Type
 19811 ;;		None
 19812 ;; Return value:  Size  Location     Type
 19813 ;;                  1    wreg      void 
 19814 ;; Registers used:
 19815 ;;		wreg, status,2
 19816 ;; Tracked objects:
 19817 ;;		On entry : 0/0
 19818 ;;		On exit  : 0/0
 19819 ;;		Unchanged: 0/0
 19820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19825 ;;Total ram usage:        0 bytes
 19826 ;; Hardware stack levels used:    1
 19827 ;; Hardware stack levels required when called:   10
 19828 ;; This function calls:
 19829 ;;		Nothing
 19830 ;; This function is called by:
 19831 ;;		_main
 19832 ;; This function uses a non-reentrant model
 19833 ;;
 19834                           
 19835                           	psect	text56
 19836  011F64                     __ptext56:
 19837                           	opt stack 0
 19838  011F64                     _USBDeviceAttach:
 19839                           	opt stack 20
 19840                           
 19841                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 19842                           
 19843                           ; BSR set to: 0
 19844                           ;incstack = 0
 19845  011F64  502B               	movf	_USBDeviceState,w,c	;volatile
 19846  011F66  A4D8               	btfss	status,2,c
 19847  011F68  0012               	return	
 19848                           
 19849                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 19850  011F6A  0E00               	movlw	0
 19851  011F6C  6E65               	movwf	3941,c	;volatile
 19852                           
 19853                           ;usb_device.c: 1365: UIE = 0;
 19854  011F6E  0E00               	movlw	0
 19855  011F70  010F               	movlb	15	; () banked
 19856  011F72  6F36               	movwf	54,b	;volatile
 19857                           
 19858                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 19859  011F74  0E16               	movlw	22
 19860  011F76  6F39               	movwf	57,b	;volatile
 19861  011F78  0E9F               	movlw	159
 19862  011F7A  6F37               	movwf	55,b	;volatile
 19863  011F7C  0E7B               	movlw	123
 19864  011F7E  6F36               	movwf	54,b	;volatile
 19865                           
 19866                           ; BSR set to: 15
 19867                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 19868  011F80  8ED0               	bsf	4048,7,c	;volatile
 19869                           
 19870                           ; BSR set to: 15
 19871  011F82  88A2               	bsf	4002,4,c	;volatile
 19872                           
 19873                           ; BSR set to: 15
 19874  011F84  88A0               	bsf	4000,4,c	;volatile
 19875                           
 19876                           ; BSR set to: 15
 19877  011F86  8EF2               	bsf	intcon,7,c	;volatile
 19878                           
 19879                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 19880  011F88  D001               	goto	l206
 19881  011F8A                     l207:
 19882  011F8A  8665               	bsf	3941,3,c	;volatile
 19883  011F8C                     l206:
 19884  011F8C  A665               	btfss	3941,3,c	;volatile
 19885  011F8E  D7FD               	goto	l207
 19886                           
 19887                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 19888  011F90  0E01               	movlw	1
 19889  011F92  6E2B               	movwf	_USBDeviceState,c	;volatile
 19890  011F94  0012               	return	
 19891  011F96                     __end_of_USBDeviceAttach:
 19892                           	opt stack 0
 19893                           tblptru	equ	0xFF8
 19894                           tblptrh	equ	0xFF7
 19895                           tblptrl	equ	0xFF6
 19896                           tablat	equ	0xFF5
 19897                           prodh	equ	0xFF4
 19898                           prodl	equ	0xFF3
 19899                           intcon	equ	0xFF2
 19900                           postinc0	equ	0xFEE
 19901                           wreg	equ	0xFE8
 19902                           indf1	equ	0xFE7
 19903                           postdec1	equ	0xFE5
 19904                           plusw1	equ	0xFE3
 19905                           fsr1h	equ	0xFE2
 19906                           fsr1l	equ	0xFE1
 19907                           indf2	equ	0xFDF
 19908                           postinc2	equ	0xFDE
 19909                           postdec2	equ	0xFDD
 19910                           plusw2	equ	0xFDB
 19911                           fsr2h	equ	0xFDA
 19912                           fsr2l	equ	0xFD9
 19913                           status	equ	0xFD8
 19914                           
 19915 ;; *************** function _SYSTEM_Initialize *****************
 19916 ;; Defined at:
 19917 ;;		line 39 in file "system.c"
 19918 ;; Parameters:    Size  Location     Type
 19919 ;;  state           1    wreg     enum E6623
 19920 ;; Auto vars:     Size  Location     Type
 19921 ;;  state           1    0[BANK0 ] enum E6623
 19922 ;;  pll_startup_    2    3[BANK0 ] unsigned int 
 19923 ;;  pll_startup_    2    1[BANK0 ] unsigned int 
 19924 ;; Return value:  Size  Location     Type
 19925 ;;                  1    wreg      void 
 19926 ;; Registers used:
 19927 ;;		wreg, status,2, status,0
 19928 ;; Tracked objects:
 19929 ;;		On entry : 0/0
 19930 ;;		On exit  : 0/0
 19931 ;;		Unchanged: 0/0
 19932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19934 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19936 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19937 ;;Total ram usage:        5 bytes
 19938 ;; Hardware stack levels used:    1
 19939 ;; Hardware stack levels required when called:   10
 19940 ;; This function calls:
 19941 ;;		Nothing
 19942 ;; This function is called by:
 19943 ;;		_main
 19944 ;; This function uses a non-reentrant model
 19945 ;;
 19946                           
 19947                           	psect	text57
 19948  0115DE                     __ptext57:
 19949                           	opt stack 0
 19950  0115DE                     _SYSTEM_Initialize:
 19951                           	opt stack 20
 19952                           
 19953                           ;incstack = 0
 19954                           ;SYSTEM_Initialize@state stored from wreg
 19955  0115DE  0100               	movlb	0	; () banked
 19956  0115E0  6F60               	movwf	SYSTEM_Initialize@state& (0+255),b
 19957                           
 19958                           ;system.c: 41: switch(state)
 19959  0115E2  D01E               	goto	l890
 19960  0115E4                     
 19961                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 19962  0115E4  0E02               	movlw	2
 19963  0115E6  0100               	movlb	0	; () banked
 19964  0115E8  6F62               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 19965  0115EA  0E58               	movlw	88
 19966  0115EC  6F61               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 19967                           
 19968                           ; BSR set to: 0
 19969                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 19970  0115EE  8C9B               	bsf	3995,6,c	;volatile
 19971  0115F0                     l20224:
 19972                           
 19973                           ; BSR set to: 0
 19974  0115F0  0761               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 19975  0115F2  A0D8               	btfss	status,0,c
 19976  0115F4  0762               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 19977  0115F6  2961               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 19978  0115F8  E1FB               	bnz	l20224
 19979  0115FA  2962               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 19980  0115FC  B4D8               	btfsc	status,2,c
 19981  0115FE  0012               	return	
 19982  011600  D7F7               	goto	l893
 19983  011602                     
 19984                           ; BSR set to: 0
 19985                           ;system.c: 78: OSCCON = 0x70;
 19986                           
 19987                           ; BSR set to: 0
 19988  011602  0E70               	movlw	112
 19989  011604  6ED3               	movwf	4051,c	;volatile
 19990                           
 19991                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 19992  011606  0E03               	movlw	3
 19993  011608  6F64               	movwf	(SYSTEM_Initialize@pll_startup_counter_3095+1)& (0+255),b
 19994  01160A  0E20               	movlw	32
 19995  01160C  6F63               	movwf	SYSTEM_Initialize@pll_startup_counter_3095& (0+255),b
 19996  01160E                     l20228:
 19997                           
 19998                           ; BSR set to: 0
 19999  01160E  0763               	decf	SYSTEM_Initialize@pll_startup_counter_3095& (0+255),f,b
 20000  011610  A0D8               	btfss	status,0,c
 20001  011612  0764               	decf	(SYSTEM_Initialize@pll_startup_counter_3095+1)& (0+255),f,b
 20002  011614  2963               	incf	SYSTEM_Initialize@pll_startup_counter_3095& (0+255),w,b
 20003  011616  E1FB               	bnz	l20228
 20004  011618  2964               	incf	(SYSTEM_Initialize@pll_startup_counter_3095+1)& (0+255),w,b
 20005  01161A  B4D8               	btfsc	status,2,c
 20006  01161C  0012               	return	
 20007  01161E  D7F7               	goto	l899
 20008  011620                     l890:
 20009                           
 20010                           ; BSR set to: 0
 20011  011620  0100               	movlb	0	; () banked
 20012  011622  5160               	movf	SYSTEM_Initialize@state& (0+255),w,b
 20013                           
 20014                           ; Switch size 1, requested type "space"
 20015                           ; Number of cases is 3, Range of values is 0 to 2
 20016                           ; switch strategies available:
 20017                           ; Name         Instructions Cycles
 20018                           ; simple_byte           10     6 (average)
 20019                           ;	Chosen strategy is simple_byte
 20020  011624  0A00               	xorlw	0	; case 0
 20021  011626  B4D8               	btfsc	status,2,c
 20022  011628  D7DD               	goto	l891
 20023  01162A  0A01               	xorlw	1	; case 1
 20024  01162C  B4D8               	btfsc	status,2,c
 20025  01162E  0012               	return	
 20026  011630  0A03               	xorlw	3	; case 2
 20027  011632  A4D8               	btfss	status,2,c
 20028  011634  0012               	return	
 20029  011636  D7E5               	goto	l897
 20030  011638                     __end_of_SYSTEM_Initialize:
 20031                           	opt stack 0
 20032                           tblptru	equ	0xFF8
 20033                           tblptrh	equ	0xFF7
 20034                           tblptrl	equ	0xFF6
 20035                           tablat	equ	0xFF5
 20036                           prodh	equ	0xFF4
 20037                           prodl	equ	0xFF3
 20038                           intcon	equ	0xFF2
 20039                           postinc0	equ	0xFEE
 20040                           wreg	equ	0xFE8
 20041                           indf1	equ	0xFE7
 20042                           postdec1	equ	0xFE5
 20043                           plusw1	equ	0xFE3
 20044                           fsr1h	equ	0xFE2
 20045                           fsr1l	equ	0xFE1
 20046                           indf2	equ	0xFDF
 20047                           postinc2	equ	0xFDE
 20048                           postdec2	equ	0xFDD
 20049                           plusw2	equ	0xFDB
 20050                           fsr2h	equ	0xFDA
 20051                           fsr2l	equ	0xFD9
 20052                           status	equ	0xFD8
 20053                           
 20054 ;; *************** function _APP_DeviceMSDTasks *****************
 20055 ;; Defined at:
 20056 ;;		line 110 in file "app_device_msd.c"
 20057 ;; Parameters:    Size  Location     Type
 20058 ;;		None
 20059 ;; Auto vars:     Size  Location     Type
 20060 ;;		None
 20061 ;; Return value:  Size  Location     Type
 20062 ;;                  1    wreg      void 
 20063 ;; Registers used:
 20064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20065 ;; Tracked objects:
 20066 ;;		On entry : 0/0
 20067 ;;		On exit  : 0/0
 20068 ;;		Unchanged: 0/0
 20069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20074 ;;Total ram usage:        0 bytes
 20075 ;; Hardware stack levels used:    1
 20076 ;; Hardware stack levels required when called:   21
 20077 ;; This function calls:
 20078 ;;		_MSDTasks
 20079 ;; This function is called by:
 20080 ;;		_main
 20081 ;; This function uses a non-reentrant model
 20082 ;;
 20083                           
 20084                           	psect	text58
 20085  0122E6                     __ptext58:
 20086                           	opt stack 0
 20087  0122E6                     _APP_DeviceMSDTasks:
 20088                           	opt stack 9
 20089                           
 20090                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 20091                           
 20092                           ; BSR set to: 0
 20093                           ;incstack = 0
 20094  0122E6  0E20               	movlw	32
 20095  0122E8  602B               	cpfslt	_USBDeviceState,c	;volatile
 20096  0122EA  D001               	goto	l979
 20097  0122EC  0012               	return	
 20098  0122EE                     l979:
 20099                           
 20100                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 20101  0122EE  B265               	btfsc	3941,1,c	;volatile
 20102  0122F0  0012               	return	
 20103                           
 20104                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 20105                           
 20106                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 20107  0122F2  ECDF  F06A         	call	_MSDTasks	;wreg free
 20108  0122F6  0012               	return		;funcret
 20109  0122F8                     __end_of_APP_DeviceMSDTasks:
 20110                           	opt stack 0
 20111                           tblptru	equ	0xFF8
 20112                           tblptrh	equ	0xFF7
 20113                           tblptrl	equ	0xFF6
 20114                           tablat	equ	0xFF5
 20115                           prodh	equ	0xFF4
 20116                           prodl	equ	0xFF3
 20117                           intcon	equ	0xFF2
 20118                           postinc0	equ	0xFEE
 20119                           wreg	equ	0xFE8
 20120                           indf1	equ	0xFE7
 20121                           postdec1	equ	0xFE5
 20122                           plusw1	equ	0xFE3
 20123                           fsr1h	equ	0xFE2
 20124                           fsr1l	equ	0xFE1
 20125                           indf2	equ	0xFDF
 20126                           postinc2	equ	0xFDE
 20127                           postdec2	equ	0xFDD
 20128                           plusw2	equ	0xFDB
 20129                           fsr2h	equ	0xFDA
 20130                           fsr2l	equ	0xFD9
 20131                           status	equ	0xFD8
 20132                           
 20133 ;; *************** function _MSDTasks *****************
 20134 ;; Defined at:
 20135 ;;		line 335 in file "usb_device_msd.c"
 20136 ;; Parameters:    Size  Location     Type
 20137 ;;		None
 20138 ;; Auto vars:     Size  Location     Type
 20139 ;;  i               1   81[BANK0 ] unsigned char 
 20140 ;; Return value:  Size  Location     Type
 20141 ;;                  1    wreg      unsigned char 
 20142 ;; Registers used:
 20143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20144 ;; Tracked objects:
 20145 ;;		On entry : 0/0
 20146 ;;		On exit  : 0/0
 20147 ;;		Unchanged: 0/0
 20148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20150 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20151 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20152 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20153 ;;Total ram usage:        6 bytes
 20154 ;; Hardware stack levels used:    1
 20155 ;; Hardware stack levels required when called:   20
 20156 ;; This function calls:
 20157 ;;		_MSDProcessCommand
 20158 ;;		_USBStallEndpoint
 20159 ;;		_USBTransferOnePacket
 20160 ;; This function is called by:
 20161 ;;		_APP_DeviceMSDTasks
 20162 ;; This function uses a non-reentrant model
 20163 ;;
 20164                           
 20165                           	psect	text59
 20166  00D5BE                     __ptext59:
 20167                           	opt stack 0
 20168  00D5BE                     _MSDTasks:
 20169                           	opt stack 9
 20170                           
 20171                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 20172                           
 20173                           ;incstack = 0
 20174  00D5BE  0E20               	movlw	32
 20175  00D5C0  182B               	xorwf	_USBDeviceState,w,c	;volatile
 20176  00D5C2  A4D8               	btfss	status,2,c
 20177  00D5C4  0012               	return	
 20178                           
 20179                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 20180                           
 20181                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 20182  00D5C6  98A0               	bcf	4000,4,c	;volatile
 20183                           
 20184                           ;usb_device_msd.c: 357: switch(MSD_State)
 20185  00D5C8  D116               	goto	l570
 20186  00D5CA                     
 20187                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 20188  00D5CA  0100               	movlb	0	; () banked
 20189  00D5CC  51F7               	movf	_USBMSDOutHandle& (0+255),w,b
 20190  00D5CE  11F8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20191  00D5D0  B4D8               	btfsc	status,2,c
 20192  00D5D2  D006               	goto	u19240
 20193                           
 20194                           ; BSR set to: 0
 20195  00D5D4  C0F7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20196  00D5D8  C0F8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20197  00D5DC  BEDF               	btfsc	indf2,7,c
 20198  00D5DE  D11A               	goto	l586
 20199  00D5E0                     u19240:
 20200                           
 20201                           ; BSR set to: 0
 20202                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 20203                           
 20204                           ; BSR set to: 0
 20205  00D5E0  0E00               	movlw	0
 20206  00D5E2  6FB1               	movwf	MSDTasks@i& (0+255),b
 20207  00D5E4                     l19408:
 20208                           
 20209                           ; BSR set to: 0
 20210  00D5E4  0E1E               	movlw	30
 20211  00D5E6  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 20212  00D5E8  D001               	goto	l575
 20213  00D5EA  D014               	goto	u19260
 20214  00D5EC                     l575:
 20215                           
 20216                           ; BSR set to: 0
 20217                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 20218                           
 20219                           ; BSR set to: 0
 20220  00D5EC  51B1               	movf	MSDTasks@i& (0+255),w,b
 20221  00D5EE  0D01               	mullw	1
 20222  00D5F0  0E40               	movlw	64
 20223  00D5F2  24F3               	addwf	prodl,w,c
 20224  00D5F4  6ED9               	movwf	fsr2l,c
 20225  00D5F6  0E0D               	movlw	13
 20226  00D5F8  20F4               	addwfc	prodh,w,c
 20227  00D5FA  6EDA               	movwf	fsr2h,c
 20228  00D5FC  51B1               	movf	MSDTasks@i& (0+255),w,b
 20229  00D5FE  0D01               	mullw	1
 20230  00D600  0E00               	movlw	low _gblCBW
 20231  00D602  24F3               	addwf	prodl,w,c
 20232  00D604  6EE1               	movwf	fsr1l,c
 20233  00D606  0E01               	movlw	high _gblCBW
 20234  00D608  20F4               	addwfc	prodh,w,c
 20235  00D60A  6EE2               	movwf	fsr1h,c
 20236  00D60C  CFDF FFE7          	movff	indf2,indf1
 20237                           
 20238                           ; BSR set to: 0
 20239  00D610  2BB1               	incf	MSDTasks@i& (0+255),f,b
 20240  00D612  D7E8               	goto	l19408
 20241  00D614                     u19260:
 20242                           
 20243                           ; BSR set to: 0
 20244                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 20245                           
 20246                           ; BSR set to: 0
 20247  00D614  EE20 F001          	lfsr	2,1
 20248  00D618  51F7               	movf	_USBMSDOutHandle& (0+255),w,b
 20249  00D61A  26D9               	addwf	fsr2l,f,c
 20250  00D61C  51F8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 20251  00D61E  22DA               	addwfc	fsr2h,f,c
 20252  00D620  0E1F               	movlw	31
 20253  00D622  18DE               	xorwf	postinc2,w,c
 20254  00D624  A4D8               	btfss	status,2,c
 20255  00D626  D073               	goto	l577
 20256                           
 20257                           ; BSR set to: 0
 20258  00D628  0E55               	movlw	85
 20259  00D62A  0101               	movlb	1	; () banked
 20260  00D62C  1900               	xorwf	_gblCBW& (0+255),w,b
 20261  00D62E  E16F               	bnz	l577
 20262  00D630  0E53               	movlw	83
 20263  00D632  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 20264  00D634  E16C               	bnz	l577
 20265  00D636  0E42               	movlw	66
 20266  00D638  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 20267  00D63A  E169               	bnz	l577
 20268  00D63C  0E43               	movlw	67
 20269  00D63E  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 20270  00D640  A4D8               	btfss	status,2,c
 20271  00D642  D065               	goto	l577
 20272                           
 20273                           ; BSR set to: 1
 20274                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 20275  00D644  0E01               	movlw	1
 20276  00D646  6F7E               	movwf	_MSDCBWValid& (0+255),b
 20277                           
 20278                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 20279  00D648  510D               	movf	(_gblCBW+13)& (0+255),w,b
 20280  00D64A  A4D8               	btfss	status,2,c
 20281  00D64C  D053               	goto	l578
 20282                           
 20283                           ; BSR set to: 1
 20284  00D64E  0E11               	movlw	17
 20285  00D650  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 20286  00D652  D050               	goto	l578
 20287                           
 20288                           ; BSR set to: 1
 20289  00D654  510E               	movf	(_gblCBW+14)& (0+255),w,b
 20290  00D656  B4D8               	btfsc	status,2,c
 20291  00D658  D04D               	goto	l578
 20292                           
 20293                           ; BSR set to: 1
 20294  00D65A  C10C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 20295  00D65E  0E3F               	movlw	63
 20296  00D660  0100               	movlb	0	; () banked
 20297  00D662  17AC               	andwf	??_MSDTasks& (0+255),f,b
 20298  00D664  A4D8               	btfss	status,2,c
 20299  00D666  D046               	goto	l578
 20300                           
 20301                           ; BSR set to: 0
 20302                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 20303  00D668  0E55               	movlw	85
 20304  00D66A  010D               	movlb	13	; () banked
 20305  00D66C  6F80               	movwf	128,b	;volatile
 20306  00D66E  0E53               	movlw	83
 20307  00D670  6F81               	movwf	129,b	;volatile
 20308  00D672  0E42               	movlw	66
 20309  00D674  6F82               	movwf	130,b	;volatile
 20310  00D676  0E53               	movlw	83
 20311  00D678  6F83               	movwf	131,b	;volatile
 20312                           
 20313                           ; BSR set to: 13
 20314                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 20315  00D67A  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 20316  00D67E  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 20317  00D682  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 20318  00D686  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 20319                           
 20320                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 20321  00D68A  0E00               	movlw	0
 20322  00D68C  6F88               	movwf	136,b	;volatile
 20323  00D68E  0E00               	movlw	0
 20324  00D690  6F89               	movwf	137,b	;volatile
 20325  00D692  0E00               	movlw	0
 20326  00D694  6F8A               	movwf	138,b	;volatile
 20327  00D696  0E00               	movlw	0
 20328  00D698  6F8B               	movwf	139,b	;volatile
 20329                           
 20330                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 20331  00D69A  0E00               	movlw	0
 20332  00D69C  6F8C               	movwf	140,b	;volatile
 20333                           
 20334                           ; BSR set to: 13
 20335                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 20336  00D69E  0100               	movlb	0	; () banked
 20337  00D6A0  69FE               	setf	_MSDCommandState& (0+255),b
 20338                           
 20339                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 20340  00D6A2  0E00               	movlw	0
 20341  00D6A4  0101               	movlb	1	; () banked
 20342  00D6A6  6F82               	movwf	_MSDReadState& (0+255),b
 20343                           
 20344                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 20345  00D6A8  0E00               	movlw	0
 20346  00D6AA  6E21               	movwf	_MSDWriteState,c
 20347                           
 20348                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 20349  00D6AC  0E00               	movlw	0
 20350  00D6AE  6F81               	movwf	_MSDRetryAttempt& (0+255),b
 20351                           
 20352                           ; BSR set to: 1
 20353                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 20354  00D6B0  0E03               	movlw	3
 20355  00D6B2  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 20356  00D6B4  B4D8               	btfsc	status,2,c
 20357  00D6B6  D008               	goto	l579
 20358                           
 20359                           ; BSR set to: 1
 20360                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 20361  00D6B8  9135               	bcf	(_gblSenseData+2)& (0+255),0,b
 20362  00D6BA  9335               	bcf	(_gblSenseData+2)& (0+255),1,b
 20363  00D6BC  9535               	bcf	(_gblSenseData+2)& (0+255),2,b
 20364  00D6BE  9735               	bcf	(_gblSenseData+2)& (0+255),3,b
 20365                           
 20366                           ; BSR set to: 1
 20367                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 20368  00D6C0  0E00               	movlw	0
 20369  00D6C2  6F3F               	movwf	(_gblSenseData+12)& (0+255),b
 20370                           
 20371                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 20372  00D6C4  0E00               	movlw	0
 20373  00D6C6  6F40               	movwf	(_gblSenseData+13)& (0+255),b
 20374  00D6C8                     l579:
 20375                           
 20376                           ; BSR set to: 1
 20377                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 20378                           
 20379                           ; BSR set to: 1
 20380  00D6C8  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 20381  00D6CA  D002               	goto	l580
 20382                           
 20383                           ; BSR set to: 1
 20384                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 20385  00D6CC  0E01               	movlw	1
 20386  00D6CE  D001               	goto	L38
 20387  00D6D0                     l580:
 20388                           
 20389                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 20390                           
 20391                           ; BSR set to: 0
 20392  00D6D0  0E02               	movlw	2
 20393  00D6D2                     L38:
 20394  00D6D2  0100               	movlb	0	; () banked
 20395  00D6D4  6FFF               	movwf	_MSD_State& (0+255),b
 20396                           
 20397                           ; BSR set to: 0
 20398                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 20399                           
 20400                           ; BSR set to: 0
 20401  00D6D6  0101               	movlb	1	; () banked
 20402  00D6D8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20403  00D6DA  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20404  00D6DC  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20405  00D6DE  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 20406  00D6E0  B4D8               	btfsc	status,2,c
 20407  00D6E2  D002               	goto	l582
 20408                           
 20409                           ; BSR set to: 1
 20410                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 20411  00D6E4  0E00               	movlw	0
 20412  00D6E6  D001               	goto	L39
 20413  00D6E8                     l582:
 20414                           
 20415                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 20416                           
 20417                           ; BSR set to: 0
 20418  00D6E8  0E01               	movlw	1
 20419  00D6EA                     L39:
 20420  00D6EA  0100               	movlb	0	; () banked
 20421  00D6EC  6FFD               	movwf	_MSDHostNoData& (0+255),b
 20422                           
 20423                           ; BSR set to: 0
 20424                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 20425                           
 20426                           ; BSR set to: 0
 20427  00D6EE  C10F  F0FE         	movff	_gblCBW+15,_MSDCommandState
 20428                           
 20429                           ;usb_device_msd.c: 454: }
 20430  00D6F2  D090               	goto	l586
 20431  00D6F4                     l578:
 20432                           
 20433                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 20434                           
 20435                           ; BSR set to: 0
 20436  00D6F4  0E01               	movlw	1
 20437  00D6F6  0100               	movlb	0	; () banked
 20438  00D6F8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 20439  00D6FA  0E02               	movlw	2
 20440  00D6FC  EC1A  F079         	call	_USBStallEndpoint
 20441                           
 20442                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 20443  00D700  0E00               	movlw	0
 20444  00D702  0100               	movlb	0	; () banked
 20445  00D704  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 20446  00D706  0E02               	movlw	2
 20447  00D708  EC1A  F079         	call	_USBStallEndpoint
 20448                           
 20449                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 20450  00D70C  D083               	goto	l586
 20451  00D70E                     l577:
 20452                           
 20453                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 20454  00D70E  0E01               	movlw	1
 20455  00D710  0100               	movlb	0	; () banked
 20456  00D712  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 20457  00D714  0E02               	movlw	2
 20458  00D716  EC1A  F079         	call	_USBStallEndpoint
 20459                           
 20460                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 20461  00D71A  0E00               	movlw	0
 20462  00D71C  0100               	movlb	0	; () banked
 20463  00D71E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 20464  00D720  0E02               	movlw	2
 20465  00D722  EC1A  F079         	call	_USBStallEndpoint
 20466                           
 20467                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 20468  00D726  0E00               	movlw	0
 20469  00D728  0101               	movlb	1	; () banked
 20470  00D72A  6F7E               	movwf	_MSDCBWValid& (0+255),b
 20471                           
 20472                           ; BSR set to: 1
 20473                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 20474                           
 20475                           ; BSR set to: 1
 20476  00D72C  D073               	goto	l586
 20477  00D72E                     
 20478                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 20479                           
 20480                           ; BSR set to: 1
 20481  00D72E  ECAC  F074         	call	_MSDProcessCommand	;wreg free
 20482  00D732  0AFF               	xorlw	255
 20483  00D734  A4D8               	btfss	status,2,c
 20484  00D736  D06E               	goto	l586
 20485  00D738  D011               	goto	l591
 20486  00D73A                     
 20487                           ; BSR set to: 0
 20488                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 20489                           
 20490                           ; BSR set to: 0
 20491  00D73A  ECAC  F074         	call	_MSDProcessCommand	;wreg free
 20492  00D73E  0AFF               	xorlw	255
 20493  00D740  A4D8               	btfss	status,2,c
 20494  00D742  D068               	goto	l586
 20495                           
 20496                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 20497  00D744  010D               	movlb	13	; () banked
 20498  00D746  518C               	movf	140,w,b	;volatile
 20499  00D748  A4D8               	btfss	status,2,c
 20500  00D74A  D008               	goto	l591
 20501                           
 20502                           ; BSR set to: 13
 20503  00D74C  5188               	movf	136,w,b	;volatile
 20504  00D74E  1189               	iorwf	137,w,b	;volatile
 20505  00D750  118A               	iorwf	138,w,b	;volatile
 20506  00D752  118B               	iorwf	139,w,b	;volatile
 20507  00D754  B4D8               	btfsc	status,2,c
 20508  00D756  D002               	goto	l591
 20509                           
 20510                           ; BSR set to: 13
 20511                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 20512  00D758  0E02               	movlw	2
 20513  00D75A  6F8C               	movwf	140,b	;volatile
 20514  00D75C                     l591:
 20515                           
 20516                           ; BSR set to: 13
 20517                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 20518  00D75C  0E03               	movlw	3
 20519  00D75E  D03C               	goto	L37
 20520  00D760                     
 20521                           ; BSR set to: 0
 20522                           
 20523                           ; BSR set to: 0
 20524  00D760  C014  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 20525  00D764  C015  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 20526                           
 20527                           ; BSR set to: 0
 20528                           
 20529                           ; BSR set to: 0
 20530                           
 20531                           ; BSR set to: 0
 20532  00D768  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 20533  00D76A  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 20534  00D76C  B4D8               	btfsc	status,2,c
 20535  00D76E  D00A               	goto	l593
 20536                           
 20537                           ; BSR set to: 0
 20538  00D770  C014  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 20539  00D774  C015  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 20540                           
 20541                           ; BSR set to: 0
 20542                           
 20543                           ; BSR set to: 0
 20544                           
 20545                           ; BSR set to: 0
 20546                           
 20547                           ; BSR set to: 0
 20548  00D778  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 20549  00D77C  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 20550  00D780  BEDF               	btfsc	indf2,7,c
 20551  00D782  D048               	goto	l586
 20552  00D784                     l593:
 20553                           
 20554                           ; BSR set to: 0
 20555                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 20556                           
 20557                           ; BSR set to: 0
 20558  00D784  0E01               	movlw	1
 20559  00D786  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 20560  00D788  0E80               	movlw	128
 20561  00D78A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 20562  00D78C  0E0D               	movlw	13
 20563  00D78E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20564  00D790  0E0D               	movlw	13
 20565  00D792  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 20566  00D794  0E02               	movlw	2
 20567  00D796  EC9F  F079         	call	_USBTransferOnePacket
 20568  00D79A  C060  F0F5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20569  00D79E  C061  F0F6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20570                           
 20571                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 20572  00D7A2  0100               	movlb	0	; () banked
 20573  00D7A4  51F7               	movf	_USBMSDOutHandle& (0+255),w,b
 20574  00D7A6  11F8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20575  00D7A8  B4D8               	btfsc	status,2,c
 20576  00D7AA  D006               	goto	u19430
 20577                           
 20578                           ; BSR set to: 0
 20579  00D7AC  C0F7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20580  00D7B0  C0F8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20581  00D7B4  BEDF               	btfsc	indf2,7,c
 20582  00D7B6  D00F               	goto	l602
 20583  00D7B8                     u19430:
 20584                           
 20585                           ; BSR set to: 0
 20586                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 20587                           
 20588                           ; BSR set to: 0
 20589  00D7B8  0E00               	movlw	0
 20590  00D7BA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 20591  00D7BC  0E40               	movlw	64
 20592  00D7BE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 20593  00D7C0  0E0D               	movlw	13
 20594  00D7C2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20595  00D7C4  0E40               	movlw	64
 20596  00D7C6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 20597  00D7C8  0E02               	movlw	2
 20598  00D7CA  EC9F  F079         	call	_USBTransferOnePacket
 20599  00D7CE  C060  F0F7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20600  00D7D2  C061  F0F8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20601  00D7D6                     l602:
 20602                           
 20603                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 20604  00D7D6  0E00               	movlw	0
 20605  00D7D8                     L37:
 20606  00D7D8  0100               	movlb	0	; () banked
 20607  00D7DA  6FFF               	movwf	_MSD_State& (0+255),b
 20608                           
 20609                           ;usb_device_msd.c: 513: break;
 20610  00D7DC  D01B               	goto	l586
 20611  00D7DE                     
 20612                           ; BSR set to: 0
 20613                           ;usb_device_msd.c: 518: MSD_State=0x00;
 20614                           
 20615                           ; BSR set to: 0
 20616  00D7DE  0E00               	movlw	0
 20617  00D7E0  6FFF               	movwf	_MSD_State& (0+255),b
 20618                           
 20619                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 20620  00D7E2  0E02               	movlw	2
 20621  00D7E4  010D               	movlb	13	; () banked
 20622  00D7E6  6F8C               	movwf	140,b	;volatile
 20623                           
 20624                           ; BSR set to: 13
 20625                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 20626  00D7E8  0E00               	movlw	0
 20627  00D7EA  0100               	movlb	0	; () banked
 20628  00D7EC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 20629  00D7EE  0E02               	movlw	2
 20630  00D7F0  EC1A  F079         	call	_USBStallEndpoint
 20631                           
 20632                           ;usb_device_msd.c: 521: }
 20633  00D7F4  D00F               	goto	l586
 20634  00D7F6                     l570:
 20635  00D7F6  0100               	movlb	0	; () banked
 20636  00D7F8  51FF               	movf	_MSD_State& (0+255),w,b
 20637                           
 20638                           ; Switch size 1, requested type "space"
 20639                           ; Number of cases is 4, Range of values is 0 to 3
 20640                           ; switch strategies available:
 20641                           ; Name         Instructions Cycles
 20642                           ; simple_byte           13     7 (average)
 20643                           ;	Chosen strategy is simple_byte
 20644  00D7FA  0A00               	xorlw	0	; case 0
 20645  00D7FC  B4D8               	btfsc	status,2,c
 20646  00D7FE  D6E5               	goto	l571
 20647  00D800  0A01               	xorlw	1	; case 1
 20648  00D802  B4D8               	btfsc	status,2,c
 20649  00D804  D794               	goto	l587
 20650  00D806  0A03               	xorlw	3	; case 2
 20651  00D808  B4D8               	btfsc	status,2,c
 20652  00D80A  D797               	goto	l589
 20653  00D80C  0A01               	xorlw	1	; case 3
 20654  00D80E  B4D8               	btfsc	status,2,c
 20655  00D810  D7A7               	goto	l592
 20656  00D812  D7E5               	goto	l605
 20657  00D814                     l586:
 20658                           
 20659                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 20660  00D814  88A0               	bsf	4000,4,c	;volatile
 20661                           
 20662                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 20663  00D816  0012               	return		;funcret
 20664  00D818                     __end_of_MSDTasks:
 20665                           	opt stack 0
 20666                           tblptru	equ	0xFF8
 20667                           tblptrh	equ	0xFF7
 20668                           tblptrl	equ	0xFF6
 20669                           tablat	equ	0xFF5
 20670                           prodh	equ	0xFF4
 20671                           prodl	equ	0xFF3
 20672                           intcon	equ	0xFF2
 20673                           postinc0	equ	0xFEE
 20674                           wreg	equ	0xFE8
 20675                           indf1	equ	0xFE7
 20676                           postdec1	equ	0xFE5
 20677                           plusw1	equ	0xFE3
 20678                           fsr1h	equ	0xFE2
 20679                           fsr1l	equ	0xFE1
 20680                           indf2	equ	0xFDF
 20681                           postinc2	equ	0xFDE
 20682                           postdec2	equ	0xFDD
 20683                           plusw2	equ	0xFDB
 20684                           fsr2h	equ	0xFDA
 20685                           fsr2l	equ	0xFD9
 20686                           status	equ	0xFD8
 20687                           
 20688 ;; *************** function _MSDProcessCommand *****************
 20689 ;; Defined at:
 20690 ;;		line 553 in file "usb_device_msd.c"
 20691 ;; Parameters:    Size  Location     Type
 20692 ;;		None
 20693 ;; Auto vars:     Size  Location     Type
 20694 ;;		None
 20695 ;; Return value:  Size  Location     Type
 20696 ;;                  1    wreg      unsigned char 
 20697 ;; Registers used:
 20698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20699 ;; Tracked objects:
 20700 ;;		On entry : 0/0
 20701 ;;		On exit  : 0/0
 20702 ;;		Unchanged: 0/0
 20703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20706 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20707 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20708 ;;Total ram usage:        5 bytes
 20709 ;; Hardware stack levels used:    1
 20710 ;; Hardware stack levels required when called:   19
 20711 ;; This function calls:
 20712 ;;		_ExternalFlash_MediaDetect
 20713 ;;		_ExternalFlash_MediaInitialize
 20714 ;;		_MSDProcessCommandMediaAbsent
 20715 ;;		_MSDProcessCommandMediaPresent
 20716 ;; This function is called by:
 20717 ;;		_MSDTasks
 20718 ;; This function uses a non-reentrant model
 20719 ;;
 20720                           
 20721                           	psect	text60
 20722  00E958                     __ptext60:
 20723                           	opt stack 0
 20724  00E958                     _MSDProcessCommand:
 20725                           	opt stack 9
 20726                           
 20727                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 20728                           
 20729                           ;incstack = 0
 20730  00E958  C1A5  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 20731  00E95C  C1A6  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 20732  00E960  EE21  F099         	lfsr	2,_LUN+9
 20733  00E964  D801               	call	u18568
 20734  00E966  D00A               	goto	u18569
 20735  00E968                     u18568:
 20736  00E968  0005               	push	
 20737  00E96A  6EFA               	movwf	pclath,c
 20738  00E96C  50DE               	movf	postinc2,w,c
 20739  00E96E  6EFD               	movwf	tosl,c
 20740  00E970  50DE               	movf	postinc2,w,c
 20741  00E972  6EFE               	movwf	tosh,c
 20742  00E974  50DE               	movf	postinc2,w,c
 20743  00E976  6EFF               	movwf	tosu,c
 20744  00E978  50FA               	movf	pclath,w,c
 20745  00E97A  0012               	return		;indir
 20746  00E97C                     u18569:
 20747  00E97C  0900               	iorlw	0
 20748  00E97E  B4D8               	btfsc	status,2,c
 20749  00E980  D00C               	goto	u18580
 20750  00E982  0101               	movlb	1	; () banked
 20751  00E984  510D               	movf	(_gblCBW+13)& (0+255),w,b
 20752  00E986  0D01               	mullw	1
 20753  00E988  0E7F               	movlw	low _SoftDetach
 20754  00E98A  24F3               	addwf	prodl,w,c
 20755  00E98C  6ED9               	movwf	fsr2l,c
 20756  00E98E  0E01               	movlw	high _SoftDetach
 20757  00E990  20F4               	addwfc	prodh,w,c
 20758  00E992  6EDA               	movwf	fsr2h,c
 20759  00E994  04DE               	decf	postinc2,w,c
 20760  00E996  A4D8               	btfss	status,2,c
 20761  00E998  D01D               	goto	l608
 20762  00E99A                     u18580:
 20763                           
 20764                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 20765                           
 20766                           ; BSR set to: 1
 20767  00E99A  C10D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 20768  00E99E  0E01               	movlw	1
 20769  00E9A0  0100               	movlb	0	; () banked
 20770  00E9A2  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 20771  00E9A4  0E00               	movlw	0
 20772  00E9A6  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 20773  00E9A8  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 20774  00E9AA  D003               	goto	u18594
 20775  00E9AC                     u18595:
 20776  00E9AC  90D8               	bcf	status,0,c
 20777  00E9AE  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 20778  00E9B0  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 20779  00E9B2                     u18594:
 20780  00E9B2  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 20781  00E9B4  D7FB               	goto	u18595
 20782  00E9B6  0100               	movlb	0	; () banked
 20783  00E9B8  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 20784  00E9BA  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 20785  00E9BC  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 20786  00E9BE  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 20787  00E9C0  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 20788  00E9C2  0101               	movlb	1	; () banked
 20789  00E9C4  1775               	andwf	_gblMediaPresent& (0+255),f,b
 20790  00E9C6  0100               	movlb	0	; () banked
 20791  00E9C8  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 20792  00E9CA  0101               	movlb	1	; () banked
 20793  00E9CC  1776               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 20794                           
 20795                           ; BSR set to: 1
 20796                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 20797  00E9CE  ECD0  F089         	call	_MSDProcessCommandMediaAbsent	;wreg free
 20798                           
 20799                           ;usb_device_msd.c: 563: }
 20800  00E9D2  D058               	goto	l615
 20801  00E9D4                     l608:
 20802                           
 20803                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 20804  00E9D4  C10D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 20805  00E9D8  0E01               	movlw	1
 20806  00E9DA  0100               	movlb	0	; () banked
 20807  00E9DC  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 20808  00E9DE  0E00               	movlw	0
 20809  00E9E0  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 20810  00E9E2  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 20811  00E9E4  D003               	goto	u18604
 20812  00E9E6                     u18605:
 20813  00E9E6  90D8               	bcf	status,0,c
 20814  00E9E8  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 20815  00E9EA  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 20816  00E9EC                     u18604:
 20817  00E9EC  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 20818  00E9EE  D7FB               	goto	u18605
 20819  00E9F0  0101               	movlb	1	; () banked
 20820  00E9F2  5175               	movf	_gblMediaPresent& (0+255),w,b
 20821  00E9F4  0100               	movlb	0	; () banked
 20822  00E9F6  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 20823  00E9F8  0101               	movlb	1	; () banked
 20824  00E9FA  5176               	movf	(_gblMediaPresent+1)& (0+255),w,b
 20825  00E9FC  0100               	movlb	0	; () banked
 20826  00E9FE  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 20827  00EA00  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 20828  00EA02  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 20829  00EA04  A4D8               	btfss	status,2,c
 20830  00EA06  D03C               	goto	l612
 20831                           
 20832                           ; BSR set to: 0
 20833                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 20834  00EA08  C1A5  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 20835  00EA0C  C1A6  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 20836  00EA10  D801               	call	u18628
 20837  00EA12  D00B               	goto	u18629
 20838  00EA14                     u18628:
 20839  00EA14  0005               	push	
 20840  00EA16  6EFA               	movwf	pclath,c
 20841  00EA18  0101               	movlb	1	; () banked
 20842  00EA1A  5190               	movf	_LUN& (0+255),w,b
 20843  00EA1C  6EFD               	movwf	tosl,c
 20844  00EA1E  5191               	movf	(_LUN+1)& (0+255),w,b
 20845  00EA20  6EFE               	movwf	tosh,c
 20846  00EA22  5192               	movf	(_LUN+2)& (0+255),w,b
 20847  00EA24  6EFF               	movwf	tosu,c
 20848  00EA26  50FA               	movf	pclath,w,c
 20849  00EA28  0012               	return		;indir
 20850  00EA2A                     u18629:
 20851  00EA2A  0100               	movlb	0	; () banked
 20852  00EA2C  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 20853  00EA2E  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 20854  00EA30  B4D8               	btfsc	status,2,c
 20855  00EA32  D023               	goto	l613
 20856                           
 20857                           ; BSR set to: 0
 20858                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 20859  00EA34  C10D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 20860  00EA38  0E01               	movlw	1
 20861  00EA3A  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 20862  00EA3C  0E00               	movlw	0
 20863  00EA3E  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 20864  00EA40  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 20865  00EA42  D003               	goto	u18644
 20866  00EA44                     u18645:
 20867  00EA44  90D8               	bcf	status,0,c
 20868  00EA46  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 20869  00EA48  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 20870  00EA4A                     u18644:
 20871  00EA4A  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 20872  00EA4C  D7FB               	goto	u18645
 20873  00EA4E  0100               	movlb	0	; () banked
 20874  00EA50  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 20875  00EA52  0101               	movlb	1	; () banked
 20876  00EA54  1375               	iorwf	_gblMediaPresent& (0+255),f,b
 20877  00EA56  0100               	movlb	0	; () banked
 20878  00EA58  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 20879  00EA5A  0101               	movlb	1	; () banked
 20880  00EA5C  1376               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 20881                           
 20882                           ; BSR set to: 1
 20883                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 20884  00EA5E  5135               	movf	(_gblSenseData+2)& (0+255),w,b
 20885  00EA60  0BF0               	andlw	-16
 20886  00EA62  0906               	iorlw	6
 20887  00EA64  6F35               	movwf	(_gblSenseData+2)& (0+255),b
 20888                           
 20889                           ; BSR set to: 1
 20890                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 20891  00EA66  0E28               	movlw	40
 20892  00EA68  6F3F               	movwf	(_gblSenseData+12)& (0+255),b
 20893                           
 20894                           ; BSR set to: 1
 20895                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 20896  00EA6A  0E00               	movlw	0
 20897  00EA6C  6F40               	movwf	(_gblSenseData+13)& (0+255),b
 20898                           
 20899                           ; BSR set to: 1
 20900                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 20901  00EA6E  0E01               	movlw	1
 20902  00EA70  010D               	movlb	13	; () banked
 20903  00EA72  6F8C               	movwf	140,b	;volatile
 20904                           
 20905                           ; BSR set to: 13
 20906                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 20907  00EA74  EC10  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 20908                           
 20909                           ;usb_device_msd.c: 589: }
 20910  00EA78  D005               	goto	l615
 20911  00EA7A                     l613:
 20912                           
 20913                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 20914  00EA7A  ECD0  F089         	call	_MSDProcessCommandMediaAbsent	;wreg free
 20915                           
 20916                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 20917  00EA7E  D002               	goto	l615
 20918  00EA80                     l612:
 20919                           
 20920                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 20921  00EA80  EC10  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 20922  00EA84                     l615:
 20923                           
 20924                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 20925  00EA84  0100               	movlb	0	; () banked
 20926  00EA86  51FE               	movf	_MSDCommandState& (0+255),w,b
 20927  00EA88  0012               	return	
 20928  00EA8A                     __end_of_MSDProcessCommand:
 20929                           	opt stack 0
 20930                           tosu	equ	0xFFF
 20931                           tosh	equ	0xFFE
 20932                           tosl	equ	0xFFD
 20933                           pclath	equ	0xFFA
 20934                           tblptru	equ	0xFF8
 20935                           tblptrh	equ	0xFF7
 20936                           tblptrl	equ	0xFF6
 20937                           tablat	equ	0xFF5
 20938                           prodh	equ	0xFF4
 20939                           prodl	equ	0xFF3
 20940                           intcon	equ	0xFF2
 20941                           postinc0	equ	0xFEE
 20942                           wreg	equ	0xFE8
 20943                           indf1	equ	0xFE7
 20944                           postdec1	equ	0xFE5
 20945                           plusw1	equ	0xFE3
 20946                           fsr1h	equ	0xFE2
 20947                           fsr1l	equ	0xFE1
 20948                           indf2	equ	0xFDF
 20949                           postinc2	equ	0xFDE
 20950                           postdec2	equ	0xFDD
 20951                           plusw2	equ	0xFDB
 20952                           fsr2h	equ	0xFDA
 20953                           fsr2l	equ	0xFD9
 20954                           status	equ	0xFD8
 20955                           
 20956 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 20957 ;; Defined at:
 20958 ;;		line 635 in file "usb_device_msd.c"
 20959 ;; Parameters:    Size  Location     Type
 20960 ;;		None
 20961 ;; Auto vars:     Size  Location     Type
 20962 ;;		None
 20963 ;; Return value:  Size  Location     Type
 20964 ;;                  1    wreg      void 
 20965 ;; Registers used:
 20966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20967 ;; Tracked objects:
 20968 ;;		On entry : 0/0
 20969 ;;		On exit  : 0/0
 20970 ;;		Unchanged: 0/0
 20971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20976 ;;Total ram usage:        0 bytes
 20977 ;; Hardware stack levels used:    1
 20978 ;; Hardware stack levels required when called:   18
 20979 ;; This function calls:
 20980 ;;		_MSDErrorHandler
 20981 ;;		_MSDProcessCommandMediaPresent
 20982 ;;		_ResetSenseData
 20983 ;; This function is called by:
 20984 ;;		_MSDProcessCommand
 20985 ;; This function uses a non-reentrant model
 20986 ;;
 20987                           
 20988                           	psect	text61
 20989  0113A0                     __ptext61:
 20990                           	opt stack 0
 20991  0113A0                     _MSDProcessCommandMediaAbsent:
 20992                           	opt stack 9
 20993                           
 20994                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 20995                           
 20996                           ; BSR set to: 0
 20997                           ;incstack = 0
 20998  0113A0  D01E               	goto	l619
 20999  0113A2                     
 21000                           ;usb_device_msd.c: 646: ResetSenseData();
 21001  0113A2  EC01  F08A         	call	_ResetSenseData	;wreg free
 21002                           
 21003                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 21004  0113A6  0101               	movlb	1	; () banked
 21005  0113A8  5135               	movf	(_gblSenseData+2)& (0+255),w,b
 21006  0113AA  0BF0               	andlw	-16
 21007  0113AC  0902               	iorlw	2
 21008  0113AE  6F35               	movwf	(_gblSenseData+2)& (0+255),b
 21009                           
 21010                           ; BSR set to: 1
 21011                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 21012  0113B0  0E3A               	movlw	58
 21013  0113B2  6F3F               	movwf	(_gblSenseData+12)& (0+255),b
 21014                           
 21015                           ; BSR set to: 1
 21016                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 21017  0113B4  0E00               	movlw	0
 21018  0113B6  6F40               	movwf	(_gblSenseData+13)& (0+255),b
 21019                           
 21020                           ; BSR set to: 1
 21021                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 21022  0113B8  EC10  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 21023                           
 21024                           ;usb_device_msd.c: 655: break;
 21025  0113BC  0012               	return	
 21026  0113BE                     
 21027                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 21028  0113BE  0E01               	movlw	1
 21029  0113C0  010D               	movlb	13	; () banked
 21030  0113C2  6F8C               	movwf	140,b	;volatile
 21031                           
 21032                           ; BSR set to: 13
 21033                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 21034  0113C4  0100               	movlb	0	; () banked
 21035  0113C6  69FE               	setf	_MSDCommandState& (0+255),b
 21036                           
 21037                           ;usb_device_msd.c: 665: break;
 21038  0113C8  0012               	return	
 21039  0113CA                     
 21040                           ; BSR set to: 0
 21041                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 21042                           
 21043                           ; BSR set to: 0
 21044  0113CA  EC10  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 21045                           
 21046                           ;usb_device_msd.c: 671: break;
 21047  0113CE  0012               	return	
 21048  0113D0                     
 21049                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 21050  0113D0  EC10  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 21051                           
 21052                           ;usb_device_msd.c: 677: break;
 21053  0113D4  0012               	return	
 21054  0113D6                     
 21055                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 21056  0113D6  0E7F               	movlw	127
 21057  0113D8  EC70  F076         	call	_MSDErrorHandler
 21058                           
 21059                           ;usb_device_msd.c: 685: }
 21060                           
 21061                           ;usb_device_msd.c: 684: break;
 21062  0113DC  0012               	return	
 21063  0113DE                     l619:
 21064  0113DE  0100               	movlb	0	; () banked
 21065  0113E0  51FE               	movf	_MSDCommandState& (0+255),w,b
 21066                           
 21067                           ; Switch size 1, requested type "space"
 21068                           ; Number of cases is 5, Range of values is 0 to 253
 21069                           ; switch strategies available:
 21070                           ; Name         Instructions Cycles
 21071                           ; simple_byte           16     9 (average)
 21072                           ;	Chosen strategy is simple_byte
 21073  0113E2  0A00               	xorlw	0	; case 0
 21074  0113E4  B4D8               	btfsc	status,2,c
 21075  0113E6  D7EB               	goto	l622
 21076  0113E8  0A03               	xorlw	3	; case 3
 21077  0113EA  B4D8               	btfsc	status,2,c
 21078  0113EC  D7DA               	goto	l620
 21079  0113EE  0A11               	xorlw	17	; case 18
 21080  0113F0  B4D8               	btfsc	status,2,c
 21081  0113F2  D7EB               	goto	l624
 21082  0113F4  0A0C               	xorlw	12	; case 30
 21083  0113F6  B4D8               	btfsc	status,2,c
 21084  0113F8  D7E2               	goto	l622
 21085  0113FA  0AE3               	xorlw	227	; case 253
 21086  0113FC  B4D8               	btfsc	status,2,c
 21087  0113FE  D7E8               	goto	l625
 21088  011400  D7EA               	goto	l626
 21089  011402                     __end_of_MSDProcessCommandMediaAbsent:
 21090                           	opt stack 0
 21091                           tosu	equ	0xFFF
 21092                           tosh	equ	0xFFE
 21093                           tosl	equ	0xFFD
 21094                           pclath	equ	0xFFA
 21095                           tblptru	equ	0xFF8
 21096                           tblptrh	equ	0xFF7
 21097                           tblptrl	equ	0xFF6
 21098                           tablat	equ	0xFF5
 21099                           prodh	equ	0xFF4
 21100                           prodl	equ	0xFF3
 21101                           intcon	equ	0xFF2
 21102                           postinc0	equ	0xFEE
 21103                           wreg	equ	0xFE8
 21104                           indf1	equ	0xFE7
 21105                           postdec1	equ	0xFE5
 21106                           plusw1	equ	0xFE3
 21107                           fsr1h	equ	0xFE2
 21108                           fsr1l	equ	0xFE1
 21109                           indf2	equ	0xFDF
 21110                           postinc2	equ	0xFDE
 21111                           postdec2	equ	0xFDD
 21112                           plusw2	equ	0xFDB
 21113                           fsr2h	equ	0xFDA
 21114                           fsr2l	equ	0xFD9
 21115                           status	equ	0xFD8
 21116                           
 21117 ;; *************** function _MSDProcessCommandMediaPresent *****************
 21118 ;; Defined at:
 21119 ;;		line 712 in file "usb_device_msd.c"
 21120 ;; Parameters:    Size  Location     Type
 21121 ;;		None
 21122 ;; Auto vars:     Size  Location     Type
 21123 ;;  capacity        4   66[BANK0 ] struct .
 21124 ;;  sectorSize      4   62[BANK0 ] struct .
 21125 ;;  i               1   70[BANK0 ] unsigned char 
 21126 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 21127 ;; Return value:  Size  Location     Type
 21128 ;;                  1    wreg      void 
 21129 ;; Registers used:
 21130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 21131 ;; Tracked objects:
 21132 ;;		On entry : 0/0
 21133 ;;		On exit  : 0/0
 21134 ;;		Unchanged: 0/0
 21135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21137 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21138 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21139 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21140 ;;Total ram usage:       14 bytes
 21141 ;; Hardware stack levels used:    1
 21142 ;; Hardware stack levels required when called:   17
 21143 ;; This function calls:
 21144 ;;		_ExternalFlash_CapacityRead
 21145 ;;		_ExternalFlash_SectorSizeRead
 21146 ;;		_ExternalFlash_WriteProtectStateGet
 21147 ;;		_MSDCheckForErrorCases
 21148 ;;		_MSDComputeDeviceInAndResidue
 21149 ;;		_MSDErrorHandler
 21150 ;;		_MSDReadHandler
 21151 ;;		_MSDWriteHandler
 21152 ;;		_ResetSenseData
 21153 ;;		_USBTransferOnePacket
 21154 ;;		_memcpy
 21155 ;; This function is called by:
 21156 ;;		_MSDProcessCommand
 21157 ;;		_MSDProcessCommandMediaAbsent
 21158 ;; This function uses a non-reentrant model
 21159 ;;
 21160                           
 21161                           	psect	text62
 21162  00C420                     __ptext62:
 21163                           	opt stack 0
 21164  00C420                     _MSDProcessCommandMediaPresent:
 21165                           	opt stack 10
 21166                           
 21167                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 21168                           
 21169                           ;incstack = 0
 21170  00C420  D1BF               	goto	l630
 21171  00C422                     
 21172                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 21173  00C422  EC27  F06F         	call	_MSDReadHandler	;wreg free
 21174  00C426  0900               	iorlw	0
 21175  00C428  A4D8               	btfss	status,2,c
 21176  00C42A  0012               	return	
 21177                           
 21178                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 21179  00C42C  0100               	movlb	0	; () banked
 21180  00C42E  69FE               	setf	_MSDCommandState& (0+255),b
 21181                           
 21182                           ; BSR set to: 0
 21183                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 21184  00C430  0012               	return	
 21185  00C432                     
 21186                           ; BSR set to: 0
 21187                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 21188                           
 21189                           ; BSR set to: 0
 21190  00C432  EC9E  F065         	call	_MSDWriteHandler	;wreg free
 21191  00C436  0900               	iorlw	0
 21192  00C438  A4D8               	btfss	status,2,c
 21193  00C43A  0012               	return	
 21194                           
 21195                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 21196  00C43C  0100               	movlb	0	; () banked
 21197  00C43E  69FE               	setf	_MSDCommandState& (0+255),b
 21198                           
 21199                           ; BSR set to: 0
 21200                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 21201  00C440  0012               	return	
 21202  00C442                     
 21203                           ; BSR set to: 0
 21204                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 21205                           
 21206                           ; BSR set to: 0
 21207  00C442  05FD               	decf	_MSDHostNoData& (0+255),w,b
 21208  00C444  A4D8               	btfss	status,2,c
 21209  00C446  D002               	goto	l637
 21210                           
 21211                           ; BSR set to: 0
 21212                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 21213  00C448  69FE               	setf	_MSDCommandState& (0+255),b
 21214                           
 21215                           ;usb_device_msd.c: 751: break;
 21216  00C44A  0012               	return	
 21217  00C44C                     l637:
 21218                           
 21219                           ; BSR set to: 0
 21220                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 21221  00C44C  C112  F0F4         	movff	_gblCBW+18,_TransferLength+1
 21222                           
 21223                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 21224  00C450  C113  F0F3         	movff	_gblCBW+19,_TransferLength
 21225                           
 21226                           ; BSR set to: 0
 21227                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 21228  00C454  C0F3  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 21229  00C458  C0F4  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 21230  00C45C  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 21231  00C45E  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 21232  00C460  EC26  F07B         	call	_MSDCheckForErrorCases	;wreg free
 21233  00C464  0900               	iorlw	0
 21234  00C466  A4D8               	btfss	status,2,c
 21235  00C468  0012               	return	
 21236                           
 21237                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 21238                           
 21239                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 21240  00C46A  0E00               	movlw	0
 21241  00C46C  0100               	movlb	0	; () banked
 21242  00C46E  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 21243  00C470  0E24               	movlw	36
 21244  00C472  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 21245  00C474  EC3D  F082         	call	_MSDComputeDeviceInAndResidue	;wreg free
 21246                           
 21247                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 21248  00C478  0E00               	movlw	0
 21249  00C47A  0100               	movlb	0	; () banked
 21250  00C47C  6F60               	movwf	memcpy@d1& (0+255),b
 21251  00C47E  0E06               	movlw	6
 21252  00C480  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21253  00C482  0E60               	movlw	low _inq_resp
 21254  00C484  6F62               	movwf	memcpy@s1& (0+255),b
 21255  00C486  0EA1               	movlw	high _inq_resp
 21256  00C488  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21257  00C48A  0E00               	movlw	0
 21258  00C48C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21259  00C48E  0E24               	movlw	36
 21260  00C490  6F64               	movwf	memcpy@n& (0+255),b
 21261  00C492  EC63  F08A         	call	_memcpy	;wreg free
 21262                           
 21263                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 21264  00C496  0EFD               	movlw	253
 21265  00C498  0100               	movlb	0	; () banked
 21266  00C49A  6FFE               	movwf	_MSDCommandState& (0+255),b
 21267                           
 21268                           ;usb_device_msd.c: 773: break;
 21269  00C49C  0012               	return	
 21270  00C49E                     
 21271                           ; BSR set to: 0
 21272                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 21273                           
 21274                           ; BSR set to: 0
 21275  00C49E  C1A5  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 21276  00C4A2  C1A6  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 21277  00C4A6  EE21  F093         	lfsr	2,_LUN+3
 21278  00C4AA  D801               	call	u17468
 21279  00C4AC  D00A               	goto	u17469
 21280  00C4AE                     u17468:
 21281  00C4AE  0005               	push	
 21282  00C4B0  6EFA               	movwf	pclath,c
 21283  00C4B2  50DE               	movf	postinc2,w,c
 21284  00C4B4  6EFD               	movwf	tosl,c
 21285  00C4B6  50DE               	movf	postinc2,w,c
 21286  00C4B8  6EFE               	movwf	tosh,c
 21287  00C4BA  50DE               	movf	postinc2,w,c
 21288  00C4BC  6EFF               	movwf	tosu,c
 21289  00C4BE  50FA               	movf	pclath,w,c
 21290  00C4C0  0012               	return		;indir
 21291  00C4C2                     u17469:
 21292  00C4C2  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 21293  00C4C6  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 21294  00C4CA  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 21295  00C4CE  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 21296                           
 21297                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 21298  00C4D2  C1A5  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 21299  00C4D6  C1A6  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 21300  00C4DA  EE21  F096         	lfsr	2,_LUN+6
 21301  00C4DE  D801               	call	u17478
 21302  00C4E0  D00A               	goto	u17479
 21303  00C4E2                     u17478:
 21304  00C4E2  0005               	push	
 21305  00C4E4  6EFA               	movwf	pclath,c
 21306  00C4E6  50DE               	movf	postinc2,w,c
 21307  00C4E8  6EFD               	movwf	tosl,c
 21308  00C4EA  50DE               	movf	postinc2,w,c
 21309  00C4EC  6EFE               	movwf	tosh,c
 21310  00C4EE  50DE               	movf	postinc2,w,c
 21311  00C4F0  6EFF               	movwf	tosu,c
 21312  00C4F2  50FA               	movf	pclath,w,c
 21313  00C4F4  0012               	return		;indir
 21314  00C4F6                     u17479:
 21315  00C4F6  0100               	movlb	0	; () banked
 21316  00C4F8  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 21317  00C4FC  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 21318  00C500  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 21319  00C502  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 21320                           
 21321                           ; BSR set to: 0
 21322                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 21323  00C504  EE26 F000          	lfsr	2,1536
 21324  00C508  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 21325                           
 21326                           ; BSR set to: 0
 21327                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 21328  00C50C  EE26 F001          	lfsr	2,1537	;volatile
 21329  00C510  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 21330                           
 21331                           ; BSR set to: 0
 21332                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 21333  00C514  EE26 F002          	lfsr	2,1538	;volatile
 21334  00C518  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 21335                           
 21336                           ; BSR set to: 0
 21337                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 21338  00C51C  EE26 F003          	lfsr	2,1539	;volatile
 21339  00C520  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 21340                           
 21341                           ; BSR set to: 0
 21342                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 21343  00C524  EE26 F004          	lfsr	2,1540	;volatile
 21344  00C528  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 21345                           
 21346                           ; BSR set to: 0
 21347                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 21348  00C52C  EE26 F005          	lfsr	2,1541	;volatile
 21349  00C530  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 21350                           
 21351                           ; BSR set to: 0
 21352                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 21353  00C534  EE26 F006          	lfsr	2,1542	;volatile
 21354  00C538  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 21355                           
 21356                           ; BSR set to: 0
 21357                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 21358  00C53C  EE26 F007          	lfsr	2,1543	;volatile
 21359  00C540  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 21360                           
 21361                           ; BSR set to: 0
 21362                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 21363  00C544  0E00               	movlw	0
 21364  00C546  6FF4               	movwf	(_TransferLength+1)& (0+255),b
 21365  00C548  0E08               	movlw	8
 21366  00C54A  6FF3               	movwf	_TransferLength& (0+255),b
 21367                           
 21368                           ; BSR set to: 0
 21369                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 21370  00C54C  0E00               	movlw	0
 21371  00C54E  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 21372  00C550  0E08               	movlw	8
 21373  00C552  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 21374  00C554  EC3D  F082         	call	_MSDComputeDeviceInAndResidue	;wreg free
 21375                           
 21376                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 21377  00C558  0EFD               	movlw	253
 21378  00C55A  0100               	movlb	0	; () banked
 21379  00C55C  6FFE               	movwf	_MSDCommandState& (0+255),b
 21380                           
 21381                           ;usb_device_msd.c: 802: break;
 21382  00C55E  0012               	return	
 21383  00C560                     
 21384                           ; BSR set to: 0
 21385                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 21386                           
 21387                           ; BSR set to: 0
 21388  00C560  05FD               	decf	_MSDHostNoData& (0+255),w,b
 21389  00C562  A4D8               	btfss	status,2,c
 21390  00C564  D002               	goto	l641
 21391                           
 21392                           ; BSR set to: 0
 21393                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 21394  00C566  69FE               	setf	_MSDCommandState& (0+255),b
 21395                           
 21396                           ;usb_device_msd.c: 814: break;
 21397  00C568  0012               	return	
 21398  00C56A                     l641:
 21399                           
 21400                           ; BSR set to: 0
 21401                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 21402                           
 21403                           ; BSR set to: 0
 21404  00C56A  0E00               	movlw	0
 21405  00C56C  6FF4               	movwf	(_TransferLength+1)& (0+255),b
 21406  00C56E  0E12               	movlw	18
 21407  00C570  6FF3               	movwf	_TransferLength& (0+255),b
 21408                           
 21409                           ; BSR set to: 0
 21410                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 21411  00C572  0E00               	movlw	0
 21412  00C574  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 21413  00C576  0E12               	movlw	18
 21414  00C578  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 21415  00C57A  EC3D  F082         	call	_MSDComputeDeviceInAndResidue	;wreg free
 21416                           
 21417                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 21418  00C57E  0E00               	movlw	0
 21419  00C580  0100               	movlb	0	; () banked
 21420  00C582  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 21421  00C584                     l17980:
 21422                           
 21423                           ; BSR set to: 0
 21424  00C584  0E11               	movlw	17
 21425  00C586  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 21426  00C588  D001               	goto	l642
 21427  00C58A  D014               	goto	u17500
 21428  00C58C                     l642:
 21429                           
 21430                           ; BSR set to: 0
 21431                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 21432                           
 21433                           ; BSR set to: 0
 21434  00C58C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 21435  00C58E  0D01               	mullw	1
 21436  00C590  0E33               	movlw	low _gblSenseData
 21437  00C592  24F3               	addwf	prodl,w,c
 21438  00C594  6ED9               	movwf	fsr2l,c
 21439  00C596  0E01               	movlw	high _gblSenseData
 21440  00C598  20F4               	addwfc	prodh,w,c
 21441  00C59A  6EDA               	movwf	fsr2h,c
 21442  00C59C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 21443  00C59E  0D01               	mullw	1
 21444  00C5A0  0E00               	movlw	0
 21445  00C5A2  24F3               	addwf	prodl,w,c
 21446  00C5A4  6EE1               	movwf	fsr1l,c
 21447  00C5A6  0E06               	movlw	6
 21448  00C5A8  20F4               	addwfc	prodh,w,c
 21449  00C5AA  6EE2               	movwf	fsr1h,c
 21450  00C5AC  CFDF FFE7          	movff	indf2,indf1
 21451                           
 21452                           ; BSR set to: 0
 21453  00C5B0  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 21454  00C5B2  D7E8               	goto	l17980
 21455  00C5B4                     u17500:
 21456                           
 21457                           ; BSR set to: 0
 21458                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 21459                           
 21460                           ; BSR set to: 0
 21461  00C5B4  0EFD               	movlw	253
 21462  00C5B6  6FFE               	movwf	_MSDCommandState& (0+255),b
 21463                           
 21464                           ;usb_device_msd.c: 827: break;
 21465  00C5B8  0012               	return	
 21466  00C5BA                     l644:
 21467                           
 21468                           ; BSR set to: 0
 21469                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 21470  00C5BA  0E03               	movlw	3
 21471  00C5BC  CFE8 F600          	movff	wreg,1536
 21472                           
 21473                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 21474  00C5C0  0E00               	movlw	0
 21475  00C5C2  CFE8 F601          	movff	wreg,1537	;volatile
 21476                           
 21477                           ; BSR set to: 0
 21478                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 21479  00C5C6  C1A5  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 21480  00C5CA  C1A6  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 21481  00C5CE  EE21  F09F         	lfsr	2,_LUN+15
 21482  00C5D2  D801               	call	u17518
 21483  00C5D4  D00A               	goto	u17519
 21484  00C5D6                     u17518:
 21485  00C5D6  0005               	push	
 21486  00C5D8  6EFA               	movwf	pclath,c
 21487  00C5DA  50DE               	movf	postinc2,w,c
 21488  00C5DC  6EFD               	movwf	tosl,c
 21489  00C5DE  50DE               	movf	postinc2,w,c
 21490  00C5E0  6EFE               	movwf	tosh,c
 21491  00C5E2  50DE               	movf	postinc2,w,c
 21492  00C5E4  6EFF               	movwf	tosu,c
 21493  00C5E6  50FA               	movf	pclath,w,c
 21494  00C5E8  0012               	return		;indir
 21495  00C5EA                     u17519:
 21496  00C5EA  0900               	iorlw	0
 21497  00C5EC  A4D8               	btfss	status,2,c
 21498  00C5EE  D005               	goto	l646
 21499  00C5F0  0E00               	movlw	0
 21500  00C5F2  0100               	movlb	0	; () banked
 21501  00C5F4  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 21502  00C5F6  0E00               	movlw	0
 21503  00C5F8  D004               	goto	L40
 21504  00C5FA                     l646:
 21505                           
 21506                           ; BSR set to: 0
 21507  00C5FA  0E00               	movlw	0
 21508  00C5FC  0100               	movlb	0	; () banked
 21509  00C5FE  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 21510  00C600  0E80               	movlw	128
 21511  00C602                     L40:
 21512  00C602  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 21513                           
 21514                           ; BSR set to: 0
 21515                           
 21516                           ; BSR set to: 0
 21517  00C604  EE26 F002          	lfsr	2,1538	;volatile
 21518  00C608  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 21519                           
 21520                           ; BSR set to: 0
 21521                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 21522  00C60C  0E00               	movlw	0
 21523  00C60E  CFE8 F603          	movff	wreg,1539	;volatile
 21524                           
 21525                           ; BSR set to: 0
 21526                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 21527  00C612  0E00               	movlw	0
 21528  00C614  6FF4               	movwf	(_TransferLength+1)& (0+255),b
 21529  00C616  0E04               	movlw	4
 21530  00C618  6FF3               	movwf	_TransferLength& (0+255),b
 21531                           
 21532                           ; BSR set to: 0
 21533                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 21534  00C61A  0E00               	movlw	0
 21535  00C61C  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 21536  00C61E  0E04               	movlw	4
 21537  00C620  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 21538  00C622  EC3D  F082         	call	_MSDComputeDeviceInAndResidue	;wreg free
 21539                           
 21540                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 21541  00C626  0EFD               	movlw	253
 21542  00C628  0100               	movlb	0	; () banked
 21543  00C62A  6FFE               	movwf	_MSDCommandState& (0+255),b
 21544                           
 21545                           ;usb_device_msd.c: 839: break;
 21546  00C62C  0012               	return	
 21547  00C62E                     
 21548                           ; BSR set to: 0
 21549                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 21550                           
 21551                           ; BSR set to: 0
 21552  00C62E  0101               	movlb	1	; () banked
 21553  00C630  5135               	movf	(_gblSenseData+2)& (0+255),w,b
 21554  00C632  0BF0               	andlw	-16
 21555  00C634  0905               	iorlw	5
 21556  00C636  6F35               	movwf	(_gblSenseData+2)& (0+255),b
 21557                           
 21558                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 21559  00C638  0E20               	movlw	32
 21560  00C63A  6F3F               	movwf	(_gblSenseData+12)& (0+255),b
 21561                           
 21562                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 21563  00C63C  0E00               	movlw	0
 21564  00C63E  6F40               	movwf	(_gblSenseData+13)& (0+255),b
 21565                           
 21566                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 21567  00C640  0E01               	movlw	1
 21568  00C642  010D               	movlb	13	; () banked
 21569  00C644  6F8C               	movwf	140,b	;volatile
 21570                           
 21571                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 21572  00C646  0E00               	movlw	0
 21573  00C648  6F88               	movwf	136,b	;volatile
 21574  00C64A  0E00               	movlw	0
 21575  00C64C  6F89               	movwf	137,b	;volatile
 21576  00C64E  0E00               	movlw	0
 21577  00C650  6F8A               	movwf	138,b	;volatile
 21578  00C652  0E00               	movlw	0
 21579  00C654  6F8B               	movwf	139,b	;volatile
 21580                           
 21581                           ; BSR set to: 13
 21582                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 21583  00C656  0100               	movlb	0	; () banked
 21584  00C658  69FE               	setf	_MSDCommandState& (0+255),b
 21585                           
 21586                           ;usb_device_msd.c: 848: break;
 21587  00C65A  0012               	return	
 21588  00C65C                     
 21589                           ; BSR set to: 0
 21590                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 21591                           
 21592                           ; BSR set to: 0
 21593  00C65C  0E00               	movlw	0
 21594  00C65E  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 21595  00C660  0E00               	movlw	0
 21596  00C662  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 21597  00C664  0E00               	movlw	0
 21598  00C666  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 21599  00C668  0E00               	movlw	0
 21600  00C66A  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 21601  00C66C  EC26  F07B         	call	_MSDCheckForErrorCases	;wreg free
 21602  00C670  0900               	iorlw	0
 21603  00C672  A4D8               	btfss	status,2,c
 21604  00C674  0012               	return	
 21605                           
 21606                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 21607                           
 21608                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 21609  00C676  0101               	movlb	1	; () banked
 21610  00C678  5135               	movf	(_gblSenseData+2)& (0+255),w,b
 21611  00C67A  0B0F               	andlw	15
 21612  00C67C  0A06               	xorlw	6
 21613  00C67E  A4D8               	btfss	status,2,c
 21614  00C680  D007               	goto	l652
 21615                           
 21616                           ; BSR set to: 1
 21617  00C682  010D               	movlb	13	; () banked
 21618  00C684  058C               	decf	140,w,b	;volatile
 21619  00C686  A4D8               	btfss	status,2,c
 21620  00C688  D003               	goto	l652
 21621                           
 21622                           ; BSR set to: 13
 21623                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 21624  00C68A  0100               	movlb	0	; () banked
 21625  00C68C  69FE               	setf	_MSDCommandState& (0+255),b
 21626                           
 21627                           ;usb_device_msd.c: 870: }
 21628  00C68E  0012               	return	
 21629  00C690                     l652:
 21630                           
 21631                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 21632                           
 21633                           ; BSR set to: 0
 21634  00C690  EC01  F08A         	call	_ResetSenseData	;wreg free
 21635                           
 21636                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 21637  00C694  0E00               	movlw	0
 21638  00C696  010D               	movlb	13	; () banked
 21639  00C698  6F88               	movwf	136,b	;volatile
 21640  00C69A  0E00               	movlw	0
 21641  00C69C  6F89               	movwf	137,b	;volatile
 21642  00C69E  0E00               	movlw	0
 21643  00C6A0  6F8A               	movwf	138,b	;volatile
 21644  00C6A2  0E00               	movlw	0
 21645  00C6A4  6F8B               	movwf	139,b	;volatile
 21646                           
 21647                           ; BSR set to: 13
 21648                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 21649  00C6A6  0100               	movlb	0	; () banked
 21650  00C6A8  69FE               	setf	_MSDCommandState& (0+255),b
 21651                           
 21652                           ; BSR set to: 0
 21653                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 21654  00C6AA  0012               	return	
 21655  00C6AC                     
 21656                           ; BSR set to: 0
 21657                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 21658                           
 21659                           ; BSR set to: 0
 21660                           
 21661                           ; BSR set to: 0
 21662  00C6AC  0E00               	movlw	0
 21663  00C6AE  010D               	movlb	13	; () banked
 21664  00C6B0  6F88               	movwf	136,b	;volatile
 21665  00C6B2  0E00               	movlw	0
 21666  00C6B4  6F89               	movwf	137,b	;volatile
 21667  00C6B6  0E00               	movlw	0
 21668  00C6B8  6F8A               	movwf	138,b	;volatile
 21669  00C6BA  0E00               	movlw	0
 21670  00C6BC  6F8B               	movwf	139,b	;volatile
 21671                           
 21672                           ; BSR set to: 13
 21673                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 21674  00C6BE  0100               	movlb	0	; () banked
 21675  00C6C0  69FE               	setf	_MSDCommandState& (0+255),b
 21676                           
 21677                           ;usb_device_msd.c: 885: break;
 21678  00C6C2  0012               	return	
 21679  00C6C4                     
 21680                           ; BSR set to: 0
 21681                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 21682                           
 21683                           ; BSR set to: 0
 21684  00C6C4  51F5               	movf	_USBMSDInHandle& (0+255),w,b
 21685  00C6C6  11F6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21686  00C6C8  B4D8               	btfsc	status,2,c
 21687  00C6CA  D006               	goto	u17570
 21688                           
 21689                           ; BSR set to: 0
 21690  00C6CC  C0F5  FFD9         	movff	_USBMSDInHandle,fsr2l
 21691  00C6D0  C0F6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21692  00C6D4  BEDF               	btfsc	indf2,7,c
 21693  00C6D6  0012               	return	
 21694  00C6D8                     u17570:
 21695                           
 21696                           ; BSR set to: 0
 21697                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 21698                           
 21699                           ; BSR set to: 0
 21700  00C6D8  0101               	movlb	1	; () banked
 21701  00C6DA  510B               	movf	(_gblCBW+11)& (0+255),w,b
 21702  00C6DC  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 21703  00C6DE  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 21704  00C6E0  E104               	bnz	u17580
 21705  00C6E2  0E40               	movlw	64
 21706  00C6E4  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 21707  00C6E6  A0D8               	btfss	status,0,c
 21708  00C6E8  D00B               	goto	l660
 21709  00C6EA                     u17580:
 21710                           
 21711                           ; BSR set to: 1
 21712                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 21713  00C6EA  0E40               	movlw	64
 21714  00C6EC  0100               	movlb	0	; () banked
 21715  00C6EE  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 21716                           
 21717                           ; BSR set to: 0
 21718                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 21719  00C6F0  0E40               	movlw	64
 21720  00C6F2  0101               	movlb	1	; () banked
 21721  00C6F4  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 21722  00C6F6  0E00               	movlw	0
 21723  00C6F8  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 21724  00C6FA  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 21725  00C6FC  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 21726                           
 21727                           ;usb_device_msd.c: 900: }
 21728  00C6FE  D00A               	goto	l661
 21729  00C700                     l660:
 21730                           
 21731                           ; BSR set to: 1
 21732                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 21733  00C700  C108  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 21734                           
 21735                           ; BSR set to: 1
 21736                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 21737  00C704  0E00               	movlw	0
 21738  00C706  6F08               	movwf	(_gblCBW+8)& (0+255),b
 21739  00C708  0E00               	movlw	0
 21740  00C70A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 21741  00C70C  0E00               	movlw	0
 21742  00C70E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 21743  00C710  0E00               	movlw	0
 21744  00C712  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 21745  00C714                     l661:
 21746                           
 21747                           ; BSR set to: 1
 21748                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 21749                           
 21750                           ; BSR set to: 1
 21751  00C714  0100               	movlb	0	; () banked
 21752  00C716  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 21753  00C718  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 21754  00C71A  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 21755  00C71C  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 21756  00C71E  5DF3               	subwf	_TransferLength& (0+255),w,b
 21757  00C720  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 21758  00C722  59F4               	subwfb	(_TransferLength+1)& (0+255),w,b
 21759  00C724  A0D8               	btfss	status,0,c
 21760  00C726  D005               	goto	l662
 21761                           
 21762                           ; BSR set to: 0
 21763                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 21764  00C728  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 21765  00C72A  5FF3               	subwf	_TransferLength& (0+255),f,b
 21766  00C72C  0E00               	movlw	0
 21767  00C72E  5BF4               	subwfb	(_TransferLength+1)& (0+255),f,b
 21768                           
 21769                           ;usb_device_msd.c: 918: }
 21770  00C730  D01A               	goto	u17610
 21771  00C732                     l662:
 21772                           
 21773                           ; BSR set to: 0
 21774                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 21775                           
 21776                           ; BSR set to: 0
 21777  00C732  0E00               	movlw	0
 21778  00C734  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 21779  00C736  D013               	goto	l664
 21780  00C738                     
 21781                           ; BSR set to: 0
 21782                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 21783                           
 21784                           ; BSR set to: 0
 21785  00C738  51F3               	movf	_TransferLength& (0+255),w,b
 21786  00C73A  11F4               	iorwf	(_TransferLength+1)& (0+255),w,b
 21787  00C73C  B4D8               	btfsc	status,2,c
 21788  00C73E  D004               	goto	l666
 21789                           
 21790                           ; BSR set to: 0
 21791                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 21792  00C740  07F3               	decf	_TransferLength& (0+255),f,b
 21793  00C742  A0D8               	btfss	status,0,c
 21794  00C744  07F4               	decf	(_TransferLength+1)& (0+255),f,b
 21795                           
 21796                           ;usb_device_msd.c: 932: }
 21797  00C746  D00A               	goto	l667
 21798  00C748                     l666:
 21799                           
 21800                           ; BSR set to: 0
 21801                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 21802                           
 21803                           ; BSR set to: 0
 21804  00C748  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 21805  00C74A  0D01               	mullw	1
 21806  00C74C  0E00               	movlw	0
 21807  00C74E  24F3               	addwf	prodl,w,c
 21808  00C750  6ED9               	movwf	fsr2l,c
 21809  00C752  0E06               	movlw	6
 21810  00C754  20F4               	addwfc	prodh,w,c
 21811  00C756  6EDA               	movwf	fsr2h,c
 21812  00C758  0E00               	movlw	0
 21813  00C75A  6EDF               	movwf	indf2,c
 21814  00C75C                     l667:
 21815                           
 21816                           ; BSR set to: 0
 21817                           
 21818                           ; BSR set to: 0
 21819  00C75C  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 21820  00C75E                     l664:
 21821                           
 21822                           ; BSR set to: 0
 21823                           
 21824                           ; BSR set to: 0
 21825  00C75E  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 21826  00C760  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 21827  00C762  A0D8               	btfss	status,0,c
 21828  00C764  D7E9               	goto	l665
 21829  00C766                     u17610:
 21830                           
 21831                           ; BSR set to: 0
 21832                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 21833                           
 21834                           ; BSR set to: 0
 21835                           
 21836                           ; BSR set to: 0
 21837  00C766  0E01               	movlw	1
 21838  00C768  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21839  00C76A  0E00               	movlw	0
 21840  00C76C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21841  00C76E  0E06               	movlw	6
 21842  00C770  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21843  00C772  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 21844  00C776  0E02               	movlw	2
 21845  00C778  EC9F  F079         	call	_USBTransferOnePacket
 21846  00C77C  C060  F0F5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 21847  00C780  C061  F0F6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 21848                           
 21849                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 21850  00C784  0101               	movlb	1	; () banked
 21851  00C786  5108               	movf	(_gblCBW+8)& (0+255),w,b
 21852  00C788  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 21853  00C78A  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 21854  00C78C  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 21855  00C78E  A4D8               	btfss	status,2,c
 21856  00C790  0012               	return	
 21857                           
 21858                           ; BSR set to: 1
 21859                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 21860  00C792  0100               	movlb	0	; () banked
 21861  00C794  69FE               	setf	_MSDCommandState& (0+255),b
 21862                           
 21863                           ; BSR set to: 0
 21864                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 21865                           
 21866                           ; BSR set to: 0
 21867                           
 21868                           ;usb_device_msd.c: 949: break;
 21869  00C796  0012               	return	
 21870  00C798                     
 21871                           ; BSR set to: 0
 21872                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 21873                           
 21874                           ; BSR set to: 0
 21875                           
 21876                           ;usb_device_msd.c: 954: default:
 21877                           
 21878                           ; BSR set to: 0
 21879  00C798  0E7F               	movlw	127
 21880  00C79A  EC70  F076         	call	_MSDErrorHandler
 21881                           
 21882                           ;usb_device_msd.c: 960: }
 21883                           
 21884                           ;usb_device_msd.c: 959: break;
 21885  00C79E  0012               	return	
 21886  00C7A0                     l630:
 21887  00C7A0  0100               	movlb	0	; () banked
 21888  00C7A2  51FE               	movf	_MSDCommandState& (0+255),w,b
 21889                           
 21890                           ; Switch size 1, requested type "space"
 21891                           ; Number of cases is 12, Range of values is 0 to 254
 21892                           ; switch strategies available:
 21893                           ; Name         Instructions Cycles
 21894                           ; simple_byte           37    19 (average)
 21895                           ;	Chosen strategy is simple_byte
 21896  00C7A4  0A00               	xorlw	0	; case 0
 21897  00C7A6  B4D8               	btfsc	status,2,c
 21898  00C7A8  D759               	goto	l650
 21899  00C7AA  0A03               	xorlw	3	; case 3
 21900  00C7AC  B4D8               	btfsc	status,2,c
 21901  00C7AE  D6D8               	goto	l640
 21902  00C7B0  0A11               	xorlw	17	; case 18
 21903  00C7B2  B4D8               	btfsc	status,2,c
 21904  00C7B4  D646               	goto	l636
 21905  00C7B6  0A08               	xorlw	8	; case 26
 21906  00C7B8  B4D8               	btfsc	status,2,c
 21907  00C7BA  D6FF               	goto	l644
 21908  00C7BC  0A01               	xorlw	1	; case 27
 21909  00C7BE  B4D8               	btfsc	status,2,c
 21910  00C7C0  D775               	goto	l654
 21911  00C7C2  0A05               	xorlw	5	; case 30
 21912  00C7C4  B4D8               	btfsc	status,2,c
 21913  00C7C6  D733               	goto	l649
 21914  00C7C8  0A3B               	xorlw	59	; case 37
 21915  00C7CA  B4D8               	btfsc	status,2,c
 21916  00C7CC  D668               	goto	l639
 21917  00C7CE  0A0D               	xorlw	13	; case 40
 21918  00C7D0  B4D8               	btfsc	status,2,c
 21919  00C7D2  D627               	goto	l631
 21920  00C7D4  0A02               	xorlw	2	; case 42
 21921  00C7D6  B4D8               	btfsc	status,2,c
 21922  00C7D8  D62C               	goto	l634
 21923  00C7DA  0A05               	xorlw	5	; case 47
 21924  00C7DC  B4D8               	btfsc	status,2,c
 21925  00C7DE  D766               	goto	l654
 21926  00C7E0  0AD2               	xorlw	210	; case 253
 21927  00C7E2  B4D8               	btfsc	status,2,c
 21928  00C7E4  D76F               	goto	l656
 21929  00C7E6  0A03               	xorlw	3	; case 254
 21930  00C7E8  D7D7               	goto	l670
 21931  00C7EA                     __end_of_MSDProcessCommandMediaPresent:
 21932                           	opt stack 0
 21933                           tosu	equ	0xFFF
 21934                           tosh	equ	0xFFE
 21935                           tosl	equ	0xFFD
 21936                           pclath	equ	0xFFA
 21937                           tblptru	equ	0xFF8
 21938                           tblptrh	equ	0xFF7
 21939                           tblptrl	equ	0xFF6
 21940                           tablat	equ	0xFF5
 21941                           prodh	equ	0xFF4
 21942                           prodl	equ	0xFF3
 21943                           intcon	equ	0xFF2
 21944                           postinc0	equ	0xFEE
 21945                           wreg	equ	0xFE8
 21946                           indf1	equ	0xFE7
 21947                           postdec1	equ	0xFE5
 21948                           plusw1	equ	0xFE3
 21949                           fsr1h	equ	0xFE2
 21950                           fsr1l	equ	0xFE1
 21951                           indf2	equ	0xFDF
 21952                           postinc2	equ	0xFDE
 21953                           postdec2	equ	0xFDD
 21954                           plusw2	equ	0xFDB
 21955                           fsr2h	equ	0xFDA
 21956                           fsr2l	equ	0xFD9
 21957                           status	equ	0xFD8
 21958                           
 21959 ;; *************** function _MSDWriteHandler *****************
 21960 ;; Defined at:
 21961 ;;		line 1188 in file "usb_device_msd.c"
 21962 ;; Parameters:    Size  Location     Type
 21963 ;;		None
 21964 ;; Auto vars:     Size  Location     Type
 21965 ;;		None
 21966 ;; Return value:  Size  Location     Type
 21967 ;;                  1    wreg      unsigned char 
 21968 ;; Registers used:
 21969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21970 ;; Tracked objects:
 21971 ;;		On entry : 0/0
 21972 ;;		On exit  : 0/0
 21973 ;;		Unchanged: 0/0
 21974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21977 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21978 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21979 ;;Total ram usage:        5 bytes
 21980 ;; Hardware stack levels used:    1
 21981 ;; Hardware stack levels required when called:   13
 21982 ;; This function calls:
 21983 ;;		_ExternalFlash_SectorWrite
 21984 ;;		_ExternalFlash_WriteProtectStateGet
 21985 ;;		_MSDCheckForErrorCases
 21986 ;;		_USBStallEndpoint
 21987 ;;		_USBTransferOnePacket
 21988 ;; This function is called by:
 21989 ;;		_MSDProcessCommandMediaPresent
 21990 ;; This function uses a non-reentrant model
 21991 ;;
 21992                           
 21993                           	psect	text63
 21994  00CB3C                     __ptext63:
 21995                           	opt stack 0
 21996  00CB3C                     _MSDWriteHandler:
 21997                           	opt stack 13
 21998                           
 21999                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 22000                           
 22001                           ;incstack = 0
 22002  00CB3C  D15A               	goto	l700
 22003  00CB3E                     l701:
 22004                           
 22005                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 22006  00CB3E  C111  F15E         	movff	_gblCBW+17,_LBA+3
 22007                           
 22008                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 22009  00CB42  C112  F15D         	movff	_gblCBW+18,_LBA+2
 22010                           
 22011                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 22012  00CB46  C113  F15C         	movff	_gblCBW+19,_LBA+1
 22013                           
 22014                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 22015  00CB4A  C114  F15B         	movff	_gblCBW+20,_LBA
 22016                           
 22017                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 22018  00CB4E  C116  F0F4         	movff	_gblCBW+22,_TransferLength+1
 22019                           
 22020                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 22021  00CB52  C117  F0F3         	movff	_gblCBW+23,_TransferLength
 22022                           
 22023                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 22024  00CB56  0100               	movlb	0	; () banked
 22025  00CB58  51F3               	movf	_TransferLength& (0+255),w,b
 22026  00CB5A  6F71               	movwf	??_MSDWriteHandler& (0+255),b
 22027  00CB5C  51F4               	movf	(_TransferLength+1)& (0+255),w,b
 22028  00CB5E  6F72               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 22029  00CB60  6B73               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 22030  00CB62  6B74               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 22031  00CB64  0E09               	movlw	9
 22032  00CB66                     u16785:
 22033  00CB66  90D8               	bcf	status,0,c
 22034  00CB68  3771               	rlcf	??_MSDWriteHandler& (0+255),f,b
 22035  00CB6A  3772               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 22036  00CB6C  3773               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 22037  00CB6E  3774               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 22038  00CB70  2EE8               	decfsz	wreg,f,c
 22039  00CB72  D7F9               	goto	u16785
 22040  00CB74  C071  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 22041  00CB78  C072  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 22042  00CB7C  C073  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 22043  00CB80  C074  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 22044  00CB84  EC26  F07B         	call	_MSDCheckForErrorCases	;wreg free
 22045  00CB88  0900               	iorlw	0
 22046  00CB8A  A4D8               	btfss	status,2,c
 22047  00CB8C  D143               	goto	l703
 22048                           
 22049                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 22050                           
 22051                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 22052  00CB8E  C1A5  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 22053  00CB92  C1A6  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 22054  00CB96  EE21  F09F         	lfsr	2,_LUN+15
 22055  00CB9A  D801               	call	u16808
 22056  00CB9C  D00A               	goto	u16809
 22057  00CB9E                     u16808:
 22058  00CB9E  0005               	push	
 22059  00CBA0  6EFA               	movwf	pclath,c
 22060  00CBA2  50DE               	movf	postinc2,w,c
 22061  00CBA4  6EFD               	movwf	tosl,c
 22062  00CBA6  50DE               	movf	postinc2,w,c
 22063  00CBA8  6EFE               	movwf	tosh,c
 22064  00CBAA  50DE               	movf	postinc2,w,c
 22065  00CBAC  6EFF               	movwf	tosu,c
 22066  00CBAE  50FA               	movf	pclath,w,c
 22067  00CBB0  0012               	return		;indir
 22068  00CBB2                     u16809:
 22069  00CBB2  0900               	iorlw	0
 22070  00CBB4  B4D8               	btfsc	status,2,c
 22071  00CBB6  D016               	goto	l704
 22072                           
 22073                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 22074  00CBB8  0E01               	movlw	1
 22075  00CBBA  010D               	movlb	13	; () banked
 22076  00CBBC  6F8C               	movwf	140,b	;volatile
 22077                           
 22078                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 22079  00CBBE  0101               	movlb	1	; () banked
 22080  00CBC0  5135               	movf	(_gblSenseData+2)& (0+255),w,b
 22081  00CBC2  0BF0               	andlw	-16
 22082  00CBC4  0907               	iorlw	7
 22083  00CBC6  6F35               	movwf	(_gblSenseData+2)& (0+255),b
 22084                           
 22085                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 22086  00CBC8  0E27               	movlw	39
 22087  00CBCA  6F3F               	movwf	(_gblSenseData+12)& (0+255),b
 22088                           
 22089                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 22090  00CBCC  0E00               	movlw	0
 22091  00CBCE  6F40               	movwf	(_gblSenseData+13)& (0+255),b
 22092                           
 22093                           ; BSR set to: 1
 22094                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 22095  00CBD0  0E00               	movlw	0
 22096  00CBD2  0100               	movlb	0	; () banked
 22097  00CBD4  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 22098  00CBD6  0E02               	movlw	2
 22099  00CBD8  EC1A  F079         	call	_USBStallEndpoint
 22100                           
 22101                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 22102  00CBDC  0E00               	movlw	0
 22103  00CBDE  6E21               	movwf	_MSDWriteState,c
 22104                           
 22105                           ;usb_device_msd.c: 1228: return MSDWriteState;
 22106  00CBE0  5021               	movf	_MSDWriteState,w,c
 22107  00CBE2  0012               	return	
 22108  00CBE4                     l704:
 22109                           
 22110                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 22111  00CBE4  0E01               	movlw	1
 22112  00CBE6  0100               	movlb	0	; () banked
 22113  00CBE8  6FFF               	movwf	_MSD_State& (0+255),b
 22114  00CBEA                     
 22115                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 22116                           
 22117                           ; BSR set to: 0
 22118  00CBEA  0100               	movlb	0	; () banked
 22119  00CBEC  51F3               	movf	_TransferLength& (0+255),w,b
 22120  00CBEE  11F4               	iorwf	(_TransferLength+1)& (0+255),w,b
 22121  00CBF0  B4D8               	btfsc	status,2,c
 22122  00CBF2  D0FC               	goto	l17250
 22123                           
 22124                           ; BSR set to: 0
 22125                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 22126                           
 22127                           ; BSR set to: 0
 22128                           
 22129                           ;usb_device_msd.c: 1238: break;
 22130                           
 22131                           ; BSR set to: 0
 22132                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 22133  00CBF4  0E03               	movlw	3
 22134  00CBF6  6E21               	movwf	_MSDWriteState,c
 22135                           
 22136                           ; BSR set to: 0
 22137                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 22138  00CBF8  0E00               	movlw	0
 22139  00CBFA  0101               	movlb	1	; () banked
 22140  00CBFC  6F79               	movwf	_ptrNextData& (0+255),b
 22141  00CBFE  0E06               	movlw	6
 22142  00CC00  6F7A               	movwf	(_ptrNextData+1)& (0+255),b
 22143                           
 22144                           ; BSR set to: 1
 22145                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 22146  00CC02  0E00               	movlw	0
 22147  00CC04  010D               	movlb	13	; () banked
 22148  00CC06  6F88               	movwf	136,b	;volatile
 22149  00CC08  0E02               	movlw	2
 22150  00CC0A  6F89               	movwf	137,b	;volatile
 22151  00CC0C  0E00               	movlw	0
 22152  00CC0E  6F8A               	movwf	138,b	;volatile
 22153  00CC10  0E00               	movlw	0
 22154  00CC12  6F8B               	movwf	139,b	;volatile
 22155  00CC14                     l708:
 22156                           
 22157                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 22158  00CC14  010D               	movlb	13	; () banked
 22159  00CC16  5188               	movf	136,w,b	;volatile
 22160  00CC18  1189               	iorwf	137,w,b	;volatile
 22161  00CC1A  118A               	iorwf	138,w,b	;volatile
 22162  00CC1C  118B               	iorwf	139,w,b	;volatile
 22163  00CC1E  B4D8               	btfsc	status,2,c
 22164  00CC20  D01D               	goto	l709
 22165                           
 22166                           ; BSR set to: 13
 22167                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 22168  00CC22  0100               	movlb	0	; () banked
 22169  00CC24  51F7               	movf	_USBMSDOutHandle& (0+255),w,b
 22170  00CC26  11F8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22171  00CC28  B4D8               	btfsc	status,2,c
 22172  00CC2A  D006               	goto	l710
 22173                           
 22174                           ; BSR set to: 0
 22175  00CC2C  C0F7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22176  00CC30  C0F8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22177  00CC34  BEDF               	btfsc	indf2,7,c
 22178  00CC36  D0EE               	goto	l703
 22179  00CC38                     l710:
 22180                           
 22181                           ; BSR set to: 0
 22182                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 22183                           
 22184                           ; BSR set to: 0
 22185  00CC38  0E00               	movlw	0
 22186  00CC3A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22187  00CC3C  C179  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 22188  00CC40  C17A  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 22189  00CC44  0E40               	movlw	64
 22190  00CC46  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 22191  00CC48  0E02               	movlw	2
 22192  00CC4A  EC9F  F079         	call	_USBTransferOnePacket
 22193  00CC4E  C060  F0F7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 22194  00CC52  C061  F0F8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 22195                           
 22196                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 22197  00CC56  0E04               	movlw	4
 22198  00CC58  6E21               	movwf	_MSDWriteState,c
 22199                           
 22200                           ;usb_device_msd.c: 1260: }
 22201  00CC5A  D023               	goto	l711
 22202  00CC5C                     l709:
 22203                           
 22204                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 22205  00CC5C  C1A5  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 22206  00CC60  C1A6  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 22207  00CC64  EE21  F09F         	lfsr	2,_LUN+15
 22208  00CC68  D801               	call	u16868
 22209  00CC6A  D00A               	goto	u16869
 22210  00CC6C                     u16868:
 22211  00CC6C  0005               	push	
 22212  00CC6E  6EFA               	movwf	pclath,c
 22213  00CC70  50DE               	movf	postinc2,w,c
 22214  00CC72  6EFD               	movwf	tosl,c
 22215  00CC74  50DE               	movf	postinc2,w,c
 22216  00CC76  6EFE               	movwf	tosh,c
 22217  00CC78  50DE               	movf	postinc2,w,c
 22218  00CC7A  6EFF               	movwf	tosu,c
 22219  00CC7C  50FA               	movf	pclath,w,c
 22220  00CC7E  0012               	return		;indir
 22221  00CC80                     u16869:
 22222  00CC80  0900               	iorlw	0
 22223  00CC82  B4D8               	btfsc	status,2,c
 22224  00CC84  D00C               	goto	l712
 22225                           
 22226                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 22227  00CC86  0E01               	movlw	1
 22228  00CC88  010D               	movlb	13	; () banked
 22229  00CC8A  6F8C               	movwf	140,b	;volatile
 22230                           
 22231                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 22232  00CC8C  0101               	movlb	1	; () banked
 22233  00CC8E  5135               	movf	(_gblSenseData+2)& (0+255),w,b
 22234  00CC90  0BF0               	andlw	-16
 22235  00CC92  0902               	iorlw	2
 22236  00CC94  6F35               	movwf	(_gblSenseData+2)& (0+255),b
 22237                           
 22238                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 22239  00CC96  0E27               	movlw	39
 22240  00CC98  6F3F               	movwf	(_gblSenseData+12)& (0+255),b
 22241                           
 22242                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 22243  00CC9A  0E00               	movlw	0
 22244  00CC9C  6F40               	movwf	(_gblSenseData+13)& (0+255),b
 22245  00CC9E                     l712:
 22246                           
 22247                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 22248  00CC9E  0E02               	movlw	2
 22249  00CCA0  D0A6               	goto	L44
 22250  00CCA2                     l711:
 22251                           
 22252                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 22253                           
 22254                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 22255  00CCA2  0100               	movlb	0	; () banked
 22256  00CCA4  51F7               	movf	_USBMSDOutHandle& (0+255),w,b
 22257  00CCA6  11F8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22258  00CCA8  B4D8               	btfsc	status,2,c
 22259  00CCAA  D006               	goto	l714
 22260                           
 22261                           ; BSR set to: 0
 22262  00CCAC  C0F7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22263  00CCB0  C0F8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22264  00CCB4  BEDF               	btfsc	indf2,7,c
 22265  00CCB6  D0AE               	goto	l703
 22266  00CCB8                     l714:
 22267                           
 22268                           ; BSR set to: 0
 22269                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 22270                           
 22271                           ; BSR set to: 0
 22272  00CCB8  EE20 F001          	lfsr	2,1
 22273  00CCBC  51F7               	movf	_USBMSDOutHandle& (0+255),w,b
 22274  00CCBE  26D9               	addwf	fsr2l,f,c
 22275  00CCC0  51F8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 22276  00CCC2  22DA               	addwfc	fsr2h,f,c
 22277  00CCC4  50DF               	movf	indf2,w,c
 22278  00CCC6  6F71               	movwf	??_MSDWriteHandler& (0+255),b
 22279  00CCC8  C071  F072         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 22280  00CCCC  6B73               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 22281  00CCCE  6B74               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 22282  00CCD0  6B75               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 22283  00CCD2  5172               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 22284  00CCD4  0101               	movlb	1	; () banked
 22285  00CCD6  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 22286  00CCD8  0100               	movlb	0	; () banked
 22287  00CCDA  5173               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 22288  00CCDC  0101               	movlb	1	; () banked
 22289  00CCDE  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 22290  00CCE0  0100               	movlb	0	; () banked
 22291  00CCE2  5174               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 22292  00CCE4  0101               	movlb	1	; () banked
 22293  00CCE6  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 22294  00CCE8  0100               	movlb	0	; () banked
 22295  00CCEA  5175               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 22296  00CCEC  0101               	movlb	1	; () banked
 22297  00CCEE  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 22298                           
 22299                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 22300  00CCF0  0100               	movlb	0	; () banked
 22301  00CCF2  EE20 F001          	lfsr	2,1
 22302  00CCF6  51F7               	movf	_USBMSDOutHandle& (0+255),w,b
 22303  00CCF8  26D9               	addwf	fsr2l,f,c
 22304  00CCFA  51F8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 22305  00CCFC  22DA               	addwfc	fsr2h,f,c
 22306  00CCFE  50DF               	movf	indf2,w,c
 22307  00CD00  6F71               	movwf	??_MSDWriteHandler& (0+255),b
 22308  00CD02  C071  F072         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 22309  00CD06  6B73               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 22310  00CD08  6B74               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 22311  00CD0A  6B75               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 22312  00CD0C  5172               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 22313  00CD0E  010D               	movlb	13	; () banked
 22314  00CD10  5F88               	subwf	136,f,b	;volatile
 22315  00CD12  0100               	movlb	0	; () banked
 22316  00CD14  5173               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 22317  00CD16  010D               	movlb	13	; () banked
 22318  00CD18  5B89               	subwfb	137,f,b	;volatile
 22319  00CD1A  0100               	movlb	0	; () banked
 22320  00CD1C  5174               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 22321  00CD1E  010D               	movlb	13	; () banked
 22322  00CD20  5B8A               	subwfb	138,f,b	;volatile
 22323  00CD22  0100               	movlb	0	; () banked
 22324  00CD24  5175               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 22325  00CD26  010D               	movlb	13	; () banked
 22326  00CD28  5B8B               	subwfb	139,f,b	;volatile
 22327                           
 22328                           ; BSR set to: 13
 22329                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 22330  00CD2A  0E40               	movlw	64
 22331  00CD2C  0101               	movlb	1	; () banked
 22332  00CD2E  2779               	addwf	_ptrNextData& (0+255),f,b
 22333  00CD30  0E00               	movlw	0
 22334  00CD32  237A               	addwfc	(_ptrNextData+1)& (0+255),f,b
 22335                           
 22336                           ; BSR set to: 1
 22337                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 22338  00CD34  0E03               	movlw	3
 22339  00CD36  D05B               	goto	L44
 22340  00CD38                     
 22341                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 22342                           
 22343                           ; BSR set to: 1
 22344  00CD38  010D               	movlb	13	; () banked
 22345  00CD3A  518C               	movf	140,w,b	;volatile
 22346  00CD3C  A4D8               	btfss	status,2,c
 22347  00CD3E  D040               	goto	l719
 22348                           
 22349                           ; BSR set to: 13
 22350                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 22351  00CD40  C1A5  F060         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 22352  00CD44  C1A6  F061         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 22353  00CD48  C15B  F062         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 22354  00CD4C  C15C  F063         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 22355  00CD50  C15D  F064         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 22356  00CD54  C15E  F065         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 22357  00CD58  0E00               	movlw	0
 22358  00CD5A  0100               	movlb	0	; () banked
 22359  00CD5C  6F66               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 22360  00CD5E  0E06               	movlw	6
 22361  00CD60  6F67               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 22362  00CD62  0101               	movlb	1	; () banked
 22363  00CD64  515B               	movf	_LBA& (0+255),w,b
 22364  00CD66  115C               	iorwf	(_LBA+1)& (0+255),w,b
 22365  00CD68  115D               	iorwf	(_LBA+2)& (0+255),w,b
 22366  00CD6A  115E               	iorwf	(_LBA+3)& (0+255),w,b
 22367  00CD6C  A4D8               	btfss	status,2,c
 22368  00CD6E  D002               	goto	u16910
 22369  00CD70  0E01               	movlw	1
 22370  00CD72  D001               	goto	u16920
 22371  00CD74                     u16910:
 22372  00CD74  0E00               	movlw	0
 22373  00CD76                     u16920:
 22374  00CD76  0100               	movlb	0	; () banked
 22375  00CD78  6F68               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 22376  00CD7A  EE21  F0A2         	lfsr	2,_LUN+18
 22377  00CD7E  D801               	call	u16938
 22378  00CD80  D00A               	goto	u16939
 22379  00CD82                     u16938:
 22380  00CD82  0005               	push	
 22381  00CD84  6EFA               	movwf	pclath,c
 22382  00CD86  50DE               	movf	postinc2,w,c
 22383  00CD88  6EFD               	movwf	tosl,c
 22384  00CD8A  50DE               	movf	postinc2,w,c
 22385  00CD8C  6EFE               	movwf	tosh,c
 22386  00CD8E  50DE               	movf	postinc2,w,c
 22387  00CD90  6EFF               	movwf	tosu,c
 22388  00CD92  50FA               	movf	pclath,w,c
 22389  00CD94  0012               	return		;indir
 22390  00CD96                     u16939:
 22391  00CD96  06E8               	decf	wreg,f,c
 22392  00CD98  B4D8               	btfsc	status,2,c
 22393  00CD9A  D012               	goto	l719
 22394                           
 22395                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 22396  00CD9C  0E64               	movlw	100
 22397  00CD9E  0101               	movlb	1	; () banked
 22398  00CDA0  6181               	cpfslt	_MSDRetryAttempt& (0+255),b
 22399  00CDA2  D002               	goto	l718
 22400                           
 22401                           ; BSR set to: 1
 22402                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 22403  00CDA4  2B81               	incf	_MSDRetryAttempt& (0+255),f,b
 22404                           
 22405                           ;usb_device_msd.c: 1314: break;
 22406  00CDA6  D036               	goto	l703
 22407  00CDA8                     l718:
 22408                           
 22409                           ; BSR set to: 1
 22410                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 22411                           
 22412                           ; BSR set to: 1
 22413  00CDA8  0E01               	movlw	1
 22414  00CDAA  010D               	movlb	13	; () banked
 22415  00CDAC  6F8C               	movwf	140,b	;volatile
 22416                           
 22417                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 22418  00CDAE  0101               	movlb	1	; () banked
 22419  00CDB0  5135               	movf	(_gblSenseData+2)& (0+255),w,b
 22420  00CDB2  0BF0               	andlw	-16
 22421  00CDB4  0903               	iorlw	3
 22422  00CDB6  6F35               	movwf	(_gblSenseData+2)& (0+255),b
 22423                           
 22424                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 22425  00CDB8  0E00               	movlw	0
 22426  00CDBA  6F3F               	movwf	(_gblSenseData+12)& (0+255),b
 22427                           
 22428                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 22429  00CDBC  0E00               	movlw	0
 22430  00CDBE  6F40               	movwf	(_gblSenseData+13)& (0+255),b
 22431  00CDC0                     l719:
 22432                           
 22433                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 22434                           
 22435                           ; BSR set to: 1
 22436                           
 22437                           ; BSR set to: 1
 22438                           
 22439                           ; BSR set to: 1
 22440  00CDC0  0E01               	movlw	1
 22441  00CDC2  0101               	movlb	1	; () banked
 22442  00CDC4  275B               	addwf	_LBA& (0+255),f,b
 22443  00CDC6  0E00               	movlw	0
 22444  00CDC8  235C               	addwfc	(_LBA+1)& (0+255),f,b
 22445  00CDCA  235D               	addwfc	(_LBA+2)& (0+255),f,b
 22446  00CDCC  235E               	addwfc	(_LBA+3)& (0+255),f,b
 22447                           
 22448                           ; BSR set to: 1
 22449                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 22450  00CDCE  0100               	movlb	0	; () banked
 22451  00CDD0  07F3               	decf	_TransferLength& (0+255),f,b
 22452  00CDD2  A0D8               	btfss	status,0,c
 22453  00CDD4  07F4               	decf	(_TransferLength+1)& (0+255),f,b
 22454                           
 22455                           ; BSR set to: 0
 22456                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 22457  00CDD6  0E01               	movlw	1
 22458  00CDD8  D00A               	goto	L44
 22459  00CDDA                     
 22460                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 22461                           
 22462                           ; BSR set to: 0
 22463  00CDDA  0E02               	movlw	2
 22464  00CDDC  010D               	movlb	13	; () banked
 22465  00CDDE  6F8C               	movwf	140,b	;volatile
 22466                           
 22467                           ; BSR set to: 13
 22468                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 22469  00CDE0  0E00               	movlw	0
 22470  00CDE2  0100               	movlb	0	; () banked
 22471  00CDE4  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 22472  00CDE6  0E02               	movlw	2
 22473  00CDE8  EC1A  F079         	call	_USBStallEndpoint
 22474  00CDEC                     l17250:
 22475                           
 22476                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 22477  00CDEC  0E00               	movlw	0
 22478  00CDEE                     L44:
 22479  00CDEE  6E21               	movwf	_MSDWriteState,c
 22480                           
 22481                           ;usb_device_msd.c: 1345: }
 22482                           
 22483                           ;usb_device_msd.c: 1344: break;
 22484  00CDF0  D011               	goto	l703
 22485  00CDF2                     l700:
 22486  00CDF2  5021               	movf	_MSDWriteState,w,c
 22487                           
 22488                           ; Switch size 1, requested type "space"
 22489                           ; Number of cases is 5, Range of values is 0 to 4
 22490                           ; switch strategies available:
 22491                           ; Name         Instructions Cycles
 22492                           ; simple_byte           16     9 (average)
 22493                           ;	Chosen strategy is simple_byte
 22494  00CDF4  0A00               	xorlw	0	; case 0
 22495  00CDF6  B4D8               	btfsc	status,2,c
 22496  00CDF8  D6A2               	goto	l701
 22497  00CDFA  0A01               	xorlw	1	; case 1
 22498  00CDFC  B4D8               	btfsc	status,2,c
 22499  00CDFE  D6F5               	goto	l706
 22500  00CE00  0A03               	xorlw	3	; case 2
 22501  00CE02  B4D8               	btfsc	status,2,c
 22502  00CE04  D799               	goto	l715
 22503  00CE06  0A01               	xorlw	1	; case 3
 22504  00CE08  B4D8               	btfsc	status,2,c
 22505  00CE0A  D704               	goto	l708
 22506  00CE0C  0A07               	xorlw	7	; case 4
 22507  00CE0E  B4D8               	btfsc	status,2,c
 22508  00CE10  D748               	goto	l711
 22509  00CE12  D7E3               	goto	l720
 22510  00CE14                     l703:
 22511                           
 22512                           ;usb_device_msd.c: 1347: return MSDWriteState;
 22513  00CE14  5021               	movf	_MSDWriteState,w,c
 22514  00CE16  0012               	return	
 22515  00CE18                     __end_of_MSDWriteHandler:
 22516                           	opt stack 0
 22517                           tosu	equ	0xFFF
 22518                           tosh	equ	0xFFE
 22519                           tosl	equ	0xFFD
 22520                           pclath	equ	0xFFA
 22521                           tblptru	equ	0xFF8
 22522                           tblptrh	equ	0xFF7
 22523                           tblptrl	equ	0xFF6
 22524                           tablat	equ	0xFF5
 22525                           prodh	equ	0xFF4
 22526                           prodl	equ	0xFF3
 22527                           intcon	equ	0xFF2
 22528                           postinc0	equ	0xFEE
 22529                           wreg	equ	0xFE8
 22530                           indf1	equ	0xFE7
 22531                           postdec1	equ	0xFE5
 22532                           plusw1	equ	0xFE3
 22533                           fsr1h	equ	0xFE2
 22534                           fsr1l	equ	0xFE1
 22535                           indf2	equ	0xFDF
 22536                           postinc2	equ	0xFDE
 22537                           postdec2	equ	0xFDD
 22538                           plusw2	equ	0xFDB
 22539                           fsr2h	equ	0xFDA
 22540                           fsr2l	equ	0xFD9
 22541                           status	equ	0xFD8
 22542                           
 22543 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 22544 ;; Defined at:
 22545 ;;		line 34 in file "external_flash.c"
 22546 ;; Parameters:    Size  Location     Type
 22547 ;;  config          2    0[BANK0 ] PTR void 
 22548 ;;		 -> NULL(0), 
 22549 ;; Auto vars:     Size  Location     Type
 22550 ;;		None
 22551 ;; Return value:  Size  Location     Type
 22552 ;;                  1    wreg      unsigned char 
 22553 ;; Registers used:
 22554 ;;		wreg
 22555 ;; Tracked objects:
 22556 ;;		On entry : 0/0
 22557 ;;		On exit  : 0/0
 22558 ;;		Unchanged: 0/0
 22559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22560 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22563 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22564 ;;Total ram usage:        2 bytes
 22565 ;; Hardware stack levels used:    1
 22566 ;; Hardware stack levels required when called:   10
 22567 ;; This function calls:
 22568 ;;		Nothing
 22569 ;; This function is called by:
 22570 ;;		_MSDWriteHandler
 22571 ;;		_MSDProcessCommandMediaPresent
 22572 ;; This function uses a non-reentrant model
 22573 ;;
 22574                           
 22575                           	psect	text64
 22576  01237C                     __ptext64:
 22577                           	opt stack 0
 22578  01237C                     _ExternalFlash_WriteProtectStateGet:
 22579                           	opt stack 15
 22580                           
 22581                           ;external_flash.c: 37: return 0;
 22582                           
 22583                           ;incstack = 0
 22584  01237C  0E00               	movlw	0
 22585  01237E  0012               	return	
 22586  012380                     __end_of_ExternalFlash_WriteProtectStateGet:
 22587                           	opt stack 0
 22588                           tosu	equ	0xFFF
 22589                           tosh	equ	0xFFE
 22590                           tosl	equ	0xFFD
 22591                           pclath	equ	0xFFA
 22592                           tblptru	equ	0xFF8
 22593                           tblptrh	equ	0xFF7
 22594                           tblptrl	equ	0xFF6
 22595                           tablat	equ	0xFF5
 22596                           prodh	equ	0xFF4
 22597                           prodl	equ	0xFF3
 22598                           intcon	equ	0xFF2
 22599                           postinc0	equ	0xFEE
 22600                           wreg	equ	0xFE8
 22601                           indf1	equ	0xFE7
 22602                           postdec1	equ	0xFE5
 22603                           plusw1	equ	0xFE3
 22604                           fsr1h	equ	0xFE2
 22605                           fsr1l	equ	0xFE1
 22606                           indf2	equ	0xFDF
 22607                           postinc2	equ	0xFDE
 22608                           postdec2	equ	0xFDD
 22609                           plusw2	equ	0xFDB
 22610                           fsr2h	equ	0xFDA
 22611                           fsr2l	equ	0xFD9
 22612                           status	equ	0xFD8
 22613                           
 22614 ;; *************** function _ExternalFlash_SectorWrite *****************
 22615 ;; Defined at:
 22616 ;;		line 56 in file "external_flash.c"
 22617 ;; Parameters:    Size  Location     Type
 22618 ;;  config          2    0[BANK0 ] PTR void 
 22619 ;;		 -> NULL(0), 
 22620 ;;  sector_addr     4    2[BANK0 ] unsigned long 
 22621 ;;  buffer          2    6[BANK0 ] PTR unsigned char 
 22622 ;;		 -> msd_buffer(512), 
 22623 ;;  allowWriteTo    1    8[BANK0 ] unsigned char 
 22624 ;; Auto vars:     Size  Location     Type
 22625 ;;		None
 22626 ;; Return value:  Size  Location     Type
 22627 ;;                  1    wreg      unsigned char 
 22628 ;; Registers used:
 22629 ;;		wreg
 22630 ;; Tracked objects:
 22631 ;;		On entry : 0/0
 22632 ;;		On exit  : 0/0
 22633 ;;		Unchanged: 0/0
 22634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22635 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22638 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22639 ;;Total ram usage:        9 bytes
 22640 ;; Hardware stack levels used:    1
 22641 ;; Hardware stack levels required when called:   10
 22642 ;; This function calls:
 22643 ;;		Nothing
 22644 ;; This function is called by:
 22645 ;;		_MSDWriteHandler
 22646 ;; This function uses a non-reentrant model
 22647 ;;
 22648                           
 22649                           	psect	text65
 22650  012380                     __ptext65:
 22651                           	opt stack 0
 22652  012380                     _ExternalFlash_SectorWrite:
 22653                           	opt stack 15
 22654                           
 22655                           ;external_flash.c: 69: return 1;
 22656                           
 22657                           ;incstack = 0
 22658  012380  0E01               	movlw	1
 22659  012382  0012               	return	
 22660  012384                     __end_of_ExternalFlash_SectorWrite:
 22661                           	opt stack 0
 22662                           tosu	equ	0xFFF
 22663                           tosh	equ	0xFFE
 22664                           tosl	equ	0xFFD
 22665                           pclath	equ	0xFFA
 22666                           tblptru	equ	0xFF8
 22667                           tblptrh	equ	0xFF7
 22668                           tblptrl	equ	0xFF6
 22669                           tablat	equ	0xFF5
 22670                           prodh	equ	0xFF4
 22671                           prodl	equ	0xFF3
 22672                           intcon	equ	0xFF2
 22673                           postinc0	equ	0xFEE
 22674                           wreg	equ	0xFE8
 22675                           indf1	equ	0xFE7
 22676                           postdec1	equ	0xFE5
 22677                           plusw1	equ	0xFE3
 22678                           fsr1h	equ	0xFE2
 22679                           fsr1l	equ	0xFE1
 22680                           indf2	equ	0xFDF
 22681                           postinc2	equ	0xFDE
 22682                           postdec2	equ	0xFDD
 22683                           plusw2	equ	0xFDB
 22684                           fsr2h	equ	0xFDA
 22685                           fsr2l	equ	0xFD9
 22686                           status	equ	0xFD8
 22687                           
 22688 ;; *************** function _MSDReadHandler *****************
 22689 ;; Defined at:
 22690 ;;		line 1038 in file "usb_device_msd.c"
 22691 ;; Parameters:    Size  Location     Type
 22692 ;;		None
 22693 ;; Auto vars:     Size  Location     Type
 22694 ;;		None
 22695 ;; Return value:  Size  Location     Type
 22696 ;;                  1    wreg      unsigned char 
 22697 ;; Registers used:
 22698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 22699 ;; Tracked objects:
 22700 ;;		On entry : 0/0
 22701 ;;		On exit  : 0/0
 22702 ;;		Unchanged: 0/0
 22703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22706 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22707 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22708 ;;Total ram usage:        4 bytes
 22709 ;; Hardware stack levels used:    1
 22710 ;; Hardware stack levels required when called:   16
 22711 ;; This function calls:
 22712 ;;		_ExternalFlash_SectorRead
 22713 ;;		_MSDCheckForErrorCases
 22714 ;;		_USBStallEndpoint
 22715 ;;		_USBTransferOnePacket
 22716 ;; This function is called by:
 22717 ;;		_MSDProcessCommandMediaPresent
 22718 ;; This function uses a non-reentrant model
 22719 ;;
 22720                           
 22721                           	psect	text66
 22722  00DE4E                     __ptext66:
 22723                           	opt stack 0
 22724  00DE4E                     _MSDReadHandler:
 22725                           	opt stack 10
 22726                           
 22727                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 22728                           
 22729                           ;incstack = 0
 22730  00DE4E  D0DC               	goto	l681
 22731  00DE50                     l682:
 22732                           
 22733                           ; BSR set to: 1
 22734                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 22735  00DE50  C111  F15E         	movff	_gblCBW+17,_LBA+3
 22736                           
 22737                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 22738  00DE54  C112  F15D         	movff	_gblCBW+18,_LBA+2
 22739                           
 22740                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 22741  00DE58  C113  F15C         	movff	_gblCBW+19,_LBA+1
 22742                           
 22743                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 22744  00DE5C  C114  F15B         	movff	_gblCBW+20,_LBA
 22745                           
 22746                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 22747  00DE60  C116  F0F4         	movff	_gblCBW+22,_TransferLength+1
 22748                           
 22749                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 22750  00DE64  C117  F0F3         	movff	_gblCBW+23,_TransferLength
 22751                           
 22752                           ; BSR set to: 1
 22753                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 22754  00DE68  0100               	movlb	0	; () banked
 22755  00DE6A  51F3               	movf	_TransferLength& (0+255),w,b
 22756  00DE6C  6F95               	movwf	??_MSDReadHandler& (0+255),b
 22757  00DE6E  51F4               	movf	(_TransferLength+1)& (0+255),w,b
 22758  00DE70  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 22759  00DE72  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 22760  00DE74  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 22761  00DE76  0E09               	movlw	9
 22762  00DE78                     u16675:
 22763  00DE78  90D8               	bcf	status,0,c
 22764  00DE7A  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 22765  00DE7C  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 22766  00DE7E  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 22767  00DE80  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 22768  00DE82  2EE8               	decfsz	wreg,f,c
 22769  00DE84  D7F9               	goto	u16675
 22770  00DE86  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 22771  00DE8A  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 22772  00DE8E  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 22773  00DE92  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 22774  00DE96  EC26  F07B         	call	_MSDCheckForErrorCases	;wreg free
 22775  00DE9A  0900               	iorlw	0
 22776  00DE9C  A4D8               	btfss	status,2,c
 22777  00DE9E  D0C6               	goto	l684
 22778                           
 22779                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 22780                           
 22781                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 22782  00DEA0  0E01               	movlw	1
 22783  00DEA2  0101               	movlb	1	; () banked
 22784  00DEA4  6F82               	movwf	_MSDReadState& (0+255),b
 22785  00DEA6                     
 22786                           ; BSR set to: 1
 22787                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 22788                           
 22789                           ; BSR set to: 1
 22790  00DEA6  0100               	movlb	0	; () banked
 22791  00DEA8  51F3               	movf	_TransferLength& (0+255),w,b
 22792  00DEAA  11F4               	iorwf	(_TransferLength+1)& (0+255),w,b
 22793  00DEAC  B4D8               	btfsc	status,2,c
 22794  00DEAE  D0A8               	goto	l17162
 22795                           
 22796                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 22797                           
 22798                           ; BSR set to: 1
 22799                           
 22800                           ;usb_device_msd.c: 1067: break;
 22801                           
 22802                           ; BSR set to: 0
 22803                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 22804  00DEB0  0100               	movlb	0	; () banked
 22805  00DEB2  07F3               	decf	_TransferLength& (0+255),f,b
 22806  00DEB4  A0D8               	btfss	status,0,c
 22807  00DEB6  07F4               	decf	(_TransferLength+1)& (0+255),f,b
 22808                           
 22809                           ; BSR set to: 0
 22810                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 22811  00DEB8  0E02               	movlw	2
 22812  00DEBA  0101               	movlb	1	; () banked
 22813  00DEBC  6F82               	movwf	_MSDReadState& (0+255),b
 22814  00DEBE                     
 22815                           ; BSR set to: 1
 22816                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 22817                           
 22818                           ; BSR set to: 1
 22819  00DEBE  0100               	movlb	0	; () banked
 22820  00DEC0  51F5               	movf	_USBMSDInHandle& (0+255),w,b
 22821  00DEC2  11F6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 22822  00DEC4  B4D8               	btfsc	status,2,c
 22823  00DEC6  D006               	goto	l688
 22824                           
 22825                           ; BSR set to: 0
 22826  00DEC8  C0F5  FFD9         	movff	_USBMSDInHandle,fsr2l
 22827  00DECC  C0F6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 22828  00DED0  BEDF               	btfsc	indf2,7,c
 22829  00DED2  D0AC               	goto	l684
 22830  00DED4                     l688:
 22831                           
 22832                           ; BSR set to: 0
 22833                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 22834                           
 22835                           ; BSR set to: 0
 22836  00DED4  C1A5  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 22837  00DED8  C1A6  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 22838  00DEDC  C15B  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 22839  00DEE0  C15C  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 22840  00DEE4  C15D  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 22841  00DEE8  C15E  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 22842  00DEEC  0E00               	movlw	0
 22843  00DEEE  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 22844  00DEF0  0E06               	movlw	6
 22845  00DEF2  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 22846  00DEF4  EE21  F09C         	lfsr	2,_LUN+12
 22847  00DEF8  D801               	call	u16728
 22848  00DEFA  D00A               	goto	u16729
 22849  00DEFC                     u16728:
 22850  00DEFC  0005               	push	
 22851  00DEFE  6EFA               	movwf	pclath,c
 22852  00DF00  50DE               	movf	postinc2,w,c
 22853  00DF02  6EFD               	movwf	tosl,c
 22854  00DF04  50DE               	movf	postinc2,w,c
 22855  00DF06  6EFE               	movwf	tosh,c
 22856  00DF08  50DE               	movf	postinc2,w,c
 22857  00DF0A  6EFF               	movwf	tosu,c
 22858  00DF0C  50FA               	movf	pclath,w,c
 22859  00DF0E  0012               	return		;indir
 22860  00DF10                     u16729:
 22861  00DF10  06E8               	decf	wreg,f,c
 22862  00DF12  B4D8               	btfsc	status,2,c
 22863  00DF14  D019               	goto	l691
 22864                           
 22865                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 22866  00DF16  0E64               	movlw	100
 22867  00DF18  0101               	movlb	1	; () banked
 22868  00DF1A  6181               	cpfslt	_MSDRetryAttempt& (0+255),b
 22869  00DF1C  D002               	goto	l690
 22870                           
 22871                           ; BSR set to: 1
 22872                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 22873  00DF1E  2B81               	incf	_MSDRetryAttempt& (0+255),f,b
 22874                           
 22875                           ;usb_device_msd.c: 1088: break;
 22876  00DF20  D085               	goto	l684
 22877  00DF22                     l690:
 22878                           
 22879                           ; BSR set to: 1
 22880                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 22881                           
 22882                           ; BSR set to: 1
 22883  00DF22  0E02               	movlw	2
 22884  00DF24  010D               	movlb	13	; () banked
 22885  00DF26  6F8C               	movwf	140,b	;volatile
 22886                           
 22887                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 22888  00DF28  0101               	movlb	1	; () banked
 22889  00DF2A  5135               	movf	(_gblSenseData+2)& (0+255),w,b
 22890  00DF2C  0BF0               	andlw	-16
 22891  00DF2E  0903               	iorlw	3
 22892  00DF30  6F35               	movwf	(_gblSenseData+2)& (0+255),b
 22893                           
 22894                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 22895  00DF32  0E00               	movlw	0
 22896  00DF34  6F3F               	movwf	(_gblSenseData+12)& (0+255),b
 22897                           
 22898                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 22899  00DF36  0E00               	movlw	0
 22900  00DF38  6F40               	movwf	(_gblSenseData+13)& (0+255),b
 22901                           
 22902                           ; BSR set to: 1
 22903                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 22904  00DF3A  0E01               	movlw	1
 22905  00DF3C  0100               	movlb	0	; () banked
 22906  00DF3E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 22907  00DF40  0E02               	movlw	2
 22908  00DF42  EC1A  F079         	call	_USBStallEndpoint
 22909  00DF46  D05C               	goto	l17162
 22910  00DF48                     l691:
 22911                           
 22912                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 22913                           
 22914                           ; BSR set to: 1
 22915                           
 22916                           ; BSR set to: 1
 22917  00DF48  0E01               	movlw	1
 22918  00DF4A  0101               	movlb	1	; () banked
 22919  00DF4C  275B               	addwf	_LBA& (0+255),f,b
 22920  00DF4E  0E00               	movlw	0
 22921  00DF50  235C               	addwfc	(_LBA+1)& (0+255),f,b
 22922  00DF52  235D               	addwfc	(_LBA+2)& (0+255),f,b
 22923  00DF54  235E               	addwfc	(_LBA+3)& (0+255),f,b
 22924                           
 22925                           ; BSR set to: 1
 22926                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 22927  00DF56  0E00               	movlw	0
 22928  00DF58  010D               	movlb	13	; () banked
 22929  00DF5A  6F88               	movwf	136,b	;volatile
 22930  00DF5C  0E02               	movlw	2
 22931  00DF5E  6F89               	movwf	137,b	;volatile
 22932  00DF60  0E00               	movlw	0
 22933  00DF62  6F8A               	movwf	138,b	;volatile
 22934  00DF64  0E00               	movlw	0
 22935  00DF66  6F8B               	movwf	139,b	;volatile
 22936                           
 22937                           ; BSR set to: 13
 22938                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 22939  00DF68  0E00               	movlw	0
 22940  00DF6A  0101               	movlb	1	; () banked
 22941  00DF6C  6F79               	movwf	_ptrNextData& (0+255),b
 22942  00DF6E  0E06               	movlw	6
 22943  00DF70  6F7A               	movwf	(_ptrNextData+1)& (0+255),b
 22944                           
 22945                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 22946  00DF72  0E03               	movlw	3
 22947  00DF74  6F82               	movwf	_MSDReadState& (0+255),b
 22948  00DF76                     
 22949                           ; BSR set to: 1
 22950                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 22951                           
 22952                           ; BSR set to: 1
 22953  00DF76  010D               	movlb	13	; () banked
 22954  00DF78  5188               	movf	136,w,b	;volatile
 22955  00DF7A  1189               	iorwf	137,w,b	;volatile
 22956  00DF7C  118A               	iorwf	138,w,b	;volatile
 22957  00DF7E  118B               	iorwf	139,w,b	;volatile
 22958  00DF80  A4D8               	btfss	status,2,c
 22959  00DF82  D002               	goto	l693
 22960                           
 22961                           ; BSR set to: 13
 22962                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 22963  00DF84  0E01               	movlw	1
 22964  00DF86  D03D               	goto	L46
 22965  00DF88                     l693:
 22966                           
 22967                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 22968                           
 22969                           ; BSR set to: 1
 22970  00DF88  0E04               	movlw	4
 22971  00DF8A  0101               	movlb	1	; () banked
 22972  00DF8C  6F82               	movwf	_MSDReadState& (0+255),b
 22973  00DF8E                     
 22974                           ; BSR set to: 1
 22975                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 22976                           
 22977                           ; BSR set to: 1
 22978  00DF8E  0100               	movlb	0	; () banked
 22979  00DF90  51F5               	movf	_USBMSDInHandle& (0+255),w,b
 22980  00DF92  11F6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 22981  00DF94  B4D8               	btfsc	status,2,c
 22982  00DF96  D006               	goto	l695
 22983                           
 22984                           ; BSR set to: 0
 22985  00DF98  C0F5  FFD9         	movff	_USBMSDInHandle,fsr2l
 22986  00DF9C  C0F6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 22987  00DFA0  BEDF               	btfsc	indf2,7,c
 22988  00DFA2  D044               	goto	l684
 22989  00DFA4                     l695:
 22990                           
 22991                           ; BSR set to: 0
 22992                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 22993                           
 22994                           ; BSR set to: 0
 22995  00DFA4  0E01               	movlw	1
 22996  00DFA6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22997  00DFA8  C179  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 22998  00DFAC  C17A  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 22999  00DFB0  0E40               	movlw	64
 23000  00DFB2  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 23001  00DFB4  0E02               	movlw	2
 23002  00DFB6  EC9F  F079         	call	_USBTransferOnePacket
 23003  00DFBA  C060  F0F5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 23004  00DFBE  C061  F0F6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 23005                           
 23006                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 23007  00DFC2  0E03               	movlw	3
 23008  00DFC4  0101               	movlb	1	; () banked
 23009  00DFC6  6F82               	movwf	_MSDReadState& (0+255),b
 23010                           
 23011                           ; BSR set to: 1
 23012                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 23013  00DFC8  0E40               	movlw	64
 23014  00DFCA  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 23015  00DFCC  0E00               	movlw	0
 23016  00DFCE  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 23017  00DFD0  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 23018  00DFD2  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 23019                           
 23020                           ; BSR set to: 1
 23021                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 23022  00DFD4  0E40               	movlw	64
 23023  00DFD6  010D               	movlb	13	; () banked
 23024  00DFD8  5F88               	subwf	136,f,b	;volatile
 23025  00DFDA  0E00               	movlw	0
 23026  00DFDC  5B89               	subwfb	137,f,b	;volatile
 23027  00DFDE  5B8A               	subwfb	138,f,b	;volatile
 23028  00DFE0  5B8B               	subwfb	139,f,b	;volatile
 23029                           
 23030                           ; BSR set to: 13
 23031                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 23032  00DFE2  0E40               	movlw	64
 23033  00DFE4  0101               	movlb	1	; () banked
 23034  00DFE6  2779               	addwf	_ptrNextData& (0+255),f,b
 23035  00DFE8  0E00               	movlw	0
 23036  00DFEA  237A               	addwfc	(_ptrNextData+1)& (0+255),f,b
 23037                           
 23038                           ;usb_device_msd.c: 1149: break;
 23039  00DFEC  D01F               	goto	l684
 23040  00DFEE                     
 23041                           ; BSR set to: 1
 23042                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 23043                           
 23044                           ; BSR set to: 1
 23045  00DFEE  0E02               	movlw	2
 23046  00DFF0  010D               	movlb	13	; () banked
 23047  00DFF2  6F8C               	movwf	140,b	;volatile
 23048                           
 23049                           ; BSR set to: 13
 23050                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 23051  00DFF4  0E01               	movlw	1
 23052  00DFF6  0100               	movlb	0	; () banked
 23053  00DFF8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 23054  00DFFA  0E02               	movlw	2
 23055  00DFFC  EC1A  F079         	call	_USBStallEndpoint
 23056  00E000                     l17162:
 23057                           
 23058                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 23059  00E000  0E00               	movlw	0
 23060  00E002                     L46:
 23061  00E002  0101               	movlb	1	; () banked
 23062  00E004  6F82               	movwf	_MSDReadState& (0+255),b
 23063                           
 23064                           ; BSR set to: 1
 23065                           ;usb_device_msd.c: 1159: }
 23066                           
 23067                           ;usb_device_msd.c: 1158: break;
 23068  00E006  D012               	goto	l684
 23069  00E008                     l681:
 23070                           
 23071                           ; BSR set to: 1
 23072  00E008  0101               	movlb	1	; () banked
 23073  00E00A  5182               	movf	_MSDReadState& (0+255),w,b
 23074                           
 23075                           ; Switch size 1, requested type "space"
 23076                           ; Number of cases is 5, Range of values is 0 to 4
 23077                           ; switch strategies available:
 23078                           ; Name         Instructions Cycles
 23079                           ; simple_byte           16     9 (average)
 23080                           ;	Chosen strategy is simple_byte
 23081  00E00C  0A00               	xorlw	0	; case 0
 23082  00E00E  B4D8               	btfsc	status,2,c
 23083  00E010  D71F               	goto	l682
 23084  00E012  0A01               	xorlw	1	; case 1
 23085  00E014  B4D8               	btfsc	status,2,c
 23086  00E016  D747               	goto	l685
 23087  00E018  0A03               	xorlw	3	; case 2
 23088  00E01A  B4D8               	btfsc	status,2,c
 23089  00E01C  D750               	goto	l687
 23090  00E01E  0A01               	xorlw	1	; case 3
 23091  00E020  B4D8               	btfsc	status,2,c
 23092  00E022  D7A9               	goto	l692
 23093  00E024  0A07               	xorlw	7	; case 4
 23094  00E026  B4D8               	btfsc	status,2,c
 23095  00E028  D7B2               	goto	l694
 23096  00E02A  D7E1               	goto	l696
 23097  00E02C                     l684:
 23098                           
 23099                           ;usb_device_msd.c: 1161: return MSDReadState;
 23100                           
 23101                           ; BSR set to: 1
 23102  00E02C  0101               	movlb	1	; () banked
 23103  00E02E  5182               	movf	_MSDReadState& (0+255),w,b
 23104  00E030  0012               	return	
 23105  00E032                     __end_of_MSDReadHandler:
 23106                           	opt stack 0
 23107                           tosu	equ	0xFFF
 23108                           tosh	equ	0xFFE
 23109                           tosl	equ	0xFFD
 23110                           pclath	equ	0xFFA
 23111                           tblptru	equ	0xFF8
 23112                           tblptrh	equ	0xFF7
 23113                           tblptrl	equ	0xFF6
 23114                           tablat	equ	0xFF5
 23115                           prodh	equ	0xFF4
 23116                           prodl	equ	0xFF3
 23117                           intcon	equ	0xFF2
 23118                           postinc0	equ	0xFEE
 23119                           wreg	equ	0xFE8
 23120                           indf1	equ	0xFE7
 23121                           postdec1	equ	0xFE5
 23122                           plusw1	equ	0xFE3
 23123                           fsr1h	equ	0xFE2
 23124                           fsr1l	equ	0xFE1
 23125                           indf2	equ	0xFDF
 23126                           postinc2	equ	0xFDE
 23127                           postdec2	equ	0xFDD
 23128                           plusw2	equ	0xFDB
 23129                           fsr2h	equ	0xFDA
 23130                           fsr2l	equ	0xFD9
 23131                           status	equ	0xFD8
 23132                           
 23133 ;; *************** function _MSDCheckForErrorCases *****************
 23134 ;; Defined at:
 23135 ;;		line 1434 in file "usb_device_msd.c"
 23136 ;; Parameters:    Size  Location     Type
 23137 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 23138 ;; Auto vars:     Size  Location     Type
 23139 ;;  MSDErrorCase    1   16[BANK0 ] unsigned char 
 23140 ;;  DeviceNoData    1   15[BANK0 ] unsigned char 
 23141 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 23142 ;; Return value:  Size  Location     Type
 23143 ;;                  1    wreg      unsigned char 
 23144 ;; Registers used:
 23145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23146 ;; Tracked objects:
 23147 ;;		On entry : 0/0
 23148 ;;		On exit  : 0/0
 23149 ;;		Unchanged: 0/0
 23150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23151 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23152 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23154 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23155 ;;Total ram usage:        7 bytes
 23156 ;; Hardware stack levels used:    1
 23157 ;; Hardware stack levels required when called:   12
 23158 ;; This function calls:
 23159 ;;		_MSDErrorHandler
 23160 ;; This function is called by:
 23161 ;;		_MSDProcessCommandMediaPresent
 23162 ;;		_MSDReadHandler
 23163 ;;		_MSDWriteHandler
 23164 ;; This function uses a non-reentrant model
 23165 ;;
 23166                           
 23167                           	psect	text67
 23168  00F64C                     __ptext67:
 23169                           	opt stack 0
 23170  00F64C                     _MSDCheckForErrorCases:
 23171                           	opt stack 13
 23172                           
 23173                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 23174                           
 23175                           ; BSR set to: 1
 23176                           ;incstack = 0
 23177  00F64C  0100               	movlb	0	; () banked
 23178  00F64E  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 23179  00F650  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 23180  00F652  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 23181  00F654  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 23182  00F656  A4D8               	btfss	status,2,c
 23183  00F658  D002               	goto	l726
 23184                           
 23185                           ; BSR set to: 0
 23186                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 23187  00F65A  0E01               	movlw	1
 23188  00F65C  D001               	goto	L47
 23189  00F65E                     l726:
 23190                           
 23191                           ; BSR set to: 0
 23192                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 23193                           
 23194                           ; BSR set to: 0
 23195  00F65E  0E00               	movlw	0
 23196  00F660                     L47:
 23197  00F660  6F6F               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 23198                           
 23199                           ; BSR set to: 0
 23200                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 23201                           
 23202                           ; BSR set to: 0
 23203  00F662  05FD               	decf	_MSDHostNoData& (0+255),w,b
 23204  00F664  A4D8               	btfss	status,2,c
 23205  00F666  D005               	goto	l728
 23206                           
 23207                           ; BSR set to: 0
 23208  00F668  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 23209  00F66A  A4D8               	btfss	status,2,c
 23210  00F66C  D002               	goto	l728
 23211                           
 23212                           ; BSR set to: 0
 23213                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 23214  00F66E  0E00               	movlw	0
 23215                           
 23216                           ; BSR set to: 0
 23217  00F670  0012               	return	
 23218  00F672                     l728:
 23219                           
 23220                           ; BSR set to: 0
 23221                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 23222                           
 23223                           ; BSR set to: 0
 23224  00F672  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 23225  00F674  0101               	movlb	1	; () banked
 23226  00F676  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 23227  00F678  E120               	bnz	l16908
 23228  00F67A  0100               	movlb	0	; () banked
 23229  00F67C  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 23230  00F67E  0101               	movlb	1	; () banked
 23231  00F680  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 23232  00F682  E11B               	bnz	l16908
 23233  00F684  0100               	movlb	0	; () banked
 23234  00F686  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 23235  00F688  0101               	movlb	1	; () banked
 23236  00F68A  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 23237  00F68C  E116               	bnz	l16908
 23238  00F68E  0100               	movlb	0	; () banked
 23239  00F690  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 23240  00F692  0101               	movlb	1	; () banked
 23241  00F694  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 23242  00F696  A4D8               	btfss	status,2,c
 23243  00F698  D010               	goto	l734
 23244                           
 23245                           ; BSR set to: 1
 23246                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 23247  00F69A  0100               	movlb	0	; () banked
 23248  00F69C  05FF               	decf	_MSD_State& (0+255),w,b
 23249  00F69E  A4D8               	btfss	status,2,c
 23250  00F6A0  D006               	goto	l731
 23251                           
 23252                           ; BSR set to: 0
 23253                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 23254  00F6A2  0E2A               	movlw	42
 23255  00F6A4  19FE               	xorwf	_MSDCommandState& (0+255),w,b
 23256  00F6A6  B4D8               	btfsc	status,2,c
 23257  00F6A8  D008               	goto	l734
 23258                           
 23259                           ; BSR set to: 0
 23260                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 23261  00F6AA  0E00               	movlw	0
 23262                           
 23263                           ; BSR set to: 0
 23264  00F6AC  0012               	return	
 23265  00F6AE                     l731:
 23266                           
 23267                           ; BSR set to: 0
 23268                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 23269                           
 23270                           ; BSR set to: 0
 23271  00F6AE  0E2A               	movlw	42
 23272  00F6B0  19FE               	xorwf	_MSDCommandState& (0+255),w,b
 23273  00F6B2  A4D8               	btfss	status,2,c
 23274  00F6B4  D002               	goto	l734
 23275                           
 23276                           ; BSR set to: 0
 23277                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 23278  00F6B6  0E00               	movlw	0
 23279                           
 23280                           ; BSR set to: 0
 23281  00F6B8  0012               	return	
 23282  00F6BA                     l734:
 23283  00F6BA                     l16908:
 23284                           
 23285                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 23286  00F6BA  0101               	movlb	1	; () banked
 23287  00F6BC  5108               	movf	(_gblCBW+8)& (0+255),w,b
 23288  00F6BE  0100               	movlb	0	; () banked
 23289  00F6C0  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 23290  00F6C2  0101               	movlb	1	; () banked
 23291  00F6C4  5109               	movf	(_gblCBW+9)& (0+255),w,b
 23292  00F6C6  0100               	movlb	0	; () banked
 23293  00F6C8  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 23294  00F6CA  0101               	movlb	1	; () banked
 23295  00F6CC  510A               	movf	(_gblCBW+10)& (0+255),w,b
 23296  00F6CE  0100               	movlb	0	; () banked
 23297  00F6D0  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 23298  00F6D2  0101               	movlb	1	; () banked
 23299  00F6D4  510B               	movf	(_gblCBW+11)& (0+255),w,b
 23300  00F6D6  0100               	movlb	0	; () banked
 23301  00F6D8  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 23302  00F6DA  B0D8               	btfsc	status,0,c
 23303  00F6DC  D002               	goto	l735
 23304                           
 23305                           ; BSR set to: 0
 23306                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 23307  00F6DE  0E01               	movlw	1
 23308  00F6E0  D001               	goto	L48
 23309  00F6E2                     l735:
 23310                           
 23311                           ; BSR set to: 0
 23312                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 23313                           
 23314                           ; BSR set to: 0
 23315  00F6E2  0E00               	movlw	0
 23316  00F6E4                     L48:
 23317  00F6E4  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 23318                           
 23319                           ; BSR set to: 0
 23320                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 23321                           
 23322                           ; BSR set to: 0
 23323  00F6E6  0E02               	movlw	2
 23324  00F6E8  19FF               	xorwf	_MSD_State& (0+255),w,b
 23325  00F6EA  A4D8               	btfss	status,2,c
 23326  00F6EC  D014               	goto	l737
 23327                           
 23328                           ; BSR set to: 0
 23329                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 23330  00F6EE  0E2A               	movlw	42
 23331  00F6F0  19FE               	xorwf	_MSDCommandState& (0+255),w,b
 23332  00F6F2  B4D8               	btfsc	status,2,c
 23333  00F6F4  D005               	goto	l738
 23334                           
 23335                           ; BSR set to: 0
 23336  00F6F6  516F               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 23337  00F6F8  A4D8               	btfss	status,2,c
 23338  00F6FA  D002               	goto	l738
 23339  00F6FC                     u16430:
 23340                           
 23341                           ; BSR set to: 0
 23342                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 23343  00F6FC  0E05               	movlw	5
 23344  00F6FE  D01D               	goto	L51
 23345  00F700                     l738:
 23346                           
 23347                           ; BSR set to: 0
 23348                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 23349                           
 23350                           ; BSR set to: 0
 23351  00F700  05FD               	decf	_MSDHostNoData& (0+255),w,b
 23352  00F702  B4D8               	btfsc	status,2,c
 23353  00F704  D00F               	goto	u16480
 23354                           
 23355                           ; BSR set to: 0
 23356                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 23357                           
 23358                           ; BSR set to: 0
 23359                           
 23360                           ; BSR set to: 0
 23361                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 23362  00F706  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 23363  00F708  B4D8               	btfsc	status,2,c
 23364  00F70A  D003               	goto	u16460
 23365                           
 23366                           ; BSR set to: 0
 23367                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 23368                           
 23369                           ; BSR set to: 0
 23370                           
 23371                           ; BSR set to: 0
 23372                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 23373  00F70C  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 23374  00F70E  A4D8               	btfss	status,2,c
 23375  00F710  D7F5               	goto	u16430
 23376  00F712                     u16460:
 23377                           
 23378                           ; BSR set to: 0
 23379                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 23380  00F712  0E04               	movlw	4
 23381  00F714  D012               	goto	L51
 23382  00F716                     l737:
 23383                           
 23384                           ; BSR set to: 0
 23385                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 23386                           
 23387                           ; BSR set to: 0
 23388  00F716  0E2A               	movlw	42
 23389  00F718  19FE               	xorwf	_MSDCommandState& (0+255),w,b
 23390  00F71A  B4D8               	btfsc	status,2,c
 23391  00F71C  D00D               	goto	l753
 23392                           
 23393                           ; BSR set to: 0
 23394                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 23395                           
 23396                           ; BSR set to: 0
 23397                           
 23398                           ; BSR set to: 0
 23399                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 23400  00F71E  05FD               	decf	_MSDHostNoData& (0+255),w,b
 23401  00F720  A4D8               	btfss	status,2,c
 23402  00F722  D002               	goto	l749
 23403  00F724                     u16480:
 23404                           
 23405                           ; BSR set to: 0
 23406                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 23407  00F724  0E01               	movlw	1
 23408  00F726  D009               	goto	L51
 23409  00F728                     l749:
 23410                           
 23411                           ; BSR set to: 0
 23412                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 23413                           
 23414                           ; BSR set to: 0
 23415  00F728  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 23416  00F72A  B4D8               	btfsc	status,2,c
 23417  00F72C  D003               	goto	u16500
 23418                           
 23419                           ; BSR set to: 0
 23420                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 23421                           
 23422                           ; BSR set to: 0
 23423                           
 23424                           ; BSR set to: 0
 23425                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 23426  00F72E  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 23427  00F730  A4D8               	btfss	status,2,c
 23428  00F732  D002               	goto	l753
 23429  00F734                     u16500:
 23430                           
 23431                           ; BSR set to: 0
 23432                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 23433  00F734  0E02               	movlw	2
 23434  00F736  D001               	goto	L51
 23435  00F738                     l753:
 23436                           
 23437                           ; BSR set to: 0
 23438                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 23439                           
 23440                           ; BSR set to: 0
 23441  00F738  0E03               	movlw	3
 23442  00F73A                     L51:
 23443  00F73A  6F70               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 23444                           
 23445                           ; BSR set to: 0
 23446                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 23447                           
 23448                           ; BSR set to: 0
 23449                           
 23450                           ; BSR set to: 0
 23451                           
 23452                           ; BSR set to: 0
 23453                           
 23454                           ; BSR set to: 0
 23455                           
 23456                           ; BSR set to: 0
 23457  00F73C  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 23458  00F73E  EC70  F076         	call	_MSDErrorHandler
 23459                           
 23460                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 23461  00F742  0100               	movlb	0	; () banked
 23462  00F744  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 23463  00F746  0012               	return	
 23464  00F748                     __end_of_MSDCheckForErrorCases:
 23465                           	opt stack 0
 23466                           tosu	equ	0xFFF
 23467                           tosh	equ	0xFFE
 23468                           tosl	equ	0xFFD
 23469                           pclath	equ	0xFFA
 23470                           tblptru	equ	0xFF8
 23471                           tblptrh	equ	0xFF7
 23472                           tblptrl	equ	0xFF6
 23473                           tablat	equ	0xFF5
 23474                           prodh	equ	0xFF4
 23475                           prodl	equ	0xFF3
 23476                           intcon	equ	0xFF2
 23477                           postinc0	equ	0xFEE
 23478                           wreg	equ	0xFE8
 23479                           indf1	equ	0xFE7
 23480                           postdec1	equ	0xFE5
 23481                           plusw1	equ	0xFE3
 23482                           fsr1h	equ	0xFE2
 23483                           fsr1l	equ	0xFE1
 23484                           indf2	equ	0xFDF
 23485                           postinc2	equ	0xFDE
 23486                           postdec2	equ	0xFDD
 23487                           plusw2	equ	0xFDB
 23488                           fsr2h	equ	0xFDA
 23489                           fsr2l	equ	0xFD9
 23490                           status	equ	0xFD8
 23491                           
 23492 ;; *************** function _MSDErrorHandler *****************
 23493 ;; Defined at:
 23494 ;;		line 1577 in file "usb_device_msd.c"
 23495 ;; Parameters:    Size  Location     Type
 23496 ;;  ErrorCase       1    wreg     unsigned char 
 23497 ;; Auto vars:     Size  Location     Type
 23498 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 23499 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 23500 ;; Return value:  Size  Location     Type
 23501 ;;                  1    wreg      void 
 23502 ;; Registers used:
 23503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23504 ;; Tracked objects:
 23505 ;;		On entry : 0/0
 23506 ;;		On exit  : 0/0
 23507 ;;		Unchanged: 0/0
 23508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23510 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23512 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23513 ;;Total ram usage:        2 bytes
 23514 ;; Hardware stack levels used:    1
 23515 ;; Hardware stack levels required when called:   11
 23516 ;; This function calls:
 23517 ;;		_ResetSenseData
 23518 ;;		_USBStallEndpoint
 23519 ;; This function is called by:
 23520 ;;		_MSDProcessCommandMediaAbsent
 23521 ;;		_MSDProcessCommandMediaPresent
 23522 ;;		_MSDCheckForErrorCases
 23523 ;; This function uses a non-reentrant model
 23524 ;;
 23525                           
 23526                           	psect	text68
 23527  00ECE0                     __ptext68:
 23528                           	opt stack 0
 23529  00ECE0                     _MSDErrorHandler:
 23530                           	opt stack 13
 23531                           
 23532                           ; BSR set to: 0
 23533                           ;incstack = 0
 23534                           ;MSDErrorHandler@ErrorCase stored from wreg
 23535  00ECE0  0100               	movlb	0	; () banked
 23536  00ECE2  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 23537                           
 23538                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 23539  00ECE4  0100               	movlb	0	; () banked
 23540  00ECE6  51F5               	movf	_USBMSDInHandle& (0+255),w,b
 23541  00ECE8  11F6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 23542  00ECEA  B4D8               	btfsc	status,2,c
 23543  00ECEC  D006               	goto	u16230
 23544                           
 23545                           ; BSR set to: 0
 23546  00ECEE  C0F5  FFD9         	movff	_USBMSDInHandle,fsr2l
 23547  00ECF2  C0F6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 23548  00ECF6  BEDF               	btfsc	indf2,7,c
 23549  00ECF8  0012               	return	
 23550  00ECFA                     u16230:
 23551                           
 23552                           ; BSR set to: 0
 23553                           
 23554                           ; BSR set to: 0
 23555  00ECFA  51F7               	movf	_USBMSDOutHandle& (0+255),w,b
 23556  00ECFC  11F8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 23557  00ECFE  B4D8               	btfsc	status,2,c
 23558  00ED00  D006               	goto	l757
 23559                           
 23560                           ; BSR set to: 0
 23561  00ED02  C0F7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 23562  00ED06  C0F8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 23563  00ED0A  BEDF               	btfsc	indf2,7,c
 23564  00ED0C  0012               	return	
 23565  00ED0E                     l757:
 23566                           
 23567                           ; BSR set to: 0
 23568                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 23569  00ED0E  C0FF  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 23570                           
 23571                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 23572  00ED12  69FE               	setf	_MSDCommandState& (0+255),b
 23573                           
 23574                           ; BSR set to: 0
 23575                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 23576  00ED14  0E00               	movlw	0
 23577  00ED16  0101               	movlb	1	; () banked
 23578  00ED18  6F82               	movwf	_MSDReadState& (0+255),b
 23579                           
 23580                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 23581  00ED1A  0E00               	movlw	0
 23582  00ED1C  6E21               	movwf	_MSDWriteState,c
 23583                           
 23584                           ; BSR set to: 1
 23585                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 23586  00ED1E  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 23587  00ED22  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 23588  00ED26  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 23589  00ED2A  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 23590                           
 23591                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 23592  00ED2E  0E01               	movlw	1
 23593  00ED30  010D               	movlb	13	; () banked
 23594  00ED32  6F8C               	movwf	140,b	;volatile
 23595                           
 23596                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 23597  00ED34  0E03               	movlw	3
 23598  00ED36  0100               	movlb	0	; () banked
 23599  00ED38  6FFF               	movwf	_MSD_State& (0+255),b
 23600                           
 23601                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 23602  00ED3A  D04B               	goto	l763
 23603  00ED3C                     
 23604                           ; BSR set to: 0
 23605                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 23606                           
 23607                           ; BSR set to: 0
 23608  00ED3C  0E02               	movlw	2
 23609  00ED3E  010D               	movlb	13	; () banked
 23610  00ED40  6F8C               	movwf	140,b	;volatile
 23611                           
 23612                           ;usb_device_msd.c: 1607: break;
 23613  00ED42  0012               	return	
 23614  00ED44                     
 23615                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 23616                           
 23617                           ; BSR set to: 13
 23618  00ED44  0E01               	movlw	1
 23619  00ED46  0100               	movlb	0	; () banked
 23620  00ED48  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 23621  00ED4A  0E02               	movlw	2
 23622  00ED4C  EC1A  F079         	call	_USBStallEndpoint
 23623                           
 23624                           ;usb_device_msd.c: 1611: break;
 23625  00ED50  0012               	return	
 23626  00ED52                     
 23627                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 23628  00ED52  0E02               	movlw	2
 23629  00ED54  010D               	movlb	13	; () banked
 23630  00ED56  6F8C               	movwf	140,b	;volatile
 23631                           
 23632                           ; BSR set to: 13
 23633                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 23634  00ED58  0E01               	movlw	1
 23635  00ED5A  0100               	movlb	0	; () banked
 23636  00ED5C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 23637  00ED5E  0E02               	movlw	2
 23638  00ED60  EC1A  F079         	call	_USBStallEndpoint
 23639                           
 23640                           ;usb_device_msd.c: 1616: break;
 23641  00ED64  0012               	return	
 23642  00ED66                     
 23643                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 23644  00ED66  0E00               	movlw	0
 23645  00ED68  0100               	movlb	0	; () banked
 23646  00ED6A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 23647  00ED6C  0E02               	movlw	2
 23648  00ED6E  EC1A  F079         	call	_USBStallEndpoint
 23649                           
 23650                           ;usb_device_msd.c: 1620: break;
 23651  00ED72  0012               	return	
 23652  00ED74                     
 23653                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 23654  00ED74  0E02               	movlw	2
 23655  00ED76  010D               	movlb	13	; () banked
 23656  00ED78  6F8C               	movwf	140,b	;volatile
 23657                           
 23658                           ; BSR set to: 13
 23659                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 23660  00ED7A  0E00               	movlw	0
 23661  00ED7C  0100               	movlb	0	; () banked
 23662  00ED7E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 23663  00ED80  0E02               	movlw	2
 23664  00ED82  EC1A  F079         	call	_USBStallEndpoint
 23665                           
 23666                           ;usb_device_msd.c: 1625: break;
 23667  00ED86  0012               	return	
 23668  00ED88                     
 23669                           ;usb_device_msd.c: 1628: ResetSenseData();
 23670  00ED88  EC01  F08A         	call	_ResetSenseData	;wreg free
 23671                           
 23672                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 23673  00ED8C  0101               	movlb	1	; () banked
 23674  00ED8E  5135               	movf	(_gblSenseData+2)& (0+255),w,b
 23675  00ED90  0BF0               	andlw	-16
 23676  00ED92  0905               	iorlw	5
 23677  00ED94  6F35               	movwf	(_gblSenseData+2)& (0+255),b
 23678                           
 23679                           ; BSR set to: 1
 23680                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 23681  00ED96  0E20               	movlw	32
 23682  00ED98  6F3F               	movwf	(_gblSenseData+12)& (0+255),b
 23683                           
 23684                           ; BSR set to: 1
 23685                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 23686  00ED9A  0E00               	movlw	0
 23687  00ED9C  6F40               	movwf	(_gblSenseData+13)& (0+255),b
 23688                           
 23689                           ; BSR set to: 1
 23690                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 23691  00ED9E  0E02               	movlw	2
 23692  00EDA0  0100               	movlb	0	; () banked
 23693  00EDA2  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 23694  00EDA4  A4D8               	btfss	status,2,c
 23695  00EDA6  D00E               	goto	l771
 23696                           
 23697                           ; BSR set to: 0
 23698  00EDA8  0101               	movlb	1	; () banked
 23699  00EDAA  5108               	movf	(_gblCBW+8)& (0+255),w,b
 23700  00EDAC  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 23701  00EDAE  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 23702  00EDB0  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 23703  00EDB2  B4D8               	btfsc	status,2,c
 23704  00EDB4  D007               	goto	l771
 23705                           
 23706                           ; BSR set to: 1
 23707                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 23708  00EDB6  0E00               	movlw	0
 23709  00EDB8  0100               	movlb	0	; () banked
 23710  00EDBA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 23711  00EDBC  0E02               	movlw	2
 23712  00EDBE  EC1A  F079         	call	_USBStallEndpoint
 23713                           
 23714                           ;usb_device_msd.c: 1636: }
 23715  00EDC2  0012               	return	
 23716  00EDC4                     l771:
 23717                           
 23718                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 23719  00EDC4  0E01               	movlw	1
 23720  00EDC6  0100               	movlb	0	; () banked
 23721  00EDC8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 23722  00EDCA  0E02               	movlw	2
 23723  00EDCC  EC1A  F079         	call	_USBStallEndpoint
 23724                           
 23725                           ;usb_device_msd.c: 1644: }
 23726                           
 23727                           ;usb_device_msd.c: 1643: break;
 23728                           
 23729                           ;usb_device_msd.c: 1642: default:
 23730                           
 23731                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 23732  00EDD0  0012               	return	
 23733  00EDD2                     l763:
 23734  00EDD2  0100               	movlb	0	; () banked
 23735  00EDD4  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 23736                           
 23737                           ; Switch size 1, requested type "space"
 23738                           ; Number of cases is 6, Range of values is 1 to 127
 23739                           ; switch strategies available:
 23740                           ; Name         Instructions Cycles
 23741                           ; simple_byte           19    10 (average)
 23742                           ;	Chosen strategy is simple_byte
 23743  00EDD6  0A01               	xorlw	1	; case 1
 23744  00EDD8  B4D8               	btfsc	status,2,c
 23745  00EDDA  D7B0               	goto	l764
 23746  00EDDC  0A03               	xorlw	3	; case 2
 23747  00EDDE  B4D8               	btfsc	status,2,c
 23748  00EDE0  D7B1               	goto	l766
 23749  00EDE2  0A01               	xorlw	1	; case 3
 23750  00EDE4  B4D8               	btfsc	status,2,c
 23751  00EDE6  D7B5               	goto	l767
 23752  00EDE8  0A07               	xorlw	7	; case 4
 23753  00EDEA  B4D8               	btfsc	status,2,c
 23754  00EDEC  D7BC               	goto	l768
 23755  00EDEE  0A01               	xorlw	1	; case 5
 23756  00EDF0  B4D8               	btfsc	status,2,c
 23757  00EDF2  D7C0               	goto	l769
 23758  00EDF4  0A7A               	xorlw	122	; case 127
 23759  00EDF6  A4D8               	btfss	status,2,c
 23760  00EDF8  0012               	return	
 23761  00EDFA  D7C6               	goto	l770
 23762  00EDFC                     __end_of_MSDErrorHandler:
 23763                           	opt stack 0
 23764                           tosu	equ	0xFFF
 23765                           tosh	equ	0xFFE
 23766                           tosl	equ	0xFFD
 23767                           pclath	equ	0xFFA
 23768                           tblptru	equ	0xFF8
 23769                           tblptrh	equ	0xFF7
 23770                           tblptrl	equ	0xFF6
 23771                           tablat	equ	0xFF5
 23772                           prodh	equ	0xFF4
 23773                           prodl	equ	0xFF3
 23774                           intcon	equ	0xFF2
 23775                           postinc0	equ	0xFEE
 23776                           wreg	equ	0xFE8
 23777                           indf1	equ	0xFE7
 23778                           postdec1	equ	0xFE5
 23779                           plusw1	equ	0xFE3
 23780                           fsr1h	equ	0xFE2
 23781                           fsr1l	equ	0xFE1
 23782                           indf2	equ	0xFDF
 23783                           postinc2	equ	0xFDE
 23784                           postdec2	equ	0xFDD
 23785                           plusw2	equ	0xFDB
 23786                           fsr2h	equ	0xFDA
 23787                           fsr2l	equ	0xFD9
 23788                           status	equ	0xFD8
 23789                           
 23790 ;; *************** function _USBStallEndpoint *****************
 23791 ;; Defined at:
 23792 ;;		line 1073 in file "usb_device.c"
 23793 ;; Parameters:    Size  Location     Type
 23794 ;;  ep              1    wreg     unsigned char 
 23795 ;;  dir             1    0[BANK0 ] unsigned char 
 23796 ;; Auto vars:     Size  Location     Type
 23797 ;;  ep              1    5[BANK0 ] unsigned char 
 23798 ;;  p               2    6[BANK0 ] PTR struct __BDT
 23799 ;;		 -> BDT(48), 
 23800 ;; Return value:  Size  Location     Type
 23801 ;;                  1    wreg      void 
 23802 ;; Registers used:
 23803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23804 ;; Tracked objects:
 23805 ;;		On entry : 0/0
 23806 ;;		On exit  : 0/0
 23807 ;;		Unchanged: 0/0
 23808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23809 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23810 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23811 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23812 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23813 ;;Total ram usage:        8 bytes
 23814 ;; Hardware stack levels used:    1
 23815 ;; Hardware stack levels required when called:   10
 23816 ;; This function calls:
 23817 ;;		Nothing
 23818 ;; This function is called by:
 23819 ;;		_MSDTasks
 23820 ;;		_MSDReadHandler
 23821 ;;		_MSDWriteHandler
 23822 ;;		_MSDErrorHandler
 23823 ;; This function uses a non-reentrant model
 23824 ;;
 23825                           
 23826                           	psect	text69
 23827  00F234                     __ptext69:
 23828                           	opt stack 0
 23829  00F234                     _USBStallEndpoint:
 23830                           	opt stack 18
 23831                           
 23832                           ;incstack = 0
 23833                           ;USBStallEndpoint@ep stored from wreg
 23834  00F234  0100               	movlb	0	; () banked
 23835  00F236  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 23836                           
 23837                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 23838  00F238  0100               	movlb	0	; () banked
 23839  00F23A  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 23840  00F23C  A4D8               	btfss	status,2,c
 23841  00F23E  D02B               	goto	l192
 23842                           
 23843                           ; BSR set to: 0
 23844                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 23845  00F240  EE20 F001          	lfsr	2,1
 23846  00F244  501A               	movf	_pBDTEntryEP0OutNext,w,c
 23847  00F246  26D9               	addwf	fsr2l,f,c
 23848  00F248  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 23849  00F24A  22DA               	addwfc	fsr2h,f,c
 23850  00F24C  0E08               	movlw	8
 23851  00F24E  6EDF               	movwf	indf2,c
 23852                           
 23853                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23854  00F250  EE20 F002          	lfsr	2,2
 23855  00F254  501A               	movf	_pBDTEntryEP0OutNext,w,c
 23856  00F256  26D9               	addwf	fsr2l,f,c
 23857  00F258  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 23858  00F25A  22DA               	addwfc	fsr2h,f,c
 23859  00F25C  0E30               	movlw	48
 23860  00F25E  6EDE               	movwf	postinc2,c
 23861  00F260  0E0D               	movlw	13
 23862  00F262  6EDD               	movwf	postdec2,c
 23863                           
 23864                           ; BSR set to: 0
 23865                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 23866  00F264  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23867  00F268  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23868  00F26C  0E0C               	movlw	12
 23869  00F26E  6EDF               	movwf	indf2,c
 23870                           
 23871                           ; BSR set to: 0
 23872                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23873  00F270  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23874  00F274  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23875  00F278  0E00               	movlw	0
 23876  00F27A  8EDB               	bsf	plusw2,7,c
 23877                           
 23878                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 23879  00F27C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 23880  00F280  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23881  00F284  0E04               	movlw	4
 23882  00F286  6EDF               	movwf	indf2,c
 23883                           
 23884                           ; BSR set to: 0
 23885                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23886  00F288  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 23887  00F28C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23888  00F290  0E00               	movlw	0
 23889  00F292  8EDB               	bsf	plusw2,7,c
 23890                           
 23891                           ;usb_device.c: 1089: }
 23892  00F294  0012               	return	
 23893  00F296                     l192:
 23894                           
 23895                           ; BSR set to: 0
 23896                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 23897                           
 23898                           ; BSR set to: 0
 23899  00F296  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 23900  00F298  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 23901  00F29A  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 23902  00F29C  90D8               	bcf	status,0,c
 23903  00F29E  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 23904  00F2A0  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 23905  00F2A2  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 23906  00F2A4  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 23907  00F2A6  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 23908  00F2A8  90D8               	bcf	status,0,c
 23909  00F2AA  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 23910  00F2AC  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 23911  00F2AE  90D8               	bcf	status,0,c
 23912  00F2B0  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 23913  00F2B2  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 23914  00F2B4  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 23915  00F2B6  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 23916  00F2B8  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 23917  00F2BA  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 23918  00F2BC  90D8               	bcf	status,0,c
 23919  00F2BE  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 23920  00F2C0  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 23921  00F2C2  90D8               	bcf	status,0,c
 23922  00F2C4  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 23923  00F2C6  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 23924  00F2C8  0E00               	movlw	0
 23925  00F2CA  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 23926  00F2CC  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 23927  00F2CE  0E0D               	movlw	13
 23928  00F2D0  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 23929  00F2D2  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 23930                           
 23931                           ; BSR set to: 0
 23932                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 23933  00F2D4  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 23934  00F2D8  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 23935  00F2DC  0E00               	movlw	0
 23936  00F2DE  84DB               	bsf	plusw2,2,c
 23937                           
 23938                           ; BSR set to: 0
 23939                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 23940  00F2E0  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 23941  00F2E4  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 23942  00F2E8  0E00               	movlw	0
 23943  00F2EA  8EDB               	bsf	plusw2,7,c
 23944                           
 23945                           ; BSR set to: 0
 23946                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 23947  00F2EC  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 23948  00F2EE  0D04               	mullw	4
 23949  00F2F0  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 23950  00F2F4  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 23951  00F2F8  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 23952  00F2FA  0D02               	mullw	2
 23953  00F2FC  50F3               	movf	prodl,w,c
 23954  00F2FE  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 23955  00F300  50F4               	movf	prodh,w,c
 23956  00F302  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 23957  00F304  90D8               	bcf	status,0,c
 23958  00F306  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 23959  00F308  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 23960  00F30A  90D8               	bcf	status,0,c
 23961  00F30C  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 23962  00F30E  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 23963  00F310  0E04               	movlw	4
 23964  00F312  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 23965  00F314  0E00               	movlw	0
 23966  00F316  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 23967  00F318  0E00               	movlw	0
 23968  00F31A  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 23969  00F31C  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 23970  00F31E  0E0D               	movlw	13
 23971  00F320  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 23972  00F322  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 23973                           
 23974                           ; BSR set to: 0
 23975                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 23976  00F324  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 23977  00F328  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 23978  00F32C  0E00               	movlw	0
 23979  00F32E  84DB               	bsf	plusw2,2,c
 23980                           
 23981                           ; BSR set to: 0
 23982                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 23983  00F330  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 23984  00F334  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 23985  00F338  0E00               	movlw	0
 23986  00F33A  8EDB               	bsf	plusw2,7,c
 23987  00F33C  0012               	return	
 23988  00F33E                     __end_of_USBStallEndpoint:
 23989                           	opt stack 0
 23990                           tosu	equ	0xFFF
 23991                           tosh	equ	0xFFE
 23992                           tosl	equ	0xFFD
 23993                           pclath	equ	0xFFA
 23994                           tblptru	equ	0xFF8
 23995                           tblptrh	equ	0xFF7
 23996                           tblptrl	equ	0xFF6
 23997                           tablat	equ	0xFF5
 23998                           prodh	equ	0xFF4
 23999                           prodl	equ	0xFF3
 24000                           intcon	equ	0xFF2
 24001                           postinc0	equ	0xFEE
 24002                           wreg	equ	0xFE8
 24003                           indf1	equ	0xFE7
 24004                           postdec1	equ	0xFE5
 24005                           plusw1	equ	0xFE3
 24006                           fsr1h	equ	0xFE2
 24007                           fsr1l	equ	0xFE1
 24008                           indf2	equ	0xFDF
 24009                           postinc2	equ	0xFDE
 24010                           postdec2	equ	0xFDD
 24011                           plusw2	equ	0xFDB
 24012                           fsr2h	equ	0xFDA
 24013                           fsr2l	equ	0xFD9
 24014                           status	equ	0xFD8
 24015                           
 24016 ;; *************** function _ResetSenseData *****************
 24017 ;; Defined at:
 24018 ;;		line 1373 in file "usb_device_msd.c"
 24019 ;; Parameters:    Size  Location     Type
 24020 ;;		None
 24021 ;; Auto vars:     Size  Location     Type
 24022 ;;		None
 24023 ;; Return value:  Size  Location     Type
 24024 ;;                  1    wreg      void 
 24025 ;; Registers used:
 24026 ;;		wreg, status,2
 24027 ;; Tracked objects:
 24028 ;;		On entry : 0/0
 24029 ;;		On exit  : 0/0
 24030 ;;		Unchanged: 0/0
 24031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24036 ;;Total ram usage:        0 bytes
 24037 ;; Hardware stack levels used:    1
 24038 ;; Hardware stack levels required when called:   10
 24039 ;; This function calls:
 24040 ;;		Nothing
 24041 ;; This function is called by:
 24042 ;;		_MSDProcessCommandMediaAbsent
 24043 ;;		_MSDProcessCommandMediaPresent
 24044 ;;		_MSDErrorHandler
 24045 ;; This function uses a non-reentrant model
 24046 ;;
 24047                           
 24048                           	psect	text70
 24049  011402                     __ptext70:
 24050                           	opt stack 0
 24051  011402                     _ResetSenseData:
 24052                           	opt stack 16
 24053                           
 24054                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 24055                           
 24056                           ; BSR set to: 0
 24057                           ;incstack = 0
 24058  011402  0101               	movlb	1	; () banked
 24059  011404  9133               	bcf	_gblSenseData& (0+255),0,b
 24060  011406  9333               	bcf	_gblSenseData& (0+255),1,b
 24061  011408  9533               	bcf	_gblSenseData& (0+255),2,b
 24062  01140A  9733               	bcf	_gblSenseData& (0+255),3,b
 24063  01140C  8933               	bsf	_gblSenseData& (0+255),4,b
 24064  01140E  8B33               	bsf	_gblSenseData& (0+255),5,b
 24065  011410  8D33               	bsf	_gblSenseData& (0+255),6,b
 24066                           
 24067                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 24068  011412  9F33               	bcf	_gblSenseData& (0+255),7,b
 24069                           
 24070                           ; BSR set to: 1
 24071                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 24072  011414  0E00               	movlw	0
 24073  011416  6F34               	movwf	(_gblSenseData+1)& (0+255),b
 24074                           
 24075                           ; BSR set to: 1
 24076                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 24077  011418  9135               	bcf	(_gblSenseData+2)& (0+255),0,b
 24078  01141A  9335               	bcf	(_gblSenseData+2)& (0+255),1,b
 24079  01141C  9535               	bcf	(_gblSenseData+2)& (0+255),2,b
 24080  01141E  9735               	bcf	(_gblSenseData+2)& (0+255),3,b
 24081                           
 24082                           ; BSR set to: 1
 24083                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 24084  011420  9B35               	bcf	(_gblSenseData+2)& (0+255),5,b
 24085                           
 24086                           ; BSR set to: 1
 24087                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 24088  011422  9D35               	bcf	(_gblSenseData+2)& (0+255),6,b
 24089                           
 24090                           ; BSR set to: 1
 24091                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 24092  011424  9F35               	bcf	(_gblSenseData+2)& (0+255),7,b
 24093                           
 24094                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 24095  011426  0E00               	movlw	0
 24096  011428  6F36               	movwf	(_gblSenseData+3)& (0+255),b
 24097                           
 24098                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 24099  01142A  0E00               	movlw	0
 24100  01142C  6F37               	movwf	(_gblSenseData+4)& (0+255),b
 24101                           
 24102                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 24103  01142E  0E00               	movlw	0
 24104  011430  6F38               	movwf	(_gblSenseData+5)& (0+255),b
 24105                           
 24106                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 24107  011432  0E00               	movlw	0
 24108  011434  6F39               	movwf	(_gblSenseData+6)& (0+255),b
 24109                           
 24110                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 24111  011436  0E0A               	movlw	10
 24112  011438  6F3A               	movwf	(_gblSenseData+7)& (0+255),b
 24113                           
 24114                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 24115  01143A  0E00               	movlw	0
 24116  01143C  6F3B               	movwf	(_gblSenseData+8)& (0+255),b
 24117  01143E  0E00               	movlw	0
 24118  011440  6F3C               	movwf	(_gblSenseData+9)& (0+255),b
 24119  011442  0E00               	movlw	0
 24120  011444  6F3D               	movwf	(_gblSenseData+10)& (0+255),b
 24121  011446  0E00               	movlw	0
 24122  011448  6F3E               	movwf	(_gblSenseData+11)& (0+255),b
 24123                           
 24124                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 24125  01144A  0E00               	movlw	0
 24126  01144C  6F3F               	movwf	(_gblSenseData+12)& (0+255),b
 24127                           
 24128                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 24129  01144E  0E00               	movlw	0
 24130  011450  6F40               	movwf	(_gblSenseData+13)& (0+255),b
 24131                           
 24132                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 24133  011452  0E00               	movlw	0
 24134  011454  6F41               	movwf	(_gblSenseData+14)& (0+255),b
 24135                           
 24136                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 24137  011456  0E00               	movlw	0
 24138  011458  6F42               	movwf	(_gblSenseData+15)& (0+255),b
 24139                           
 24140                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 24141  01145A  0E00               	movlw	0
 24142  01145C  6F43               	movwf	(_gblSenseData+16)& (0+255),b
 24143                           
 24144                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 24145  01145E  0E00               	movlw	0
 24146  011460  6F44               	movwf	(_gblSenseData+17)& (0+255),b
 24147                           
 24148                           ; BSR set to: 1
 24149  011462  0012               	return		;funcret
 24150  011464                     __end_of_ResetSenseData:
 24151                           	opt stack 0
 24152                           tosu	equ	0xFFF
 24153                           tosh	equ	0xFFE
 24154                           tosl	equ	0xFFD
 24155                           pclath	equ	0xFFA
 24156                           tblptru	equ	0xFF8
 24157                           tblptrh	equ	0xFF7
 24158                           tblptrl	equ	0xFF6
 24159                           tablat	equ	0xFF5
 24160                           prodh	equ	0xFF4
 24161                           prodl	equ	0xFF3
 24162                           intcon	equ	0xFF2
 24163                           postinc0	equ	0xFEE
 24164                           wreg	equ	0xFE8
 24165                           indf1	equ	0xFE7
 24166                           postdec1	equ	0xFE5
 24167                           plusw1	equ	0xFE3
 24168                           fsr1h	equ	0xFE2
 24169                           fsr1l	equ	0xFE1
 24170                           indf2	equ	0xFDF
 24171                           postinc2	equ	0xFDE
 24172                           postdec2	equ	0xFDD
 24173                           plusw2	equ	0xFDB
 24174                           fsr2h	equ	0xFDA
 24175                           fsr2l	equ	0xFD9
 24176                           status	equ	0xFD8
 24177                           
 24178 ;; *************** function _ExternalFlash_SectorRead *****************
 24179 ;; Defined at:
 24180 ;;		line 40 in file "external_flash.c"
 24181 ;; Parameters:    Size  Location     Type
 24182 ;;  config          2   43[BANK0 ] PTR void 
 24183 ;;		 -> NULL(0), 
 24184 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 24185 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 24186 ;;		 -> msd_buffer(512), 
 24187 ;; Auto vars:     Size  Location     Type
 24188 ;;  page            2   51[BANK0 ] unsigned int 
 24189 ;; Return value:  Size  Location     Type
 24190 ;;                  1    wreg      unsigned char 
 24191 ;; Registers used:
 24192 ;;		wreg, status,2, status,0, cstack
 24193 ;; Tracked objects:
 24194 ;;		On entry : 0/0
 24195 ;;		On exit  : 0/0
 24196 ;;		Unchanged: 0/0
 24197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24198 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24201 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24202 ;;Total ram usage:       10 bytes
 24203 ;; Hardware stack levels used:    1
 24204 ;; Hardware stack levels required when called:   15
 24205 ;; This function calls:
 24206 ;;		_flash_sector_read
 24207 ;; This function is called by:
 24208 ;;		_MSDReadHandler
 24209 ;; This function uses a non-reentrant model
 24210 ;;
 24211                           
 24212                           	psect	text71
 24213  011EC8                     __ptext71:
 24214                           	opt stack 0
 24215  011EC8                     _ExternalFlash_SectorRead:
 24216                           	opt stack 10
 24217                           
 24218                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 24219                           
 24220                           ; BSR set to: 1
 24221                           ;incstack = 0
 24222  011EC8  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 24223  011ECC  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 24224                           
 24225                           ;external_flash.c: 45: if(sector_addr >= 8192)
 24226  011ED0  0100               	movlb	0	; () banked
 24227  011ED2  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 24228  011ED4  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 24229  011ED6  E104               	bnz	u16640
 24230  011ED8  0E20               	movlw	32
 24231  011EDA  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 24232  011EDC  A0D8               	btfss	status,0,c
 24233  011EDE  D002               	goto	l1621
 24234  011EE0                     u16640:
 24235                           
 24236                           ; BSR set to: 0
 24237                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 24238  011EE0  0E00               	movlw	0
 24239                           
 24240                           ; BSR set to: 0
 24241  011EE2  0012               	return	
 24242  011EE4                     l1621:
 24243                           
 24244                           ; BSR set to: 0
 24245                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 24246                           
 24247                           ; BSR set to: 0
 24248  011EE4  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 24249  011EE8  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 24250  011EEC  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 24251  011EF0  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 24252  011EF4  EC97  F090         	call	_flash_sector_read	;wreg free
 24253                           
 24254                           ;external_flash.c: 53: return 1;
 24255  011EF8  0E01               	movlw	1
 24256  011EFA  0012               	return	
 24257  011EFC                     __end_of_ExternalFlash_SectorRead:
 24258                           	opt stack 0
 24259                           tosu	equ	0xFFF
 24260                           tosh	equ	0xFFE
 24261                           tosl	equ	0xFFD
 24262                           pclath	equ	0xFFA
 24263                           tblptru	equ	0xFF8
 24264                           tblptrh	equ	0xFF7
 24265                           tblptrl	equ	0xFF6
 24266                           tablat	equ	0xFF5
 24267                           prodh	equ	0xFF4
 24268                           prodl	equ	0xFF3
 24269                           intcon	equ	0xFF2
 24270                           postinc0	equ	0xFEE
 24271                           wreg	equ	0xFE8
 24272                           indf1	equ	0xFE7
 24273                           postdec1	equ	0xFE5
 24274                           plusw1	equ	0xFE3
 24275                           fsr1h	equ	0xFE2
 24276                           fsr1l	equ	0xFE1
 24277                           indf2	equ	0xFDF
 24278                           postinc2	equ	0xFDE
 24279                           postdec2	equ	0xFDD
 24280                           plusw2	equ	0xFDB
 24281                           fsr2h	equ	0xFDA
 24282                           fsr2l	equ	0xFD9
 24283                           status	equ	0xFD8
 24284                           
 24285 ;; *************** function _flash_sector_read *****************
 24286 ;; Defined at:
 24287 ;;		line 426 in file "flash.c"
 24288 ;; Parameters:    Size  Location     Type
 24289 ;;  page            2   39[BANK0 ] unsigned int 
 24290 ;;  data            2   41[BANK0 ] PTR unsigned char 
 24291 ;;		 -> buffer(512), msd_buffer(512), 
 24292 ;; Auto vars:     Size  Location     Type
 24293 ;;		None
 24294 ;; Return value:  Size  Location     Type
 24295 ;;                  1    wreg      void 
 24296 ;; Registers used:
 24297 ;;		wreg, status,2, status,0, cstack
 24298 ;; Tracked objects:
 24299 ;;		On entry : 0/0
 24300 ;;		On exit  : 0/0
 24301 ;;		Unchanged: 0/0
 24302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24303 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24306 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24307 ;;Total ram usage:        4 bytes
 24308 ;; Hardware stack levels used:    1
 24309 ;; Hardware stack levels required when called:   14
 24310 ;; This function calls:
 24311 ;;		__flash_partial_read
 24312 ;; This function is called by:
 24313 ;;		_ExternalFlash_SectorRead
 24314 ;;		_fat_get_format_status
 24315 ;;		__get_available_cluster
 24316 ;;		__find_nth_cluster
 24317 ;;		__make_cluster_chain
 24318 ;;		_fat_find_file
 24319 ;; This function uses a non-reentrant model
 24320 ;;
 24321                           
 24322                           	psect	text72
 24323  01212E                     __ptext72:
 24324                           	opt stack 0
 24325  01212E                     _flash_sector_read:
 24326                           	opt stack 13
 24327                           
 24328                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 24329                           
 24330                           ;incstack = 0
 24331  01212E  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 24332  012132  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 24333  012136  0E00               	movlw	0
 24334  012138  0100               	movlb	0	; () banked
 24335  01213A  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 24336  01213C  0E00               	movlw	0
 24337  01213E  6F75               	movwf	__flash_partial_read@start& (0+255),b
 24338  012140  0E02               	movlw	2
 24339  012142  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 24340  012144  0E00               	movlw	0
 24341  012146  6F77               	movwf	__flash_partial_read@length& (0+255),b
 24342  012148  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 24343  01214C  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 24344  012150  ECA6  F087         	call	__flash_partial_read	;wreg free
 24345  012154  0012               	return		;funcret
 24346  012156                     __end_of_flash_sector_read:
 24347                           	opt stack 0
 24348                           tosu	equ	0xFFF
 24349                           tosh	equ	0xFFE
 24350                           tosl	equ	0xFFD
 24351                           pclath	equ	0xFFA
 24352                           tblptru	equ	0xFF8
 24353                           tblptrh	equ	0xFF7
 24354                           tblptrl	equ	0xFF6
 24355                           tablat	equ	0xFF5
 24356                           prodh	equ	0xFF4
 24357                           prodl	equ	0xFF3
 24358                           intcon	equ	0xFF2
 24359                           postinc0	equ	0xFEE
 24360                           wreg	equ	0xFE8
 24361                           indf1	equ	0xFE7
 24362                           postdec1	equ	0xFE5
 24363                           plusw1	equ	0xFE3
 24364                           fsr1h	equ	0xFE2
 24365                           fsr1l	equ	0xFE1
 24366                           indf2	equ	0xFDF
 24367                           postinc2	equ	0xFDE
 24368                           postdec2	equ	0xFDD
 24369                           plusw2	equ	0xFDB
 24370                           fsr2h	equ	0xFDA
 24371                           fsr2l	equ	0xFD9
 24372                           status	equ	0xFD8
 24373                           
 24374 ;; *************** function __flash_partial_read *****************
 24375 ;; Defined at:
 24376 ;;		line 309 in file "flash.c"
 24377 ;; Parameters:    Size  Location     Type
 24378 ;;  page            2   19[BANK0 ] unsigned int 
 24379 ;;  start           2   21[BANK0 ] unsigned int 
 24380 ;;  length          2   23[BANK0 ] unsigned int 
 24381 ;;  data            2   25[BANK0 ] PTR unsigned char 
 24382 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 24383 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 24384 ;;		 -> buffer(512), msd_buffer(512), 
 24385 ;; Auto vars:     Size  Location     Type
 24386 ;;  command         4   31[BANK0 ] unsigned char [4]
 24387 ;;  address         4   35[BANK0 ] unsigned long 
 24388 ;; Return value:  Size  Location     Type
 24389 ;;                  1    wreg      void 
 24390 ;; Registers used:
 24391 ;;		wreg, status,2, status,0, cstack
 24392 ;; Tracked objects:
 24393 ;;		On entry : 0/0
 24394 ;;		On exit  : 0/0
 24395 ;;		Unchanged: 0/0
 24396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24397 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24398 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24399 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24400 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24401 ;;Total ram usage:       20 bytes
 24402 ;; Hardware stack levels used:    1
 24403 ;; Hardware stack levels required when called:   13
 24404 ;; This function calls:
 24405 ;;		__flash_is_busy
 24406 ;;		_spi_tx_rx
 24407 ;; This function is called by:
 24408 ;;		_flash_sector_read
 24409 ;;		_flash_partial_read
 24410 ;; This function uses a non-reentrant model
 24411 ;;
 24412                           
 24413                           	psect	text73
 24414  010F4C                     __ptext73:
 24415                           	opt stack 0
 24416  010F4C                     __flash_partial_read:
 24417                           	opt stack 13
 24418                           
 24419                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 24420                           
 24421                           ;incstack = 0
 24422  010F4C  ECE3  F090         	call	__flash_is_busy	;wreg free
 24423  010F50  0900               	iorlw	0
 24424  010F52  A4D8               	btfss	status,2,c
 24425  010F54  D7FB               	goto	__flash_partial_read
 24426                           
 24427                           ;flash.c: 318: address = page;
 24428  010F56  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 24429  010F5A  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 24430  010F5E  0100               	movlb	0	; () banked
 24431  010F60  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 24432  010F62  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 24433                           
 24434                           ; BSR set to: 0
 24435                           ;flash.c: 319: address <<= 9;
 24436  010F64  0E09               	movlw	9
 24437  010F66                     u16155:
 24438  010F66  90D8               	bcf	status,0,c
 24439  010F68  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 24440  010F6A  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 24441  010F6C  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 24442  010F6E  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 24443  010F70  2EE8               	decfsz	wreg,f,c
 24444  010F72  D7F9               	goto	u16155
 24445                           
 24446                           ; BSR set to: 0
 24447                           ;flash.c: 320: address |= start;
 24448  010F74  5175               	movf	__flash_partial_read@start& (0+255),w,b
 24449  010F76  6F7B               	movwf	??__flash_partial_read& (0+255),b
 24450  010F78  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 24451  010F7A  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 24452  010F7C  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 24453  010F7E  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 24454  010F80  517B               	movf	??__flash_partial_read& (0+255),w,b
 24455  010F82  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 24456  010F84  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 24457  010F86  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 24458  010F88  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 24459  010F8A  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 24460  010F8C  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 24461  010F8E  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 24462                           
 24463                           ; BSR set to: 0
 24464                           ;flash.c: 323: command[0] = 0x03;
 24465  010F90  0E03               	movlw	3
 24466  010F92  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 24467                           
 24468                           ; BSR set to: 0
 24469                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 24470  010F94  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 24471                           
 24472                           ; BSR set to: 0
 24473                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 24474  010F98  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 24475  010F9A  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 24476                           
 24477                           ; BSR set to: 0
 24478                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 24479  010F9C  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 24480                           
 24481                           ; BSR set to: 0
 24482                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 24483  010FA0  0E7F               	movlw	low __flash_partial_read@command
 24484  010FA2  6F60               	movwf	spi_tx_rx@command& (0+255),b
 24485  010FA4  0E00               	movlw	high __flash_partial_read@command
 24486  010FA6  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 24487  010FA8  0E00               	movlw	0
 24488  010FAA  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 24489  010FAC  0E04               	movlw	4
 24490  010FAE  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 24491  010FB0  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 24492  010FB4  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 24493  010FB8  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 24494  010FBC  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 24495  010FC0  ECE3  F084         	call	_spi_tx_rx	;wreg free
 24496  010FC4  0012               	return		;funcret
 24497  010FC6                     __end_of__flash_partial_read:
 24498                           	opt stack 0
 24499                           tosu	equ	0xFFF
 24500                           tosh	equ	0xFFE
 24501                           tosl	equ	0xFFD
 24502                           pclath	equ	0xFFA
 24503                           tblptru	equ	0xFF8
 24504                           tblptrh	equ	0xFF7
 24505                           tblptrl	equ	0xFF6
 24506                           tablat	equ	0xFF5
 24507                           prodh	equ	0xFF4
 24508                           prodl	equ	0xFF3
 24509                           intcon	equ	0xFF2
 24510                           postinc0	equ	0xFEE
 24511                           wreg	equ	0xFE8
 24512                           indf1	equ	0xFE7
 24513                           postdec1	equ	0xFE5
 24514                           plusw1	equ	0xFE3
 24515                           fsr1h	equ	0xFE2
 24516                           fsr1l	equ	0xFE1
 24517                           indf2	equ	0xFDF
 24518                           postinc2	equ	0xFDE
 24519                           postdec2	equ	0xFDD
 24520                           plusw2	equ	0xFDB
 24521                           fsr2h	equ	0xFDA
 24522                           fsr2l	equ	0xFD9
 24523                           status	equ	0xFD8
 24524                           
 24525 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 24526 ;; Defined at:
 24527 ;;		line 993 in file "usb_device_msd.c"
 24528 ;; Parameters:    Size  Location     Type
 24529 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 24530 ;; Auto vars:     Size  Location     Type
 24531 ;;		None
 24532 ;; Return value:  Size  Location     Type
 24533 ;;                  1    wreg      void 
 24534 ;; Registers used:
 24535 ;;		wreg, status,2, status,0
 24536 ;; Tracked objects:
 24537 ;;		On entry : 0/0
 24538 ;;		On exit  : 0/0
 24539 ;;		Unchanged: 0/0
 24540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24541 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24543 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24544 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24545 ;;Total ram usage:        6 bytes
 24546 ;; Hardware stack levels used:    1
 24547 ;; Hardware stack levels required when called:   10
 24548 ;; This function calls:
 24549 ;;		Nothing
 24550 ;; This function is called by:
 24551 ;;		_MSDProcessCommandMediaPresent
 24552 ;; This function uses a non-reentrant model
 24553 ;;
 24554                           
 24555                           	psect	text74
 24556  01047A                     __ptext74:
 24557                           	opt stack 0
 24558  01047A                     _MSDComputeDeviceInAndResidue:
 24559                           	opt stack 16
 24560                           
 24561                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 24562                           
 24563                           ;incstack = 0
 24564  01047A  0100               	movlb	0	; () banked
 24565  01047C  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 24566  01047E  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 24567  010480  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 24568  010482  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 24569  010484  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 24570  010486  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 24571  010488  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 24572  01048A  0101               	movlb	1	; () banked
 24573  01048C  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 24574  01048E  0100               	movlb	0	; () banked
 24575  010490  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 24576  010492  0101               	movlb	1	; () banked
 24577  010494  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 24578  010496  0100               	movlb	0	; () banked
 24579  010498  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 24580  01049A  0101               	movlb	1	; () banked
 24581  01049C  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 24582  01049E  0100               	movlb	0	; () banked
 24583  0104A0  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 24584  0104A2  0101               	movlb	1	; () banked
 24585  0104A4  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 24586  0104A6  B0D8               	btfsc	status,0,c
 24587  0104A8  D00E               	goto	l675
 24588                           
 24589                           ; BSR set to: 1
 24590                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 24591  0104AA  0E00               	movlw	0
 24592  0104AC  010D               	movlb	13	; () banked
 24593  0104AE  6F88               	movwf	136,b	;volatile
 24594  0104B0  0E00               	movlw	0
 24595  0104B2  6F89               	movwf	137,b	;volatile
 24596  0104B4  0E00               	movlw	0
 24597  0104B6  6F8A               	movwf	138,b	;volatile
 24598  0104B8  0E00               	movlw	0
 24599  0104BA  6F8B               	movwf	139,b	;volatile
 24600                           
 24601                           ; BSR set to: 13
 24602                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 24603  0104BC  C108  F0F3         	movff	_gblCBW+8,_TransferLength
 24604  0104C0  C109  F0F4         	movff	_gblCBW+9,_TransferLength+1
 24605                           
 24606                           ;usb_device_msd.c: 1002: }
 24607  0104C4  0012               	return	
 24608  0104C6                     l675:
 24609                           
 24610                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 24611                           
 24612                           ; BSR set to: 13
 24613  0104C6  0100               	movlb	0	; () banked
 24614  0104C8  51F3               	movf	_TransferLength& (0+255),w,b
 24615  0104CA  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 24616  0104CC  51F4               	movf	(_TransferLength+1)& (0+255),w,b
 24617  0104CE  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 24618  0104D0  B0D8               	btfsc	status,0,c
 24619  0104D2  D004               	goto	l677
 24620                           
 24621                           ; BSR set to: 0
 24622                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 24623  0104D4  C060  F0F3         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 24624  0104D8  C061  F0F4         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 24625  0104DC                     l677:
 24626                           
 24627                           ; BSR set to: 0
 24628                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 24629                           
 24630                           ; BSR set to: 0
 24631  0104DC  51F3               	movf	_TransferLength& (0+255),w,b
 24632  0104DE  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 24633  0104E0  51F4               	movf	(_TransferLength+1)& (0+255),w,b
 24634  0104E2  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 24635  0104E4  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 24636  0104E6  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 24637  0104E8  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 24638  0104EA  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 24639  0104EC  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 24640  0104EE  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 24641  0104F0  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 24642  0104F2  0E00               	movlw	0
 24643  0104F4  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 24644  0104F6  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 24645  0104F8  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 24646  0104FA  0101               	movlb	1	; () banked
 24647  0104FC  5108               	movf	(_gblCBW+8)& (0+255),w,b
 24648  0104FE  0100               	movlb	0	; () banked
 24649  010500  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 24650  010502  010D               	movlb	13	; () banked
 24651  010504  6F88               	movwf	136,b	;volatile
 24652  010506  0101               	movlb	1	; () banked
 24653  010508  5109               	movf	(_gblCBW+9)& (0+255),w,b
 24654  01050A  0100               	movlb	0	; () banked
 24655  01050C  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 24656  01050E  010D               	movlb	13	; () banked
 24657  010510  6F89               	movwf	137,b	;volatile
 24658  010512  0101               	movlb	1	; () banked
 24659  010514  510A               	movf	(_gblCBW+10)& (0+255),w,b
 24660  010516  0100               	movlb	0	; () banked
 24661  010518  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 24662  01051A  010D               	movlb	13	; () banked
 24663  01051C  6F8A               	movwf	138,b	;volatile
 24664  01051E  0101               	movlb	1	; () banked
 24665  010520  510B               	movf	(_gblCBW+11)& (0+255),w,b
 24666  010522  0100               	movlb	0	; () banked
 24667  010524  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 24668  010526  010D               	movlb	13	; () banked
 24669  010528  6F8B               	movwf	139,b	;volatile
 24670  01052A  0012               	return	
 24671  01052C                     __end_of_MSDComputeDeviceInAndResidue:
 24672                           	opt stack 0
 24673                           tosu	equ	0xFFF
 24674                           tosh	equ	0xFFE
 24675                           tosl	equ	0xFFD
 24676                           pclath	equ	0xFFA
 24677                           tblptru	equ	0xFF8
 24678                           tblptrh	equ	0xFF7
 24679                           tblptrl	equ	0xFF6
 24680                           tablat	equ	0xFF5
 24681                           prodh	equ	0xFF4
 24682                           prodl	equ	0xFF3
 24683                           intcon	equ	0xFF2
 24684                           postinc0	equ	0xFEE
 24685                           wreg	equ	0xFE8
 24686                           indf1	equ	0xFE7
 24687                           postdec1	equ	0xFE5
 24688                           plusw1	equ	0xFE3
 24689                           fsr1h	equ	0xFE2
 24690                           fsr1l	equ	0xFE1
 24691                           indf2	equ	0xFDF
 24692                           postinc2	equ	0xFDE
 24693                           postdec2	equ	0xFDD
 24694                           plusw2	equ	0xFDB
 24695                           fsr2h	equ	0xFDA
 24696                           fsr2l	equ	0xFD9
 24697                           status	equ	0xFD8
 24698                           
 24699 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 24700 ;; Defined at:
 24701 ;;		line 18 in file "external_flash.c"
 24702 ;; Parameters:    Size  Location     Type
 24703 ;;  config          2    0[BANK0 ] PTR void 
 24704 ;;		 -> NULL(0), 
 24705 ;; Auto vars:     Size  Location     Type
 24706 ;;		None
 24707 ;; Return value:  Size  Location     Type
 24708 ;;                  2    0[BANK0 ] unsigned int 
 24709 ;; Registers used:
 24710 ;;		wreg, status,2
 24711 ;; Tracked objects:
 24712 ;;		On entry : 0/0
 24713 ;;		On exit  : 0/0
 24714 ;;		Unchanged: 0/0
 24715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24716 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24719 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24720 ;;Total ram usage:        2 bytes
 24721 ;; Hardware stack levels used:    1
 24722 ;; Hardware stack levels required when called:   10
 24723 ;; This function calls:
 24724 ;;		Nothing
 24725 ;; This function is called by:
 24726 ;;		_MSDProcessCommandMediaPresent
 24727 ;; This function uses a non-reentrant model
 24728 ;;
 24729                           
 24730                           	psect	text75
 24731  012332                     __ptext75:
 24732                           	opt stack 0
 24733  012332                     _ExternalFlash_SectorSizeRead:
 24734                           	opt stack 16
 24735                           
 24736                           ;external_flash.c: 20: return 512;
 24737                           
 24738                           ; BSR set to: 13
 24739                           ;incstack = 0
 24740  012332  0E02               	movlw	2
 24741  012334  0100               	movlb	0	; () banked
 24742  012336  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 24743  012338  0E00               	movlw	0
 24744  01233A  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 24745  01233C  0012               	return	
 24746  01233E                     __end_of_ExternalFlash_SectorSizeRead:
 24747                           	opt stack 0
 24748                           tosu	equ	0xFFF
 24749                           tosh	equ	0xFFE
 24750                           tosl	equ	0xFFD
 24751                           pclath	equ	0xFFA
 24752                           tblptru	equ	0xFF8
 24753                           tblptrh	equ	0xFF7
 24754                           tblptrl	equ	0xFF6
 24755                           tablat	equ	0xFF5
 24756                           prodh	equ	0xFF4
 24757                           prodl	equ	0xFF3
 24758                           intcon	equ	0xFF2
 24759                           postinc0	equ	0xFEE
 24760                           wreg	equ	0xFE8
 24761                           indf1	equ	0xFE7
 24762                           postdec1	equ	0xFE5
 24763                           plusw1	equ	0xFE3
 24764                           fsr1h	equ	0xFE2
 24765                           fsr1l	equ	0xFE1
 24766                           indf2	equ	0xFDF
 24767                           postinc2	equ	0xFDE
 24768                           postdec2	equ	0xFDD
 24769                           plusw2	equ	0xFDB
 24770                           fsr2h	equ	0xFDA
 24771                           fsr2l	equ	0xFD9
 24772                           status	equ	0xFD8
 24773                           
 24774 ;; *************** function _ExternalFlash_CapacityRead *****************
 24775 ;; Defined at:
 24776 ;;		line 23 in file "external_flash.c"
 24777 ;; Parameters:    Size  Location     Type
 24778 ;;  config          2    0[BANK0 ] PTR void 
 24779 ;;		 -> NULL(0), 
 24780 ;; Auto vars:     Size  Location     Type
 24781 ;;		None
 24782 ;; Return value:  Size  Location     Type
 24783 ;;                  4    0[BANK0 ] unsigned long 
 24784 ;; Registers used:
 24785 ;;		wreg, status,2
 24786 ;; Tracked objects:
 24787 ;;		On entry : 0/0
 24788 ;;		On exit  : 0/0
 24789 ;;		Unchanged: 0/0
 24790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24791 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24794 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24795 ;;Total ram usage:        4 bytes
 24796 ;; Hardware stack levels used:    1
 24797 ;; Hardware stack levels required when called:   10
 24798 ;; This function calls:
 24799 ;;		Nothing
 24800 ;; This function is called by:
 24801 ;;		_MSDProcessCommandMediaPresent
 24802 ;; This function uses a non-reentrant model
 24803 ;;
 24804                           
 24805                           	psect	text76
 24806  0122D2                     __ptext76:
 24807                           	opt stack 0
 24808  0122D2                     _ExternalFlash_CapacityRead:
 24809                           	opt stack 16
 24810                           
 24811                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 24812                           
 24813                           ; BSR set to: 0
 24814                           ;incstack = 0
 24815  0122D2  0EFF               	movlw	255
 24816  0122D4  0100               	movlb	0	; () banked
 24817  0122D6  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 24818  0122D8  0E1F               	movlw	31
 24819  0122DA  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 24820  0122DC  0E00               	movlw	0
 24821  0122DE  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 24822  0122E0  0E00               	movlw	0
 24823  0122E2  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 24824  0122E4  0012               	return	
 24825  0122E6                     __end_of_ExternalFlash_CapacityRead:
 24826                           	opt stack 0
 24827                           tosu	equ	0xFFF
 24828                           tosh	equ	0xFFE
 24829                           tosl	equ	0xFFD
 24830                           pclath	equ	0xFFA
 24831                           tblptru	equ	0xFF8
 24832                           tblptrh	equ	0xFF7
 24833                           tblptrl	equ	0xFF6
 24834                           tablat	equ	0xFF5
 24835                           prodh	equ	0xFF4
 24836                           prodl	equ	0xFF3
 24837                           intcon	equ	0xFF2
 24838                           postinc0	equ	0xFEE
 24839                           wreg	equ	0xFE8
 24840                           indf1	equ	0xFE7
 24841                           postdec1	equ	0xFE5
 24842                           plusw1	equ	0xFE3
 24843                           fsr1h	equ	0xFE2
 24844                           fsr1l	equ	0xFE1
 24845                           indf2	equ	0xFDF
 24846                           postinc2	equ	0xFDE
 24847                           postdec2	equ	0xFDD
 24848                           plusw2	equ	0xFDB
 24849                           fsr2h	equ	0xFDA
 24850                           fsr2l	equ	0xFD9
 24851                           status	equ	0xFD8
 24852                           
 24853 ;; *************** function _ExternalFlash_MediaInitialize *****************
 24854 ;; Defined at:
 24855 ;;		line 10 in file "external_flash.c"
 24856 ;; Parameters:    Size  Location     Type
 24857 ;;  config          2    0[BANK0 ] PTR void 
 24858 ;;		 -> NULL(0), 
 24859 ;; Auto vars:     Size  Location     Type
 24860 ;;		None
 24861 ;; Return value:  Size  Location     Type
 24862 ;;                  2    0[BANK0 ] PTR struct .
 24863 ;; Registers used:
 24864 ;;		wreg, status,2, status,0
 24865 ;; Tracked objects:
 24866 ;;		On entry : 0/0
 24867 ;;		On exit  : 0/0
 24868 ;;		Unchanged: 0/0
 24869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24870 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24873 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24874 ;;Total ram usage:        2 bytes
 24875 ;; Hardware stack levels used:    1
 24876 ;; Hardware stack levels required when called:   10
 24877 ;; This function calls:
 24878 ;;		Nothing
 24879 ;; This function is called by:
 24880 ;;		_USBMSDInit
 24881 ;;		_MSDProcessCommand
 24882 ;; This function uses a non-reentrant model
 24883 ;;
 24884                           
 24885                           	psect	text77
 24886  01220C                     __ptext77:
 24887                           	opt stack 0
 24888  01220C                     _ExternalFlash_MediaInitialize:
 24889                           	opt stack 0
 24890                           
 24891                           ; BSR set to: 0
 24892                           ;Skip over the trampoline to the duplicate function for level 2
 24893  01220C  B25B               	btfsc	btemp,1,c
 24894  01220E  EF51  F091         	goto	i2_ExternalFlash_MediaInitialize
 24895  012212                     _ExternalFlash_MediaInitialize$intlevel0:
 24896                           	opt stack 17
 24897                           
 24898                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 24899                           
 24900                           ;incstack = 0
 24901  012212  0101               	movlb	1	; () banked
 24902  012214  8188               	bsf	(_mediaInformation+1)& (0+255),0,b
 24903                           
 24904                           ; BSR set to: 1
 24905                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 24906  012216  0E02               	movlw	2
 24907  012218  6F8A               	movwf	(_mediaInformation+3)& (0+255),b
 24908  01221A  0E00               	movlw	0
 24909  01221C  6F89               	movwf	(_mediaInformation+2)& (0+255),b
 24910                           
 24911                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 24912  01221E  0E00               	movlw	0
 24913  012220  6F87               	movwf	_mediaInformation& (0+255),b
 24914                           
 24915                           ; BSR set to: 1
 24916                           ;external_flash.c: 15: return &mediaInformation;
 24917  012222  0E87               	movlw	low _mediaInformation
 24918  012224  0100               	movlb	0	; () banked
 24919  012226  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 24920  012228  0E01               	movlw	high _mediaInformation
 24921  01222A  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 24922  01222C  0012               	return	
 24923  01222E                     __end_of_ExternalFlash_MediaInitialize:
 24924                           	opt stack 0
 24925                           tosu	equ	0xFFF
 24926                           tosh	equ	0xFFE
 24927                           tosl	equ	0xFFD
 24928                           pclath	equ	0xFFA
 24929                           tblptru	equ	0xFF8
 24930                           tblptrh	equ	0xFF7
 24931                           tblptrl	equ	0xFF6
 24932                           tablat	equ	0xFF5
 24933                           prodh	equ	0xFF4
 24934                           prodl	equ	0xFF3
 24935                           intcon	equ	0xFF2
 24936                           postinc0	equ	0xFEE
 24937                           wreg	equ	0xFE8
 24938                           indf1	equ	0xFE7
 24939                           postdec1	equ	0xFE5
 24940                           plusw1	equ	0xFE3
 24941                           fsr1h	equ	0xFE2
 24942                           fsr1l	equ	0xFE1
 24943                           indf2	equ	0xFDF
 24944                           postinc2	equ	0xFDE
 24945                           postdec2	equ	0xFDD
 24946                           plusw2	equ	0xFDB
 24947                           fsr2h	equ	0xFDA
 24948                           fsr2l	equ	0xFD9
 24949                           status	equ	0xFD8
 24950                           
 24951 ;; *************** function _ExternalFlash_MediaDetect *****************
 24952 ;; Defined at:
 24953 ;;		line 29 in file "external_flash.c"
 24954 ;; Parameters:    Size  Location     Type
 24955 ;;  config          2    0[BANK0 ] PTR void 
 24956 ;;		 -> NULL(0), 
 24957 ;; Auto vars:     Size  Location     Type
 24958 ;;		None
 24959 ;; Return value:  Size  Location     Type
 24960 ;;                  1    wreg      unsigned char 
 24961 ;; Registers used:
 24962 ;;		wreg
 24963 ;; Tracked objects:
 24964 ;;		On entry : 0/0
 24965 ;;		On exit  : 0/0
 24966 ;;		Unchanged: 0/0
 24967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24968 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24971 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24972 ;;Total ram usage:        2 bytes
 24973 ;; Hardware stack levels used:    1
 24974 ;; Hardware stack levels required when called:   10
 24975 ;; This function calls:
 24976 ;;		Nothing
 24977 ;; This function is called by:
 24978 ;;		_USBMSDInit
 24979 ;;		_MSDProcessCommand
 24980 ;; This function uses a non-reentrant model
 24981 ;;
 24982                           
 24983                           	psect	text78
 24984  012354                     __ptext78:
 24985                           	opt stack 0
 24986  012354                     _ExternalFlash_MediaDetect:
 24987                           	opt stack 0
 24988                           
 24989                           ; BSR set to: 0
 24990                           ;Skip over the trampoline to the duplicate function for level 2
 24991  012354  B25B               	btfsc	btemp,1,c
 24992  012356  EFC2  F091         	goto	i2_ExternalFlash_MediaDetect
 24993  01235A                     _ExternalFlash_MediaDetect$intlevel0:
 24994                           	opt stack 17
 24995                           
 24996                           ;external_flash.c: 31: return 1;
 24997                           
 24998                           ;incstack = 0
 24999  01235A  0E01               	movlw	1
 25000  01235C  0012               	return	
 25001  01235E                     __end_of_ExternalFlash_MediaDetect:
 25002                           	opt stack 0
 25003                           tosu	equ	0xFFF
 25004                           tosh	equ	0xFFE
 25005                           tosl	equ	0xFFD
 25006                           pclath	equ	0xFFA
 25007                           tblptru	equ	0xFF8
 25008                           tblptrh	equ	0xFF7
 25009                           tblptrl	equ	0xFF6
 25010                           tablat	equ	0xFF5
 25011                           prodh	equ	0xFF4
 25012                           prodl	equ	0xFF3
 25013                           intcon	equ	0xFF2
 25014                           postinc0	equ	0xFEE
 25015                           wreg	equ	0xFE8
 25016                           indf1	equ	0xFE7
 25017                           postdec1	equ	0xFE5
 25018                           plusw1	equ	0xFE3
 25019                           fsr1h	equ	0xFE2
 25020                           fsr1l	equ	0xFE1
 25021                           indf2	equ	0xFDF
 25022                           postinc2	equ	0xFDE
 25023                           postdec2	equ	0xFDD
 25024                           plusw2	equ	0xFDB
 25025                           fsr2h	equ	0xFDA
 25026                           fsr2l	equ	0xFD9
 25027                           status	equ	0xFD8
 25028                           
 25029 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 25030 ;; Defined at:
 25031 ;;		line 73 in file "app_device_custom_hid.c"
 25032 ;; Parameters:    Size  Location     Type
 25033 ;;		None
 25034 ;; Auto vars:     Size  Location     Type
 25035 ;;  idx             1    0        unsigned char 
 25036 ;; Return value:  Size  Location     Type
 25037 ;;                  1    wreg      void 
 25038 ;; Registers used:
 25039 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25040 ;; Tracked objects:
 25041 ;;		On entry : 0/0
 25042 ;;		On exit  : 0/0
 25043 ;;		Unchanged: 0/0
 25044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25049 ;;Total ram usage:        0 bytes
 25050 ;; Hardware stack levels used:    1
 25051 ;; Hardware stack levels required when called:   19
 25052 ;; This function calls:
 25053 ;;		_USBTransferOnePacket
 25054 ;;		_api_parse
 25055 ;;		_api_prepare
 25056 ;; This function is called by:
 25057 ;;		_main
 25058 ;; This function uses a non-reentrant model
 25059 ;;
 25060                           
 25061                           	psect	text79
 25062  0107E0                     __ptext79:
 25063                           	opt stack 0
 25064  0107E0                     _APP_DeviceCustomHIDTasks:
 25065                           	opt stack 11
 25066                           
 25067                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 25068                           
 25069                           ;incstack = 0
 25070  0107E0  0E20               	movlw	32
 25071  0107E2  602B               	cpfslt	_USBDeviceState,c	;volatile
 25072  0107E4  D001               	goto	l937
 25073  0107E6  0012               	return	
 25074  0107E8                     l937:
 25075                           
 25076                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 25077  0107E8  B265               	btfsc	3941,1,c	;volatile
 25078  0107EA  0012               	return	
 25079                           
 25080                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 25081                           
 25082                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 25083  0107EC  0101               	movlb	1	; () banked
 25084  0107EE  5173               	movf	_USBOutHandle& (0+255),w,b
 25085  0107F0  1174               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 25086  0107F2  B4D8               	btfsc	status,2,c
 25087  0107F4  D006               	goto	u20290
 25088                           
 25089                           ; BSR set to: 1
 25090  0107F6  C173  FFD9         	movff	_USBOutHandle,fsr2l
 25091  0107FA  C174  FFDA         	movff	_USBOutHandle+1,fsr2h
 25092  0107FE  BEDF               	btfsc	indf2,7,c
 25093  010800  0012               	return	
 25094  010802                     u20290:
 25095                           
 25096                           ; BSR set to: 1
 25097                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 25098                           
 25099                           ; BSR set to: 1
 25100  010802  5171               	movf	_USBInHandle& (0+255),w,b
 25101  010804  1172               	iorwf	(_USBInHandle+1)& (0+255),w,b
 25102  010806  B4D8               	btfsc	status,2,c
 25103  010808  D006               	goto	u20310
 25104                           
 25105                           ; BSR set to: 1
 25106  01080A  C171  FFD9         	movff	_USBInHandle,fsr2l
 25107  01080E  C172  FFDA         	movff	_USBInHandle+1,fsr2h
 25108  010812  BEDF               	btfsc	indf2,7,c
 25109  010814  D01B               	goto	l943
 25110  010816                     u20310:
 25111                           
 25112                           ; BSR set to: 1
 25113                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 25114                           
 25115                           ; BSR set to: 1
 25116  010816  0E78               	movlw	low _ReceivedDataBuffer
 25117  010818  0100               	movlb	0	; () banked
 25118  01081A  6F76               	movwf	api_prepare@inBuffer& (0+255),b
 25119  01081C  0E02               	movlw	high _ReceivedDataBuffer
 25120  01081E  6F77               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 25121  010820  0E38               	movlw	low _ToSendDataBuffer
 25122  010822  6F78               	movwf	api_prepare@outBuffer& (0+255),b
 25123  010824  0E02               	movlw	high _ToSendDataBuffer
 25124  010826  6F79               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 25125  010828  EC74  F07D         	call	_api_prepare	;wreg free
 25126                           
 25127                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 25128  01082C  0E01               	movlw	1
 25129  01082E  0100               	movlb	0	; () banked
 25130  010830  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 25131  010832  0E38               	movlw	low _ToSendDataBuffer
 25132  010834  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 25133  010836  0E02               	movlw	high _ToSendDataBuffer
 25134  010838  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 25135  01083A  0E40               	movlw	64
 25136  01083C  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 25137  01083E  0E01               	movlw	1
 25138  010840  EC9F  F079         	call	_USBTransferOnePacket
 25139  010844  C060  F171         	movff	?_USBTransferOnePacket,_USBInHandle
 25140  010848  C061  F172         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 25141  01084C                     l943:
 25142                           
 25143                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 25144  01084C  0E78               	movlw	low _ReceivedDataBuffer
 25145  01084E  0100               	movlb	0	; () banked
 25146  010850  6F95               	movwf	api_parse@inBuffer& (0+255),b
 25147  010852  0E02               	movlw	high _ReceivedDataBuffer
 25148  010854  6F96               	movwf	(api_parse@inBuffer+1)& (0+255),b
 25149  010856  0E40               	movlw	64
 25150  010858  6F97               	movwf	api_parse@receivedDataLength& (0+255),b
 25151  01085A  0E38               	movlw	low _ToSendDataBuffer
 25152  01085C  6F98               	movwf	api_parse@outBuffer& (0+255),b
 25153  01085E  0E02               	movlw	high _ToSendDataBuffer
 25154  010860  6F99               	movwf	(api_parse@outBuffer+1)& (0+255),b
 25155  010862  ECDB  F075         	call	_api_parse	;wreg free
 25156                           
 25157                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 25158  010866  0E00               	movlw	0
 25159  010868  0100               	movlb	0	; () banked
 25160  01086A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 25161  01086C  0E78               	movlw	low _ReceivedDataBuffer
 25162  01086E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 25163  010870  0E02               	movlw	high _ReceivedDataBuffer
 25164  010872  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 25165  010874  0E40               	movlw	64
 25166  010876  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 25167  010878  0E01               	movlw	1
 25168  01087A  EC9F  F079         	call	_USBTransferOnePacket
 25169  01087E  C060  F173         	movff	?_USBTransferOnePacket,_USBOutHandle
 25170  010882  C061  F174         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 25171  010886  0012               	return	
 25172  010888                     __end_of_APP_DeviceCustomHIDTasks:
 25173                           	opt stack 0
 25174                           tosu	equ	0xFFF
 25175                           tosh	equ	0xFFE
 25176                           tosl	equ	0xFFD
 25177                           pclath	equ	0xFFA
 25178                           tblptru	equ	0xFF8
 25179                           tblptrh	equ	0xFF7
 25180                           tblptrl	equ	0xFF6
 25181                           tablat	equ	0xFF5
 25182                           prodh	equ	0xFF4
 25183                           prodl	equ	0xFF3
 25184                           intcon	equ	0xFF2
 25185                           postinc0	equ	0xFEE
 25186                           wreg	equ	0xFE8
 25187                           indf1	equ	0xFE7
 25188                           postdec1	equ	0xFE5
 25189                           plusw1	equ	0xFE3
 25190                           fsr1h	equ	0xFE2
 25191                           fsr1l	equ	0xFE1
 25192                           indf2	equ	0xFDF
 25193                           postinc2	equ	0xFDE
 25194                           postdec2	equ	0xFDD
 25195                           plusw2	equ	0xFDB
 25196                           fsr2h	equ	0xFDA
 25197                           fsr2l	equ	0xFD9
 25198                           status	equ	0xFD8
 25199                           
 25200 ;; *************** function _api_prepare *****************
 25201 ;; Defined at:
 25202 ;;		line 34 in file "api.c"
 25203 ;; Parameters:    Size  Location     Type
 25204 ;;  inBuffer        2   22[BANK0 ] PTR unsigned char 
 25205 ;;		 -> ReceivedDataBuffer(64), 
 25206 ;;  outBuffer       2   24[BANK0 ] PTR unsigned char 
 25207 ;;		 -> ToSendDataBuffer(64), 
 25208 ;; Auto vars:     Size  Location     Type
 25209 ;;  command         1   26[BANK0 ] enum E6715
 25210 ;; Return value:  Size  Location     Type
 25211 ;;                  1    wreg      void 
 25212 ;; Registers used:
 25213 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25214 ;; Tracked objects:
 25215 ;;		On entry : 0/0
 25216 ;;		On exit  : 0/0
 25217 ;;		Unchanged: 0/0
 25218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25219 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25220 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25222 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25223 ;;Total ram usage:        5 bytes
 25224 ;; Hardware stack levels used:    1
 25225 ;; Hardware stack levels required when called:   15
 25226 ;; This function calls:
 25227 ;;		__fill_buffer_get_bootloader_details
 25228 ;;		__fill_buffer_get_display
 25229 ;;		__fill_buffer_get_status
 25230 ;;		_memcpy
 25231 ;; This function is called by:
 25232 ;;		_APP_DeviceCustomHIDTasks
 25233 ;; This function uses a non-reentrant model
 25234 ;;
 25235                           
 25236                           	psect	text80
 25237  00FAE8                     __ptext80:
 25238                           	opt stack 0
 25239  00FAE8                     _api_prepare:
 25240                           	opt stack 14
 25241                           
 25242                           ;api.c: 36: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 25243                           
 25244                           ;incstack = 0
 25245  00FAE8  C076  FFD9         	movff	api_prepare@inBuffer,fsr2l
 25246  00FAEC  C077  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 25247  00FAF0  50DF               	movf	indf2,w,c
 25248  00FAF2  0100               	movlb	0	; () banked
 25249  00FAF4  6F7A               	movwf	api_prepare@command& (0+255),b
 25250                           
 25251                           ; BSR set to: 0
 25252                           ;api.c: 38: if(command>0x7F)
 25253  00FAF6  0E7F               	movlw	127
 25254  00FAF8  657A               	cpfsgt	api_prepare@command& (0+255),b
 25255  00FAFA  D051               	goto	l2171
 25256                           
 25257                           ; BSR set to: 0
 25258                           ;api.c: 45: outBuffer[0] = 0x99;
 25259                           
 25260                           ; BSR set to: 0
 25261                           
 25262                           ;api.c: 41: {;api.c: 44: default:
 25263                           
 25264                           ; BSR set to: 0
 25265                           ;api.c: 39: {;api.c: 40: switch(command)
 25266  00FAFC  C078  FFD9         	movff	api_prepare@outBuffer,fsr2l
 25267  00FB00  C079  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 25268  00FB04  0E99               	movlw	153
 25269  00FB06  6EDF               	movwf	indf2,c
 25270                           
 25271                           ; BSR set to: 0
 25272                           ;api.c: 46: outBuffer[1] = 0x99;
 25273  00FB08  EE20 F001          	lfsr	2,1
 25274  00FB0C  5178               	movf	api_prepare@outBuffer& (0+255),w,b
 25275  00FB0E  26D9               	addwf	fsr2l,f,c
 25276  00FB10  5179               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 25277  00FB12  22DA               	addwfc	fsr2h,f,c
 25278  00FB14  0E99               	movlw	153
 25279  00FB16  6EDF               	movwf	indf2,c
 25280                           
 25281                           ;api.c: 47: }
 25282  00FB18  0012               	return	
 25283  00FB1A                     
 25284                           ; BSR set to: 0
 25285                           ;api.c: 60: _fill_buffer_get_status(outBuffer);
 25286                           
 25287                           ; BSR set to: 0
 25288  00FB1A  C078  F074         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 25289  00FB1E  C079  F075         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 25290  00FB22  EC1E  F088         	call	__fill_buffer_get_status	;wreg free
 25291                           
 25292                           ;api.c: 61: break;
 25293  00FB26  0012               	return	
 25294  00FB28                     
 25295                           ;api.c: 65: _fill_buffer_get_display(outBuffer, 0);
 25296  00FB28  C078  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 25297  00FB2C  C079  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 25298  00FB30  0E00               	movlw	0
 25299  00FB32  0100               	movlb	0	; () banked
 25300  00FB34  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 25301  00FB36  ECE1  F081         	call	__fill_buffer_get_display	;wreg free
 25302                           
 25303                           ;api.c: 66: break;
 25304  00FB3A  0012               	return	
 25305  00FB3C                     
 25306                           ;api.c: 70: _fill_buffer_get_display(outBuffer, 1);
 25307  00FB3C  C078  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 25308  00FB40  C079  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 25309  00FB44  0E01               	movlw	1
 25310  00FB46  0100               	movlb	0	; () banked
 25311  00FB48  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 25312  00FB4A  ECE1  F081         	call	__fill_buffer_get_display	;wreg free
 25313                           
 25314                           ;api.c: 71: break;
 25315  00FB4E  0012               	return	
 25316  00FB50                     
 25317                           ;api.c: 75: _fill_buffer_get_bootloader_details(outBuffer);
 25318  00FB50  C078  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 25319  00FB54  C079  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 25320  00FB58  ECE3  F08F         	call	__fill_buffer_get_bootloader_details	;wreg free
 25321                           
 25322                           ;api.c: 76: break;
 25323  00FB5C  0012               	return	
 25324  00FB5E                     
 25325                           ;api.c: 80: memcpy(outBuffer, inBuffer, 64);
 25326  00FB5E  C078  F060         	movff	api_prepare@outBuffer,memcpy@d1
 25327  00FB62  C079  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 25328  00FB66  C076  F062         	movff	api_prepare@inBuffer,memcpy@s1
 25329  00FB6A  C077  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 25330  00FB6E  0E00               	movlw	0
 25331  00FB70  0100               	movlb	0	; () banked
 25332  00FB72  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25333  00FB74  0E40               	movlw	64
 25334  00FB76  6F64               	movwf	memcpy@n& (0+255),b
 25335  00FB78  EC63  F08A         	call	_memcpy	;wreg free
 25336                           
 25337                           ;api.c: 81: break;
 25338  00FB7C  0012               	return	
 25339  00FB7E                     
 25340                           ;api.c: 84: outBuffer[0] = 0x99;
 25341  00FB7E  C078  FFD9         	movff	api_prepare@outBuffer,fsr2l
 25342  00FB82  C079  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 25343  00FB86  0E99               	movlw	153
 25344  00FB88  6EDF               	movwf	indf2,c
 25345                           
 25346                           ;api.c: 85: outBuffer[1] = 0x99;
 25347  00FB8A  0100               	movlb	0	; () banked
 25348  00FB8C  EE20 F001          	lfsr	2,1
 25349  00FB90  5178               	movf	api_prepare@outBuffer& (0+255),w,b
 25350  00FB92  26D9               	addwf	fsr2l,f,c
 25351  00FB94  5179               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 25352  00FB96  22DA               	addwfc	fsr2h,f,c
 25353  00FB98  0E99               	movlw	153
 25354  00FB9A  6EDF               	movwf	indf2,c
 25355                           
 25356                           ;api.c: 86: }
 25357  00FB9C  0012               	return	
 25358  00FB9E                     l2171:
 25359                           
 25360                           ; BSR set to: 0
 25361                           
 25362                           ; BSR set to: 0
 25363  00FB9E  517A               	movf	api_prepare@command& (0+255),w,b
 25364                           
 25365                           ; Switch size 1, requested type "space"
 25366                           ; Number of cases is 6, Range of values is 0 to 32
 25367                           ; switch strategies available:
 25368                           ; Name         Instructions Cycles
 25369                           ; simple_byte           19    10 (average)
 25370                           ;	Chosen strategy is simple_byte
 25371  00FBA0  0A00               	xorlw	0	; case 0
 25372  00FBA2  B4D8               	btfsc	status,2,c
 25373  00FBA4  0012               	return	
 25374  00FBA6  0A10               	xorlw	16	; case 16
 25375  00FBA8  B4D8               	btfsc	status,2,c
 25376  00FBAA  D7B7               	goto	l2174
 25377  00FBAC  0A01               	xorlw	1	; case 17
 25378  00FBAE  B4D8               	btfsc	status,2,c
 25379  00FBB0  D7BB               	goto	l2175
 25380  00FBB2  0A03               	xorlw	3	; case 18
 25381  00FBB4  B4D8               	btfsc	status,2,c
 25382  00FBB6  D7C2               	goto	l2176
 25383  00FBB8  0A01               	xorlw	1	; case 19
 25384  00FBBA  B4D8               	btfsc	status,2,c
 25385  00FBBC  D7C9               	goto	l2177
 25386  00FBBE  0A33               	xorlw	51	; case 32
 25387  00FBC0  B4D8               	btfsc	status,2,c
 25388  00FBC2  D7CD               	goto	l2178
 25389  00FBC4  D7DC               	goto	l2179
 25390  00FBC6                     __end_of_api_prepare:
 25391                           	opt stack 0
 25392                           tosu	equ	0xFFF
 25393                           tosh	equ	0xFFE
 25394                           tosl	equ	0xFFD
 25395                           pclath	equ	0xFFA
 25396                           tblptru	equ	0xFF8
 25397                           tblptrh	equ	0xFF7
 25398                           tblptrl	equ	0xFF6
 25399                           tablat	equ	0xFF5
 25400                           prodh	equ	0xFF4
 25401                           prodl	equ	0xFF3
 25402                           intcon	equ	0xFF2
 25403                           postinc0	equ	0xFEE
 25404                           wreg	equ	0xFE8
 25405                           indf1	equ	0xFE7
 25406                           postdec1	equ	0xFE5
 25407                           plusw1	equ	0xFE3
 25408                           fsr1h	equ	0xFE2
 25409                           fsr1l	equ	0xFE1
 25410                           indf2	equ	0xFDF
 25411                           postinc2	equ	0xFDE
 25412                           postdec2	equ	0xFDD
 25413                           plusw2	equ	0xFDB
 25414                           fsr2h	equ	0xFDA
 25415                           fsr2l	equ	0xFD9
 25416                           status	equ	0xFD8
 25417                           
 25418 ;; *************** function _memcpy *****************
 25419 ;; Defined at:
 25420 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 25421 ;; Parameters:    Size  Location     Type
 25422 ;;  d1              2    0[BANK0 ] PTR void 
 25423 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 25424 ;;		 -> msd_buffer(512), SetupPkt(8), 
 25425 ;;  s1              2    2[BANK0 ] PTR const void 
 25426 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 25427 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 25428 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 25429 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 25430 ;;		 -> dc_main(80), ReceivedDataBuffer(64), inq_resp(36), RAM(3759), 
 25431 ;;  n               2    4[BANK0 ] unsigned int 
 25432 ;; Auto vars:     Size  Location     Type
 25433 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 25434 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 25435 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 25436 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 25437 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 25438 ;;		 -> dc_main(80), ReceivedDataBuffer(64), inq_resp(36), RAM(3759), 
 25439 ;;  d               2    7[BANK0 ] PTR unsigned char 
 25440 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 25441 ;;		 -> msd_buffer(512), SetupPkt(8), 
 25442 ;;  tmp             1    6[BANK0 ] unsigned char 
 25443 ;; Return value:  Size  Location     Type
 25444 ;;                  2    0[BANK0 ] PTR void 
 25445 ;; Registers used:
 25446 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 25447 ;; Tracked objects:
 25448 ;;		On entry : 0/0
 25449 ;;		On exit  : 0/0
 25450 ;;		Unchanged: 0/0
 25451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25452 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25453 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25455 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25456 ;;Total ram usage:       11 bytes
 25457 ;; Hardware stack levels used:    1
 25458 ;; Hardware stack levels required when called:   10
 25459 ;; This function calls:
 25460 ;;		Nothing
 25461 ;; This function is called by:
 25462 ;;		_MSDProcessCommandMediaPresent
 25463 ;;		_display_prepare
 25464 ;;		__flash_set_page_size
 25465 ;;		_api_prepare
 25466 ;;		_fat_create_file
 25467 ;; This function uses a non-reentrant model
 25468 ;;
 25469                           
 25470                           	psect	text81
 25471  0114C6                     __ptext81:
 25472                           	opt stack 0
 25473  0114C6                     _memcpy:
 25474                           	opt stack 17
 25475                           
 25476                           ;incstack = 0
 25477  0114C6  C062  F069         	movff	memcpy@s1,memcpy@s
 25478  0114CA  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 25479  0114CE  C060  F067         	movff	memcpy@d1,memcpy@d
 25480  0114D2  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 25481  0114D6  D01D               	goto	l3326
 25482  0114D8                     l17084:
 25483  0114D8  C069  FFF6         	movff	memcpy@s,tblptrl
 25484  0114DC  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 25485  0114E0  0E00               	movlw	low (__mediumconst shr (0+16))
 25486  0114E2  6EF8               	movwf	tblptru,c
 25487  0114E4  0E0E               	movlw	(high __ramtop+-1)
 25488  0114E6  64F7               	cpfsgt	tblptrh,c
 25489  0114E8  D003               	bra	u16657
 25490  0114EA  0008               	tblrd		*
 25491  0114EC  50F5               	movf	tablat,w,c
 25492  0114EE  D005               	bra	u16650
 25493  0114F0                     u16657:
 25494  0114F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 25495  0114F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 25496  0114F8  50EF               	movf	indf0,w,c
 25497  0114FA                     u16650:
 25498  0114FA  0100               	movlb	0	; () banked
 25499  0114FC  6F66               	movwf	memcpy@tmp& (0+255),b
 25500                           
 25501                           ; BSR set to: 0
 25502  0114FE  4B69               	infsnz	memcpy@s& (0+255),f,b
 25503  011500  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 25504                           
 25505                           ; BSR set to: 0
 25506  011502  C067  FFD9         	movff	memcpy@d,fsr2l
 25507  011506  C068  FFDA         	movff	memcpy@d+1,fsr2h
 25508  01150A  C066  FFDF         	movff	memcpy@tmp,indf2
 25509                           
 25510                           ; BSR set to: 0
 25511  01150E  4B67               	infsnz	memcpy@d& (0+255),f,b
 25512  011510  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 25513  011512                     l3326:
 25514                           
 25515                           ; BSR set to: 0
 25516  011512  0100               	movlb	0	; () banked
 25517  011514  0764               	decf	memcpy@n& (0+255),f,b
 25518  011516  A0D8               	btfss	status,0,c
 25519  011518  0765               	decf	(memcpy@n+1)& (0+255),f,b
 25520  01151A  2964               	incf	memcpy@n& (0+255),w,b
 25521  01151C  E1DD               	bnz	l17084
 25522  01151E  2965               	incf	(memcpy@n+1)& (0+255),w,b
 25523  011520  B4D8               	btfsc	status,2,c
 25524  011522  0012               	return	
 25525  011524  D7D9               	goto	l3327
 25526  011526                     __end_of_memcpy:
 25527                           	opt stack 0
 25528                           tosu	equ	0xFFF
 25529                           tosh	equ	0xFFE
 25530                           tosl	equ	0xFFD
 25531                           pclath	equ	0xFFA
 25532                           tblptru	equ	0xFF8
 25533                           tblptrh	equ	0xFF7
 25534                           tblptrl	equ	0xFF6
 25535                           tablat	equ	0xFF5
 25536                           prodh	equ	0xFF4
 25537                           prodl	equ	0xFF3
 25538                           intcon	equ	0xFF2
 25539                           indf0	equ	0xFEF
 25540                           postinc0	equ	0xFEE
 25541                           fsr0h	equ	0xFEA
 25542                           fsr0l	equ	0xFE9
 25543                           wreg	equ	0xFE8
 25544                           indf1	equ	0xFE7
 25545                           postdec1	equ	0xFE5
 25546                           plusw1	equ	0xFE3
 25547                           fsr1h	equ	0xFE2
 25548                           fsr1l	equ	0xFE1
 25549                           indf2	equ	0xFDF
 25550                           postinc2	equ	0xFDE
 25551                           postdec2	equ	0xFDD
 25552                           plusw2	equ	0xFDB
 25553                           fsr2h	equ	0xFDA
 25554                           fsr2l	equ	0xFD9
 25555                           status	equ	0xFD8
 25556                           
 25557 ;; *************** function __fill_buffer_get_status *****************
 25558 ;; Defined at:
 25559 ;;		line 167 in file "api.c"
 25560 ;; Parameters:    Size  Location     Type
 25561 ;;  outBuffer       2   20[BANK0 ] PTR unsigned char 
 25562 ;;		 -> ToSendDataBuffer(64), 
 25563 ;; Auto vars:     Size  Location     Type
 25564 ;;		None
 25565 ;; Return value:  Size  Location     Type
 25566 ;;                  1    wreg      void 
 25567 ;; Registers used:
 25568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25569 ;; Tracked objects:
 25570 ;;		On entry : 0/0
 25571 ;;		On exit  : 0/0
 25572 ;;		Unchanged: 0/0
 25573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25574 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25577 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25578 ;;Total ram usage:        2 bytes
 25579 ;; Hardware stack levels used:    1
 25580 ;; Hardware stack levels required when called:   14
 25581 ;; This function calls:
 25582 ;;		_flash_is_busy
 25583 ;; This function is called by:
 25584 ;;		_api_prepare
 25585 ;; This function uses a non-reentrant model
 25586 ;;
 25587                           
 25588                           	psect	text82
 25589  01103C                     __ptext82:
 25590                           	opt stack 0
 25591  01103C                     __fill_buffer_get_status:
 25592                           	opt stack 14
 25593                           
 25594                           ;api.c: 170: outBuffer[0] = DATAREQUEST_GET_STATUS;
 25595                           
 25596                           ; BSR set to: 0
 25597                           ;incstack = 0
 25598  01103C  C074  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 25599  011040  C075  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 25600  011044  0E10               	movlw	16
 25601  011046  6EDF               	movwf	indf2,c
 25602                           
 25603                           ;api.c: 173: outBuffer[1] = 0x62A1 >> 8;
 25604  011048  0100               	movlb	0	; () banked
 25605  01104A  EE20 F001          	lfsr	2,1
 25606  01104E  5174               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 25607  011050  26D9               	addwf	fsr2l,f,c
 25608  011052  5175               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 25609  011054  22DA               	addwfc	fsr2h,f,c
 25610  011056  0E62               	movlw	98
 25611  011058  6EDF               	movwf	indf2,c
 25612                           
 25613                           ; BSR set to: 0
 25614                           ;api.c: 174: outBuffer[2] = (uint8_t) 0x62A1;
 25615  01105A  EE20 F002          	lfsr	2,2
 25616  01105E  5174               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 25617  011060  26D9               	addwf	fsr2l,f,c
 25618  011062  5175               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 25619  011064  22DA               	addwfc	fsr2h,f,c
 25620  011066  0EA1               	movlw	161
 25621  011068  6EDF               	movwf	indf2,c
 25622                           
 25623                           ; BSR set to: 0
 25624                           ;api.c: 177: outBuffer[3] = (uint8_t) flash_is_busy();
 25625  01106A  EE20 F003          	lfsr	2,3
 25626  01106E  5174               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 25627  011070  26D9               	addwf	fsr2l,f,c
 25628  011072  5175               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 25629  011074  22DA               	addwfc	fsr2h,f,c
 25630  011076  EC9F  F091         	call	_flash_is_busy	;wreg free
 25631  01107A  6EDF               	movwf	indf2,c
 25632                           
 25633                           ;api.c: 180: outBuffer[4] = 0x00;
 25634  01107C  0100               	movlb	0	; () banked
 25635  01107E  EE20 F004          	lfsr	2,4
 25636  011082  5174               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 25637  011084  26D9               	addwf	fsr2l,f,c
 25638  011086  5175               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 25639  011088  22DA               	addwfc	fsr2h,f,c
 25640  01108A  0E00               	movlw	0
 25641  01108C  6EDF               	movwf	indf2,c
 25642                           
 25643                           ; BSR set to: 0
 25644                           ;api.c: 181: outBuffer[5] = 0x01;
 25645  01108E  EE20 F005          	lfsr	2,5
 25646  011092  5174               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 25647  011094  26D9               	addwf	fsr2l,f,c
 25648  011096  5175               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 25649  011098  22DA               	addwfc	fsr2h,f,c
 25650  01109A  0E01               	movlw	1
 25651  01109C  6EDF               	movwf	indf2,c
 25652                           
 25653                           ; BSR set to: 0
 25654                           ;api.c: 182: outBuffer[6] = 0x00;
 25655  01109E  EE20 F006          	lfsr	2,6
 25656  0110A2  5174               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 25657  0110A4  26D9               	addwf	fsr2l,f,c
 25658  0110A6  5175               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 25659  0110A8  22DA               	addwfc	fsr2h,f,c
 25660  0110AA  0E00               	movlw	0
 25661  0110AC  6EDF               	movwf	indf2,c
 25662                           
 25663                           ; BSR set to: 0
 25664  0110AE  0012               	return		;funcret
 25665  0110B0                     __end_of__fill_buffer_get_status:
 25666                           	opt stack 0
 25667                           tosu	equ	0xFFF
 25668                           tosh	equ	0xFFE
 25669                           tosl	equ	0xFFD
 25670                           pclath	equ	0xFFA
 25671                           tblptru	equ	0xFF8
 25672                           tblptrh	equ	0xFF7
 25673                           tblptrl	equ	0xFF6
 25674                           tablat	equ	0xFF5
 25675                           prodh	equ	0xFF4
 25676                           prodl	equ	0xFF3
 25677                           intcon	equ	0xFF2
 25678                           indf0	equ	0xFEF
 25679                           postinc0	equ	0xFEE
 25680                           fsr0h	equ	0xFEA
 25681                           fsr0l	equ	0xFE9
 25682                           wreg	equ	0xFE8
 25683                           indf1	equ	0xFE7
 25684                           postdec1	equ	0xFE5
 25685                           plusw1	equ	0xFE3
 25686                           fsr1h	equ	0xFE2
 25687                           fsr1l	equ	0xFE1
 25688                           indf2	equ	0xFDF
 25689                           postinc2	equ	0xFDE
 25690                           postdec2	equ	0xFDD
 25691                           plusw2	equ	0xFDB
 25692                           fsr2h	equ	0xFDA
 25693                           fsr2l	equ	0xFD9
 25694                           status	equ	0xFD8
 25695                           
 25696 ;; *************** function _flash_is_busy *****************
 25697 ;; Defined at:
 25698 ;;		line 373 in file "flash.c"
 25699 ;; Parameters:    Size  Location     Type
 25700 ;;		None
 25701 ;; Auto vars:     Size  Location     Type
 25702 ;;  result          1   19[BANK0 ] unsigned char 
 25703 ;; Return value:  Size  Location     Type
 25704 ;;                  1    wreg      unsigned char 
 25705 ;; Registers used:
 25706 ;;		wreg, status,2, status,0, cstack
 25707 ;; Tracked objects:
 25708 ;;		On entry : 0/0
 25709 ;;		On exit  : 0/0
 25710 ;;		Unchanged: 0/0
 25711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25713 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25715 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25716 ;;Total ram usage:        1 bytes
 25717 ;; Hardware stack levels used:    1
 25718 ;; Hardware stack levels required when called:   13
 25719 ;; This function calls:
 25720 ;;		__flash_is_busy
 25721 ;; This function is called by:
 25722 ;;		__fill_buffer_get_status
 25723 ;; This function uses a non-reentrant model
 25724 ;;
 25725                           
 25726                           	psect	text83
 25727  01233E                     __ptext83:
 25728                           	opt stack 0
 25729  01233E                     _flash_is_busy:
 25730                           	opt stack 14
 25731                           
 25732                           ;flash.c: 375: uint8_t result;;flash.c: 378: result = _flash_is_busy();
 25733                           
 25734                           ; BSR set to: 0
 25735                           ;incstack = 0
 25736  01233E  ECE3  F090         	call	__flash_is_busy	;wreg free
 25737  012342  0100               	movlb	0	; () banked
 25738  012344  6F73               	movwf	flash_is_busy@result& (0+255),b
 25739                           
 25740                           ; BSR set to: 0
 25741                           ;flash.c: 381: return result;
 25742  012346  5173               	movf	flash_is_busy@result& (0+255),w,b
 25743  012348  0012               	return	
 25744  01234A                     __end_of_flash_is_busy:
 25745                           	opt stack 0
 25746                           tosu	equ	0xFFF
 25747                           tosh	equ	0xFFE
 25748                           tosl	equ	0xFFD
 25749                           pclath	equ	0xFFA
 25750                           tblptru	equ	0xFF8
 25751                           tblptrh	equ	0xFF7
 25752                           tblptrl	equ	0xFF6
 25753                           tablat	equ	0xFF5
 25754                           prodh	equ	0xFF4
 25755                           prodl	equ	0xFF3
 25756                           intcon	equ	0xFF2
 25757                           indf0	equ	0xFEF
 25758                           postinc0	equ	0xFEE
 25759                           fsr0h	equ	0xFEA
 25760                           fsr0l	equ	0xFE9
 25761                           wreg	equ	0xFE8
 25762                           indf1	equ	0xFE7
 25763                           postdec1	equ	0xFE5
 25764                           plusw1	equ	0xFE3
 25765                           fsr1h	equ	0xFE2
 25766                           fsr1l	equ	0xFE1
 25767                           indf2	equ	0xFDF
 25768                           postinc2	equ	0xFDE
 25769                           postdec2	equ	0xFDD
 25770                           plusw2	equ	0xFDB
 25771                           fsr2h	equ	0xFDA
 25772                           fsr2l	equ	0xFD9
 25773                           status	equ	0xFD8
 25774                           
 25775 ;; *************** function __fill_buffer_get_display *****************
 25776 ;; Defined at:
 25777 ;;		line 197 in file "api.c"
 25778 ;; Parameters:    Size  Location     Type
 25779 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 25780 ;;		 -> ToSendDataBuffer(64), 
 25781 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 25782 ;; Auto vars:     Size  Location     Type
 25783 ;;  position        1   15[BANK0 ] unsigned char 
 25784 ;;  start_line      1   14[BANK0 ] unsigned char 
 25785 ;;  line            1   13[BANK0 ] unsigned char 
 25786 ;;  cntr            1   12[BANK0 ] unsigned char 
 25787 ;; Return value:  Size  Location     Type
 25788 ;;                  1    wreg      void 
 25789 ;; Registers used:
 25790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25791 ;; Tracked objects:
 25792 ;;		On entry : 0/0
 25793 ;;		On exit  : 0/0
 25794 ;;		Unchanged: 0/0
 25795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25796 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25797 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25798 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25799 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25800 ;;Total ram usage:       12 bytes
 25801 ;; Hardware stack levels used:    1
 25802 ;; Hardware stack levels required when called:   11
 25803 ;; This function calls:
 25804 ;;		_display_get_character
 25805 ;; This function is called by:
 25806 ;;		_api_prepare
 25807 ;; This function uses a non-reentrant model
 25808 ;;
 25809                           
 25810                           	psect	text84
 25811  0103C2                     __ptext84:
 25812                           	opt stack 0
 25813  0103C2                     __fill_buffer_get_display:
 25814                           	opt stack 17
 25815                           
 25816                           ;api.c: 199: uint8_t cntr;;api.c: 200: uint8_t line;;api.c: 201: uint8_t start_line;;api
      +                          .c: 202: uint8_t position;;api.c: 205: if(secondHalf)
 25817                           
 25818                           ; BSR set to: 0
 25819                           ;incstack = 0
 25820  0103C2  0100               	movlb	0	; () banked
 25821  0103C4  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 25822  0103C6  B4D8               	btfsc	status,2,c
 25823  0103C8  D006               	goto	l2202
 25824                           
 25825                           ; BSR set to: 0
 25826                           ;api.c: 206: {;api.c: 207: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 25827  0103CA  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 25828  0103CE  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 25829  0103D2  0E12               	movlw	18
 25830  0103D4  D005               	goto	L52
 25831  0103D6                     l2202:
 25832                           
 25833                           ; BSR set to: 0
 25834                           ;api.c: 209: else;api.c: 210: {;api.c: 211: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 25835                           
 25836                           ; BSR set to: 0
 25837  0103D6  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 25838  0103DA  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 25839  0103DE  0E11               	movlw	17
 25840  0103E0                     L52:
 25841  0103E0  6EDF               	movwf	indf2,c
 25842                           
 25843                           ; BSR set to: 0
 25844                           ;api.c: 212: };api.c: 215: outBuffer[1] = 0x62A1 >> 8;
 25845                           
 25846                           ; BSR set to: 0
 25847  0103E2  EE20 F001          	lfsr	2,1
 25848  0103E6  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 25849  0103E8  26D9               	addwf	fsr2l,f,c
 25850  0103EA  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 25851  0103EC  22DA               	addwfc	fsr2h,f,c
 25852  0103EE  0E62               	movlw	98
 25853  0103F0  6EDF               	movwf	indf2,c
 25854                           
 25855                           ; BSR set to: 0
 25856                           ;api.c: 216: outBuffer[2] = (uint8_t) 0x62A1;
 25857  0103F2  EE20 F002          	lfsr	2,2
 25858  0103F6  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 25859  0103F8  26D9               	addwf	fsr2l,f,c
 25860  0103FA  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 25861  0103FC  22DA               	addwfc	fsr2h,f,c
 25862  0103FE  0EA1               	movlw	161
 25863  010400  6EDF               	movwf	indf2,c
 25864                           
 25865                           ; BSR set to: 0
 25866                           ;api.c: 219: cntr = 3;
 25867  010402  0E03               	movlw	3
 25868  010404  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 25869                           
 25870                           ; BSR set to: 0
 25871                           ;api.c: 220: if(secondHalf)
 25872  010406  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 25873  010408  B4D8               	btfsc	status,2,c
 25874  01040A  D002               	goto	l2204
 25875                           
 25876                           ; BSR set to: 0
 25877                           ;api.c: 221: {;api.c: 222: start_line = 2;
 25878  01040C  0E02               	movlw	2
 25879  01040E  D001               	goto	L53
 25880  010410                     l2204:
 25881                           
 25882                           ; BSR set to: 0
 25883                           ;api.c: 224: else;api.c: 225: {;api.c: 226: start_line = 0;
 25884                           
 25885                           ; BSR set to: 0
 25886  010410  0E00               	movlw	0
 25887  010412                     L53:
 25888  010412  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 25889                           
 25890                           ; BSR set to: 0
 25891                           ;api.c: 227: };api.c: 228: for(line=start_line; line<start_line+2; ++line)
 25892                           
 25893                           ; BSR set to: 0
 25894  010414  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 25895  010418  D01B               	goto	l2206
 25896  01041A                     
 25897                           ; BSR set to: 0
 25898                           ;api.c: 229: {;api.c: 230: for(position=0; position<20; ++position)
 25899                           
 25900                           ; BSR set to: 0
 25901  01041A  0E00               	movlw	0
 25902  01041C  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 25903  01041E                     l19110:
 25904                           
 25905                           ; BSR set to: 0
 25906  01041E  0E13               	movlw	19
 25907  010420  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 25908  010422  D001               	goto	l2208
 25909  010424  D014               	goto	u18950
 25910  010426                     l2208:
 25911                           
 25912                           ; BSR set to: 0
 25913                           ;api.c: 231: {;api.c: 232: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 25914                           
 25915                           ; BSR set to: 0
 25916  010426  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 25917  01042A  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 25918  01042C  EC2A  F090         	call	_display_get_character
 25919  010430  0100               	movlb	0	; () banked
 25920  010432  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 25921  010434  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 25922  010436  0D01               	mullw	1
 25923  010438  50F3               	movf	prodl,w,c
 25924  01043A  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 25925  01043C  6ED9               	movwf	fsr2l,c
 25926  01043E  50F4               	movf	prodh,w,c
 25927  010440  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 25928  010442  6EDA               	movwf	fsr2h,c
 25929  010444  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 25930                           
 25931                           ; BSR set to: 0
 25932                           ;api.c: 233: ++cntr;
 25933  010448  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 25934                           
 25935                           ; BSR set to: 0
 25936  01044A  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 25937  01044C  D7E8               	goto	l19110
 25938  01044E                     u18950:
 25939                           
 25940                           ; BSR set to: 0
 25941                           
 25942                           ; BSR set to: 0
 25943  01044E  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 25944  010450                     l2206:
 25945                           
 25946                           ; BSR set to: 0
 25947                           
 25948                           ; BSR set to: 0
 25949  010450  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 25950  010452  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 25951  010454  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 25952  010456  0E02               	movlw	2
 25953  010458  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 25954  01045A  0E00               	movlw	0
 25955  01045C  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 25956  01045E  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 25957  010460  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 25958  010462  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 25959  010464  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 25960  010466  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 25961  010468  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 25962  01046A  0A80               	xorlw	128
 25963  01046C  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 25964  01046E  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 25965  010470  0A80               	xorlw	128
 25966  010472  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 25967  010474  B0D8               	btfsc	status,0,c
 25968  010476  0012               	return	
 25969  010478  D7D0               	goto	l2207
 25970  01047A                     __end_of__fill_buffer_get_display:
 25971                           	opt stack 0
 25972                           tosu	equ	0xFFF
 25973                           tosh	equ	0xFFE
 25974                           tosl	equ	0xFFD
 25975                           pclath	equ	0xFFA
 25976                           tblptru	equ	0xFF8
 25977                           tblptrh	equ	0xFF7
 25978                           tblptrl	equ	0xFF6
 25979                           tablat	equ	0xFF5
 25980                           prodh	equ	0xFF4
 25981                           prodl	equ	0xFF3
 25982                           intcon	equ	0xFF2
 25983                           indf0	equ	0xFEF
 25984                           postinc0	equ	0xFEE
 25985                           fsr0h	equ	0xFEA
 25986                           fsr0l	equ	0xFE9
 25987                           wreg	equ	0xFE8
 25988                           indf1	equ	0xFE7
 25989                           postdec1	equ	0xFE5
 25990                           plusw1	equ	0xFE3
 25991                           fsr1h	equ	0xFE2
 25992                           fsr1l	equ	0xFE1
 25993                           indf2	equ	0xFDF
 25994                           postinc2	equ	0xFDE
 25995                           postdec2	equ	0xFDD
 25996                           plusw2	equ	0xFDB
 25997                           fsr2h	equ	0xFDA
 25998                           fsr2l	equ	0xFD9
 25999                           status	equ	0xFD8
 26000                           
 26001 ;; *************** function _display_get_character *****************
 26002 ;; Defined at:
 26003 ;;		line 580 in file "display.c"
 26004 ;; Parameters:    Size  Location     Type
 26005 ;;  line            1    wreg     unsigned char 
 26006 ;;  position        1    0[BANK0 ] unsigned char 
 26007 ;; Auto vars:     Size  Location     Type
 26008 ;;  line            1    3[BANK0 ] unsigned char 
 26009 ;; Return value:  Size  Location     Type
 26010 ;;                  1    wreg      unsigned char 
 26011 ;; Registers used:
 26012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26013 ;; Tracked objects:
 26014 ;;		On entry : 0/0
 26015 ;;		On exit  : 0/0
 26016 ;;		Unchanged: 0/0
 26017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26018 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26019 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26020 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26021 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26022 ;;Total ram usage:        4 bytes
 26023 ;; Hardware stack levels used:    1
 26024 ;; Hardware stack levels required when called:   10
 26025 ;; This function calls:
 26026 ;;		Nothing
 26027 ;; This function is called by:
 26028 ;;		__fill_buffer_get_display
 26029 ;; This function uses a non-reentrant model
 26030 ;;
 26031                           
 26032                           	psect	text85
 26033  012054                     __ptext85:
 26034                           	opt stack 0
 26035  012054                     _display_get_character:
 26036                           	opt stack 17
 26037                           
 26038                           ; BSR set to: 0
 26039                           ;incstack = 0
 26040                           ;display_get_character@line stored from wreg
 26041  012054  0100               	movlb	0	; () banked
 26042  012056  6F63               	movwf	display_get_character@line& (0+255),b
 26043                           
 26044                           ;display.c: 582: return display_content[line][position];
 26045  012058  0100               	movlb	0	; () banked
 26046  01205A  5163               	movf	display_get_character@line& (0+255),w,b
 26047  01205C  0D14               	mullw	20
 26048  01205E  0EAD               	movlw	low _display_content
 26049  012060  6F61               	movwf	??_display_get_character& (0+255),b
 26050  012062  0E01               	movlw	high _display_content
 26051  012064  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 26052  012066  50F3               	movf	prodl,w,c
 26053  012068  2761               	addwf	??_display_get_character& (0+255),f,b
 26054  01206A  50F4               	movf	prodh,w,c
 26055  01206C  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 26056  01206E  5160               	movf	display_get_character@position& (0+255),w,b
 26057  012070  0D01               	mullw	1
 26058  012072  50F3               	movf	prodl,w,c
 26059  012074  2561               	addwf	??_display_get_character& (0+255),w,b
 26060  012076  6ED9               	movwf	fsr2l,c
 26061  012078  50F4               	movf	prodh,w,c
 26062  01207A  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 26063  01207C  6EDA               	movwf	fsr2h,c
 26064  01207E  50DF               	movf	indf2,w,c
 26065  012080  0012               	return	
 26066  012082                     __end_of_display_get_character:
 26067                           	opt stack 0
 26068                           tosu	equ	0xFFF
 26069                           tosh	equ	0xFFE
 26070                           tosl	equ	0xFFD
 26071                           pclath	equ	0xFFA
 26072                           tblptru	equ	0xFF8
 26073                           tblptrh	equ	0xFF7
 26074                           tblptrl	equ	0xFF6
 26075                           tablat	equ	0xFF5
 26076                           prodh	equ	0xFF4
 26077                           prodl	equ	0xFF3
 26078                           intcon	equ	0xFF2
 26079                           indf0	equ	0xFEF
 26080                           postinc0	equ	0xFEE
 26081                           fsr0h	equ	0xFEA
 26082                           fsr0l	equ	0xFE9
 26083                           wreg	equ	0xFE8
 26084                           indf1	equ	0xFE7
 26085                           postdec1	equ	0xFE5
 26086                           plusw1	equ	0xFE3
 26087                           fsr1h	equ	0xFE2
 26088                           fsr1l	equ	0xFE1
 26089                           indf2	equ	0xFDF
 26090                           postinc2	equ	0xFDE
 26091                           postdec2	equ	0xFDD
 26092                           plusw2	equ	0xFDB
 26093                           fsr2h	equ	0xFDA
 26094                           fsr2l	equ	0xFD9
 26095                           status	equ	0xFD8
 26096                           
 26097 ;; *************** function __fill_buffer_get_bootloader_details *****************
 26098 ;; Defined at:
 26099 ;;		line 238 in file "api.c"
 26100 ;; Parameters:    Size  Location     Type
 26101 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 26102 ;;		 -> ToSendDataBuffer(64), 
 26103 ;; Auto vars:     Size  Location     Type
 26104 ;;  buffer_large    4    0        unsigned long 
 26105 ;;  buffer_small    2    0        unsigned int 
 26106 ;;  data_length     1    0        unsigned char 
 26107 ;;  cntr            1    0        unsigned char 
 26108 ;; Return value:  Size  Location     Type
 26109 ;;                  1    wreg      void 
 26110 ;; Registers used:
 26111 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26112 ;; Tracked objects:
 26113 ;;		On entry : 0/0
 26114 ;;		On exit  : 0/0
 26115 ;;		Unchanged: 0/0
 26116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26117 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26120 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26121 ;;Total ram usage:        2 bytes
 26122 ;; Hardware stack levels used:    1
 26123 ;; Hardware stack levels required when called:   10
 26124 ;; This function calls:
 26125 ;;		Nothing
 26126 ;; This function is called by:
 26127 ;;		_api_prepare
 26128 ;; This function uses a non-reentrant model
 26129 ;;
 26130                           
 26131                           	psect	text86
 26132  011FC6                     __ptext86:
 26133                           	opt stack 0
 26134  011FC6                     __fill_buffer_get_bootloader_details:
 26135                           	opt stack 18
 26136                           
 26137                           ;api.c: 240: uint8_t cntr;;api.c: 241: uint8_t data_length;;api.c: 242: uint16_t buffer_
      +                          small;;api.c: 243: uint32_t buffer_large;;api.c: 246: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 26138                           
 26139                           ; BSR set to: 0
 26140                           ;incstack = 0
 26141  011FC6  C060  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 26142  011FCA  C061  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 26143  011FCE  0E13               	movlw	19
 26144  011FD0  6EDF               	movwf	indf2,c
 26145                           
 26146                           ;api.c: 249: outBuffer[1] = ((unsigned char)(((0x62A1)>>8)&0xFF));
 26147  011FD2  0100               	movlb	0	; () banked
 26148  011FD4  EE20 F001          	lfsr	2,1
 26149  011FD8  5160               	movf	__fill_buffer_get_bootloader_details@outBuffer& (0+255),w,b
 26150  011FDA  26D9               	addwf	fsr2l,f,c
 26151  011FDC  5161               	movf	(__fill_buffer_get_bootloader_details@outBuffer+1)& (0+255),w,b
 26152  011FDE  22DA               	addwfc	fsr2h,f,c
 26153  011FE0  0E62               	movlw	98
 26154  011FE2  6EDF               	movwf	indf2,c
 26155                           
 26156                           ; BSR set to: 0
 26157                           ;api.c: 250: outBuffer[2] = ((unsigned char)((0x62A1)&0xFF));
 26158  011FE4  EE20 F002          	lfsr	2,2
 26159  011FE8  5160               	movf	__fill_buffer_get_bootloader_details@outBuffer& (0+255),w,b
 26160  011FEA  26D9               	addwf	fsr2l,f,c
 26161  011FEC  5161               	movf	(__fill_buffer_get_bootloader_details@outBuffer+1)& (0+255),w,b
 26162  011FEE  22DA               	addwfc	fsr2h,f,c
 26163  011FF0  0EA1               	movlw	161
 26164  011FF2  6EDF               	movwf	indf2,c
 26165                           
 26166                           ; BSR set to: 0
 26167  011FF4  0012               	return		;funcret
 26168  011FF6                     __end_of__fill_buffer_get_bootloader_details:
 26169                           	opt stack 0
 26170                           tosu	equ	0xFFF
 26171                           tosh	equ	0xFFE
 26172                           tosl	equ	0xFFD
 26173                           pclath	equ	0xFFA
 26174                           tblptru	equ	0xFF8
 26175                           tblptrh	equ	0xFF7
 26176                           tblptrl	equ	0xFF6
 26177                           tablat	equ	0xFF5
 26178                           prodh	equ	0xFF4
 26179                           prodl	equ	0xFF3
 26180                           intcon	equ	0xFF2
 26181                           indf0	equ	0xFEF
 26182                           postinc0	equ	0xFEE
 26183                           fsr0h	equ	0xFEA
 26184                           fsr0l	equ	0xFE9
 26185                           wreg	equ	0xFE8
 26186                           indf1	equ	0xFE7
 26187                           postdec1	equ	0xFE5
 26188                           plusw1	equ	0xFE3
 26189                           fsr1h	equ	0xFE2
 26190                           fsr1l	equ	0xFE1
 26191                           indf2	equ	0xFDF
 26192                           postinc2	equ	0xFDE
 26193                           postdec2	equ	0xFDD
 26194                           plusw2	equ	0xFDB
 26195                           fsr2h	equ	0xFDA
 26196                           fsr2l	equ	0xFD9
 26197                           status	equ	0xFD8
 26198                           
 26199 ;; *************** function _api_parse *****************
 26200 ;; Defined at:
 26201 ;;		line 90 in file "api.c"
 26202 ;; Parameters:    Size  Location     Type
 26203 ;;  inBuffer        2   53[BANK0 ] PTR unsigned char 
 26204 ;;		 -> ReceivedDataBuffer(64), 
 26205 ;;  receivedData    1   55[BANK0 ] unsigned char 
 26206 ;;  outBuffer       2   56[BANK0 ] PTR unsigned char 
 26207 ;;		 -> ToSendDataBuffer(64), 
 26208 ;; Auto vars:     Size  Location     Type
 26209 ;;  out_idx_ptr     2   60[BANK0 ] PTR unsigned char 
 26210 ;;		 -> api_parse@out_idx(1), 
 26211 ;;  in_idx          1   63[BANK0 ] unsigned char 
 26212 ;;  out_idx         1   62[BANK0 ] unsigned char 
 26213 ;; Return value:  Size  Location     Type
 26214 ;;                  1    wreg      void 
 26215 ;; Registers used:
 26216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26217 ;; Tracked objects:
 26218 ;;		On entry : 0/0
 26219 ;;		On exit  : 0/0
 26220 ;;		Unchanged: 0/0
 26221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26222 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26223 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26224 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26225 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26226 ;;Total ram usage:       11 bytes
 26227 ;; Hardware stack levels used:    1
 26228 ;; Hardware stack levels required when called:   18
 26229 ;; This function calls:
 26230 ;;		__parse_command_long
 26231 ;;		__parse_command_short
 26232 ;; This function is called by:
 26233 ;;		_APP_DeviceCustomHIDTasks
 26234 ;; This function uses a non-reentrant model
 26235 ;;
 26236                           
 26237                           	psect	text87
 26238  00EBB6                     __ptext87:
 26239                           	opt stack 0
 26240  00EBB6                     _api_parse:
 26241                           	opt stack 11
 26242                           
 26243                           ;api.c: 94: uint8_t in_idx;;api.c: 95: uint8_t out_idx;;api.c: 96: uint8_t *out_idx_ptr;
      +                          ;api.c: 98: out_idx = 0;
 26244                           
 26245                           ; BSR set to: 0
 26246                           ;incstack = 0
 26247  00EBB6  0E00               	movlw	0
 26248  00EBB8  0100               	movlb	0	; () banked
 26249  00EBBA  6F9E               	movwf	api_parse@out_idx& (0+255),b
 26250                           
 26251                           ; BSR set to: 0
 26252                           ;api.c: 99: out_idx_ptr = &out_idx;
 26253  00EBBC  0E9E               	movlw	low api_parse@out_idx
 26254  00EBBE  6F9C               	movwf	api_parse@out_idx_ptr& (0+255),b
 26255  00EBC0  0E00               	movlw	high api_parse@out_idx
 26256  00EBC2  6F9D               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 26257                           
 26258                           ; BSR set to: 0
 26259                           ;api.c: 101: if(inBuffer[0]>0x7F)
 26260  00EBC4  C095  FFD9         	movff	api_parse@inBuffer,fsr2l
 26261  00EBC8  C096  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26262  00EBCC  0E7F               	movlw	127
 26263  00EBCE  64DF               	cpfsgt	indf2,c
 26264  00EBD0  D001               	goto	l2183
 26265  00EBD2  0012               	return	
 26266  00EBD4                     l2183:
 26267                           
 26268                           ; BSR set to: 0
 26269                           ;api.c: 106: };api.c: 108: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 26270                           
 26271                           ; BSR set to: 0
 26272  00EBD4  C095  FFD9         	movff	api_parse@inBuffer,fsr2l
 26273  00EBD8  C096  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26274  00EBDC  0E20               	movlw	32
 26275  00EBDE  18DE               	xorwf	postinc2,w,c
 26276  00EBE0  B4D8               	btfsc	status,2,c
 26277  00EBE2  0012               	return	
 26278                           
 26279                           ; BSR set to: 0
 26280                           ;api.c: 113: };api.c: 115: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 26281                           
 26282                           ; BSR set to: 0
 26283                           
 26284                           ; BSR set to: 0
 26285                           ;api.c: 109: {;api.c: 112: return;
 26286  00EBE4  C095  FFD9         	movff	api_parse@inBuffer,fsr2l
 26287  00EBE8  C096  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26288  00EBEC  50DF               	movf	indf2,w,c
 26289  00EBEE  A4D8               	btfss	status,2,c
 26290  00EBF0  D018               	goto	l2186
 26291                           
 26292                           ; BSR set to: 0
 26293                           ;api.c: 116: {;api.c: 118: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 26294  00EBF2  C098  FFD9         	movff	api_parse@outBuffer,fsr2l
 26295  00EBF6  C099  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 26296  00EBFA  0E00               	movlw	0
 26297  00EBFC  6EDF               	movwf	indf2,c
 26298                           
 26299                           ; BSR set to: 0
 26300                           ;api.c: 121: outBuffer[1] = 0x62A1 >> 8;
 26301  00EBFE  EE20 F001          	lfsr	2,1
 26302  00EC02  5198               	movf	api_parse@outBuffer& (0+255),w,b
 26303  00EC04  26D9               	addwf	fsr2l,f,c
 26304  00EC06  5199               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 26305  00EC08  22DA               	addwfc	fsr2h,f,c
 26306  00EC0A  0E62               	movlw	98
 26307  00EC0C  6EDF               	movwf	indf2,c
 26308                           
 26309                           ; BSR set to: 0
 26310                           ;api.c: 122: outBuffer[2] = (uint8_t) 0x62A1;
 26311  00EC0E  EE20 F002          	lfsr	2,2
 26312  00EC12  5198               	movf	api_parse@outBuffer& (0+255),w,b
 26313  00EC14  26D9               	addwf	fsr2l,f,c
 26314  00EC16  5199               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 26315  00EC18  22DA               	addwfc	fsr2h,f,c
 26316  00EC1A  0EA1               	movlw	161
 26317  00EC1C  6EDF               	movwf	indf2,c
 26318                           
 26319                           ; BSR set to: 0
 26320                           ;api.c: 125: out_idx = 3;
 26321  00EC1E  0E03               	movlw	3
 26322  00EC20  6F9E               	movwf	api_parse@out_idx& (0+255),b
 26323  00EC22                     l2186:
 26324                           
 26325                           ; BSR set to: 0
 26326                           ;api.c: 126: };api.c: 128: in_idx = 1;
 26327                           
 26328                           ; BSR set to: 0
 26329  00EC22  0E01               	movlw	1
 26330  00EC24  6F9F               	movwf	api_parse@in_idx& (0+255),b
 26331                           
 26332                           ;api.c: 129: while(in_idx<receivedDataLength)
 26333  00EC26  D057               	goto	l2192
 26334  00EC28                     
 26335                           ; BSR set to: 0
 26336                           ;api.c: 130: {;api.c: 132: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 26337                           
 26338                           ; BSR set to: 0
 26339  00EC28  519F               	movf	api_parse@in_idx& (0+255),w,b
 26340  00EC2A  0D01               	mullw	1
 26341  00EC2C  50F3               	movf	prodl,w,c
 26342  00EC2E  2595               	addwf	api_parse@inBuffer& (0+255),w,b
 26343  00EC30  6ED9               	movwf	fsr2l,c
 26344  00EC32  50F4               	movf	prodh,w,c
 26345  00EC34  2196               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26346  00EC36  6EDA               	movwf	fsr2h,c
 26347  00EC38  0E99               	movlw	153
 26348  00EC3A  18DE               	xorwf	postinc2,w,c
 26349  00EC3C  B4D8               	btfsc	status,2,c
 26350  00EC3E  0012               	return	
 26351  00EC40  D02F               	goto	l2190
 26352  00EC42                     
 26353                           ; BSR set to: 0
 26354                           ;api.c: 140: _parse_command_short(inBuffer[in_idx]);
 26355                           
 26356                           ; BSR set to: 0
 26357  00EC42  519F               	movf	api_parse@in_idx& (0+255),w,b
 26358  00EC44  0D01               	mullw	1
 26359  00EC46  50F3               	movf	prodl,w,c
 26360  00EC48  2595               	addwf	api_parse@inBuffer& (0+255),w,b
 26361  00EC4A  6ED9               	movwf	fsr2l,c
 26362  00EC4C  50F4               	movf	prodh,w,c
 26363  00EC4E  2196               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26364  00EC50  6EDA               	movwf	fsr2h,c
 26365  00EC52  50DF               	movf	indf2,w,c
 26366  00EC54  EC6B  F089         	call	__parse_command_short
 26367  00EC58  D00B               	goto	l19574
 26368  00EC5A                     
 26369                           ; BSR set to: 0
 26370                           ;api.c: 145: _parse_command_short(inBuffer[in_idx]);
 26371                           
 26372                           ; BSR set to: 0
 26373  00EC5A  519F               	movf	api_parse@in_idx& (0+255),w,b
 26374  00EC5C  0D01               	mullw	1
 26375  00EC5E  50F3               	movf	prodl,w,c
 26376  00EC60  2595               	addwf	api_parse@inBuffer& (0+255),w,b
 26377  00EC62  6ED9               	movwf	fsr2l,c
 26378  00EC64  50F4               	movf	prodh,w,c
 26379  00EC66  2196               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26380  00EC68  6EDA               	movwf	fsr2h,c
 26381  00EC6A  50DF               	movf	indf2,w,c
 26382  00EC6C  EC6B  F089         	call	__parse_command_short
 26383  00EC70                     l19574:
 26384                           
 26385                           ;api.c: 146: ++in_idx;
 26386  00EC70  0100               	movlb	0	; () banked
 26387  00EC72  2B9F               	incf	api_parse@in_idx& (0+255),f,b
 26388                           
 26389                           ;api.c: 147: break;
 26390  00EC74  D030               	goto	l2192
 26391  00EC76                     
 26392                           ; BSR set to: 0
 26393                           ;api.c: 150: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 26394                           
 26395                           ; BSR set to: 0
 26396  00EC76  519F               	movf	api_parse@in_idx& (0+255),w,b
 26397  00EC78  0D01               	mullw	1
 26398  00EC7A  50F3               	movf	prodl,w,c
 26399  00EC7C  2595               	addwf	api_parse@inBuffer& (0+255),w,b
 26400  00EC7E  6F8E               	movwf	__parse_command_long@data& (0+255),b
 26401  00EC80  50F4               	movf	prodh,w,c
 26402  00EC82  2196               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26403  00EC84  6F8F               	movwf	(__parse_command_long@data+1)& (0+255),b
 26404  00EC86  C098  F090         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 26405  00EC8A  C099  F091         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 26406  00EC8E  C09C  F092         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 26407  00EC92  C09D  F093         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 26408  00EC96  EC9C  F08E         	call	__parse_command_long	;wreg free
 26409  00EC9A  0100               	movlb	0	; () banked
 26410  00EC9C  279F               	addwf	api_parse@in_idx& (0+255),f,b
 26411                           
 26412                           ;api.c: 151: break;
 26413  00EC9E  D01B               	goto	l2192
 26414  00ECA0                     l2190:
 26415                           
 26416                           ; BSR set to: 0
 26417                           
 26418                           ; BSR set to: 0
 26419  00ECA0  519F               	movf	api_parse@in_idx& (0+255),w,b
 26420  00ECA2  0D01               	mullw	1
 26421  00ECA4  50F3               	movf	prodl,w,c
 26422  00ECA6  2595               	addwf	api_parse@inBuffer& (0+255),w,b
 26423  00ECA8  6ED9               	movwf	fsr2l,c
 26424  00ECAA  50F4               	movf	prodh,w,c
 26425  00ECAC  2196               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26426  00ECAE  6EDA               	movwf	fsr2h,c
 26427  00ECB0  50DF               	movf	indf2,w,c
 26428  00ECB2  0BF0               	andlw	240
 26429  00ECB4  6F9A               	movwf	??_api_parse& (0+255),b
 26430  00ECB6  6B9B               	clrf	(??_api_parse+1)& (0+255),b
 26431                           
 26432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26433                           ; Switch size 1, requested type "space"
 26434                           ; Number of cases is 1, Range of values is 0 to 0
 26435                           ; switch strategies available:
 26436                           ; Name         Instructions Cycles
 26437                           ; simple_byte            4     3 (average)
 26438                           ;	Chosen strategy is simple_byte
 26439  00ECB8  519B               	movf	(??_api_parse+1)& (0+255),w,b
 26440  00ECBA  0A00               	xorlw	0	; case 0
 26441  00ECBC  A4D8               	btfss	status,2,c
 26442  00ECBE  0012               	return	
 26443                           
 26444                           ; BSR set to: 0
 26445                           ; Switch size 1, requested type "space"
 26446                           ; Number of cases is 3, Range of values is 32 to 80
 26447                           ; switch strategies available:
 26448                           ; Name         Instructions Cycles
 26449                           ; simple_byte           10     6 (average)
 26450                           ;	Chosen strategy is simple_byte
 26451  00ECC0  519A               	movf	??_api_parse& (0+255),w,b
 26452  00ECC2  0A20               	xorlw	32	; case 32
 26453  00ECC4  B4D8               	btfsc	status,2,c
 26454  00ECC6  D7BD               	goto	l2191
 26455  00ECC8  0A10               	xorlw	16	; case 48
 26456  00ECCA  B4D8               	btfsc	status,2,c
 26457  00ECCC  D7C6               	goto	l2193
 26458  00ECCE  0A60               	xorlw	96	; case 80
 26459  00ECD0  A4D8               	btfss	status,2,c
 26460  00ECD2  0012               	return	
 26461  00ECD4  D7D0               	goto	l2194
 26462  00ECD6                     l2192:
 26463                           
 26464                           ; BSR set to: 0
 26465                           
 26466                           ; BSR set to: 0
 26467                           
 26468                           ; BSR set to: 0
 26469  00ECD6  5197               	movf	api_parse@receivedDataLength& (0+255),w,b
 26470  00ECD8  5D9F               	subwf	api_parse@in_idx& (0+255),w,b
 26471  00ECDA  B0D8               	btfsc	status,0,c
 26472  00ECDC  0012               	return	
 26473  00ECDE  D7A4               	goto	l2188
 26474  00ECE0                     __end_of_api_parse:
 26475                           	opt stack 0
 26476                           tosu	equ	0xFFF
 26477                           tosh	equ	0xFFE
 26478                           tosl	equ	0xFFD
 26479                           pclath	equ	0xFFA
 26480                           tblptru	equ	0xFF8
 26481                           tblptrh	equ	0xFF7
 26482                           tblptrl	equ	0xFF6
 26483                           tablat	equ	0xFF5
 26484                           prodh	equ	0xFF4
 26485                           prodl	equ	0xFF3
 26486                           intcon	equ	0xFF2
 26487                           indf0	equ	0xFEF
 26488                           postinc0	equ	0xFEE
 26489                           fsr0h	equ	0xFEA
 26490                           fsr0l	equ	0xFE9
 26491                           wreg	equ	0xFE8
 26492                           indf1	equ	0xFE7
 26493                           postdec1	equ	0xFE5
 26494                           plusw1	equ	0xFE3
 26495                           fsr1h	equ	0xFE2
 26496                           fsr1l	equ	0xFE1
 26497                           indf2	equ	0xFDF
 26498                           postinc2	equ	0xFDE
 26499                           postdec2	equ	0xFDD
 26500                           plusw2	equ	0xFDB
 26501                           fsr2h	equ	0xFDA
 26502                           fsr2l	equ	0xFD9
 26503                           status	equ	0xFD8
 26504                           
 26505 ;; *************** function __parse_command_short *****************
 26506 ;; Defined at:
 26507 ;;		line 298 in file "api.c"
 26508 ;; Parameters:    Size  Location     Type
 26509 ;;  cmd             1    wreg     unsigned char 
 26510 ;; Auto vars:     Size  Location     Type
 26511 ;;  cmd             1   19[BANK0 ] unsigned char 
 26512 ;; Return value:  Size  Location     Type
 26513 ;;                  1    wreg      void 
 26514 ;; Registers used:
 26515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26516 ;; Tracked objects:
 26517 ;;		On entry : 0/0
 26518 ;;		On exit  : 0/0
 26519 ;;		Unchanged: 0/0
 26520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26522 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26524 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26525 ;;Total ram usage:        1 bytes
 26526 ;; Hardware stack levels used:    1
 26527 ;; Hardware stack levels required when called:   13
 26528 ;; This function calls:
 26529 ;;		_i2c_eeprom_writeByte
 26530 ;;		_reboot
 26531 ;; This function is called by:
 26532 ;;		_api_parse
 26533 ;; This function uses a non-reentrant model
 26534 ;;
 26535                           
 26536                           	psect	text88
 26537  0112D6                     __ptext88:
 26538                           	opt stack 0
 26539  0112D6                     __parse_command_short:
 26540                           	opt stack 15
 26541                           
 26542                           ; BSR set to: 0
 26543                           ;incstack = 0
 26544                           ;__parse_command_short@cmd stored from wreg
 26545  0112D6  0100               	movlb	0	; () banked
 26546  0112D8  6F73               	movwf	__parse_command_short@cmd& (0+255),b
 26547                           
 26548                           ;api.c: 300: switch(cmd)
 26549  0112DA  D024               	goto	l2217
 26550  0112DC                     
 26551                           ;api.c: 303: i2c_eeprom_writeByte(0x100, 0x00);
 26552  0112DC  0E01               	movlw	1
 26553  0112DE  0100               	movlb	0	; () banked
 26554  0112E0  6F6B               	movwf	(i2c_eeprom_writeByte@address+1)& (0+255),b
 26555  0112E2  0E00               	movlw	0
 26556  0112E4  6F6A               	movwf	i2c_eeprom_writeByte@address& (0+255),b
 26557  0112E6  0E00               	movlw	0
 26558  0112E8  6F6C               	movwf	i2c_eeprom_writeByte@data& (0+255),b
 26559  0112EA  ECB2  F08D         	call	_i2c_eeprom_writeByte	;wreg free
 26560                           
 26561                           ;api.c: 305: reboot();
 26562  0112EE  ECC4  F091         	call	_reboot	;wreg free
 26563                           
 26564                           ;api.c: 306: break;
 26565  0112F2  0012               	return	
 26566  0112F4                     
 26567                           ;api.c: 309: i2c_eeprom_writeByte(0x100, 0x94);
 26568  0112F4  0E01               	movlw	1
 26569  0112F6  0100               	movlb	0	; () banked
 26570  0112F8  6F6B               	movwf	(i2c_eeprom_writeByte@address+1)& (0+255),b
 26571  0112FA  0E00               	movlw	0
 26572  0112FC  6F6A               	movwf	i2c_eeprom_writeByte@address& (0+255),b
 26573  0112FE  0E94               	movlw	148
 26574  011300  6F6C               	movwf	i2c_eeprom_writeByte@data& (0+255),b
 26575  011302  ECB2  F08D         	call	_i2c_eeprom_writeByte	;wreg free
 26576                           
 26577                           ;api.c: 311: reboot();
 26578  011306  ECC4  F091         	call	_reboot	;wreg free
 26579                           
 26580                           ;api.c: 312: break;
 26581  01130A  0012               	return	
 26582  01130C                     
 26583                           ;api.c: 315: i2c_eeprom_writeByte(0x100, 0x78);
 26584  01130C  0E01               	movlw	1
 26585  01130E  0100               	movlb	0	; () banked
 26586  011310  6F6B               	movwf	(i2c_eeprom_writeByte@address+1)& (0+255),b
 26587  011312  0E00               	movlw	0
 26588  011314  6F6A               	movwf	i2c_eeprom_writeByte@address& (0+255),b
 26589  011316  0E78               	movlw	120
 26590  011318  6F6C               	movwf	i2c_eeprom_writeByte@data& (0+255),b
 26591  01131A  ECB2  F08D         	call	_i2c_eeprom_writeByte	;wreg free
 26592                           
 26593                           ;api.c: 317: reboot();
 26594  01131E  ECC4  F091         	call	_reboot	;wreg free
 26595                           
 26596                           ;api.c: 331: }
 26597                           
 26598                           ;api.c: 318: break;
 26599  011322  0012               	return	
 26600  011324                     l2217:
 26601  011324  0100               	movlb	0	; () banked
 26602  011326  5173               	movf	__parse_command_short@cmd& (0+255),w,b
 26603                           
 26604                           ; Switch size 1, requested type "space"
 26605                           ; Number of cases is 3, Range of values is 32 to 34
 26606                           ; switch strategies available:
 26607                           ; Name         Instructions Cycles
 26608                           ; simple_byte           10     6 (average)
 26609                           ;	Chosen strategy is simple_byte
 26610  011328  0A20               	xorlw	32	; case 32
 26611  01132A  B4D8               	btfsc	status,2,c
 26612  01132C  D7D7               	goto	l2218
 26613  01132E  0A01               	xorlw	1	; case 33
 26614  011330  B4D8               	btfsc	status,2,c
 26615  011332  D7E0               	goto	l2220
 26616  011334  0A03               	xorlw	3	; case 34
 26617  011336  A4D8               	btfss	status,2,c
 26618  011338  0012               	return	
 26619  01133A  D7E8               	goto	l2221
 26620  01133C                     __end_of__parse_command_short:
 26621                           	opt stack 0
 26622                           tosu	equ	0xFFF
 26623                           tosh	equ	0xFFE
 26624                           tosl	equ	0xFFD
 26625                           pclath	equ	0xFFA
 26626                           tblptru	equ	0xFF8
 26627                           tblptrh	equ	0xFF7
 26628                           tblptrl	equ	0xFF6
 26629                           tablat	equ	0xFF5
 26630                           prodh	equ	0xFF4
 26631                           prodl	equ	0xFF3
 26632                           intcon	equ	0xFF2
 26633                           indf0	equ	0xFEF
 26634                           postinc0	equ	0xFEE
 26635                           fsr0h	equ	0xFEA
 26636                           fsr0l	equ	0xFE9
 26637                           wreg	equ	0xFE8
 26638                           indf1	equ	0xFE7
 26639                           postdec1	equ	0xFE5
 26640                           plusw1	equ	0xFE3
 26641                           fsr1h	equ	0xFE2
 26642                           fsr1l	equ	0xFE1
 26643                           indf2	equ	0xFDF
 26644                           postinc2	equ	0xFDE
 26645                           postdec2	equ	0xFDD
 26646                           plusw2	equ	0xFDB
 26647                           fsr2h	equ	0xFDA
 26648                           fsr2l	equ	0xFD9
 26649                           status	equ	0xFD8
 26650                           
 26651 ;; *************** function _reboot *****************
 26652 ;; Defined at:
 26653 ;;		line 248 in file "os.c"
 26654 ;; Parameters:    Size  Location     Type
 26655 ;;		None
 26656 ;; Auto vars:     Size  Location     Type
 26657 ;;		None
 26658 ;; Return value:  Size  Location     Type
 26659 ;;                  1    wreg      void 
 26660 ;; Registers used:
 26661 ;;		None
 26662 ;; Tracked objects:
 26663 ;;		On entry : 0/0
 26664 ;;		On exit  : 0/0
 26665 ;;		Unchanged: 0/0
 26666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26671 ;;Total ram usage:        0 bytes
 26672 ;; Hardware stack levels used:    1
 26673 ;; Hardware stack levels required when called:   10
 26674 ;; This function calls:
 26675 ;;		Nothing
 26676 ;; This function is called by:
 26677 ;;		__parse_command_short
 26678 ;; This function uses a non-reentrant model
 26679 ;;
 26680                           
 26681                           	psect	text89
 26682  012388                     __ptext89:
 26683                           	opt stack 0
 26684  012388                     _reboot:
 26685                           	opt stack 17
 26686                           
 26687                           ;incstack = 0
 26688                           ;os.c: 251: while(1);
 26689  012388  D7FF               	goto	_reboot
 26690  01238A                     __end_of_reboot:
 26691                           	opt stack 0
 26692                           tosu	equ	0xFFF
 26693                           tosh	equ	0xFFE
 26694                           tosl	equ	0xFFD
 26695                           pclath	equ	0xFFA
 26696                           tblptru	equ	0xFF8
 26697                           tblptrh	equ	0xFF7
 26698                           tblptrl	equ	0xFF6
 26699                           tablat	equ	0xFF5
 26700                           prodh	equ	0xFF4
 26701                           prodl	equ	0xFF3
 26702                           intcon	equ	0xFF2
 26703                           indf0	equ	0xFEF
 26704                           postinc0	equ	0xFEE
 26705                           fsr0h	equ	0xFEA
 26706                           fsr0l	equ	0xFE9
 26707                           wreg	equ	0xFE8
 26708                           indf1	equ	0xFE7
 26709                           postdec1	equ	0xFE5
 26710                           plusw1	equ	0xFE3
 26711                           fsr1h	equ	0xFE2
 26712                           fsr1l	equ	0xFE1
 26713                           indf2	equ	0xFDF
 26714                           postinc2	equ	0xFDE
 26715                           postdec2	equ	0xFDD
 26716                           plusw2	equ	0xFDB
 26717                           fsr2h	equ	0xFDA
 26718                           fsr2l	equ	0xFD9
 26719                           status	equ	0xFD8
 26720                           
 26721 ;; *************** function _i2c_eeprom_writeByte *****************
 26722 ;; Defined at:
 26723 ;;		line 187 in file "i2c.c"
 26724 ;; Parameters:    Size  Location     Type
 26725 ;;  address         2   10[BANK0 ] unsigned int 
 26726 ;;  data            1   12[BANK0 ] unsigned char 
 26727 ;; Auto vars:     Size  Location     Type
 26728 ;;  dat             2   17[BANK0 ] unsigned char [2]
 26729 ;;  slave_addres    1   16[BANK0 ] unsigned char 
 26730 ;; Return value:  Size  Location     Type
 26731 ;;                  1    wreg      void 
 26732 ;; Registers used:
 26733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26734 ;; Tracked objects:
 26735 ;;		On entry : 0/0
 26736 ;;		On exit  : 0/0
 26737 ;;		Unchanged: 0/0
 26738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26739 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26740 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26741 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26742 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26743 ;;Total ram usage:        9 bytes
 26744 ;; Hardware stack levels used:    1
 26745 ;; Hardware stack levels required when called:   12
 26746 ;; This function calls:
 26747 ;;		__i2c_eeprom_busy
 26748 ;;		__i2c_write
 26749 ;; This function is called by:
 26750 ;;		__parse_command_short
 26751 ;; This function uses a non-reentrant model
 26752 ;;
 26753                           
 26754                           	psect	text90
 26755  011B64                     __ptext90:
 26756                           	opt stack 0
 26757  011B64                     _i2c_eeprom_writeByte:
 26758                           	opt stack 15
 26759                           
 26760                           ;i2c.c: 189: uint8_t slave_address;;i2c.c: 190: uint8_t dat[2];;i2c.c: 193: while(_i2c_e
      +                          eprom_busy());
 26761                           
 26762                           ;incstack = 0
 26763  011B64  ECAB  F090         	call	__i2c_eeprom_busy	;wreg free
 26764  011B68  0900               	iorlw	0
 26765  011B6A  A4D8               	btfss	status,2,c
 26766  011B6C  D7FB               	goto	_i2c_eeprom_writeByte
 26767                           
 26768                           ;i2c.c: 195: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 26769  011B6E  C06A  F06D         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 26770  011B72  C06B  F06E         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 26771  011B76  0E07               	movlw	7
 26772  011B78  0100               	movlb	0	; () banked
 26773  011B7A  6F6F               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),b
 26774  011B7C                     u17875:
 26775  011B7C  90D8               	bcf	status,0,c
 26776  011B7E  336E               	rrcf	(??_i2c_eeprom_writeByte+1)& (0+255),f,b
 26777  011B80  336D               	rrcf	??_i2c_eeprom_writeByte& (0+255),f,b
 26778  011B82  2F6F               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,b
 26779  011B84  D7FB               	goto	u17875
 26780  011B86  516D               	movf	??_i2c_eeprom_writeByte& (0+255),w,b
 26781  011B88  0B0E               	andlw	14
 26782  011B8A  09A0               	iorlw	160
 26783  011B8C  6F70               	movwf	i2c_eeprom_writeByte@slave_address& (0+255),b
 26784                           
 26785                           ; BSR set to: 0
 26786                           ;i2c.c: 196: dat[0] = address & 0xFF;
 26787  011B8E  C06A  F071         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 26788                           
 26789                           ; BSR set to: 0
 26790                           ;i2c.c: 197: dat[1] = data;
 26791  011B92  C06C  F072         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 26792                           
 26793                           ; BSR set to: 0
 26794                           ;i2c.c: 199: _i2c_write(slave_address, &dat[0], 2);
 26795  011B96  0E71               	movlw	low i2c_eeprom_writeByte@dat
 26796  011B98  6F65               	movwf	__i2c_write@data& (0+255),b
 26797  011B9A  0E00               	movlw	high i2c_eeprom_writeByte@dat
 26798  011B9C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 26799  011B9E  0E02               	movlw	2
 26800  011BA0  6F67               	movwf	__i2c_write@length& (0+255),b
 26801  011BA2  5170               	movf	i2c_eeprom_writeByte@slave_address& (0+255),w,b
 26802  011BA4  ECF4  F08C         	call	__i2c_write
 26803  011BA8  0012               	return		;funcret
 26804  011BAA                     __end_of_i2c_eeprom_writeByte:
 26805                           	opt stack 0
 26806                           tosu	equ	0xFFF
 26807                           tosh	equ	0xFFE
 26808                           tosl	equ	0xFFD
 26809                           pclath	equ	0xFFA
 26810                           tblptru	equ	0xFF8
 26811                           tblptrh	equ	0xFF7
 26812                           tblptrl	equ	0xFF6
 26813                           tablat	equ	0xFF5
 26814                           prodh	equ	0xFF4
 26815                           prodl	equ	0xFF3
 26816                           intcon	equ	0xFF2
 26817                           indf0	equ	0xFEF
 26818                           postinc0	equ	0xFEE
 26819                           fsr0h	equ	0xFEA
 26820                           fsr0l	equ	0xFE9
 26821                           wreg	equ	0xFE8
 26822                           indf1	equ	0xFE7
 26823                           postdec1	equ	0xFE5
 26824                           plusw1	equ	0xFE3
 26825                           fsr1h	equ	0xFE2
 26826                           fsr1l	equ	0xFE1
 26827                           indf2	equ	0xFDF
 26828                           postinc2	equ	0xFDE
 26829                           postdec2	equ	0xFDD
 26830                           plusw2	equ	0xFDB
 26831                           fsr2h	equ	0xFDA
 26832                           fsr2l	equ	0xFD9
 26833                           status	equ	0xFD8
 26834                           
 26835 ;; *************** function __i2c_write *****************
 26836 ;; Defined at:
 26837 ;;		line 83 in file "i2c.c"
 26838 ;; Parameters:    Size  Location     Type
 26839 ;;  slave_addres    1    wreg     unsigned char 
 26840 ;;  data            2    5[BANK0 ] PTR unsigned char 
 26841 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 26842 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 26843 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 26844 ;;  length          1    7[BANK0 ] unsigned char 
 26845 ;; Auto vars:     Size  Location     Type
 26846 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 26847 ;;  cntr            1    9[BANK0 ] unsigned char 
 26848 ;; Return value:  Size  Location     Type
 26849 ;;                  1    wreg      void 
 26850 ;; Registers used:
 26851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26852 ;; Tracked objects:
 26853 ;;		On entry : 0/0
 26854 ;;		On exit  : 0/0
 26855 ;;		Unchanged: 0/0
 26856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26857 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26858 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26860 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26861 ;;Total ram usage:        5 bytes
 26862 ;; Hardware stack levels used:    1
 26863 ;; Hardware stack levels required when called:   11
 26864 ;; This function calls:
 26865 ;;		__i2c_send
 26866 ;;		__i2c_start
 26867 ;;		__i2c_stop
 26868 ;;		__i2c_wait_idle
 26869 ;; This function is called by:
 26870 ;;		_i2c_eeprom_writeByte
 26871 ;;		_i2c_display_init
 26872 ;;		__ic2_display_set_ddram_address
 26873 ;;		__ic2_display_set_cgram_address
 26874 ;;		_i2c_display_program_custom_character
 26875 ;;		_i2c_adc_start
 26876 ;;		_i2c_eeprom_readByte
 26877 ;;		_i2c_eeprom_write
 26878 ;;		_i2c_eeprom_read
 26879 ;;		__i2c_display_send_init_sequence
 26880 ;; This function uses a non-reentrant model
 26881 ;;
 26882                           
 26883                           	psect	text91
 26884  0119E8                     __ptext91:
 26885                           	opt stack 0
 26886  0119E8                     __i2c_write:
 26887                           	opt stack 15
 26888                           
 26889                           ;incstack = 0
 26890                           ;__i2c_write@slave_address stored from wreg
 26891  0119E8  0100               	movlb	0	; () banked
 26892  0119EA  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 26893                           
 26894                           ;i2c.c: 85: uint8_t cntr;;i2c.c: 87: _i2c_wait_idle();
 26895  0119EC  EC9E  F089         	call	__i2c_wait_idle	;wreg free
 26896                           
 26897                           ;i2c.c: 88: _i2c_start();
 26898  0119F0  ECB8  F091         	call	__i2c_start	;wreg free
 26899                           
 26900                           ;i2c.c: 89: _i2c_wait_idle();
 26901  0119F4  EC9E  F089         	call	__i2c_wait_idle	;wreg free
 26902                           
 26903                           ;i2c.c: 90: _i2c_send(slave_address);
 26904  0119F8  0100               	movlb	0	; () banked
 26905  0119FA  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 26906  0119FC  ECAF  F091         	call	__i2c_send
 26907                           
 26908                           ;i2c.c: 91: _i2c_wait_idle();
 26909  011A00  EC9E  F089         	call	__i2c_wait_idle	;wreg free
 26910                           
 26911                           ;i2c.c: 93: for(cntr=0; cntr<length; ++cntr)
 26912  011A04  0E00               	movlw	0
 26913  011A06  0100               	movlb	0	; () banked
 26914  011A08  6F69               	movwf	__i2c_write@cntr& (0+255),b
 26915  011A0A  D00F               	goto	l1134
 26916  011A0C                     
 26917                           ; BSR set to: 0
 26918                           ;i2c.c: 94: {;i2c.c: 95: _i2c_send(data[cntr]);
 26919                           
 26920                           ; BSR set to: 0
 26921  011A0C  5169               	movf	__i2c_write@cntr& (0+255),w,b
 26922  011A0E  0D01               	mullw	1
 26923  011A10  50F3               	movf	prodl,w,c
 26924  011A12  2565               	addwf	__i2c_write@data& (0+255),w,b
 26925  011A14  6ED9               	movwf	fsr2l,c
 26926  011A16  50F4               	movf	prodh,w,c
 26927  011A18  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 26928  011A1A  6EDA               	movwf	fsr2h,c
 26929  011A1C  50DF               	movf	indf2,w,c
 26930  011A1E  ECAF  F091         	call	__i2c_send
 26931                           
 26932                           ;i2c.c: 96: _i2c_wait_idle();
 26933  011A22  EC9E  F089         	call	__i2c_wait_idle	;wreg free
 26934  011A26  0100               	movlb	0	; () banked
 26935  011A28  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 26936  011A2A                     l1134:
 26937                           
 26938                           ; BSR set to: 0
 26939                           
 26940                           ; BSR set to: 0
 26941  011A2A  5167               	movf	__i2c_write@length& (0+255),w,b
 26942  011A2C  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 26943  011A2E  A0D8               	btfss	status,0,c
 26944  011A30  D7ED               	goto	l1135
 26945                           
 26946                           ; BSR set to: 0
 26947                           ;i2c.c: 97: };i2c.c: 99: _i2c_stop();
 26948                           
 26949                           ; BSR set to: 0
 26950  011A32  ECB4  F091         	call	__i2c_stop	;wreg free
 26951  011A36  0012               	return		;funcret
 26952  011A38                     __end_of__i2c_write:
 26953                           	opt stack 0
 26954                           tosu	equ	0xFFF
 26955                           tosh	equ	0xFFE
 26956                           tosl	equ	0xFFD
 26957                           pclath	equ	0xFFA
 26958                           tblptru	equ	0xFF8
 26959                           tblptrh	equ	0xFF7
 26960                           tblptrl	equ	0xFF6
 26961                           tablat	equ	0xFF5
 26962                           prodh	equ	0xFF4
 26963                           prodl	equ	0xFF3
 26964                           intcon	equ	0xFF2
 26965                           indf0	equ	0xFEF
 26966                           postinc0	equ	0xFEE
 26967                           fsr0h	equ	0xFEA
 26968                           fsr0l	equ	0xFE9
 26969                           wreg	equ	0xFE8
 26970                           indf1	equ	0xFE7
 26971                           postdec1	equ	0xFE5
 26972                           plusw1	equ	0xFE3
 26973                           fsr1h	equ	0xFE2
 26974                           fsr1l	equ	0xFE1
 26975                           indf2	equ	0xFDF
 26976                           postinc2	equ	0xFDE
 26977                           postdec2	equ	0xFDD
 26978                           plusw2	equ	0xFDB
 26979                           fsr2h	equ	0xFDA
 26980                           fsr2l	equ	0xFD9
 26981                           status	equ	0xFD8
 26982                           
 26983 ;; *************** function __i2c_eeprom_busy *****************
 26984 ;; Defined at:
 26985 ;;		line 168 in file "i2c.c"
 26986 ;; Parameters:    Size  Location     Type
 26987 ;;		None
 26988 ;; Auto vars:     Size  Location     Type
 26989 ;;  busy            1    5[BANK0 ] unsigned char 
 26990 ;; Return value:  Size  Location     Type
 26991 ;;                  1    wreg      unsigned char 
 26992 ;; Registers used:
 26993 ;;		wreg, status,2, status,0, cstack
 26994 ;; Tracked objects:
 26995 ;;		On entry : 0/0
 26996 ;;		On exit  : 0/0
 26997 ;;		Unchanged: 0/0
 26998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27003 ;;Total ram usage:        1 bytes
 27004 ;; Hardware stack levels used:    1
 27005 ;; Hardware stack levels required when called:   11
 27006 ;; This function calls:
 27007 ;;		__i2c_send
 27008 ;;		__i2c_start
 27009 ;;		__i2c_stop
 27010 ;;		__i2c_wait_idle
 27011 ;; This function is called by:
 27012 ;;		_i2c_eeprom_writeByte
 27013 ;;		_i2c_eeprom_readByte
 27014 ;;		_i2c_eeprom_write
 27015 ;;		_i2c_eeprom_read
 27016 ;; This function uses a non-reentrant model
 27017 ;;
 27018                           
 27019                           	psect	text92
 27020  012156                     __ptext92:
 27021                           	opt stack 0
 27022  012156                     __i2c_eeprom_busy:
 27023                           	opt stack 15
 27024                           
 27025                           ;i2c.c: 170: uint8_t busy;;i2c.c: 171: _i2c_wait_idle();
 27026                           
 27027                           ;incstack = 0
 27028  012156  EC9E  F089         	call	__i2c_wait_idle	;wreg free
 27029                           
 27030                           ;i2c.c: 172: _i2c_start();
 27031  01215A  ECB8  F091         	call	__i2c_start	;wreg free
 27032                           
 27033                           ;i2c.c: 173: _i2c_wait_idle();
 27034  01215E  EC9E  F089         	call	__i2c_wait_idle	;wreg free
 27035                           
 27036                           ;i2c.c: 174: _i2c_send(0b10100000);
 27037  012162  0EA0               	movlw	160
 27038  012164  ECAF  F091         	call	__i2c_send
 27039                           
 27040                           ;i2c.c: 175: _i2c_wait_idle();
 27041  012168  EC9E  F089         	call	__i2c_wait_idle	;wreg free
 27042                           
 27043                           ;i2c.c: 179: busy = SSP1CON2bits.ACKSTAT;
 27044  01216C  0E00               	movlw	0
 27045  01216E  BCC5               	btfsc	4037,6,c	;volatile
 27046  012170  0E01               	movlw	1
 27047  012172  0100               	movlb	0	; () banked
 27048  012174  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
 27049                           
 27050                           ; BSR set to: 0
 27051                           ;i2c.c: 180: _i2c_stop();
 27052  012176  ECB4  F091         	call	__i2c_stop	;wreg free
 27053                           
 27054                           ;i2c.c: 182: return 0;
 27055  01217A  0E00               	movlw	0
 27056  01217C  0012               	return	
 27057  01217E                     __end_of__i2c_eeprom_busy:
 27058                           	opt stack 0
 27059                           tosu	equ	0xFFF
 27060                           tosh	equ	0xFFE
 27061                           tosl	equ	0xFFD
 27062                           pclath	equ	0xFFA
 27063                           tblptru	equ	0xFF8
 27064                           tblptrh	equ	0xFF7
 27065                           tblptrl	equ	0xFF6
 27066                           tablat	equ	0xFF5
 27067                           prodh	equ	0xFF4
 27068                           prodl	equ	0xFF3
 27069                           intcon	equ	0xFF2
 27070                           indf0	equ	0xFEF
 27071                           postinc0	equ	0xFEE
 27072                           fsr0h	equ	0xFEA
 27073                           fsr0l	equ	0xFE9
 27074                           wreg	equ	0xFE8
 27075                           indf1	equ	0xFE7
 27076                           postdec1	equ	0xFE5
 27077                           plusw1	equ	0xFE3
 27078                           fsr1h	equ	0xFE2
 27079                           fsr1l	equ	0xFE1
 27080                           indf2	equ	0xFDF
 27081                           postinc2	equ	0xFDE
 27082                           postdec2	equ	0xFDD
 27083                           plusw2	equ	0xFDB
 27084                           fsr2h	equ	0xFDA
 27085                           fsr2l	equ	0xFD9
 27086                           status	equ	0xFD8
 27087                           
 27088 ;; *************** function __i2c_wait_idle *****************
 27089 ;; Defined at:
 27090 ;;		line 39 in file "i2c.c"
 27091 ;; Parameters:    Size  Location     Type
 27092 ;;		None
 27093 ;; Auto vars:     Size  Location     Type
 27094 ;;		None
 27095 ;; Return value:  Size  Location     Type
 27096 ;;                  1    wreg      void 
 27097 ;; Registers used:
 27098 ;;		wreg, status,2, status,0
 27099 ;; Tracked objects:
 27100 ;;		On entry : 0/0
 27101 ;;		On exit  : 0/0
 27102 ;;		Unchanged: 0/0
 27103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27106 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27107 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27108 ;;Total ram usage:        5 bytes
 27109 ;; Hardware stack levels used:    1
 27110 ;; Hardware stack levels required when called:   10
 27111 ;; This function calls:
 27112 ;;		Nothing
 27113 ;; This function is called by:
 27114 ;;		__i2c_write
 27115 ;;		__i2c_eeprom_busy
 27116 ;;		_i2c_display_write_fixed
 27117 ;;		__i2c_read
 27118 ;;		_i2c_adc_read
 27119 ;;		_i2c_display_write
 27120 ;; This function uses a non-reentrant model
 27121 ;;
 27122                           
 27123                           	psect	text93
 27124  01133C                     __ptext93:
 27125                           	opt stack 0
 27126  01133C                     __i2c_wait_idle:
 27127                           	opt stack 17
 27128                           
 27129                           ;i2c.c: 41: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 27130                           
 27131                           ;incstack = 0
 27132  01133C  A4C7               	btfss	4039,2,c	;volatile
 27133  01133E  D004               	goto	u16980
 27134  011340  0100               	movlb	0	; () banked
 27135  011342  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 27136  011344  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 27137  011346  D002               	goto	u16988
 27138  011348                     u16980:
 27139  011348  0100               	movlb	0	; () banked
 27140  01134A  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 27141  01134C                     u16988:
 27142  01134C  A0C5               	btfss	4037,0,c	;volatile
 27143  01134E  D003               	goto	u16990
 27144  011350  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 27145  011352  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 27146  011354  D002               	goto	u16998
 27147  011356                     u16990:
 27148  011356  0100               	movlb	0	; () banked
 27149  011358  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 27150  01135A                     u16998:
 27151  01135A  A2C5               	btfss	4037,1,c	;volatile
 27152  01135C  D003               	goto	u17000
 27153  01135E  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 27154  011360  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 27155  011362  D002               	goto	u17008
 27156  011364                     u17000:
 27157  011364  0100               	movlb	0	; () banked
 27158  011366  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 27159  011368                     u17008:
 27160  011368  A4C5               	btfss	4037,2,c	;volatile
 27161  01136A  D003               	goto	u17010
 27162  01136C  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 27163  01136E  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 27164  011370  D002               	goto	u17018
 27165  011372                     u17010:
 27166  011372  0100               	movlb	0	; () banked
 27167  011374  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 27168  011376                     u17018:
 27169  011376  A6C5               	btfss	4037,3,c	;volatile
 27170  011378  D003               	goto	u17020
 27171  01137A  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 27172  01137C  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 27173  01137E  D002               	goto	u17028
 27174  011380                     u17020:
 27175  011380  0100               	movlb	0	; () banked
 27176  011382  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 27177  011384                     u17028:
 27178  011384  A8C5               	btfss	4037,4,c	;volatile
 27179  011386  D002               	goto	u17030
 27180  011388  0E01               	movlw	1
 27181  01138A  D001               	goto	u17036
 27182  01138C                     u17030:
 27183  01138C  0E00               	movlw	0
 27184  01138E                     u17036:
 27185  01138E  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 27186  011390  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 27187  011392  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 27188  011394  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 27189  011396  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 27190  011398  0900               	iorlw	0
 27191  01139A  B4D8               	btfsc	status,2,c
 27192  01139C  0012               	return	
 27193  01139E  D7CE               	goto	__i2c_wait_idle
 27194  0113A0                     __end_of__i2c_wait_idle:
 27195                           	opt stack 0
 27196                           tosu	equ	0xFFF
 27197                           tosh	equ	0xFFE
 27198                           tosl	equ	0xFFD
 27199                           pclath	equ	0xFFA
 27200                           tblptru	equ	0xFF8
 27201                           tblptrh	equ	0xFF7
 27202                           tblptrl	equ	0xFF6
 27203                           tablat	equ	0xFF5
 27204                           prodh	equ	0xFF4
 27205                           prodl	equ	0xFF3
 27206                           intcon	equ	0xFF2
 27207                           indf0	equ	0xFEF
 27208                           postinc0	equ	0xFEE
 27209                           fsr0h	equ	0xFEA
 27210                           fsr0l	equ	0xFE9
 27211                           wreg	equ	0xFE8
 27212                           indf1	equ	0xFE7
 27213                           postdec1	equ	0xFE5
 27214                           plusw1	equ	0xFE3
 27215                           fsr1h	equ	0xFE2
 27216                           fsr1l	equ	0xFE1
 27217                           indf2	equ	0xFDF
 27218                           postinc2	equ	0xFDE
 27219                           postdec2	equ	0xFDD
 27220                           plusw2	equ	0xFDB
 27221                           fsr2h	equ	0xFDA
 27222                           fsr2l	equ	0xFD9
 27223                           status	equ	0xFD8
 27224                           
 27225 ;; *************** function __i2c_stop *****************
 27226 ;; Defined at:
 27227 ;;		line 62 in file "i2c.c"
 27228 ;; Parameters:    Size  Location     Type
 27229 ;;		None
 27230 ;; Auto vars:     Size  Location     Type
 27231 ;;		None
 27232 ;; Return value:  Size  Location     Type
 27233 ;;                  1    wreg      void 
 27234 ;; Registers used:
 27235 ;;		None
 27236 ;; Tracked objects:
 27237 ;;		On entry : 0/0
 27238 ;;		On exit  : 0/0
 27239 ;;		Unchanged: 0/0
 27240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27245 ;;Total ram usage:        0 bytes
 27246 ;; Hardware stack levels used:    1
 27247 ;; Hardware stack levels required when called:   10
 27248 ;; This function calls:
 27249 ;;		Nothing
 27250 ;; This function is called by:
 27251 ;;		__i2c_write
 27252 ;;		__i2c_eeprom_busy
 27253 ;;		_i2c_display_write_fixed
 27254 ;;		__i2c_read
 27255 ;;		_i2c_adc_read
 27256 ;;		_i2c_display_write
 27257 ;; This function uses a non-reentrant model
 27258 ;;
 27259                           
 27260                           	psect	text94
 27261  012368                     __ptext94:
 27262                           	opt stack 0
 27263  012368                     __i2c_stop:
 27264                           	opt stack 17
 27265                           
 27266                           ;i2c.c: 64: SSP1CON2bits.PEN = 1;
 27267                           
 27268                           ; BSR set to: 0
 27269                           ;incstack = 0
 27270  012368  84C5               	bsf	4037,2,c	;volatile
 27271  01236A  A4C5               	btfss	4037,2,c	;volatile
 27272  01236C  0012               	return	
 27273  01236E  D7FD               	goto	l1117
 27274  012370                     __end_of__i2c_stop:
 27275                           	opt stack 0
 27276                           tosu	equ	0xFFF
 27277                           tosh	equ	0xFFE
 27278                           tosl	equ	0xFFD
 27279                           pclath	equ	0xFFA
 27280                           tblptru	equ	0xFF8
 27281                           tblptrh	equ	0xFF7
 27282                           tblptrl	equ	0xFF6
 27283                           tablat	equ	0xFF5
 27284                           prodh	equ	0xFF4
 27285                           prodl	equ	0xFF3
 27286                           intcon	equ	0xFF2
 27287                           indf0	equ	0xFEF
 27288                           postinc0	equ	0xFEE
 27289                           fsr0h	equ	0xFEA
 27290                           fsr0l	equ	0xFE9
 27291                           wreg	equ	0xFE8
 27292                           indf1	equ	0xFE7
 27293                           postdec1	equ	0xFE5
 27294                           plusw1	equ	0xFE3
 27295                           fsr1h	equ	0xFE2
 27296                           fsr1l	equ	0xFE1
 27297                           indf2	equ	0xFDF
 27298                           postinc2	equ	0xFDE
 27299                           postdec2	equ	0xFDD
 27300                           plusw2	equ	0xFDB
 27301                           fsr2h	equ	0xFDA
 27302                           fsr2l	equ	0xFD9
 27303                           status	equ	0xFD8
 27304                           
 27305 ;; *************** function __i2c_start *****************
 27306 ;; Defined at:
 27307 ;;		line 44 in file "i2c.c"
 27308 ;; Parameters:    Size  Location     Type
 27309 ;;		None
 27310 ;; Auto vars:     Size  Location     Type
 27311 ;;		None
 27312 ;; Return value:  Size  Location     Type
 27313 ;;                  1    wreg      void 
 27314 ;; Registers used:
 27315 ;;		None
 27316 ;; Tracked objects:
 27317 ;;		On entry : 0/0
 27318 ;;		On exit  : 0/0
 27319 ;;		Unchanged: 0/0
 27320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27325 ;;Total ram usage:        0 bytes
 27326 ;; Hardware stack levels used:    1
 27327 ;; Hardware stack levels required when called:   10
 27328 ;; This function calls:
 27329 ;;		Nothing
 27330 ;; This function is called by:
 27331 ;;		__i2c_write
 27332 ;;		__i2c_eeprom_busy
 27333 ;;		_i2c_display_write_fixed
 27334 ;;		__i2c_read
 27335 ;;		_i2c_adc_read
 27336 ;;		_i2c_display_write
 27337 ;; This function uses a non-reentrant model
 27338 ;;
 27339                           
 27340                           	psect	text95
 27341  012370                     __ptext95:
 27342                           	opt stack 0
 27343  012370                     __i2c_start:
 27344                           	opt stack 17
 27345                           
 27346                           ;i2c.c: 46: SSP1CON2bits.SEN=1;
 27347                           
 27348                           ;incstack = 0
 27349  012370  80C5               	bsf	4037,0,c	;volatile
 27350  012372  A0C5               	btfss	4037,0,c	;volatile
 27351  012374  0012               	return	
 27352  012376  D7FD               	goto	l1102
 27353  012378                     __end_of__i2c_start:
 27354                           	opt stack 0
 27355                           tosu	equ	0xFFF
 27356                           tosh	equ	0xFFE
 27357                           tosl	equ	0xFFD
 27358                           pclath	equ	0xFFA
 27359                           tblptru	equ	0xFF8
 27360                           tblptrh	equ	0xFF7
 27361                           tblptrl	equ	0xFF6
 27362                           tablat	equ	0xFF5
 27363                           prodh	equ	0xFF4
 27364                           prodl	equ	0xFF3
 27365                           intcon	equ	0xFF2
 27366                           indf0	equ	0xFEF
 27367                           postinc0	equ	0xFEE
 27368                           fsr0h	equ	0xFEA
 27369                           fsr0l	equ	0xFE9
 27370                           wreg	equ	0xFE8
 27371                           indf1	equ	0xFE7
 27372                           postdec1	equ	0xFE5
 27373                           plusw1	equ	0xFE3
 27374                           fsr1h	equ	0xFE2
 27375                           fsr1l	equ	0xFE1
 27376                           indf2	equ	0xFDF
 27377                           postinc2	equ	0xFDE
 27378                           postdec2	equ	0xFDD
 27379                           plusw2	equ	0xFDB
 27380                           fsr2h	equ	0xFDA
 27381                           fsr2l	equ	0xFD9
 27382                           status	equ	0xFD8
 27383                           
 27384 ;; *************** function __i2c_send *****************
 27385 ;; Defined at:
 27386 ;;		line 50 in file "i2c.c"
 27387 ;; Parameters:    Size  Location     Type
 27388 ;;  dat             1    wreg     unsigned char 
 27389 ;; Auto vars:     Size  Location     Type
 27390 ;;  dat             1    0[BANK0 ] unsigned char 
 27391 ;; Return value:  Size  Location     Type
 27392 ;;                  1    wreg      void 
 27393 ;; Registers used:
 27394 ;;		wreg
 27395 ;; Tracked objects:
 27396 ;;		On entry : 0/0
 27397 ;;		On exit  : 0/0
 27398 ;;		Unchanged: 0/0
 27399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27403 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27404 ;;Total ram usage:        1 bytes
 27405 ;; Hardware stack levels used:    1
 27406 ;; Hardware stack levels required when called:   10
 27407 ;; This function calls:
 27408 ;;		Nothing
 27409 ;; This function is called by:
 27410 ;;		__i2c_write
 27411 ;;		__i2c_eeprom_busy
 27412 ;;		_i2c_display_write_fixed
 27413 ;;		__i2c_read
 27414 ;;		_i2c_adc_read
 27415 ;;		_i2c_display_write
 27416 ;; This function uses a non-reentrant model
 27417 ;;
 27418                           
 27419                           	psect	text96
 27420  01235E                     __ptext96:
 27421                           	opt stack 0
 27422  01235E                     __i2c_send:
 27423                           	opt stack 17
 27424                           
 27425                           ;incstack = 0
 27426                           ;__i2c_send@dat stored from wreg
 27427  01235E  0100               	movlb	0	; () banked
 27428  012360  6F60               	movwf	__i2c_send@dat& (0+255),b
 27429                           
 27430                           ;i2c.c: 52: SSP1BUF = dat;
 27431  012362  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 27432  012366  0012               	return		;funcret
 27433  012368                     __end_of__i2c_send:
 27434                           	opt stack 0
 27435                           tosu	equ	0xFFF
 27436                           tosh	equ	0xFFE
 27437                           tosl	equ	0xFFD
 27438                           pclath	equ	0xFFA
 27439                           tblptru	equ	0xFF8
 27440                           tblptrh	equ	0xFF7
 27441                           tblptrl	equ	0xFF6
 27442                           tablat	equ	0xFF5
 27443                           prodh	equ	0xFF4
 27444                           prodl	equ	0xFF3
 27445                           intcon	equ	0xFF2
 27446                           indf0	equ	0xFEF
 27447                           postinc0	equ	0xFEE
 27448                           fsr0h	equ	0xFEA
 27449                           fsr0l	equ	0xFE9
 27450                           wreg	equ	0xFE8
 27451                           indf1	equ	0xFE7
 27452                           postdec1	equ	0xFE5
 27453                           plusw1	equ	0xFE3
 27454                           fsr1h	equ	0xFE2
 27455                           fsr1l	equ	0xFE1
 27456                           indf2	equ	0xFDF
 27457                           postinc2	equ	0xFDE
 27458                           postdec2	equ	0xFDD
 27459                           plusw2	equ	0xFDB
 27460                           fsr2h	equ	0xFDA
 27461                           fsr2l	equ	0xFD9
 27462                           status	equ	0xFD8
 27463                           
 27464 ;; *************** function __parse_command_long *****************
 27465 ;; Defined at:
 27466 ;;		line 334 in file "api.c"
 27467 ;; Parameters:    Size  Location     Type
 27468 ;;  data            2   46[BANK0 ] PTR unsigned char 
 27469 ;;		 -> ReceivedDataBuffer(64), 
 27470 ;;  out_buffer      2   48[BANK0 ] PTR unsigned char 
 27471 ;;		 -> ToSendDataBuffer(64), 
 27472 ;;  out_idx_ptr     2   50[BANK0 ] PTR unsigned char 
 27473 ;;		 -> api_parse@out_idx(1), 
 27474 ;; Auto vars:     Size  Location     Type
 27475 ;;  length          1   52[BANK0 ] unsigned char 
 27476 ;; Return value:  Size  Location     Type
 27477 ;;                  1    wreg      unsigned char 
 27478 ;; Registers used:
 27479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27480 ;; Tracked objects:
 27481 ;;		On entry : 0/0
 27482 ;;		On exit  : 0/0
 27483 ;;		Unchanged: 0/0
 27484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27485 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27486 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27488 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27489 ;;Total ram usage:        7 bytes
 27490 ;; Hardware stack levels used:    1
 27491 ;; Hardware stack levels required when called:   17
 27492 ;; This function calls:
 27493 ;;		__parse_format_drive
 27494 ;; This function is called by:
 27495 ;;		_api_parse
 27496 ;; This function uses a non-reentrant model
 27497 ;;
 27498                           
 27499                           	psect	text97
 27500  011D38                     __ptext97:
 27501                           	opt stack 0
 27502  011D38                     __parse_command_long:
 27503                           	opt stack 11
 27504                           
 27505                           ;api.c: 336: uint8_t length = 65;
 27506                           
 27507                           ;incstack = 0
 27508  011D38  0E41               	movlw	65
 27509  011D3A  0100               	movlb	0	; () banked
 27510  011D3C  6F94               	movwf	__parse_command_long@length& (0+255),b
 27511                           
 27512                           ;api.c: 338: switch(data[0])
 27513  011D3E  D011               	goto	l2225
 27514  011D40                     
 27515                           ; BSR set to: 0
 27516                           ;api.c: 341: length = _parse_format_drive(data, out_buffer, out_idx_ptr);
 27517                           
 27518                           ; BSR set to: 0
 27519  011D40  C08E  F086         	movff	__parse_command_long@data,__parse_format_drive@data
 27520  011D44  C08F  F087         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 27521  011D48  C090  F088         	movff	__parse_command_long@out_buffer,__parse_format_drive@out_buffer
 27522  011D4C  C091  F089         	movff	__parse_command_long@out_buffer+1,__parse_format_drive@out_buffer+1
 27523  011D50  C092  F08A         	movff	__parse_command_long@out_idx_ptr,__parse_format_drive@out_idx_ptr
 27524  011D54  C093  F08B         	movff	__parse_command_long@out_idx_ptr+1,__parse_format_drive@out_idx_ptr+1
 27525  011D58  EC44  F083         	call	__parse_format_drive	;wreg free
 27526  011D5C  0100               	movlb	0	; () banked
 27527  011D5E  6F94               	movwf	__parse_command_long@length& (0+255),b
 27528                           
 27529                           ; BSR set to: 0
 27530                           ;api.c: 343: }
 27531                           
 27532                           ;api.c: 342: break;
 27533  011D60  D008               	goto	l2227
 27534  011D62                     l2225:
 27535                           
 27536                           ; BSR set to: 0
 27537                           
 27538                           ; BSR set to: 0
 27539  011D62  C08E  FFD9         	movff	__parse_command_long@data,fsr2l
 27540  011D66  C08F  FFDA         	movff	__parse_command_long@data+1,fsr2h
 27541  011D6A  50DF               	movf	indf2,w,c
 27542                           
 27543                           ; Switch size 1, requested type "space"
 27544                           ; Number of cases is 1, Range of values is 86 to 86
 27545                           ; switch strategies available:
 27546                           ; Name         Instructions Cycles
 27547                           ; simple_byte            4     3 (average)
 27548                           ;	Chosen strategy is simple_byte
 27549  011D6C  0A56               	xorlw	86	; case 86
 27550  011D6E  B4D8               	btfsc	status,2,c
 27551  011D70  D7E7               	goto	l2226
 27552  011D72                     l2227:
 27553                           
 27554                           ; BSR set to: 0
 27555                           ;api.c: 345: return length;
 27556                           
 27557                           ; BSR set to: 0
 27558  011D72  5194               	movf	__parse_command_long@length& (0+255),w,b
 27559  011D74  0012               	return	
 27560  011D76                     __end_of__parse_command_long:
 27561                           	opt stack 0
 27562                           tosu	equ	0xFFF
 27563                           tosh	equ	0xFFE
 27564                           tosl	equ	0xFFD
 27565                           pclath	equ	0xFFA
 27566                           tblptru	equ	0xFF8
 27567                           tblptrh	equ	0xFF7
 27568                           tblptrl	equ	0xFF6
 27569                           tablat	equ	0xFF5
 27570                           prodh	equ	0xFF4
 27571                           prodl	equ	0xFF3
 27572                           intcon	equ	0xFF2
 27573                           indf0	equ	0xFEF
 27574                           postinc0	equ	0xFEE
 27575                           fsr0h	equ	0xFEA
 27576                           fsr0l	equ	0xFE9
 27577                           wreg	equ	0xFE8
 27578                           indf1	equ	0xFE7
 27579                           postdec1	equ	0xFE5
 27580                           plusw1	equ	0xFE3
 27581                           fsr1h	equ	0xFE2
 27582                           fsr1l	equ	0xFE1
 27583                           indf2	equ	0xFDF
 27584                           postinc2	equ	0xFDE
 27585                           postdec2	equ	0xFDD
 27586                           plusw2	equ	0xFDB
 27587                           fsr2h	equ	0xFDA
 27588                           fsr2l	equ	0xFD9
 27589                           status	equ	0xFD8
 27590                           
 27591 ;; *************** function __parse_format_drive *****************
 27592 ;; Defined at:
 27593 ;;		line 348 in file "api.c"
 27594 ;; Parameters:    Size  Location     Type
 27595 ;;  data            2   38[BANK0 ] PTR unsigned char 
 27596 ;;		 -> ReceivedDataBuffer(64), 
 27597 ;;  out_buffer      2   40[BANK0 ] PTR unsigned char 
 27598 ;;		 -> ToSendDataBuffer(64), 
 27599 ;;  out_idx_ptr     2   42[BANK0 ] PTR unsigned char 
 27600 ;;		 -> api_parse@out_idx(1), 
 27601 ;; Auto vars:     Size  Location     Type
 27602 ;;  return_value    1   45[BANK0 ] unsigned char 
 27603 ;; Return value:  Size  Location     Type
 27604 ;;                  1    wreg      unsigned char 
 27605 ;; Registers used:
 27606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27607 ;; Tracked objects:
 27608 ;;		On entry : 0/0
 27609 ;;		On exit  : 0/0
 27610 ;;		Unchanged: 0/0
 27611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27612 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27613 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27614 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27615 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27616 ;;Total ram usage:        8 bytes
 27617 ;; Hardware stack levels used:    1
 27618 ;; Hardware stack levels required when called:   16
 27619 ;; This function calls:
 27620 ;;		_fat_format
 27621 ;; This function is called by:
 27622 ;;		__parse_command_long
 27623 ;; This function uses a non-reentrant model
 27624 ;;
 27625                           
 27626                           	psect	text98
 27627  010688                     __ptext98:
 27628                           	opt stack 0
 27629  010688                     __parse_format_drive:
 27630                           	opt stack 11
 27631                           
 27632                           ;api.c: 352: uint8_t return_value;;api.c: 354: if((data[0]!=COMMAND_FORMAT_DRIVE) || (da
      +                          ta[1]!=0xDA) || (data[2]!=0x22))
 27633                           
 27634                           ; BSR set to: 0
 27635                           ;incstack = 0
 27636  010688  C086  FFD9         	movff	__parse_format_drive@data,fsr2l
 27637  01068C  C087  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 27638  010690  0E56               	movlw	86
 27639  010692  18DE               	xorwf	postinc2,w,c
 27640  010694  A4D8               	btfss	status,2,c
 27641  010696  D015               	goto	u17920
 27642  010698  0100               	movlb	0	; () banked
 27643  01069A  EE20 F001          	lfsr	2,1
 27644  01069E  5186               	movf	__parse_format_drive@data& (0+255),w,b
 27645  0106A0  26D9               	addwf	fsr2l,f,c
 27646  0106A2  5187               	movf	(__parse_format_drive@data+1)& (0+255),w,b
 27647  0106A4  22DA               	addwfc	fsr2h,f,c
 27648  0106A6  0EDA               	movlw	218
 27649  0106A8  18DE               	xorwf	postinc2,w,c
 27650  0106AA  A4D8               	btfss	status,2,c
 27651  0106AC  D00A               	goto	u17920
 27652                           
 27653                           ; BSR set to: 0
 27654  0106AE  EE20 F002          	lfsr	2,2
 27655  0106B2  5186               	movf	__parse_format_drive@data& (0+255),w,b
 27656  0106B4  26D9               	addwf	fsr2l,f,c
 27657  0106B6  5187               	movf	(__parse_format_drive@data+1)& (0+255),w,b
 27658  0106B8  22DA               	addwfc	fsr2h,f,c
 27659  0106BA  0E22               	movlw	34
 27660  0106BC  18DE               	xorwf	postinc2,w,c
 27661  0106BE  B4D8               	btfsc	status,2,c
 27662  0106C0  D002               	goto	l2231
 27663  0106C2                     u17920:
 27664                           
 27665                           ;api.c: 355: {;api.c: 356: return 3;
 27666                           
 27667                           ; BSR set to: 0
 27668  0106C2  0E03               	movlw	3
 27669  0106C4  0012               	return	
 27670  0106C6                     l2231:
 27671                           
 27672                           ;api.c: 357: };api.c: 359: return_value = fat_format();
 27673  0106C6  EC1E  F06D         	call	_fat_format	;wreg free
 27674  0106CA  0100               	movlb	0	; () banked
 27675  0106CC  6F8D               	movwf	__parse_format_drive@return_value& (0+255),b
 27676                           
 27677                           ; BSR set to: 0
 27678                           ;api.c: 362: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 27679  0106CE  C08A  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 27680  0106D2  C08B  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 27681  0106D6  50DF               	movf	indf2,w,c
 27682  0106D8  B4D8               	btfsc	status,2,c
 27683  0106DA  D02B               	goto	l2235
 27684                           
 27685                           ; BSR set to: 0
 27686  0106DC  C08A  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 27687  0106E0  C08B  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 27688  0106E4  0E3F               	movlw	63
 27689  0106E6  60DF               	cpfslt	indf2,c
 27690  0106E8  D024               	goto	l2235
 27691                           
 27692                           ; BSR set to: 0
 27693                           ;api.c: 363: {;api.c: 364: out_buffer[(*out_idx_ptr)++] = COMMAND_FORMAT_DRIVE;
 27694  0106EA  C08A  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 27695  0106EE  C08B  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 27696  0106F2  CFDF F08C          	movff	indf2,??__parse_format_drive
 27697  0106F6  0E01               	movlw	1
 27698  0106F8  26DF               	addwf	indf2,f,c
 27699  0106FA  518C               	movf	??__parse_format_drive& (0+255),w,b
 27700  0106FC  0D01               	mullw	1
 27701  0106FE  50F3               	movf	prodl,w,c
 27702  010700  2588               	addwf	__parse_format_drive@out_buffer& (0+255),w,b
 27703  010702  6ED9               	movwf	fsr2l,c
 27704  010704  50F4               	movf	prodh,w,c
 27705  010706  2189               	addwfc	(__parse_format_drive@out_buffer+1)& (0+255),w,b
 27706  010708  6EDA               	movwf	fsr2h,c
 27707  01070A  0E56               	movlw	86
 27708  01070C  6EDF               	movwf	indf2,c
 27709                           
 27710                           ;api.c: 365: out_buffer[(*out_idx_ptr)++] = return_value;
 27711  01070E  C08A  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 27712  010712  C08B  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 27713  010716  CFDF F08C          	movff	indf2,??__parse_format_drive
 27714  01071A  0E01               	movlw	1
 27715  01071C  26DF               	addwf	indf2,f,c
 27716  01071E  518C               	movf	??__parse_format_drive& (0+255),w,b
 27717  010720  0D01               	mullw	1
 27718  010722  50F3               	movf	prodl,w,c
 27719  010724  2588               	addwf	__parse_format_drive@out_buffer& (0+255),w,b
 27720  010726  6ED9               	movwf	fsr2l,c
 27721  010728  50F4               	movf	prodh,w,c
 27722  01072A  2189               	addwfc	(__parse_format_drive@out_buffer+1)& (0+255),w,b
 27723  01072C  6EDA               	movwf	fsr2h,c
 27724  01072E  C08D  FFDF         	movff	__parse_format_drive@return_value,indf2
 27725  010732                     l2235:
 27726                           
 27727                           ; BSR set to: 0
 27728                           ;api.c: 366: };api.c: 368: return 3;
 27729                           
 27730                           ; BSR set to: 0
 27731  010732  0E03               	movlw	3
 27732  010734  0012               	return	
 27733  010736                     __end_of__parse_format_drive:
 27734                           	opt stack 0
 27735                           tosu	equ	0xFFF
 27736                           tosh	equ	0xFFE
 27737                           tosl	equ	0xFFD
 27738                           pclath	equ	0xFFA
 27739                           tblptru	equ	0xFF8
 27740                           tblptrh	equ	0xFF7
 27741                           tblptrl	equ	0xFF6
 27742                           tablat	equ	0xFF5
 27743                           prodh	equ	0xFF4
 27744                           prodl	equ	0xFF3
 27745                           intcon	equ	0xFF2
 27746                           indf0	equ	0xFEF
 27747                           postinc0	equ	0xFEE
 27748                           fsr0h	equ	0xFEA
 27749                           fsr0l	equ	0xFE9
 27750                           wreg	equ	0xFE8
 27751                           indf1	equ	0xFE7
 27752                           postdec1	equ	0xFE5
 27753                           plusw1	equ	0xFE3
 27754                           fsr1h	equ	0xFE2
 27755                           fsr1l	equ	0xFE1
 27756                           indf2	equ	0xFDF
 27757                           postinc2	equ	0xFDE
 27758                           postdec2	equ	0xFDD
 27759                           plusw2	equ	0xFDB
 27760                           fsr2h	equ	0xFDA
 27761                           fsr2l	equ	0xFD9
 27762                           status	equ	0xFD8
 27763                           
 27764 ;; *************** function _fat_format *****************
 27765 ;; Defined at:
 27766 ;;		line 1320 in file "fat16.c"
 27767 ;; Parameters:    Size  Location     Type
 27768 ;;		None
 27769 ;; Auto vars:     Size  Location     Type
 27770 ;;  cntr            2   36[BANK0 ] unsigned int 
 27771 ;; Return value:  Size  Location     Type
 27772 ;;                  1    wreg      unsigned char 
 27773 ;; Registers used:
 27774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27775 ;; Tracked objects:
 27776 ;;		On entry : 0/0
 27777 ;;		On exit  : 0/0
 27778 ;;		Unchanged: 0/0
 27779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27781 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27783 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27784 ;;Total ram usage:        2 bytes
 27785 ;; Hardware stack levels used:    1
 27786 ;; Hardware stack levels required when called:   15
 27787 ;; This function calls:
 27788 ;;		__get_data
 27789 ;;		__get_fat
 27790 ;;		__get_fbr
 27791 ;;		__get_mbr
 27792 ;;		__get_root
 27793 ;;		_flash_sector_write
 27794 ;; This function is called by:
 27795 ;;		_fat_init
 27796 ;;		__parse_format_drive
 27797 ;; This function uses a non-reentrant model
 27798 ;;
 27799                           
 27800                           	psect	text99
 27801  00DA3C                     __ptext99:
 27802                           	opt stack 0
 27803  00DA3C                     _fat_format:
 27804                           	opt stack 13
 27805                           
 27806                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
 27807                           
 27808                           ;incstack = 0
 27809  00DA3C  0E00               	movlw	0
 27810  00DA3E  0100               	movlb	0	; () banked
 27811  00DA40  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 27812  00DA42  0E00               	movlw	0
 27813  00DA44  6F84               	movwf	fat_format@cntr& (0+255),b
 27814  00DA46                     l18114:
 27815                           
 27816                           ; BSR set to: 0
 27817  00DA46  0E02               	movlw	2
 27818  00DA48  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
 27819  00DA4A  B0D8               	btfsc	status,0,c
 27820  00DA4C  D011               	goto	u17650
 27821                           
 27822                           ; BSR set to: 0
 27823                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
 27824                           
 27825                           ; BSR set to: 0
 27826                           
 27827                           ; BSR set to: 0
 27828  00DA4E  0E00               	movlw	low _buffer
 27829  00DA50  2584               	addwf	fat_format@cntr& (0+255),w,b
 27830  00DA52  6ED9               	movwf	fsr2l,c
 27831  00DA54  0E08               	movlw	high _buffer
 27832  00DA56  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
 27833  00DA58  6EDA               	movwf	fsr2h,c
 27834  00DA5A  C084  F060         	movff	fat_format@cntr,__get_mbr@idx
 27835  00DA5E  C085  F061         	movff	fat_format@cntr+1,__get_mbr@idx+1
 27836  00DA62  ECBD  F07E         	call	__get_mbr	;wreg free
 27837  00DA66  6EDF               	movwf	indf2,c
 27838  00DA68  0100               	movlb	0	; () banked
 27839  00DA6A  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 27840  00DA6C  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 27841  00DA6E  D7EB               	goto	l18114
 27842  00DA70                     u17650:
 27843                           
 27844                           ; BSR set to: 0
 27845                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
 27846                           
 27847                           ; BSR set to: 0
 27848  00DA70  0E00               	movlw	0
 27849  00DA72  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
 27850  00DA74  0E00               	movlw	0
 27851  00DA76  6F7F               	movwf	flash_sector_write@page& (0+255),b
 27852  00DA78  0E00               	movlw	low _buffer
 27853  00DA7A  6F81               	movwf	flash_sector_write@data& (0+255),b
 27854  00DA7C  0E08               	movlw	high _buffer
 27855  00DA7E  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 27856  00DA80  EC1C  F08D         	call	_flash_sector_write	;wreg free
 27857                           
 27858                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
 27859  00DA84  0E00               	movlw	0
 27860  00DA86  0100               	movlb	0	; () banked
 27861  00DA88  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 27862  00DA8A  0E00               	movlw	0
 27863  00DA8C  6F84               	movwf	fat_format@cntr& (0+255),b
 27864  00DA8E                     l18128:
 27865                           
 27866                           ; BSR set to: 0
 27867  00DA8E  0E02               	movlw	2
 27868  00DA90  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
 27869  00DA92  B0D8               	btfsc	status,0,c
 27870  00DA94  D011               	goto	u17670
 27871                           
 27872                           ; BSR set to: 0
 27873                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
 27874                           
 27875                           ; BSR set to: 0
 27876                           
 27877                           ; BSR set to: 0
 27878  00DA96  0E00               	movlw	low _buffer
 27879  00DA98  2584               	addwf	fat_format@cntr& (0+255),w,b
 27880  00DA9A  6ED9               	movwf	fsr2l,c
 27881  00DA9C  0E08               	movlw	high _buffer
 27882  00DA9E  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
 27883  00DAA0  6EDA               	movwf	fsr2h,c
 27884  00DAA2  C084  F060         	movff	fat_format@cntr,__get_fbr@idx
 27885  00DAA6  C085  F061         	movff	fat_format@cntr+1,__get_fbr@idx+1
 27886  00DAAA  ECA5  F069         	call	__get_fbr	;wreg free
 27887  00DAAE  6EDF               	movwf	indf2,c
 27888  00DAB0  0100               	movlb	0	; () banked
 27889  00DAB2  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 27890  00DAB4  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 27891  00DAB6  D7EB               	goto	l18128
 27892  00DAB8                     u17670:
 27893                           
 27894                           ; BSR set to: 0
 27895                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
 27896                           
 27897                           ; BSR set to: 0
 27898  00DAB8  0E00               	movlw	0
 27899  00DABA  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
 27900  00DABC  0E01               	movlw	1
 27901  00DABE  6F7F               	movwf	flash_sector_write@page& (0+255),b
 27902  00DAC0  0E00               	movlw	low _buffer
 27903  00DAC2  6F81               	movwf	flash_sector_write@data& (0+255),b
 27904  00DAC4  0E08               	movlw	high _buffer
 27905  00DAC6  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 27906  00DAC8  EC1C  F08D         	call	_flash_sector_write	;wreg free
 27907                           
 27908                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
 27909  00DACC  0E00               	movlw	0
 27910  00DACE  0100               	movlb	0	; () banked
 27911  00DAD0  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 27912  00DAD2  0E00               	movlw	0
 27913  00DAD4  6F84               	movwf	fat_format@cntr& (0+255),b
 27914  00DAD6                     l18142:
 27915                           
 27916                           ; BSR set to: 0
 27917  00DAD6  0E02               	movlw	2
 27918  00DAD8  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
 27919  00DADA  B0D8               	btfsc	status,0,c
 27920  00DADC  D011               	goto	u17690
 27921                           
 27922                           ; BSR set to: 0
 27923                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
 27924                           
 27925                           ; BSR set to: 0
 27926                           
 27927                           ; BSR set to: 0
 27928  00DADE  0E00               	movlw	low _buffer
 27929  00DAE0  2584               	addwf	fat_format@cntr& (0+255),w,b
 27930  00DAE2  6ED9               	movwf	fsr2l,c
 27931  00DAE4  0E08               	movlw	high _buffer
 27932  00DAE6  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
 27933  00DAE8  6EDA               	movwf	fsr2h,c
 27934  00DAEA  C084  F060         	movff	fat_format@cntr,__get_fat@idx
 27935  00DAEE  C085  F061         	movff	fat_format@cntr+1,__get_fat@idx+1
 27936  00DAF2  ECCE  F08B         	call	__get_fat	;wreg free
 27937  00DAF6  6EDF               	movwf	indf2,c
 27938  00DAF8  0100               	movlb	0	; () banked
 27939  00DAFA  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 27940  00DAFC  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 27941  00DAFE  D7EB               	goto	l18142
 27942  00DB00                     u17690:
 27943                           
 27944                           ; BSR set to: 0
 27945                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
 27946                           
 27947                           ; BSR set to: 0
 27948  00DB00  0E00               	movlw	0
 27949  00DB02  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
 27950  00DB04  0E02               	movlw	2
 27951  00DB06  6F7F               	movwf	flash_sector_write@page& (0+255),b
 27952  00DB08  0E00               	movlw	low _buffer
 27953  00DB0A  6F81               	movwf	flash_sector_write@data& (0+255),b
 27954  00DB0C  0E08               	movlw	high _buffer
 27955  00DB0E  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 27956  00DB10  EC1C  F08D         	call	_flash_sector_write	;wreg free
 27957                           
 27958                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
 27959  00DB14  0E00               	movlw	0
 27960  00DB16  0100               	movlb	0	; () banked
 27961  00DB18  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 27962  00DB1A  0E00               	movlw	0
 27963  00DB1C  6F84               	movwf	fat_format@cntr& (0+255),b
 27964  00DB1E                     l18156:
 27965                           
 27966                           ; BSR set to: 0
 27967  00DB1E  0E02               	movlw	2
 27968  00DB20  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
 27969  00DB22  B0D8               	btfsc	status,0,c
 27970  00DB24  D00B               	goto	u17710
 27971                           
 27972                           ; BSR set to: 0
 27973                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
 27974                           
 27975                           ; BSR set to: 0
 27976                           
 27977                           ; BSR set to: 0
 27978  00DB26  0E00               	movlw	low _buffer
 27979  00DB28  2584               	addwf	fat_format@cntr& (0+255),w,b
 27980  00DB2A  6ED9               	movwf	fsr2l,c
 27981  00DB2C  0E08               	movlw	high _buffer
 27982  00DB2E  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
 27983  00DB30  6EDA               	movwf	fsr2h,c
 27984  00DB32  0E00               	movlw	0
 27985  00DB34  6EDF               	movwf	indf2,c
 27986                           
 27987                           ; BSR set to: 0
 27988  00DB36  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 27989  00DB38  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 27990  00DB3A  D7F1               	goto	l18156
 27991  00DB3C                     u17710:
 27992                           
 27993                           ; BSR set to: 0
 27994                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
 27995                           
 27996                           ; BSR set to: 0
 27997  00DB3C  0E00               	movlw	0
 27998  00DB3E  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 27999  00DB40  0E03               	movlw	3
 28000  00DB42  6F84               	movwf	fat_format@cntr& (0+255),b
 28001  00DB44                     l18168:
 28002                           
 28003                           ; BSR set to: 0
 28004  00DB44  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
 28005  00DB46  E112               	bnz	l18178
 28006  00DB48  0E22               	movlw	34
 28007  00DB4A  5D84               	subwf	fat_format@cntr& (0+255),w,b
 28008  00DB4C  B0D8               	btfsc	status,0,c
 28009  00DB4E  D00E               	goto	u17730
 28010                           
 28011                           ; BSR set to: 0
 28012                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
 28013                           
 28014                           ; BSR set to: 0
 28015                           
 28016                           ; BSR set to: 0
 28017  00DB50  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
 28018  00DB54  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
 28019  00DB58  0E00               	movlw	low _buffer
 28020  00DB5A  6F81               	movwf	flash_sector_write@data& (0+255),b
 28021  00DB5C  0E08               	movlw	high _buffer
 28022  00DB5E  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 28023  00DB60  EC1C  F08D         	call	_flash_sector_write	;wreg free
 28024  00DB64  0100               	movlb	0	; () banked
 28025  00DB66  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 28026  00DB68  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 28027  00DB6A  D7EC               	goto	l18168
 28028  00DB6C                     u17730:
 28029  00DB6C                     l18178:
 28030                           
 28031                           ; BSR set to: 0
 28032                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
 28033  00DB6C  0E00               	movlw	0
 28034  00DB6E  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 28035  00DB70  0E00               	movlw	0
 28036  00DB72  6F84               	movwf	fat_format@cntr& (0+255),b
 28037  00DB74                     l18180:
 28038                           
 28039                           ; BSR set to: 0
 28040  00DB74  0E02               	movlw	2
 28041  00DB76  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
 28042  00DB78  B0D8               	btfsc	status,0,c
 28043  00DB7A  D011               	goto	u17750
 28044                           
 28045                           ; BSR set to: 0
 28046                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
 28047                           
 28048                           ; BSR set to: 0
 28049                           
 28050                           ; BSR set to: 0
 28051  00DB7C  0E00               	movlw	low _buffer
 28052  00DB7E  2584               	addwf	fat_format@cntr& (0+255),w,b
 28053  00DB80  6ED9               	movwf	fsr2l,c
 28054  00DB82  0E08               	movlw	high _buffer
 28055  00DB84  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
 28056  00DB86  6EDA               	movwf	fsr2h,c
 28057  00DB88  C084  F060         	movff	fat_format@cntr,__get_root@idx
 28058  00DB8C  C085  F061         	movff	fat_format@cntr+1,__get_root@idx+1
 28059  00DB90  EC19  F070         	call	__get_root	;wreg free
 28060  00DB94  6EDF               	movwf	indf2,c
 28061  00DB96  0100               	movlb	0	; () banked
 28062  00DB98  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 28063  00DB9A  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 28064  00DB9C  D7EB               	goto	l18180
 28065  00DB9E                     u17750:
 28066                           
 28067                           ; BSR set to: 0
 28068                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
 28069                           
 28070                           ; BSR set to: 0
 28071  00DB9E  0E00               	movlw	0
 28072  00DBA0  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
 28073  00DBA2  0E22               	movlw	34
 28074  00DBA4  6F7F               	movwf	flash_sector_write@page& (0+255),b
 28075  00DBA6  0E00               	movlw	low _buffer
 28076  00DBA8  6F81               	movwf	flash_sector_write@data& (0+255),b
 28077  00DBAA  0E08               	movlw	high _buffer
 28078  00DBAC  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 28079  00DBAE  EC1C  F08D         	call	_flash_sector_write	;wreg free
 28080                           
 28081                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
 28082  00DBB2  0E00               	movlw	0
 28083  00DBB4  0100               	movlb	0	; () banked
 28084  00DBB6  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 28085  00DBB8  0E00               	movlw	0
 28086  00DBBA  6F84               	movwf	fat_format@cntr& (0+255),b
 28087  00DBBC                     l18194:
 28088                           
 28089                           ; BSR set to: 0
 28090  00DBBC  0E02               	movlw	2
 28091  00DBBE  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
 28092  00DBC0  B0D8               	btfsc	status,0,c
 28093  00DBC2  D00B               	goto	u17770
 28094                           
 28095                           ; BSR set to: 0
 28096                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
 28097                           
 28098                           ; BSR set to: 0
 28099                           
 28100                           ; BSR set to: 0
 28101  00DBC4  0E00               	movlw	low _buffer
 28102  00DBC6  2584               	addwf	fat_format@cntr& (0+255),w,b
 28103  00DBC8  6ED9               	movwf	fsr2l,c
 28104  00DBCA  0E08               	movlw	high _buffer
 28105  00DBCC  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
 28106  00DBCE  6EDA               	movwf	fsr2h,c
 28107  00DBD0  0E00               	movlw	0
 28108  00DBD2  6EDF               	movwf	indf2,c
 28109                           
 28110                           ; BSR set to: 0
 28111  00DBD4  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 28112  00DBD6  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 28113  00DBD8  D7F1               	goto	l18194
 28114  00DBDA                     u17770:
 28115                           
 28116                           ; BSR set to: 0
 28117                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
 28118                           
 28119                           ; BSR set to: 0
 28120  00DBDA  0E00               	movlw	0
 28121  00DBDC  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 28122  00DBDE  0E23               	movlw	35
 28123  00DBE0  6F84               	movwf	fat_format@cntr& (0+255),b
 28124  00DBE2                     l18206:
 28125                           
 28126                           ; BSR set to: 0
 28127  00DBE2  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
 28128  00DBE4  E112               	bnz	l18216
 28129  00DBE6  0E26               	movlw	38
 28130  00DBE8  5D84               	subwf	fat_format@cntr& (0+255),w,b
 28131  00DBEA  B0D8               	btfsc	status,0,c
 28132  00DBEC  D00E               	goto	u17790
 28133                           
 28134                           ; BSR set to: 0
 28135                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
 28136                           
 28137                           ; BSR set to: 0
 28138                           
 28139                           ; BSR set to: 0
 28140  00DBEE  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
 28141  00DBF2  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
 28142  00DBF6  0E00               	movlw	low _buffer
 28143  00DBF8  6F81               	movwf	flash_sector_write@data& (0+255),b
 28144  00DBFA  0E08               	movlw	high _buffer
 28145  00DBFC  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 28146  00DBFE  EC1C  F08D         	call	_flash_sector_write	;wreg free
 28147  00DC02  0100               	movlb	0	; () banked
 28148  00DC04  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 28149  00DC06  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 28150  00DC08  D7EC               	goto	l18206
 28151  00DC0A                     u17790:
 28152  00DC0A                     l18216:
 28153                           
 28154                           ; BSR set to: 0
 28155                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
 28156  00DC0A  0E00               	movlw	0
 28157  00DC0C  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 28158  00DC0E  0E00               	movlw	0
 28159  00DC10  6F84               	movwf	fat_format@cntr& (0+255),b
 28160  00DC12                     l18218:
 28161                           
 28162                           ; BSR set to: 0
 28163  00DC12  0E02               	movlw	2
 28164  00DC14  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
 28165  00DC16  B0D8               	btfsc	status,0,c
 28166  00DC18  D011               	goto	u17810
 28167                           
 28168                           ; BSR set to: 0
 28169                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
 28170                           
 28171                           ; BSR set to: 0
 28172                           
 28173                           ; BSR set to: 0
 28174  00DC1A  0E00               	movlw	low _buffer
 28175  00DC1C  2584               	addwf	fat_format@cntr& (0+255),w,b
 28176  00DC1E  6ED9               	movwf	fsr2l,c
 28177  00DC20  0E08               	movlw	high _buffer
 28178  00DC22  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
 28179  00DC24  6EDA               	movwf	fsr2h,c
 28180  00DC26  C084  F060         	movff	fat_format@cntr,__get_data@idx
 28181  00DC2A  C085  F061         	movff	fat_format@cntr+1,__get_data@idx+1
 28182  00DC2E  EC82  F090         	call	__get_data	;wreg free
 28183  00DC32  6EDF               	movwf	indf2,c
 28184  00DC34  0100               	movlb	0	; () banked
 28185  00DC36  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 28186  00DC38  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 28187  00DC3A  D7EB               	goto	l18218
 28188  00DC3C                     u17810:
 28189                           
 28190                           ; BSR set to: 0
 28191                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
 28192                           
 28193                           ; BSR set to: 0
 28194  00DC3C  0E00               	movlw	0
 28195  00DC3E  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
 28196  00DC40  0E26               	movlw	38
 28197  00DC42  6F7F               	movwf	flash_sector_write@page& (0+255),b
 28198  00DC44  0E00               	movlw	low _buffer
 28199  00DC46  6F81               	movwf	flash_sector_write@data& (0+255),b
 28200  00DC48  0E08               	movlw	high _buffer
 28201  00DC4A  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 28202  00DC4C  EC1C  F08D         	call	_flash_sector_write	;wreg free
 28203                           
 28204                           ;fat16.c: 1379: return 0x00;
 28205  00DC50  0E00               	movlw	0
 28206  00DC52  0012               	return	
 28207  00DC54                     __end_of_fat_format:
 28208                           	opt stack 0
 28209                           tosu	equ	0xFFF
 28210                           tosh	equ	0xFFE
 28211                           tosl	equ	0xFFD
 28212                           pclath	equ	0xFFA
 28213                           tblptru	equ	0xFF8
 28214                           tblptrh	equ	0xFF7
 28215                           tblptrl	equ	0xFF6
 28216                           tablat	equ	0xFF5
 28217                           prodh	equ	0xFF4
 28218                           prodl	equ	0xFF3
 28219                           intcon	equ	0xFF2
 28220                           indf0	equ	0xFEF
 28221                           postinc0	equ	0xFEE
 28222                           fsr0h	equ	0xFEA
 28223                           fsr0l	equ	0xFE9
 28224                           wreg	equ	0xFE8
 28225                           indf1	equ	0xFE7
 28226                           postdec1	equ	0xFE5
 28227                           plusw1	equ	0xFE3
 28228                           fsr1h	equ	0xFE2
 28229                           fsr1l	equ	0xFE1
 28230                           indf2	equ	0xFDF
 28231                           postinc2	equ	0xFDE
 28232                           postdec2	equ	0xFDD
 28233                           plusw2	equ	0xFDB
 28234                           fsr2h	equ	0xFDA
 28235                           fsr2l	equ	0xFD9
 28236                           status	equ	0xFD8
 28237                           
 28238 ;; *************** function _flash_sector_write *****************
 28239 ;; Defined at:
 28240 ;;		line 434 in file "flash.c"
 28241 ;; Parameters:    Size  Location     Type
 28242 ;;  page            2   31[BANK0 ] unsigned int 
 28243 ;;  data            2   33[BANK0 ] PTR unsigned char 
 28244 ;;		 -> buffer(512), 
 28245 ;; Auto vars:     Size  Location     Type
 28246 ;;  match           1   35[BANK0 ] enum E6962
 28247 ;; Return value:  Size  Location     Type
 28248 ;;                  1    wreg      void 
 28249 ;; Registers used:
 28250 ;;		wreg, status,2, status,0, cstack
 28251 ;; Tracked objects:
 28252 ;;		On entry : 0/0
 28253 ;;		On exit  : 0/0
 28254 ;;		Unchanged: 0/0
 28255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28256 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28257 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28259 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28260 ;;Total ram usage:        5 bytes
 28261 ;; Hardware stack levels used:    1
 28262 ;; Hardware stack levels required when called:   14
 28263 ;; This function calls:
 28264 ;;		__flash_compare_page_to_buffer
 28265 ;;		__flash_write_page_from_buffer
 28266 ;;		__flash_write_to_buffer
 28267 ;; This function is called by:
 28268 ;;		_fat_format
 28269 ;;		__make_cluster_chain
 28270 ;; This function uses a non-reentrant model
 28271 ;;
 28272                           
 28273                           	psect	text100
 28274  011A38                     __ptext100:
 28275                           	opt stack 0
 28276  011A38                     _flash_sector_write:
 28277                           	opt stack 13
 28278                           
 28279                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 28280                           
 28281                           ;incstack = 0
 28282  011A38  0E00               	movlw	0
 28283  011A3A  0100               	movlb	0	; () banked
 28284  011A3C  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 28285  011A3E  0E00               	movlw	0
 28286  011A40  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 28287  011A42  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 28288  011A46  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 28289  011A4A  0E02               	movlw	2
 28290  011A4C  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 28291  011A4E  0E00               	movlw	0
 28292  011A50  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 28293  011A52  0E00               	movlw	0
 28294  011A54  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 28295  011A56  ECA3  F08C         	call	__flash_write_to_buffer	;wreg free
 28296                           
 28297                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 28298  011A5A  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 28299  011A5E  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 28300  011A62  0E00               	movlw	0
 28301  011A64  0100               	movlb	0	; () banked
 28302  011A66  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 28303  011A68  EC68  F087         	call	__flash_compare_page_to_buffer	;wreg free
 28304  011A6C  0100               	movlb	0	; () banked
 28305  011A6E  6F83               	movwf	flash_sector_write@match& (0+255),b
 28306                           
 28307                           ; BSR set to: 0
 28308                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 28309  011A70  0583               	decf	flash_sector_write@match& (0+255),w,b
 28310  011A72  A4D8               	btfss	status,2,c
 28311  011A74  0012               	return	
 28312                           
 28313                           ; BSR set to: 0
 28314                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 28315  011A76  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 28316  011A7A  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 28317  011A7E  0E00               	movlw	0
 28318  011A80  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 28319  011A82  EC1C  F08B         	call	__flash_write_page_from_buffer	;wreg free
 28320  011A86  0012               	return	
 28321  011A88                     __end_of_flash_sector_write:
 28322                           	opt stack 0
 28323                           tosu	equ	0xFFF
 28324                           tosh	equ	0xFFE
 28325                           tosl	equ	0xFFD
 28326                           pclath	equ	0xFFA
 28327                           tblptru	equ	0xFF8
 28328                           tblptrh	equ	0xFF7
 28329                           tblptrl	equ	0xFF6
 28330                           tablat	equ	0xFF5
 28331                           prodh	equ	0xFF4
 28332                           prodl	equ	0xFF3
 28333                           intcon	equ	0xFF2
 28334                           indf0	equ	0xFEF
 28335                           postinc0	equ	0xFEE
 28336                           fsr0h	equ	0xFEA
 28337                           fsr0l	equ	0xFE9
 28338                           wreg	equ	0xFE8
 28339                           indf1	equ	0xFE7
 28340                           postdec1	equ	0xFE5
 28341                           plusw1	equ	0xFE3
 28342                           fsr1h	equ	0xFE2
 28343                           fsr1l	equ	0xFE1
 28344                           indf2	equ	0xFDF
 28345                           postinc2	equ	0xFDE
 28346                           postdec2	equ	0xFDD
 28347                           plusw2	equ	0xFDB
 28348                           fsr2h	equ	0xFDA
 28349                           fsr2l	equ	0xFD9
 28350                           status	equ	0xFD8
 28351                           
 28352 ;; *************** function __flash_write_to_buffer *****************
 28353 ;; Defined at:
 28354 ;;		line 236 in file "flash.c"
 28355 ;; Parameters:    Size  Location     Type
 28356 ;;  start           2   19[BANK0 ] unsigned int 
 28357 ;;  data            2   21[BANK0 ] PTR unsigned char 
 28358 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
 28359 ;;		 -> buffer(512), 
 28360 ;;  data_length     2   23[BANK0 ] unsigned int 
 28361 ;;  buffer          1   25[BANK0 ] enum E6958
 28362 ;; Auto vars:     Size  Location     Type
 28363 ;;  command         4   26[BANK0 ] unsigned char [4]
 28364 ;; Return value:  Size  Location     Type
 28365 ;;                  1    wreg      void 
 28366 ;; Registers used:
 28367 ;;		wreg, status,2, status,0, cstack
 28368 ;; Tracked objects:
 28369 ;;		On entry : 0/0
 28370 ;;		On exit  : 0/0
 28371 ;;		Unchanged: 0/0
 28372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28373 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28374 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28376 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28377 ;;Total ram usage:       11 bytes
 28378 ;; Hardware stack levels used:    1
 28379 ;; Hardware stack levels required when called:   13
 28380 ;; This function calls:
 28381 ;;		__flash_is_busy
 28382 ;;		_spi_tx_tx
 28383 ;; This function is called by:
 28384 ;;		_flash_sector_write
 28385 ;;		_flash_partial_write
 28386 ;;		_flash_write_to_buffer
 28387 ;; This function uses a non-reentrant model
 28388 ;;
 28389                           
 28390                           	psect	text101
 28391  011946                     __ptext101:
 28392                           	opt stack 0
 28393  011946                     __flash_write_to_buffer:
 28394                           	opt stack 13
 28395                           
 28396                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 28397                           
 28398                           ;incstack = 0
 28399  011946  ECE3  F090         	call	__flash_is_busy	;wreg free
 28400  01194A  0900               	iorlw	0
 28401  01194C  A4D8               	btfss	status,2,c
 28402  01194E  D7FB               	goto	__flash_write_to_buffer
 28403                           
 28404                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 28405  011950  0100               	movlb	0	; () banked
 28406  011952  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 28407  011954  A4D8               	btfss	status,2,c
 28408  011956  D002               	goto	l1513
 28409                           
 28410                           ; BSR set to: 0
 28411                           ;flash.c: 245: command[0] = 0x84;
 28412  011958  0E84               	movlw	132
 28413  01195A  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 28414  01195C                     l1513:
 28415                           
 28416                           ; BSR set to: 0
 28417                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 28418                           
 28419                           ; BSR set to: 0
 28420  01195C  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 28421  01195E  A4D8               	btfss	status,2,c
 28422  011960  D002               	goto	l1514
 28423                           
 28424                           ; BSR set to: 0
 28425                           ;flash.c: 247: command[0] = 0x87;
 28426  011962  0E87               	movlw	135
 28427  011964  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 28428  011966                     l1514:
 28429                           
 28430                           ; BSR set to: 0
 28431                           ;flash.c: 249: command[1] = 0x00;
 28432  011966  0E00               	movlw	0
 28433  011968  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 28434                           
 28435                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 28436  01196A  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 28437  01196C  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 28438                           
 28439                           ; BSR set to: 0
 28440                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 28441  01196E  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 28442                           
 28443                           ; BSR set to: 0
 28444                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 28445  011972  0E7A               	movlw	low __flash_write_to_buffer@command
 28446  011974  6F60               	movwf	spi_tx_tx@command& (0+255),b
 28447  011976  0E00               	movlw	high __flash_write_to_buffer@command
 28448  011978  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 28449  01197A  0E00               	movlw	0
 28450  01197C  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 28451  01197E  0E04               	movlw	4
 28452  011980  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 28453  011982  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 28454  011986  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 28455  01198A  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 28456  01198E  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 28457  011992  EC10  F086         	call	_spi_tx_tx	;wreg free
 28458  011996  0012               	return		;funcret
 28459  011998                     __end_of__flash_write_to_buffer:
 28460                           	opt stack 0
 28461                           tosu	equ	0xFFF
 28462                           tosh	equ	0xFFE
 28463                           tosl	equ	0xFFD
 28464                           pclath	equ	0xFFA
 28465                           tblptru	equ	0xFF8
 28466                           tblptrh	equ	0xFF7
 28467                           tblptrl	equ	0xFF6
 28468                           tablat	equ	0xFF5
 28469                           prodh	equ	0xFF4
 28470                           prodl	equ	0xFF3
 28471                           intcon	equ	0xFF2
 28472                           indf0	equ	0xFEF
 28473                           postinc0	equ	0xFEE
 28474                           fsr0h	equ	0xFEA
 28475                           fsr0l	equ	0xFE9
 28476                           wreg	equ	0xFE8
 28477                           indf1	equ	0xFE7
 28478                           postdec1	equ	0xFE5
 28479                           plusw1	equ	0xFE3
 28480                           fsr1h	equ	0xFE2
 28481                           fsr1l	equ	0xFE1
 28482                           indf2	equ	0xFDF
 28483                           postinc2	equ	0xFDE
 28484                           postdec2	equ	0xFDD
 28485                           plusw2	equ	0xFDB
 28486                           fsr2h	equ	0xFDA
 28487                           fsr2l	equ	0xFD9
 28488                           status	equ	0xFD8
 28489                           
 28490 ;; *************** function _spi_tx_tx *****************
 28491 ;; Defined at:
 28492 ;;		line 146 in file "spi.c"
 28493 ;; Parameters:    Size  Location     Type
 28494 ;;  command         2    0[BANK0 ] PTR unsigned char 
 28495 ;;		 -> _flash_write_to_buffer@command(4), 
 28496 ;;  command_leng    2    2[BANK0 ] unsigned int 
 28497 ;;  data            2    4[BANK0 ] PTR unsigned char 
 28498 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
 28499 ;;		 -> buffer(512), 
 28500 ;;  data_length     2    6[BANK0 ] unsigned int 
 28501 ;; Auto vars:     Size  Location     Type
 28502 ;;		None
 28503 ;; Return value:  Size  Location     Type
 28504 ;;                  1    wreg      void 
 28505 ;; Registers used:
 28506 ;;		wreg, status,2, status,0
 28507 ;; Tracked objects:
 28508 ;;		On entry : 0/0
 28509 ;;		On exit  : 0/0
 28510 ;;		Unchanged: 0/0
 28511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28512 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28514 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28515 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28516 ;;Total ram usage:       12 bytes
 28517 ;; Hardware stack levels used:    1
 28518 ;; Hardware stack levels required when called:   10
 28519 ;; This function calls:
 28520 ;;		Nothing
 28521 ;; This function is called by:
 28522 ;;		__flash_write_to_buffer
 28523 ;; This function uses a non-reentrant model
 28524 ;;
 28525                           
 28526                           	psect	text102
 28527  010C20                     __ptext102:
 28528                           	opt stack 0
 28529  010C20                     _spi_tx_tx:
 28530                           	opt stack 15
 28531                           
 28532                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 28533                           
 28534                           ;incstack = 0
 28535  010C20  9E88               	bcf	3976,7,c	;volatile
 28536                           
 28537                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 28538  010C22  9C88               	bcf	3976,6,c	;volatile
 28539                           
 28540                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 28541  010C24  8A88               	bsf	3976,5,c	;volatile
 28542                           
 28543                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 28544  010C26  9888               	bcf	3976,4,c	;volatile
 28545                           
 28546                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 28547  010C28  9688               	bcf	3976,3,c	;volatile
 28548                           
 28549                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 28550  010C2A  8488               	bsf	3976,2,c	;volatile
 28551                           
 28552                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 28553  010C2C  9288               	bcf	3976,1,c	;volatile
 28554                           
 28555                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 28556  010C2E  9886               	bcf	3974,4,c	;volatile
 28557  010C30  9A86               	bcf	3974,5,c	;volatile
 28558  010C32  9C86               	bcf	3974,6,c	;volatile
 28559  010C34  9E86               	bcf	3974,7,c	;volatile
 28560                           
 28561                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 28562  010C36  9086               	bcf	3974,0,c	;volatile
 28563  010C38  9286               	bcf	3974,1,c	;volatile
 28564  010C3A  9486               	bcf	3974,2,c	;volatile
 28565  010C3C  9686               	bcf	3974,3,c	;volatile
 28566                           
 28567                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 28568  010C3E  0100               	movlb	0	; () banked
 28569  010C40  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 28570  010C42  6E6A               	movwf	3946,c	;volatile
 28571                           
 28572                           ; BSR set to: 0
 28573                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 28574  010C44  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 28575                           
 28576                           ; BSR set to: 0
 28577                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 28578  010C48  0EFF               	movlw	255
 28579  010C4A  6F68               	movwf	??_spi_tx_tx& (0+255),b
 28580  010C4C  0EFF               	movlw	255
 28581  010C4E  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 28582  010C50  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 28583  010C54  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 28584  010C58  5168               	movf	??_spi_tx_tx& (0+255),w,b
 28585  010C5A  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 28586  010C5C  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 28587  010C5E  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 28588  010C60  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 28589  010C64  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 28590  010C66  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 28591  010C68  6E66               	movwf	3942,c	;volatile
 28592                           
 28593                           ; BSR set to: 0
 28594                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 28595  010C6A  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 28596  010C6C  6E67               	movwf	3943,c	;volatile
 28597                           
 28598                           ; BSR set to: 0
 28599                           ;spi.c: 174: LATDbits.LD7 = 0;
 28600  010C6E  9E8C               	bcf	3980,7,c	;volatile
 28601                           
 28602                           ; BSR set to: 0
 28603                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 28604  010C70  8088               	bsf	3976,0,c	;volatile
 28605  010C72                     
 28606                           ; BSR set to: 0
 28607  010C72  B088               	btfsc	3976,0,c	;volatile
 28608  010C74  D7FE               	goto	l2121
 28609                           
 28610                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 28611  010C76  0100               	movlb	0	; () banked
 28612  010C78  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 28613  010C7A  6E6A               	movwf	3946,c	;volatile
 28614                           
 28615                           ; BSR set to: 0
 28616                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 28617  010C7C  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 28618                           
 28619                           ; BSR set to: 0
 28620                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 28621  010C80  0EFF               	movlw	255
 28622  010C82  6F68               	movwf	??_spi_tx_tx& (0+255),b
 28623  010C84  0EFF               	movlw	255
 28624  010C86  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 28625  010C88  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 28626  010C8C  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 28627  010C90  5168               	movf	??_spi_tx_tx& (0+255),w,b
 28628  010C92  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 28629  010C94  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 28630  010C96  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 28631  010C98  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 28632  010C9C  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 28633  010C9E  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 28634  010CA0  6E66               	movwf	3942,c	;volatile
 28635                           
 28636                           ; BSR set to: 0
 28637                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 28638  010CA2  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 28639  010CA4  6E67               	movwf	3943,c	;volatile
 28640                           
 28641                           ; BSR set to: 0
 28642                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 28643  010CA6  8088               	bsf	3976,0,c	;volatile
 28644  010CA8                     
 28645                           ; BSR set to: 0
 28646  010CA8  B088               	btfsc	3976,0,c	;volatile
 28647  010CAA  D7FE               	goto	l2124
 28648                           
 28649                           ;spi.c: 193: LATDbits.LD7 = 1;
 28650  010CAC  8E8C               	bsf	3980,7,c	;volatile
 28651  010CAE  0012               	return		;funcret
 28652  010CB0                     __end_of_spi_tx_tx:
 28653                           	opt stack 0
 28654                           tosu	equ	0xFFF
 28655                           tosh	equ	0xFFE
 28656                           tosl	equ	0xFFD
 28657                           pclath	equ	0xFFA
 28658                           tblptru	equ	0xFF8
 28659                           tblptrh	equ	0xFF7
 28660                           tblptrl	equ	0xFF6
 28661                           tablat	equ	0xFF5
 28662                           prodh	equ	0xFF4
 28663                           prodl	equ	0xFF3
 28664                           intcon	equ	0xFF2
 28665                           indf0	equ	0xFEF
 28666                           postinc0	equ	0xFEE
 28667                           fsr0h	equ	0xFEA
 28668                           fsr0l	equ	0xFE9
 28669                           wreg	equ	0xFE8
 28670                           indf1	equ	0xFE7
 28671                           postdec1	equ	0xFE5
 28672                           plusw1	equ	0xFE3
 28673                           fsr1h	equ	0xFE2
 28674                           fsr1l	equ	0xFE1
 28675                           indf2	equ	0xFDF
 28676                           postinc2	equ	0xFDE
 28677                           postdec2	equ	0xFDD
 28678                           plusw2	equ	0xFDB
 28679                           fsr2h	equ	0xFDA
 28680                           fsr2l	equ	0xFD9
 28681                           status	equ	0xFD8
 28682                           
 28683 ;; *************** function __flash_write_page_from_buffer *****************
 28684 ;; Defined at:
 28685 ;;		line 258 in file "flash.c"
 28686 ;; Parameters:    Size  Location     Type
 28687 ;;  page            2   19[BANK0 ] unsigned int 
 28688 ;;  buffer          1   21[BANK0 ] enum E6958
 28689 ;; Auto vars:     Size  Location     Type
 28690 ;;  command         4   25[BANK0 ] unsigned char [4]
 28691 ;; Return value:  Size  Location     Type
 28692 ;;                  1    wreg      void 
 28693 ;; Registers used:
 28694 ;;		wreg, status,2, status,0, cstack
 28695 ;; Tracked objects:
 28696 ;;		On entry : 0/0
 28697 ;;		On exit  : 0/0
 28698 ;;		Unchanged: 0/0
 28699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28700 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28701 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28702 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28703 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28704 ;;Total ram usage:       10 bytes
 28705 ;; Hardware stack levels used:    1
 28706 ;; Hardware stack levels required when called:   13
 28707 ;; This function calls:
 28708 ;;		__flash_is_busy
 28709 ;;		_spi_tx
 28710 ;; This function is called by:
 28711 ;;		_flash_sector_write
 28712 ;;		_flash_partial_write
 28713 ;;		_flash_write_page_from_buffer
 28714 ;; This function uses a non-reentrant model
 28715 ;;
 28716                           
 28717                           	psect	text103
 28718  011638                     __ptext103:
 28719                           	opt stack 0
 28720  011638                     __flash_write_page_from_buffer:
 28721                           	opt stack 13
 28722                           
 28723                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 28724                           
 28725                           ;incstack = 0
 28726  011638  ECE3  F090         	call	__flash_is_busy	;wreg free
 28727  01163C  0900               	iorlw	0
 28728  01163E  A4D8               	btfss	status,2,c
 28729  011640  D7FB               	goto	__flash_write_page_from_buffer
 28730                           
 28731                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 28732  011642  0100               	movlb	0	; () banked
 28733  011644  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 28734  011646  A4D8               	btfss	status,2,c
 28735  011648  D002               	goto	l1521
 28736                           
 28737                           ; BSR set to: 0
 28738                           ;flash.c: 267: command[0] = 0x83;
 28739  01164A  0E83               	movlw	131
 28740  01164C  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 28741  01164E                     l1521:
 28742                           
 28743                           ; BSR set to: 0
 28744                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 28745                           
 28746                           ; BSR set to: 0
 28747  01164E  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 28748  011650  A4D8               	btfss	status,2,c
 28749  011652  D002               	goto	l1522
 28750                           
 28751                           ; BSR set to: 0
 28752                           ;flash.c: 269: command[0] = 0x86;
 28753  011654  0E86               	movlw	134
 28754  011656  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 28755  011658                     l1522:
 28756                           
 28757                           ; BSR set to: 0
 28758                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 28759                           
 28760                           ; BSR set to: 0
 28761  011658  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 28762  01165C  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 28763  011660  0E07               	movlw	7
 28764  011662  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 28765  011664                     u16635:
 28766  011664  90D8               	bcf	status,0,c
 28767  011666  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 28768  011668  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 28769  01166A  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 28770  01166C  D7FB               	goto	u16635
 28771  01166E  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 28772  011670  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 28773                           
 28774                           ; BSR set to: 0
 28775                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 28776  011672  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 28777  011674  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 28778  011676  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 28779                           
 28780                           ;flash.c: 273: command[3] = 0x00;
 28781  011678  0E00               	movlw	0
 28782  01167A  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 28783                           
 28784                           ; BSR set to: 0
 28785                           ;flash.c: 276: spi_tx(command, 4);
 28786  01167C  0E79               	movlw	low __flash_write_page_from_buffer@command
 28787  01167E  6F60               	movwf	spi_tx@data& (0+255),b
 28788  011680  0E00               	movlw	high __flash_write_page_from_buffer@command
 28789  011682  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 28790  011684  0E00               	movlw	0
 28791  011686  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 28792  011688  0E04               	movlw	4
 28793  01168A  6F62               	movwf	spi_tx@length& (0+255),b
 28794  01168C  EC49  F08B         	call	_spi_tx	;wreg free
 28795  011690  0012               	return		;funcret
 28796  011692                     __end_of__flash_write_page_from_buffer:
 28797                           	opt stack 0
 28798                           tosu	equ	0xFFF
 28799                           tosh	equ	0xFFE
 28800                           tosl	equ	0xFFD
 28801                           pclath	equ	0xFFA
 28802                           tblptru	equ	0xFF8
 28803                           tblptrh	equ	0xFF7
 28804                           tblptrl	equ	0xFF6
 28805                           tablat	equ	0xFF5
 28806                           prodh	equ	0xFF4
 28807                           prodl	equ	0xFF3
 28808                           intcon	equ	0xFF2
 28809                           indf0	equ	0xFEF
 28810                           postinc0	equ	0xFEE
 28811                           fsr0h	equ	0xFEA
 28812                           fsr0l	equ	0xFE9
 28813                           wreg	equ	0xFE8
 28814                           indf1	equ	0xFE7
 28815                           postdec1	equ	0xFE5
 28816                           plusw1	equ	0xFE3
 28817                           fsr1h	equ	0xFE2
 28818                           fsr1l	equ	0xFE1
 28819                           indf2	equ	0xFDF
 28820                           postinc2	equ	0xFDE
 28821                           postdec2	equ	0xFDD
 28822                           plusw2	equ	0xFDB
 28823                           fsr2h	equ	0xFDA
 28824                           fsr2l	equ	0xFD9
 28825                           status	equ	0xFD8
 28826                           
 28827 ;; *************** function __flash_compare_page_to_buffer *****************
 28828 ;; Defined at:
 28829 ;;		line 176 in file "flash.c"
 28830 ;; Parameters:    Size  Location     Type
 28831 ;;  page            2   19[BANK0 ] unsigned int 
 28832 ;;  buffer          1   21[BANK0 ] enum E6958
 28833 ;; Auto vars:     Size  Location     Type
 28834 ;;  command         4   27[BANK0 ] unsigned char [4]
 28835 ;;  status          2   25[BANK0 ] unsigned int 
 28836 ;; Return value:  Size  Location     Type
 28837 ;;                  1    wreg      enum E6962
 28838 ;; Registers used:
 28839 ;;		wreg, status,2, status,0, cstack
 28840 ;; Tracked objects:
 28841 ;;		On entry : 0/0
 28842 ;;		On exit  : 0/0
 28843 ;;		Unchanged: 0/0
 28844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28845 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28846 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28847 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28848 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28849 ;;Total ram usage:       12 bytes
 28850 ;; Hardware stack levels used:    1
 28851 ;; Hardware stack levels required when called:   13
 28852 ;; This function calls:
 28853 ;;		__flash_get_status
 28854 ;;		__flash_is_busy
 28855 ;;		_spi_tx
 28856 ;; This function is called by:
 28857 ;;		_flash_sector_write
 28858 ;;		_flash_partial_write
 28859 ;; This function uses a non-reentrant model
 28860 ;;
 28861                           
 28862                           	psect	text104
 28863  010ED0                     __ptext104:
 28864                           	opt stack 0
 28865  010ED0                     __flash_compare_page_to_buffer:
 28866                           	opt stack 13
 28867                           
 28868                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 28869                           
 28870                           ;incstack = 0
 28871  010ED0  ECE3  F090         	call	__flash_is_busy	;wreg free
 28872  010ED4  0900               	iorlw	0
 28873  010ED6  A4D8               	btfss	status,2,c
 28874  010ED8  D7FB               	goto	__flash_compare_page_to_buffer
 28875                           
 28876                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 28877  010EDA  0100               	movlb	0	; () banked
 28878  010EDC  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 28879  010EDE  A4D8               	btfss	status,2,c
 28880  010EE0  D002               	goto	l1494
 28881                           
 28882                           ; BSR set to: 0
 28883                           ;flash.c: 186: command[0] = 0x60;
 28884  010EE2  0E60               	movlw	96
 28885  010EE4  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 28886  010EE6                     l1494:
 28887                           
 28888                           ; BSR set to: 0
 28889                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 28890                           
 28891                           ; BSR set to: 0
 28892  010EE6  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 28893  010EE8  A4D8               	btfss	status,2,c
 28894  010EEA  D002               	goto	l1495
 28895                           
 28896                           ; BSR set to: 0
 28897                           ;flash.c: 188: command[0] = 0x60;
 28898  010EEC  0E60               	movlw	96
 28899  010EEE  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 28900  010EF0                     l1495:
 28901                           
 28902                           ; BSR set to: 0
 28903                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 28904                           
 28905                           ; BSR set to: 0
 28906  010EF0  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 28907  010EF4  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 28908  010EF8  0E07               	movlw	7
 28909  010EFA  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 28910  010EFC                     u16545:
 28911  010EFC  90D8               	bcf	status,0,c
 28912  010EFE  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 28913  010F00  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 28914  010F02  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 28915  010F04  D7FB               	goto	u16545
 28916  010F06  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 28917  010F08  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 28918                           
 28919                           ; BSR set to: 0
 28920                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 28921  010F0A  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 28922  010F0C  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 28923  010F0E  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 28924                           
 28925                           ;flash.c: 192: command[3] = 0x00;
 28926  010F10  0E00               	movlw	0
 28927  010F12  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 28928                           
 28929                           ; BSR set to: 0
 28930                           ;flash.c: 195: spi_tx(command, 4);
 28931  010F14  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 28932  010F16  6F60               	movwf	spi_tx@data& (0+255),b
 28933  010F18  0E00               	movlw	high __flash_compare_page_to_buffer@command
 28934  010F1A  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 28935  010F1C  0E00               	movlw	0
 28936  010F1E  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 28937  010F20  0E04               	movlw	4
 28938  010F22  6F62               	movwf	spi_tx@length& (0+255),b
 28939  010F24  EC49  F08B         	call	_spi_tx	;wreg free
 28940  010F28  ECE3  F090         	call	__flash_is_busy	;wreg free
 28941  010F2C  0900               	iorlw	0
 28942  010F2E  A4D8               	btfss	status,2,c
 28943  010F30  D7FB               	goto	l1497
 28944                           
 28945                           ;flash.c: 201: status = _flash_get_status();
 28946  010F32  EC7E  F08F         	call	__flash_get_status	;wreg free
 28947  010F36  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 28948  010F3A  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 28949                           
 28950                           ;flash.c: 204: if(status & 0b0000000001000000)
 28951  010F3E  0100               	movlb	0	; () banked
 28952  010F40  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 28953  010F42  D002               	goto	l1499
 28954                           
 28955                           ; BSR set to: 0
 28956                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 28957  010F44  0E01               	movlw	1
 28958                           
 28959                           ; BSR set to: 0
 28960                           ;flash.c: 208: }
 28961                           
 28962                           ; BSR set to: 0
 28963  010F46  0012               	return	
 28964  010F48                     l1499:
 28965                           
 28966                           ; BSR set to: 0
 28967                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 28968                           
 28969                           ; BSR set to: 0
 28970  010F48  0E00               	movlw	0
 28971                           
 28972                           ; BSR set to: 0
 28973  010F4A  0012               	return	
 28974  010F4C                     __end_of__flash_compare_page_to_buffer:
 28975                           	opt stack 0
 28976                           tosu	equ	0xFFF
 28977                           tosh	equ	0xFFE
 28978                           tosl	equ	0xFFD
 28979                           pclath	equ	0xFFA
 28980                           tblptru	equ	0xFF8
 28981                           tblptrh	equ	0xFF7
 28982                           tblptrl	equ	0xFF6
 28983                           tablat	equ	0xFF5
 28984                           prodh	equ	0xFF4
 28985                           prodl	equ	0xFF3
 28986                           intcon	equ	0xFF2
 28987                           indf0	equ	0xFEF
 28988                           postinc0	equ	0xFEE
 28989                           fsr0h	equ	0xFEA
 28990                           fsr0l	equ	0xFE9
 28991                           wreg	equ	0xFE8
 28992                           indf1	equ	0xFE7
 28993                           postdec1	equ	0xFE5
 28994                           plusw1	equ	0xFE3
 28995                           fsr1h	equ	0xFE2
 28996                           fsr1l	equ	0xFE1
 28997                           indf2	equ	0xFDF
 28998                           postinc2	equ	0xFDE
 28999                           postdec2	equ	0xFDD
 29000                           plusw2	equ	0xFDB
 29001                           fsr2h	equ	0xFDA
 29002                           fsr2l	equ	0xFD9
 29003                           status	equ	0xFD8
 29004                           
 29005 ;; *************** function __flash_is_busy *****************
 29006 ;; Defined at:
 29007 ;;		line 281 in file "flash.c"
 29008 ;; Parameters:    Size  Location     Type
 29009 ;;		None
 29010 ;; Auto vars:     Size  Location     Type
 29011 ;;  status          2   17[BANK0 ] unsigned int 
 29012 ;; Return value:  Size  Location     Type
 29013 ;;                  1    wreg      unsigned char 
 29014 ;; Registers used:
 29015 ;;		wreg, status,2, status,0, cstack
 29016 ;; Tracked objects:
 29017 ;;		On entry : 0/0
 29018 ;;		On exit  : 0/0
 29019 ;;		Unchanged: 0/0
 29020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29022 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29024 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29025 ;;Total ram usage:        2 bytes
 29026 ;; Hardware stack levels used:    1
 29027 ;; Hardware stack levels required when called:   12
 29028 ;; This function calls:
 29029 ;;		__flash_get_status
 29030 ;;		__flash_wakeup
 29031 ;; This function is called by:
 29032 ;;		__flash_set_page_size
 29033 ;;		__flash_compare_page_to_buffer
 29034 ;;		__flash_write_to_buffer
 29035 ;;		__flash_write_page_from_buffer
 29036 ;;		__flash_partial_read
 29037 ;;		_flash_is_busy
 29038 ;;		__flash_copy_page_to_buffer
 29039 ;;		__flash_erase_page
 29040 ;;		__flash_buffer_read
 29041 ;;		_flash_set_power_state
 29042 ;;		_flash_partial_write
 29043 ;; This function uses a non-reentrant model
 29044 ;;
 29045                           
 29046                           	psect	text105
 29047  0121C6                     __ptext105:
 29048                           	opt stack 0
 29049  0121C6                     __flash_is_busy:
 29050                           	opt stack 15
 29051                           
 29052                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 29053                           
 29054                           ; BSR set to: 0
 29055                           ;incstack = 0
 29056  0121C6  0100               	movlb	0	; () banked
 29057  0121C8  51FC               	movf	_power_state& (0+255),w,b
 29058  0121CA  A4D8               	btfss	status,2,c
 29059                           
 29060                           ; BSR set to: 0
 29061                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 29062  0121CC  ECA2  F08B         	call	__flash_wakeup	;wreg free
 29063                           
 29064                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 29065  0121D0  EC7E  F08F         	call	__flash_get_status	;wreg free
 29066  0121D4  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 29067  0121D8  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 29068                           
 29069                           ;flash.c: 295: if(status & 0b0000000010000000)
 29070  0121DC  0100               	movlb	0	; () banked
 29071  0121DE  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 29072  0121E0  D002               	goto	l1527
 29073                           
 29074                           ; BSR set to: 0
 29075                           ;flash.c: 296: {;flash.c: 298: return 0;
 29076  0121E2  0E00               	movlw	0
 29077                           
 29078                           ; BSR set to: 0
 29079                           ;flash.c: 299: }
 29080                           
 29081                           ; BSR set to: 0
 29082  0121E4  0012               	return	
 29083  0121E6                     l1527:
 29084                           
 29085                           ; BSR set to: 0
 29086                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 29087                           
 29088                           ; BSR set to: 0
 29089  0121E6  0E01               	movlw	1
 29090                           
 29091                           ; BSR set to: 0
 29092  0121E8  0012               	return	
 29093  0121EA                     __end_of__flash_is_busy:
 29094                           	opt stack 0
 29095                           tosu	equ	0xFFF
 29096                           tosh	equ	0xFFE
 29097                           tosl	equ	0xFFD
 29098                           pclath	equ	0xFFA
 29099                           tblptru	equ	0xFF8
 29100                           tblptrh	equ	0xFF7
 29101                           tblptrl	equ	0xFF6
 29102                           tablat	equ	0xFF5
 29103                           prodh	equ	0xFF4
 29104                           prodl	equ	0xFF3
 29105                           intcon	equ	0xFF2
 29106                           indf0	equ	0xFEF
 29107                           postinc0	equ	0xFEE
 29108                           fsr0h	equ	0xFEA
 29109                           fsr0l	equ	0xFE9
 29110                           wreg	equ	0xFE8
 29111                           indf1	equ	0xFE7
 29112                           postdec1	equ	0xFE5
 29113                           plusw1	equ	0xFE3
 29114                           fsr1h	equ	0xFE2
 29115                           fsr1l	equ	0xFE1
 29116                           indf2	equ	0xFDF
 29117                           postinc2	equ	0xFDE
 29118                           postdec2	equ	0xFDD
 29119                           plusw2	equ	0xFDB
 29120                           fsr2h	equ	0xFDA
 29121                           fsr2l	equ	0xFD9
 29122                           status	equ	0xFD8
 29123                           
 29124 ;; *************** function __flash_wakeup *****************
 29125 ;; Defined at:
 29126 ;;		line 128 in file "flash.c"
 29127 ;; Parameters:    Size  Location     Type
 29128 ;;		None
 29129 ;; Auto vars:     Size  Location     Type
 29130 ;;  command         1    8[BANK0 ] unsigned char 
 29131 ;; Return value:  Size  Location     Type
 29132 ;;                  1    wreg      void 
 29133 ;; Registers used:
 29134 ;;		wreg, status,2, status,0, cstack
 29135 ;; Tracked objects:
 29136 ;;		On entry : 0/0
 29137 ;;		On exit  : 0/0
 29138 ;;		Unchanged: 0/0
 29139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29141 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29143 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29144 ;;Total ram usage:        1 bytes
 29145 ;; Hardware stack levels used:    1
 29146 ;; Hardware stack levels required when called:   11
 29147 ;; This function calls:
 29148 ;;		_spi_tx
 29149 ;; This function is called by:
 29150 ;;		__flash_is_busy
 29151 ;;		_flash_set_power_state
 29152 ;; This function uses a non-reentrant model
 29153 ;;
 29154                           
 29155                           	psect	text106
 29156  011744                     __ptext106:
 29157                           	opt stack 0
 29158  011744                     __flash_wakeup:
 29159                           	opt stack 15
 29160                           
 29161                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 29162                           
 29163                           ; BSR set to: 0
 29164                           ;incstack = 0
 29165  011744  D022               	goto	l1476
 29166  011746                     
 29167                           ;flash.c: 135: command = 0xAB;
 29168  011746  0EAB               	movlw	171
 29169  011748  0100               	movlb	0	; () banked
 29170  01174A  6F68               	movwf	__flash_wakeup@command& (0+255),b
 29171                           
 29172                           ; BSR set to: 0
 29173                           ;flash.c: 136: spi_tx(&command, 1);
 29174  01174C  0E68               	movlw	low __flash_wakeup@command
 29175  01174E  6F60               	movwf	spi_tx@data& (0+255),b
 29176  011750  0E00               	movlw	high __flash_wakeup@command
 29177  011752  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 29178  011754  0E00               	movlw	0
 29179  011756  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 29180  011758  0E01               	movlw	1
 29181  01175A  6F62               	movwf	spi_tx@length& (0+255),b
 29182  01175C  EC49  F08B         	call	_spi_tx	;wreg free
 29183                           
 29184                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 29185  011760  0E17               	movlw	23
 29186  011762                     u22697:
 29187  011762  2EE8               	decfsz	wreg,f,c
 29188  011764  D7FE               	bra	u22697
 29189  011766  F000               	nop	
 29190                           
 29191                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 29192  011768  0E00               	movlw	0
 29193  01176A  0100               	movlb	0	; () banked
 29194  01176C  6FFC               	movwf	_power_state& (0+255),b
 29195                           
 29196                           ;flash.c: 139: break;
 29197  01176E  0012               	return	
 29198  011770                     l1479:
 29199                           
 29200                           ; BSR set to: 0
 29201                           ;flash.c: 144: LATDbits.LD7 = 0;
 29202  011770  9E8C               	bcf	3980,7,c	;volatile
 29203                           
 29204                           ; BSR set to: 0
 29205                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 29206  011772  0E0D               	movlw	13
 29207  011774                     u22707:
 29208  011774  2EE8               	decfsz	wreg,f,c
 29209  011776  D7FE               	bra	u22707
 29210  011778  F000               	nop	
 29211                           
 29212                           ;flash.c: 146: LATDbits.LD7 = 1;
 29213  01177A  8E8C               	bsf	3980,7,c	;volatile
 29214                           
 29215                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 29216  01177C  0E50               	movlw	80
 29217  01177E                     u22717:
 29218  01177E  2EE8               	decfsz	wreg,f,c
 29219  011780  D7FE               	bra	u22717
 29220                           
 29221                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 29222  011782  0E00               	movlw	0
 29223  011784  0100               	movlb	0	; () banked
 29224  011786  6FFC               	movwf	_power_state& (0+255),b
 29225                           
 29226                           ; BSR set to: 0
 29227                           ;flash.c: 150: }
 29228                           
 29229                           ;flash.c: 149: break;
 29230  011788  0012               	return	
 29231  01178A                     l1476:
 29232                           
 29233                           ; BSR set to: 0
 29234  01178A  0100               	movlb	0	; () banked
 29235  01178C  51FC               	movf	_power_state& (0+255),w,b
 29236                           
 29237                           ; Switch size 1, requested type "space"
 29238                           ; Number of cases is 2, Range of values is 1 to 2
 29239                           ; switch strategies available:
 29240                           ; Name         Instructions Cycles
 29241                           ; simple_byte            7     4 (average)
 29242                           ;	Chosen strategy is simple_byte
 29243  01178E  0A01               	xorlw	1	; case 1
 29244  011790  B4D8               	btfsc	status,2,c
 29245  011792  D7D9               	goto	l1477
 29246  011794  0A03               	xorlw	3	; case 2
 29247  011796  A4D8               	btfss	status,2,c
 29248  011798  0012               	return	
 29249  01179A  D7EA               	goto	l1479
 29250  01179C                     __end_of__flash_wakeup:
 29251                           	opt stack 0
 29252                           tosu	equ	0xFFF
 29253                           tosh	equ	0xFFE
 29254                           tosl	equ	0xFFD
 29255                           pclath	equ	0xFFA
 29256                           tblptru	equ	0xFF8
 29257                           tblptrh	equ	0xFF7
 29258                           tblptrl	equ	0xFF6
 29259                           tablat	equ	0xFF5
 29260                           prodh	equ	0xFF4
 29261                           prodl	equ	0xFF3
 29262                           intcon	equ	0xFF2
 29263                           indf0	equ	0xFEF
 29264                           postinc0	equ	0xFEE
 29265                           fsr0h	equ	0xFEA
 29266                           fsr0l	equ	0xFE9
 29267                           wreg	equ	0xFE8
 29268                           indf1	equ	0xFE7
 29269                           postdec1	equ	0xFE5
 29270                           plusw1	equ	0xFE3
 29271                           fsr1h	equ	0xFE2
 29272                           fsr1l	equ	0xFE1
 29273                           indf2	equ	0xFDF
 29274                           postinc2	equ	0xFDE
 29275                           postdec2	equ	0xFDD
 29276                           plusw2	equ	0xFDB
 29277                           fsr2h	equ	0xFDA
 29278                           fsr2l	equ	0xFD9
 29279                           status	equ	0xFD8
 29280                           
 29281 ;; *************** function _spi_tx *****************
 29282 ;; Defined at:
 29283 ;;		line 108 in file "spi.c"
 29284 ;; Parameters:    Size  Location     Type
 29285 ;;  data            2    0[BANK0 ] PTR unsigned char 
 29286 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 29287 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 29288 ;;  length          2    2[BANK0 ] unsigned int 
 29289 ;; Auto vars:     Size  Location     Type
 29290 ;;		None
 29291 ;; Return value:  Size  Location     Type
 29292 ;;                  1    wreg      void 
 29293 ;; Registers used:
 29294 ;;		wreg, status,2, status,0
 29295 ;; Tracked objects:
 29296 ;;		On entry : 0/0
 29297 ;;		On exit  : 0/0
 29298 ;;		Unchanged: 0/0
 29299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29300 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29302 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29303 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29304 ;;Total ram usage:        8 bytes
 29305 ;; Hardware stack levels used:    1
 29306 ;; Hardware stack levels required when called:   10
 29307 ;; This function calls:
 29308 ;;		Nothing
 29309 ;; This function is called by:
 29310 ;;		__flash_set_page_size
 29311 ;;		__flash_wakeup
 29312 ;;		__flash_compare_page_to_buffer
 29313 ;;		__flash_write_page_from_buffer
 29314 ;;		__flash_copy_page_to_buffer
 29315 ;;		__flash_erase_page
 29316 ;;		_flash_set_power_state
 29317 ;; This function uses a non-reentrant model
 29318 ;;
 29319                           
 29320                           	psect	text107
 29321  011692                     __ptext107:
 29322                           	opt stack 0
 29323  011692                     _spi_tx:
 29324                           	opt stack 17
 29325                           
 29326                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 29327                           
 29328                           ; BSR set to: 0
 29329                           ;incstack = 0
 29330  011692  9E88               	bcf	3976,7,c	;volatile
 29331                           
 29332                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 29333  011694  9C88               	bcf	3976,6,c	;volatile
 29334                           
 29335                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 29336  011696  8A88               	bsf	3976,5,c	;volatile
 29337                           
 29338                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 29339  011698  9888               	bcf	3976,4,c	;volatile
 29340                           
 29341                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 29342  01169A  9688               	bcf	3976,3,c	;volatile
 29343                           
 29344                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 29345  01169C  8488               	bsf	3976,2,c	;volatile
 29346                           
 29347                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 29348  01169E  9288               	bcf	3976,1,c	;volatile
 29349                           
 29350                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 29351  0116A0  9886               	bcf	3974,4,c	;volatile
 29352  0116A2  9A86               	bcf	3974,5,c	;volatile
 29353  0116A4  9C86               	bcf	3974,6,c	;volatile
 29354  0116A6  9E86               	bcf	3974,7,c	;volatile
 29355                           
 29356                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 29357  0116A8  9086               	bcf	3974,0,c	;volatile
 29358  0116AA  9286               	bcf	3974,1,c	;volatile
 29359  0116AC  9486               	bcf	3974,2,c	;volatile
 29360  0116AE  9686               	bcf	3974,3,c	;volatile
 29361                           
 29362                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 29363  0116B0  0100               	movlb	0	; () banked
 29364  0116B2  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 29365  0116B4  6E6A               	movwf	3946,c	;volatile
 29366                           
 29367                           ; BSR set to: 0
 29368                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 29369  0116B6  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 29370                           
 29371                           ; BSR set to: 0
 29372                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 29373  0116BA  0EFF               	movlw	255
 29374  0116BC  6F64               	movwf	??_spi_tx& (0+255),b
 29375  0116BE  0EFF               	movlw	255
 29376  0116C0  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 29377  0116C2  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 29378  0116C6  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 29379  0116CA  5164               	movf	??_spi_tx& (0+255),w,b
 29380  0116CC  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 29381  0116CE  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 29382  0116D0  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 29383  0116D2  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 29384  0116D6  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 29385  0116D8  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 29386  0116DA  6E66               	movwf	3942,c	;volatile
 29387                           
 29388                           ; BSR set to: 0
 29389                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 29390  0116DC  0562               	decf	spi_tx@length& (0+255),w,b
 29391  0116DE  6E67               	movwf	3943,c	;volatile
 29392                           
 29393                           ; BSR set to: 0
 29394                           ;spi.c: 136: LATDbits.LD7 = 0;
 29395  0116E0  9E8C               	bcf	3980,7,c	;volatile
 29396                           
 29397                           ; BSR set to: 0
 29398                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 29399  0116E2  8088               	bsf	3976,0,c	;volatile
 29400  0116E4                     
 29401                           ; BSR set to: 0
 29402  0116E4  B088               	btfsc	3976,0,c	;volatile
 29403  0116E6  D7FE               	goto	l2115
 29404                           
 29405                           ;spi.c: 139: LATDbits.LD7 = 1;
 29406  0116E8  8E8C               	bsf	3980,7,c	;volatile
 29407  0116EA  0012               	return		;funcret
 29408  0116EC                     __end_of_spi_tx:
 29409                           	opt stack 0
 29410                           tosu	equ	0xFFF
 29411                           tosh	equ	0xFFE
 29412                           tosl	equ	0xFFD
 29413                           pclath	equ	0xFFA
 29414                           tblptru	equ	0xFF8
 29415                           tblptrh	equ	0xFF7
 29416                           tblptrl	equ	0xFF6
 29417                           tablat	equ	0xFF5
 29418                           prodh	equ	0xFF4
 29419                           prodl	equ	0xFF3
 29420                           intcon	equ	0xFF2
 29421                           indf0	equ	0xFEF
 29422                           postinc0	equ	0xFEE
 29423                           fsr0h	equ	0xFEA
 29424                           fsr0l	equ	0xFE9
 29425                           wreg	equ	0xFE8
 29426                           indf1	equ	0xFE7
 29427                           postdec1	equ	0xFE5
 29428                           plusw1	equ	0xFE3
 29429                           fsr1h	equ	0xFE2
 29430                           fsr1l	equ	0xFE1
 29431                           indf2	equ	0xFDF
 29432                           postinc2	equ	0xFDE
 29433                           postdec2	equ	0xFDD
 29434                           plusw2	equ	0xFDB
 29435                           fsr2h	equ	0xFDA
 29436                           fsr2l	equ	0xFD9
 29437                           status	equ	0xFD8
 29438                           
 29439 ;; *************** function __flash_get_status *****************
 29440 ;; Defined at:
 29441 ;;		line 117 in file "flash.c"
 29442 ;; Parameters:    Size  Location     Type
 29443 ;;		None
 29444 ;; Auto vars:     Size  Location     Type
 29445 ;;  status          2   15[BANK0 ] unsigned int 
 29446 ;;  command         1   14[BANK0 ] unsigned char 
 29447 ;; Return value:  Size  Location     Type
 29448 ;;                  2   12[BANK0 ] unsigned int 
 29449 ;; Registers used:
 29450 ;;		wreg, status,2, status,0, cstack
 29451 ;; Tracked objects:
 29452 ;;		On entry : 0/0
 29453 ;;		On exit  : 0/0
 29454 ;;		Unchanged: 0/0
 29455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29456 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29457 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29459 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29460 ;;Total ram usage:        5 bytes
 29461 ;; Hardware stack levels used:    1
 29462 ;; Hardware stack levels required when called:   11
 29463 ;; This function calls:
 29464 ;;		_spi_tx_rx
 29465 ;; This function is called by:
 29466 ;;		__flash_compare_page_to_buffer
 29467 ;;		__flash_is_busy
 29468 ;; This function uses a non-reentrant model
 29469 ;;
 29470                           
 29471                           	psect	text108
 29472  011EFC                     __ptext108:
 29473                           	opt stack 0
 29474  011EFC                     __flash_get_status:
 29475                           	opt stack 15
 29476                           
 29477                           ;flash.c: 121: uint8_t command = 0xD7;
 29478                           
 29479                           ;incstack = 0
 29480  011EFC  0ED7               	movlw	215
 29481  011EFE  0100               	movlb	0	; () banked
 29482  011F00  6F6E               	movwf	__flash_get_status@command& (0+255),b
 29483                           
 29484                           ; BSR set to: 0
 29485                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 29486  011F02  0E6E               	movlw	low __flash_get_status@command
 29487  011F04  6F60               	movwf	spi_tx_rx@command& (0+255),b
 29488  011F06  0E00               	movlw	high __flash_get_status@command
 29489  011F08  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 29490  011F0A  0E00               	movlw	0
 29491  011F0C  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 29492  011F0E  0E01               	movlw	1
 29493  011F10  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 29494  011F12  0E6F               	movlw	low __flash_get_status@status
 29495  011F14  6F64               	movwf	spi_tx_rx@data& (0+255),b
 29496  011F16  0E00               	movlw	high __flash_get_status@status
 29497  011F18  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 29498  011F1A  0E00               	movlw	0
 29499  011F1C  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 29500  011F1E  0E02               	movlw	2
 29501  011F20  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 29502  011F22  ECE3  F084         	call	_spi_tx_rx	;wreg free
 29503                           
 29504                           ;flash.c: 124: return status;
 29505  011F26  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 29506  011F2A  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 29507  011F2E  0012               	return	
 29508  011F30                     __end_of__flash_get_status:
 29509                           	opt stack 0
 29510                           tosu	equ	0xFFF
 29511                           tosh	equ	0xFFE
 29512                           tosl	equ	0xFFD
 29513                           pclath	equ	0xFFA
 29514                           tblptru	equ	0xFF8
 29515                           tblptrh	equ	0xFF7
 29516                           tblptrl	equ	0xFF6
 29517                           tablat	equ	0xFF5
 29518                           prodh	equ	0xFF4
 29519                           prodl	equ	0xFF3
 29520                           intcon	equ	0xFF2
 29521                           indf0	equ	0xFEF
 29522                           postinc0	equ	0xFEE
 29523                           fsr0h	equ	0xFEA
 29524                           fsr0l	equ	0xFE9
 29525                           wreg	equ	0xFE8
 29526                           indf1	equ	0xFE7
 29527                           postdec1	equ	0xFE5
 29528                           plusw1	equ	0xFE3
 29529                           fsr1h	equ	0xFE2
 29530                           fsr1l	equ	0xFE1
 29531                           indf2	equ	0xFDF
 29532                           postinc2	equ	0xFDE
 29533                           postdec2	equ	0xFDD
 29534                           plusw2	equ	0xFDB
 29535                           fsr2h	equ	0xFDA
 29536                           fsr2l	equ	0xFD9
 29537                           status	equ	0xFD8
 29538                           
 29539 ;; *************** function _spi_tx_rx *****************
 29540 ;; Defined at:
 29541 ;;		line 199 in file "spi.c"
 29542 ;; Parameters:    Size  Location     Type
 29543 ;;  command         2    0[BANK0 ] PTR unsigned char 
 29544 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 29545 ;;  command_leng    2    2[BANK0 ] unsigned int 
 29546 ;;  data            2    4[BANK0 ] PTR unsigned char 
 29547 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 29548 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 29549 ;;		 -> buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 29550 ;;  data_length     2    6[BANK0 ] unsigned int 
 29551 ;; Auto vars:     Size  Location     Type
 29552 ;;		None
 29553 ;; Return value:  Size  Location     Type
 29554 ;;                  1    wreg      void 
 29555 ;; Registers used:
 29556 ;;		wreg, status,2, status,0
 29557 ;; Tracked objects:
 29558 ;;		On entry : 0/0
 29559 ;;		On exit  : 0/0
 29560 ;;		Unchanged: 0/0
 29561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29562 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29564 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29565 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29566 ;;Total ram usage:       12 bytes
 29567 ;; Hardware stack levels used:    1
 29568 ;; Hardware stack levels required when called:   10
 29569 ;; This function calls:
 29570 ;;		Nothing
 29571 ;; This function is called by:
 29572 ;;		__flash_get_status
 29573 ;;		__flash_partial_read
 29574 ;;		__flash_buffer_read
 29575 ;; This function uses a non-reentrant model
 29576 ;;
 29577                           
 29578                           	psect	text109
 29579  0109C6                     __ptext109:
 29580                           	opt stack 0
 29581  0109C6                     _spi_tx_rx:
 29582                           	opt stack 15
 29583                           
 29584                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 29585                           
 29586                           ;incstack = 0
 29587  0109C6  9E88               	bcf	3976,7,c	;volatile
 29588                           
 29589                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 29590  0109C8  9C88               	bcf	3976,6,c	;volatile
 29591                           
 29592                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 29593  0109CA  8A88               	bsf	3976,5,c	;volatile
 29594                           
 29595                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 29596  0109CC  9888               	bcf	3976,4,c	;volatile
 29597                           
 29598                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 29599  0109CE  9688               	bcf	3976,3,c	;volatile
 29600                           
 29601                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 29602  0109D0  8488               	bsf	3976,2,c	;volatile
 29603                           
 29604                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 29605  0109D2  9288               	bcf	3976,1,c	;volatile
 29606                           
 29607                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 29608  0109D4  9886               	bcf	3974,4,c	;volatile
 29609  0109D6  9A86               	bcf	3974,5,c	;volatile
 29610  0109D8  9C86               	bcf	3974,6,c	;volatile
 29611  0109DA  9E86               	bcf	3974,7,c	;volatile
 29612                           
 29613                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 29614  0109DC  9086               	bcf	3974,0,c	;volatile
 29615  0109DE  9286               	bcf	3974,1,c	;volatile
 29616  0109E0  9486               	bcf	3974,2,c	;volatile
 29617  0109E2  9686               	bcf	3974,3,c	;volatile
 29618                           
 29619                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 29620  0109E4  0100               	movlb	0	; () banked
 29621  0109E6  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 29622  0109E8  6E6A               	movwf	3946,c	;volatile
 29623                           
 29624                           ; BSR set to: 0
 29625                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 29626  0109EA  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 29627                           
 29628                           ; BSR set to: 0
 29629                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 29630  0109EE  0EFF               	movlw	255
 29631  0109F0  6F68               	movwf	??_spi_tx_rx& (0+255),b
 29632  0109F2  0EFF               	movlw	255
 29633  0109F4  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 29634  0109F6  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 29635  0109FA  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 29636  0109FE  5168               	movf	??_spi_tx_rx& (0+255),w,b
 29637  010A00  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 29638  010A02  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 29639  010A04  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 29640  010A06  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 29641  010A0A  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 29642  010A0C  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 29643  010A0E  6E66               	movwf	3942,c	;volatile
 29644                           
 29645                           ; BSR set to: 0
 29646                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 29647  010A10  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 29648  010A12  6E67               	movwf	3943,c	;volatile
 29649                           
 29650                           ; BSR set to: 0
 29651                           ;spi.c: 227: LATDbits.LD7 = 0;
 29652  010A14  9E8C               	bcf	3980,7,c	;volatile
 29653                           
 29654                           ; BSR set to: 0
 29655                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 29656  010A16  8088               	bsf	3976,0,c	;volatile
 29657  010A18                     
 29658                           ; BSR set to: 0
 29659  010A18  B088               	btfsc	3976,0,c	;volatile
 29660  010A1A  D7FE               	goto	l2130
 29661                           
 29662                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 29663  010A1C  9A88               	bcf	3976,5,c	;volatile
 29664                           
 29665                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 29666  010A1E  8888               	bsf	3976,4,c	;volatile
 29667                           
 29668                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 29669  010A20  9688               	bcf	3976,3,c	;volatile
 29670                           
 29671                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 29672  010A22  9488               	bcf	3976,2,c	;volatile
 29673                           
 29674                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 29675  010A24  0100               	movlb	0	; () banked
 29676  010A26  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 29677  010A28  6E68               	movwf	3944,c	;volatile
 29678                           
 29679                           ; BSR set to: 0
 29680                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 29681  010A2A  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 29682                           
 29683                           ; BSR set to: 0
 29684                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 29685  010A2E  0EFF               	movlw	255
 29686  010A30  6F68               	movwf	??_spi_tx_rx& (0+255),b
 29687  010A32  0EFF               	movlw	255
 29688  010A34  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 29689  010A36  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 29690  010A3A  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 29691  010A3E  5168               	movf	??_spi_tx_rx& (0+255),w,b
 29692  010A40  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 29693  010A42  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 29694  010A44  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 29695  010A46  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 29696  010A4A  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 29697  010A4C  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 29698  010A4E  6E66               	movwf	3942,c	;volatile
 29699                           
 29700                           ; BSR set to: 0
 29701                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 29702  010A50  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 29703  010A52  6E67               	movwf	3943,c	;volatile
 29704                           
 29705                           ; BSR set to: 0
 29706                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 29707  010A54  8088               	bsf	3976,0,c	;volatile
 29708  010A56                     
 29709                           ; BSR set to: 0
 29710  010A56  B088               	btfsc	3976,0,c	;volatile
 29711  010A58  D7FE               	goto	l2133
 29712                           
 29713                           ;spi.c: 254: LATDbits.LD7 = 1;
 29714  010A5A  8E8C               	bsf	3980,7,c	;volatile
 29715  010A5C  0012               	return		;funcret
 29716  010A5E                     __end_of_spi_tx_rx:
 29717                           	opt stack 0
 29718                           tosu	equ	0xFFF
 29719                           tosh	equ	0xFFE
 29720                           tosl	equ	0xFFD
 29721                           pclath	equ	0xFFA
 29722                           tblptru	equ	0xFF8
 29723                           tblptrh	equ	0xFF7
 29724                           tblptrl	equ	0xFF6
 29725                           tablat	equ	0xFF5
 29726                           prodh	equ	0xFF4
 29727                           prodl	equ	0xFF3
 29728                           intcon	equ	0xFF2
 29729                           indf0	equ	0xFEF
 29730                           postinc0	equ	0xFEE
 29731                           fsr0h	equ	0xFEA
 29732                           fsr0l	equ	0xFE9
 29733                           wreg	equ	0xFE8
 29734                           indf1	equ	0xFE7
 29735                           postdec1	equ	0xFE5
 29736                           plusw1	equ	0xFE3
 29737                           fsr1h	equ	0xFE2
 29738                           fsr1l	equ	0xFE1
 29739                           indf2	equ	0xFDF
 29740                           postinc2	equ	0xFDE
 29741                           postdec2	equ	0xFDD
 29742                           plusw2	equ	0xFDB
 29743                           fsr2h	equ	0xFDA
 29744                           fsr2l	equ	0xFD9
 29745                           status	equ	0xFD8
 29746                           
 29747 ;; *************** function __get_root *****************
 29748 ;; Defined at:
 29749 ;;		line 1210 in file "fat16.c"
 29750 ;; Parameters:    Size  Location     Type
 29751 ;;  idx             2    0[BANK0 ] unsigned int 
 29752 ;; Auto vars:     Size  Location     Type
 29753 ;;		None
 29754 ;; Return value:  Size  Location     Type
 29755 ;;                  1    wreg      unsigned char 
 29756 ;; Registers used:
 29757 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 29758 ;; Tracked objects:
 29759 ;;		On entry : 0/0
 29760 ;;		On exit  : 0/0
 29761 ;;		Unchanged: 0/0
 29762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29763 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29765 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29766 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29767 ;;Total ram usage:        6 bytes
 29768 ;; Hardware stack levels used:    1
 29769 ;; Hardware stack levels required when called:   10
 29770 ;; This function calls:
 29771 ;;		Nothing
 29772 ;; This function is called by:
 29773 ;;		_fat_format
 29774 ;; This function uses a non-reentrant model
 29775 ;;
 29776                           
 29777                           	psect	text110
 29778  00E032                     __ptext110:
 29779                           	opt stack 0
 29780  00E032                     __get_root:
 29781                           	opt stack 17
 29782                           
 29783                           ;fat16.c: 1212: if(idx < 0x20)
 29784                           
 29785                           ;incstack = 0
 29786  00E032  0100               	movlb	0	; () banked
 29787  00E034  5161               	movf	(__get_root@idx+1)& (0+255),w,b
 29788  00E036  E11D               	bnz	l17640
 29789  00E038  0E20               	movlw	32
 29790  00E03A  5D60               	subwf	__get_root@idx& (0+255),w,b
 29791  00E03C  B0D8               	btfsc	status,0,c
 29792  00E03E  D019               	goto	l1954
 29793                           
 29794                           ; BSR set to: 0
 29795                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
 29796  00E040  5161               	movf	(__get_root@idx+1)& (0+255),w,b
 29797  00E042  E110               	bnz	l17634
 29798  00E044  0E0B               	movlw	11
 29799  00E046  5D60               	subwf	__get_root@idx& (0+255),w,b
 29800  00E048  B0D8               	btfsc	status,0,c
 29801  00E04A  D00C               	goto	l1952
 29802                           
 29803                           ; BSR set to: 0
 29804                           ;fat16.c: 1215: {;fat16.c: 1216: return "SolarChargr"[idx];
 29805  00E04C  0EFE               	movlw	low STR_15
 29806  00E04E  2560               	addwf	__get_root@idx& (0+255),w,b
 29807  00E050  6EF6               	movwf	tblptrl,c
 29808  00E052  0EA1               	movlw	high STR_15
 29809  00E054  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
 29810  00E056  6EF7               	movwf	tblptrh,c
 29811  00E058                     	if	1	;There are 3 active tblptr bytes
 29812  00E058  6AF8               	clrf	tblptru,c
 29813  00E05A  0E00               	movlw	low (__mediumconst shr (0+16))
 29814  00E05C  22F8               	addwfc	tblptru,f,c
 29815  00E05E                     	endif
 29816  00E05E  0008               	tblrd		*
 29817  00E060  50F5               	movf	tablat,w,c
 29818                           
 29819                           ; BSR set to: 0
 29820  00E062  0012               	return	
 29821  00E064                     l1952:
 29822  00E064                     l17634:
 29823                           
 29824                           ; BSR set to: 0
 29825                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
 29826  00E064  0E0B               	movlw	11
 29827  00E066  1960               	xorwf	__get_root@idx& (0+255),w,b
 29828  00E068  1161               	iorwf	(__get_root@idx+1)& (0+255),w,b
 29829  00E06A  A4D8               	btfss	status,2,c
 29830  00E06C  D002               	goto	l1954
 29831                           
 29832                           ; BSR set to: 0
 29833                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
 29834  00E06E  0E08               	movlw	8
 29835                           
 29836                           ; BSR set to: 0
 29837  00E070  0012               	return	
 29838  00E072                     l1954:
 29839  00E072                     l17640:
 29840                           
 29841                           ; BSR set to: 0
 29842                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
 29843  00E072  5161               	movf	(__get_root@idx+1)& (0+255),w,b
 29844  00E074  E103               	bnz	u17111
 29845  00E076  0E40               	movlw	64
 29846  00E078  5D60               	subwf	__get_root@idx& (0+255),w,b
 29847  00E07A  B0D8               	btfsc	status,0,c
 29848  00E07C                     u17111:
 29849  00E07C  D0A4               	goto	l1980
 29850                           
 29851                           ; BSR set to: 0
 29852                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
 29853  00E07E  0E20               	movlw	32
 29854  00E080  5F60               	subwf	__get_root@idx& (0+255),f,b
 29855  00E082  0E00               	movlw	0
 29856  00E084  5B61               	subwfb	(__get_root@idx+1)& (0+255),f,b
 29857                           
 29858                           ;fat16.c: 1226: if(idx < 0+8)
 29859  00E086  5161               	movf	(__get_root@idx+1)& (0+255),w,b
 29860  00E088  E110               	bnz	l17648
 29861  00E08A  0E08               	movlw	8
 29862  00E08C  5D60               	subwf	__get_root@idx& (0+255),w,b
 29863  00E08E  B0D8               	btfsc	status,0,c
 29864  00E090  D00C               	goto	l1956
 29865                           
 29866                           ; BSR set to: 0
 29867                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
 29868  00E092  0E0A               	movlw	low STR_16
 29869  00E094  2560               	addwf	__get_root@idx& (0+255),w,b
 29870  00E096  6EF6               	movwf	tblptrl,c
 29871  00E098  0EA2               	movlw	high STR_16
 29872  00E09A  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
 29873  00E09C  6EF7               	movwf	tblptrh,c
 29874  00E09E                     	if	1	;There are 3 active tblptr bytes
 29875  00E09E  6AF8               	clrf	tblptru,c
 29876  00E0A0  0E00               	movlw	low (__mediumconst shr (0+16))
 29877  00E0A2  22F8               	addwfc	tblptru,f,c
 29878  00E0A4                     	endif
 29879  00E0A4  0008               	tblrd		*
 29880  00E0A6  50F5               	movf	tablat,w,c
 29881                           
 29882                           ; BSR set to: 0
 29883  00E0A8  0012               	return	
 29884  00E0AA                     l1956:
 29885  00E0AA                     l17648:
 29886                           
 29887                           ; BSR set to: 0
 29888                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
 29889  00E0AA  5161               	movf	(__get_root@idx+1)& (0+255),w,b
 29890  00E0AC  E146               	bnz	l17740
 29891  00E0AE  0E0B               	movlw	11
 29892  00E0B0  5D60               	subwf	__get_root@idx& (0+255),w,b
 29893  00E0B2  B0D8               	btfsc	status,0,c
 29894  00E0B4  D042               	goto	l1958
 29895                           
 29896                           ; BSR set to: 0
 29897                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
 29898  00E0B6  0EF8               	movlw	248
 29899  00E0B8  6F62               	movwf	??__get_root& (0+255),b
 29900  00E0BA  0EFF               	movlw	255
 29901  00E0BC  6F63               	movwf	(??__get_root+1)& (0+255),b
 29902  00E0BE  C060  F064         	movff	__get_root@idx,??__get_root+2
 29903  00E0C2  C061  F065         	movff	__get_root@idx+1,??__get_root+3
 29904  00E0C6  5162               	movf	??__get_root& (0+255),w,b
 29905  00E0C8  2764               	addwf	(??__get_root+2)& (0+255),f,b
 29906  00E0CA  5163               	movf	(??__get_root+1)& (0+255),w,b
 29907  00E0CC  2365               	addwfc	(??__get_root+3)& (0+255),f,b
 29908  00E0CE  0E32               	movlw	low STR_17
 29909  00E0D0  2564               	addwf	(??__get_root+2)& (0+255),w,b
 29910  00E0D2  6EF6               	movwf	tblptrl,c
 29911  00E0D4  0EA2               	movlw	high STR_17
 29912  00E0D6  2165               	addwfc	(??__get_root+3)& (0+255),w,b
 29913  00E0D8  6EF7               	movwf	tblptrh,c
 29914  00E0DA                     	if	1	;There are 3 active tblptr bytes
 29915  00E0DA  6AF8               	clrf	tblptru,c
 29916  00E0DC  0E00               	movlw	low (__mediumconst shr (0+16))
 29917  00E0DE  22F8               	addwfc	tblptru,f,c
 29918  00E0E0                     	endif
 29919  00E0E0  0008               	tblrd		*
 29920  00E0E2  50F5               	movf	tablat,w,c
 29921                           
 29922                           ; BSR set to: 0
 29923  00E0E4  0012               	return	
 29924  00E0E6                     
 29925                           ; BSR set to: 0
 29926                           ;fat16.c: 1237: return 0x20;
 29927                           
 29928                           ; BSR set to: 0
 29929  00E0E6  0E20               	movlw	32
 29930                           
 29931                           ; BSR set to: 0
 29932  00E0E8  0012               	return	
 29933  00E0EA                     
 29934                           ; BSR set to: 0
 29935                           ;fat16.c: 1239: return 0x06;
 29936                           
 29937                           ; BSR set to: 0
 29938  00E0EA  0E06               	movlw	6
 29939                           
 29940                           ; BSR set to: 0
 29941  00E0EC  0012               	return	
 29942  00E0EE                     
 29943                           ; BSR set to: 0
 29944                           ;fat16.c: 1241: return 0x28;
 29945                           
 29946                           ; BSR set to: 0
 29947  00E0EE  0E28               	movlw	40
 29948                           
 29949                           ; BSR set to: 0
 29950  00E0F0  0012               	return	
 29951  00E0F2                     
 29952                           ; BSR set to: 0
 29953                           ;fat16.c: 1243: return 0x78;
 29954                           
 29955                           ; BSR set to: 0
 29956  00E0F2  0E78               	movlw	120
 29957                           
 29958                           ; BSR set to: 0
 29959  00E0F4  0012               	return	
 29960  00E0F6                     
 29961                           ; BSR set to: 0
 29962                           ;fat16.c: 1245: return 0xDE;
 29963                           
 29964                           ; BSR set to: 0
 29965  00E0F6  0EDE               	movlw	222
 29966                           
 29967                           ; BSR set to: 0
 29968  00E0F8  0012               	return	
 29969  00E0FA                     
 29970                           ; BSR set to: 0
 29971                           ;fat16.c: 1247: return 0x38;
 29972                           
 29973                           ; BSR set to: 0
 29974  00E0FA  0E38               	movlw	56
 29975                           
 29976                           ; BSR set to: 0
 29977  00E0FC  0012               	return	
 29978  00E0FE                     
 29979                           ; BSR set to: 0
 29980                           ;fat16.c: 1249: return 0x5F;
 29981                           
 29982                           ; BSR set to: 0
 29983  00E0FE  0E5F               	movlw	95
 29984                           
 29985                           ; BSR set to: 0
 29986  00E100  0012               	return	
 29987  00E102                     
 29988                           ; BSR set to: 0
 29989                           ;fat16.c: 1251: return 0x4B;
 29990                           
 29991                           ; BSR set to: 0
 29992  00E102  0E4B               	movlw	75
 29993                           
 29994                           ; BSR set to: 0
 29995  00E104  0012               	return	
 29996  00E106                     
 29997                           ; BSR set to: 0
 29998                           ;fat16.c: 1253: return 0x00;
 29999                           
 30000                           ; BSR set to: 0
 30001  00E106  0E00               	movlw	0
 30002                           
 30003                           ; BSR set to: 0
 30004  00E108  0012               	return	
 30005  00E10A                     
 30006                           ; BSR set to: 0
 30007                           ;fat16.c: 1255: return 0x00;
 30008                           
 30009                           ; BSR set to: 0
 30010  00E10A  0E00               	movlw	0
 30011                           
 30012                           ; BSR set to: 0
 30013  00E10C  0012               	return	
 30014  00E10E                     
 30015                           ; BSR set to: 0
 30016                           ;fat16.c: 1257: return 0x04;
 30017                           
 30018                           ; BSR set to: 0
 30019  00E10E  0E04               	movlw	4
 30020                           
 30021                           ; BSR set to: 0
 30022  00E110  0012               	return	
 30023  00E112                     
 30024                           ; BSR set to: 0
 30025                           ;fat16.c: 1259: return 0x77;
 30026                           
 30027                           ; BSR set to: 0
 30028  00E112  0E77               	movlw	119
 30029                           
 30030                           ; BSR set to: 0
 30031  00E114  0012               	return	
 30032  00E116                     
 30033                           ; BSR set to: 0
 30034                           ;fat16.c: 1261: return 0xDE;
 30035                           
 30036                           ; BSR set to: 0
 30037  00E116  0EDE               	movlw	222
 30038                           
 30039                           ; BSR set to: 0
 30040  00E118  0012               	return	
 30041  00E11A                     
 30042                           ; BSR set to: 0
 30043                           ;fat16.c: 1263: return 0x38;
 30044                           
 30045                           ; BSR set to: 0
 30046  00E11A  0E38               	movlw	56
 30047                           
 30048                           ; BSR set to: 0
 30049  00E11C  0012               	return	
 30050  00E11E                     
 30051                           ; BSR set to: 0
 30052                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
 30053                           
 30054                           ; BSR set to: 0
 30055  00E11E  0E02               	movlw	2
 30056                           
 30057                           ; BSR set to: 0
 30058  00E120  0012               	return	
 30059  00E122                     
 30060                           ; BSR set to: 0
 30061                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 30062                           
 30063                           ; BSR set to: 0
 30064  00E122  0E00               	movlw	0
 30065                           
 30066                           ; BSR set to: 0
 30067  00E124  0012               	return	
 30068  00E126                     
 30069                           ; BSR set to: 0
 30070                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 30071                           
 30072                           ; BSR set to: 0
 30073  00E126  0E0C               	movlw	12
 30074                           
 30075                           ; BSR set to: 0
 30076  00E128  0012               	return	
 30077  00E12A                     
 30078                           ; BSR set to: 0
 30079                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 30080                           
 30081                           ; BSR set to: 0
 30082  00E12A  0E00               	movlw	0
 30083                           
 30084                           ; BSR set to: 0
 30085  00E12C  0012               	return	
 30086  00E12E                     
 30087                           ; BSR set to: 0
 30088                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 30089                           
 30090                           ; BSR set to: 0
 30091  00E12E  0E00               	movlw	0
 30092                           
 30093                           ; BSR set to: 0
 30094  00E130  0012               	return	
 30095  00E132                     
 30096                           ; BSR set to: 0
 30097                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 30098                           
 30099                           ; BSR set to: 0
 30100  00E132  0E00               	movlw	0
 30101                           
 30102                           ; BSR set to: 0
 30103  00E134  0012               	return	
 30104  00E136                     
 30105                           ; BSR set to: 0
 30106                           ;fat16.c: 1277: return 0x00;
 30107                           
 30108                           ; BSR set to: 0
 30109  00E136  0E00               	movlw	0
 30110                           
 30111                           ; BSR set to: 0
 30112  00E138  0012               	return	
 30113  00E13A                     l1958:
 30114  00E13A                     l17740:
 30115                           
 30116                           ; BSR set to: 0
 30117  00E13A  C060  F062         	movff	__get_root@idx,??__get_root
 30118  00E13E  C061  F063         	movff	__get_root@idx+1,??__get_root+1
 30119                           
 30120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30121                           ; Switch size 1, requested type "space"
 30122                           ; Number of cases is 1, Range of values is 0 to 0
 30123                           ; switch strategies available:
 30124                           ; Name         Instructions Cycles
 30125                           ; simple_byte            4     3 (average)
 30126                           ;	Chosen strategy is simple_byte
 30127  00E142  5163               	movf	(??__get_root+1)& (0+255),w,b
 30128  00E144  0A00               	xorlw	0	; case 0
 30129  00E146  A4D8               	btfss	status,2,c
 30130  00E148  D7F6               	goto	l1979
 30131                           
 30132                           ; BSR set to: 0
 30133                           ; Switch size 1, requested type "space"
 30134                           ; Number of cases is 20, Range of values is 11 to 31
 30135                           ; switch strategies available:
 30136                           ; Name         Instructions Cycles
 30137                           ; simple_byte           61    31 (average)
 30138                           ;	Chosen strategy is simple_byte
 30139  00E14A  5162               	movf	??__get_root& (0+255),w,b
 30140  00E14C  0A0B               	xorlw	11	; case 11
 30141  00E14E  B4D8               	btfsc	status,2,c
 30142  00E150  D7CA               	goto	l1959
 30143  00E152  0A06               	xorlw	6	; case 13
 30144  00E154  B4D8               	btfsc	status,2,c
 30145  00E156  D7C9               	goto	l1960
 30146  00E158  0A03               	xorlw	3	; case 14
 30147  00E15A  B4D8               	btfsc	status,2,c
 30148  00E15C  D7C8               	goto	l1961
 30149  00E15E  0A01               	xorlw	1	; case 15
 30150  00E160  B4D8               	btfsc	status,2,c
 30151  00E162  D7C7               	goto	l1962
 30152  00E164  0A1F               	xorlw	31	; case 16
 30153  00E166  B4D8               	btfsc	status,2,c
 30154  00E168  D7C6               	goto	l1963
 30155  00E16A  0A01               	xorlw	1	; case 17
 30156  00E16C  B4D8               	btfsc	status,2,c
 30157  00E16E  D7C5               	goto	l1964
 30158  00E170  0A03               	xorlw	3	; case 18
 30159  00E172  B4D8               	btfsc	status,2,c
 30160  00E174  D7C4               	goto	l1965
 30161  00E176  0A01               	xorlw	1	; case 19
 30162  00E178  B4D8               	btfsc	status,2,c
 30163  00E17A  D7C3               	goto	l1966
 30164  00E17C  0A07               	xorlw	7	; case 20
 30165  00E17E  B4D8               	btfsc	status,2,c
 30166  00E180  D7C2               	goto	l1967
 30167  00E182  0A01               	xorlw	1	; case 21
 30168  00E184  B4D8               	btfsc	status,2,c
 30169  00E186  D7C1               	goto	l1968
 30170  00E188  0A03               	xorlw	3	; case 22
 30171  00E18A  B4D8               	btfsc	status,2,c
 30172  00E18C  D7C0               	goto	l1969
 30173  00E18E  0A01               	xorlw	1	; case 23
 30174  00E190  B4D8               	btfsc	status,2,c
 30175  00E192  D7BF               	goto	l1970
 30176  00E194  0A0F               	xorlw	15	; case 24
 30177  00E196  B4D8               	btfsc	status,2,c
 30178  00E198  D7BE               	goto	l1971
 30179  00E19A  0A01               	xorlw	1	; case 25
 30180  00E19C  B4D8               	btfsc	status,2,c
 30181  00E19E  D7BD               	goto	l1972
 30182  00E1A0  0A03               	xorlw	3	; case 26
 30183  00E1A2  B4D8               	btfsc	status,2,c
 30184  00E1A4  D7BC               	goto	l1973
 30185  00E1A6  0A01               	xorlw	1	; case 27
 30186  00E1A8  B4D8               	btfsc	status,2,c
 30187  00E1AA  D7BB               	goto	l1974
 30188  00E1AC  0A07               	xorlw	7	; case 28
 30189  00E1AE  B4D8               	btfsc	status,2,c
 30190  00E1B0  D7BA               	goto	l1975
 30191  00E1B2  0A01               	xorlw	1	; case 29
 30192  00E1B4  B4D8               	btfsc	status,2,c
 30193  00E1B6  D7B9               	goto	l1976
 30194  00E1B8  0A03               	xorlw	3	; case 30
 30195  00E1BA  B4D8               	btfsc	status,2,c
 30196  00E1BC  D7B8               	goto	l1977
 30197  00E1BE  0A01               	xorlw	1	; case 31
 30198  00E1C0  B4D8               	btfsc	status,2,c
 30199  00E1C2  D7B7               	goto	l1978
 30200  00E1C4  D7B8               	goto	l1979
 30201  00E1C6                     l1980:
 30202                           
 30203                           ; BSR set to: 0
 30204                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
 30205                           
 30206                           ; BSR set to: 0
 30207                           
 30208                           ; BSR set to: 0
 30209  00E1C6  0E00               	movlw	0
 30210  00E1C8  0012               	return	
 30211  00E1CA                     __end_of__get_root:
 30212                           	opt stack 0
 30213                           tosu	equ	0xFFF
 30214                           tosh	equ	0xFFE
 30215                           tosl	equ	0xFFD
 30216                           pclath	equ	0xFFA
 30217                           tblptru	equ	0xFF8
 30218                           tblptrh	equ	0xFF7
 30219                           tblptrl	equ	0xFF6
 30220                           tablat	equ	0xFF5
 30221                           prodh	equ	0xFF4
 30222                           prodl	equ	0xFF3
 30223                           intcon	equ	0xFF2
 30224                           indf0	equ	0xFEF
 30225                           postinc0	equ	0xFEE
 30226                           fsr0h	equ	0xFEA
 30227                           fsr0l	equ	0xFE9
 30228                           wreg	equ	0xFE8
 30229                           indf1	equ	0xFE7
 30230                           postdec1	equ	0xFE5
 30231                           plusw1	equ	0xFE3
 30232                           fsr1h	equ	0xFE2
 30233                           fsr1l	equ	0xFE1
 30234                           indf2	equ	0xFDF
 30235                           postinc2	equ	0xFDE
 30236                           postdec2	equ	0xFDD
 30237                           plusw2	equ	0xFDB
 30238                           fsr2h	equ	0xFDA
 30239                           fsr2l	equ	0xFD9
 30240                           status	equ	0xFD8
 30241                           
 30242 ;; *************** function __get_mbr *****************
 30243 ;; Defined at:
 30244 ;;		line 1037 in file "fat16.c"
 30245 ;; Parameters:    Size  Location     Type
 30246 ;;  idx             2    0[BANK0 ] unsigned int 
 30247 ;; Auto vars:     Size  Location     Type
 30248 ;;		None
 30249 ;; Return value:  Size  Location     Type
 30250 ;;                  1    wreg      unsigned char 
 30251 ;; Registers used:
 30252 ;;		wreg, status,2, status,0
 30253 ;; Tracked objects:
 30254 ;;		On entry : 0/0
 30255 ;;		On exit  : 0/0
 30256 ;;		Unchanged: 0/0
 30257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30258 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30260 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30261 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30262 ;;Total ram usage:        4 bytes
 30263 ;; Hardware stack levels used:    1
 30264 ;; Hardware stack levels required when called:   10
 30265 ;; This function calls:
 30266 ;;		Nothing
 30267 ;; This function is called by:
 30268 ;;		_fat_get_format_status
 30269 ;;		_fat_format
 30270 ;; This function uses a non-reentrant model
 30271 ;;
 30272                           
 30273                           	psect	text111
 30274  00FD7A                     __ptext111:
 30275                           	opt stack 0
 30276  00FD7A                     __get_mbr:
 30277                           	opt stack 17
 30278                           
 30279                           ;fat16.c: 1039: switch (idx)
 30280                           
 30281                           ; BSR set to: 0
 30282                           ;incstack = 0
 30283  00FD7A  D026               	goto	l1861
 30284  00FD7C                     
 30285                           ;fat16.c: 1042: return 0x80;
 30286  00FD7C  0E80               	movlw	128
 30287  00FD7E  0012               	return	
 30288  00FD80                     
 30289                           ;fat16.c: 1044: return 0;
 30290  00FD80  0E00               	movlw	0
 30291  00FD82  0012               	return	
 30292  00FD84                     
 30293                           ;fat16.c: 1046: return 2;
 30294  00FD84  0E02               	movlw	2
 30295  00FD86  0012               	return	
 30296  00FD88                     
 30297                           ;fat16.c: 1048: return 0;
 30298  00FD88  0E00               	movlw	0
 30299  00FD8A  0012               	return	
 30300  00FD8C                     
 30301                           ;fat16.c: 1050: return 0x04;
 30302  00FD8C  0E04               	movlw	4
 30303  00FD8E  0012               	return	
 30304  00FD90                     
 30305                           ;fat16.c: 1052: return 2;
 30306  00FD90  0E02               	movlw	2
 30307  00FD92  0012               	return	
 30308  00FD94                     
 30309                           ;fat16.c: 1054: return 3;
 30310  00FD94  0E03               	movlw	3
 30311  00FD96  0012               	return	
 30312  00FD98                     
 30313                           ;fat16.c: 1056: return 8;
 30314  00FD98  0E08               	movlw	8
 30315  00FD9A  0012               	return	
 30316  00FD9C                     
 30317                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
 30318  00FD9C  0E01               	movlw	1
 30319  00FD9E  0012               	return	
 30320  00FDA0                     
 30321                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
 30322  00FDA0  0E00               	movlw	0
 30323  00FDA2  0012               	return	
 30324  00FDA4                     
 30325                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
 30326  00FDA4  0E00               	movlw	0
 30327  00FDA6  0012               	return	
 30328  00FDA8                     
 30329                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 30330  00FDA8  0E00               	movlw	0
 30331  00FDAA  0012               	return	
 30332  00FDAC                     
 30333                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
 30334  00FDAC  0EFF               	movlw	255
 30335  00FDAE  0012               	return	
 30336  00FDB0                     
 30337                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
 30338  00FDB0  0E1F               	movlw	31
 30339  00FDB2  0012               	return	
 30340  00FDB4                     
 30341                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
 30342  00FDB4  0E00               	movlw	0
 30343  00FDB6  0012               	return	
 30344  00FDB8                     
 30345                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
 30346  00FDB8  0E00               	movlw	0
 30347  00FDBA  0012               	return	
 30348  00FDBC                     
 30349                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 30350  00FDBC  0E55               	movlw	85
 30351  00FDBE  0012               	return	
 30352  00FDC0                     
 30353                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 30354  00FDC0  0EAA               	movlw	170
 30355  00FDC2  0012               	return	
 30356  00FDC4                     
 30357                           ;fat16.c: 1078: return 0X00;
 30358  00FDC4  0E00               	movlw	0
 30359                           
 30360                           ;fat16.c: 1079: }
 30361  00FDC6  0012               	return	
 30362  00FDC8                     l1861:
 30363  00FDC8  C060  F062         	movff	__get_mbr@idx,??__get_mbr
 30364  00FDCC  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
 30365                           
 30366                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30367                           ; Switch size 1, requested type "space"
 30368                           ; Number of cases is 1, Range of values is 1 to 1
 30369                           ; switch strategies available:
 30370                           ; Name         Instructions Cycles
 30371                           ; simple_byte            4     3 (average)
 30372                           ;	Chosen strategy is simple_byte
 30373  00FDD0  0100               	movlb	0	; () banked
 30374  00FDD2  5163               	movf	(??__get_mbr+1)& (0+255),w,b
 30375  00FDD4  0A01               	xorlw	1	; case 1
 30376  00FDD6  A4D8               	btfss	status,2,c
 30377  00FDD8  D7F5               	goto	l1881
 30378                           
 30379                           ; BSR set to: 0
 30380                           ; Switch size 1, requested type "space"
 30381                           ; Number of cases is 18, Range of values is 190 to 255
 30382                           ; switch strategies available:
 30383                           ; Name         Instructions Cycles
 30384                           ; simple_byte           55    28 (average)
 30385                           ;	Chosen strategy is simple_byte
 30386  00FDDA  5162               	movf	??__get_mbr& (0+255),w,b
 30387  00FDDC  0ABE               	xorlw	190	; case 190
 30388  00FDDE  B4D8               	btfsc	status,2,c
 30389  00FDE0  D7CD               	goto	l1862
 30390  00FDE2  0A01               	xorlw	1	; case 191
 30391  00FDE4  B4D8               	btfsc	status,2,c
 30392  00FDE6  D7CC               	goto	l1864
 30393  00FDE8  0A7F               	xorlw	127	; case 192
 30394  00FDEA  B4D8               	btfsc	status,2,c
 30395  00FDEC  D7CB               	goto	l1865
 30396  00FDEE  0A01               	xorlw	1	; case 193
 30397  00FDF0  B4D8               	btfsc	status,2,c
 30398  00FDF2  D7CA               	goto	l1866
 30399  00FDF4  0A03               	xorlw	3	; case 194
 30400  00FDF6  B4D8               	btfsc	status,2,c
 30401  00FDF8  D7C9               	goto	l1867
 30402  00FDFA  0A01               	xorlw	1	; case 195
 30403  00FDFC  B4D8               	btfsc	status,2,c
 30404  00FDFE  D7C8               	goto	l1868
 30405  00FE00  0A07               	xorlw	7	; case 196
 30406  00FE02  B4D8               	btfsc	status,2,c
 30407  00FE04  D7C7               	goto	l1869
 30408  00FE06  0A01               	xorlw	1	; case 197
 30409  00FE08  B4D8               	btfsc	status,2,c
 30410  00FE0A  D7C6               	goto	l1870
 30411  00FE0C  0A03               	xorlw	3	; case 198
 30412  00FE0E  B4D8               	btfsc	status,2,c
 30413  00FE10  D7C5               	goto	l1871
 30414  00FE12  0A01               	xorlw	1	; case 199
 30415  00FE14  B4D8               	btfsc	status,2,c
 30416  00FE16  D7C4               	goto	l1872
 30417  00FE18  0A0F               	xorlw	15	; case 200
 30418  00FE1A  B4D8               	btfsc	status,2,c
 30419  00FE1C  D7C3               	goto	l1873
 30420  00FE1E  0A01               	xorlw	1	; case 201
 30421  00FE20  B4D8               	btfsc	status,2,c
 30422  00FE22  D7C2               	goto	l1874
 30423  00FE24  0A03               	xorlw	3	; case 202
 30424  00FE26  B4D8               	btfsc	status,2,c
 30425  00FE28  D7C1               	goto	l1875
 30426  00FE2A  0A01               	xorlw	1	; case 203
 30427  00FE2C  B4D8               	btfsc	status,2,c
 30428  00FE2E  D7C0               	goto	l1876
 30429  00FE30  0A07               	xorlw	7	; case 204
 30430  00FE32  B4D8               	btfsc	status,2,c
 30431  00FE34  D7BF               	goto	l1877
 30432  00FE36  0A01               	xorlw	1	; case 205
 30433  00FE38  B4D8               	btfsc	status,2,c
 30434  00FE3A  D7BE               	goto	l1878
 30435  00FE3C  0A33               	xorlw	51	; case 254
 30436  00FE3E  B4D8               	btfsc	status,2,c
 30437  00FE40  D7BD               	goto	l1879
 30438  00FE42  0A01               	xorlw	1	; case 255
 30439  00FE44  B4D8               	btfsc	status,2,c
 30440  00FE46  D7BC               	goto	l1880
 30441  00FE48  D7BD               	goto	l1881
 30442  00FE4A                     __end_of__get_mbr:
 30443                           	opt stack 0
 30444                           tosu	equ	0xFFF
 30445                           tosh	equ	0xFFE
 30446                           tosl	equ	0xFFD
 30447                           pclath	equ	0xFFA
 30448                           tblptru	equ	0xFF8
 30449                           tblptrh	equ	0xFF7
 30450                           tblptrl	equ	0xFF6
 30451                           tablat	equ	0xFF5
 30452                           prodh	equ	0xFF4
 30453                           prodl	equ	0xFF3
 30454                           intcon	equ	0xFF2
 30455                           indf0	equ	0xFEF
 30456                           postinc0	equ	0xFEE
 30457                           fsr0h	equ	0xFEA
 30458                           fsr0l	equ	0xFE9
 30459                           wreg	equ	0xFE8
 30460                           indf1	equ	0xFE7
 30461                           postdec1	equ	0xFE5
 30462                           plusw1	equ	0xFE3
 30463                           fsr1h	equ	0xFE2
 30464                           fsr1l	equ	0xFE1
 30465                           indf2	equ	0xFDF
 30466                           postinc2	equ	0xFDE
 30467                           postdec2	equ	0xFDD
 30468                           plusw2	equ	0xFDB
 30469                           fsr2h	equ	0xFDA
 30470                           fsr2l	equ	0xFD9
 30471                           status	equ	0xFD8
 30472                           
 30473 ;; *************** function __get_fbr *****************
 30474 ;; Defined at:
 30475 ;;		line 1082 in file "fat16.c"
 30476 ;; Parameters:    Size  Location     Type
 30477 ;;  idx             2    0[BANK0 ] unsigned int 
 30478 ;; Auto vars:     Size  Location     Type
 30479 ;;		None
 30480 ;; Return value:  Size  Location     Type
 30481 ;;                  1    wreg      unsigned char 
 30482 ;; Registers used:
 30483 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 30484 ;; Tracked objects:
 30485 ;;		On entry : 0/0
 30486 ;;		On exit  : 0/0
 30487 ;;		Unchanged: 0/0
 30488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30489 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30491 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30492 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30493 ;;Total ram usage:        4 bytes
 30494 ;; Hardware stack levels used:    1
 30495 ;; Hardware stack levels required when called:   10
 30496 ;; This function calls:
 30497 ;;		Nothing
 30498 ;; This function is called by:
 30499 ;;		_fat_get_format_status
 30500 ;;		_fat_format
 30501 ;; This function uses a non-reentrant model
 30502 ;;
 30503                           
 30504                           	psect	text112
 30505  00D34A                     __ptext112:
 30506                           	opt stack 0
 30507  00D34A                     __get_fbr:
 30508                           	opt stack 17
 30509                           
 30510                           ;fat16.c: 1084: switch (idx)
 30511                           
 30512                           ;incstack = 0
 30513  00D34A  D098               	goto	l1885
 30514  00D34C                     
 30515                           ;fat16.c: 1087: return 0xEB;
 30516  00D34C  0EEB               	movlw	235
 30517  00D34E  0012               	return	
 30518  00D350                     
 30519                           ;fat16.c: 1089: return 0x3C;
 30520  00D350  0E3C               	movlw	60
 30521  00D352  0012               	return	
 30522  00D354                     
 30523                           ;fat16.c: 1091: return 0x90;
 30524  00D354  0E90               	movlw	144
 30525  00D356  0012               	return	
 30526  00D358                     
 30527                           ;fat16.c: 1093: return "MSDOS5.0"[0];
 30528  00D358  0E13               	movlw	low STR_7
 30529  00D35A  6EF6               	movwf	tblptrl,c
 30530  00D35C                     	if	1	;There is more than 1 active tblptr byte
 30531  00D35C  0EA2               	movlw	high STR_7
 30532  00D35E  6EF7               	movwf	tblptrh,c
 30533  00D360                     	endif
 30534  00D360                     	if	1	;There are 3 active tblptr bytes
 30535  00D360  0E00               	movlw	low (STR_7 shr (0+16))
 30536  00D362  6EF8               	movwf	tblptru,c
 30537  00D364                     	endif
 30538  00D364  0008               	tblrd		*
 30539  00D366  50F5               	movf	tablat,w,c
 30540  00D368  0012               	return	
 30541  00D36A                     
 30542                           ;fat16.c: 1095: return "MSDOS5.0"[1];
 30543  00D36A  0E14               	movlw	low (STR_7+1)
 30544  00D36C  6EF6               	movwf	tblptrl,c
 30545  00D36E  0EA2               	movlw	high (STR_7+1)
 30546  00D370  6EF7               	movwf	tblptrh,c
 30547  00D372                     	if	0	;tblptru may be non-zero
 30548  00D372                     	endif
 30549  00D372                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30550  00D372  0E00               	movlw	low (__mediumconst shr (0+16))
 30551  00D374  6EF8               	movwf	tblptru,c
 30552  00D376                     	endif
 30553  00D376  0008               	tblrd		*
 30554  00D378  50F5               	movf	tablat,w,c
 30555  00D37A  0012               	return	
 30556  00D37C                     
 30557                           ;fat16.c: 1097: return "MSDOS5.0"[2];
 30558  00D37C  0E15               	movlw	low (STR_7+2)
 30559  00D37E  6EF6               	movwf	tblptrl,c
 30560  00D380  0EA2               	movlw	high (STR_7+2)
 30561  00D382  6EF7               	movwf	tblptrh,c
 30562  00D384                     	if	0	;tblptru may be non-zero
 30563  00D384                     	endif
 30564  00D384                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30565  00D384  0E00               	movlw	low (__mediumconst shr (0+16))
 30566  00D386  6EF8               	movwf	tblptru,c
 30567  00D388                     	endif
 30568  00D388  0008               	tblrd		*
 30569  00D38A  50F5               	movf	tablat,w,c
 30570  00D38C  0012               	return	
 30571  00D38E                     
 30572                           ;fat16.c: 1099: return "MSDOS5.0"[3];
 30573  00D38E  0E16               	movlw	low (STR_7+3)
 30574  00D390  6EF6               	movwf	tblptrl,c
 30575  00D392  0EA2               	movlw	high (STR_7+3)
 30576  00D394  6EF7               	movwf	tblptrh,c
 30577  00D396                     	if	0	;tblptru may be non-zero
 30578  00D396                     	endif
 30579  00D396                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30580  00D396  0E00               	movlw	low (__mediumconst shr (0+16))
 30581  00D398  6EF8               	movwf	tblptru,c
 30582  00D39A                     	endif
 30583  00D39A  0008               	tblrd		*
 30584  00D39C  50F5               	movf	tablat,w,c
 30585  00D39E  0012               	return	
 30586  00D3A0                     
 30587                           ;fat16.c: 1101: return "MSDOS5.0"[4];
 30588  00D3A0  0E17               	movlw	low (STR_7+4)
 30589  00D3A2  6EF6               	movwf	tblptrl,c
 30590  00D3A4  0EA2               	movlw	high (STR_7+4)
 30591  00D3A6  6EF7               	movwf	tblptrh,c
 30592  00D3A8                     	if	0	;tblptru may be non-zero
 30593  00D3A8                     	endif
 30594  00D3A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30595  00D3A8  0E00               	movlw	low (__mediumconst shr (0+16))
 30596  00D3AA  6EF8               	movwf	tblptru,c
 30597  00D3AC                     	endif
 30598  00D3AC  0008               	tblrd		*
 30599  00D3AE  50F5               	movf	tablat,w,c
 30600  00D3B0  0012               	return	
 30601  00D3B2                     
 30602                           ;fat16.c: 1103: return "MSDOS5.0"[5];
 30603  00D3B2  0E18               	movlw	low (STR_7+5)
 30604  00D3B4  6EF6               	movwf	tblptrl,c
 30605  00D3B6  0EA2               	movlw	high (STR_7+5)
 30606  00D3B8  6EF7               	movwf	tblptrh,c
 30607  00D3BA                     	if	0	;tblptru may be non-zero
 30608  00D3BA                     	endif
 30609  00D3BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30610  00D3BA  0E00               	movlw	low (__mediumconst shr (0+16))
 30611  00D3BC  6EF8               	movwf	tblptru,c
 30612  00D3BE                     	endif
 30613  00D3BE  0008               	tblrd		*
 30614  00D3C0  50F5               	movf	tablat,w,c
 30615  00D3C2  0012               	return	
 30616  00D3C4                     
 30617                           ;fat16.c: 1105: return "MSDOS5.0"[6];
 30618  00D3C4  0E19               	movlw	low (STR_7+6)
 30619  00D3C6  6EF6               	movwf	tblptrl,c
 30620  00D3C8  0EA2               	movlw	high (STR_7+6)
 30621  00D3CA  6EF7               	movwf	tblptrh,c
 30622  00D3CC                     	if	0	;tblptru may be non-zero
 30623  00D3CC                     	endif
 30624  00D3CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30625  00D3CC  0E00               	movlw	low (__mediumconst shr (0+16))
 30626  00D3CE  6EF8               	movwf	tblptru,c
 30627  00D3D0                     	endif
 30628  00D3D0  0008               	tblrd		*
 30629  00D3D2  50F5               	movf	tablat,w,c
 30630  00D3D4  0012               	return	
 30631  00D3D6                     
 30632                           ;fat16.c: 1107: return "MSDOS5.0"[7];
 30633  00D3D6  0E1A               	movlw	low (STR_7+7)
 30634  00D3D8  6EF6               	movwf	tblptrl,c
 30635  00D3DA  0EA2               	movlw	high (STR_7+7)
 30636  00D3DC  6EF7               	movwf	tblptrh,c
 30637  00D3DE                     	if	0	;tblptru may be non-zero
 30638  00D3DE                     	endif
 30639  00D3DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30640  00D3DE  0E00               	movlw	low (__mediumconst shr (0+16))
 30641  00D3E0  6EF8               	movwf	tblptru,c
 30642  00D3E2                     	endif
 30643  00D3E2  0008               	tblrd		*
 30644  00D3E4  50F5               	movf	tablat,w,c
 30645  00D3E6  0012               	return	
 30646  00D3E8                     
 30647                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
 30648  00D3E8  0E00               	movlw	0
 30649  00D3EA  0012               	return	
 30650  00D3EC                     
 30651                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 30652  00D3EC  0E02               	movlw	2
 30653  00D3EE  0012               	return	
 30654  00D3F0                     
 30655                           ;fat16.c: 1113: return 1;
 30656  00D3F0  0E01               	movlw	1
 30657  00D3F2  0012               	return	
 30658  00D3F4                     
 30659                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
 30660  00D3F4  0E01               	movlw	1
 30661  00D3F6  0012               	return	
 30662  00D3F8                     
 30663                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 30664  00D3F8  0E00               	movlw	0
 30665  00D3FA  0012               	return	
 30666  00D3FC                     
 30667                           ;fat16.c: 1119: return 1;
 30668  00D3FC  0E01               	movlw	1
 30669  00D3FE  0012               	return	
 30670  00D400                     
 30671                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
 30672  00D400  0E40               	movlw	64
 30673  00D402  0012               	return	
 30674  00D404                     
 30675                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 30676  00D404  0E00               	movlw	0
 30677  00D406  0012               	return	
 30678  00D408                     
 30679                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
 30680  00D408  0EFF               	movlw	255
 30681  00D40A  0012               	return	
 30682  00D40C                     
 30683                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 30684  00D40C  0E1F               	movlw	31
 30685  00D40E  0012               	return	
 30686  00D410                     
 30687                           ;fat16.c: 1129: return 0XF8;
 30688  00D410  0EF8               	movlw	248
 30689  00D412  0012               	return	
 30690  00D414                     
 30691                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
 30692  00D414  0E20               	movlw	32
 30693  00D416  0012               	return	
 30694  00D418                     
 30695                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 30696  00D418  0E00               	movlw	0
 30697  00D41A  0012               	return	
 30698  00D41C                     
 30699                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
 30700  00D41C  0E3F               	movlw	63
 30701  00D41E  0012               	return	
 30702  00D420                     
 30703                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 30704  00D420  0E00               	movlw	0
 30705  00D422  0012               	return	
 30706  00D424                     
 30707                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
 30708  00D424  0E10               	movlw	16
 30709  00D426  0012               	return	
 30710  00D428                     
 30711                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 30712  00D428  0E00               	movlw	0
 30713  00D42A  0012               	return	
 30714  00D42C                     
 30715                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 30716  00D42C  0E00               	movlw	0
 30717  00D42E  0012               	return	
 30718  00D430                     
 30719                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 30720  00D430  0E00               	movlw	0
 30721  00D432  0012               	return	
 30722  00D434                     
 30723                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 30724  00D434  0E00               	movlw	0
 30725  00D436  0012               	return	
 30726  00D438                     
 30727                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 30728  00D438  0E00               	movlw	0
 30729  00D43A  0012               	return	
 30730  00D43C                     
 30731                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 30732  00D43C  0E01               	movlw	1
 30733  00D43E  0012               	return	
 30734  00D440                     
 30735                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 30736  00D440  0E00               	movlw	0
 30737  00D442  0012               	return	
 30738  00D444                     
 30739                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 30740  00D444  0E22               	movlw	34
 30741  00D446  0012               	return	
 30742  00D448                     
 30743                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 30744  00D448  0E00               	movlw	0
 30745  00D44A  0012               	return	
 30746  00D44C                     
 30747                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 30748                           
 30749                           ;fat16.c: 1160: case 0x2F:
 30750  00D44C  0E00               	movlw	0
 30751  00D44E  0012               	return	
 30752  00D450                     
 30753                           ;fat16.c: 1163: return 'F';
 30754  00D450  0E46               	movlw	70
 30755  00D452  0012               	return	
 30756  00D454                     
 30757                           ;fat16.c: 1165: return 'A';
 30758  00D454  0E41               	movlw	65
 30759  00D456  0012               	return	
 30760  00D458                     
 30761                           ;fat16.c: 1167: return 'T';
 30762  00D458  0E54               	movlw	84
 30763  00D45A  0012               	return	
 30764  00D45C                     
 30765                           ;fat16.c: 1169: return '1';
 30766  00D45C  0E31               	movlw	49
 30767  00D45E  0012               	return	
 30768  00D460                     
 30769                           ;fat16.c: 1171: return '6';
 30770  00D460  0E36               	movlw	54
 30771  00D462  0012               	return	
 30772  00D464                     
 30773                           ;fat16.c: 1173: return ' ';
 30774  00D464  0E20               	movlw	32
 30775  00D466  0012               	return	
 30776  00D468                     
 30777                           ;fat16.c: 1175: return ' ';
 30778  00D468  0E20               	movlw	32
 30779  00D46A  0012               	return	
 30780  00D46C                     
 30781                           ;fat16.c: 1177: return ' ';
 30782  00D46C  0E20               	movlw	32
 30783  00D46E  0012               	return	
 30784  00D470                     
 30785                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 30786  00D470  0E55               	movlw	85
 30787  00D472  0012               	return	
 30788  00D474                     
 30789                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 30790  00D474  0EAA               	movlw	170
 30791  00D476  0012               	return	
 30792  00D478                     
 30793                           ;fat16.c: 1183: return 0X00;
 30794  00D478  0E00               	movlw	0
 30795                           
 30796                           ;fat16.c: 1184: }
 30797  00D47A  0012               	return	
 30798  00D47C                     l1885:
 30799  00D47C  C060  F062         	movff	__get_fbr@idx,??__get_fbr
 30800  00D480  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
 30801                           
 30802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 30803                           ; Switch size 1, requested type "space"
 30804                           ; Number of cases is 2, Range of values is 0 to 1
 30805                           ; switch strategies available:
 30806                           ; Name         Instructions Cycles
 30807                           ; simple_byte            7     4 (average)
 30808                           ;	Chosen strategy is simple_byte
 30809  00D484  0100               	movlb	0	; () banked
 30810  00D486  5163               	movf	(??__get_fbr+1)& (0+255),w,b
 30811  00D488  0A00               	xorlw	0	; case 0
 30812  00D48A  B4D8               	btfsc	status,2,c
 30813  00D48C  D004               	goto	l22248
 30814  00D48E  0A01               	xorlw	1	; case 1
 30815  00D490  B4D8               	btfsc	status,2,c
 30816  00D492  D08D               	goto	l22250
 30817  00D494  D7F1               	goto	l1935
 30818  00D496                     l22248:
 30819                           
 30820                           ; BSR set to: 0
 30821                           ; Switch size 1, requested type "space"
 30822                           ; Number of cases is 46, Range of values is 0 to 61
 30823                           ; switch strategies available:
 30824                           ; Name         Instructions Cycles
 30825                           ; simple_byte          139    70 (average)
 30826                           ;	Chosen strategy is simple_byte
 30827  00D496  5162               	movf	??__get_fbr& (0+255),w,b
 30828  00D498  0A00               	xorlw	0	; case 0
 30829  00D49A  B4D8               	btfsc	status,2,c
 30830  00D49C  D757               	goto	l1886
 30831  00D49E  0A01               	xorlw	1	; case 1
 30832  00D4A0  B4D8               	btfsc	status,2,c
 30833  00D4A2  D756               	goto	l1888
 30834  00D4A4  0A03               	xorlw	3	; case 2
 30835  00D4A6  B4D8               	btfsc	status,2,c
 30836  00D4A8  D755               	goto	l1889
 30837  00D4AA  0A01               	xorlw	1	; case 3
 30838  00D4AC  B4D8               	btfsc	status,2,c
 30839  00D4AE  D754               	goto	l1890
 30840  00D4B0  0A07               	xorlw	7	; case 4
 30841  00D4B2  B4D8               	btfsc	status,2,c
 30842  00D4B4  D75A               	goto	l1891
 30843  00D4B6  0A01               	xorlw	1	; case 5
 30844  00D4B8  B4D8               	btfsc	status,2,c
 30845  00D4BA  D760               	goto	l1892
 30846  00D4BC  0A03               	xorlw	3	; case 6
 30847  00D4BE  B4D8               	btfsc	status,2,c
 30848  00D4C0  D766               	goto	l1893
 30849  00D4C2  0A01               	xorlw	1	; case 7
 30850  00D4C4  B4D8               	btfsc	status,2,c
 30851  00D4C6  D76C               	goto	l1894
 30852  00D4C8  0A0F               	xorlw	15	; case 8
 30853  00D4CA  B4D8               	btfsc	status,2,c
 30854  00D4CC  D772               	goto	l1895
 30855  00D4CE  0A01               	xorlw	1	; case 9
 30856  00D4D0  B4D8               	btfsc	status,2,c
 30857  00D4D2  D778               	goto	l1896
 30858  00D4D4  0A03               	xorlw	3	; case 10
 30859  00D4D6  B4D8               	btfsc	status,2,c
 30860  00D4D8  D77E               	goto	l1897
 30861  00D4DA  0A01               	xorlw	1	; case 11
 30862  00D4DC  B4D8               	btfsc	status,2,c
 30863  00D4DE  D784               	goto	l1898
 30864  00D4E0  0A07               	xorlw	7	; case 12
 30865  00D4E2  B4D8               	btfsc	status,2,c
 30866  00D4E4  D783               	goto	l1899
 30867  00D4E6  0A01               	xorlw	1	; case 13
 30868  00D4E8  B4D8               	btfsc	status,2,c
 30869  00D4EA  D782               	goto	l1900
 30870  00D4EC  0A03               	xorlw	3	; case 14
 30871  00D4EE  B4D8               	btfsc	status,2,c
 30872  00D4F0  D781               	goto	l1901
 30873  00D4F2  0A01               	xorlw	1	; case 15
 30874  00D4F4  B4D8               	btfsc	status,2,c
 30875  00D4F6  D780               	goto	l1902
 30876  00D4F8  0A1F               	xorlw	31	; case 16
 30877  00D4FA  B4D8               	btfsc	status,2,c
 30878  00D4FC  D77F               	goto	l1903
 30879  00D4FE  0A01               	xorlw	1	; case 17
 30880  00D500  B4D8               	btfsc	status,2,c
 30881  00D502  D77E               	goto	l1904
 30882  00D504  0A03               	xorlw	3	; case 18
 30883  00D506  B4D8               	btfsc	status,2,c
 30884  00D508  D77D               	goto	l1905
 30885  00D50A  0A01               	xorlw	1	; case 19
 30886  00D50C  B4D8               	btfsc	status,2,c
 30887  00D50E  D77C               	goto	l1906
 30888  00D510  0A07               	xorlw	7	; case 20
 30889  00D512  B4D8               	btfsc	status,2,c
 30890  00D514  D77B               	goto	l1907
 30891  00D516  0A01               	xorlw	1	; case 21
 30892  00D518  B4D8               	btfsc	status,2,c
 30893  00D51A  D77A               	goto	l1908
 30894  00D51C  0A03               	xorlw	3	; case 22
 30895  00D51E  B4D8               	btfsc	status,2,c
 30896  00D520  D779               	goto	l1909
 30897  00D522  0A01               	xorlw	1	; case 23
 30898  00D524  B4D8               	btfsc	status,2,c
 30899  00D526  D778               	goto	l1910
 30900  00D528  0A0F               	xorlw	15	; case 24
 30901  00D52A  B4D8               	btfsc	status,2,c
 30902  00D52C  D777               	goto	l1911
 30903  00D52E  0A01               	xorlw	1	; case 25
 30904  00D530  B4D8               	btfsc	status,2,c
 30905  00D532  D776               	goto	l1912
 30906  00D534  0A03               	xorlw	3	; case 26
 30907  00D536  B4D8               	btfsc	status,2,c
 30908  00D538  D775               	goto	l1913
 30909  00D53A  0A01               	xorlw	1	; case 27
 30910  00D53C  B4D8               	btfsc	status,2,c
 30911  00D53E  D774               	goto	l1914
 30912  00D540  0A07               	xorlw	7	; case 28
 30913  00D542  B4D8               	btfsc	status,2,c
 30914  00D544  D773               	goto	l1915
 30915  00D546  0A01               	xorlw	1	; case 29
 30916  00D548  B4D8               	btfsc	status,2,c
 30917  00D54A  D772               	goto	l1916
 30918  00D54C  0A03               	xorlw	3	; case 30
 30919  00D54E  B4D8               	btfsc	status,2,c
 30920  00D550  D771               	goto	l1917
 30921  00D552  0A01               	xorlw	1	; case 31
 30922  00D554  B4D8               	btfsc	status,2,c
 30923  00D556  D770               	goto	l1918
 30924  00D558  0A37               	xorlw	55	; case 40
 30925  00D55A  B4D8               	btfsc	status,2,c
 30926  00D55C  D76F               	goto	l1919
 30927  00D55E  0A01               	xorlw	1	; case 41
 30928  00D560  B4D8               	btfsc	status,2,c
 30929  00D562  D76E               	goto	l1920
 30930  00D564  0A05               	xorlw	5	; case 44
 30931  00D566  B4D8               	btfsc	status,2,c
 30932  00D568  D76D               	goto	l1921
 30933  00D56A  0A01               	xorlw	1	; case 45
 30934  00D56C  B4D8               	btfsc	status,2,c
 30935  00D56E  D76C               	goto	l1922
 30936  00D570  0A03               	xorlw	3	; case 46
 30937  00D572  B4D8               	btfsc	status,2,c
 30938  00D574  D76B               	goto	l1923
 30939  00D576  0A01               	xorlw	1	; case 47
 30940  00D578  B4D8               	btfsc	status,2,c
 30941  00D57A  D768               	goto	l1923
 30942  00D57C  0A19               	xorlw	25	; case 54
 30943  00D57E  B4D8               	btfsc	status,2,c
 30944  00D580  D767               	goto	l1925
 30945  00D582  0A01               	xorlw	1	; case 55
 30946  00D584  B4D8               	btfsc	status,2,c
 30947  00D586  D766               	goto	l1926
 30948  00D588  0A0F               	xorlw	15	; case 56
 30949  00D58A  B4D8               	btfsc	status,2,c
 30950  00D58C  D765               	goto	l1927
 30951  00D58E  0A01               	xorlw	1	; case 57
 30952  00D590  B4D8               	btfsc	status,2,c
 30953  00D592  D764               	goto	l1928
 30954  00D594  0A03               	xorlw	3	; case 58
 30955  00D596  B4D8               	btfsc	status,2,c
 30956  00D598  D763               	goto	l1929
 30957  00D59A  0A01               	xorlw	1	; case 59
 30958  00D59C  B4D8               	btfsc	status,2,c
 30959  00D59E  D762               	goto	l1930
 30960  00D5A0  0A07               	xorlw	7	; case 60
 30961  00D5A2  B4D8               	btfsc	status,2,c
 30962  00D5A4  D761               	goto	l1931
 30963  00D5A6  0A01               	xorlw	1	; case 61
 30964  00D5A8  B4D8               	btfsc	status,2,c
 30965  00D5AA  D760               	goto	l1932
 30966  00D5AC  D765               	goto	l1935
 30967  00D5AE                     l22250:
 30968                           
 30969                           ; BSR set to: 0
 30970                           ; Switch size 1, requested type "space"
 30971                           ; Number of cases is 2, Range of values is 254 to 255
 30972                           ; switch strategies available:
 30973                           ; Name         Instructions Cycles
 30974                           ; simple_byte            7     4 (average)
 30975                           ;	Chosen strategy is simple_byte
 30976  00D5AE  5162               	movf	??__get_fbr& (0+255),w,b
 30977  00D5B0  0AFE               	xorlw	254	; case 254
 30978  00D5B2  B4D8               	btfsc	status,2,c
 30979  00D5B4  D75D               	goto	l1933
 30980  00D5B6  0A01               	xorlw	1	; case 255
 30981  00D5B8  B4D8               	btfsc	status,2,c
 30982  00D5BA  D75C               	goto	l1934
 30983  00D5BC  D75D               	goto	l1935
 30984  00D5BE                     __end_of__get_fbr:
 30985                           	opt stack 0
 30986                           tosu	equ	0xFFF
 30987                           tosh	equ	0xFFE
 30988                           tosl	equ	0xFFD
 30989                           pclath	equ	0xFFA
 30990                           tblptru	equ	0xFF8
 30991                           tblptrh	equ	0xFF7
 30992                           tblptrl	equ	0xFF6
 30993                           tablat	equ	0xFF5
 30994                           prodh	equ	0xFF4
 30995                           prodl	equ	0xFF3
 30996                           intcon	equ	0xFF2
 30997                           indf0	equ	0xFEF
 30998                           postinc0	equ	0xFEE
 30999                           fsr0h	equ	0xFEA
 31000                           fsr0l	equ	0xFE9
 31001                           wreg	equ	0xFE8
 31002                           indf1	equ	0xFE7
 31003                           postdec1	equ	0xFE5
 31004                           plusw1	equ	0xFE3
 31005                           fsr1h	equ	0xFE2
 31006                           fsr1l	equ	0xFE1
 31007                           indf2	equ	0xFDF
 31008                           postinc2	equ	0xFDE
 31009                           postdec2	equ	0xFDD
 31010                           plusw2	equ	0xFDB
 31011                           fsr2h	equ	0xFDA
 31012                           fsr2l	equ	0xFD9
 31013                           status	equ	0xFD8
 31014                           
 31015 ;; *************** function __get_fat *****************
 31016 ;; Defined at:
 31017 ;;		line 1187 in file "fat16.c"
 31018 ;; Parameters:    Size  Location     Type
 31019 ;;  idx             2    0[BANK0 ] unsigned int 
 31020 ;; Auto vars:     Size  Location     Type
 31021 ;;		None
 31022 ;; Return value:  Size  Location     Type
 31023 ;;                  1    wreg      unsigned char 
 31024 ;; Registers used:
 31025 ;;		wreg, status,2, status,0
 31026 ;; Tracked objects:
 31027 ;;		On entry : 0/0
 31028 ;;		On exit  : 0/0
 31029 ;;		Unchanged: 0/0
 31030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31031 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31033 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31034 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31035 ;;Total ram usage:        4 bytes
 31036 ;; Hardware stack levels used:    1
 31037 ;; Hardware stack levels required when called:   10
 31038 ;; This function calls:
 31039 ;;		Nothing
 31040 ;; This function is called by:
 31041 ;;		_fat_format
 31042 ;; This function uses a non-reentrant model
 31043 ;;
 31044                           
 31045                           	psect	text113
 31046  01179C                     __ptext113:
 31047                           	opt stack 0
 31048  01179C                     __get_fat:
 31049                           	opt stack 17
 31050                           
 31051                           ;fat16.c: 1189: switch (idx)
 31052                           
 31053                           ;incstack = 0
 31054  01179C  D00E               	goto	l1939
 31055  01179E                     
 31056                           ;fat16.c: 1193: return 0xF8;
 31057  01179E  0EF8               	movlw	248
 31058  0117A0  0012               	return	
 31059  0117A2                     
 31060                           ;fat16.c: 1195: return 0xFF;
 31061  0117A2  0EFF               	movlw	255
 31062  0117A4  0012               	return	
 31063  0117A6                     
 31064                           ;fat16.c: 1197: return 0xFF;
 31065  0117A6  0EFF               	movlw	255
 31066  0117A8  0012               	return	
 31067  0117AA                     
 31068                           ;fat16.c: 1199: return 0xFF;
 31069  0117AA  0EFF               	movlw	255
 31070  0117AC  0012               	return	
 31071  0117AE                     
 31072                           ;fat16.c: 1202: return 0xFF;
 31073  0117AE  0EFF               	movlw	255
 31074  0117B0  0012               	return	
 31075  0117B2                     
 31076                           ;fat16.c: 1204: return 0xFF;
 31077  0117B2  0EFF               	movlw	255
 31078  0117B4  0012               	return	
 31079  0117B6                     
 31080                           ;fat16.c: 1206: return 0X00;
 31081  0117B6  0E00               	movlw	0
 31082                           
 31083                           ;fat16.c: 1207: }
 31084  0117B8  0012               	return	
 31085  0117BA                     l1939:
 31086  0117BA  C060  F062         	movff	__get_fat@idx,??__get_fat
 31087  0117BE  C061  F063         	movff	__get_fat@idx+1,??__get_fat+1
 31088                           
 31089                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31090                           ; Switch size 1, requested type "space"
 31091                           ; Number of cases is 1, Range of values is 0 to 0
 31092                           ; switch strategies available:
 31093                           ; Name         Instructions Cycles
 31094                           ; simple_byte            4     3 (average)
 31095                           ;	Chosen strategy is simple_byte
 31096  0117C2  0100               	movlb	0	; () banked
 31097  0117C4  5163               	movf	(??__get_fat+1)& (0+255),w,b
 31098  0117C6  0A00               	xorlw	0	; case 0
 31099  0117C8  A4D8               	btfss	status,2,c
 31100  0117CA  D7F5               	goto	l1947
 31101                           
 31102                           ; BSR set to: 0
 31103                           ; Switch size 1, requested type "space"
 31104                           ; Number of cases is 6, Range of values is 0 to 5
 31105                           ; switch strategies available:
 31106                           ; Name         Instructions Cycles
 31107                           ; simple_byte           19    10 (average)
 31108                           ;	Chosen strategy is simple_byte
 31109  0117CC  5162               	movf	??__get_fat& (0+255),w,b
 31110  0117CE  0A00               	xorlw	0	; case 0
 31111  0117D0  B4D8               	btfsc	status,2,c
 31112  0117D2  D7E5               	goto	l1940
 31113  0117D4  0A01               	xorlw	1	; case 1
 31114  0117D6  B4D8               	btfsc	status,2,c
 31115  0117D8  D7E4               	goto	l1942
 31116  0117DA  0A03               	xorlw	3	; case 2
 31117  0117DC  B4D8               	btfsc	status,2,c
 31118  0117DE  D7E3               	goto	l1943
 31119  0117E0  0A01               	xorlw	1	; case 3
 31120  0117E2  B4D8               	btfsc	status,2,c
 31121  0117E4  D7E2               	goto	l1944
 31122  0117E6  0A07               	xorlw	7	; case 4
 31123  0117E8  B4D8               	btfsc	status,2,c
 31124  0117EA  D7E1               	goto	l1945
 31125  0117EC  0A01               	xorlw	1	; case 5
 31126  0117EE  B4D8               	btfsc	status,2,c
 31127  0117F0  D7E0               	goto	l1946
 31128  0117F2  D7E1               	goto	l1947
 31129  0117F4                     __end_of__get_fat:
 31130                           	opt stack 0
 31131                           tosu	equ	0xFFF
 31132                           tosh	equ	0xFFE
 31133                           tosl	equ	0xFFD
 31134                           pclath	equ	0xFFA
 31135                           tblptru	equ	0xFF8
 31136                           tblptrh	equ	0xFF7
 31137                           tblptrl	equ	0xFF6
 31138                           tablat	equ	0xFF5
 31139                           prodh	equ	0xFF4
 31140                           prodl	equ	0xFF3
 31141                           intcon	equ	0xFF2
 31142                           indf0	equ	0xFEF
 31143                           postinc0	equ	0xFEE
 31144                           fsr0h	equ	0xFEA
 31145                           fsr0l	equ	0xFE9
 31146                           wreg	equ	0xFE8
 31147                           indf1	equ	0xFE7
 31148                           postdec1	equ	0xFE5
 31149                           plusw1	equ	0xFE3
 31150                           fsr1h	equ	0xFE2
 31151                           fsr1l	equ	0xFE1
 31152                           indf2	equ	0xFDF
 31153                           postinc2	equ	0xFDE
 31154                           postdec2	equ	0xFDD
 31155                           plusw2	equ	0xFDB
 31156                           fsr2h	equ	0xFDA
 31157                           fsr2l	equ	0xFD9
 31158                           status	equ	0xFD8
 31159                           
 31160 ;; *************** function __get_data *****************
 31161 ;; Defined at:
 31162 ;;		line 1283 in file "fat16.c"
 31163 ;; Parameters:    Size  Location     Type
 31164 ;;  idx             2    0[BANK0 ] unsigned int 
 31165 ;; Auto vars:     Size  Location     Type
 31166 ;;		None
 31167 ;; Return value:  Size  Location     Type
 31168 ;;                  1    wreg      unsigned char 
 31169 ;; Registers used:
 31170 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 31171 ;; Tracked objects:
 31172 ;;		On entry : 0/0
 31173 ;;		On exit  : 0/0
 31174 ;;		Unchanged: 0/0
 31175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31176 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31179 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31180 ;;Total ram usage:        2 bytes
 31181 ;; Hardware stack levels used:    1
 31182 ;; Hardware stack levels required when called:   10
 31183 ;; This function calls:
 31184 ;;		Nothing
 31185 ;; This function is called by:
 31186 ;;		_fat_format
 31187 ;; This function uses a non-reentrant model
 31188 ;;
 31189                           
 31190                           	psect	text114
 31191  012104                     __ptext114:
 31192                           	opt stack 0
 31193  012104                     __get_data:
 31194                           	opt stack 17
 31195                           
 31196                           ;fat16.c: 1285: if(idx < 12)
 31197                           
 31198                           ;incstack = 0
 31199  012104  0100               	movlb	0	; () banked
 31200  012106  5161               	movf	(__get_data@idx+1)& (0+255),w,b
 31201  012108  E110               	bnz	l17758
 31202  01210A  0E0C               	movlw	12
 31203  01210C  5D60               	subwf	__get_data@idx& (0+255),w,b
 31204  01210E  B0D8               	btfsc	status,0,c
 31205  012110  D00C               	goto	l1983
 31206                           
 31207                           ; BSR set to: 0
 31208                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
 31209  012112  0EF1               	movlw	low STR_18
 31210  012114  2560               	addwf	__get_data@idx& (0+255),w,b
 31211  012116  6EF6               	movwf	tblptrl,c
 31212  012118  0EA1               	movlw	high STR_18
 31213  01211A  2161               	addwfc	(__get_data@idx+1)& (0+255),w,b
 31214  01211C  6EF7               	movwf	tblptrh,c
 31215  01211E                     	if	1	;There are 3 active tblptr bytes
 31216  01211E  6AF8               	clrf	tblptru,c
 31217  012120  0E00               	movlw	low (__mediumconst shr (0+16))
 31218  012122  22F8               	addwfc	tblptru,f,c
 31219  012124                     	endif
 31220  012124  0008               	tblrd		*
 31221  012126  50F5               	movf	tablat,w,c
 31222                           
 31223                           ; BSR set to: 0
 31224  012128  0012               	return	
 31225  01212A                     l1983:
 31226  01212A                     l17758:
 31227                           
 31228                           ; BSR set to: 0
 31229                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
 31230  01212A  0E00               	movlw	0
 31231  01212C  0012               	return	
 31232  01212E                     __end_of__get_data:
 31233                           	opt stack 0
 31234                           tosu	equ	0xFFF
 31235                           tosh	equ	0xFFE
 31236                           tosl	equ	0xFFD
 31237                           pclath	equ	0xFFA
 31238                           tblptru	equ	0xFF8
 31239                           tblptrh	equ	0xFF7
 31240                           tblptrl	equ	0xFF6
 31241                           tablat	equ	0xFF5
 31242                           prodh	equ	0xFF4
 31243                           prodl	equ	0xFF3
 31244                           intcon	equ	0xFF2
 31245                           indf0	equ	0xFEF
 31246                           postinc0	equ	0xFEE
 31247                           fsr0h	equ	0xFEA
 31248                           fsr0l	equ	0xFE9
 31249                           wreg	equ	0xFE8
 31250                           indf1	equ	0xFE7
 31251                           postdec1	equ	0xFE5
 31252                           plusw1	equ	0xFE3
 31253                           fsr1h	equ	0xFE2
 31254                           fsr1l	equ	0xFE1
 31255                           indf2	equ	0xFDF
 31256                           postinc2	equ	0xFDE
 31257                           postdec2	equ	0xFDD
 31258                           plusw2	equ	0xFDB
 31259                           fsr2h	equ	0xFDA
 31260                           fsr2l	equ	0xFD9
 31261                           status	equ	0xFD8
 31262                           
 31263 ;; *************** function _USBTransferOnePacket *****************
 31264 ;; Defined at:
 31265 ;;		line 995 in file "usb_device.c"
 31266 ;; Parameters:    Size  Location     Type
 31267 ;;  ep              1    wreg     unsigned char 
 31268 ;;  dir             1    0[BANK0 ] unsigned char 
 31269 ;;  data            2    1[BANK0 ] PTR unsigned char 
 31270 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 31271 ;;		 -> msd_cbw(31), NULL(0), 
 31272 ;;  len             1    3[BANK0 ] unsigned char 
 31273 ;; Auto vars:     Size  Location     Type
 31274 ;;  ep              1    8[BANK0 ] unsigned char 
 31275 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 31276 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 31277 ;; Return value:  Size  Location     Type
 31278 ;;                  2    0[BANK0 ] PTR void 
 31279 ;; Registers used:
 31280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31281 ;; Tracked objects:
 31282 ;;		On entry : 0/0
 31283 ;;		On exit  : 0/0
 31284 ;;		Unchanged: 0/0
 31285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31286 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31287 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31288 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31289 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31290 ;;Total ram usage:       11 bytes
 31291 ;; Hardware stack levels used:    1
 31292 ;; Hardware stack levels required when called:   10
 31293 ;; This function calls:
 31294 ;;		Nothing
 31295 ;; This function is called by:
 31296 ;;		_MSDTasks
 31297 ;;		_MSDProcessCommandMediaPresent
 31298 ;;		_MSDReadHandler
 31299 ;;		_MSDWriteHandler
 31300 ;;		_APP_DeviceCustomHIDTasks
 31301 ;; This function uses a non-reentrant model
 31302 ;;
 31303                           
 31304                           	psect	text115
 31305  00F33E                     __ptext115:
 31306                           	opt stack 0
 31307  00F33E                     _USBTransferOnePacket:
 31308                           	opt stack 18
 31309                           
 31310                           ; BSR set to: 0
 31311                           ;incstack = 0
 31312                           ;USBTransferOnePacket@ep stored from wreg
 31313  00F33E  0100               	movlb	0	; () banked
 31314  00F340  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 31315                           
 31316                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 31317  00F342  0100               	movlb	0	; () banked
 31318  00F344  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 31319  00F346  B4D8               	btfsc	status,2,c
 31320  00F348  D007               	goto	l184
 31321                           
 31322                           ; BSR set to: 0
 31323                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 31324  00F34A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 31325  00F34C  0D02               	mullw	2
 31326  00F34E  0E10               	movlw	low _pBDTEntryIn
 31327  00F350  24F3               	addwf	prodl,w,c
 31328  00F352  6ED9               	movwf	fsr2l,c
 31329  00F354  0E00               	movlw	high _pBDTEntryIn
 31330  00F356  D006               	goto	L54
 31331  00F358                     l184:
 31332                           
 31333                           ; BSR set to: 0
 31334                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 31335                           
 31336                           ; BSR set to: 0
 31337  00F358  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 31338  00F35A  0D02               	mullw	2
 31339  00F35C  0E45               	movlw	low _pBDTEntryOut
 31340  00F35E  24F3               	addwf	prodl,w,c
 31341  00F360  6ED9               	movwf	fsr2l,c
 31342  00F362  0E01               	movlw	high _pBDTEntryOut
 31343  00F364                     L54:
 31344  00F364  20F4               	addwfc	prodh,w,c
 31345  00F366  6EDA               	movwf	fsr2h,c
 31346  00F368  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 31347  00F36C  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 31348                           
 31349                           ; BSR set to: 0
 31350                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 31351                           
 31352                           ; BSR set to: 0
 31353  00F370  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 31354  00F372  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 31355  00F374  A4D8               	btfss	status,2,c
 31356  00F376  D005               	goto	l186
 31357                           
 31358                           ; BSR set to: 0
 31359                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 31360  00F378  0E00               	movlw	0
 31361  00F37A  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 31362  00F37C  0E00               	movlw	0
 31363  00F37E  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 31364                           
 31365                           ; BSR set to: 0
 31366  00F380  0012               	return	
 31367  00F382                     l186:
 31368                           
 31369                           ; BSR set to: 0
 31370                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 31371                           
 31372                           ; BSR set to: 0
 31373  00F382  EE20 F002          	lfsr	2,2
 31374  00F386  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 31375  00F388  26D9               	addwf	fsr2l,f,c
 31376  00F38A  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 31377  00F38C  22DA               	addwfc	fsr2h,f,c
 31378  00F38E  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 31379  00F392  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 31380                           
 31381                           ;usb_device.c: 1030: handle->CNT = len;
 31382  00F396  EE20 F001          	lfsr	2,1
 31383  00F39A  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 31384  00F39C  26D9               	addwf	fsr2l,f,c
 31385  00F39E  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 31386  00F3A0  22DA               	addwfc	fsr2h,f,c
 31387  00F3A2  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 31388                           
 31389                           ; BSR set to: 0
 31390                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 31391  00F3A6  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 31392  00F3AA  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 31393  00F3AE  0E40               	movlw	64
 31394  00F3B0  16DF               	andwf	indf2,f,c
 31395                           
 31396                           ; BSR set to: 0
 31397                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 31398  00F3B2  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 31399  00F3B6  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 31400  00F3BA  0E00               	movlw	0
 31401  00F3BC  86DB               	bsf	plusw2,3,c
 31402                           
 31403                           ; BSR set to: 0
 31404                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 31405  00F3BE  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 31406  00F3C2  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 31407  00F3C6  0E00               	movlw	0
 31408  00F3C8  8EDB               	bsf	plusw2,7,c
 31409                           
 31410                           ; BSR set to: 0
 31411                           ;usb_device.c: 1036: if(dir != 0)
 31412  00F3CA  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 31413  00F3CC  B4D8               	btfsc	status,2,c
 31414  00F3CE  D018               	goto	l188
 31415                           
 31416                           ; BSR set to: 0
 31417                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 31418  00F3D0  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 31419  00F3D2  0D02               	mullw	2
 31420  00F3D4  0E10               	movlw	low _pBDTEntryIn
 31421  00F3D6  24F3               	addwf	prodl,w,c
 31422  00F3D8  6ED9               	movwf	fsr2l,c
 31423  00F3DA  0E00               	movlw	high _pBDTEntryIn
 31424  00F3DC  20F4               	addwfc	prodh,w,c
 31425  00F3DE  6EDA               	movwf	fsr2h,c
 31426  00F3E0  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 31427  00F3E4  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 31428  00F3E8  0E04               	movlw	4
 31429  00F3EA  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 31430  00F3EC  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 31431  00F3EE  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 31432  00F3F0  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 31433  00F3F2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 31434  00F3F4  0D02               	mullw	2
 31435  00F3F6  0E10               	movlw	low _pBDTEntryIn
 31436  00F3F8  24F3               	addwf	prodl,w,c
 31437  00F3FA  6ED9               	movwf	fsr2l,c
 31438  00F3FC  0E00               	movlw	high _pBDTEntryIn
 31439  00F3FE  D017               	goto	L55
 31440  00F400                     l188:
 31441                           
 31442                           ; BSR set to: 0
 31443                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 31444                           
 31445                           ; BSR set to: 0
 31446  00F400  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 31447  00F402  0D02               	mullw	2
 31448  00F404  0E45               	movlw	low _pBDTEntryOut
 31449  00F406  24F3               	addwf	prodl,w,c
 31450  00F408  6ED9               	movwf	fsr2l,c
 31451  00F40A  0E01               	movlw	high _pBDTEntryOut
 31452  00F40C  20F4               	addwfc	prodh,w,c
 31453  00F40E  6EDA               	movwf	fsr2h,c
 31454  00F410  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 31455  00F414  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 31456  00F418  0E04               	movlw	4
 31457  00F41A  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 31458  00F41C  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 31459  00F41E  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 31460  00F420  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 31461  00F422  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 31462  00F424  0D02               	mullw	2
 31463  00F426  0E45               	movlw	low _pBDTEntryOut
 31464  00F428  24F3               	addwf	prodl,w,c
 31465  00F42A  6ED9               	movwf	fsr2l,c
 31466  00F42C  0E01               	movlw	high _pBDTEntryOut
 31467  00F42E                     L55:
 31468  00F42E  20F4               	addwfc	prodh,w,c
 31469  00F430  6EDA               	movwf	fsr2h,c
 31470  00F432  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 31471  00F436  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 31472                           
 31473                           ; BSR set to: 0
 31474                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 31475                           
 31476                           ; BSR set to: 0
 31477  00F43A  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 31478  00F43E  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 31479  00F442  0012               	return	
 31480  00F444                     __end_of_USBTransferOnePacket:
 31481                           	opt stack 0
 31482                           tosu	equ	0xFFF
 31483                           tosh	equ	0xFFE
 31484                           tosl	equ	0xFFD
 31485                           pclath	equ	0xFFA
 31486                           tblptru	equ	0xFF8
 31487                           tblptrh	equ	0xFF7
 31488                           tblptrl	equ	0xFF6
 31489                           tablat	equ	0xFF5
 31490                           prodh	equ	0xFF4
 31491                           prodl	equ	0xFF3
 31492                           intcon	equ	0xFF2
 31493                           indf0	equ	0xFEF
 31494                           postinc0	equ	0xFEE
 31495                           fsr0h	equ	0xFEA
 31496                           fsr0l	equ	0xFE9
 31497                           wreg	equ	0xFE8
 31498                           indf1	equ	0xFE7
 31499                           postdec1	equ	0xFE5
 31500                           plusw1	equ	0xFE3
 31501                           fsr1h	equ	0xFE2
 31502                           fsr1l	equ	0xFE1
 31503                           indf2	equ	0xFDF
 31504                           postinc2	equ	0xFDE
 31505                           postdec2	equ	0xFDD
 31506                           plusw2	equ	0xFDB
 31507                           fsr2h	equ	0xFDA
 31508                           fsr2l	equ	0xFD9
 31509                           status	equ	0xFD8
 31510                           
 31511 ;; *************** function _SYS_InterruptHigh *****************
 31512 ;; Defined at:
 31513 ;;		line 162 in file "system.c"
 31514 ;; Parameters:    Size  Location     Type
 31515 ;;		None
 31516 ;; Auto vars:     Size  Location     Type
 31517 ;;		None
 31518 ;; Return value:  Size  Location     Type
 31519 ;;                  1    wreg      void 
 31520 ;; Registers used:
 31521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31522 ;; Tracked objects:
 31523 ;;		On entry : 0/0
 31524 ;;		On exit  : 0/0
 31525 ;;		Unchanged: 0/0
 31526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31529 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31530 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31531 ;;Total ram usage:       14 bytes
 31532 ;; Hardware stack levels used:    1
 31533 ;; Hardware stack levels required when called:    9
 31534 ;; This function calls:
 31535 ;;		_USBDeviceTasks
 31536 ;;		_motor_isr
 31537 ;;		_tmr0_isr
 31538 ;; This function is called by:
 31539 ;;		Interrupt level 2
 31540 ;; This function uses a non-reentrant model
 31541 ;;
 31542                           
 31543                           	psect	intcode
 31544  009008                     __pintcode:
 31545                           	opt stack 0
 31546  009008                     _SYS_InterruptHigh:
 31547                           	opt stack 9
 31548                           
 31549                           ; BSR set to: 0
 31550                           ;incstack = 0
 31551  009008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 31552  00900A  CFFA F04D          	movff	pclath,??_SYS_InterruptHigh
 31553  00900E  CFFB F04E          	movff	pclatu,??_SYS_InterruptHigh+1
 31554  009012  CFE9 F04F          	movff	fsr0l,??_SYS_InterruptHigh+2
 31555  009016  CFEA F050          	movff	fsr0h,??_SYS_InterruptHigh+3
 31556  00901A  CFE1 F051          	movff	fsr1l,??_SYS_InterruptHigh+4
 31557  00901E  CFE2 F052          	movff	fsr1h,??_SYS_InterruptHigh+5
 31558  009022  CFD9 F053          	movff	fsr2l,??_SYS_InterruptHigh+6
 31559  009026  CFDA F054          	movff	fsr2h,??_SYS_InterruptHigh+7
 31560  00902A  CFF3 F055          	movff	prodl,??_SYS_InterruptHigh+8
 31561  00902E  CFF4 F056          	movff	prodh,??_SYS_InterruptHigh+9
 31562  009032  CFF6 F057          	movff	tblptrl,??_SYS_InterruptHigh+10
 31563  009036  CFF7 F058          	movff	tblptrh,??_SYS_InterruptHigh+11
 31564  00903A  CFF8 F059          	movff	tblptru,??_SYS_InterruptHigh+12
 31565  00903E  CFF5 F05A          	movff	tablat,??_SYS_InterruptHigh+13
 31566                           
 31567                           ;system.c: 165: USBDeviceTasks();
 31568  009042  EC2C  F072         	call	_USBDeviceTasks	;wreg free
 31569                           
 31570                           ;system.c: 169: if(PIR1bits.TMR2IF)
 31571  009046  B29E               	btfsc	3998,1,c	;volatile
 31572                           
 31573                           ;system.c: 170: {;system.c: 171: motor_isr();
 31574  009048  EC2F  F05F         	call	_motor_isr	;wreg free
 31575                           
 31576                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 31577  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 31578                           
 31579                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 31580  00904E  ECD9  F08E         	call	_tmr0_isr	;wreg free
 31581  009052  C05A  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 31582  009056  C059  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 31583  00905A  C058  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 31584  00905E  C057  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 31585  009062  C056  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 31586  009066  C055  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 31587  00906A  C054  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 31588  00906E  C053  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 31589  009072  C052  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 31590  009076  C051  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 31591  00907A  C050  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 31592  00907E  C04F  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 31593  009082  C04E  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 31594  009086  C04D  FFFA         	movff	??_SYS_InterruptHigh,pclath
 31595  00908A  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 31596  00908C  0011               	retfie		f
 31597  00908E                     __end_of_SYS_InterruptHigh:
 31598                           	opt stack 0
 31599                           tosu	equ	0xFFF
 31600                           tosh	equ	0xFFE
 31601                           tosl	equ	0xFFD
 31602                           pclatu	equ	0xFFB
 31603                           pclath	equ	0xFFA
 31604                           tblptru	equ	0xFF8
 31605                           tblptrh	equ	0xFF7
 31606                           tblptrl	equ	0xFF6
 31607                           tablat	equ	0xFF5
 31608                           prodh	equ	0xFF4
 31609                           prodl	equ	0xFF3
 31610                           intcon	equ	0xFF2
 31611                           indf0	equ	0xFEF
 31612                           postinc0	equ	0xFEE
 31613                           fsr0h	equ	0xFEA
 31614                           fsr0l	equ	0xFE9
 31615                           wreg	equ	0xFE8
 31616                           indf1	equ	0xFE7
 31617                           postdec1	equ	0xFE5
 31618                           plusw1	equ	0xFE3
 31619                           fsr1h	equ	0xFE2
 31620                           fsr1l	equ	0xFE1
 31621                           indf2	equ	0xFDF
 31622                           postinc2	equ	0xFDE
 31623                           postdec2	equ	0xFDD
 31624                           plusw2	equ	0xFDB
 31625                           fsr2h	equ	0xFDA
 31626                           fsr2l	equ	0xFD9
 31627                           status	equ	0xFD8
 31628                           
 31629 ;; *************** function _tmr0_isr *****************
 31630 ;; Defined at:
 31631 ;;		line 20 in file "os.c"
 31632 ;; Parameters:    Size  Location     Type
 31633 ;;		None
 31634 ;; Auto vars:     Size  Location     Type
 31635 ;;		None
 31636 ;; Return value:  Size  Location     Type
 31637 ;;                  1    wreg      void 
 31638 ;; Registers used:
 31639 ;;		wreg, status,2, status,0, cstack
 31640 ;; Tracked objects:
 31641 ;;		On entry : 0/0
 31642 ;;		On exit  : 0/0
 31643 ;;		Unchanged: 0/0
 31644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31649 ;;Total ram usage:        0 bytes
 31650 ;; Hardware stack levels used:    1
 31651 ;; Hardware stack levels required when called:    1
 31652 ;; This function calls:
 31653 ;;		_encoder_run
 31654 ;; This function is called by:
 31655 ;;		_SYS_InterruptHigh
 31656 ;; This function uses a non-reentrant model
 31657 ;;
 31658                           
 31659                           	psect	text117
 31660  011DB2                     __ptext117:
 31661                           	opt stack 0
 31662  011DB2                     _tmr0_isr:
 31663                           	opt stack 16
 31664                           
 31665                           ;os.c: 23: if(INTCONbits.T0IF)
 31666                           
 31667                           ;incstack = 0
 31668  011DB2  A4F2               	btfss	intcon,2,c	;volatile
 31669  011DB4  0012               	return	
 31670                           
 31671                           ;os.c: 24: {;os.c: 26: TMR0H = 0xFA;
 31672  011DB6  0EFA               	movlw	250
 31673  011DB8  6ED7               	movwf	4055,c	;volatile
 31674                           
 31675                           ;os.c: 27: TMR0L = 0x24;
 31676  011DBA  0E24               	movlw	36
 31677  011DBC  6ED6               	movwf	4054,c	;volatile
 31678                           
 31679                           ;os.c: 30: INTCONbits.T0IF = 0;
 31680  011DBE  94F2               	bcf	intcon,2,c	;volatile
 31681                           
 31682                           ;os.c: 33: encoder_run();
 31683  011DC0  ECFE  F076         	call	_encoder_run	;wreg free
 31684                           
 31685                           ;os.c: 36: ++os.subTimeSlot;
 31686  011DC4  0100               	movlb	0	; () banked
 31687  011DC6  2BCA               	incf	_os& (0+255),f,b	;volatile
 31688                           
 31689                           ; BSR set to: 0
 31690                           ;os.c: 37: if(os.subTimeSlot>=10)
 31691  011DC8  0E09               	movlw	9
 31692  011DCA  65CA               	cpfsgt	_os& (0+255),b	;volatile
 31693  011DCC  0012               	return	
 31694                           
 31695                           ; BSR set to: 0
 31696                           ;os.c: 38: {;os.c: 39: if(os.done)
 31697  011DCE  51CC               	movf	(_os+2)& (0+255),w,b	;volatile
 31698  011DD0  B4D8               	btfsc	status,2,c
 31699  011DD2  0012               	return	
 31700                           
 31701                           ; BSR set to: 0
 31702                           ;os.c: 40: {;os.c: 41: ++os.timeSlot;
 31703  011DD4  2BCB               	incf	(_os+1)& (0+255),f,b	;volatile
 31704                           
 31705                           ; BSR set to: 0
 31706                           ;os.c: 42: if(os.timeSlot==16)
 31707  011DD6  0E10               	movlw	16
 31708  011DD8  19CB               	xorwf	(_os+1)& (0+255),w,b	;volatile
 31709  011DDA  A4D8               	btfss	status,2,c
 31710  011DDC  D002               	goto	i2l1047
 31711                           
 31712                           ; BSR set to: 0
 31713                           ;os.c: 43: {;os.c: 44: os.timeSlot = 0;
 31714  011DDE  0E00               	movlw	0
 31715  011DE0  6FCB               	movwf	(_os+1)& (0+255),b	;volatile
 31716  011DE2                     i2l1047:
 31717                           
 31718                           ; BSR set to: 0
 31719                           ;os.c: 45: };os.c: 46: os.subTimeSlot = 0;
 31720  011DE2  0E00               	movlw	0
 31721  011DE4  6FCA               	movwf	_os& (0+255),b	;volatile
 31722                           
 31723                           ;os.c: 47: os.done = 0;
 31724  011DE6  0E00               	movlw	0
 31725  011DE8  6FCC               	movwf	(_os+2)& (0+255),b	;volatile
 31726                           
 31727                           ; BSR set to: 0
 31728                           
 31729                           ; BSR set to: 0
 31730  011DEA  0012               	return	
 31731  011DEC                     __end_of_tmr0_isr:
 31732                           	opt stack 0
 31733                           tosu	equ	0xFFF
 31734                           tosh	equ	0xFFE
 31735                           tosl	equ	0xFFD
 31736                           pclatu	equ	0xFFB
 31737                           pclath	equ	0xFFA
 31738                           tblptru	equ	0xFF8
 31739                           tblptrh	equ	0xFF7
 31740                           tblptrl	equ	0xFF6
 31741                           tablat	equ	0xFF5
 31742                           prodh	equ	0xFF4
 31743                           prodl	equ	0xFF3
 31744                           intcon	equ	0xFF2
 31745                           indf0	equ	0xFEF
 31746                           postinc0	equ	0xFEE
 31747                           fsr0h	equ	0xFEA
 31748                           fsr0l	equ	0xFE9
 31749                           wreg	equ	0xFE8
 31750                           indf1	equ	0xFE7
 31751                           postdec1	equ	0xFE5
 31752                           plusw1	equ	0xFE3
 31753                           fsr1h	equ	0xFE2
 31754                           fsr1l	equ	0xFE1
 31755                           indf2	equ	0xFDF
 31756                           postinc2	equ	0xFDE
 31757                           postdec2	equ	0xFDD
 31758                           plusw2	equ	0xFDB
 31759                           fsr2h	equ	0xFDA
 31760                           fsr2l	equ	0xFD9
 31761                           status	equ	0xFD8
 31762                           
 31763 ;; *************** function _encoder_run *****************
 31764 ;; Defined at:
 31765 ;;		line 25 in file "encoder.c"
 31766 ;; Parameters:    Size  Location     Type
 31767 ;;		None
 31768 ;; Auto vars:     Size  Location     Type
 31769 ;;		None
 31770 ;; Return value:  Size  Location     Type
 31771 ;;                  1    wreg      void 
 31772 ;; Registers used:
 31773 ;;		wreg, status,2, status,0
 31774 ;; Tracked objects:
 31775 ;;		On entry : 0/0
 31776 ;;		On exit  : 0/0
 31777 ;;		Unchanged: 0/0
 31778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31783 ;;Total ram usage:        0 bytes
 31784 ;; Hardware stack levels used:    1
 31785 ;; This function calls:
 31786 ;;		Nothing
 31787 ;; This function is called by:
 31788 ;;		_tmr0_isr
 31789 ;; This function uses a non-reentrant model
 31790 ;;
 31791                           
 31792                           	psect	text118
 31793  00EDFC                     __ptext118:
 31794                           	opt stack 0
 31795  00EDFC                     _encoder_run:
 31796                           	opt stack 16
 31797                           
 31798                           ;encoder.c: 27: if(enc1 != (PORTE&0b00000111))
 31799                           
 31800                           ;incstack = 0
 31801  00EDFC  5084               	movf	3972,w,c	;volatile
 31802  00EDFE  0B07               	andlw	7
 31803  00EE00  181F               	xorwf	_enc1,w,c
 31804  00EE02  B4D8               	btfsc	status,2,c
 31805  00EE04  D03A               	goto	i2l2421
 31806                           
 31807                           ;encoder.c: 28: {;encoder.c: 30: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b00000001
      +                          )))
 31808  00EE06  B084               	btfsc	3972,0,c	;volatile
 31809  00EE08  A484               	btfss	3972,2,c	;volatile
 31810  00EE0A  D00F               	goto	i2l2424
 31811  00EE0C  B01F               	btfsc	_enc1,0,c
 31812  00EE0E  D00D               	goto	i2l2424
 31813                           
 31814                           ;encoder.c: 31: {;encoder.c: 32: if(os.encoder1Count<127)
 31815  00EE10  0E7F               	movlw	127
 31816  00EE12  0100               	movlb	0	; () banked
 31817  00EE14  19CD               	xorwf	(_os+3)& (0+255),w,b	;volatile
 31818  00EE16  B4D8               	btfsc	status,2,c
 31819  00EE18  D008               	goto	i2l2424
 31820                           
 31821                           ; BSR set to: 0
 31822                           ;encoder.c: 33: {;encoder.c: 34: ++os.encoder1Count;
 31823  00EE1A  2BCD               	incf	(_os+3)& (0+255),f,b	;volatile
 31824                           
 31825                           ; BSR set to: 0
 31826                           ;encoder.c: 35: if(config.beep_duration)
 31827  00EE1C  0101               	movlb	1	; () banked
 31828  00EE1E  5132               	movf	(_config+19)& (0+255),w,b
 31829  00EE20  B4D8               	btfsc	status,2,c
 31830  00EE22  D003               	goto	i2l2424
 31831                           
 31832                           ; BSR set to: 1
 31833                           ;encoder.c: 36: {;encoder.c: 37: LATCbits.LC7 = 1;
 31834  00EE24  8E8B               	bsf	3979,7,c	;volatile
 31835                           
 31836                           ;encoder.c: 38: os.beep_count = config.beep_duration;
 31837  00EE26  C132  F0F0         	movff	_config+19,_os+38	;volatile
 31838  00EE2A                     i2l2424:
 31839                           
 31840                           ;encoder.c: 39: };encoder.c: 40: };encoder.c: 41: };encoder.c: 43: if(PORTEbits.RE2 && P
      +                          ORTEbits.RE0 && (!(enc1&0b00000100)))
 31841                           
 31842                           ; BSR set to: 1
 31843                           
 31844                           ; BSR set to: 1
 31845  00EE2A  B484               	btfsc	3972,2,c	;volatile
 31846  00EE2C  A084               	btfss	3972,0,c	;volatile
 31847  00EE2E  D010               	goto	i2l2427
 31848  00EE30  B41F               	btfsc	_enc1,2,c
 31849  00EE32  D00E               	goto	i2l2427
 31850                           
 31851                           ;encoder.c: 44: {;encoder.c: 45: if(os.encoder1Count>-128)
 31852  00EE34  0100               	movlb	0	; () banked
 31853  00EE36  51CD               	movf	(_os+3)& (0+255),w,b	;volatile
 31854  00EE38  0A80               	xorlw	128
 31855  00EE3A  0FFF               	addlw	255
 31856  00EE3C  A0D8               	btfss	status,0,c
 31857  00EE3E  D008               	goto	i2l2427
 31858                           
 31859                           ; BSR set to: 0
 31860                           ;encoder.c: 46: {;encoder.c: 47: --os.encoder1Count;
 31861  00EE40  07CD               	decf	(_os+3)& (0+255),f,b	;volatile
 31862                           
 31863                           ; BSR set to: 0
 31864                           ;encoder.c: 48: if(config.beep_duration)
 31865  00EE42  0101               	movlb	1	; () banked
 31866  00EE44  5132               	movf	(_config+19)& (0+255),w,b
 31867  00EE46  B4D8               	btfsc	status,2,c
 31868  00EE48  D003               	goto	i2l2427
 31869                           
 31870                           ; BSR set to: 1
 31871                           ;encoder.c: 49: {;encoder.c: 50: LATCbits.LC7 = 1;
 31872  00EE4A  8E8B               	bsf	3979,7,c	;volatile
 31873                           
 31874                           ;encoder.c: 51: os.beep_count = config.beep_duration;
 31875  00EE4C  C132  F0F0         	movff	_config+19,_os+38	;volatile
 31876  00EE50                     i2l2427:
 31877                           
 31878                           ;encoder.c: 52: };encoder.c: 53: };encoder.c: 54: };encoder.c: 56: if(PORTEbits.RE1 && (
      +                          !(enc1&0b00000010)))
 31879                           
 31880                           ; BSR set to: 1
 31881                           
 31882                           ; BSR set to: 1
 31883  00EE50  B284               	btfsc	3972,1,c	;volatile
 31884  00EE52  B21F               	btfsc	_enc1,1,c
 31885  00EE54  D00A               	goto	i2l2429
 31886                           
 31887                           ;encoder.c: 57: {;encoder.c: 58: os.button1 = 1;
 31888  00EE56  0E01               	movlw	1
 31889  00EE58  0100               	movlb	0	; () banked
 31890  00EE5A  6FCE               	movwf	(_os+4)& (0+255),b	;volatile
 31891                           
 31892                           ;encoder.c: 59: if(config.beep_duration)
 31893  00EE5C  0101               	movlb	1	; () banked
 31894  00EE5E  5132               	movf	(_config+19)& (0+255),w,b
 31895  00EE60  B4D8               	btfsc	status,2,c
 31896  00EE62  D003               	goto	i2l2429
 31897                           
 31898                           ; BSR set to: 1
 31899                           ;encoder.c: 60: {;encoder.c: 61: LATCbits.LC7 = 1;
 31900  00EE64  8E8B               	bsf	3979,7,c	;volatile
 31901                           
 31902                           ;encoder.c: 62: os.beep_count = config.beep_duration;
 31903  00EE66  C132  F0F0         	movff	_config+19,_os+38	;volatile
 31904  00EE6A                     i2l2429:
 31905                           
 31906                           ;encoder.c: 63: };encoder.c: 64: };encoder.c: 66: if((!PORTEbits.RE1) && (enc1&0b0000001
      +                          0))
 31907                           
 31908                           ; BSR set to: 1
 31909  00EE6A  A284               	btfss	3972,1,c	;volatile
 31910  00EE6C  A21F               	btfss	_enc1,1,c
 31911  00EE6E  D002               	goto	i2l2430
 31912                           
 31913                           ;encoder.c: 67: {;encoder.c: 68: os.button1 = -1;
 31914  00EE70  0100               	movlb	0	; () banked
 31915  00EE72  69CE               	setf	(_os+4)& (0+255),b	;volatile
 31916  00EE74                     i2l2430:
 31917                           
 31918                           ;encoder.c: 69: };encoder.c: 71: enc1 = PORTE & 0b00000111;
 31919                           
 31920                           ; BSR set to: 0
 31921  00EE74  5084               	movf	3972,w,c	;volatile
 31922  00EE76  0B07               	andlw	7
 31923  00EE78  6E1F               	movwf	_enc1,c
 31924  00EE7A                     i2l2421:
 31925                           
 31926                           ;encoder.c: 72: };encoder.c: 74: if(enc2 != (PORTA&0b00000111))
 31927  00EE7A  5080               	movf	3968,w,c	;volatile
 31928  00EE7C  0B07               	andlw	7
 31929  00EE7E  181E               	xorwf	_enc2,w,c
 31930  00EE80  B4D8               	btfsc	status,2,c
 31931  00EE82  D03A               	goto	i2l2431
 31932                           
 31933                           ;encoder.c: 75: {;encoder.c: 77: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b00000100
      +                          )))
 31934  00EE84  B480               	btfsc	3968,2,c	;volatile
 31935  00EE86  A080               	btfss	3968,0,c	;volatile
 31936  00EE88  D00F               	goto	i2l2434
 31937  00EE8A  B41E               	btfsc	_enc2,2,c
 31938  00EE8C  D00D               	goto	i2l2434
 31939                           
 31940                           ;encoder.c: 78: {;encoder.c: 79: if(os.encoder2Count<127)
 31941  00EE8E  0E7F               	movlw	127
 31942  00EE90  0100               	movlb	0	; () banked
 31943  00EE92  19CF               	xorwf	(_os+5)& (0+255),w,b	;volatile
 31944  00EE94  B4D8               	btfsc	status,2,c
 31945  00EE96  D008               	goto	i2l2434
 31946                           
 31947                           ; BSR set to: 0
 31948                           ;encoder.c: 80: {;encoder.c: 81: ++os.encoder2Count;
 31949  00EE98  2BCF               	incf	(_os+5)& (0+255),f,b	;volatile
 31950                           
 31951                           ; BSR set to: 0
 31952                           ;encoder.c: 82: if(config.beep_duration)
 31953  00EE9A  0101               	movlb	1	; () banked
 31954  00EE9C  5132               	movf	(_config+19)& (0+255),w,b
 31955  00EE9E  B4D8               	btfsc	status,2,c
 31956  00EEA0  D003               	goto	i2l2434
 31957                           
 31958                           ; BSR set to: 1
 31959                           ;encoder.c: 83: {;encoder.c: 84: LATCbits.LC7 = 1;
 31960  00EEA2  8E8B               	bsf	3979,7,c	;volatile
 31961                           
 31962                           ;encoder.c: 85: os.beep_count = config.beep_duration;
 31963  00EEA4  C132  F0F0         	movff	_config+19,_os+38	;volatile
 31964  00EEA8                     i2l2434:
 31965                           
 31966                           ;encoder.c: 86: };encoder.c: 87: };encoder.c: 88: };encoder.c: 90: if(PORTAbits.RA0 && P
      +                          ORTAbits.RA2 && (!(enc2&0b00000001)))
 31967                           
 31968                           ; BSR set to: 1
 31969                           
 31970                           ; BSR set to: 1
 31971  00EEA8  B080               	btfsc	3968,0,c	;volatile
 31972  00EEAA  A480               	btfss	3968,2,c	;volatile
 31973  00EEAC  D010               	goto	i2l2437
 31974  00EEAE  B01E               	btfsc	_enc2,0,c
 31975  00EEB0  D00E               	goto	i2l2437
 31976                           
 31977                           ;encoder.c: 91: {;encoder.c: 92: if(os.encoder2Count>-128)
 31978  00EEB2  0100               	movlb	0	; () banked
 31979  00EEB4  51CF               	movf	(_os+5)& (0+255),w,b	;volatile
 31980  00EEB6  0A80               	xorlw	128
 31981  00EEB8  0FFF               	addlw	255
 31982  00EEBA  A0D8               	btfss	status,0,c
 31983  00EEBC  D008               	goto	i2l2437
 31984                           
 31985                           ; BSR set to: 0
 31986                           ;encoder.c: 93: {;encoder.c: 94: --os.encoder2Count;
 31987  00EEBE  07CF               	decf	(_os+5)& (0+255),f,b	;volatile
 31988                           
 31989                           ; BSR set to: 0
 31990                           ;encoder.c: 95: if(config.beep_duration)
 31991  00EEC0  0101               	movlb	1	; () banked
 31992  00EEC2  5132               	movf	(_config+19)& (0+255),w,b
 31993  00EEC4  B4D8               	btfsc	status,2,c
 31994  00EEC6  D003               	goto	i2l2437
 31995                           
 31996                           ; BSR set to: 1
 31997                           ;encoder.c: 96: {;encoder.c: 97: LATCbits.LC7 = 1;
 31998  00EEC8  8E8B               	bsf	3979,7,c	;volatile
 31999                           
 32000                           ;encoder.c: 98: os.beep_count = config.beep_duration;
 32001  00EECA  C132  F0F0         	movff	_config+19,_os+38	;volatile
 32002  00EECE                     i2l2437:
 32003                           
 32004                           ;encoder.c: 99: };encoder.c: 100: };encoder.c: 101: };encoder.c: 103: if(PORTAbits.RA1 &
      +                          & (!(enc2&0b00000010)))
 32005                           
 32006                           ; BSR set to: 1
 32007                           
 32008                           ; BSR set to: 1
 32009  00EECE  B280               	btfsc	3968,1,c	;volatile
 32010  00EED0  B21E               	btfsc	_enc2,1,c
 32011  00EED2  D00A               	goto	i2l2439
 32012                           
 32013                           ;encoder.c: 104: {;encoder.c: 105: os.button2 = 1;
 32014  00EED4  0E01               	movlw	1
 32015  00EED6  0100               	movlb	0	; () banked
 32016  00EED8  6FD0               	movwf	(_os+6)& (0+255),b	;volatile
 32017                           
 32018                           ;encoder.c: 106: if(config.beep_duration)
 32019  00EEDA  0101               	movlb	1	; () banked
 32020  00EEDC  5132               	movf	(_config+19)& (0+255),w,b
 32021  00EEDE  B4D8               	btfsc	status,2,c
 32022  00EEE0  D003               	goto	i2l2439
 32023                           
 32024                           ; BSR set to: 1
 32025                           ;encoder.c: 107: {;encoder.c: 108: LATCbits.LC7 = 1;
 32026  00EEE2  8E8B               	bsf	3979,7,c	;volatile
 32027                           
 32028                           ;encoder.c: 109: os.beep_count = config.beep_duration;
 32029  00EEE4  C132  F0F0         	movff	_config+19,_os+38	;volatile
 32030  00EEE8                     i2l2439:
 32031                           
 32032                           ;encoder.c: 110: };encoder.c: 111: };encoder.c: 113: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 32033                           
 32034                           ; BSR set to: 1
 32035  00EEE8  A280               	btfss	3968,1,c	;volatile
 32036  00EEEA  A21E               	btfss	_enc2,1,c
 32037  00EEEC  D002               	goto	i2l2440
 32038                           
 32039                           ;encoder.c: 114: {;encoder.c: 115: os.button2 = -1;
 32040  00EEEE  0100               	movlb	0	; () banked
 32041  00EEF0  69D0               	setf	(_os+6)& (0+255),b	;volatile
 32042  00EEF2                     i2l2440:
 32043                           
 32044                           ;encoder.c: 116: };encoder.c: 118: enc2 = PORTA & 0b00000111;
 32045                           
 32046                           ; BSR set to: 0
 32047  00EEF2  5080               	movf	3968,w,c	;volatile
 32048  00EEF4  0B07               	andlw	7
 32049  00EEF6  6E1E               	movwf	_enc2,c
 32050  00EEF8                     i2l2431:
 32051                           
 32052                           ;encoder.c: 119: };encoder.c: 122: if(os.beep_count)
 32053  00EEF8  0100               	movlb	0	; () banked
 32054  00EEFA  51F0               	movf	(_os+38)& (0+255),w,b	;volatile
 32055  00EEFC  B4D8               	btfsc	status,2,c
 32056  00EEFE  0012               	return	
 32057                           
 32058                           ; BSR set to: 0
 32059                           ;encoder.c: 123: {;encoder.c: 124: --os.beep_count;
 32060  00EF00  07F0               	decf	(_os+38)& (0+255),f,b	;volatile
 32061                           
 32062                           ; BSR set to: 0
 32063                           ;encoder.c: 125: if(!os.beep_count)
 32064  00EF02  51F0               	movf	(_os+38)& (0+255),w,b	;volatile
 32065  00EF04  A4D8               	btfss	status,2,c
 32066  00EF06  0012               	return	
 32067                           
 32068                           ; BSR set to: 0
 32069                           ;encoder.c: 126: {;encoder.c: 127: LATCbits.LC7 = 0;
 32070  00EF08  9E8B               	bcf	3979,7,c	;volatile
 32071                           
 32072                           ; BSR set to: 0
 32073  00EF0A  0012               	return	
 32074  00EF0C                     __end_of_encoder_run:
 32075                           	opt stack 0
 32076                           tosu	equ	0xFFF
 32077                           tosh	equ	0xFFE
 32078                           tosl	equ	0xFFD
 32079                           pclatu	equ	0xFFB
 32080                           pclath	equ	0xFFA
 32081                           tblptru	equ	0xFF8
 32082                           tblptrh	equ	0xFF7
 32083                           tblptrl	equ	0xFF6
 32084                           tablat	equ	0xFF5
 32085                           prodh	equ	0xFF4
 32086                           prodl	equ	0xFF3
 32087                           intcon	equ	0xFF2
 32088                           indf0	equ	0xFEF
 32089                           postinc0	equ	0xFEE
 32090                           fsr0h	equ	0xFEA
 32091                           fsr0l	equ	0xFE9
 32092                           wreg	equ	0xFE8
 32093                           indf1	equ	0xFE7
 32094                           postdec1	equ	0xFE5
 32095                           plusw1	equ	0xFE3
 32096                           fsr1h	equ	0xFE2
 32097                           fsr1l	equ	0xFE1
 32098                           indf2	equ	0xFDF
 32099                           postinc2	equ	0xFDE
 32100                           postdec2	equ	0xFDD
 32101                           plusw2	equ	0xFDB
 32102                           fsr2h	equ	0xFDA
 32103                           fsr2l	equ	0xFD9
 32104                           status	equ	0xFD8
 32105                           
 32106 ;; *************** function _motor_isr *****************
 32107 ;; Defined at:
 32108 ;;		line 261 in file "motor.c"
 32109 ;; Parameters:    Size  Location     Type
 32110 ;;		None
 32111 ;; Auto vars:     Size  Location     Type
 32112 ;;  steps_remain    4   20[COMRAM] unsigned long 
 32113 ;;  steps_until_    2   18[COMRAM] unsigned int 
 32114 ;;  steps_until_    2   16[COMRAM] unsigned int 
 32115 ;; Return value:  Size  Location     Type
 32116 ;;                  1    wreg      void 
 32117 ;; Registers used:
 32118 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 32119 ;; Tracked objects:
 32120 ;;		On entry : 0/0
 32121 ;;		On exit  : 0/0
 32122 ;;		Unchanged: 0/0
 32123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32125 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32126 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32127 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32128 ;;Total ram usage:       24 bytes
 32129 ;; Hardware stack levels used:    1
 32130 ;; This function calls:
 32131 ;;		Nothing
 32132 ;; This function is called by:
 32133 ;;		_SYS_InterruptHigh
 32134 ;; This function uses a non-reentrant model
 32135 ;;
 32136                           
 32137                           	psect	text119
 32138  00BE5E                     __ptext119:
 32139                           	opt stack 0
 32140  00BE5E                     _motor_isr:
 32141                           	opt stack 17
 32142                           
 32143                           ;motor.c: 263: uint32_t steps_remaining;;motor.c: 264: uint16_t steps_until_standstill;;
      +                          motor.c: 265: uint16_t steps_until_standstill_if_accelerate;;motor.c: 268: PIR1bits.TMR2
      +                          IF = 0;
 32144                           
 32145                           ; BSR set to: 0
 32146                           ;incstack = 0
 32147  00BE5E  929E               	bcf	3998,1,c	;volatile
 32148                           
 32149                           ;motor.c: 270: if(motor_mode==MOTOR_MODE_MANUAL)
 32150  00BE60  5020               	movf	_motor_mode,w,c
 32151  00BE62  A4D8               	btfss	status,2,c
 32152  00BE64  D019               	goto	i2l2358
 32153                           
 32154                           ;motor.c: 271: {;motor.c: 273: if(LATBbits.LB1)
 32155  00BE66  A28A               	btfss	3978,1,c	;volatile
 32156  00BE68  D016               	goto	i2l2355
 32157                           
 32158                           ;motor.c: 274: {;motor.c: 276: LATBbits.LB1 = 0;
 32159  00BE6A  928A               	bcf	3978,1,c	;volatile
 32160                           
 32161                           ;motor.c: 279: if(motor_current_stepcount==motor_final_stepcount)
 32162  00BE6C  0101               	movlb	1	; () banked
 32163  00BE6E  514F               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 32164  00BE70  1816               	xorwf	_motor_current_stepcount,w,c	;volatile
 32165  00BE72  E109               	bnz	i2u1491_41
 32166  00BE74  5150               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 32167  00BE76  1817               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 32168  00BE78  E106               	bnz	i2u1491_41
 32169  00BE7A  5151               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 32170  00BE7C  1818               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 32171  00BE7E  E103               	bnz	i2u1491_41
 32172  00BE80  5152               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 32173  00BE82  1819               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 32174  00BE84  A4D8               	btfss	status,2,c
 32175  00BE86                     i2u1491_41:
 32176  00BE86  0012               	return	
 32177                           
 32178                           ; BSR set to: 1
 32179                           ;motor.c: 280: {;motor.c: 283: T2CONbits.TMR2ON = 0;
 32180  00BE88  94CA               	bcf	4042,2,c	;volatile
 32181                           
 32182                           ;motor.c: 285: PIR1bits.TMR2IF = 0;
 32183  00BE8A  929E               	bcf	3998,1,c	;volatile
 32184                           
 32185                           ;motor.c: 286: PIE1bits.TMR2IE = 0;
 32186  00BE8C  929D               	bcf	3997,1,c	;volatile
 32187                           
 32188                           ; BSR set to: 1
 32189                           ;motor.c: 287: os.busy = 0;
 32190  00BE8E  0E00               	movlw	0
 32191  00BE90  0100               	movlb	0	; () banked
 32192  00BE92  6FD8               	movwf	(_os+14)& (0+255),b	;volatile
 32193                           
 32194                           ; BSR set to: 0
 32195                           ;motor.c: 288: };motor.c: 291: return;
 32196                           
 32197                           ; BSR set to: 0
 32198  00BE94  0012               	return	
 32199  00BE96                     i2l2355:
 32200                           
 32201                           ;motor.c: 293: else;motor.c: 294: {;motor.c: 296: LATBbits.LB1 = 1;
 32202  00BE96  828A               	bsf	3978,1,c	;volatile
 32203  00BE98                     i2l2358:
 32204                           
 32205                           ;motor.c: 297: };motor.c: 298: };motor.c: 300: ++motor_current_stepcount;
 32206  00BE98  0E01               	movlw	1
 32207  00BE9A  2616               	addwf	_motor_current_stepcount,f,c	;volatile
 32208  00BE9C  0E00               	movlw	0
 32209  00BE9E  2217               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 32210  00BEA0  2218               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 32211  00BEA2  2219               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 32212                           
 32213                           ;motor.c: 303: os.current_position_in_steps += motor_direction;
 32214  00BEA4  0100               	movlb	0	; () banked
 32215  00BEA6  51F9               	movf	_motor_direction& (0+255),w,b
 32216  00BEA8  6E2E               	movwf	??_motor_isr& (0+255),c
 32217  00BEAA  0E00               	movlw	0
 32218  00BEAC  BE2E               	btfsc	??_motor_isr& (0+255),7,c
 32219  00BEAE  0EFF               	movlw	255
 32220  00BEB0  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 32221  00BEB2  6E30               	movwf	(??_motor_isr+2)& (0+255),c
 32222  00BEB4  6E31               	movwf	(??_motor_isr+3)& (0+255),c
 32223  00BEB6  502E               	movf	??_motor_isr,w,c
 32224  00BEB8  27D1               	addwf	(_os+7)& (0+255),f,b	;volatile
 32225  00BEBA  502F               	movf	??_motor_isr+1,w,c
 32226  00BEBC  23D2               	addwfc	(_os+8)& (0+255),f,b	;volatile
 32227  00BEBE  5030               	movf	??_motor_isr+2,w,c
 32228  00BEC0  23D3               	addwfc	(_os+9)& (0+255),f,b	;volatile
 32229  00BEC2  5031               	movf	??_motor_isr+3,w,c
 32230  00BEC4  23D4               	addwfc	(_os+10)& (0+255),f,b	;volatile
 32231                           
 32232                           ;motor.c: 304: if(os.current_position_in_steps==config.full_circle_in_steps)
 32233  00BEC6  0101               	movlb	1	; () banked
 32234  00BEC8  511F               	movf	_config& (0+255),w,b
 32235  00BECA  0100               	movlb	0	; () banked
 32236  00BECC  19D1               	xorwf	(_os+7)& (0+255),w,b	;volatile
 32237  00BECE  E118               	bnz	i2l15430
 32238  00BED0  0101               	movlb	1	; () banked
 32239  00BED2  5120               	movf	(_config+1)& (0+255),w,b
 32240  00BED4  0100               	movlb	0	; () banked
 32241  00BED6  19D2               	xorwf	(_os+8)& (0+255),w,b	;volatile
 32242  00BED8  E113               	bnz	i2l15430
 32243  00BEDA  0101               	movlb	1	; () banked
 32244  00BEDC  5121               	movf	(_config+2)& (0+255),w,b
 32245  00BEDE  0100               	movlb	0	; () banked
 32246  00BEE0  19D3               	xorwf	(_os+9)& (0+255),w,b	;volatile
 32247  00BEE2  E10E               	bnz	i2l15430
 32248  00BEE4  0101               	movlb	1	; () banked
 32249  00BEE6  5122               	movf	(_config+3)& (0+255),w,b
 32250  00BEE8  0100               	movlb	0	; () banked
 32251  00BEEA  19D4               	xorwf	(_os+10)& (0+255),w,b	;volatile
 32252  00BEEC  A4D8               	btfss	status,2,c
 32253  00BEEE  D008               	goto	i2l2359
 32254                           
 32255                           ; BSR set to: 0
 32256                           ;motor.c: 305: os.current_position_in_steps = 0;
 32257  00BEF0  0E00               	movlw	0
 32258  00BEF2  6FD1               	movwf	(_os+7)& (0+255),b	;volatile
 32259  00BEF4  0E00               	movlw	0
 32260  00BEF6  6FD2               	movwf	(_os+8)& (0+255),b	;volatile
 32261  00BEF8  0E00               	movlw	0
 32262  00BEFA  6FD3               	movwf	(_os+9)& (0+255),b	;volatile
 32263  00BEFC  0E00               	movlw	0
 32264  00BEFE  6FD4               	movwf	(_os+10)& (0+255),b	;volatile
 32265  00BF00                     i2l2359:
 32266  00BF00                     i2l15430:
 32267                           
 32268                           ; BSR set to: 0
 32269                           ;motor.c: 306: if(os.current_position_in_steps==0xFFFFFFFF)
 32270  00BF00  29D1               	incf	(_os+7)& (0+255),w,b	;volatile
 32271  00BF02  E11B               	bnz	i2l2360
 32272  00BF04  29D2               	incf	(_os+8)& (0+255),w,b	;volatile
 32273  00BF06  E119               	bnz	i2l2360
 32274  00BF08  29D3               	incf	(_os+9)& (0+255),w,b	;volatile
 32275  00BF0A  E117               	bnz	i2l2360
 32276  00BF0C  29D4               	incf	(_os+10)& (0+255),w,b	;volatile
 32277  00BF0E  A4D8               	btfss	status,2,c
 32278  00BF10  D014               	goto	i2l2360
 32279                           
 32280                           ; BSR set to: 0
 32281                           ;motor.c: 307: os.current_position_in_steps = (config.full_circle_in_steps-1);
 32282  00BF12  0EFF               	movlw	255
 32283  00BF14  0101               	movlb	1	; () banked
 32284  00BF16  251F               	addwf	_config& (0+255),w,b
 32285  00BF18  0100               	movlb	0	; () banked
 32286  00BF1A  6FD1               	movwf	(_os+7)& (0+255),b	;volatile
 32287  00BF1C  0EFF               	movlw	255
 32288  00BF1E  0101               	movlb	1	; () banked
 32289  00BF20  2120               	addwfc	(_config+1)& (0+255),w,b
 32290  00BF22  0100               	movlb	0	; () banked
 32291  00BF24  6FD2               	movwf	(_os+8)& (0+255),b	;volatile
 32292  00BF26  0EFF               	movlw	255
 32293  00BF28  0101               	movlb	1	; () banked
 32294  00BF2A  2121               	addwfc	(_config+2)& (0+255),w,b
 32295  00BF2C  0100               	movlb	0	; () banked
 32296  00BF2E  6FD3               	movwf	(_os+9)& (0+255),b	;volatile
 32297  00BF30  0EFF               	movlw	255
 32298  00BF32  0101               	movlb	1	; () banked
 32299  00BF34  2122               	addwfc	(_config+3)& (0+255),w,b
 32300  00BF36  0100               	movlb	0	; () banked
 32301  00BF38  6FD4               	movwf	(_os+10)& (0+255),b	;volatile
 32302  00BF3A                     i2l2360:
 32303                           
 32304                           ; BSR set to: 0
 32305                           ;motor.c: 310: if(motor_current_stepcount==motor_next_speed_check)
 32306  00BF3A  0101               	movlb	1	; () banked
 32307  00BF3C  514B               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 32308  00BF3E  1816               	xorwf	_motor_current_stepcount,w,c	;volatile
 32309  00BF40  E109               	bnz	i2u1494_41
 32310  00BF42  514C               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 32311  00BF44  1817               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 32312  00BF46  E106               	bnz	i2u1494_41
 32313  00BF48  514D               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 32314  00BF4A  1818               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 32315  00BF4C  E103               	bnz	i2u1494_41
 32316  00BF4E  514E               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 32317  00BF50  1819               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 32318  00BF52  A4D8               	btfss	status,2,c
 32319  00BF54                     i2u1494_41:
 32320  00BF54  D20F               	goto	i2l2373
 32321                           
 32322                           ; BSR set to: 1
 32323                           ;motor.c: 311: {;motor.c: 313: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 32324  00BF56  C016  F02E         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 32325  00BF5A  C017  F02F         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 32326  00BF5E  C018  F030         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 32327  00BF62  C019  F031         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 32328  00BF66  1E2E               	comf	??_motor_isr,f,c
 32329  00BF68  1E2F               	comf	??_motor_isr+1,f,c
 32330  00BF6A  1E30               	comf	??_motor_isr+2,f,c
 32331  00BF6C  1E31               	comf	??_motor_isr+3,f,c
 32332  00BF6E  2A2E               	incf	??_motor_isr,f,c
 32333  00BF70  0E00               	movlw	0
 32334  00BF72  222F               	addwfc	??_motor_isr+1,f,c
 32335  00BF74  2230               	addwfc	??_motor_isr+2,f,c
 32336  00BF76  2231               	addwfc	??_motor_isr+3,f,c
 32337  00BF78  514F               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 32338  00BF7A  242E               	addwf	??_motor_isr,w,c
 32339  00BF7C  6E42               	movwf	motor_isr@steps_remaining,c
 32340  00BF7E  5150               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 32341  00BF80  202F               	addwfc	??_motor_isr+1,w,c
 32342  00BF82  6E43               	movwf	motor_isr@steps_remaining+1,c
 32343  00BF84  5151               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 32344  00BF86  2030               	addwfc	??_motor_isr+2,w,c
 32345  00BF88  6E44               	movwf	motor_isr@steps_remaining+2,c
 32346  00BF8A  5152               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 32347  00BF8C  2031               	addwfc	??_motor_isr+3,w,c
 32348  00BF8E  6E45               	movwf	motor_isr@steps_remaining+3,c
 32349                           
 32350                           ; BSR set to: 1
 32351                           ;motor.c: 314: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 32352  00BF90  90D8               	bcf	status,0,c
 32353  00BF92  0100               	movlb	0	; () banked
 32354  00BF94  35F1               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 32355  00BF96  6EF6               	movwf	tblptrl,c
 32356  00BF98  35F2               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32357  00BF9A  6EF7               	movwf	tblptrh,c
 32358  00BF9C  0E61               	movlw	low _motor_steps_lookup
 32359  00BF9E  26F6               	addwf	tblptrl,f,c
 32360  00BFA0  0E94               	movlw	high _motor_steps_lookup
 32361  00BFA2  22F7               	addwfc	tblptrh,f,c
 32362  00BFA4                     	if	1	;There are 3 active tblptr bytes
 32363  00BFA4  6AF8               	clrf	tblptru,c
 32364  00BFA6  0E00               	movlw	low (__mediumconst shr (0+16))
 32365  00BFA8  22F8               	addwfc	tblptru,f,c
 32366  00BFAA                     	endif
 32367  00BFAA  0009               	tblrd		*+
 32368  00BFAC  CFF5 F03E          	movff	tablat,motor_isr@steps_until_standstill
 32369  00BFB0  000A               	tblrd		*-
 32370  00BFB2  CFF5 F03F          	movff	tablat,motor_isr@steps_until_standstill+1
 32371                           
 32372                           ; BSR set to: 0
 32373                           ;motor.c: 315: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 32374  00BFB6  C0F1  F02E         	movff	_motor_current_speed,??_motor_isr	;volatile
 32375  00BFBA  C0F2  F02F         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 32376  00BFBE  90D8               	bcf	status,0,c
 32377  00BFC0  362E               	rlcf	??_motor_isr,f,c
 32378  00BFC2  362F               	rlcf	??_motor_isr+1,f,c
 32379  00BFC4  0E04               	movlw	4
 32380  00BFC6  262E               	addwf	??_motor_isr,f,c
 32381  00BFC8  0E00               	movlw	0
 32382  00BFCA  222F               	addwfc	??_motor_isr+1,f,c
 32383  00BFCC  0E61               	movlw	low _motor_steps_lookup
 32384  00BFCE  242E               	addwf	??_motor_isr,w,c
 32385  00BFD0  6EF6               	movwf	tblptrl,c
 32386  00BFD2  0E94               	movlw	high _motor_steps_lookup
 32387  00BFD4  202F               	addwfc	??_motor_isr+1,w,c
 32388  00BFD6  6EF7               	movwf	tblptrh,c
 32389  00BFD8                     	if	1	;There are 3 active tblptr bytes
 32390  00BFD8  6AF8               	clrf	tblptru,c
 32391  00BFDA  0E00               	movlw	low (__mediumconst shr (0+16))
 32392  00BFDC  22F8               	addwfc	tblptru,f,c
 32393  00BFDE                     	endif
 32394  00BFDE  0009               	tblrd		*+
 32395  00BFE0  CFF5 F040          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 32396  00BFE4  000A               	tblrd		*-
 32397  00BFE6  CFF5 F041          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 32398                           
 32399                           ;motor.c: 317: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 32400  00BFEA  51F1               	movf	_motor_current_speed& (0+255),w,b	;volatile
 32401  00BFEC  0101               	movlb	1	; () banked
 32402  00BFEE  5D6F               	subwf	_motor_maximum_speed& (0+255),w,b
 32403  00BFF0  0100               	movlb	0	; () banked
 32404  00BFF2  51F2               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32405  00BFF4  0101               	movlb	1	; () banked
 32406  00BFF6  5970               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 32407  00BFF8  A0D8               	btfss	status,0,c
 32408  00BFFA  D010               	goto	i2u1496_40
 32409                           
 32410                           ; BSR set to: 1
 32411  00BFFC  503E               	movf	motor_isr@steps_until_standstill,w,c
 32412  00BFFE  6E2E               	movwf	??_motor_isr& (0+255),c
 32413  00C000  503F               	movf	motor_isr@steps_until_standstill+1,w,c
 32414  00C002  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 32415  00C004  6A30               	clrf	(??_motor_isr+2)& (0+255),c
 32416  00C006  6A31               	clrf	(??_motor_isr+3)& (0+255),c
 32417  00C008  5042               	movf	motor_isr@steps_remaining,w,c
 32418  00C00A  5C2E               	subwf	??_motor_isr,w,c
 32419  00C00C  5043               	movf	motor_isr@steps_remaining+1,w,c
 32420  00C00E  582F               	subwfb	??_motor_isr+1,w,c
 32421  00C010  5044               	movf	motor_isr@steps_remaining+2,w,c
 32422  00C012  5830               	subwfb	??_motor_isr+2,w,c
 32423  00C014  5045               	movf	motor_isr@steps_remaining+3,w,c
 32424  00C016  5831               	subwfb	??_motor_isr+3,w,c
 32425  00C018  A0D8               	btfss	status,0,c
 32426  00C01A  D0E0               	goto	i2l2362
 32427  00C01C                     i2u1496_40:
 32428                           
 32429                           ; BSR set to: 1
 32430                           ;motor.c: 318: {;motor.c: 320: if(motor_current_speed>0)
 32431                           
 32432                           ; BSR set to: 1
 32433  00C01C  0100               	movlb	0	; () banked
 32434  00C01E  51F1               	movf	_motor_current_speed& (0+255),w,b	;volatile
 32435  00C020  11F2               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32436  00C022  B4D8               	btfsc	status,2,c
 32437  00C024  D003               	goto	i2l2365
 32438                           
 32439                           ; BSR set to: 0
 32440                           ;motor.c: 321: {;motor.c: 322: --motor_current_speed;
 32441  00C026  07F1               	decf	_motor_current_speed& (0+255),f,b	;volatile
 32442  00C028  A0D8               	btfss	status,0,c
 32443  00C02A  07F2               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 32444  00C02C                     i2l2365:
 32445                           
 32446                           ; BSR set to: 0
 32447                           ;motor.c: 323: };motor.c: 326: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 32448                           
 32449                           ; BSR set to: 0
 32450  00C02C  0420               	decf	_motor_mode,w,c
 32451  00C02E  A4D8               	btfss	status,2,c
 32452  00C030  D024               	goto	i2l2366
 32453                           
 32454                           ; BSR set to: 0
 32455  00C032  0E2F               	movlw	low _motor_postscaler_lookup
 32456  00C034  25F1               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 32457  00C036  6EF6               	movwf	tblptrl,c
 32458  00C038  0E98               	movlw	high _motor_postscaler_lookup
 32459  00C03A  21F2               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32460  00C03C  6EF7               	movwf	tblptrh,c
 32461  00C03E                     	if	1	;There are 3 active tblptr bytes
 32462  00C03E  6AF8               	clrf	tblptru,c
 32463  00C040  0E00               	movlw	low (__mediumconst shr (0+16))
 32464  00C042  22F8               	addwfc	tblptru,f,c
 32465  00C044                     	endif
 32466  00C044  0008               	tblrd		*
 32467  00C046  50F5               	movf	tablat,w,c
 32468  00C048  0900               	iorlw	0
 32469  00C04A  B4D8               	btfsc	status,2,c
 32470  00C04C  D016               	goto	i2l2366
 32471                           
 32472                           ; BSR set to: 0
 32473                           ;motor.c: 327: {;motor.c: 329: motor_mode = MOTOR_MODE_MANUAL;
 32474  00C04E  0E00               	movlw	0
 32475  00C050  6E20               	movwf	_motor_mode,c
 32476                           
 32477                           ; BSR set to: 0
 32478                           ;motor.c: 332: LATBbits.LB1 = 1;
 32479  00C052  828A               	bsf	3978,1,c	;volatile
 32480                           
 32481                           ;motor.c: 333: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 32482  00C054  0E55               	movlw	85
 32483  00C056  6EA7               	movwf	4007,c	;volsfr
 32484  00C058  0EAA               	movlw	170
 32485  00C05A  6EA7               	movwf	4007,c	;volsfr
 32486                           
 32487                           ; BSR set to: 0
 32488  00C05C  010E               	movlb	14	; () banked
 32489  00C05E  91BF               	bcf	191,0,b	;volatile
 32490                           
 32491                           ;motor.c: 334: RPOR4 = 0;
 32492  00C060  0E00               	movlw	0
 32493  00C062  6FC4               	movwf	196,b	;volatile
 32494                           
 32495                           ;motor.c: 335: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 32496  00C064  0E55               	movlw	85
 32497  00C066  6EA7               	movwf	4007,c	;volsfr
 32498  00C068  0EAA               	movlw	170
 32499  00C06A  6EA7               	movwf	4007,c	;volsfr
 32500                           
 32501                           ; BSR set to: 14
 32502  00C06C  81BF               	bsf	191,0,b	;volatile
 32503                           
 32504                           ;motor.c: 338: TMR2 = 0;
 32505  00C06E  0E00               	movlw	0
 32506  00C070  6ECC               	movwf	4044,c	;volatile
 32507                           
 32508                           ; BSR set to: 14
 32509                           ;motor.c: 341: CCP1CONbits.CCP1M = 0b0000;
 32510  00C072  90BA               	bcf	4026,0,c	;volatile
 32511  00C074  92BA               	bcf	4026,1,c	;volatile
 32512  00C076  94BA               	bcf	4026,2,c	;volatile
 32513  00C078  96BA               	bcf	4026,3,c	;volatile
 32514  00C07A                     i2l2366:
 32515                           
 32516                           ;motor.c: 342: };motor.c: 346: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 32517                           
 32518                           ; BSR set to: 14
 32519  00C07A  0EFD               	movlw	low _motor_prescaler_lookup
 32520  00C07C  0100               	movlb	0	; () banked
 32521  00C07E  25F1               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 32522  00C080  6EF6               	movwf	tblptrl,c
 32523  00C082  0E9B               	movlw	high _motor_prescaler_lookup
 32524  00C084  21F2               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32525  00C086  6EF7               	movwf	tblptrh,c
 32526  00C088                     	if	1	;There are 3 active tblptr bytes
 32527  00C088  6AF8               	clrf	tblptru,c
 32528  00C08A  0E00               	movlw	low (__mediumconst shr (0+16))
 32529  00C08C  22F8               	addwfc	tblptru,f,c
 32530  00C08E                     	endif
 32531  00C08E  0008               	tblrd		*
 32532  00C090  CFF5 F02E          	movff	tablat,??_motor_isr
 32533  00C094  50CA               	movf	4042,w,c	;volatile
 32534  00C096  182E               	xorwf	??_motor_isr,w,c
 32535  00C098  0BFC               	andlw	-4
 32536  00C09A  182E               	xorwf	??_motor_isr,w,c
 32537  00C09C  6ECA               	movwf	4042,c	;volatile
 32538                           
 32539                           ; BSR set to: 0
 32540                           ;motor.c: 348: PR2 = motor_period_lookup[motor_current_speed];
 32541  00C09E  0E16               	movlw	low _motor_period_lookup
 32542  00C0A0  25F1               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 32543  00C0A2  6EF6               	movwf	tblptrl,c
 32544  00C0A4  0E9A               	movlw	high _motor_period_lookup
 32545  00C0A6  21F2               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32546  00C0A8  6EF7               	movwf	tblptrh,c
 32547  00C0AA                     	if	1	;There are 3 active tblptr bytes
 32548  00C0AA  6AF8               	clrf	tblptru,c
 32549  00C0AC  0E00               	movlw	low (__mediumconst shr (0+16))
 32550  00C0AE  22F8               	addwfc	tblptru,f,c
 32551  00C0B0                     	endif
 32552  00C0B0  0008               	tblrd		*
 32553  00C0B2  CFF5 FFCB          	movff	tablat,4043	;volatile
 32554                           
 32555                           ; BSR set to: 0
 32556                           ;motor.c: 350: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 32557  00C0B6  0E2F               	movlw	low _motor_postscaler_lookup
 32558  00C0B8  25F1               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 32559  00C0BA  6EF6               	movwf	tblptrl,c
 32560  00C0BC  0E98               	movlw	high _motor_postscaler_lookup
 32561  00C0BE  21F2               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32562  00C0C0  6EF7               	movwf	tblptrh,c
 32563  00C0C2                     	if	1	;There are 3 active tblptr bytes
 32564  00C0C2  6AF8               	clrf	tblptru,c
 32565  00C0C4  0E00               	movlw	low (__mediumconst shr (0+16))
 32566  00C0C6  22F8               	addwfc	tblptru,f,c
 32567  00C0C8                     	endif
 32568  00C0C8  0008               	tblrd		*
 32569  00C0CA  CFF5 F02E          	movff	tablat,??_motor_isr
 32570  00C0CE  462E               	rlncf	??_motor_isr,f,c
 32571  00C0D0  462E               	rlncf	??_motor_isr,f,c
 32572  00C0D2  462E               	rlncf	??_motor_isr,f,c
 32573  00C0D4  50CA               	movf	4042,w,c	;volatile
 32574  00C0D6  182E               	xorwf	??_motor_isr,w,c
 32575  00C0D8  0B87               	andlw	-121
 32576  00C0DA  182E               	xorwf	??_motor_isr,w,c
 32577  00C0DC  6ECA               	movwf	4042,c	;volatile
 32578                           
 32579                           ; BSR set to: 0
 32580                           ;motor.c: 352: CCPR1L = PR2>>1;
 32581  00C0DE  90D8               	bcf	status,0,c
 32582  00C0E0  30CB               	rrcf	4043,w,c	;volatile
 32583  00C0E2  6EBB               	movwf	4027,c	;volatile
 32584                           
 32585                           ; BSR set to: 0
 32586                           ;motor.c: 355: if(motor_current_speed>0)
 32587  00C0E4  51F1               	movf	_motor_current_speed& (0+255),w,b	;volatile
 32588  00C0E6  11F2               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32589  00C0E8  B4D8               	btfsc	status,2,c
 32590  00C0EA  D058               	goto	i2l2367
 32591                           
 32592                           ; BSR set to: 0
 32593                           ;motor.c: 356: {;motor.c: 357: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 32594  00C0EC  0EFE               	movlw	254
 32595  00C0EE  6E2E               	movwf	??_motor_isr& (0+255),c
 32596  00C0F0  0EFF               	movlw	255
 32597  00C0F2  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 32598  00C0F4  C0F1  F030         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 32599  00C0F8  C0F2  F031         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 32600  00C0FC  90D8               	bcf	status,0,c
 32601  00C0FE  3630               	rlcf	??_motor_isr+2,f,c
 32602  00C100  3631               	rlcf	??_motor_isr+3,f,c
 32603  00C102  502E               	movf	??_motor_isr,w,c
 32604  00C104  2630               	addwf	??_motor_isr+2,f,c
 32605  00C106  502F               	movf	??_motor_isr+1,w,c
 32606  00C108  2231               	addwfc	??_motor_isr+3,f,c
 32607  00C10A  0E61               	movlw	low _motor_steps_lookup
 32608  00C10C  2430               	addwf	??_motor_isr+2,w,c
 32609  00C10E  6EF6               	movwf	tblptrl,c
 32610  00C110  0E94               	movlw	high _motor_steps_lookup
 32611  00C112  2031               	addwfc	??_motor_isr+3,w,c
 32612  00C114  6EF7               	movwf	tblptrh,c
 32613  00C116                     	if	1	;There are 3 active tblptr bytes
 32614  00C116  6AF8               	clrf	tblptru,c
 32615  00C118  0E00               	movlw	low (__mediumconst shr (0+16))
 32616  00C11A  22F8               	addwfc	tblptru,f,c
 32617  00C11C                     	endif
 32618  00C11C  0009               	tblrd		*+
 32619  00C11E  CFF5 F032          	movff	tablat,??_motor_isr+4
 32620  00C122  0009               	tblrd		*+
 32621  00C124  CFF5 F033          	movff	tablat,??_motor_isr+5
 32622  00C128  5032               	movf	??_motor_isr+4,w,c
 32623  00C12A  6E34               	movwf	(??_motor_isr+6)& (0+255),c
 32624  00C12C  5033               	movf	??_motor_isr+5,w,c
 32625  00C12E  6E35               	movwf	(??_motor_isr+7)& (0+255),c
 32626  00C130  6A36               	clrf	(??_motor_isr+8)& (0+255),c
 32627  00C132  6A37               	clrf	(??_motor_isr+9)& (0+255),c
 32628  00C134  1E34               	comf	??_motor_isr+6,f,c
 32629  00C136  1E35               	comf	??_motor_isr+7,f,c
 32630  00C138  1E36               	comf	??_motor_isr+8,f,c
 32631  00C13A  1E37               	comf	??_motor_isr+9,f,c
 32632  00C13C  2A34               	incf	??_motor_isr+6,f,c
 32633  00C13E  0E00               	movlw	0
 32634  00C140  2235               	addwfc	??_motor_isr+7,f,c
 32635  00C142  2236               	addwfc	??_motor_isr+8,f,c
 32636  00C144  2237               	addwfc	??_motor_isr+9,f,c
 32637  00C146  90D8               	bcf	status,0,c
 32638  00C148  35F1               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 32639  00C14A  6EF6               	movwf	tblptrl,c
 32640  00C14C  35F2               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32641  00C14E  6EF7               	movwf	tblptrh,c
 32642  00C150  0E61               	movlw	low _motor_steps_lookup
 32643  00C152  26F6               	addwf	tblptrl,f,c
 32644  00C154  0E94               	movlw	high _motor_steps_lookup
 32645  00C156  22F7               	addwfc	tblptrh,f,c
 32646  00C158                     	if	1	;There are 3 active tblptr bytes
 32647  00C158  6AF8               	clrf	tblptru,c
 32648  00C15A  0E00               	movlw	low (__mediumconst shr (0+16))
 32649  00C15C  22F8               	addwfc	tblptru,f,c
 32650  00C15E                     	endif
 32651  00C15E  0009               	tblrd		*+
 32652  00C160  CFF5 F038          	movff	tablat,??_motor_isr+10
 32653  00C164  0009               	tblrd		*+
 32654  00C166  CFF5 F039          	movff	tablat,??_motor_isr+11
 32655  00C16A  5038               	movf	??_motor_isr+10,w,c
 32656  00C16C  2434               	addwf	??_motor_isr+6,w,c
 32657  00C16E  6E3A               	movwf	(??_motor_isr+12)& (0+255),c
 32658  00C170  5039               	movf	??_motor_isr+11,w,c
 32659  00C172  2035               	addwfc	??_motor_isr+7,w,c
 32660  00C174  6E3B               	movwf	(??_motor_isr+13)& (0+255),c
 32661  00C176  0E00               	movlw	0
 32662  00C178  2036               	addwfc	??_motor_isr+8,w,c
 32663  00C17A  6E3C               	movwf	(??_motor_isr+14)& (0+255),c
 32664  00C17C  0E00               	movlw	0
 32665  00C17E  2037               	addwfc	??_motor_isr+9,w,c
 32666  00C180  6E3D               	movwf	(??_motor_isr+15)& (0+255),c
 32667  00C182  5016               	movf	_motor_current_stepcount,w,c	;volatile
 32668  00C184  243A               	addwf	??_motor_isr+12,w,c
 32669  00C186  0101               	movlb	1	; () banked
 32670  00C188  6F4B               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 32671  00C18A  5017               	movf	_motor_current_stepcount+1,w,c	;volatile
 32672  00C18C  203B               	addwfc	??_motor_isr+13,w,c
 32673  00C18E  6F4C               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 32674  00C190  5018               	movf	_motor_current_stepcount+2,w,c	;volatile
 32675  00C192  203C               	addwfc	??_motor_isr+14,w,c
 32676  00C194  6F4D               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 32677  00C196  5019               	movf	_motor_current_stepcount+3,w,c	;volatile
 32678  00C198  203D               	addwfc	??_motor_isr+15,w,c
 32679  00C19A  D0EB               	goto	L59
 32680  00C19C                     i2l2367:
 32681                           
 32682                           ;motor.c: 359: else;motor.c: 360: {;motor.c: 361: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 32683                           
 32684                           ; BSR set to: 1
 32685  00C19C  90D8               	bcf	status,0,c
 32686  00C19E  0100               	movlb	0	; () banked
 32687  00C1A0  35F1               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 32688  00C1A2  6EF6               	movwf	tblptrl,c
 32689  00C1A4  35F2               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32690  00C1A6  6EF7               	movwf	tblptrh,c
 32691  00C1A8  0E61               	movlw	low _motor_steps_lookup
 32692  00C1AA  26F6               	addwf	tblptrl,f,c
 32693  00C1AC  0E94               	movlw	high _motor_steps_lookup
 32694  00C1AE  22F7               	addwfc	tblptrh,f,c
 32695  00C1B0                     	if	1	;There are 3 active tblptr bytes
 32696  00C1B0  6AF8               	clrf	tblptru,c
 32697  00C1B2  0E00               	movlw	low (__mediumconst shr (0+16))
 32698  00C1B4  22F8               	addwfc	tblptru,f,c
 32699  00C1B6                     	endif
 32700  00C1B6  0009               	tblrd		*+
 32701  00C1B8  CFF5 F02E          	movff	tablat,??_motor_isr
 32702  00C1BC  0009               	tblrd		*+
 32703  00C1BE  CFF5 F02F          	movff	tablat,??_motor_isr+1
 32704  00C1C2  502E               	movf	??_motor_isr,w,c
 32705  00C1C4  2416               	addwf	_motor_current_stepcount,w,c	;volatile
 32706  00C1C6  0101               	movlb	1	; () banked
 32707  00C1C8  6F4B               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 32708  00C1CA  502F               	movf	??_motor_isr+1,w,c
 32709  00C1CC  2017               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 32710  00C1CE  6F4C               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 32711  00C1D0  0E00               	movlw	0
 32712  00C1D2  2018               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 32713  00C1D4  6F4D               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 32714  00C1D6  0E00               	movlw	0
 32715  00C1D8  2019               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 32716  00C1DA  D0CB               	goto	L59
 32717  00C1DC                     i2l2362:
 32718                           
 32719                           ; BSR set to: 1
 32720                           ;motor.c: 364: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 32721                           
 32722                           ; BSR set to: 1
 32723  00C1DC  516F               	movf	_motor_maximum_speed& (0+255),w,b
 32724  00C1DE  0100               	movlb	0	; () banked
 32725  00C1E0  19F1               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 32726  00C1E2  E106               	bnz	i2u1501_40
 32727  00C1E4  0101               	movlb	1	; () banked
 32728  00C1E6  5170               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 32729  00C1E8  0100               	movlb	0	; () banked
 32730  00C1EA  19F2               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32731  00C1EC  B4D8               	btfsc	status,2,c
 32732  00C1EE  D010               	goto	i2u1502_40
 32733  00C1F0                     i2u1501_40:
 32734                           
 32735                           ; BSR set to: 0
 32736  00C1F0  5040               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 32737  00C1F2  6E2E               	movwf	??_motor_isr& (0+255),c
 32738  00C1F4  5041               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 32739  00C1F6  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 32740  00C1F8  6A30               	clrf	(??_motor_isr+2)& (0+255),c
 32741  00C1FA  6A31               	clrf	(??_motor_isr+3)& (0+255),c
 32742  00C1FC  5042               	movf	motor_isr@steps_remaining,w,c
 32743  00C1FE  5C2E               	subwf	??_motor_isr,w,c
 32744  00C200  5043               	movf	motor_isr@steps_remaining+1,w,c
 32745  00C202  582F               	subwfb	??_motor_isr+1,w,c
 32746  00C204  5044               	movf	motor_isr@steps_remaining+2,w,c
 32747  00C206  5830               	subwfb	??_motor_isr+2,w,c
 32748  00C208  5045               	movf	motor_isr@steps_remaining+3,w,c
 32749  00C20A  5831               	subwfb	??_motor_isr+3,w,c
 32750  00C20C  A0D8               	btfss	status,0,c
 32751  00C20E  D002               	goto	i2l2370
 32752  00C210                     i2u1502_40:
 32753                           
 32754                           ; BSR set to: 0
 32755                           ;motor.c: 365: {;motor.c: 368: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 32756                           
 32757                           ; BSR set to: 0
 32758  00C210  90D8               	bcf	status,0,c
 32759  00C212  D05D               	goto	L58
 32760  00C214                     i2l2370:
 32761                           
 32762                           ;motor.c: 370: else;motor.c: 371: {;motor.c: 373: ++motor_current_speed;
 32763                           
 32764                           ; BSR set to: 1
 32765  00C214  0100               	movlb	0	; () banked
 32766  00C216  4BF1               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 32767  00C218  2BF2               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 32768                           
 32769                           ; BSR set to: 0
 32770                           ;motor.c: 377: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 32771  00C21A  0EFD               	movlw	low _motor_prescaler_lookup
 32772  00C21C  25F1               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 32773  00C21E  6EF6               	movwf	tblptrl,c
 32774  00C220  0E9B               	movlw	high _motor_prescaler_lookup
 32775  00C222  21F2               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32776  00C224  6EF7               	movwf	tblptrh,c
 32777  00C226                     	if	1	;There are 3 active tblptr bytes
 32778  00C226  6AF8               	clrf	tblptru,c
 32779  00C228  0E00               	movlw	low (__mediumconst shr (0+16))
 32780  00C22A  22F8               	addwfc	tblptru,f,c
 32781  00C22C                     	endif
 32782  00C22C  0008               	tblrd		*
 32783  00C22E  CFF5 F02E          	movff	tablat,??_motor_isr
 32784  00C232  50CA               	movf	4042,w,c	;volatile
 32785  00C234  182E               	xorwf	??_motor_isr,w,c
 32786  00C236  0BFC               	andlw	-4
 32787  00C238  182E               	xorwf	??_motor_isr,w,c
 32788  00C23A  6ECA               	movwf	4042,c	;volatile
 32789                           
 32790                           ; BSR set to: 0
 32791                           ;motor.c: 379: PR2 = motor_period_lookup[motor_current_speed];
 32792  00C23C  0E16               	movlw	low _motor_period_lookup
 32793  00C23E  25F1               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 32794  00C240  6EF6               	movwf	tblptrl,c
 32795  00C242  0E9A               	movlw	high _motor_period_lookup
 32796  00C244  21F2               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32797  00C246  6EF7               	movwf	tblptrh,c
 32798  00C248                     	if	1	;There are 3 active tblptr bytes
 32799  00C248  6AF8               	clrf	tblptru,c
 32800  00C24A  0E00               	movlw	low (__mediumconst shr (0+16))
 32801  00C24C  22F8               	addwfc	tblptru,f,c
 32802  00C24E                     	endif
 32803  00C24E  0008               	tblrd		*
 32804  00C250  CFF5 FFCB          	movff	tablat,4043	;volatile
 32805                           
 32806                           ; BSR set to: 0
 32807                           ;motor.c: 381: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 32808  00C254  0E2F               	movlw	low _motor_postscaler_lookup
 32809  00C256  25F1               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 32810  00C258  6EF6               	movwf	tblptrl,c
 32811  00C25A  0E98               	movlw	high _motor_postscaler_lookup
 32812  00C25C  21F2               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32813  00C25E  6EF7               	movwf	tblptrh,c
 32814  00C260                     	if	1	;There are 3 active tblptr bytes
 32815  00C260  6AF8               	clrf	tblptru,c
 32816  00C262  0E00               	movlw	low (__mediumconst shr (0+16))
 32817  00C264  22F8               	addwfc	tblptru,f,c
 32818  00C266                     	endif
 32819  00C266  0008               	tblrd		*
 32820  00C268  CFF5 F02E          	movff	tablat,??_motor_isr
 32821  00C26C  462E               	rlncf	??_motor_isr,f,c
 32822  00C26E  462E               	rlncf	??_motor_isr,f,c
 32823  00C270  462E               	rlncf	??_motor_isr,f,c
 32824  00C272  50CA               	movf	4042,w,c	;volatile
 32825  00C274  182E               	xorwf	??_motor_isr,w,c
 32826  00C276  0B87               	andlw	-121
 32827  00C278  182E               	xorwf	??_motor_isr,w,c
 32828  00C27A  6ECA               	movwf	4042,c	;volatile
 32829                           
 32830                           ; BSR set to: 0
 32831                           ;motor.c: 383: CCPR1L = PR2>>1;
 32832  00C27C  90D8               	bcf	status,0,c
 32833  00C27E  30CB               	rrcf	4043,w,c	;volatile
 32834  00C280  6EBB               	movwf	4027,c	;volatile
 32835                           
 32836                           ; BSR set to: 0
 32837                           ;motor.c: 385: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 32838  00C282  5020               	movf	_motor_mode,w,c
 32839  00C284  A4D8               	btfss	status,2,c
 32840  00C286  D021               	goto	i2l2374
 32841                           
 32842                           ; BSR set to: 0
 32843  00C288  0E2F               	movlw	low _motor_postscaler_lookup
 32844  00C28A  25F1               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 32845  00C28C  6EF6               	movwf	tblptrl,c
 32846  00C28E  0E98               	movlw	high _motor_postscaler_lookup
 32847  00C290  21F2               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32848  00C292  6EF7               	movwf	tblptrh,c
 32849  00C294                     	if	1	;There are 3 active tblptr bytes
 32850  00C294  6AF8               	clrf	tblptru,c
 32851  00C296  0E00               	movlw	low (__mediumconst shr (0+16))
 32852  00C298  22F8               	addwfc	tblptru,f,c
 32853  00C29A                     	endif
 32854  00C29A  0008               	tblrd		*
 32855  00C29C  50F5               	movf	tablat,w,c
 32856  00C29E  0900               	iorlw	0
 32857  00C2A0  A4D8               	btfss	status,2,c
 32858  00C2A2  D013               	goto	i2l2374
 32859                           
 32860                           ; BSR set to: 0
 32861                           ;motor.c: 386: {;motor.c: 388: motor_mode = MOTOR_MODE_PWM;
 32862  00C2A4  0E01               	movlw	1
 32863  00C2A6  6E20               	movwf	_motor_mode,c
 32864                           
 32865                           ;motor.c: 391: CCP1CONbits.CCP1M = 0b1100;
 32866  00C2A8  50BA               	movf	4026,w,c	;volatile
 32867  00C2AA  0BF0               	andlw	-16
 32868  00C2AC  090C               	iorlw	12
 32869  00C2AE  6EBA               	movwf	4026,c	;volatile
 32870                           
 32871                           ;motor.c: 394: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 32872  00C2B0  0E55               	movlw	85
 32873  00C2B2  6EA7               	movwf	4007,c	;volsfr
 32874  00C2B4  0EAA               	movlw	170
 32875  00C2B6  6EA7               	movwf	4007,c	;volsfr
 32876                           
 32877                           ; BSR set to: 0
 32878  00C2B8  010E               	movlb	14	; () banked
 32879  00C2BA  91BF               	bcf	191,0,b	;volatile
 32880                           
 32881                           ;motor.c: 395: RPOR4 = 14;
 32882  00C2BC  0E0E               	movlw	14
 32883  00C2BE  6FC4               	movwf	196,b	;volatile
 32884                           
 32885                           ;motor.c: 396: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 32886  00C2C0  0E55               	movlw	85
 32887  00C2C2  6EA7               	movwf	4007,c	;volsfr
 32888  00C2C4  0EAA               	movlw	170
 32889  00C2C6  6EA7               	movwf	4007,c	;volsfr
 32890                           
 32891                           ; BSR set to: 14
 32892  00C2C8  81BF               	bsf	191,0,b	;volatile
 32893  00C2CA                     i2l2374:
 32894                           
 32895                           ;motor.c: 397: };motor.c: 400: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 32896                           
 32897                           ; BSR set to: 14
 32898  00C2CA  90D8               	bcf	status,0,c
 32899  00C2CC  0100               	movlb	0	; () banked
 32900  00C2CE                     L58:
 32901  00C2CE  35F1               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 32902  00C2D0  6EF6               	movwf	tblptrl,c
 32903  00C2D2  35F2               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 32904  00C2D4  6EF7               	movwf	tblptrh,c
 32905  00C2D6  0E61               	movlw	low _motor_steps_lookup
 32906  00C2D8  26F6               	addwf	tblptrl,f,c
 32907  00C2DA  0E94               	movlw	high _motor_steps_lookup
 32908  00C2DC  22F7               	addwfc	tblptrh,f,c
 32909  00C2DE                     	if	1	;There are 3 active tblptr bytes
 32910  00C2DE  6AF8               	clrf	tblptru,c
 32911  00C2E0  0E00               	movlw	low (__mediumconst shr (0+16))
 32912  00C2E2  22F8               	addwfc	tblptru,f,c
 32913  00C2E4                     	endif
 32914  00C2E4  0009               	tblrd		*+
 32915  00C2E6  CFF5 F02E          	movff	tablat,??_motor_isr
 32916  00C2EA  0009               	tblrd		*+
 32917  00C2EC  CFF5 F02F          	movff	tablat,??_motor_isr+1
 32918  00C2F0  502E               	movf	??_motor_isr,w,c
 32919  00C2F2  6E30               	movwf	(??_motor_isr+2)& (0+255),c
 32920  00C2F4  502F               	movf	??_motor_isr+1,w,c
 32921  00C2F6  6E31               	movwf	(??_motor_isr+3)& (0+255),c
 32922  00C2F8  6A32               	clrf	(??_motor_isr+4)& (0+255),c
 32923  00C2FA  6A33               	clrf	(??_motor_isr+5)& (0+255),c
 32924  00C2FC  1E30               	comf	??_motor_isr+2,f,c
 32925  00C2FE  1E31               	comf	??_motor_isr+3,f,c
 32926  00C300  1E32               	comf	??_motor_isr+4,f,c
 32927  00C302  1E33               	comf	??_motor_isr+5,f,c
 32928  00C304  2A30               	incf	??_motor_isr+2,f,c
 32929  00C306  0E00               	movlw	0
 32930  00C308  2231               	addwfc	??_motor_isr+3,f,c
 32931  00C30A  2232               	addwfc	??_motor_isr+4,f,c
 32932  00C30C  2233               	addwfc	??_motor_isr+5,f,c
 32933  00C30E  C0F1  F034         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 32934  00C312  C0F2  F035         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 32935  00C316  90D8               	bcf	status,0,c
 32936  00C318  3634               	rlcf	??_motor_isr+6,f,c
 32937  00C31A  3635               	rlcf	??_motor_isr+7,f,c
 32938  00C31C  0E02               	movlw	2
 32939  00C31E  2634               	addwf	??_motor_isr+6,f,c
 32940  00C320  0E00               	movlw	0
 32941  00C322  2235               	addwfc	??_motor_isr+7,f,c
 32942  00C324  0E61               	movlw	low _motor_steps_lookup
 32943  00C326  2434               	addwf	??_motor_isr+6,w,c
 32944  00C328  6EF6               	movwf	tblptrl,c
 32945  00C32A  0E94               	movlw	high _motor_steps_lookup
 32946  00C32C  2035               	addwfc	??_motor_isr+7,w,c
 32947  00C32E  6EF7               	movwf	tblptrh,c
 32948  00C330                     	if	1	;There are 3 active tblptr bytes
 32949  00C330  6AF8               	clrf	tblptru,c
 32950  00C332  0E00               	movlw	low (__mediumconst shr (0+16))
 32951  00C334  22F8               	addwfc	tblptru,f,c
 32952  00C336                     	endif
 32953  00C336  0009               	tblrd		*+
 32954  00C338  CFF5 F036          	movff	tablat,??_motor_isr+8
 32955  00C33C  0009               	tblrd		*+
 32956  00C33E  CFF5 F037          	movff	tablat,??_motor_isr+9
 32957  00C342  5036               	movf	??_motor_isr+8,w,c
 32958  00C344  2430               	addwf	??_motor_isr+2,w,c
 32959  00C346  6E38               	movwf	(??_motor_isr+10)& (0+255),c
 32960  00C348  5037               	movf	??_motor_isr+9,w,c
 32961  00C34A  2031               	addwfc	??_motor_isr+3,w,c
 32962  00C34C  6E39               	movwf	(??_motor_isr+11)& (0+255),c
 32963  00C34E  0E00               	movlw	0
 32964  00C350  2032               	addwfc	??_motor_isr+4,w,c
 32965  00C352  6E3A               	movwf	(??_motor_isr+12)& (0+255),c
 32966  00C354  0E00               	movlw	0
 32967  00C356  2033               	addwfc	??_motor_isr+5,w,c
 32968  00C358  6E3B               	movwf	(??_motor_isr+13)& (0+255),c
 32969  00C35A  5016               	movf	_motor_current_stepcount,w,c	;volatile
 32970  00C35C  2438               	addwf	??_motor_isr+10,w,c
 32971  00C35E  0101               	movlb	1	; () banked
 32972  00C360  6F4B               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 32973  00C362  5017               	movf	_motor_current_stepcount+1,w,c	;volatile
 32974  00C364  2039               	addwfc	??_motor_isr+11,w,c
 32975  00C366  6F4C               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 32976  00C368  5018               	movf	_motor_current_stepcount+2,w,c	;volatile
 32977  00C36A  203A               	addwfc	??_motor_isr+12,w,c
 32978  00C36C  6F4D               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 32979  00C36E  5019               	movf	_motor_current_stepcount+3,w,c	;volatile
 32980  00C370  203B               	addwfc	??_motor_isr+13,w,c
 32981  00C372                     L59:
 32982  00C372  6F4E               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 32983  00C374                     i2l2373:
 32984                           
 32985                           ; BSR set to: 1
 32986                           ;motor.c: 401: };motor.c: 402: };motor.c: 405: if(PIR1bits.TMR2IF)
 32987                           
 32988                           ; BSR set to: 1
 32989                           
 32990                           ; BSR set to: 1
 32991                           
 32992                           ; BSR set to: 1
 32993  00C374  A29E               	btfss	3998,1,c	;volatile
 32994  00C376  0012               	return	
 32995                           
 32996                           ; BSR set to: 1
 32997                           ;motor.c: 406: {;motor.c: 408: PIR1bits.TMR2IF = 0;
 32998  00C378  929E               	bcf	3998,1,c	;volatile
 32999                           
 33000                           ; BSR set to: 1
 33001                           ;motor.c: 410: ++motor_current_stepcount;
 33002  00C37A  0E01               	movlw	1
 33003  00C37C  2616               	addwf	_motor_current_stepcount,f,c	;volatile
 33004  00C37E  0E00               	movlw	0
 33005  00C380  2217               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 33006  00C382  2218               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 33007  00C384  2219               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 33008                           
 33009                           ;motor.c: 413: os.current_position_in_steps += motor_direction;
 33010  00C386  0100               	movlb	0	; () banked
 33011  00C388  51F9               	movf	_motor_direction& (0+255),w,b
 33012  00C38A  6E2E               	movwf	??_motor_isr& (0+255),c
 33013  00C38C  0E00               	movlw	0
 33014  00C38E  BE2E               	btfsc	??_motor_isr& (0+255),7,c
 33015  00C390  0EFF               	movlw	255
 33016  00C392  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 33017  00C394  6E30               	movwf	(??_motor_isr+2)& (0+255),c
 33018  00C396  6E31               	movwf	(??_motor_isr+3)& (0+255),c
 33019  00C398  502E               	movf	??_motor_isr,w,c
 33020  00C39A  27D1               	addwf	(_os+7)& (0+255),f,b	;volatile
 33021  00C39C  502F               	movf	??_motor_isr+1,w,c
 33022  00C39E  23D2               	addwfc	(_os+8)& (0+255),f,b	;volatile
 33023  00C3A0  5030               	movf	??_motor_isr+2,w,c
 33024  00C3A2  23D3               	addwfc	(_os+9)& (0+255),f,b	;volatile
 33025  00C3A4  5031               	movf	??_motor_isr+3,w,c
 33026  00C3A6  23D4               	addwfc	(_os+10)& (0+255),f,b	;volatile
 33027                           
 33028                           ;motor.c: 414: if(os.current_position_in_steps==config.full_circle_in_steps)
 33029  00C3A8  0101               	movlb	1	; () banked
 33030  00C3AA  511F               	movf	_config& (0+255),w,b
 33031  00C3AC  0100               	movlb	0	; () banked
 33032  00C3AE  19D1               	xorwf	(_os+7)& (0+255),w,b	;volatile
 33033  00C3B0  E118               	bnz	i2l15510
 33034  00C3B2  0101               	movlb	1	; () banked
 33035  00C3B4  5120               	movf	(_config+1)& (0+255),w,b
 33036  00C3B6  0100               	movlb	0	; () banked
 33037  00C3B8  19D2               	xorwf	(_os+8)& (0+255),w,b	;volatile
 33038  00C3BA  E113               	bnz	i2l15510
 33039  00C3BC  0101               	movlb	1	; () banked
 33040  00C3BE  5121               	movf	(_config+2)& (0+255),w,b
 33041  00C3C0  0100               	movlb	0	; () banked
 33042  00C3C2  19D3               	xorwf	(_os+9)& (0+255),w,b	;volatile
 33043  00C3C4  E10E               	bnz	i2l15510
 33044  00C3C6  0101               	movlb	1	; () banked
 33045  00C3C8  5122               	movf	(_config+3)& (0+255),w,b
 33046  00C3CA  0100               	movlb	0	; () banked
 33047  00C3CC  19D4               	xorwf	(_os+10)& (0+255),w,b	;volatile
 33048  00C3CE  A4D8               	btfss	status,2,c
 33049  00C3D0  D008               	goto	i2l2376
 33050                           
 33051                           ; BSR set to: 0
 33052                           ;motor.c: 415: os.current_position_in_steps = 0;
 33053  00C3D2  0E00               	movlw	0
 33054  00C3D4  6FD1               	movwf	(_os+7)& (0+255),b	;volatile
 33055  00C3D6  0E00               	movlw	0
 33056  00C3D8  6FD2               	movwf	(_os+8)& (0+255),b	;volatile
 33057  00C3DA  0E00               	movlw	0
 33058  00C3DC  6FD3               	movwf	(_os+9)& (0+255),b	;volatile
 33059  00C3DE  0E00               	movlw	0
 33060  00C3E0  6FD4               	movwf	(_os+10)& (0+255),b	;volatile
 33061  00C3E2                     i2l2376:
 33062  00C3E2                     i2l15510:
 33063                           
 33064                           ; BSR set to: 0
 33065                           ;motor.c: 416: if(os.current_position_in_steps==0xFFFFFFFF)
 33066  00C3E2  29D1               	incf	(_os+7)& (0+255),w,b	;volatile
 33067  00C3E4  E11C               	bnz	i2l2357
 33068  00C3E6  29D2               	incf	(_os+8)& (0+255),w,b	;volatile
 33069  00C3E8  E11A               	bnz	i2l2357
 33070  00C3EA  29D3               	incf	(_os+9)& (0+255),w,b	;volatile
 33071  00C3EC  E118               	bnz	i2l2357
 33072  00C3EE  29D4               	incf	(_os+10)& (0+255),w,b	;volatile
 33073  00C3F0  A4D8               	btfss	status,2,c
 33074  00C3F2  0012               	return	
 33075                           
 33076                           ; BSR set to: 0
 33077                           ;motor.c: 417: os.current_position_in_steps = (config.full_circle_in_steps-1);
 33078  00C3F4  0EFF               	movlw	255
 33079  00C3F6  0101               	movlb	1	; () banked
 33080  00C3F8  251F               	addwf	_config& (0+255),w,b
 33081  00C3FA  0100               	movlb	0	; () banked
 33082  00C3FC  6FD1               	movwf	(_os+7)& (0+255),b	;volatile
 33083  00C3FE  0EFF               	movlw	255
 33084  00C400  0101               	movlb	1	; () banked
 33085  00C402  2120               	addwfc	(_config+1)& (0+255),w,b
 33086  00C404  0100               	movlb	0	; () banked
 33087  00C406  6FD2               	movwf	(_os+8)& (0+255),b	;volatile
 33088  00C408  0EFF               	movlw	255
 33089  00C40A  0101               	movlb	1	; () banked
 33090  00C40C  2121               	addwfc	(_config+2)& (0+255),w,b
 33091  00C40E  0100               	movlb	0	; () banked
 33092  00C410  6FD3               	movwf	(_os+9)& (0+255),b	;volatile
 33093  00C412  0EFF               	movlw	255
 33094  00C414  0101               	movlb	1	; () banked
 33095  00C416  2122               	addwfc	(_config+3)& (0+255),w,b
 33096  00C418  0100               	movlb	0	; () banked
 33097  00C41A  6FD4               	movwf	(_os+10)& (0+255),b	;volatile
 33098                           
 33099                           ; BSR set to: 0
 33100  00C41C  0012               	return	
 33101  00C41E                     i2l2357:
 33102  00C41E  0012               	return		;funcret
 33103  00C420                     __end_of_motor_isr:
 33104                           	opt stack 0
 33105                           tosu	equ	0xFFF
 33106                           tosh	equ	0xFFE
 33107                           tosl	equ	0xFFD
 33108                           pclatu	equ	0xFFB
 33109                           pclath	equ	0xFFA
 33110                           tblptru	equ	0xFF8
 33111                           tblptrh	equ	0xFF7
 33112                           tblptrl	equ	0xFF6
 33113                           tablat	equ	0xFF5
 33114                           prodh	equ	0xFF4
 33115                           prodl	equ	0xFF3
 33116                           intcon	equ	0xFF2
 33117                           indf0	equ	0xFEF
 33118                           postinc0	equ	0xFEE
 33119                           fsr0h	equ	0xFEA
 33120                           fsr0l	equ	0xFE9
 33121                           wreg	equ	0xFE8
 33122                           indf1	equ	0xFE7
 33123                           postdec1	equ	0xFE5
 33124                           plusw1	equ	0xFE3
 33125                           fsr1h	equ	0xFE2
 33126                           fsr1l	equ	0xFE1
 33127                           indf2	equ	0xFDF
 33128                           postinc2	equ	0xFDE
 33129                           postdec2	equ	0xFDD
 33130                           plusw2	equ	0xFDB
 33131                           fsr2h	equ	0xFDA
 33132                           fsr2l	equ	0xFD9
 33133                           status	equ	0xFD8
 33134                           
 33135 ;; *************** function _USBDeviceTasks *****************
 33136 ;; Defined at:
 33137 ;;		line 477 in file "usb_device.c"
 33138 ;; Parameters:    Size  Location     Type
 33139 ;;		None
 33140 ;; Auto vars:     Size  Location     Type
 33141 ;;  i               1   30[COMRAM] unsigned char 
 33142 ;; Return value:  Size  Location     Type
 33143 ;;                  1    wreg      void 
 33144 ;; Registers used:
 33145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 33146 ;; Tracked objects:
 33147 ;;		On entry : 0/0
 33148 ;;		On exit  : 0/0
 33149 ;;		Unchanged: 0/0
 33150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33154 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33155 ;;Total ram usage:        1 bytes
 33156 ;; Hardware stack levels used:    1
 33157 ;; Hardware stack levels required when called:    8
 33158 ;; This function calls:
 33159 ;;		_USBCtrlEPAllowStatusStage
 33160 ;;		_USBCtrlEPService
 33161 ;;		_USBIncrement1msInternalTimers
 33162 ;;		_USBStallHandler
 33163 ;;		_USBSuspend
 33164 ;;		_USBWakeFromSuspend
 33165 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 33166 ;;		i2_USBDeviceInit
 33167 ;; This function is called by:
 33168 ;;		_SYS_InterruptHigh
 33169 ;; This function uses a non-reentrant model
 33170 ;;
 33171                           
 33172                           	psect	text120
 33173  00E458                     __ptext120:
 33174                           	opt stack 0
 33175  00E458                     _USBDeviceTasks:
 33176                           	opt stack 9
 33177                           
 33178                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 33179                           
 33180                           ;incstack = 0
 33181  00E458  042B               	decf	_USBDeviceState,w,c	;volatile
 33182  00E45A  B4D8               	btfsc	status,2,c
 33183                           
 33184                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 33185  00E45C  BA65               	btfsc	3941,5,c	;volatile
 33186  00E45E  D007               	goto	i2l155
 33187                           
 33188                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 33189  00E460  0E00               	movlw	0
 33190  00E462  6E62               	movwf	3938,c	;volatile
 33191                           
 33192                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 33193  00E464  010F               	movlb	15	; () banked
 33194  00E466  8136               	bsf	54,0,b	;volatile
 33195                           
 33196                           ; BSR set to: 15
 33197                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 33198  00E468  8936               	bsf	54,4,b	;volatile
 33199                           
 33200                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 33201  00E46A  0E02               	movlw	2
 33202  00E46C  6E2B               	movwf	_USBDeviceState,c	;volatile
 33203  00E46E                     i2l155:
 33204                           
 33205                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 33206                           
 33207                           ; BSR set to: 15
 33208                           
 33209                           ; BSR set to: 15
 33210  00E46E  A462               	btfss	3938,2,c	;volatile
 33211  00E470  D006               	goto	i2l156
 33212  00E472  010F               	movlb	15	; () banked
 33213  00E474  A536               	btfss	54,2,b	;volatile
 33214  00E476  D003               	goto	i2l156
 33215                           
 33216                           ; BSR set to: 15
 33217                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 33218  00E478  9462               	bcf	3938,2,c	;volatile
 33219                           
 33220                           ; BSR set to: 15
 33221                           ;usb_device.c: 640: USBWakeFromSuspend();
 33222  00E47A  EC49  F08F         	call	_USBWakeFromSuspend	;wreg free
 33223  00E47E                     i2l156:
 33224                           
 33225                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 33226  00E47E  A265               	btfss	3941,1,c	;volatile
 33227  00E480  D002               	goto	i2l157
 33228                           
 33229                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 33230  00E482  98A1               	bcf	4001,4,c	;volatile
 33231                           
 33232                           ;usb_device.c: 650: return;
 33233  00E484  0012               	return	
 33234  00E486                     i2l157:
 33235                           
 33236                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 33237  00E486  A062               	btfss	3938,0,c	;volatile
 33238  00E488  D009               	goto	i2l159
 33239  00E48A  010F               	movlb	15	; () banked
 33240  00E48C  A136               	btfss	54,0,b	;volatile
 33241  00E48E  D006               	goto	i2l159
 33242                           
 33243                           ; BSR set to: 15
 33244                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 33245  00E490  ECCE  F072         	call	i2_USBDeviceInit	;wreg free
 33246                           
 33247                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 33248  00E494  88A0               	bsf	4000,4,c	;volatile
 33249                           
 33250                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 33251  00E496  0E04               	movlw	4
 33252  00E498  6E2B               	movwf	_USBDeviceState,c	;volatile
 33253                           
 33254                           ;usb_device.c: 681: (UIR &= 0xFE);
 33255  00E49A  9062               	bcf	3938,0,c	;volatile
 33256  00E49C                     i2l159:
 33257                           
 33258                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 33259  00E49C  A862               	btfss	3938,4,c	;volatile
 33260  00E49E  D004               	goto	i2l160
 33261  00E4A0  010F               	movlb	15	; () banked
 33262  00E4A2  B936               	btfsc	54,4,b	;volatile
 33263                           
 33264                           ; BSR set to: 15
 33265                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 33266  00E4A4  ECFB  F08F         	call	_USBSuspend	;wreg free
 33267  00E4A8                     i2l160:
 33268                           
 33269                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 33270  00E4A8  AC62               	btfss	3938,6,c	;volatile
 33271  00E4AA  D01B               	goto	i2l164
 33272                           
 33273                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 33274  00E4AC  010F               	movlb	15	; () banked
 33275  00E4AE  AD36               	btfss	54,6,b	;volatile
 33276  00E4B0  D00E               	goto	i2l162
 33277                           
 33278                           ; BSR set to: 15
 33279                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 33280  00E4B2  0E00               	movlw	0
 33281  00E4B4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 33282  00E4B6  0E73               	movlw	115
 33283  00E4B8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 33284  00E4BA  0E00               	movlw	0
 33285  00E4BC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 33286  00E4BE  0E00               	movlw	0
 33287  00E4C0  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 33288  00E4C2  0E00               	movlw	0
 33289  00E4C4  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 33290  00E4C6  0E01               	movlw	1
 33291  00E4C8  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 33292  00E4CA  ECE7  F086         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 33293  00E4CE                     i2l162:
 33294                           
 33295                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 33296  00E4CE  9C62               	bcf	3938,6,c	;volatile
 33297                           
 33298                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 33299  00E4D0  EC17  F091         	call	_USBIncrement1msInternalTimers	;wreg free
 33300                           
 33301                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 33302  00E4D4  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 33303  00E4D6  A4D8               	btfss	status,2,c
 33304                           
 33305                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 33306  00E4D8  0624               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 33307                           
 33308                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 33309  00E4DA  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 33310  00E4DC  B4D8               	btfsc	status,2,c
 33311                           
 33312                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 33313  00E4DE  ECC1  F080         	call	_USBCtrlEPAllowStatusStage	;wreg free
 33314  00E4E2                     i2l164:
 33315                           
 33316                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 33317  00E4E2  AA62               	btfss	3938,5,c	;volatile
 33318  00E4E4  D004               	goto	i2l165
 33319  00E4E6  010F               	movlb	15	; () banked
 33320  00E4E8  BB36               	btfsc	54,5,b	;volatile
 33321                           
 33322                           ; BSR set to: 15
 33323                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 33324  00E4EA  EC3B  F08E         	call	_USBStallHandler	;wreg free
 33325  00E4EE                     i2l165:
 33326                           
 33327                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 33328  00E4EE  A262               	btfss	3938,1,c	;volatile
 33329  00E4F0  D012               	goto	i2l166
 33330  00E4F2  010F               	movlb	15	; () banked
 33331  00E4F4  A336               	btfss	54,1,b	;volatile
 33332  00E4F6  D00F               	goto	i2l166
 33333                           
 33334                           ; BSR set to: 15
 33335                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 33336  00E4F8  0E7F               	movlw	127
 33337  00E4FA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 33338  00E4FC  683D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 33339  00E4FE  0E00               	movlw	0
 33340  00E500  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 33341  00E502  0E00               	movlw	0
 33342  00E504  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 33343  00E506  0E00               	movlw	0
 33344  00E508  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 33345  00E50A  0E01               	movlw	1
 33346  00E50C  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 33347  00E50E  ECE7  F086         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 33348                           
 33349                           ;usb_device.c: 759: {UEIR = 0;};
 33350  00E512  0E00               	movlw	0
 33351  00E514  6E63               	movwf	3939,c	;volatile
 33352  00E516                     i2l166:
 33353                           
 33354                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 33355  00E516  0E04               	movlw	4
 33356  00E518  602B               	cpfslt	_USBDeviceState,c	;volatile
 33357  00E51A  D002               	goto	i2l167
 33358                           
 33359                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 33360  00E51C  98A1               	bcf	4001,4,c	;volatile
 33361                           
 33362                           ;usb_device.c: 777: return;
 33363  00E51E  0012               	return	
 33364  00E520                     i2l167:
 33365                           
 33366                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 33367  00E520  010F               	movlb	15	; () banked
 33368  00E522  A736               	btfss	54,3,b	;volatile
 33369  00E524  D039               	goto	i2u2019_40
 33370                           
 33371                           ; BSR set to: 15
 33372                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 33373  00E526  0E00               	movlw	0
 33374  00E528  6E4C               	movwf	USBDeviceTasks@i,c
 33375  00E52A                     i2l20178:
 33376                           
 33377                           ; BSR set to: 15
 33378  00E52A  0E03               	movlw	3
 33379  00E52C  644C               	cpfsgt	USBDeviceTasks@i,c
 33380  00E52E  D001               	goto	i2l169
 33381  00E530  D033               	goto	i2u2019_40
 33382  00E532                     i2l169:
 33383                           
 33384                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 33385  00E532  A662               	btfss	3938,3,c	;volatile
 33386  00E534  D031               	goto	i2u2019_40
 33387                           
 33388                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 33389  00E536  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 33390                           
 33391                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 33392  00E53A  302C               	rrcf	_USTATcopy,w,c	;volatile
 33393  00E53C  32E8               	rrcf	wreg,f,c
 33394  00E53E  32E8               	rrcf	wreg,f,c
 33395  00E540  0B0F               	andlw	15
 33396  00E542  6E26               	movwf	_endpoint_number,c	;volatile
 33397                           
 33398                           ;usb_device.c: 793: (UIR &= 0xF7);
 33399  00E544  9662               	bcf	3938,3,c	;volatile
 33400                           
 33401                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 33402  00E546  B42C               	btfsc	_USTATcopy,2,c	;volatile
 33403  00E548  D007               	goto	i2l172
 33404                           
 33405                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 33406  00E54A  5026               	movf	_endpoint_number,w,c	;volatile
 33407  00E54C  0D01               	mullw	1
 33408  00E54E  0E69               	movlw	low _ep_data_out
 33409  00E550  24F3               	addwf	prodl,w,c
 33410  00E552  6ED9               	movwf	fsr2l,c
 33411  00E554  0E01               	movlw	high _ep_data_out
 33412  00E556  D006               	goto	L60
 33413  00E558                     i2l172:
 33414                           
 33415                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 33416                           
 33417                           ; BSR set to: 1
 33418  00E558  5026               	movf	_endpoint_number,w,c	;volatile
 33419  00E55A  0D01               	mullw	1
 33420  00E55C  0E6C               	movlw	low _ep_data_in
 33421  00E55E  24F3               	addwf	prodl,w,c
 33422  00E560  6ED9               	movwf	fsr2l,c
 33423  00E562  0E01               	movlw	high _ep_data_in
 33424  00E564                     L60:
 33425  00E564  20F4               	addwfc	prodh,w,c
 33426  00E566  6EDA               	movwf	fsr2h,c
 33427  00E568  0101               	movlb	1	; () banked
 33428  00E56A  70DF               	btg	indf2,0,c
 33429                           
 33430                           ; BSR set to: 1
 33431                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 33432                           
 33433                           ; BSR set to: 1
 33434  00E56C  5026               	movf	_endpoint_number,w,c	;volatile
 33435  00E56E  A4D8               	btfss	status,2,c
 33436  00E570  D003               	goto	i2l174
 33437                           
 33438                           ; BSR set to: 1
 33439                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 33440  00E572  EC7B  F085         	call	_USBCtrlEPService	;wreg free
 33441                           
 33442                           ;usb_device.c: 813: }
 33443  00E576  D00E               	goto	i2l176
 33444  00E578                     i2l174:
 33445                           
 33446                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 33447  00E578  0E00               	movlw	0
 33448  00E57A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 33449  00E57C  0E72               	movlw	114
 33450  00E57E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 33451  00E580  0E2C               	movlw	low _USTATcopy
 33452  00E582  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 33453  00E584  0E00               	movlw	high _USTATcopy
 33454  00E586  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 33455  00E588  0E00               	movlw	0
 33456  00E58A  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 33457  00E58C  0E00               	movlw	0
 33458  00E58E  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 33459  00E590  ECE7  F086         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 33460  00E594                     i2l176:
 33461  00E594  2A4C               	incf	USBDeviceTasks@i,f,c
 33462  00E596  D7C9               	goto	i2l20178
 33463  00E598                     i2u2019_40:
 33464                           
 33465                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 33466  00E598  98A1               	bcf	4001,4,c	;volatile
 33467  00E59A  0012               	return		;funcret
 33468  00E59C                     __end_of_USBDeviceTasks:
 33469                           	opt stack 0
 33470                           tosu	equ	0xFFF
 33471                           tosh	equ	0xFFE
 33472                           tosl	equ	0xFFD
 33473                           pclatu	equ	0xFFB
 33474                           pclath	equ	0xFFA
 33475                           tblptru	equ	0xFF8
 33476                           tblptrh	equ	0xFF7
 33477                           tblptrl	equ	0xFF6
 33478                           tablat	equ	0xFF5
 33479                           prodh	equ	0xFF4
 33480                           prodl	equ	0xFF3
 33481                           intcon	equ	0xFF2
 33482                           indf0	equ	0xFEF
 33483                           postinc0	equ	0xFEE
 33484                           fsr0h	equ	0xFEA
 33485                           fsr0l	equ	0xFE9
 33486                           wreg	equ	0xFE8
 33487                           indf1	equ	0xFE7
 33488                           postdec1	equ	0xFE5
 33489                           plusw1	equ	0xFE3
 33490                           fsr1h	equ	0xFE2
 33491                           fsr1l	equ	0xFE1
 33492                           indf2	equ	0xFDF
 33493                           postinc2	equ	0xFDE
 33494                           postdec2	equ	0xFDD
 33495                           plusw2	equ	0xFDB
 33496                           fsr2h	equ	0xFDA
 33497                           fsr2l	equ	0xFD9
 33498                           status	equ	0xFD8
 33499                           
 33500 ;; *************** function i2_USBDeviceInit *****************
 33501 ;; Defined at:
 33502 ;;		line 277 in file "usb_device.c"
 33503 ;; Parameters:    Size  Location     Type
 33504 ;;		None
 33505 ;; Auto vars:     Size  Location     Type
 33506 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 33507 ;; Return value:  Size  Location     Type
 33508 ;;                  1    wreg      void 
 33509 ;; Registers used:
 33510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33511 ;; Tracked objects:
 33512 ;;		On entry : 0/0
 33513 ;;		On exit  : 0/0
 33514 ;;		Unchanged: 0/0
 33515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33519 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33520 ;;Total ram usage:        1 bytes
 33521 ;; Hardware stack levels used:    1
 33522 ;; Hardware stack levels required when called:    1
 33523 ;; This function calls:
 33524 ;;		i2_memset
 33525 ;; This function is called by:
 33526 ;;		_USBDeviceTasks
 33527 ;; This function uses a non-reentrant model
 33528 ;;
 33529                           
 33530                           	psect	text121
 33531  00E59C                     __ptext121:
 33532                           	opt stack 0
 33533  00E59C                     i2_USBDeviceInit:
 33534                           	opt stack 15
 33535                           
 33536                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 33537                           
 33538                           ;incstack = 0
 33539  00E59C  98A0               	bcf	4000,4,c	;volatile
 33540                           
 33541                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 33542  00E59E  0E00               	movlw	0
 33543  00E5A0  6E63               	movwf	3939,c	;volatile
 33544                           
 33545                           ;usb_device.c: 291: {UIR = 0;};
 33546  00E5A2  0E00               	movlw	0
 33547  00E5A4  6E62               	movwf	3938,c	;volatile
 33548                           
 33549                           ;usb_device.c: 294: UEP0 = 0;
 33550  00E5A6  0E00               	movlw	0
 33551  00E5A8  010F               	movlb	15	; () banked
 33552  00E5AA  6F26               	movwf	38,b	;volatile
 33553                           
 33554                           ; BSR set to: 15
 33555                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 33556  00E5AC  0E27               	movlw	39
 33557  00E5AE  6E2E               	movwf	i2memset@p1,c
 33558  00E5B0  0E0F               	movlw	15
 33559  00E5B2  6E2F               	movwf	i2memset@p1+1,c
 33560  00E5B4  0E00               	movlw	0
 33561  00E5B6  6E31               	movwf	i2memset@c+1,c
 33562  00E5B8  0E00               	movlw	0
 33563  00E5BA  6E30               	movwf	i2memset@c,c
 33564  00E5BC  0E00               	movlw	0
 33565  00E5BE  6E33               	movwf	i2memset@n+1,c
 33566  00E5C0  0E02               	movlw	2
 33567  00E5C2  6E32               	movwf	i2memset@n,c
 33568  00E5C4  EC57  F090         	call	i2_memset	;wreg free
 33569                           
 33570                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 33571  00E5C8  0E16               	movlw	22
 33572  00E5CA  010F               	movlb	15	; () banked
 33573  00E5CC  6F39               	movwf	57,b	;volatile
 33574                           
 33575                           ; BSR set to: 15
 33576  00E5CE  0E9F               	movlw	159
 33577  00E5D0  6F37               	movwf	55,b	;volatile
 33578                           
 33579                           ; BSR set to: 15
 33580  00E5D2  0E7B               	movlw	123
 33581  00E5D4  6F36               	movwf	54,b	;volatile
 33582                           
 33583                           ; BSR set to: 15
 33584                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 33585  00E5D6  0E00               	movlw	0
 33586  00E5D8  6E36               	movwf	i2USBDeviceInit@i,c
 33587  00E5DA                     i2l14202:
 33588                           
 33589                           ; BSR set to: 15
 33590  00E5DA  0E0B               	movlw	11
 33591  00E5DC  6436               	cpfsgt	i2USBDeviceInit@i,c
 33592  00E5DE  D001               	goto	i2l145
 33593  00E5E0  D00E               	goto	i2u1304_40
 33594  00E5E2                     i2l145:
 33595                           
 33596                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 33597                           
 33598                           ; BSR set to: 15
 33599  00E5E2  5036               	movf	i2USBDeviceInit@i,w,c
 33600  00E5E4  0D04               	mullw	4
 33601  00E5E6  0E00               	movlw	0
 33602  00E5E8  24F3               	addwf	prodl,w,c
 33603  00E5EA  6ED9               	movwf	fsr2l,c
 33604  00E5EC  0E0D               	movlw	13
 33605  00E5EE  20F4               	addwfc	prodh,w,c
 33606  00E5F0  6EDA               	movwf	fsr2h,c
 33607  00E5F2  6ADE               	clrf	postinc2,c
 33608  00E5F4  6ADE               	clrf	postinc2,c
 33609  00E5F6  6ADE               	clrf	postinc2,c
 33610  00E5F8  6ADD               	clrf	postdec2,c
 33611  00E5FA  2A36               	incf	i2USBDeviceInit@i,f,c
 33612  00E5FC  D7EE               	goto	i2l14202
 33613  00E5FE                     i2u1304_40:
 33614                           
 33615                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 33616  00E5FE  8C65               	bsf	3941,6,c	;volatile
 33617                           
 33618                           ;usb_device.c: 316: UADDR = 0x00;
 33619  00E600  0E00               	movlw	0
 33620  00E602  010F               	movlb	15	; () banked
 33621  00E604  6F38               	movwf	56,b	;volatile
 33622                           
 33623                           ; BSR set to: 15
 33624                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 33625  00E606  9865               	bcf	3941,4,c	;volatile
 33626                           
 33627                           ; BSR set to: 15
 33628                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 33629  00E608  9C65               	bcf	3941,6,c	;volatile
 33630  00E60A                     
 33631                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 33632                           
 33633                           ; BSR set to: 15
 33634  00E60A  9662               	bcf	3938,3,c	;volatile
 33635                           
 33636                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 33637  00E60C  0E00               	movlw	0
 33638  00E60E  6E0D               	movwf	_inPipes+3,c	;volatile
 33639                           
 33640                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 33641  00E610  0E00               	movlw	0
 33642  00E612  6E04               	movwf	_outPipes+3,c	;volatile
 33643                           
 33644                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 33645  00E614  0E00               	movlw	0
 33646  00E616  6E06               	movwf	_outPipes+5,c	;volatile
 33647  00E618  0E00               	movlw	0
 33648  00E61A  6E05               	movwf	_outPipes+4,c	;volatile
 33649                           
 33650                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 33651  00E61C  B662               	btfsc	3938,3,c	;volatile
 33652  00E61E  D7F5               	goto	i2l147
 33653                           
 33654                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 33655  00E620  0E01               	movlw	1
 33656  00E622  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 33657                           
 33658                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 33659  00E624  0E01               	movlw	1
 33660  00E626  0101               	movlb	1	; () banked
 33661  00E628  6F86               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 33662                           
 33663                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 33664  00E62A  0E00               	movlw	0
 33665  00E62C  6F85               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 33666                           
 33667                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 33668  00E62E  0E00               	movlw	0
 33669  00E630  6F84               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 33670                           
 33671                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 33672  00E632  0E00               	movlw	0
 33673  00E634  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 33674                           
 33675                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 33676  00E636  0E00               	movlw	0
 33677  00E638  6E36               	movwf	i2USBDeviceInit@i,c
 33678  00E63A                     i2l14230:
 33679                           
 33680                           ; BSR set to: 1
 33681  00E63A  0E02               	movlw	2
 33682  00E63C  6436               	cpfsgt	i2USBDeviceInit@i,c
 33683  00E63E  D001               	goto	i2l149
 33684  00E640  D02E               	goto	i2u1307_40
 33685  00E642                     i2l149:
 33686                           
 33687                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 33688                           
 33689                           ; BSR set to: 1
 33690  00E642  5036               	movf	i2USBDeviceInit@i,w,c
 33691  00E644  0D02               	mullw	2
 33692  00E646  0E10               	movlw	low _pBDTEntryIn
 33693  00E648  24F3               	addwf	prodl,w,c
 33694  00E64A  6ED9               	movwf	fsr2l,c
 33695  00E64C  0E00               	movlw	high _pBDTEntryIn
 33696  00E64E  20F4               	addwfc	prodh,w,c
 33697  00E650  6EDA               	movwf	fsr2h,c
 33698  00E652  0E00               	movlw	0
 33699  00E654  6EDE               	movwf	postinc2,c
 33700  00E656  0E00               	movlw	0
 33701  00E658  6EDD               	movwf	postdec2,c
 33702                           
 33703                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 33704  00E65A  5036               	movf	i2USBDeviceInit@i,w,c
 33705  00E65C  0D02               	mullw	2
 33706  00E65E  0E45               	movlw	low _pBDTEntryOut
 33707  00E660  24F3               	addwf	prodl,w,c
 33708  00E662  6ED9               	movwf	fsr2l,c
 33709  00E664  0E01               	movlw	high _pBDTEntryOut
 33710  00E666  20F4               	addwfc	prodh,w,c
 33711  00E668  6EDA               	movwf	fsr2h,c
 33712  00E66A  0E00               	movlw	0
 33713  00E66C  6EDE               	movwf	postinc2,c
 33714  00E66E  0E00               	movlw	0
 33715  00E670  6EDD               	movwf	postdec2,c
 33716                           
 33717                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 33718  00E672  5036               	movf	i2USBDeviceInit@i,w,c
 33719  00E674  0D01               	mullw	1
 33720  00E676  0E6C               	movlw	low _ep_data_in
 33721  00E678  24F3               	addwf	prodl,w,c
 33722  00E67A  6ED9               	movwf	fsr2l,c
 33723  00E67C  0E01               	movlw	high _ep_data_in
 33724  00E67E  20F4               	addwfc	prodh,w,c
 33725  00E680  6EDA               	movwf	fsr2h,c
 33726  00E682  0E00               	movlw	0
 33727  00E684  6EDF               	movwf	indf2,c
 33728                           
 33729                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 33730  00E686  5036               	movf	i2USBDeviceInit@i,w,c
 33731  00E688  0D01               	mullw	1
 33732  00E68A  0E69               	movlw	low _ep_data_out
 33733  00E68C  24F3               	addwf	prodl,w,c
 33734  00E68E  6ED9               	movwf	fsr2l,c
 33735  00E690  0E01               	movlw	high _ep_data_out
 33736  00E692  20F4               	addwfc	prodh,w,c
 33737  00E694  6EDA               	movwf	fsr2h,c
 33738  00E696  0E00               	movlw	0
 33739  00E698  6EDF               	movwf	indf2,c
 33740  00E69A  2A36               	incf	i2USBDeviceInit@i,f,c
 33741  00E69C  D7CE               	goto	i2l14230
 33742  00E69E                     i2u1307_40:
 33743                           
 33744                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 33745  00E69E  0E08               	movlw	8
 33746  00E6A0  6E10               	movwf	_pBDTEntryIn,c
 33747  00E6A2  0E0D               	movlw	13
 33748  00E6A4  6E11               	movwf	_pBDTEntryIn+1,c
 33749                           
 33750                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 33751  00E6A6  0E16               	movlw	22
 33752  00E6A8  010F               	movlb	15	; () banked
 33753  00E6AA  6F26               	movwf	38,b	;volatile
 33754                           
 33755                           ; BSR set to: 15
 33756                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 33757  00E6AC  0E0D               	movlw	13
 33758  00E6AE  010D               	movlb	13	; () banked
 33759  00E6B0  6F03               	movwf	3,b	;volatile
 33760  00E6B2  0E30               	movlw	48
 33761  00E6B4  6F02               	movwf	2,b	;volatile
 33762                           
 33763                           ; BSR set to: 13
 33764                           ;usb_device.c: 359: BDT[0].CNT = 8;
 33765  00E6B6  0E08               	movlw	8
 33766  00E6B8  6F01               	movwf	1,b	;volatile
 33767                           
 33768                           ; BSR set to: 13
 33769                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 33770  00E6BA  0E04               	movlw	4
 33771  00E6BC  6F00               	movwf	0,b	;volatile
 33772                           
 33773                           ; BSR set to: 13
 33774                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 33775  00E6BE  8F00               	bsf	0,7,b	;volatile
 33776                           
 33777                           ; BSR set to: 13
 33778                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 33779  00E6C0  0E00               	movlw	0
 33780  00E6C2  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 33781                           
 33782                           ; BSR set to: 13
 33783                           ;usb_device.c: 366: USB1msTickCount = 0;
 33784  00E6C4  0E00               	movlw	0
 33785  00E6C6  0101               	movlb	1	; () banked
 33786  00E6C8  6F5F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 33787  00E6CA  0E00               	movlw	0
 33788  00E6CC  6F60               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 33789  00E6CE  0E00               	movlw	0
 33790  00E6D0  6F61               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 33791  00E6D2  0E00               	movlw	0
 33792  00E6D4  6F62               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 33793                           
 33794                           ; BSR set to: 1
 33795                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 33796  00E6D6  0E00               	movlw	0
 33797  00E6D8  6F83               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 33798                           
 33799                           ; BSR set to: 1
 33800                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 33801  00E6DA  0E00               	movlw	0
 33802  00E6DC  6E2B               	movwf	_USBDeviceState,c	;volatile
 33803                           
 33804                           ; BSR set to: 1
 33805  00E6DE  0012               	return		;funcret
 33806  00E6E0                     __end_ofi2_USBDeviceInit:
 33807                           	opt stack 0
 33808                           tosu	equ	0xFFF
 33809                           tosh	equ	0xFFE
 33810                           tosl	equ	0xFFD
 33811                           pclatu	equ	0xFFB
 33812                           pclath	equ	0xFFA
 33813                           tblptru	equ	0xFF8
 33814                           tblptrh	equ	0xFF7
 33815                           tblptrl	equ	0xFF6
 33816                           tablat	equ	0xFF5
 33817                           prodh	equ	0xFF4
 33818                           prodl	equ	0xFF3
 33819                           intcon	equ	0xFF2
 33820                           indf0	equ	0xFEF
 33821                           postinc0	equ	0xFEE
 33822                           fsr0h	equ	0xFEA
 33823                           fsr0l	equ	0xFE9
 33824                           wreg	equ	0xFE8
 33825                           indf1	equ	0xFE7
 33826                           postdec1	equ	0xFE5
 33827                           plusw1	equ	0xFE3
 33828                           fsr1h	equ	0xFE2
 33829                           fsr1l	equ	0xFE1
 33830                           indf2	equ	0xFDF
 33831                           postinc2	equ	0xFDE
 33832                           postdec2	equ	0xFDD
 33833                           plusw2	equ	0xFDB
 33834                           fsr2h	equ	0xFDA
 33835                           fsr2l	equ	0xFD9
 33836                           status	equ	0xFD8
 33837                           
 33838 ;; *************** function _USBWakeFromSuspend *****************
 33839 ;; Defined at:
 33840 ;;		line 2305 in file "usb_device.c"
 33841 ;; Parameters:    Size  Location     Type
 33842 ;;		None
 33843 ;; Auto vars:     Size  Location     Type
 33844 ;;		None
 33845 ;; Return value:  Size  Location     Type
 33846 ;;                  1    wreg      void 
 33847 ;; Registers used:
 33848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33849 ;; Tracked objects:
 33850 ;;		On entry : 0/0
 33851 ;;		On exit  : 0/0
 33852 ;;		Unchanged: 0/0
 33853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33858 ;;Total ram usage:        0 bytes
 33859 ;; Hardware stack levels used:    1
 33860 ;; Hardware stack levels required when called:    4
 33861 ;; This function calls:
 33862 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 33863 ;; This function is called by:
 33864 ;;		_USBDeviceTasks
 33865 ;; This function uses a non-reentrant model
 33866 ;;
 33867                           
 33868                           	psect	text122
 33869  011E92                     __ptext122:
 33870                           	opt stack 0
 33871  011E92                     _USBWakeFromSuspend:
 33872                           	opt stack 12
 33873                           
 33874                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 33875                           
 33876                           ; BSR set to: 1
 33877                           ;incstack = 0
 33878  011E92  0E00               	movlw	0
 33879  011E94  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 33880                           
 33881                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 33882  011E96  0E00               	movlw	0
 33883  011E98  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 33884  011E9A  0E74               	movlw	116
 33885  011E9C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 33886  011E9E  0E00               	movlw	0
 33887  011EA0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 33888  011EA2  0E00               	movlw	0
 33889  011EA4  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 33890  011EA6  0E00               	movlw	0
 33891  011EA8  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 33892  011EAA  0E00               	movlw	0
 33893  011EAC  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 33894  011EAE  ECE7  F086         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 33895                           
 33896                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 33897  011EB2  9265               	bcf	3941,1,c	;volatile
 33898                           
 33899                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 33900  011EB4  010F               	movlb	15	; () banked
 33901  011EB6  9536               	bcf	54,2,b	;volatile
 33902                           
 33903                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 33904  011EB8  D001               	goto	i2l315
 33905  011EBA                     
 33906                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 33907                           
 33908                           ; BSR set to: 15
 33909  011EBA  9462               	bcf	3938,2,c	;volatile
 33910  011EBC                     i2l315:
 33911  011EBC  B462               	btfsc	3938,2,c	;volatile
 33912  011EBE  D7FD               	goto	i2l316
 33913                           
 33914                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 33915  011EC0  0E00               	movlw	0
 33916  011EC2  0101               	movlb	1	; () banked
 33917  011EC4  6F83               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 33918                           
 33919                           ; BSR set to: 1
 33920  011EC6  0012               	return		;funcret
 33921  011EC8                     __end_of_USBWakeFromSuspend:
 33922                           	opt stack 0
 33923                           tosu	equ	0xFFF
 33924                           tosh	equ	0xFFE
 33925                           tosl	equ	0xFFD
 33926                           pclatu	equ	0xFFB
 33927                           pclath	equ	0xFFA
 33928                           tblptru	equ	0xFF8
 33929                           tblptrh	equ	0xFF7
 33930                           tblptrl	equ	0xFF6
 33931                           tablat	equ	0xFF5
 33932                           prodh	equ	0xFF4
 33933                           prodl	equ	0xFF3
 33934                           intcon	equ	0xFF2
 33935                           indf0	equ	0xFEF
 33936                           postinc0	equ	0xFEE
 33937                           fsr0h	equ	0xFEA
 33938                           fsr0l	equ	0xFE9
 33939                           wreg	equ	0xFE8
 33940                           indf1	equ	0xFE7
 33941                           postdec1	equ	0xFE5
 33942                           plusw1	equ	0xFE3
 33943                           fsr1h	equ	0xFE2
 33944                           fsr1l	equ	0xFE1
 33945                           indf2	equ	0xFDF
 33946                           postinc2	equ	0xFDE
 33947                           postdec2	equ	0xFDD
 33948                           plusw2	equ	0xFDB
 33949                           fsr2h	equ	0xFDA
 33950                           fsr2l	equ	0xFD9
 33951                           status	equ	0xFD8
 33952                           
 33953 ;; *************** function _USBSuspend *****************
 33954 ;; Defined at:
 33955 ;;		line 2247 in file "usb_device.c"
 33956 ;; Parameters:    Size  Location     Type
 33957 ;;		None
 33958 ;; Auto vars:     Size  Location     Type
 33959 ;;		None
 33960 ;; Return value:  Size  Location     Type
 33961 ;;                  1    wreg      void 
 33962 ;; Registers used:
 33963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33964 ;; Tracked objects:
 33965 ;;		On entry : 0/0
 33966 ;;		On exit  : 0/0
 33967 ;;		Unchanged: 0/0
 33968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33973 ;;Total ram usage:        0 bytes
 33974 ;; Hardware stack levels used:    1
 33975 ;; Hardware stack levels required when called:    4
 33976 ;; This function calls:
 33977 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 33978 ;; This function is called by:
 33979 ;;		_USBDeviceTasks
 33980 ;; This function uses a non-reentrant model
 33981 ;;
 33982                           
 33983                           	psect	text123
 33984  011FF6                     __ptext123:
 33985                           	opt stack 0
 33986  011FF6                     _USBSuspend:
 33987                           	opt stack 12
 33988                           
 33989                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 33990                           
 33991                           ; BSR set to: 1
 33992                           ;incstack = 0
 33993  011FF6  010F               	movlb	15	; () banked
 33994  011FF8  8536               	bsf	54,2,b	;volatile
 33995                           
 33996                           ; BSR set to: 15
 33997                           ;usb_device.c: 2273: (UIR &= 0xEF);
 33998  011FFA  9862               	bcf	3938,4,c	;volatile
 33999                           
 34000                           ; BSR set to: 15
 34001                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 34002  011FFC  8265               	bsf	3941,1,c	;volatile
 34003                           
 34004                           ; BSR set to: 15
 34005                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 34006  011FFE  0E01               	movlw	1
 34007  012000  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 34008                           
 34009                           ; BSR set to: 15
 34010                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 34011  012002  0E00               	movlw	0
 34012  012004  0101               	movlb	1	; () banked
 34013  012006  6F83               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 34014                           
 34015                           ; BSR set to: 1
 34016                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 34017  012008  0E00               	movlw	0
 34018  01200A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 34019  01200C  0E75               	movlw	117
 34020  01200E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 34021  012010  0E00               	movlw	0
 34022  012012  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 34023  012014  0E00               	movlw	0
 34024  012016  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 34025  012018  0E00               	movlw	0
 34026  01201A  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 34027  01201C  0E00               	movlw	0
 34028  01201E  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 34029  012020  ECE7  F086         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 34030  012024  0012               	return		;funcret
 34031  012026                     __end_of_USBSuspend:
 34032                           	opt stack 0
 34033                           tosu	equ	0xFFF
 34034                           tosh	equ	0xFFE
 34035                           tosl	equ	0xFFD
 34036                           pclatu	equ	0xFFB
 34037                           pclath	equ	0xFFA
 34038                           tblptru	equ	0xFF8
 34039                           tblptrh	equ	0xFF7
 34040                           tblptrl	equ	0xFF6
 34041                           tablat	equ	0xFF5
 34042                           prodh	equ	0xFF4
 34043                           prodl	equ	0xFF3
 34044                           intcon	equ	0xFF2
 34045                           indf0	equ	0xFEF
 34046                           postinc0	equ	0xFEE
 34047                           fsr0h	equ	0xFEA
 34048                           fsr0l	equ	0xFE9
 34049                           wreg	equ	0xFE8
 34050                           indf1	equ	0xFE7
 34051                           postdec1	equ	0xFE5
 34052                           plusw1	equ	0xFE3
 34053                           fsr1h	equ	0xFE2
 34054                           fsr1l	equ	0xFE1
 34055                           indf2	equ	0xFDF
 34056                           postinc2	equ	0xFDE
 34057                           postdec2	equ	0xFDD
 34058                           plusw2	equ	0xFDB
 34059                           fsr2h	equ	0xFDA
 34060                           fsr2l	equ	0xFD9
 34061                           status	equ	0xFD8
 34062                           
 34063 ;; *************** function _USBStallHandler *****************
 34064 ;; Defined at:
 34065 ;;		line 2204 in file "usb_device.c"
 34066 ;; Parameters:    Size  Location     Type
 34067 ;;		None
 34068 ;; Auto vars:     Size  Location     Type
 34069 ;;		None
 34070 ;; Return value:  Size  Location     Type
 34071 ;;                  1    wreg      void 
 34072 ;; Registers used:
 34073 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34074 ;; Tracked objects:
 34075 ;;		On entry : 0/0
 34076 ;;		On exit  : 0/0
 34077 ;;		Unchanged: 0/0
 34078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34083 ;;Total ram usage:        1 bytes
 34084 ;; Hardware stack levels used:    1
 34085 ;; This function calls:
 34086 ;;		Nothing
 34087 ;; This function is called by:
 34088 ;;		_USBDeviceTasks
 34089 ;; This function uses a non-reentrant model
 34090 ;;
 34091                           
 34092                           	psect	text124
 34093  011C76                     __ptext124:
 34094                           	opt stack 0
 34095  011C76                     _USBStallHandler:
 34096                           	opt stack 16
 34097                           
 34098                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 34099                           
 34100                           ;incstack = 0
 34101  011C76  010F               	movlb	15	; () banked
 34102  011C78  A126               	btfss	38,0,b	;volatile
 34103  011C7A  D01D               	goto	i2l307
 34104                           
 34105                           ; BSR set to: 15
 34106                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 34107  011C7C  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 34108  011C80  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 34109  011C84  0E80               	movlw	128
 34110  011C86  18DE               	xorwf	postinc2,w,c
 34111  011C88  A4D8               	btfss	status,2,c
 34112  011C8A  D014               	goto	i2l308
 34113                           
 34114                           ; BSR set to: 15
 34115  011C8C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 34116  011C90  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34117  011C94  0E84               	movlw	132
 34118  011C96  18DE               	xorwf	postinc2,w,c
 34119  011C98  A4D8               	btfss	status,2,c
 34120  011C9A  D00C               	goto	i2l308
 34121                           
 34122                           ; BSR set to: 15
 34123                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 34124  011C9C  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 34125  011CA0  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 34126  011CA4  0E0C               	movlw	12
 34127  011CA6  6EDF               	movwf	indf2,c
 34128                           
 34129                           ; BSR set to: 15
 34130                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 34131  011CA8  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 34132  011CAC  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 34133  011CB0  0E00               	movlw	0
 34134  011CB2  8EDB               	bsf	plusw2,7,c
 34135  011CB4                     i2l308:
 34136                           
 34137                           ; BSR set to: 15
 34138                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 34139                           
 34140                           ; BSR set to: 15
 34141  011CB4  9126               	bcf	38,0,b	;volatile
 34142  011CB6                     i2l307:
 34143                           
 34144                           ; BSR set to: 15
 34145                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 34146  011CB6  9A62               	bcf	3938,5,c	;volatile
 34147                           
 34148                           ; BSR set to: 15
 34149  011CB8  0012               	return		;funcret
 34150  011CBA                     __end_of_USBStallHandler:
 34151                           	opt stack 0
 34152                           tosu	equ	0xFFF
 34153                           tosh	equ	0xFFE
 34154                           tosl	equ	0xFFD
 34155                           pclatu	equ	0xFFB
 34156                           pclath	equ	0xFFA
 34157                           tblptru	equ	0xFF8
 34158                           tblptrh	equ	0xFF7
 34159                           tblptrl	equ	0xFF6
 34160                           tablat	equ	0xFF5
 34161                           prodh	equ	0xFF4
 34162                           prodl	equ	0xFF3
 34163                           intcon	equ	0xFF2
 34164                           indf0	equ	0xFEF
 34165                           postinc0	equ	0xFEE
 34166                           fsr0h	equ	0xFEA
 34167                           fsr0l	equ	0xFE9
 34168                           wreg	equ	0xFE8
 34169                           indf1	equ	0xFE7
 34170                           postdec1	equ	0xFE5
 34171                           plusw1	equ	0xFE3
 34172                           fsr1h	equ	0xFE2
 34173                           fsr1l	equ	0xFE1
 34174                           indf2	equ	0xFDF
 34175                           postinc2	equ	0xFDE
 34176                           postdec2	equ	0xFDD
 34177                           plusw2	equ	0xFDB
 34178                           fsr2h	equ	0xFDA
 34179                           fsr2l	equ	0xFD9
 34180                           status	equ	0xFD8
 34181                           
 34182 ;; *************** function _USBIncrement1msInternalTimers *****************
 34183 ;; Defined at:
 34184 ;;		line 3027 in file "usb_device.c"
 34185 ;; Parameters:    Size  Location     Type
 34186 ;;		None
 34187 ;; Auto vars:     Size  Location     Type
 34188 ;;		None
 34189 ;; Return value:  Size  Location     Type
 34190 ;;                  1    wreg      void 
 34191 ;; Registers used:
 34192 ;;		wreg, status,2, status,0
 34193 ;; Tracked objects:
 34194 ;;		On entry : 0/0
 34195 ;;		On exit  : 0/0
 34196 ;;		Unchanged: 0/0
 34197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34202 ;;Total ram usage:        0 bytes
 34203 ;; Hardware stack levels used:    1
 34204 ;; This function calls:
 34205 ;;		Nothing
 34206 ;; This function is called by:
 34207 ;;		_USBDeviceTasks
 34208 ;; This function uses a non-reentrant model
 34209 ;;
 34210                           
 34211                           	psect	text125
 34212  01222E                     __ptext125:
 34213                           	opt stack 0
 34214  01222E                     _USBIncrement1msInternalTimers:
 34215                           	opt stack 16
 34216                           
 34217                           ;usb_device.c: 3035: USB1msTickCount++;
 34218                           
 34219                           ; BSR set to: 15
 34220                           ;incstack = 0
 34221  01222E  0E01               	movlw	1
 34222  012230  0101               	movlb	1	; () banked
 34223  012232  275F               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 34224  012234  0E00               	movlw	0
 34225  012236  2360               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 34226  012238  2361               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 34227  01223A  2362               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 34228                           
 34229                           ; BSR set to: 1
 34230                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 34231  01223C  5027               	movf	_USBBusIsSuspended,w,c	;volatile
 34232  01223E  A4D8               	btfss	status,2,c
 34233  012240  0012               	return	
 34234                           
 34235                           ; BSR set to: 1
 34236                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 34237  012242  2B83               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 34238                           
 34239                           ; BSR set to: 1
 34240                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 34241  012244  5183               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 34242  012246  A4D8               	btfss	status,2,c
 34243  012248  0012               	return	
 34244                           
 34245                           ; BSR set to: 1
 34246                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 34247  01224A  6983               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 34248                           
 34249                           ; BSR set to: 1
 34250  01224C  0012               	return	
 34251  01224E                     __end_of_USBIncrement1msInternalTimers:
 34252                           	opt stack 0
 34253                           tosu	equ	0xFFF
 34254                           tosh	equ	0xFFE
 34255                           tosl	equ	0xFFD
 34256                           pclatu	equ	0xFFB
 34257                           pclath	equ	0xFFA
 34258                           tblptru	equ	0xFF8
 34259                           tblptrh	equ	0xFF7
 34260                           tblptrl	equ	0xFF6
 34261                           tablat	equ	0xFF5
 34262                           prodh	equ	0xFF4
 34263                           prodl	equ	0xFF3
 34264                           intcon	equ	0xFF2
 34265                           indf0	equ	0xFEF
 34266                           postinc0	equ	0xFEE
 34267                           fsr0h	equ	0xFEA
 34268                           fsr0l	equ	0xFE9
 34269                           wreg	equ	0xFE8
 34270                           indf1	equ	0xFE7
 34271                           postdec1	equ	0xFE5
 34272                           plusw1	equ	0xFE3
 34273                           fsr1h	equ	0xFE2
 34274                           fsr1l	equ	0xFE1
 34275                           indf2	equ	0xFDF
 34276                           postinc2	equ	0xFDE
 34277                           postdec2	equ	0xFDD
 34278                           plusw2	equ	0xFDB
 34279                           fsr2h	equ	0xFDA
 34280                           fsr2l	equ	0xFD9
 34281                           status	equ	0xFD8
 34282                           
 34283 ;; *************** function _USBCtrlEPService *****************
 34284 ;; Defined at:
 34285 ;;		line 2374 in file "usb_device.c"
 34286 ;; Parameters:    Size  Location     Type
 34287 ;;		None
 34288 ;; Auto vars:     Size  Location     Type
 34289 ;;		None
 34290 ;; Return value:  Size  Location     Type
 34291 ;;                  1    wreg      void 
 34292 ;; Registers used:
 34293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34294 ;; Tracked objects:
 34295 ;;		On entry : 0/0
 34296 ;;		On exit  : 0/0
 34297 ;;		Unchanged: 0/0
 34298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34303 ;;Total ram usage:        1 bytes
 34304 ;; Hardware stack levels used:    1
 34305 ;; Hardware stack levels required when called:    7
 34306 ;; This function calls:
 34307 ;;		_USBCtrlTrfInHandler
 34308 ;;		_USBCtrlTrfOutHandler
 34309 ;;		_USBCtrlTrfSetupHandler
 34310 ;;		i2_memcpy
 34311 ;; This function is called by:
 34312 ;;		_USBDeviceTasks
 34313 ;; This function uses a non-reentrant model
 34314 ;;
 34315                           
 34316                           	psect	text126
 34317  010AF6                     __ptext126:
 34318                           	opt stack 0
 34319  010AF6                     _USBCtrlEPService:
 34320                           	opt stack 9
 34321                           
 34322                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 34323                           
 34324                           ; BSR set to: 1
 34325                           ;incstack = 0
 34326  010AF6  0E2D               	movlw	45
 34327  010AF8  6E24               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 34328                           
 34329                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 34330  010AFA  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 34331  010AFE  0EFD               	movlw	253
 34332  010B00  164B               	andwf	??_USBCtrlEPService,f,c
 34333  010B02  A4D8               	btfss	status,2,c
 34334  010B04  D03B               	goto	i2l321
 34335                           
 34336                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 34337  010B06  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 34338  010B0A  90D8               	bcf	status,0,c
 34339  010B0C  324B               	rrcf	??_USBCtrlEPService,f,c
 34340  010B0E  0E3F               	movlw	63
 34341  010B10  164B               	andwf	??_USBCtrlEPService,f,c
 34342  010B12  504B               	movf	??_USBCtrlEPService,w,c
 34343  010B14  0D04               	mullw	4
 34344  010B16  0E00               	movlw	0
 34345  010B18  24F3               	addwf	prodl,w,c
 34346  010B1A  6E1C               	movwf	_pBDTEntryEP0OutCurrent,c
 34347  010B1C  0E0D               	movlw	13
 34348  010B1E  20F4               	addwfc	prodh,w,c
 34349  010B20  6E1D               	movwf	_pBDTEntryEP0OutCurrent+1,c
 34350                           
 34351                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 34352  010B22  C01C  F01A         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 34353  010B26  C01D  F01B         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 34354                           
 34355                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 34356  010B2A  0E04               	movlw	4
 34357  010B2C  181A               	xorwf	_pBDTEntryEP0OutNext,w,c
 34358  010B2E  6E1A               	movwf	_pBDTEntryEP0OutNext,c
 34359  010B30  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 34360  010B32  6E1B               	movwf	_pBDTEntryEP0OutNext+1,c
 34361                           
 34362                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 34363  010B34  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 34364  010B38  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 34365  010B3C  30DF               	rrcf	indf2,w,c
 34366  010B3E  32E8               	rrcf	wreg,f,c
 34367  010B40  0B0F               	andlw	15
 34368  010B42  0A0D               	xorlw	13
 34369  010B44  A4D8               	btfss	status,2,c
 34370  010B46  D017               	goto	i2l322
 34371                           
 34372                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 34373  010B48  0E30               	movlw	48
 34374  010B4A  6E2E               	movwf	i2memcpy@d1,c
 34375  010B4C  0E0D               	movlw	13
 34376  010B4E  6E2F               	movwf	i2memcpy@d1+1,c
 34377  010B50  EE20 F002          	lfsr	2,2
 34378  010B54  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 34379  010B56  26D9               	addwf	fsr2l,f,c
 34380  010B58  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 34381  010B5A  22DA               	addwfc	fsr2h,f,c
 34382  010B5C  CFDE F030          	movff	postinc2,i2memcpy@s1
 34383  010B60  CFDD F031          	movff	postdec2,i2memcpy@s1+1
 34384  010B64  0E00               	movlw	0
 34385  010B66  6E33               	movwf	i2memcpy@n+1,c
 34386  010B68  0E08               	movlw	8
 34387  010B6A  6E32               	movwf	i2memcpy@n,c
 34388  010B6C  EC93  F08A         	call	i2_memcpy	;wreg free
 34389                           
 34390                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 34391  010B70  EC58  F086         	call	_USBCtrlTrfSetupHandler	;wreg free
 34392                           
 34393                           ;usb_device.c: 2411: }
 34394  010B74  0012               	return	
 34395  010B76                     i2l322:
 34396                           
 34397                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 34398  010B76  ECC1  F08A         	call	_USBCtrlTrfOutHandler	;wreg free
 34399                           
 34400                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 34401  010B7A  0012               	return	
 34402  010B7C                     i2l321:
 34403                           
 34404                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 34405  010B7C  502C               	movf	_USTATcopy,w,c	;volatile
 34406  010B7E  0BFD               	andlw	253
 34407  010B80  0A04               	xorlw	4
 34408  010B82  A4D8               	btfss	status,2,c
 34409  010B84  0012               	return	
 34410                           
 34411                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 34412  010B86  EC82  F081         	call	_USBCtrlTrfInHandler	;wreg free
 34413  010B8A  0012               	return	
 34414  010B8C                     __end_of_USBCtrlEPService:
 34415                           	opt stack 0
 34416                           tosu	equ	0xFFF
 34417                           tosh	equ	0xFFE
 34418                           tosl	equ	0xFFD
 34419                           pclatu	equ	0xFFB
 34420                           pclath	equ	0xFFA
 34421                           tblptru	equ	0xFF8
 34422                           tblptrh	equ	0xFF7
 34423                           tblptrl	equ	0xFF6
 34424                           tablat	equ	0xFF5
 34425                           prodh	equ	0xFF4
 34426                           prodl	equ	0xFF3
 34427                           intcon	equ	0xFF2
 34428                           indf0	equ	0xFEF
 34429                           postinc0	equ	0xFEE
 34430                           fsr0h	equ	0xFEA
 34431                           fsr0l	equ	0xFE9
 34432                           wreg	equ	0xFE8
 34433                           indf1	equ	0xFE7
 34434                           postdec1	equ	0xFE5
 34435                           plusw1	equ	0xFE3
 34436                           fsr1h	equ	0xFE2
 34437                           fsr1l	equ	0xFE1
 34438                           indf2	equ	0xFDF
 34439                           postinc2	equ	0xFDE
 34440                           postdec2	equ	0xFDD
 34441                           plusw2	equ	0xFDB
 34442                           fsr2h	equ	0xFDA
 34443                           fsr2l	equ	0xFD9
 34444                           status	equ	0xFD8
 34445                           
 34446 ;; *************** function i2_memcpy *****************
 34447 ;; Defined at:
 34448 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 34449 ;; Parameters:    Size  Location     Type
 34450 ;;  d1              2    0[COMRAM] PTR void 
 34451 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 34452 ;;		 -> msd_buffer(512), SetupPkt(8), 
 34453 ;;  s1              2    2[COMRAM] PTR const void 
 34454 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 34455 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 34456 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 34457 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 34458 ;;		 -> dc_main(80), ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), 
 34459 ;;		 -> RAM(3759), SetupPkt(8), 
 34460 ;;  n               2    4[COMRAM] unsigned int 
 34461 ;; Auto vars:     Size  Location     Type
 34462 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 34463 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 34464 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 34465 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 34466 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 34467 ;;		 -> dc_main(80), ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), 
 34468 ;;		 -> RAM(3759), SetupPkt(8), 
 34469 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 34470 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 34471 ;;		 -> msd_buffer(512), SetupPkt(8), 
 34472 ;;  memcpy          1   10[COMRAM] unsigned char 
 34473 ;; Return value:  Size  Location     Type
 34474 ;;                  2    0[COMRAM] PTR void 
 34475 ;; Registers used:
 34476 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 34477 ;; Tracked objects:
 34478 ;;		On entry : 0/0
 34479 ;;		On exit  : 0/0
 34480 ;;		Unchanged: 0/0
 34481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34482 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34483 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34485 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34486 ;;Total ram usage:       11 bytes
 34487 ;; Hardware stack levels used:    1
 34488 ;; This function calls:
 34489 ;;		Nothing
 34490 ;; This function is called by:
 34491 ;;		_USBCtrlEPService
 34492 ;; This function uses a non-reentrant model
 34493 ;;
 34494                           
 34495                           	psect	text127
 34496  011526                     __ptext127:
 34497                           	opt stack 0
 34498  011526                     i2_memcpy:
 34499                           	opt stack 15
 34500                           
 34501                           ;incstack = 0
 34502  011526  C030  F036         	movff	i2memcpy@s1,i2memcpy@s
 34503  01152A  C031  F037         	movff	i2memcpy@s1+1,i2memcpy@s+1
 34504  01152E  C02E  F034         	movff	i2memcpy@d1,i2memcpy@d
 34505  011532  C02F  F035         	movff	i2memcpy@d1+1,i2memcpy@d+1
 34506  011536  D01C               	goto	i2l3326
 34507  011538                     i2l13382:
 34508  011538  C036  FFF6         	movff	i2memcpy@s,tblptrl
 34509  01153C  C037  FFF7         	movff	i2memcpy@s+1,tblptrh
 34510  011540  0E00               	movlw	low (__mediumconst shr (0+16))
 34511  011542  6EF8               	movwf	tblptru,c
 34512  011544  0E0E               	movlw	(high __ramtop+-1)
 34513  011546  64F7               	cpfsgt	tblptrh,c
 34514  011548  D003               	bra	i2u1188_47
 34515  01154A  0008               	tblrd		*
 34516  01154C  50F5               	movf	tablat,w,c
 34517  01154E  D005               	bra	i2u1188_40
 34518  011550                     i2u1188_47:
 34519  011550  CFF6 FFE9          	movff	tblptrl,fsr0l
 34520  011554  CFF7 FFEA          	movff	tblptrh,fsr0h
 34521  011558  50EF               	movf	indf0,w,c
 34522  01155A                     i2u1188_40:
 34523  01155A  6E38               	movwf	i2memcpy@tmp,c
 34524  01155C  4A36               	infsnz	i2memcpy@s,f,c
 34525  01155E  2A37               	incf	i2memcpy@s+1,f,c
 34526  011560  C034  FFD9         	movff	i2memcpy@d,fsr2l
 34527  011564  C035  FFDA         	movff	i2memcpy@d+1,fsr2h
 34528  011568  C038  FFDF         	movff	i2memcpy@tmp,indf2
 34529  01156C  4A34               	infsnz	i2memcpy@d,f,c
 34530  01156E  2A35               	incf	i2memcpy@d+1,f,c
 34531  011570                     i2l3326:
 34532  011570  0632               	decf	i2memcpy@n,f,c
 34533  011572  A0D8               	btfss	status,0,c
 34534  011574  0633               	decf	i2memcpy@n+1,f,c
 34535  011576  2832               	incf	i2memcpy@n,w,c
 34536  011578  E1DF               	bnz	i2l13382
 34537  01157A  2833               	incf	i2memcpy@n+1,w,c
 34538  01157C  B4D8               	btfsc	status,2,c
 34539  01157E  0012               	return	
 34540  011580  D7DB               	goto	i2l3327
 34541  011582                     __end_ofi2_memcpy:
 34542                           	opt stack 0
 34543                           tosu	equ	0xFFF
 34544                           tosh	equ	0xFFE
 34545                           tosl	equ	0xFFD
 34546                           pclatu	equ	0xFFB
 34547                           pclath	equ	0xFFA
 34548                           tblptru	equ	0xFF8
 34549                           tblptrh	equ	0xFF7
 34550                           tblptrl	equ	0xFF6
 34551                           tablat	equ	0xFF5
 34552                           prodh	equ	0xFF4
 34553                           prodl	equ	0xFF3
 34554                           intcon	equ	0xFF2
 34555                           indf0	equ	0xFEF
 34556                           postinc0	equ	0xFEE
 34557                           fsr0h	equ	0xFEA
 34558                           fsr0l	equ	0xFE9
 34559                           wreg	equ	0xFE8
 34560                           indf1	equ	0xFE7
 34561                           postdec1	equ	0xFE5
 34562                           plusw1	equ	0xFE3
 34563                           fsr1h	equ	0xFE2
 34564                           fsr1l	equ	0xFE1
 34565                           indf2	equ	0xFDF
 34566                           postinc2	equ	0xFDE
 34567                           postdec2	equ	0xFDD
 34568                           plusw2	equ	0xFDB
 34569                           fsr2h	equ	0xFDA
 34570                           fsr2l	equ	0xFD9
 34571                           status	equ	0xFD8
 34572                           
 34573 ;; *************** function _USBCtrlTrfSetupHandler *****************
 34574 ;; Defined at:
 34575 ;;		line 2467 in file "usb_device.c"
 34576 ;; Parameters:    Size  Location     Type
 34577 ;;		None
 34578 ;; Auto vars:     Size  Location     Type
 34579 ;;		None
 34580 ;; Return value:  Size  Location     Type
 34581 ;;                  1    wreg      void 
 34582 ;; Registers used:
 34583 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34584 ;; Tracked objects:
 34585 ;;		On entry : 0/0
 34586 ;;		On exit  : 0/0
 34587 ;;		Unchanged: 0/0
 34588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34593 ;;Total ram usage:        0 bytes
 34594 ;; Hardware stack levels used:    1
 34595 ;; Hardware stack levels required when called:    6
 34596 ;; This function calls:
 34597 ;;		_USBCheckStdRequest
 34598 ;;		_USBCtrlEPServiceComplete
 34599 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 34600 ;; This function is called by:
 34601 ;;		_USBCtrlEPService
 34602 ;; This function uses a non-reentrant model
 34603 ;;
 34604                           
 34605                           	psect	text128
 34606  010CB0                     __ptext128:
 34607                           	opt stack 0
 34608  010CB0                     _USBCtrlTrfSetupHandler:
 34609                           	opt stack 9
 34610                           
 34611                           ;usb_device.c: 2472: shortPacketStatus = 0;
 34612                           
 34613                           ;incstack = 0
 34614  010CB0  0E00               	movlw	0
 34615  010CB2  6E2A               	movwf	_shortPacketStatus,c	;volatile
 34616                           
 34617                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 34618  010CB4  0E00               	movlw	0
 34619  010CB6  6E23               	movwf	_USBDeferStatusStagePacket,c	;volatile
 34620                           
 34621                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 34622  010CB8  0E00               	movlw	0
 34623  010CBA  0101               	movlb	1	; () banked
 34624  010CBC  6F85               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 34625                           
 34626                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 34627  010CBE  0E00               	movlw	0
 34628  010CC0  6F84               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 34629                           
 34630                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 34631  010CC2  0E00               	movlw	0
 34632  010CC4  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 34633                           
 34634                           ;usb_device.c: 2477: controlTransferState = 0;
 34635  010CC6  0E00               	movlw	0
 34636  010CC8  6E29               	movwf	_controlTransferState,c	;volatile
 34637                           
 34638                           ; BSR set to: 1
 34639                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 34640  010CCA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 34641  010CCE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34642  010CD2  0E7F               	movlw	127
 34643  010CD4  16DF               	andwf	indf2,f,c
 34644                           
 34645                           ; BSR set to: 1
 34646                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 34647  010CD6  0E04               	movlw	4
 34648  010CD8  1810               	xorwf	_pBDTEntryIn,w,c
 34649  010CDA  6E10               	movwf	_pBDTEntryIn,c
 34650  010CDC  5011               	movf	_pBDTEntryIn+1,w,c
 34651  010CDE  6E11               	movwf	_pBDTEntryIn+1,c
 34652                           
 34653                           ; BSR set to: 1
 34654                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 34655  010CE0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 34656  010CE4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34657  010CE8  0E7F               	movlw	127
 34658  010CEA  16DF               	andwf	indf2,f,c
 34659                           
 34660                           ; BSR set to: 1
 34661                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 34662  010CEC  0E04               	movlw	4
 34663  010CEE  1810               	xorwf	_pBDTEntryIn,w,c
 34664  010CF0  6E10               	movwf	_pBDTEntryIn,c
 34665  010CF2  5011               	movf	_pBDTEntryIn+1,w,c
 34666  010CF4  6E11               	movwf	_pBDTEntryIn+1,c
 34667                           
 34668                           ; BSR set to: 1
 34669                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 34670  010CF6  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34671  010CFA  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34672  010CFE  0E7F               	movlw	127
 34673  010D00  16DF               	andwf	indf2,f,c
 34674                           
 34675                           ; BSR set to: 1
 34676                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 34677  010D02  0E00               	movlw	0
 34678  010D04  6E0D               	movwf	_inPipes+3,c	;volatile
 34679                           
 34680                           ; BSR set to: 1
 34681                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 34682  010D06  0E00               	movlw	0
 34683  010D08  6E0F               	movwf	_inPipes+5,c	;volatile
 34684  010D0A  0E00               	movlw	0
 34685  010D0C  6E0E               	movwf	_inPipes+4,c	;volatile
 34686                           
 34687                           ; BSR set to: 1
 34688                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 34689  010D0E  0E00               	movlw	0
 34690  010D10  6E04               	movwf	_outPipes+3,c	;volatile
 34691                           
 34692                           ; BSR set to: 1
 34693                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 34694  010D12  0E00               	movlw	0
 34695  010D14  6E06               	movwf	_outPipes+5,c	;volatile
 34696  010D16  0E00               	movlw	0
 34697  010D18  6E05               	movwf	_outPipes+4,c	;volatile
 34698                           
 34699                           ; BSR set to: 1
 34700                           ;usb_device.c: 2502: USBCheckStdRequest();
 34701  010D1A  EC51  F07E         	call	_USBCheckStdRequest	;wreg free
 34702                           
 34703                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 34704  010D1E  0E00               	movlw	0
 34705  010D20  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 34706  010D22  0E03               	movlw	3
 34707  010D24  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 34708  010D26  0E00               	movlw	0
 34709  010D28  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 34710  010D2A  0E00               	movlw	0
 34711  010D2C  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 34712  010D2E  0E00               	movlw	0
 34713  010D30  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 34714  010D32  0E00               	movlw	0
 34715  010D34  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 34716  010D36  ECE7  F086         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 34717                           
 34718                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 34719  010D3A  ECA4  F07B         	call	_USBCtrlEPServiceComplete	;wreg free
 34720  010D3E  0012               	return		;funcret
 34721  010D40                     __end_of_USBCtrlTrfSetupHandler:
 34722                           	opt stack 0
 34723                           tosu	equ	0xFFF
 34724                           tosh	equ	0xFFE
 34725                           tosl	equ	0xFFD
 34726                           pclatu	equ	0xFFB
 34727                           pclath	equ	0xFFA
 34728                           tblptru	equ	0xFF8
 34729                           tblptrh	equ	0xFF7
 34730                           tblptrl	equ	0xFF6
 34731                           tablat	equ	0xFF5
 34732                           prodh	equ	0xFF4
 34733                           prodl	equ	0xFF3
 34734                           intcon	equ	0xFF2
 34735                           indf0	equ	0xFEF
 34736                           postinc0	equ	0xFEE
 34737                           fsr0h	equ	0xFEA
 34738                           fsr0l	equ	0xFE9
 34739                           wreg	equ	0xFE8
 34740                           indf1	equ	0xFE7
 34741                           postdec1	equ	0xFE5
 34742                           plusw1	equ	0xFE3
 34743                           fsr1h	equ	0xFE2
 34744                           fsr1l	equ	0xFE1
 34745                           indf2	equ	0xFDF
 34746                           postinc2	equ	0xFDE
 34747                           postdec2	equ	0xFDD
 34748                           plusw2	equ	0xFDB
 34749                           fsr2h	equ	0xFDA
 34750                           fsr2l	equ	0xFD9
 34751                           status	equ	0xFD8
 34752                           
 34753 ;; *************** function _USBCtrlEPServiceComplete *****************
 34754 ;; Defined at:
 34755 ;;		line 1618 in file "usb_device.c"
 34756 ;; Parameters:    Size  Location     Type
 34757 ;;		None
 34758 ;; Auto vars:     Size  Location     Type
 34759 ;;		None
 34760 ;; Return value:  Size  Location     Type
 34761 ;;                  1    wreg      void 
 34762 ;; Registers used:
 34763 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34764 ;; Tracked objects:
 34765 ;;		On entry : 0/0
 34766 ;;		On exit  : 0/0
 34767 ;;		Unchanged: 0/0
 34768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34773 ;;Total ram usage:        0 bytes
 34774 ;; Hardware stack levels used:    1
 34775 ;; Hardware stack levels required when called:    2
 34776 ;; This function calls:
 34777 ;;		_USBCtrlEPAllowDataStage
 34778 ;;		_USBCtrlEPAllowStatusStage
 34779 ;; This function is called by:
 34780 ;;		_USBCtrlTrfSetupHandler
 34781 ;; This function uses a non-reentrant model
 34782 ;;
 34783                           
 34784                           	psect	text129
 34785  00F748                     __ptext129:
 34786                           	opt stack 0
 34787  00F748                     _USBCtrlEPServiceComplete:
 34788                           	opt stack 12
 34789                           
 34790                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 34791                           
 34792                           ;incstack = 0
 34793  00F748  9865               	bcf	3941,4,c	;volatile
 34794                           
 34795                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 34796  00F74A  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 34797  00F74C  D03A               	goto	i2l231
 34798                           
 34799                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 34800  00F74E  AE04               	btfss	_outPipes+3,7,c	;volatile
 34801  00F750  D00D               	goto	i2l232
 34802                           
 34803                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 34804  00F752  0E02               	movlw	2
 34805  00F754  6E29               	movwf	_controlTransferState,c	;volatile
 34806                           
 34807                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 34808  00F756  0101               	movlb	1	; () banked
 34809  00F758  5184               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 34810  00F75A  B4D8               	btfsc	status,2,c
 34811                           
 34812                           ; BSR set to: 1
 34813                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 34814  00F75C  EC2F  F085         	call	_USBCtrlEPAllowDataStage	;wreg free
 34815                           
 34816                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 34817  00F760  0E00               	movlw	0
 34818  00F762  0101               	movlb	1	; () banked
 34819  00F764  6F86               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 34820                           
 34821                           ; BSR set to: 1
 34822                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 34823  00F766  0E00               	movlw	0
 34824  00F768  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 34825                           
 34826                           ;usb_device.c: 1654: }
 34827  00F76A  0012               	return	
 34828  00F76C                     i2l232:
 34829                           
 34830                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 34831                           
 34832                           ; BSR set to: 1
 34833  00F76C  EE20 F001          	lfsr	2,1
 34834  00F770  501A               	movf	_pBDTEntryEP0OutNext,w,c
 34835  00F772  26D9               	addwf	fsr2l,f,c
 34836  00F774  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 34837  00F776  22DA               	addwfc	fsr2h,f,c
 34838  00F778  0E08               	movlw	8
 34839  00F77A  6EDF               	movwf	indf2,c
 34840                           
 34841                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 34842  00F77C  EE20 F002          	lfsr	2,2
 34843  00F780  501A               	movf	_pBDTEntryEP0OutNext,w,c
 34844  00F782  26D9               	addwf	fsr2l,f,c
 34845  00F784  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 34846  00F786  22DA               	addwfc	fsr2h,f,c
 34847  00F788  0E30               	movlw	48
 34848  00F78A  6EDE               	movwf	postinc2,c
 34849  00F78C  0E0D               	movlw	13
 34850  00F78E  6EDD               	movwf	postdec2,c
 34851                           
 34852                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 34853  00F790  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34854  00F794  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34855  00F798  0E0C               	movlw	12
 34856  00F79A  6EDF               	movwf	indf2,c
 34857                           
 34858                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 34859  00F79C  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34860  00F7A0  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34861  00F7A4  0E00               	movlw	0
 34862  00F7A6  8EDB               	bsf	plusw2,7,c
 34863                           
 34864                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 34865  00F7A8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 34866  00F7AC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34867  00F7B0  0E04               	movlw	4
 34868  00F7B2  6EDF               	movwf	indf2,c
 34869                           
 34870                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 34871  00F7B4  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 34872  00F7B8  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 34873  00F7BC  0E00               	movlw	0
 34874  00F7BE  8EDB               	bsf	plusw2,7,c
 34875                           
 34876                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 34877  00F7C0  0012               	return	
 34878  00F7C2                     i2l231:
 34879                           
 34880                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 34881  00F7C2  010D               	movlb	13	; () banked
 34882  00F7C4  AF30               	btfss	48,7,b	;volatile
 34883  00F7C6  D012               	goto	i2l236
 34884                           
 34885                           ; BSR set to: 13
 34886                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 34887  00F7C8  0E01               	movlw	1
 34888  00F7CA  6E29               	movwf	_controlTransferState,c	;volatile
 34889                           
 34890                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 34891  00F7CC  0101               	movlb	1	; () banked
 34892  00F7CE  5185               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 34893  00F7D0  B4D8               	btfsc	status,2,c
 34894                           
 34895                           ; BSR set to: 1
 34896                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 34897  00F7D2  EC2F  F085         	call	_USBCtrlEPAllowDataStage	;wreg free
 34898                           
 34899                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 34900  00F7D6  0E00               	movlw	0
 34901  00F7D8  0101               	movlb	1	; () banked
 34902  00F7DA  6F86               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 34903                           
 34904                           ; BSR set to: 1
 34905                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 34906  00F7DC  0E00               	movlw	0
 34907  00F7DE  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 34908                           
 34909                           ; BSR set to: 1
 34910                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 34911  00F7E0  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 34912  00F7E2  A4D8               	btfss	status,2,c
 34913  00F7E4  0012               	return	
 34914                           
 34915                           ; BSR set to: 1
 34916                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 34917  00F7E6  ECC1  F080         	call	_USBCtrlEPAllowStatusStage	;wreg free
 34918                           
 34919                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 34920  00F7EA  0012               	return	
 34921  00F7EC                     i2l236:
 34922                           
 34923                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 34924  00F7EC  0E02               	movlw	2
 34925  00F7EE  6E29               	movwf	_controlTransferState,c	;volatile
 34926                           
 34927                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 34928  00F7F0  EE20 F001          	lfsr	2,1
 34929  00F7F4  501A               	movf	_pBDTEntryEP0OutNext,w,c
 34930  00F7F6  26D9               	addwf	fsr2l,f,c
 34931  00F7F8  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 34932  00F7FA  22DA               	addwfc	fsr2h,f,c
 34933  00F7FC  0E08               	movlw	8
 34934  00F7FE  6EDF               	movwf	indf2,c
 34935                           
 34936                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 34937  00F800  EE20 F002          	lfsr	2,2
 34938  00F804  501A               	movf	_pBDTEntryEP0OutNext,w,c
 34939  00F806  26D9               	addwf	fsr2l,f,c
 34940  00F808  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 34941  00F80A  22DA               	addwfc	fsr2h,f,c
 34942  00F80C  0E30               	movlw	48
 34943  00F80E  6EDE               	movwf	postinc2,c
 34944  00F810  0E0D               	movlw	13
 34945  00F812  6EDD               	movwf	postdec2,c
 34946                           
 34947                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 34948  00F814  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34949  00F818  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34950  00F81C  0E04               	movlw	4
 34951  00F81E  6EDF               	movwf	indf2,c
 34952                           
 34953                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 34954  00F820  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 34955  00F824  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 34956  00F828  0E00               	movlw	0
 34957  00F82A  8EDB               	bsf	plusw2,7,c
 34958                           
 34959                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 34960  00F82C  0E00               	movlw	0
 34961  00F82E  0101               	movlb	1	; () banked
 34962  00F830  6F86               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 34963                           
 34964                           ; BSR set to: 1
 34965                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 34966  00F832  0E00               	movlw	0
 34967  00F834  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 34968                           
 34969                           ; BSR set to: 1
 34970                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 34971  00F836  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 34972  00F838  A4D8               	btfss	status,2,c
 34973  00F83A  0012               	return	
 34974                           
 34975                           ; BSR set to: 1
 34976                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 34977  00F83C  ECC1  F080         	call	_USBCtrlEPAllowStatusStage	;wreg free
 34978  00F840  0012               	return	
 34979  00F842                     __end_of_USBCtrlEPServiceComplete:
 34980                           	opt stack 0
 34981                           tosu	equ	0xFFF
 34982                           tosh	equ	0xFFE
 34983                           tosl	equ	0xFFD
 34984                           pclatu	equ	0xFFB
 34985                           pclath	equ	0xFFA
 34986                           tblptru	equ	0xFF8
 34987                           tblptrh	equ	0xFF7
 34988                           tblptrl	equ	0xFF6
 34989                           tablat	equ	0xFF5
 34990                           prodh	equ	0xFF4
 34991                           prodl	equ	0xFF3
 34992                           intcon	equ	0xFF2
 34993                           indf0	equ	0xFEF
 34994                           postinc0	equ	0xFEE
 34995                           fsr0h	equ	0xFEA
 34996                           fsr0l	equ	0xFE9
 34997                           wreg	equ	0xFE8
 34998                           indf1	equ	0xFE7
 34999                           postdec1	equ	0xFE5
 35000                           plusw1	equ	0xFE3
 35001                           fsr1h	equ	0xFE2
 35002                           fsr1l	equ	0xFE1
 35003                           indf2	equ	0xFDF
 35004                           postinc2	equ	0xFDE
 35005                           postdec2	equ	0xFDD
 35006                           plusw2	equ	0xFDB
 35007                           fsr2h	equ	0xFDA
 35008                           fsr2l	equ	0xFD9
 35009                           status	equ	0xFD8
 35010                           
 35011 ;; *************** function _USBCtrlEPAllowDataStage *****************
 35012 ;; Defined at:
 35013 ;;		line 1490 in file "usb_device.c"
 35014 ;; Parameters:    Size  Location     Type
 35015 ;;		None
 35016 ;; Auto vars:     Size  Location     Type
 35017 ;;		None
 35018 ;; Return value:  Size  Location     Type
 35019 ;;                  1    wreg      void 
 35020 ;; Registers used:
 35021 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35022 ;; Tracked objects:
 35023 ;;		On entry : 0/0
 35024 ;;		On exit  : 0/0
 35025 ;;		Unchanged: 0/0
 35026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35031 ;;Total ram usage:        0 bytes
 35032 ;; Hardware stack levels used:    1
 35033 ;; Hardware stack levels required when called:    1
 35034 ;; This function calls:
 35035 ;;		_USBCtrlTrfTxService
 35036 ;; This function is called by:
 35037 ;;		_USBCtrlEPServiceComplete
 35038 ;; This function uses a non-reentrant model
 35039 ;;
 35040                           
 35041                           	psect	text130
 35042  010A5E                     __ptext130:
 35043                           	opt stack 0
 35044  010A5E                     _USBCtrlEPAllowDataStage:
 35045                           	opt stack 12
 35046                           
 35047                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 35048                           
 35049                           ;incstack = 0
 35050  010A5E  0E00               	movlw	0
 35051  010A60  0101               	movlb	1	; () banked
 35052  010A62  6F85               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 35053                           
 35054                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 35055  010A64  0E00               	movlw	0
 35056  010A66  6F84               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 35057                           
 35058                           ; BSR set to: 1
 35059                           ;usb_device.c: 1495: if(controlTransferState == 2)
 35060  010A68  0E02               	movlw	2
 35061  010A6A  1829               	xorwf	_controlTransferState,w,c	;volatile
 35062  010A6C  A4D8               	btfss	status,2,c
 35063  010A6E  D01F               	goto	i2l220
 35064                           
 35065                           ; BSR set to: 1
 35066                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 35067  010A70  EE20 F001          	lfsr	2,1
 35068  010A74  501A               	movf	_pBDTEntryEP0OutNext,w,c
 35069  010A76  26D9               	addwf	fsr2l,f,c
 35070  010A78  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 35071  010A7A  22DA               	addwfc	fsr2h,f,c
 35072  010A7C  0E08               	movlw	8
 35073  010A7E  6EDF               	movwf	indf2,c
 35074                           
 35075                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 35076  010A80  EE20 F002          	lfsr	2,2
 35077  010A84  501A               	movf	_pBDTEntryEP0OutNext,w,c
 35078  010A86  26D9               	addwf	fsr2l,f,c
 35079  010A88  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 35080  010A8A  22DA               	addwfc	fsr2h,f,c
 35081  010A8C  0E38               	movlw	56
 35082  010A8E  6EDE               	movwf	postinc2,c
 35083  010A90  0E0D               	movlw	13
 35084  010A92  6EDD               	movwf	postdec2,c
 35085                           
 35086                           ; BSR set to: 1
 35087                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 35088  010A94  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35089  010A98  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35090  010A9C  0E48               	movlw	72
 35091  010A9E  6EDF               	movwf	indf2,c
 35092                           
 35093                           ; BSR set to: 1
 35094                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 35095  010AA0  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35096  010AA4  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35097  010AA8  0E00               	movlw	0
 35098  010AAA  8EDB               	bsf	plusw2,7,c
 35099                           
 35100                           ;usb_device.c: 1502: }
 35101  010AAC  0012               	return	
 35102  010AAE                     i2l220:
 35103                           
 35104                           ; BSR set to: 1
 35105                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 35106                           
 35107                           ; BSR set to: 1
 35108  010AAE  500E               	movf	_inPipes+4,w,c	;volatile
 35109  010AB0  010D               	movlb	13	; () banked
 35110  010AB2  5D36               	subwf	54,w,b	;volatile
 35111  010AB4  500F               	movf	_inPipes+5,w,c	;volatile
 35112  010AB6  5937               	subwfb	55,w,b	;volatile
 35113  010AB8  B0D8               	btfsc	status,0,c
 35114  010ABA  D004               	goto	i2l222
 35115                           
 35116                           ; BSR set to: 13
 35117                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 35118  010ABC  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 35119  010AC0  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 35120  010AC4                     i2l222:
 35121                           
 35122                           ; BSR set to: 13
 35123                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 35124                           
 35125                           ; BSR set to: 13
 35126  010AC4  EC8D  F07F         	call	_USBCtrlTrfTxService	;wreg free
 35127                           
 35128                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 35129  010AC8  EE20 F002          	lfsr	2,2
 35130  010ACC  5010               	movf	_pBDTEntryIn,w,c
 35131  010ACE  26D9               	addwf	fsr2l,f,c
 35132  010AD0  5011               	movf	_pBDTEntryIn+1,w,c
 35133  010AD2  22DA               	addwfc	fsr2h,f,c
 35134  010AD4  0E38               	movlw	56
 35135  010AD6  6EDE               	movwf	postinc2,c
 35136  010AD8  0E0D               	movlw	13
 35137  010ADA  6EDD               	movwf	postdec2,c
 35138                           
 35139                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 35140  010ADC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35141  010AE0  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35142  010AE4  0E48               	movlw	72
 35143  010AE6  6EDF               	movwf	indf2,c
 35144                           
 35145                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 35146  010AE8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35147  010AEC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35148  010AF0  0E00               	movlw	0
 35149  010AF2  8EDB               	bsf	plusw2,7,c
 35150  010AF4  0012               	return	
 35151  010AF6                     __end_of_USBCtrlEPAllowDataStage:
 35152                           	opt stack 0
 35153                           tosu	equ	0xFFF
 35154                           tosh	equ	0xFFE
 35155                           tosl	equ	0xFFD
 35156                           pclatu	equ	0xFFB
 35157                           pclath	equ	0xFFA
 35158                           tblptru	equ	0xFF8
 35159                           tblptrh	equ	0xFF7
 35160                           tblptrl	equ	0xFF6
 35161                           tablat	equ	0xFF5
 35162                           prodh	equ	0xFF4
 35163                           prodl	equ	0xFF3
 35164                           intcon	equ	0xFF2
 35165                           indf0	equ	0xFEF
 35166                           postinc0	equ	0xFEE
 35167                           fsr0h	equ	0xFEA
 35168                           fsr0l	equ	0xFE9
 35169                           wreg	equ	0xFE8
 35170                           indf1	equ	0xFE7
 35171                           postdec1	equ	0xFE5
 35172                           plusw1	equ	0xFE3
 35173                           fsr1h	equ	0xFE2
 35174                           fsr1l	equ	0xFE1
 35175                           indf2	equ	0xFDF
 35176                           postinc2	equ	0xFDE
 35177                           postdec2	equ	0xFDD
 35178                           plusw2	equ	0xFDB
 35179                           fsr2h	equ	0xFDA
 35180                           fsr2l	equ	0xFD9
 35181                           status	equ	0xFD8
 35182                           
 35183 ;; *************** function _USBCheckStdRequest *****************
 35184 ;; Defined at:
 35185 ;;		line 2688 in file "usb_device.c"
 35186 ;; Parameters:    Size  Location     Type
 35187 ;;		None
 35188 ;; Auto vars:     Size  Location     Type
 35189 ;;		None
 35190 ;; Return value:  Size  Location     Type
 35191 ;;                  1    wreg      void 
 35192 ;; Registers used:
 35193 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35194 ;; Tracked objects:
 35195 ;;		On entry : 0/0
 35196 ;;		On exit  : 0/0
 35197 ;;		Unchanged: 0/0
 35198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35203 ;;Total ram usage:        0 bytes
 35204 ;; Hardware stack levels used:    1
 35205 ;; Hardware stack levels required when called:    5
 35206 ;; This function calls:
 35207 ;;		_USBStdFeatureReqHandler
 35208 ;;		_USBStdGetDscHandler
 35209 ;;		_USBStdGetStatusHandler
 35210 ;;		_USBStdSetCfgHandler
 35211 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35212 ;; This function is called by:
 35213 ;;		_USBCtrlTrfSetupHandler
 35214 ;; This function uses a non-reentrant model
 35215 ;;
 35216                           
 35217                           	psect	text131
 35218  00FCA2                     __ptext131:
 35219                           	opt stack 0
 35220  00FCA2                     _USBCheckStdRequest:
 35221                           	opt stack 9
 35222                           
 35223                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 35224                           
 35225                           ;incstack = 0
 35226  00FCA2  010D               	movlb	13	; () banked
 35227  00FCA4  3930               	swapf	48,w,b	;volatile
 35228  00FCA6  32E8               	rrcf	wreg,f,c
 35229  00FCA8  0B03               	andlw	3
 35230  00FCAA  0900               	iorlw	0
 35231  00FCAC  A4D8               	btfss	status,2,c
 35232  00FCAE  0012               	return	
 35233  00FCB0  D042               	goto	i2l355
 35234  00FCB2                     i2l356:
 35235                           
 35236                           ; BSR set to: 13
 35237                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 35238  00FCB2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 35239                           
 35240                           ; BSR set to: 13
 35241                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 35242  00FCB4  0E08               	movlw	8
 35243  00FCB6  6E2B               	movwf	_USBDeviceState,c	;volatile
 35244                           
 35245                           ;usb_device.c: 2698: break;
 35246  00FCB8  0012               	return	
 35247  00FCBA                     
 35248                           ; BSR set to: 13
 35249                           ;usb_device.c: 2700: USBStdGetDscHandler();
 35250                           
 35251                           ; BSR set to: 13
 35252  00FCBA  EC45  F075         	call	_USBStdGetDscHandler	;wreg free
 35253                           
 35254                           ;usb_device.c: 2701: break;
 35255  00FCBE  0012               	return	
 35256  00FCC0                     
 35257                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 35258  00FCC0  ECE3  F07D         	call	_USBStdSetCfgHandler	;wreg free
 35259                           
 35260                           ;usb_device.c: 2704: break;
 35261  00FCC4  0012               	return	
 35262  00FCC6                     
 35263                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 35264  00FCC6  0E2D               	movlw	low _USBActiveConfiguration
 35265  00FCC8  6E0A               	movwf	_inPipes,c	;volatile
 35266  00FCCA  0E00               	movlw	high _USBActiveConfiguration
 35267  00FCCC  6E0B               	movwf	_inPipes+1,c	;volatile
 35268                           
 35269                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 35270  00FCCE  800D               	bsf	_inPipes+3,0,c	;volatile
 35271                           
 35272                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 35273  00FCD0  0E01               	movlw	1
 35274  00FCD2  6E0E               	movwf	_inPipes+4,c	;volatile
 35275                           
 35276                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 35277  00FCD4  8E0D               	bsf	_inPipes+3,7,c	;volatile
 35278                           
 35279                           ;usb_device.c: 2710: break;
 35280  00FCD6  0012               	return	
 35281  00FCD8                     
 35282                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 35283  00FCD8  EC95  F084         	call	_USBStdGetStatusHandler	;wreg free
 35284                           
 35285                           ;usb_device.c: 2713: break;
 35286  00FCDC  0012               	return	
 35287  00FCDE                     
 35288                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 35289  00FCDE  EC69  F068         	call	_USBStdFeatureReqHandler	;wreg free
 35290                           
 35291                           ;usb_device.c: 2717: break;
 35292  00FCE2  0012               	return	
 35293  00FCE4                     
 35294                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 35295  00FCE4  010D               	movlb	13	; () banked
 35296  00FCE6  5134               	movf	52,w,b	;volatile
 35297  00FCE8  0D01               	mullw	1
 35298  00FCEA  0E8C               	movlw	low _USBAlternateInterface
 35299  00FCEC  24F3               	addwf	prodl,w,c
 35300  00FCEE  6E0A               	movwf	_inPipes,c	;volatile
 35301  00FCF0  0E01               	movlw	high _USBAlternateInterface
 35302  00FCF2  20F4               	addwfc	prodh,w,c
 35303  00FCF4  6E0B               	movwf	_inPipes+1,c	;volatile
 35304                           
 35305                           ; BSR set to: 13
 35306                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 35307  00FCF6  800D               	bsf	_inPipes+3,0,c	;volatile
 35308                           
 35309                           ; BSR set to: 13
 35310                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 35311  00FCF8  0E01               	movlw	1
 35312  00FCFA  6E0E               	movwf	_inPipes+4,c	;volatile
 35313                           
 35314                           ; BSR set to: 13
 35315                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 35316  00FCFC  8E0D               	bsf	_inPipes+3,7,c	;volatile
 35317                           
 35318                           ;usb_device.c: 2723: break;
 35319  00FCFE  0012               	return	
 35320  00FD00                     i2l365:
 35321                           
 35322                           ; BSR set to: 13
 35323                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 35324  00FD00  8E0D               	bsf	_inPipes+3,7,c	;volatile
 35325                           
 35326                           ; BSR set to: 13
 35327                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 35328  00FD02  5134               	movf	52,w,b	;volatile
 35329  00FD04  0D01               	mullw	1
 35330  00FD06  0E8C               	movlw	low _USBAlternateInterface
 35331  00FD08  24F3               	addwf	prodl,w,c
 35332  00FD0A  6ED9               	movwf	fsr2l,c
 35333  00FD0C  0E01               	movlw	high _USBAlternateInterface
 35334  00FD0E  20F4               	addwfc	prodh,w,c
 35335  00FD10  6EDA               	movwf	fsr2h,c
 35336  00FD12  CD32 FFDF          	movff	3378,indf2	;volatile
 35337                           
 35338                           ;usb_device.c: 2727: break;
 35339  00FD16  0012               	return	
 35340  00FD18                     
 35341                           ; BSR set to: 13
 35342                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 35343                           
 35344                           ; BSR set to: 13
 35345  00FD18  0E00               	movlw	0
 35346  00FD1A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 35347  00FD1C  0E02               	movlw	2
 35348  00FD1E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 35349  00FD20  0E00               	movlw	0
 35350  00FD22  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 35351  00FD24  0E00               	movlw	0
 35352  00FD26  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 35353  00FD28  0E00               	movlw	0
 35354  00FD2A  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 35355  00FD2C  0E00               	movlw	0
 35356  00FD2E  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 35357  00FD30  ECE7  F086         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 35358                           
 35359                           ;usb_device.c: 2734: }
 35360                           
 35361                           ;usb_device.c: 2733: break;
 35362                           
 35363                           ;usb_device.c: 2732: default:
 35364                           
 35365                           ;usb_device.c: 2731: case 12:
 35366                           
 35367                           ;usb_device.c: 2730: break;
 35368  00FD34  0012               	return	
 35369  00FD36                     i2l355:
 35370  00FD36  010D               	movlb	13	; () banked
 35371  00FD38  5131               	movf	49,w,b	;volatile
 35372                           
 35373                           ; Switch size 1, requested type "space"
 35374                           ; Number of cases is 11, Range of values is 0 to 12
 35375                           ; switch strategies available:
 35376                           ; Name         Instructions Cycles
 35377                           ; simple_byte           34    18 (average)
 35378                           ;	Chosen strategy is simple_byte
 35379  00FD3A  0A00               	xorlw	0	; case 0
 35380  00FD3C  B4D8               	btfsc	status,2,c
 35381  00FD3E  D7CC               	goto	i2l361
 35382  00FD40  0A01               	xorlw	1	; case 1
 35383  00FD42  B4D8               	btfsc	status,2,c
 35384  00FD44  D7CC               	goto	i2l362
 35385  00FD46  0A02               	xorlw	2	; case 3
 35386  00FD48  B4D8               	btfsc	status,2,c
 35387  00FD4A  D7C9               	goto	i2l362
 35388  00FD4C  0A06               	xorlw	6	; case 5
 35389  00FD4E  B4D8               	btfsc	status,2,c
 35390  00FD50  D7B0               	goto	i2l356
 35391  00FD52  0A03               	xorlw	3	; case 6
 35392  00FD54  B4D8               	btfsc	status,2,c
 35393  00FD56  D7B1               	goto	i2l358
 35394  00FD58  0A01               	xorlw	1	; case 7
 35395  00FD5A  B4D8               	btfsc	status,2,c
 35396  00FD5C  D7DD               	goto	i2l366
 35397  00FD5E  0A0F               	xorlw	15	; case 8
 35398  00FD60  B4D8               	btfsc	status,2,c
 35399  00FD62  D7B1               	goto	i2l360
 35400  00FD64  0A01               	xorlw	1	; case 9
 35401  00FD66  B4D8               	btfsc	status,2,c
 35402  00FD68  D7AB               	goto	i2l359
 35403  00FD6A  0A03               	xorlw	3	; case 10
 35404  00FD6C  B4D8               	btfsc	status,2,c
 35405  00FD6E  D7BA               	goto	i2l364
 35406  00FD70  0A01               	xorlw	1	; case 11
 35407  00FD72  B4D8               	btfsc	status,2,c
 35408  00FD74  D7C5               	goto	i2l365
 35409  00FD76  0A07               	xorlw	7	; case 12
 35410  00FD78  0012               	return	
 35411  00FD7A                     __end_of_USBCheckStdRequest:
 35412                           	opt stack 0
 35413                           tosu	equ	0xFFF
 35414                           tosh	equ	0xFFE
 35415                           tosl	equ	0xFFD
 35416                           pclatu	equ	0xFFB
 35417                           pclath	equ	0xFFA
 35418                           tblptru	equ	0xFF8
 35419                           tblptrh	equ	0xFF7
 35420                           tblptrl	equ	0xFF6
 35421                           tablat	equ	0xFF5
 35422                           prodh	equ	0xFF4
 35423                           prodl	equ	0xFF3
 35424                           intcon	equ	0xFF2
 35425                           indf0	equ	0xFEF
 35426                           postinc0	equ	0xFEE
 35427                           fsr0h	equ	0xFEA
 35428                           fsr0l	equ	0xFE9
 35429                           wreg	equ	0xFE8
 35430                           indf1	equ	0xFE7
 35431                           postdec1	equ	0xFE5
 35432                           plusw1	equ	0xFE3
 35433                           fsr1h	equ	0xFE2
 35434                           fsr1l	equ	0xFE1
 35435                           indf2	equ	0xFDF
 35436                           postinc2	equ	0xFDE
 35437                           postdec2	equ	0xFDD
 35438                           plusw2	equ	0xFDB
 35439                           fsr2h	equ	0xFDA
 35440                           fsr2l	equ	0xFD9
 35441                           status	equ	0xFD8
 35442                           
 35443 ;; *************** function _USBStdSetCfgHandler *****************
 35444 ;; Defined at:
 35445 ;;		line 1970 in file "usb_device.c"
 35446 ;; Parameters:    Size  Location     Type
 35447 ;;		None
 35448 ;; Auto vars:     Size  Location     Type
 35449 ;;  i               1   23[COMRAM] unsigned char 
 35450 ;; Return value:  Size  Location     Type
 35451 ;;                  1    wreg      void 
 35452 ;; Registers used:
 35453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35454 ;; Tracked objects:
 35455 ;;		On entry : 0/0
 35456 ;;		On exit  : 0/0
 35457 ;;		Unchanged: 0/0
 35458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35460 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35462 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35463 ;;Total ram usage:        1 bytes
 35464 ;; Hardware stack levels used:    1
 35465 ;; Hardware stack levels required when called:    4
 35466 ;; This function calls:
 35467 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35468 ;;		i2_memset
 35469 ;; This function is called by:
 35470 ;;		_USBCheckStdRequest
 35471 ;; This function uses a non-reentrant model
 35472 ;;
 35473                           
 35474                           	psect	text132
 35475  00FBC6                     __ptext132:
 35476                           	opt stack 0
 35477  00FBC6                     _USBStdSetCfgHandler:
 35478                           	opt stack 9
 35479                           
 35480                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 35481                           
 35482                           ;incstack = 0
 35483  00FBC6  8E0D               	bsf	_inPipes+3,7,c	;volatile
 35484                           
 35485                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 35486  00FBC8  0E27               	movlw	39
 35487  00FBCA  6E2E               	movwf	i2memset@p1,c
 35488  00FBCC  0E0F               	movlw	15
 35489  00FBCE  6E2F               	movwf	i2memset@p1+1,c
 35490  00FBD0  0E00               	movlw	0
 35491  00FBD2  6E31               	movwf	i2memset@c+1,c
 35492  00FBD4  0E00               	movlw	0
 35493  00FBD6  6E30               	movwf	i2memset@c,c
 35494  00FBD8  0E00               	movlw	0
 35495  00FBDA  6E33               	movwf	i2memset@n+1,c
 35496  00FBDC  0E02               	movlw	2
 35497  00FBDE  6E32               	movwf	i2memset@n,c
 35498  00FBE0  EC57  F090         	call	i2_memset	;wreg free
 35499                           
 35500                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 35501  00FBE4  0E00               	movlw	0
 35502  00FBE6  6E2E               	movwf	i2memset@p1,c
 35503  00FBE8  0E0D               	movlw	13
 35504  00FBEA  6E2F               	movwf	i2memset@p1+1,c
 35505  00FBEC  0E00               	movlw	0
 35506  00FBEE  6E31               	movwf	i2memset@c+1,c
 35507  00FBF0  0E00               	movlw	0
 35508  00FBF2  6E30               	movwf	i2memset@c,c
 35509  00FBF4  0E00               	movlw	0
 35510  00FBF6  6E33               	movwf	i2memset@n+1,c
 35511  00FBF8  0E30               	movlw	48
 35512  00FBFA  6E32               	movwf	i2memset@n,c
 35513  00FBFC  EC57  F090         	call	i2_memset	;wreg free
 35514                           
 35515                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 35516  00FC00  8C65               	bsf	3941,6,c	;volatile
 35517                           
 35518                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 35519  00FC02  0E00               	movlw	0
 35520  00FC04  6E45               	movwf	USBStdSetCfgHandler@i,c
 35521  00FC06                     i2l17808:
 35522  00FC06  0E02               	movlw	2
 35523  00FC08  6445               	cpfsgt	USBStdSetCfgHandler@i,c
 35524  00FC0A  D001               	goto	i2l272
 35525  00FC0C  D016               	goto	i2u1722_40
 35526  00FC0E                     i2l272:
 35527                           
 35528                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 35529  00FC0E  5045               	movf	USBStdSetCfgHandler@i,w,c
 35530  00FC10  0D01               	mullw	1
 35531  00FC12  0E6C               	movlw	low _ep_data_in
 35532  00FC14  24F3               	addwf	prodl,w,c
 35533  00FC16  6ED9               	movwf	fsr2l,c
 35534  00FC18  0E01               	movlw	high _ep_data_in
 35535  00FC1A  20F4               	addwfc	prodh,w,c
 35536  00FC1C  6EDA               	movwf	fsr2h,c
 35537  00FC1E  0E00               	movlw	0
 35538  00FC20  6EDF               	movwf	indf2,c
 35539                           
 35540                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 35541  00FC22  5045               	movf	USBStdSetCfgHandler@i,w,c
 35542  00FC24  0D01               	mullw	1
 35543  00FC26  0E69               	movlw	low _ep_data_out
 35544  00FC28  24F3               	addwf	prodl,w,c
 35545  00FC2A  6ED9               	movwf	fsr2l,c
 35546  00FC2C  0E01               	movlw	high _ep_data_out
 35547  00FC2E  20F4               	addwfc	prodh,w,c
 35548  00FC30  6EDA               	movwf	fsr2h,c
 35549  00FC32  0E00               	movlw	0
 35550  00FC34  6EDF               	movwf	indf2,c
 35551  00FC36  2A45               	incf	USBStdSetCfgHandler@i,f,c
 35552  00FC38  D7E6               	goto	i2l17808
 35553  00FC3A                     i2u1722_40:
 35554                           
 35555                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 35556  00FC3A  0E8C               	movlw	low _USBAlternateInterface
 35557  00FC3C  6E2E               	movwf	i2memset@p1,c
 35558  00FC3E  0E01               	movlw	high _USBAlternateInterface
 35559  00FC40  6E2F               	movwf	i2memset@p1+1,c
 35560  00FC42  0E00               	movlw	0
 35561  00FC44  6E31               	movwf	i2memset@c+1,c
 35562  00FC46  0E00               	movlw	0
 35563  00FC48  6E30               	movwf	i2memset@c,c
 35564  00FC4A  0E00               	movlw	0
 35565  00FC4C  6E33               	movwf	i2memset@n+1,c
 35566  00FC4E  0E02               	movlw	2
 35567  00FC50  6E32               	movwf	i2memset@n,c
 35568  00FC52  EC57  F090         	call	i2_memset	;wreg free
 35569                           
 35570                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 35571  00FC56  9C65               	bcf	3941,6,c	;volatile
 35572                           
 35573                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 35574  00FC58  0E08               	movlw	8
 35575  00FC5A  6E10               	movwf	_pBDTEntryIn,c
 35576  00FC5C  0E0D               	movlw	13
 35577  00FC5E  6E11               	movwf	_pBDTEntryIn+1,c
 35578                           
 35579                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 35580  00FC60  0E00               	movlw	0
 35581  00FC62  6E1C               	movwf	_pBDTEntryEP0OutCurrent,c
 35582  00FC64  0E0D               	movlw	13
 35583  00FC66  6E1D               	movwf	_pBDTEntryEP0OutCurrent+1,c
 35584                           
 35585                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 35586  00FC68  C01C  F01A         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 35587  00FC6C  C01D  F01B         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 35588                           
 35589                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 35590  00FC70  CD32 F02D          	movff	3378,_USBActiveConfiguration	;volatile
 35591                           
 35592                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 35593  00FC74  502D               	movf	_USBActiveConfiguration,w,c	;volatile
 35594  00FC76  A4D8               	btfss	status,2,c
 35595  00FC78  D003               	goto	i2l274
 35596                           
 35597                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 35598  00FC7A  0E10               	movlw	16
 35599  00FC7C  6E2B               	movwf	_USBDeviceState,c	;volatile
 35600                           
 35601                           ;usb_device.c: 2015: }
 35602  00FC7E  0012               	return	
 35603  00FC80                     i2l274:
 35604                           
 35605                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 35606  00FC80  0E00               	movlw	0
 35607  00FC82  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 35608  00FC84  0E01               	movlw	1
 35609  00FC86  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 35610  00FC88  0E2D               	movlw	low _USBActiveConfiguration
 35611  00FC8A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 35612  00FC8C  0E00               	movlw	high _USBActiveConfiguration
 35613  00FC8E  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 35614  00FC90  0E00               	movlw	0
 35615  00FC92  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 35616  00FC94  0E01               	movlw	1
 35617  00FC96  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 35618  00FC98  ECE7  F086         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 35619                           
 35620                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 35621  00FC9C  0E20               	movlw	32
 35622  00FC9E  6E2B               	movwf	_USBDeviceState,c	;volatile
 35623  00FCA0  0012               	return	
 35624  00FCA2                     __end_of_USBStdSetCfgHandler:
 35625                           	opt stack 0
 35626                           tosu	equ	0xFFF
 35627                           tosh	equ	0xFFE
 35628                           tosl	equ	0xFFD
 35629                           pclatu	equ	0xFFB
 35630                           pclath	equ	0xFFA
 35631                           tblptru	equ	0xFF8
 35632                           tblptrh	equ	0xFF7
 35633                           tblptrl	equ	0xFF6
 35634                           tablat	equ	0xFF5
 35635                           prodh	equ	0xFF4
 35636                           prodl	equ	0xFF3
 35637                           intcon	equ	0xFF2
 35638                           indf0	equ	0xFEF
 35639                           postinc0	equ	0xFEE
 35640                           fsr0h	equ	0xFEA
 35641                           fsr0l	equ	0xFE9
 35642                           wreg	equ	0xFE8
 35643                           indf1	equ	0xFE7
 35644                           postdec1	equ	0xFE5
 35645                           plusw1	equ	0xFE3
 35646                           fsr1h	equ	0xFE2
 35647                           fsr1l	equ	0xFE1
 35648                           indf2	equ	0xFDF
 35649                           postinc2	equ	0xFDE
 35650                           postdec2	equ	0xFDD
 35651                           plusw2	equ	0xFDB
 35652                           fsr2h	equ	0xFDA
 35653                           fsr2l	equ	0xFD9
 35654                           status	equ	0xFD8
 35655                           
 35656 ;; *************** function i2_memset *****************
 35657 ;; Defined at:
 35658 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 35659 ;; Parameters:    Size  Location     Type
 35660 ;;  p1              2    0[COMRAM] PTR void 
 35661 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 35662 ;;  c               2    2[COMRAM] int 
 35663 ;;  n               2    4[COMRAM] unsigned int 
 35664 ;; Auto vars:     Size  Location     Type
 35665 ;;  memset          2    6[COMRAM] PTR unsigned char 
 35666 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 35667 ;; Return value:  Size  Location     Type
 35668 ;;                  2    0[COMRAM] PTR void 
 35669 ;; Registers used:
 35670 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35671 ;; Tracked objects:
 35672 ;;		On entry : 0/0
 35673 ;;		On exit  : 0/0
 35674 ;;		Unchanged: 0/0
 35675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35676 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35679 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35680 ;;Total ram usage:        8 bytes
 35681 ;; Hardware stack levels used:    1
 35682 ;; This function calls:
 35683 ;;		Nothing
 35684 ;; This function is called by:
 35685 ;;		_USBStdSetCfgHandler
 35686 ;;		i2_USBDeviceInit
 35687 ;; This function uses a non-reentrant model
 35688 ;;
 35689                           
 35690                           	psect	text133
 35691  0120AE                     __ptext133:
 35692                           	opt stack 0
 35693  0120AE                     i2_memset:
 35694                           	opt stack 15
 35695                           
 35696                           ;incstack = 0
 35697  0120AE  C02E  F034         	movff	i2memset@p1,i2memset@p
 35698  0120B2  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 35699  0120B6  D008               	goto	i2l3332
 35700  0120B8                     i2l11568:
 35701  0120B8  C034  FFD9         	movff	i2memset@p,fsr2l
 35702  0120BC  C035  FFDA         	movff	i2memset@p+1,fsr2h
 35703  0120C0  C030  FFDF         	movff	i2memset@c,indf2
 35704  0120C4  4A34               	infsnz	i2memset@p,f,c
 35705  0120C6  2A35               	incf	i2memset@p+1,f,c
 35706  0120C8                     i2l3332:
 35707  0120C8  0632               	decf	i2memset@n,f,c
 35708  0120CA  A0D8               	btfss	status,0,c
 35709  0120CC  0633               	decf	i2memset@n+1,f,c
 35710  0120CE  2832               	incf	i2memset@n,w,c
 35711  0120D0  E1F3               	bnz	i2l11568
 35712  0120D2  2833               	incf	i2memset@n+1,w,c
 35713  0120D4  B4D8               	btfsc	status,2,c
 35714  0120D6  0012               	return	
 35715  0120D8  D7EF               	goto	i2l3333
 35716  0120DA                     __end_ofi2_memset:
 35717                           	opt stack 0
 35718                           tosu	equ	0xFFF
 35719                           tosh	equ	0xFFE
 35720                           tosl	equ	0xFFD
 35721                           pclatu	equ	0xFFB
 35722                           pclath	equ	0xFFA
 35723                           tblptru	equ	0xFF8
 35724                           tblptrh	equ	0xFF7
 35725                           tblptrl	equ	0xFF6
 35726                           tablat	equ	0xFF5
 35727                           prodh	equ	0xFF4
 35728                           prodl	equ	0xFF3
 35729                           intcon	equ	0xFF2
 35730                           indf0	equ	0xFEF
 35731                           postinc0	equ	0xFEE
 35732                           fsr0h	equ	0xFEA
 35733                           fsr0l	equ	0xFE9
 35734                           wreg	equ	0xFE8
 35735                           indf1	equ	0xFE7
 35736                           postdec1	equ	0xFE5
 35737                           plusw1	equ	0xFE3
 35738                           fsr1h	equ	0xFE2
 35739                           fsr1l	equ	0xFE1
 35740                           indf2	equ	0xFDF
 35741                           postinc2	equ	0xFDE
 35742                           postdec2	equ	0xFDD
 35743                           plusw2	equ	0xFDB
 35744                           fsr2h	equ	0xFDA
 35745                           fsr2l	equ	0xFD9
 35746                           status	equ	0xFD8
 35747                           
 35748 ;; *************** function _USBStdGetStatusHandler *****************
 35749 ;; Defined at:
 35750 ;;		line 2131 in file "usb_device.c"
 35751 ;; Parameters:    Size  Location     Type
 35752 ;;		None
 35753 ;; Auto vars:     Size  Location     Type
 35754 ;;  p               2    1[COMRAM] PTR struct __BDT
 35755 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 35756 ;; Return value:  Size  Location     Type
 35757 ;;                  1    wreg      void 
 35758 ;; Registers used:
 35759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35760 ;; Tracked objects:
 35761 ;;		On entry : 0/0
 35762 ;;		On exit  : 0/0
 35763 ;;		Unchanged: 0/0
 35764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35766 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35768 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35769 ;;Total ram usage:        3 bytes
 35770 ;; Hardware stack levels used:    1
 35771 ;; This function calls:
 35772 ;;		Nothing
 35773 ;; This function is called by:
 35774 ;;		_USBCheckStdRequest
 35775 ;; This function uses a non-reentrant model
 35776 ;;
 35777                           
 35778                           	psect	text134
 35779  01092A                     __ptext134:
 35780                           	opt stack 0
 35781  01092A                     _USBStdGetStatusHandler:
 35782                           	opt stack 13
 35783                           
 35784                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 35785                           
 35786                           ;incstack = 0
 35787  01092A  0E00               	movlw	0
 35788  01092C  010D               	movlb	13	; () banked
 35789  01092E  6F38               	movwf	56,b	;volatile
 35790                           
 35791                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 35792  010930  0E00               	movlw	0
 35793  010932  6F39               	movwf	57,b	;volatile
 35794                           
 35795                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 35796  010934  D033               	goto	i2l293
 35797  010936                     i2l294:
 35798                           
 35799                           ; BSR set to: 13
 35800                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 35801  010936  8E0D               	bsf	_inPipes+3,7,c	;volatile
 35802                           
 35803                           ; BSR set to: 13
 35804                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 35805                           
 35806                           ; BSR set to: 13
 35807                           
 35808                           ; BSR set to: 13
 35809                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 35810                           
 35811                           ;usb_device.c: 2144: if(0 == 1)
 35812  010938  0428               	decf	_RemoteWakeup,w,c	;volatile
 35813  01093A  A4D8               	btfss	status,2,c
 35814  01093C  D03A               	goto	i2l297
 35815                           
 35816                           ; BSR set to: 13
 35817                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 35818  01093E  8338               	bsf	56,1,b	;volatile
 35819                           
 35820                           ; BSR set to: 13
 35821                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 35822  010940  D038               	goto	i2l297
 35823  010942                     i2l298:
 35824                           
 35825                           ; BSR set to: 13
 35826                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 35827  010942  8E0D               	bsf	_inPipes+3,7,c	;volatile
 35828                           
 35829                           ;usb_device.c: 2156: break;
 35830  010944  D036               	goto	i2l297
 35831  010946                     i2l299:
 35832                           
 35833                           ; BSR set to: 13
 35834                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 35835  010946  8E0D               	bsf	_inPipes+3,7,c	;volatile
 35836                           
 35837                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 35838  010948  BF34               	btfsc	52,7,b	;volatile
 35839  01094A  D00A               	goto	i2l300
 35840                           
 35841                           ; BSR set to: 13
 35842                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 35843  01094C  5134               	movf	52,w,b	;volatile
 35844  01094E  0B0F               	andlw	15
 35845  010950  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 35846  010952  502E               	movf	??_USBStdGetStatusHandler,w,c
 35847  010954  0D02               	mullw	2
 35848  010956  0E45               	movlw	low _pBDTEntryOut
 35849  010958  24F3               	addwf	prodl,w,c
 35850  01095A  6ED9               	movwf	fsr2l,c
 35851  01095C  0E01               	movlw	high _pBDTEntryOut
 35852  01095E  D009               	goto	L61
 35853  010960                     i2l300:
 35854                           
 35855                           ; BSR set to: 13
 35856                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 35857                           
 35858                           ; BSR set to: 13
 35859  010960  5134               	movf	52,w,b	;volatile
 35860  010962  0B0F               	andlw	15
 35861  010964  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 35862  010966  502E               	movf	??_USBStdGetStatusHandler,w,c
 35863  010968  0D02               	mullw	2
 35864  01096A  0E10               	movlw	low _pBDTEntryIn
 35865  01096C  24F3               	addwf	prodl,w,c
 35866  01096E  6ED9               	movwf	fsr2l,c
 35867  010970  0E00               	movlw	high _pBDTEntryIn
 35868  010972                     L61:
 35869  010972  20F4               	addwfc	prodh,w,c
 35870  010974  6EDA               	movwf	fsr2h,c
 35871  010976  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 35872  01097A  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 35873                           
 35874                           ; BSR set to: 13
 35875                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 35876                           
 35877                           ; BSR set to: 13
 35878  01097E  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 35879  010982  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 35880  010986  AEDF               	btfss	indf2,7,c
 35881  010988  D014               	goto	i2l297
 35882                           
 35883                           ; BSR set to: 13
 35884  01098A  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 35885  01098E  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 35886  010992  A4DF               	btfss	indf2,2,c
 35887  010994  D00E               	goto	i2l297
 35888                           
 35889                           ; BSR set to: 13
 35890                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 35891  010996  0E01               	movlw	1
 35892  010998  6F38               	movwf	56,b	;volatile
 35893                           
 35894                           ; BSR set to: 13
 35895                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 35896                           
 35897                           ; BSR set to: 13
 35898                           ;usb_device.c: 2176: break;
 35899  01099A  D00B               	goto	i2l297
 35900  01099C                     i2l293:
 35901                           
 35902                           ; BSR set to: 13
 35903                           
 35904                           ; BSR set to: 13
 35905  01099C  5130               	movf	48,w,b	;volatile
 35906  01099E  0B1F               	andlw	31
 35907                           
 35908                           ; Switch size 1, requested type "space"
 35909                           ; Number of cases is 3, Range of values is 0 to 2
 35910                           ; switch strategies available:
 35911                           ; Name         Instructions Cycles
 35912                           ; simple_byte           10     6 (average)
 35913                           ;	Chosen strategy is simple_byte
 35914  0109A0  0A00               	xorlw	0	; case 0
 35915  0109A2  B4D8               	btfsc	status,2,c
 35916  0109A4  D7C8               	goto	i2l294
 35917  0109A6  0A01               	xorlw	1	; case 1
 35918  0109A8  B4D8               	btfsc	status,2,c
 35919  0109AA  D7CB               	goto	i2l298
 35920  0109AC  0A03               	xorlw	3	; case 2
 35921  0109AE  B4D8               	btfsc	status,2,c
 35922  0109B0  D7CA               	goto	i2l299
 35923  0109B2                     i2l297:
 35924                           
 35925                           ; BSR set to: 13
 35926                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 35927  0109B2  AE0D               	btfss	_inPipes+3,7,c	;volatile
 35928  0109B4  0012               	return	
 35929                           
 35930                           ; BSR set to: 13
 35931                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 35932  0109B6  0E38               	movlw	56
 35933  0109B8  6E0A               	movwf	_inPipes,c	;volatile
 35934  0109BA  0E0D               	movlw	13
 35935  0109BC  6E0B               	movwf	_inPipes+1,c	;volatile
 35936                           
 35937                           ; BSR set to: 13
 35938                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 35939  0109BE  800D               	bsf	_inPipes+3,0,c	;volatile
 35940                           
 35941                           ; BSR set to: 13
 35942                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 35943  0109C0  0E02               	movlw	2
 35944  0109C2  6E0E               	movwf	_inPipes+4,c	;volatile
 35945  0109C4  0012               	return	
 35946  0109C6                     __end_of_USBStdGetStatusHandler:
 35947                           	opt stack 0
 35948                           tosu	equ	0xFFF
 35949                           tosh	equ	0xFFE
 35950                           tosl	equ	0xFFD
 35951                           pclatu	equ	0xFFB
 35952                           pclath	equ	0xFFA
 35953                           tblptru	equ	0xFF8
 35954                           tblptrh	equ	0xFF7
 35955                           tblptrl	equ	0xFF6
 35956                           tablat	equ	0xFF5
 35957                           prodh	equ	0xFF4
 35958                           prodl	equ	0xFF3
 35959                           intcon	equ	0xFF2
 35960                           indf0	equ	0xFEF
 35961                           postinc0	equ	0xFEE
 35962                           fsr0h	equ	0xFEA
 35963                           fsr0l	equ	0xFE9
 35964                           wreg	equ	0xFE8
 35965                           indf1	equ	0xFE7
 35966                           postdec1	equ	0xFE5
 35967                           plusw1	equ	0xFE3
 35968                           fsr1h	equ	0xFE2
 35969                           fsr1l	equ	0xFE1
 35970                           indf2	equ	0xFDF
 35971                           postinc2	equ	0xFDE
 35972                           postdec2	equ	0xFDD
 35973                           plusw2	equ	0xFDB
 35974                           fsr2h	equ	0xFDA
 35975                           fsr2l	equ	0xFD9
 35976                           status	equ	0xFD8
 35977                           
 35978 ;; *************** function _USBStdGetDscHandler *****************
 35979 ;; Defined at:
 35980 ;;		line 2045 in file "usb_device.c"
 35981 ;; Parameters:    Size  Location     Type
 35982 ;;		None
 35983 ;; Auto vars:     Size  Location     Type
 35984 ;;		None
 35985 ;; Return value:  Size  Location     Type
 35986 ;;                  1    wreg      void 
 35987 ;; Registers used:
 35988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 35989 ;; Tracked objects:
 35990 ;;		On entry : 0/0
 35991 ;;		On exit  : 0/0
 35992 ;;		Unchanged: 0/0
 35993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35996 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35997 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35998 ;;Total ram usage:        2 bytes
 35999 ;; Hardware stack levels used:    1
 36000 ;; This function calls:
 36001 ;;		Nothing
 36002 ;; This function is called by:
 36003 ;;		_USBCheckStdRequest
 36004 ;; This function uses a non-reentrant model
 36005 ;;
 36006                           
 36007                           	psect	text135
 36008  00EA8A                     __ptext135:
 36009                           	opt stack 0
 36010  00EA8A                     _USBStdGetDscHandler:
 36011                           	opt stack 13
 36012                           
 36013                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 36014                           
 36015                           ; BSR set to: 13
 36016                           ;incstack = 0
 36017  00EA8A  0E80               	movlw	128
 36018  00EA8C  010D               	movlb	13	; () banked
 36019  00EA8E  1930               	xorwf	48,w,b	;volatile
 36020  00EA90  A4D8               	btfss	status,2,c
 36021  00EA92  0012               	return	
 36022                           
 36023                           ; BSR set to: 13
 36024                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 36025  00EA94  0EC0               	movlw	192
 36026  00EA96  6E0D               	movwf	_inPipes+3,c	;volatile
 36027                           
 36028                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 36029  00EA98  D082               	goto	i2l280
 36030  00EA9A                     
 36031                           ; BSR set to: 13
 36032                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 36033                           
 36034                           ; BSR set to: 13
 36035  00EA9A  0EBB               	movlw	low _device_dsc
 36036  00EA9C  6E0A               	movwf	_inPipes,c	;volatile
 36037  00EA9E  0EA1               	movlw	high _device_dsc
 36038  00EAA0  6E0B               	movwf	_inPipes+1,c	;volatile
 36039                           
 36040                           ; BSR set to: 13
 36041                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 36042  00EAA2  0E00               	movlw	0
 36043  00EAA4  6E0F               	movwf	_inPipes+5,c	;volatile
 36044  00EAA6  0E12               	movlw	18
 36045  00EAA8  6E0E               	movwf	_inPipes+4,c	;volatile
 36046                           
 36047                           ;usb_device.c: 2060: break;
 36048  00EAAA  0012               	return	
 36049  00EAAC                     
 36050                           ; BSR set to: 13
 36051                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 36052                           
 36053                           ; BSR set to: 13
 36054  00EAAC  5132               	movf	50,w,b	;volatile
 36055  00EAAE  A4D8               	btfss	status,2,c
 36056  00EAB0  D042               	goto	i2l284
 36057                           
 36058                           ; BSR set to: 13
 36059                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 36060  00EAB2  5132               	movf	50,w,b	;volatile
 36061  00EAB4  0D02               	mullw	2
 36062  00EAB6  0EEC               	movlw	low _USB_CD_Ptr
 36063  00EAB8  24F3               	addwf	prodl,w,c
 36064  00EABA  6EF6               	movwf	tblptrl,c
 36065  00EABC  0E9D               	movlw	high _USB_CD_Ptr
 36066  00EABE  20F4               	addwfc	prodh,w,c
 36067  00EAC0  6EF7               	movwf	tblptrh,c
 36068  00EAC2                     	if	1	;There are 3 active tblptr bytes
 36069  00EAC2  6AF8               	clrf	tblptru,c
 36070  00EAC4  0E00               	movlw	low (__mediumconst shr (0+16))
 36071  00EAC6  22F8               	addwfc	tblptru,f,c
 36072  00EAC8                     	endif
 36073  00EAC8  0009               	tblrd		*+
 36074  00EACA  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 36075  00EACE  000A               	tblrd		*-
 36076  00EAD0  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 36077                           
 36078                           ; BSR set to: 13
 36079                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 36080  00EAD4  0E02               	movlw	2
 36081  00EAD6  240A               	addwf	_inPipes,w,c	;volatile
 36082  00EAD8  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 36083  00EADA  0E00               	movlw	0
 36084  00EADC  200B               	addwfc	_inPipes+1,w,c	;volatile
 36085  00EADE  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 36086  00EAE0  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 36087  00EAE4  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 36088  00EAE8  0E00               	movlw	low (__mediumconst shr (0+16))
 36089  00EAEA  6EF8               	movwf	tblptru,c
 36090  00EAEC  0E0E               	movlw	(high __ramtop+-1)
 36091  00EAEE  64F7               	cpfsgt	tblptrh,c
 36092  00EAF0  D003               	bra	i2u966_47
 36093  00EAF2  0008               	tblrd		*
 36094  00EAF4  50F5               	movf	tablat,w,c
 36095  00EAF6  D005               	bra	i2u966_40
 36096  00EAF8                     i2u966_47:
 36097  00EAF8  CFF6 FFE9          	movff	tblptrl,fsr0l
 36098  00EAFC  CFF7 FFEA          	movff	tblptrh,fsr0h
 36099  00EB00  50EF               	movf	indf0,w,c
 36100  00EB02                     i2u966_40:
 36101  00EB02  6E0E               	movwf	_inPipes+4,c	;volatile
 36102                           
 36103                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 36104  00EB04  0E03               	movlw	3
 36105  00EB06  240A               	addwf	_inPipes,w,c	;volatile
 36106  00EB08  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 36107  00EB0A  0E00               	movlw	0
 36108  00EB0C  200B               	addwfc	_inPipes+1,w,c	;volatile
 36109  00EB0E  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 36110  00EB10  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 36111  00EB14  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 36112  00EB18  0E00               	movlw	low (__mediumconst shr (0+16))
 36113  00EB1A  6EF8               	movwf	tblptru,c
 36114  00EB1C  0E0E               	movlw	(high __ramtop+-1)
 36115  00EB1E  64F7               	cpfsgt	tblptrh,c
 36116  00EB20  D003               	bra	i2u967_47
 36117  00EB22  0008               	tblrd		*
 36118  00EB24  50F5               	movf	tablat,w,c
 36119  00EB26  D005               	bra	i2u967_40
 36120  00EB28                     i2u967_47:
 36121  00EB28  CFF6 FFE9          	movff	tblptrl,fsr0l
 36122  00EB2C  CFF7 FFEA          	movff	tblptrh,fsr0h
 36123  00EB30  50EF               	movf	indf0,w,c
 36124  00EB32                     i2u967_40:
 36125  00EB32  6E0F               	movwf	_inPipes+5,c	;volatile
 36126                           
 36127                           ;usb_device.c: 2078: }
 36128  00EB34  0012               	return	
 36129  00EB36                     i2l284:
 36130                           
 36131                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 36132  00EB36  0E00               	movlw	0
 36133  00EB38  6E0D               	movwf	_inPipes+3,c	;volatile
 36134                           
 36135                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 36136  00EB3A  0012               	return	
 36137  00EB3C                     
 36138                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 36139  00EB3C  0E04               	movlw	4
 36140  00EB3E  010D               	movlb	13	; () banked
 36141  00EB40  6132               	cpfslt	50,b	;volatile
 36142  00EB42  D027               	goto	i2l287
 36143                           
 36144                           ; BSR set to: 13
 36145                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 36146  00EB44  5132               	movf	50,w,b	;volatile
 36147  00EB46  0D02               	mullw	2
 36148  00EB48  0EE4               	movlw	low _USB_SD_Ptr
 36149  00EB4A  24F3               	addwf	prodl,w,c
 36150  00EB4C  6EF6               	movwf	tblptrl,c
 36151  00EB4E  0E9D               	movlw	high _USB_SD_Ptr
 36152  00EB50  20F4               	addwfc	prodh,w,c
 36153  00EB52  6EF7               	movwf	tblptrh,c
 36154  00EB54                     	if	1	;There are 3 active tblptr bytes
 36155  00EB54  6AF8               	clrf	tblptru,c
 36156  00EB56  0E00               	movlw	low (__mediumconst shr (0+16))
 36157  00EB58  22F8               	addwfc	tblptru,f,c
 36158  00EB5A                     	endif
 36159  00EB5A  0009               	tblrd		*+
 36160  00EB5C  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 36161  00EB60  000A               	tblrd		*-
 36162  00EB62  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 36163                           
 36164                           ; BSR set to: 13
 36165                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 36166  00EB66  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 36167  00EB6A  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 36168  00EB6E  0E00               	movlw	low (__mediumconst shr (0+16))
 36169  00EB70  6EF8               	movwf	tblptru,c
 36170  00EB72  0E0E               	movlw	(high __ramtop+-1)
 36171  00EB74  64F7               	cpfsgt	tblptrh,c
 36172  00EB76  D003               	bra	i2u969_47
 36173  00EB78  0008               	tblrd		*
 36174  00EB7A  50F5               	movf	tablat,w,c
 36175  00EB7C  D005               	bra	i2u969_40
 36176  00EB7E                     i2u969_47:
 36177  00EB7E  CFF6 FFE9          	movff	tblptrl,fsr0l
 36178  00EB82  CFF7 FFEA          	movff	tblptrh,fsr0h
 36179  00EB86  50EF               	movf	indf0,w,c
 36180  00EB88                     i2u969_40:
 36181  00EB88  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 36182  00EB8A  502E               	movf	??_USBStdGetDscHandler,w,c
 36183  00EB8C  6E0E               	movwf	_inPipes+4,c	;volatile
 36184  00EB8E  6A0F               	clrf	_inPipes+5,c	;volatile
 36185                           
 36186                           ;usb_device.c: 2094: }
 36187  00EB90  0012               	return	
 36188  00EB92                     i2l287:
 36189                           
 36190                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 36191  00EB92  0E00               	movlw	0
 36192  00EB94  6E0D               	movwf	_inPipes+3,c	;volatile
 36193                           
 36194                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 36195  00EB96  0012               	return	
 36196  00EB98                     
 36197                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 36198  00EB98  0E00               	movlw	0
 36199  00EB9A  6E0D               	movwf	_inPipes+3,c	;volatile
 36200                           
 36201                           ;usb_device.c: 2112: }
 36202                           
 36203                           ;usb_device.c: 2111: break;
 36204  00EB9C  0012               	return	
 36205  00EB9E                     i2l280:
 36206  00EB9E  010D               	movlb	13	; () banked
 36207  00EBA0  5133               	movf	51,w,b	;volatile
 36208                           
 36209                           ; Switch size 1, requested type "space"
 36210                           ; Number of cases is 3, Range of values is 1 to 3
 36211                           ; switch strategies available:
 36212                           ; Name         Instructions Cycles
 36213                           ; simple_byte           10     6 (average)
 36214                           ;	Chosen strategy is simple_byte
 36215  00EBA2  0A01               	xorlw	1	; case 1
 36216  00EBA4  B4D8               	btfsc	status,2,c
 36217  00EBA6  D779               	goto	i2l281
 36218  00EBA8  0A03               	xorlw	3	; case 2
 36219  00EBAA  B4D8               	btfsc	status,2,c
 36220  00EBAC  D77F               	goto	i2l283
 36221  00EBAE  0A01               	xorlw	1	; case 3
 36222  00EBB0  B4D8               	btfsc	status,2,c
 36223  00EBB2  D7C4               	goto	i2l286
 36224  00EBB4  D7F1               	goto	i2l289
 36225  00EBB6                     __end_of_USBStdGetDscHandler:
 36226                           	opt stack 0
 36227                           tosu	equ	0xFFF
 36228                           tosh	equ	0xFFE
 36229                           tosl	equ	0xFFD
 36230                           pclatu	equ	0xFFB
 36231                           pclath	equ	0xFFA
 36232                           tblptru	equ	0xFF8
 36233                           tblptrh	equ	0xFF7
 36234                           tblptrl	equ	0xFF6
 36235                           tablat	equ	0xFF5
 36236                           prodh	equ	0xFF4
 36237                           prodl	equ	0xFF3
 36238                           intcon	equ	0xFF2
 36239                           indf0	equ	0xFEF
 36240                           postinc0	equ	0xFEE
 36241                           fsr0h	equ	0xFEA
 36242                           fsr0l	equ	0xFE9
 36243                           wreg	equ	0xFE8
 36244                           indf1	equ	0xFE7
 36245                           postdec1	equ	0xFE5
 36246                           plusw1	equ	0xFE3
 36247                           fsr1h	equ	0xFE2
 36248                           fsr1l	equ	0xFE1
 36249                           indf2	equ	0xFDF
 36250                           postinc2	equ	0xFDE
 36251                           postdec2	equ	0xFDD
 36252                           plusw2	equ	0xFDB
 36253                           fsr2h	equ	0xFDA
 36254                           fsr2l	equ	0xFD9
 36255                           status	equ	0xFD8
 36256                           
 36257 ;; *************** function _USBStdFeatureReqHandler *****************
 36258 ;; Defined at:
 36259 ;;		line 2756 in file "usb_device.c"
 36260 ;; Parameters:    Size  Location     Type
 36261 ;;		None
 36262 ;; Auto vars:     Size  Location     Type
 36263 ;;  p               2   27[COMRAM] PTR struct __BDT
 36264 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 36265 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 36266 ;;		 -> UEP0(1), 
 36267 ;;  current_ep_d    1   26[COMRAM] struct .
 36268 ;; Return value:  Size  Location     Type
 36269 ;;                  1    wreg      void 
 36270 ;; Registers used:
 36271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36272 ;; Tracked objects:
 36273 ;;		On entry : 0/0
 36274 ;;		On exit  : 0/0
 36275 ;;		Unchanged: 0/0
 36276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36278 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36279 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36280 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36281 ;;Total ram usage:        6 bytes
 36282 ;; Hardware stack levels used:    1
 36283 ;; Hardware stack levels required when called:    4
 36284 ;; This function calls:
 36285 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 36286 ;; This function is called by:
 36287 ;;		_USBCheckStdRequest
 36288 ;; This function uses a non-reentrant model
 36289 ;;
 36290                           
 36291                           	psect	text136
 36292  00D0D2                     __ptext136:
 36293                           	opt stack 0
 36294  00D0D2                     _USBStdFeatureReqHandler:
 36295                           	opt stack 9
 36296                           
 36297                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 36298                           
 36299                           ;incstack = 0
 36300  00D0D2  010D               	movlb	13	; () banked
 36301  00D0D4  0532               	decf	50,w,b	;volatile
 36302  00D0D6  A4D8               	btfss	status,2,c
 36303  00D0D8  D00E               	goto	i2l373
 36304                           
 36305                           ; BSR set to: 13
 36306  00D0DA  5130               	movf	48,w,b	;volatile
 36307  00D0DC  0B1F               	andlw	31
 36308  00D0DE  0900               	iorlw	0
 36309  00D0E0  A4D8               	btfss	status,2,c
 36310  00D0E2  D009               	goto	i2l373
 36311                           
 36312                           ; BSR set to: 13
 36313                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 36314  00D0E4  8E0D               	bsf	_inPipes+3,7,c	;volatile
 36315                           
 36316                           ; BSR set to: 13
 36317                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 36318  00D0E6  0E03               	movlw	3
 36319  00D0E8  1931               	xorwf	49,w,b	;volatile
 36320  00D0EA  A4D8               	btfss	status,2,c
 36321  00D0EC  D002               	goto	i2l372
 36322                           
 36323                           ; BSR set to: 13
 36324                           ;usb_device.c: 2806: RemoteWakeup = 1;
 36325  00D0EE  0E01               	movlw	1
 36326  00D0F0  D001               	goto	L62
 36327  00D0F2                     i2l372:
 36328                           
 36329                           ; BSR set to: 13
 36330                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 36331                           
 36332                           ; BSR set to: 13
 36333  00D0F2  0E00               	movlw	0
 36334  00D0F4                     L62:
 36335  00D0F4  6E28               	movwf	_RemoteWakeup,c	;volatile
 36336  00D0F6                     i2l373:
 36337                           
 36338                           ; BSR set to: 13
 36339                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 36340                           
 36341                           ; BSR set to: 13
 36342  00D0F6  5132               	movf	50,w,b	;volatile
 36343  00D0F8  A4D8               	btfss	status,2,c
 36344  00D0FA  0012               	return	
 36345                           
 36346                           ; BSR set to: 13
 36347  00D0FC  5130               	movf	48,w,b	;volatile
 36348  00D0FE  0B1F               	andlw	31
 36349  00D100  0A02               	xorlw	2
 36350  00D102  A4D8               	btfss	status,2,c
 36351  00D104  0012               	return	
 36352                           
 36353                           ; BSR set to: 13
 36354  00D106  5134               	movf	52,w,b	;volatile
 36355  00D108  0B0F               	andlw	15
 36356  00D10A  0900               	iorlw	0
 36357  00D10C  B4D8               	btfsc	status,2,c
 36358  00D10E  0012               	return	
 36359                           
 36360                           ; BSR set to: 13
 36361  00D110  5134               	movf	52,w,b	;volatile
 36362  00D112  0B0F               	andlw	15
 36363  00D114  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36364  00D116  0E03               	movlw	3
 36365  00D118  6045               	cpfslt	??_USBStdFeatureReqHandler,c
 36366  00D11A  0012               	return	
 36367                           
 36368                           ; BSR set to: 13
 36369  00D11C  0E20               	movlw	32
 36370  00D11E  182B               	xorwf	_USBDeviceState,w,c	;volatile
 36371  00D120  A4D8               	btfss	status,2,c
 36372  00D122  0012               	return	
 36373                           
 36374                           ; BSR set to: 13
 36375                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 36376  00D124  8E0D               	bsf	_inPipes+3,7,c	;volatile
 36377                           
 36378                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 36379  00D126  BF34               	btfsc	52,7,b	;volatile
 36380  00D128  D019               	goto	i2l375
 36381                           
 36382                           ; BSR set to: 13
 36383                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 36384  00D12A  5134               	movf	52,w,b	;volatile
 36385  00D12C  0B0F               	andlw	15
 36386  00D12E  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36387  00D130  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36388  00D132  0D02               	mullw	2
 36389  00D134  0E45               	movlw	low _pBDTEntryOut
 36390  00D136  24F3               	addwf	prodl,w,c
 36391  00D138  6ED9               	movwf	fsr2l,c
 36392  00D13A  0E01               	movlw	high _pBDTEntryOut
 36393  00D13C  20F4               	addwfc	prodh,w,c
 36394  00D13E  6EDA               	movwf	fsr2h,c
 36395  00D140  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 36396  00D144  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 36397                           
 36398                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 36399  00D148  5134               	movf	52,w,b	;volatile
 36400  00D14A  0B0F               	andlw	15
 36401  00D14C  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36402  00D14E  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36403  00D150  0D01               	mullw	1
 36404  00D152  0E69               	movlw	low _ep_data_out
 36405  00D154  24F3               	addwf	prodl,w,c
 36406  00D156  6ED9               	movwf	fsr2l,c
 36407  00D158  0E01               	movlw	high _ep_data_out
 36408  00D15A  D018               	goto	L63
 36409  00D15C                     i2l375:
 36410                           
 36411                           ; BSR set to: 13
 36412                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 36413                           
 36414                           ; BSR set to: 13
 36415  00D15C  5134               	movf	52,w,b	;volatile
 36416  00D15E  0B0F               	andlw	15
 36417  00D160  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36418  00D162  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36419  00D164  0D02               	mullw	2
 36420  00D166  0E10               	movlw	low _pBDTEntryIn
 36421  00D168  24F3               	addwf	prodl,w,c
 36422  00D16A  6ED9               	movwf	fsr2l,c
 36423  00D16C  0E00               	movlw	high _pBDTEntryIn
 36424  00D16E  20F4               	addwfc	prodh,w,c
 36425  00D170  6EDA               	movwf	fsr2h,c
 36426  00D172  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 36427  00D176  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 36428                           
 36429                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 36430  00D17A  5134               	movf	52,w,b	;volatile
 36431  00D17C  0B0F               	andlw	15
 36432  00D17E  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36433  00D180  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36434  00D182  0D01               	mullw	1
 36435  00D184  0E6C               	movlw	low _ep_data_in
 36436  00D186  24F3               	addwf	prodl,w,c
 36437  00D188  6ED9               	movwf	fsr2l,c
 36438  00D18A  0E01               	movlw	high _ep_data_in
 36439  00D18C                     L63:
 36440  00D18C  20F4               	addwfc	prodh,w,c
 36441  00D18E  6EDA               	movwf	fsr2h,c
 36442  00D190  50DF               	movf	indf2,w,c
 36443  00D192  6E48               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 36444                           
 36445                           ; BSR set to: 13
 36446                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 36447                           
 36448                           ; BSR set to: 13
 36449  00D194  B048               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 36450  00D196  D006               	goto	i2l377
 36451                           
 36452                           ; BSR set to: 13
 36453                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 36454  00D198  0EFB               	movlw	251
 36455  00D19A  1449               	andwf	USBStdFeatureReqHandler@p,w,c
 36456  00D19C  6E49               	movwf	USBStdFeatureReqHandler@p,c
 36457  00D19E  0EFF               	movlw	255
 36458  00D1A0  144A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 36459  00D1A2  D004               	goto	L64
 36460  00D1A4                     i2l377:
 36461                           
 36462                           ; BSR set to: 13
 36463                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 36464                           
 36465                           ; BSR set to: 13
 36466  00D1A4  0E04               	movlw	4
 36467  00D1A6  1049               	iorwf	USBStdFeatureReqHandler@p,w,c
 36468  00D1A8  6E49               	movwf	USBStdFeatureReqHandler@p,c
 36469  00D1AA  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 36470  00D1AC                     L64:
 36471  00D1AC  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 36472                           
 36473                           ; BSR set to: 13
 36474                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 36475                           
 36476                           ; BSR set to: 13
 36477  00D1AE  BF34               	btfsc	52,7,b	;volatile
 36478  00D1B0  D00A               	goto	i2l379
 36479                           
 36480                           ; BSR set to: 13
 36481                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 36482  00D1B2  5134               	movf	52,w,b	;volatile
 36483  00D1B4  0B0F               	andlw	15
 36484  00D1B6  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36485  00D1B8  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36486  00D1BA  0D02               	mullw	2
 36487  00D1BC  0E45               	movlw	low _pBDTEntryOut
 36488  00D1BE  24F3               	addwf	prodl,w,c
 36489  00D1C0  6ED9               	movwf	fsr2l,c
 36490  00D1C2  0E01               	movlw	high _pBDTEntryOut
 36491  00D1C4  D009               	goto	L65
 36492  00D1C6                     i2l379:
 36493                           
 36494                           ; BSR set to: 13
 36495                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 36496                           
 36497                           ; BSR set to: 13
 36498  00D1C6  5134               	movf	52,w,b	;volatile
 36499  00D1C8  0B0F               	andlw	15
 36500  00D1CA  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36501  00D1CC  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36502  00D1CE  0D02               	mullw	2
 36503  00D1D0  0E10               	movlw	low _pBDTEntryIn
 36504  00D1D2  24F3               	addwf	prodl,w,c
 36505  00D1D4  6ED9               	movwf	fsr2l,c
 36506  00D1D6  0E00               	movlw	high _pBDTEntryIn
 36507  00D1D8                     L65:
 36508  00D1D8  20F4               	addwfc	prodh,w,c
 36509  00D1DA  6EDA               	movwf	fsr2h,c
 36510  00D1DC  C049  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 36511  00D1E0  C04A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 36512                           
 36513                           ; BSR set to: 13
 36514                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 36515                           
 36516                           ; BSR set to: 13
 36517  00D1E4  0E03               	movlw	3
 36518  00D1E6  1931               	xorwf	49,w,b	;volatile
 36519  00D1E8  A4D8               	btfss	status,2,c
 36520  00D1EA  D02D               	goto	i2l381
 36521                           
 36522                           ; BSR set to: 13
 36523                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 36524  00D1EC  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 36525  00D1F0  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 36526  00D1F4  AEDF               	btfss	indf2,7,c
 36527  00D1F6  D01A               	goto	i2l384
 36528                           
 36529                           ; BSR set to: 13
 36530                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 36531  00D1F8  BF34               	btfsc	52,7,b	;volatile
 36532  00D1FA  D00A               	goto	i2l383
 36533                           
 36534                           ; BSR set to: 13
 36535                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 36536  00D1FC  5134               	movf	52,w,b	;volatile
 36537  00D1FE  0B0F               	andlw	15
 36538  00D200  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36539  00D202  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36540  00D204  0D01               	mullw	1
 36541  00D206  0E69               	movlw	low _ep_data_out
 36542  00D208  24F3               	addwf	prodl,w,c
 36543  00D20A  6ED9               	movwf	fsr2l,c
 36544  00D20C  0E01               	movlw	high _ep_data_out
 36545  00D20E  D00A               	goto	L66
 36546  00D210                     i2l383:
 36547                           
 36548                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 36549                           
 36550                           ; BSR set to: 1
 36551  00D210  010D               	movlb	13	; () banked
 36552  00D212  5134               	movf	52,w,b	;volatile
 36553  00D214  0B0F               	andlw	15
 36554  00D216  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36555  00D218  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36556  00D21A  0D01               	mullw	1
 36557  00D21C  0E6C               	movlw	low _ep_data_in
 36558  00D21E  24F3               	addwf	prodl,w,c
 36559  00D220  6ED9               	movwf	fsr2l,c
 36560  00D222  0E01               	movlw	high _ep_data_in
 36561  00D224                     L66:
 36562  00D224  20F4               	addwfc	prodh,w,c
 36563  00D226  6EDA               	movwf	fsr2h,c
 36564  00D228  0101               	movlb	1	; () banked
 36565  00D22A  82DF               	bsf	indf2,1,c
 36566  00D22C                     i2l384:
 36567                           
 36568                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 36569                           
 36570                           ; BSR set to: 1
 36571                           
 36572                           ; BSR set to: 1
 36573  00D22C  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 36574  00D230  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 36575  00D234  0E00               	movlw	0
 36576  00D236  84DB               	bsf	plusw2,2,c
 36577                           
 36578                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 36579  00D238  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 36580  00D23C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 36581  00D240  0E00               	movlw	0
 36582  00D242  8EDB               	bsf	plusw2,7,c
 36583                           
 36584                           ;usb_device.c: 2878: }
 36585  00D244  0012               	return	
 36586  00D246                     i2l381:
 36587                           
 36588                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 36589  00D246  0E04               	movlw	4
 36590  00D248  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 36591  00D24A  6E49               	movwf	USBStdFeatureReqHandler@p,c
 36592  00D24C  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 36593  00D24E  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 36594                           
 36595                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 36596  00D250  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 36597  00D254  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 36598  00D258  AEDF               	btfss	indf2,7,c
 36599  00D25A  D01B               	goto	i2l386
 36600                           
 36601                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 36602  00D25C  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 36603  00D260  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 36604  00D264  0E7F               	movlw	127
 36605  00D266  16DF               	andwf	indf2,f,c
 36606                           
 36607                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 36608  00D268  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 36609  00D26C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 36610  00D270  0E00               	movlw	0
 36611  00D272  8CDB               	bsf	plusw2,6,c
 36612                           
 36613                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 36614  00D274  0E00               	movlw	0
 36615  00D276  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 36616  00D278  0E05               	movlw	5
 36617  00D27A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 36618  00D27C  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 36619  00D280  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 36620  00D284  0E00               	movlw	0
 36621  00D286  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 36622  00D288  0E02               	movlw	2
 36623  00D28A  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 36624  00D28C  ECE7  F086         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 36625                           
 36626                           ;usb_device.c: 2893: }
 36627  00D290  D006               	goto	i2l387
 36628  00D292                     i2l386:
 36629                           
 36630                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 36631  00D292  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 36632  00D296  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 36633  00D29A  0E00               	movlw	0
 36634  00D29C  8CDB               	bsf	plusw2,6,c
 36635  00D29E                     i2l387:
 36636                           
 36637                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 36638  00D29E  0E04               	movlw	4
 36639  00D2A0  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 36640  00D2A2  6E49               	movwf	USBStdFeatureReqHandler@p,c
 36641  00D2A4  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 36642  00D2A6  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 36643                           
 36644                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 36645  00D2A8  B248               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 36646  00D2AA  D006               	goto	i2u1740_40
 36647  00D2AC  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 36648  00D2B0  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 36649  00D2B4  AEDF               	btfss	indf2,7,c
 36650  00D2B6  D030               	goto	i2l388
 36651  00D2B8                     i2u1740_40:
 36652                           
 36653                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 36654  00D2B8  010D               	movlb	13	; () banked
 36655  00D2BA  BF34               	btfsc	52,7,b	;volatile
 36656  00D2BC  D00A               	goto	i2l391
 36657                           
 36658                           ; BSR set to: 13
 36659                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 36660  00D2BE  5134               	movf	52,w,b	;volatile
 36661  00D2C0  0B0F               	andlw	15
 36662  00D2C2  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36663  00D2C4  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36664  00D2C6  0D01               	mullw	1
 36665  00D2C8  0E69               	movlw	low _ep_data_out
 36666  00D2CA  24F3               	addwf	prodl,w,c
 36667  00D2CC  6ED9               	movwf	fsr2l,c
 36668  00D2CE  0E01               	movlw	high _ep_data_out
 36669  00D2D0  D00A               	goto	L67
 36670  00D2D2                     i2l391:
 36671                           
 36672                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 36673                           
 36674                           ; BSR set to: 1
 36675  00D2D2  010D               	movlb	13	; () banked
 36676  00D2D4  5134               	movf	52,w,b	;volatile
 36677  00D2D6  0B0F               	andlw	15
 36678  00D2D8  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36679  00D2DA  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36680  00D2DC  0D01               	mullw	1
 36681  00D2DE  0E6C               	movlw	low _ep_data_in
 36682  00D2E0  24F3               	addwf	prodl,w,c
 36683  00D2E2  6ED9               	movwf	fsr2l,c
 36684  00D2E4  0E01               	movlw	high _ep_data_in
 36685  00D2E6                     L67:
 36686  00D2E6  20F4               	addwfc	prodh,w,c
 36687  00D2E8  6EDA               	movwf	fsr2h,c
 36688  00D2EA  0101               	movlb	1	; () banked
 36689  00D2EC  92DF               	bcf	indf2,1,c
 36690                           
 36691                           ; BSR set to: 1
 36692                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 36693                           
 36694                           ; BSR set to: 1
 36695  00D2EE  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 36696  00D2F2  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 36697  00D2F6  0E3B               	movlw	59
 36698  00D2F8  16DF               	andwf	indf2,f,c
 36699                           
 36700                           ; BSR set to: 1
 36701                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 36702  00D2FA  0E00               	movlw	0
 36703  00D2FC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 36704  00D2FE  0E05               	movlw	5
 36705  00D300  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 36706  00D302  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 36707  00D306  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 36708  00D30A  0E00               	movlw	0
 36709  00D30C  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 36710  00D30E  0E02               	movlw	2
 36711  00D310  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 36712  00D312  ECE7  F086         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 36713                           
 36714                           ;usb_device.c: 2923: }
 36715  00D316  D006               	goto	i2l393
 36716  00D318                     i2l388:
 36717                           
 36718                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 36719  00D318  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 36720  00D31C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 36721  00D320  0E3B               	movlw	59
 36722  00D322  16DF               	andwf	indf2,f,c
 36723  00D324                     i2l393:
 36724                           
 36725                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 36726  00D324  010D               	movlb	13	; () banked
 36727  00D326  5134               	movf	52,w,b	;volatile
 36728  00D328  0B0F               	andlw	15
 36729  00D32A  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 36730  00D32C  5045               	movf	??_USBStdFeatureReqHandler,w,c
 36731  00D32E  0D01               	mullw	1
 36732  00D330  0E26               	movlw	38
 36733  00D332  24F3               	addwf	prodl,w,c
 36734  00D334  6E46               	movwf	USBStdFeatureReqHandler@pUEP,c
 36735  00D336  0E0F               	movlw	15
 36736  00D338  20F4               	addwfc	prodh,w,c
 36737  00D33A  6E47               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 36738                           
 36739                           ; BSR set to: 13
 36740                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 36741  00D33C  C046  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 36742  00D340  C047  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 36743  00D344  0EFE               	movlw	254
 36744  00D346  16DF               	andwf	indf2,f,c
 36745                           
 36746                           ; BSR set to: 13
 36747  00D348  0012               	return	
 36748  00D34A                     __end_of_USBStdFeatureReqHandler:
 36749                           	opt stack 0
 36750                           tosu	equ	0xFFF
 36751                           tosh	equ	0xFFE
 36752                           tosl	equ	0xFFD
 36753                           pclatu	equ	0xFFB
 36754                           pclath	equ	0xFFA
 36755                           tblptru	equ	0xFF8
 36756                           tblptrh	equ	0xFF7
 36757                           tblptrl	equ	0xFF6
 36758                           tablat	equ	0xFF5
 36759                           prodh	equ	0xFF4
 36760                           prodl	equ	0xFF3
 36761                           intcon	equ	0xFF2
 36762                           indf0	equ	0xFEF
 36763                           postinc0	equ	0xFEE
 36764                           fsr0h	equ	0xFEA
 36765                           fsr0l	equ	0xFE9
 36766                           wreg	equ	0xFE8
 36767                           indf1	equ	0xFE7
 36768                           postdec1	equ	0xFE5
 36769                           plusw1	equ	0xFE3
 36770                           fsr1h	equ	0xFE2
 36771                           fsr1l	equ	0xFE1
 36772                           indf2	equ	0xFDF
 36773                           postinc2	equ	0xFDE
 36774                           postdec2	equ	0xFDD
 36775                           plusw2	equ	0xFDB
 36776                           fsr2h	equ	0xFDA
 36777                           fsr2l	equ	0xFD9
 36778                           status	equ	0xFD8
 36779                           
 36780 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 36781 ;; Defined at:
 36782 ;;		line 54 in file "usb_events.c"
 36783 ;; Parameters:    Size  Location     Type
 36784 ;;  event           2   15[COMRAM] enum E6832
 36785 ;;  pdata           2   17[COMRAM] PTR void 
 36786 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 36787 ;;		 -> BDT(48), 
 36788 ;;  size            2   19[COMRAM] unsigned int 
 36789 ;; Auto vars:     Size  Location     Type
 36790 ;;		None
 36791 ;; Return value:  Size  Location     Type
 36792 ;;                  1    wreg      unsigned char 
 36793 ;; Registers used:
 36794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36795 ;; Tracked objects:
 36796 ;;		On entry : 0/0
 36797 ;;		On exit  : 0/0
 36798 ;;		Unchanged: 0/0
 36799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36800 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36802 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36803 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36804 ;;Total ram usage:        8 bytes
 36805 ;; Hardware stack levels used:    1
 36806 ;; Hardware stack levels required when called:    3
 36807 ;; This function calls:
 36808 ;;		_APP_DeviceCustomHIDInitialize
 36809 ;;		_APP_DeviceMSDInitialize
 36810 ;;		_MSDTransferTerminated
 36811 ;;		_USBCheckHIDRequest
 36812 ;;		_USBCheckMSDRequest
 36813 ;;		i2_SYSTEM_Initialize
 36814 ;; This function is called by:
 36815 ;;		_USBDeviceTasks
 36816 ;;		_USBStdSetCfgHandler
 36817 ;;		_USBSuspend
 36818 ;;		_USBWakeFromSuspend
 36819 ;;		_USBCtrlTrfSetupHandler
 36820 ;;		_USBCheckStdRequest
 36821 ;;		_USBStdFeatureReqHandler
 36822 ;; This function uses a non-reentrant model
 36823 ;;
 36824                           
 36825                           	psect	text137
 36826  010DCE                     __ptext137:
 36827                           	opt stack 0
 36828  010DCE                     _USER_USB_CALLBACK_EVENT_HANDLER:
 36829                           	opt stack 13
 36830                           
 36831                           ;usb_events.c: 56: switch((int)event)
 36832                           
 36833                           ;incstack = 0
 36834  010DCE  D019               	goto	i2l816
 36835  010DD0                     
 36836                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 36837  010DD0  0E01               	movlw	1
 36838  010DD2  EC79  F08C         	call	i2_SYSTEM_Initialize
 36839                           
 36840                           ;usb_events.c: 79: break;
 36841  010DD6  0012               	return	
 36842  010DD8                     
 36843                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 36844  010DD8  0E02               	movlw	2
 36845  010DDA  EC79  F08C         	call	i2_SYSTEM_Initialize
 36846                           
 36847                           ;usb_events.c: 90: break;
 36848  010DDE  0012               	return	
 36849  010DE0                     
 36850                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 36851  010DE0  EC98  F08F         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 36852                           
 36853                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 36854  010DE4  EC84  F091         	call	_APP_DeviceMSDInitialize	;wreg free
 36855                           
 36856                           ;usb_events.c: 100: break;
 36857                           
 36858                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 36859                           
 36860                           ;usb_events.c: 97: break;
 36861  010DE8  0012               	return	
 36862  010DEA                     
 36863                           ;usb_events.c: 105: USBCheckHIDRequest();
 36864  010DEA  EC25  F07F         	call	_USBCheckHIDRequest	;wreg free
 36865                           
 36866                           ;usb_events.c: 108: USBCheckMSDRequest();
 36867  010DEE  EC23  F081         	call	_USBCheckMSDRequest	;wreg free
 36868                           
 36869                           ;usb_events.c: 112: break;
 36870                           
 36871                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 36872                           
 36873                           ;usb_events.c: 109: break;
 36874  010DF2  0012               	return	
 36875  010DF4                     
 36876                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 36877  010DF4  C03F  F039         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 36878  010DF8  C040  F03A         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 36879  010DFC  ECFA  F08B         	call	_MSDTransferTerminated	;wreg free
 36880                           
 36881                           ;usb_events.c: 129: }
 36882                           
 36883                           ;usb_events.c: 128: break;
 36884                           
 36885                           ;usb_events.c: 127: default:
 36886                           
 36887                           ;usb_events.c: 125: break;
 36888  010E00  0012               	return	
 36889  010E02                     i2l816:
 36890  010E02  C03D  F043         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 36891  010E06  C03E  F044         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 36892                           
 36893                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 36894                           ; Switch size 1, requested type "space"
 36895                           ; Number of cases is 2, Range of values is 0 to 127
 36896                           ; switch strategies available:
 36897                           ; Name         Instructions Cycles
 36898                           ; simple_byte            7     4 (average)
 36899                           ;	Chosen strategy is simple_byte
 36900  010E0A  5044               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 36901  010E0C  0A00               	xorlw	0	; case 0
 36902  010E0E  B4D8               	btfsc	status,2,c
 36903  010E10  D004               	goto	i2l22254
 36904  010E12  0A7F               	xorlw	127	; case 127
 36905  010E14  A4D8               	btfss	status,2,c
 36906  010E16  0012               	return	
 36907  010E18  D01A               	goto	i2l22256
 36908  010E1A                     i2l22254:
 36909                           
 36910                           ; Switch size 1, requested type "space"
 36911                           ; Number of cases is 8, Range of values is 1 to 117
 36912                           ; switch strategies available:
 36913                           ; Name         Instructions Cycles
 36914                           ; simple_byte           25    13 (average)
 36915                           ;	Chosen strategy is simple_byte
 36916  010E1A  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 36917  010E1C  0A01               	xorlw	1	; case 1
 36918  010E1E  B4D8               	btfsc	status,2,c
 36919  010E20  D7DF               	goto	i2l822
 36920  010E22  0A03               	xorlw	3	; case 2
 36921  010E24  B4D8               	btfsc	status,2,c
 36922  010E26  0012               	return	
 36923  010E28  0A01               	xorlw	1	; case 3
 36924  010E2A  B4D8               	btfsc	status,2,c
 36925  010E2C  D7DE               	goto	i2l824
 36926  010E2E  0A06               	xorlw	6	; case 5
 36927  010E30  B4D8               	btfsc	status,2,c
 36928  010E32  D7E0               	goto	i2l826
 36929  010E34  0A77               	xorlw	119	; case 114
 36930  010E36  B4D8               	btfsc	status,2,c
 36931  010E38  0012               	return	
 36932  010E3A  0A01               	xorlw	1	; case 115
 36933  010E3C  B4D8               	btfsc	status,2,c
 36934  010E3E  0012               	return	
 36935  010E40  0A07               	xorlw	7	; case 116
 36936  010E42  B4D8               	btfsc	status,2,c
 36937  010E44  D7C9               	goto	i2l821
 36938  010E46  0A01               	xorlw	1	; case 117
 36939  010E48  A4D8               	btfss	status,2,c
 36940  010E4A  0012               	return	
 36941  010E4C  D7C1               	goto	i2l820
 36942  010E4E                     i2l22256:
 36943                           
 36944                           ; Switch size 1, requested type "space"
 36945                           ; Number of cases is 1, Range of values is 255 to 255
 36946                           ; switch strategies available:
 36947                           ; Name         Instructions Cycles
 36948                           ; simple_byte            4     3 (average)
 36949                           ;	Chosen strategy is simple_byte
 36950  010E4E  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 36951  010E50  0AFF               	xorlw	255	; case 255
 36952  010E52  0012               	return	
 36953  010E54                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 36954                           	opt stack 0
 36955                           tosu	equ	0xFFF
 36956                           tosh	equ	0xFFE
 36957                           tosl	equ	0xFFD
 36958                           pclatu	equ	0xFFB
 36959                           pclath	equ	0xFFA
 36960                           tblptru	equ	0xFF8
 36961                           tblptrh	equ	0xFF7
 36962                           tblptrl	equ	0xFF6
 36963                           tablat	equ	0xFF5
 36964                           prodh	equ	0xFF4
 36965                           prodl	equ	0xFF3
 36966                           intcon	equ	0xFF2
 36967                           indf0	equ	0xFEF
 36968                           postinc0	equ	0xFEE
 36969                           fsr0h	equ	0xFEA
 36970                           fsr0l	equ	0xFE9
 36971                           wreg	equ	0xFE8
 36972                           indf1	equ	0xFE7
 36973                           postdec1	equ	0xFE5
 36974                           plusw1	equ	0xFE3
 36975                           fsr1h	equ	0xFE2
 36976                           fsr1l	equ	0xFE1
 36977                           indf2	equ	0xFDF
 36978                           postinc2	equ	0xFDE
 36979                           postdec2	equ	0xFDD
 36980                           plusw2	equ	0xFDB
 36981                           fsr2h	equ	0xFDA
 36982                           fsr2l	equ	0xFD9
 36983                           status	equ	0xFD8
 36984                           
 36985 ;; *************** function i2_SYSTEM_Initialize *****************
 36986 ;; Defined at:
 36987 ;;		line 39 in file "system.c"
 36988 ;; Parameters:    Size  Location     Type
 36989 ;;  state           1    wreg     enum E6623
 36990 ;; Auto vars:     Size  Location     Type
 36991 ;;  state           1    4[COMRAM] enum E6623
 36992 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 36993 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 36994 ;; Return value:  Size  Location     Type
 36995 ;;                  1    wreg      void 
 36996 ;; Registers used:
 36997 ;;		wreg, status,2, status,0
 36998 ;; Tracked objects:
 36999 ;;		On entry : 0/0
 37000 ;;		On exit  : 0/0
 37001 ;;		Unchanged: 0/0
 37002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37004 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37006 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37007 ;;Total ram usage:        5 bytes
 37008 ;; Hardware stack levels used:    1
 37009 ;; This function calls:
 37010 ;;		Nothing
 37011 ;; This function is called by:
 37012 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 37013 ;; This function uses a non-reentrant model
 37014 ;;
 37015                           
 37016                           	psect	text138
 37017  0118F2                     __ptext138:
 37018                           	opt stack 0
 37019  0118F2                     i2_SYSTEM_Initialize:
 37020                           	opt stack 15
 37021                           
 37022                           ;incstack = 0
 37023                           ;i2SYSTEM_Initialize@state stored from wreg
 37024  0118F2  6E32               	movwf	i2SYSTEM_Initialize@state,c
 37025                           
 37026                           ;system.c: 41: switch(state)
 37027  0118F4  D01D               	goto	i2l890
 37028  0118F6                     
 37029                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 37030  0118F6  0E02               	movlw	2
 37031  0118F8  6E2F               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 37032  0118FA  0E58               	movlw	88
 37033  0118FC  6E2E               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 37034                           
 37035                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 37036  0118FE  8C9B               	bsf	3995,6,c	;volatile
 37037  011900                     i2l10766:
 37038  011900  062E               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 37039  011902  A0D8               	btfss	status,0,c
 37040  011904  062F               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 37041  011906  282E               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 37042  011908  E1FB               	bnz	i2l10766
 37043  01190A  282F               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 37044  01190C  B4D8               	btfsc	status,2,c
 37045  01190E  0012               	return	
 37046  011910  D7F7               	goto	i2l893
 37047  011912                     
 37048                           ;system.c: 78: OSCCON = 0x70;
 37049  011912  0E70               	movlw	112
 37050  011914  6ED3               	movwf	4051,c	;volatile
 37051                           
 37052                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 37053  011916  0E03               	movlw	3
 37054  011918  6E31               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3095+1,c
 37055  01191A  0E20               	movlw	32
 37056  01191C  6E30               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3095,c
 37057  01191E                     i2l10770:
 37058  01191E  0630               	decf	i2SYSTEM_Initialize@pll_startup_counter_3095,f,c
 37059  011920  A0D8               	btfss	status,0,c
 37060  011922  0631               	decf	i2SYSTEM_Initialize@pll_startup_counter_3095+1,f,c
 37061  011924  2830               	incf	i2SYSTEM_Initialize@pll_startup_counter_3095,w,c
 37062  011926  E1FB               	bnz	i2l10770
 37063  011928  2831               	incf	i2SYSTEM_Initialize@pll_startup_counter_3095+1,w,c
 37064  01192A  B4D8               	btfsc	status,2,c
 37065  01192C  0012               	return	
 37066  01192E  D7F7               	goto	i2l899
 37067  011930                     i2l890:
 37068  011930  5032               	movf	i2SYSTEM_Initialize@state,w,c
 37069                           
 37070                           ; Switch size 1, requested type "space"
 37071                           ; Number of cases is 3, Range of values is 0 to 2
 37072                           ; switch strategies available:
 37073                           ; Name         Instructions Cycles
 37074                           ; simple_byte           10     6 (average)
 37075                           ;	Chosen strategy is simple_byte
 37076  011932  0A00               	xorlw	0	; case 0
 37077  011934  B4D8               	btfsc	status,2,c
 37078  011936  D7DF               	goto	i2l891
 37079  011938  0A01               	xorlw	1	; case 1
 37080  01193A  B4D8               	btfsc	status,2,c
 37081  01193C  0012               	return	
 37082  01193E  0A03               	xorlw	3	; case 2
 37083  011940  A4D8               	btfss	status,2,c
 37084  011942  0012               	return	
 37085  011944  D7E6               	goto	i2l897
 37086  011946                     __end_ofi2_SYSTEM_Initialize:
 37087                           	opt stack 0
 37088                           tosu	equ	0xFFF
 37089                           tosh	equ	0xFFE
 37090                           tosl	equ	0xFFD
 37091                           pclatu	equ	0xFFB
 37092                           pclath	equ	0xFFA
 37093                           tblptru	equ	0xFF8
 37094                           tblptrh	equ	0xFF7
 37095                           tblptrl	equ	0xFF6
 37096                           tablat	equ	0xFF5
 37097                           prodh	equ	0xFF4
 37098                           prodl	equ	0xFF3
 37099                           intcon	equ	0xFF2
 37100                           indf0	equ	0xFEF
 37101                           postinc0	equ	0xFEE
 37102                           fsr0h	equ	0xFEA
 37103                           fsr0l	equ	0xFE9
 37104                           wreg	equ	0xFE8
 37105                           indf1	equ	0xFE7
 37106                           postdec1	equ	0xFE5
 37107                           plusw1	equ	0xFE3
 37108                           fsr1h	equ	0xFE2
 37109                           fsr1l	equ	0xFE1
 37110                           indf2	equ	0xFDF
 37111                           postinc2	equ	0xFDE
 37112                           postdec2	equ	0xFDD
 37113                           plusw2	equ	0xFDB
 37114                           fsr2h	equ	0xFDA
 37115                           fsr2l	equ	0xFD9
 37116                           status	equ	0xFD8
 37117                           
 37118 ;; *************** function _USBCheckMSDRequest *****************
 37119 ;; Defined at:
 37120 ;;		line 218 in file "usb_device_msd.c"
 37121 ;; Parameters:    Size  Location     Type
 37122 ;;		None
 37123 ;; Auto vars:     Size  Location     Type
 37124 ;;		None
 37125 ;; Return value:  Size  Location     Type
 37126 ;;                  1    wreg      void 
 37127 ;; Registers used:
 37128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37129 ;; Tracked objects:
 37130 ;;		On entry : 0/0
 37131 ;;		On exit  : 0/0
 37132 ;;		Unchanged: 0/0
 37133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37135 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37137 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37138 ;;Total ram usage:        4 bytes
 37139 ;; Hardware stack levels used:    1
 37140 ;; Hardware stack levels required when called:    1
 37141 ;; This function calls:
 37142 ;;		i2_USBTransferOnePacket
 37143 ;; This function is called by:
 37144 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 37145 ;; This function uses a non-reentrant model
 37146 ;;
 37147                           
 37148                           	psect	text139
 37149  010246                     __ptext139:
 37150                           	opt stack 0
 37151  010246                     _USBCheckMSDRequest:
 37152                           	opt stack 14
 37153                           
 37154                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 37155                           
 37156                           ;incstack = 0
 37157  010246  010D               	movlb	13	; () banked
 37158  010248  5130               	movf	48,w,b	;volatile
 37159  01024A  0B1F               	andlw	31
 37160  01024C  06E8               	decf	wreg,f,c
 37161  01024E  A4D8               	btfss	status,2,c
 37162  010250  0012               	return	
 37163                           
 37164                           ; BSR set to: 13
 37165                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 37166                           
 37167                           ; BSR set to: 13
 37168                           
 37169                           ; BSR set to: 13
 37170                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 37171  010252  5134               	movf	52,w,b	;volatile
 37172  010254  A4D8               	btfss	status,2,c
 37173  010256  0012               	return	
 37174  010258  D04D               	goto	i2l545
 37175  01025A                     
 37176                           ; BSR set to: 13
 37177                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 37178                           
 37179                           ; BSR set to: 13
 37180  01025A  5132               	movf	50,w,b	;volatile
 37181  01025C  1133               	iorwf	51,w,b	;volatile
 37182  01025E  A4D8               	btfss	status,2,c
 37183  010260  0012               	return	
 37184                           
 37185                           ; BSR set to: 13
 37186  010262  5136               	movf	54,w,b	;volatile
 37187  010264  1137               	iorwf	55,w,b	;volatile
 37188  010266  A4D8               	btfss	status,2,c
 37189  010268  0012               	return	
 37190                           
 37191                           ; BSR set to: 13
 37192                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 37193                           
 37194                           ; BSR set to: 13
 37195                           
 37196                           ; BSR set to: 13
 37197                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 37198  01026A  0E00               	movlw	0
 37199  01026C  0100               	movlb	0	; () banked
 37200  01026E  6FFF               	movwf	_MSD_State& (0+255),b
 37201                           
 37202                           ; BSR set to: 0
 37203                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 37204  010270  69FE               	setf	_MSDCommandState& (0+255),b
 37205                           
 37206                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 37207  010272  0E00               	movlw	0
 37208  010274  0101               	movlb	1	; () banked
 37209  010276  6F82               	movwf	_MSDReadState& (0+255),b
 37210                           
 37211                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 37212  010278  0E00               	movlw	0
 37213  01027A  6E21               	movwf	_MSDWriteState,c
 37214                           
 37215                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 37216  01027C  0E01               	movlw	1
 37217  01027E  6F7E               	movwf	_MSDCBWValid& (0+255),b
 37218                           
 37219                           ; BSR set to: 1
 37220                           
 37221                           ; BSR set to: 1
 37222                           
 37223                           ; BSR set to: 1
 37224                           
 37225                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 37226  010280  C149  F039         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 37227  010284  C14A  F03A         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 37228                           
 37229                           ; BSR set to: 1
 37230  010288  5039               	movf	_USBCheckMSDRequest$2534,w,c
 37231  01028A  103A               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 37232  01028C  B4D8               	btfsc	status,2,c
 37233  01028E  D00A               	goto	i2u851_40
 37234                           
 37235                           ; BSR set to: 1
 37236                           
 37237                           ; BSR set to: 1
 37238                           
 37239                           ; BSR set to: 1
 37240                           
 37241                           ; BSR set to: 1
 37242  010290  C149  F03B         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 37243  010294  C14A  F03C         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 37244                           
 37245                           ; BSR set to: 1
 37246                           
 37247                           ; BSR set to: 1
 37248  010298  C03B  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 37249  01029C  C03C  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 37250  0102A0  BEDF               	btfsc	indf2,7,c
 37251  0102A2  D00F               	goto	i2l550
 37252  0102A4                     i2u851_40:
 37253                           
 37254                           ; BSR set to: 1
 37255                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 37256                           
 37257                           ; BSR set to: 1
 37258  0102A4  0E00               	movlw	0
 37259  0102A6  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 37260  0102A8  0E40               	movlw	64
 37261  0102AA  6E2F               	movwf	i2USBTransferOnePacket@data,c
 37262  0102AC  0E0D               	movlw	13
 37263  0102AE  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 37264  0102B0  0E40               	movlw	64
 37265  0102B2  6E31               	movwf	i2USBTransferOnePacket@len,c
 37266  0102B4  0E02               	movlw	2
 37267  0102B6  ECA5  F07A         	call	i2_USBTransferOnePacket
 37268  0102BA  C02E  F0F7         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 37269  0102BE  C02F  F0F8         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 37270  0102C2                     i2l550:
 37271                           
 37272                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 37273  0102C2  0E80               	movlw	128
 37274  0102C4  6E0D               	movwf	_inPipes+3,c	;volatile
 37275                           
 37276                           ;usb_device_msd.c: 263: break;
 37277  0102C6  0012               	return	
 37278  0102C8                     
 37279                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 37280  0102C8  010D               	movlb	13	; () banked
 37281  0102CA  5132               	movf	50,w,b	;volatile
 37282  0102CC  1133               	iorwf	51,w,b	;volatile
 37283  0102CE  A4D8               	btfss	status,2,c
 37284  0102D0  0012               	return	
 37285                           
 37286                           ; BSR set to: 13
 37287  0102D2  0536               	decf	54,w,b	;volatile
 37288  0102D4  1137               	iorwf	55,w,b	;volatile
 37289  0102D6  A4D8               	btfss	status,2,c
 37290  0102D8  0012               	return	
 37291                           
 37292                           ; BSR set to: 13
 37293                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 37294                           
 37295                           ; BSR set to: 13
 37296                           
 37297                           ; BSR set to: 13
 37298                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 37299  0102DA  0E00               	movlw	0
 37300  0102DC  6F38               	movwf	56,b	;volatile
 37301                           
 37302                           ; BSR set to: 13
 37303                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 37304  0102DE  0E38               	movlw	56
 37305  0102E0  6E0A               	movwf	_inPipes,c	;volatile
 37306  0102E2  0E0D               	movlw	13
 37307  0102E4  6E0B               	movwf	_inPipes+1,c	;volatile
 37308                           
 37309                           ; BSR set to: 13
 37310  0102E6  0E00               	movlw	0
 37311  0102E8  6E0F               	movwf	_inPipes+5,c	;volatile
 37312  0102EA  0E01               	movlw	1
 37313  0102EC  6E0E               	movwf	_inPipes+4,c	;volatile
 37314                           
 37315                           ; BSR set to: 13
 37316  0102EE  0EC1               	movlw	193
 37317  0102F0  6E0D               	movwf	_inPipes+3,c	;volatile
 37318                           
 37319                           ; BSR set to: 13
 37320                           ;usb_device_msd.c: 278: }
 37321                           
 37322                           ;usb_device_msd.c: 277: break;
 37323  0102F2  0012               	return	
 37324  0102F4                     i2l545:
 37325                           
 37326                           ; BSR set to: 13
 37327                           
 37328                           ; BSR set to: 13
 37329  0102F4  5131               	movf	49,w,b	;volatile
 37330                           
 37331                           ; Switch size 1, requested type "space"
 37332                           ; Number of cases is 2, Range of values is 254 to 255
 37333                           ; switch strategies available:
 37334                           ; Name         Instructions Cycles
 37335                           ; simple_byte            7     4 (average)
 37336                           ;	Chosen strategy is simple_byte
 37337  0102F6  0AFE               	xorlw	254	; case 254
 37338  0102F8  B4D8               	btfsc	status,2,c
 37339  0102FA  D7E6               	goto	i2l562
 37340  0102FC  0A01               	xorlw	1	; case 255
 37341  0102FE  A4D8               	btfss	status,2,c
 37342  010300  0012               	return	
 37343  010302  D7AB               	goto	i2l546
 37344  010304                     __end_of_USBCheckMSDRequest:
 37345                           	opt stack 0
 37346                           tosu	equ	0xFFF
 37347                           tosh	equ	0xFFE
 37348                           tosl	equ	0xFFD
 37349                           pclatu	equ	0xFFB
 37350                           pclath	equ	0xFFA
 37351                           tblptru	equ	0xFF8
 37352                           tblptrh	equ	0xFF7
 37353                           tblptrl	equ	0xFF6
 37354                           tablat	equ	0xFF5
 37355                           prodh	equ	0xFF4
 37356                           prodl	equ	0xFF3
 37357                           intcon	equ	0xFF2
 37358                           indf0	equ	0xFEF
 37359                           postinc0	equ	0xFEE
 37360                           fsr0h	equ	0xFEA
 37361                           fsr0l	equ	0xFE9
 37362                           wreg	equ	0xFE8
 37363                           indf1	equ	0xFE7
 37364                           postdec1	equ	0xFE5
 37365                           plusw1	equ	0xFE3
 37366                           fsr1h	equ	0xFE2
 37367                           fsr1l	equ	0xFE1
 37368                           indf2	equ	0xFDF
 37369                           postinc2	equ	0xFDE
 37370                           postdec2	equ	0xFDD
 37371                           plusw2	equ	0xFDB
 37372                           fsr2h	equ	0xFDA
 37373                           fsr2l	equ	0xFD9
 37374                           status	equ	0xFD8
 37375                           
 37376 ;; *************** function _USBCheckHIDRequest *****************
 37377 ;; Defined at:
 37378 ;;		line 153 in file "usb_device_hid.c"
 37379 ;; Parameters:    Size  Location     Type
 37380 ;;		None
 37381 ;; Auto vars:     Size  Location     Type
 37382 ;;		None
 37383 ;; Return value:  Size  Location     Type
 37384 ;;                  1    wreg      void 
 37385 ;; Registers used:
 37386 ;;		wreg, status,2, status,0
 37387 ;; Tracked objects:
 37388 ;;		On entry : 0/0
 37389 ;;		On exit  : 0/0
 37390 ;;		Unchanged: 0/0
 37391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37396 ;;Total ram usage:        0 bytes
 37397 ;; Hardware stack levels used:    1
 37398 ;; This function calls:
 37399 ;;		Nothing
 37400 ;; This function is called by:
 37401 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 37402 ;; This function uses a non-reentrant model
 37403 ;;
 37404                           
 37405                           	psect	text140
 37406  00FE4A                     __ptext140:
 37407                           	opt stack 0
 37408  00FE4A                     _USBCheckHIDRequest:
 37409                           	opt stack 15
 37410                           
 37411                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 37412                           
 37413                           ;incstack = 0
 37414  00FE4A  010D               	movlb	13	; () banked
 37415  00FE4C  5130               	movf	48,w,b	;volatile
 37416  00FE4E  0B1F               	andlw	31
 37417  00FE50  06E8               	decf	wreg,f,c
 37418  00FE52  A4D8               	btfss	status,2,c
 37419  00FE54  0012               	return	
 37420                           
 37421                           ; BSR set to: 13
 37422                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 37423                           
 37424                           ; BSR set to: 13
 37425                           
 37426                           ; BSR set to: 13
 37427  00FE56  5134               	movf	52,w,b	;volatile
 37428  00FE58  A4D8               	btfss	status,2,c
 37429  00FE5A  0012               	return	
 37430                           
 37431                           ; BSR set to: 13
 37432                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 37433                           
 37434                           ; BSR set to: 13
 37435                           
 37436                           ; BSR set to: 13
 37437  00FE5C  0E06               	movlw	6
 37438  00FE5E  1931               	xorwf	49,w,b	;volatile
 37439  00FE60  B4D8               	btfsc	status,2,c
 37440  00FE62  D018               	goto	i2l425
 37441  00FE64  D01F               	goto	i2l428
 37442  00FE66                     
 37443                           ; BSR set to: 13
 37444                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 37445                           
 37446                           ; BSR set to: 13
 37447  00FE66  042D               	decf	_USBActiveConfiguration,w,c	;volatile
 37448  00FE68  A4D8               	btfss	status,2,c
 37449  00FE6A  D01C               	goto	i2l428
 37450                           
 37451                           ; BSR set to: 13
 37452                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 37453  00FE6C  0ED0               	movlw	low (_configDescriptor1+18)
 37454  00FE6E  6E0A               	movwf	_inPipes,c	;volatile
 37455  00FE70  0EA0               	movlw	high (_configDescriptor1+18)
 37456  00FE72  6E0B               	movwf	_inPipes+1,c	;volatile
 37457                           
 37458                           ; BSR set to: 13
 37459  00FE74  0E00               	movlw	0
 37460  00FE76  6E0F               	movwf	_inPipes+5,c	;volatile
 37461  00FE78  0E09               	movlw	9
 37462  00FE7A  D00A               	goto	L68
 37463  00FE7C                     i2l10480:
 37464                           
 37465                           ; BSR set to: 13
 37466  00FE7C  0EC0               	movlw	192
 37467  00FE7E  6E0D               	movwf	_inPipes+3,c	;volatile
 37468                           
 37469                           ; BSR set to: 13
 37470                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 37471  00FE80  D011               	goto	i2l428
 37472  00FE82                     
 37473                           ; BSR set to: 13
 37474                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 37475                           
 37476                           ; BSR set to: 13
 37477  00FE82  0E84               	movlw	low _hid_rpt01
 37478  00FE84  6E0A               	movwf	_inPipes,c	;volatile
 37479  00FE86  0EA1               	movlw	high _hid_rpt01
 37480  00FE88  6E0B               	movwf	_inPipes+1,c	;volatile
 37481                           
 37482                           ; BSR set to: 13
 37483  00FE8A  0E00               	movlw	0
 37484  00FE8C  6E0F               	movwf	_inPipes+5,c	;volatile
 37485  00FE8E  0E1D               	movlw	29
 37486  00FE90                     L68:
 37487  00FE90  6E0E               	movwf	_inPipes+4,c	;volatile
 37488  00FE92  D7F4               	goto	i2l10480
 37489  00FE94                     i2l425:
 37490                           
 37491                           ; BSR set to: 13
 37492                           
 37493                           ; BSR set to: 13
 37494  00FE94  5133               	movf	51,w,b	;volatile
 37495                           
 37496                           ; Switch size 1, requested type "space"
 37497                           ; Number of cases is 3, Range of values is 33 to 35
 37498                           ; switch strategies available:
 37499                           ; Name         Instructions Cycles
 37500                           ; simple_byte           10     6 (average)
 37501                           ;	Chosen strategy is simple_byte
 37502  00FE96  0A21               	xorlw	33	; case 33
 37503  00FE98  B4D8               	btfsc	status,2,c
 37504  00FE9A  D7E5               	goto	i2l426
 37505  00FE9C  0A03               	xorlw	3	; case 34
 37506  00FE9E  B4D8               	btfsc	status,2,c
 37507  00FEA0  D7F0               	goto	i2l429
 37508  00FEA2  0A01               	xorlw	1	; case 35
 37509  00FEA4                     i2l428:
 37510                           
 37511                           ; BSR set to: 13
 37512                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 37513                           
 37514                           ; BSR set to: 13
 37515                           
 37516                           ; BSR set to: 13
 37517  00FEA4  3930               	swapf	48,w,b	;volatile
 37518  00FEA6  32E8               	rrcf	wreg,f,c
 37519  00FEA8  0B03               	andlw	3
 37520  00FEAA  06E8               	decf	wreg,f,c
 37521  00FEAC  A4D8               	btfss	status,2,c
 37522  00FEAE  0012               	return	
 37523  00FEB0  D020               	goto	i2l432
 37524  00FEB2                     
 37525                           ; BSR set to: 13
 37526                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 37527                           
 37528                           ; BSR set to: 13
 37529  00FEB2  0E8F               	movlw	low _idle_rate
 37530  00FEB4  6E0A               	movwf	_inPipes,c	;volatile
 37531  00FEB6  0E01               	movlw	high _idle_rate
 37532  00FEB8  6E0B               	movwf	_inPipes+1,c	;volatile
 37533                           
 37534                           ; BSR set to: 13
 37535  00FEBA  0E00               	movlw	0
 37536  00FEBC  6E0F               	movwf	_inPipes+5,c	;volatile
 37537  00FEBE  0E01               	movlw	1
 37538  00FEC0  6E0E               	movwf	_inPipes+4,c	;volatile
 37539                           
 37540                           ; BSR set to: 13
 37541  00FEC2  0EC1               	movlw	193
 37542  00FEC4  6E0D               	movwf	_inPipes+3,c	;volatile
 37543                           
 37544                           ;usb_device_hid.c: 223: break;
 37545  00FEC6  0012               	return	
 37546  00FEC8                     
 37547                           ; BSR set to: 13
 37548                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 37549                           
 37550                           ; BSR set to: 13
 37551  00FEC8  0E80               	movlw	128
 37552  00FECA  6E0D               	movwf	_inPipes+3,c	;volatile
 37553                           
 37554                           ; BSR set to: 13
 37555                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 37556  00FECC  CD33 F18F          	movff	3379,_idle_rate	;volatile
 37557                           
 37558                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 37559  00FED0  0012               	return	
 37560  00FED2                     
 37561                           ; BSR set to: 13
 37562                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 37563                           
 37564                           ; BSR set to: 13
 37565  00FED2  0E8E               	movlw	low _active_protocol
 37566  00FED4  6E0A               	movwf	_inPipes,c	;volatile
 37567  00FED6  0E01               	movlw	high _active_protocol
 37568  00FED8  6E0B               	movwf	_inPipes+1,c	;volatile
 37569                           
 37570                           ; BSR set to: 13
 37571  00FEDA  0E00               	movlw	0
 37572  00FEDC  6E0F               	movwf	_inPipes+5,c	;volatile
 37573  00FEDE  0E01               	movlw	1
 37574  00FEE0  6E0E               	movwf	_inPipes+4,c	;volatile
 37575                           
 37576                           ; BSR set to: 13
 37577  00FEE2  0E81               	movlw	129
 37578  00FEE4  6E0D               	movwf	_inPipes+3,c	;volatile
 37579                           
 37580                           ;usb_device_hid.c: 234: break;
 37581  00FEE6  0012               	return	
 37582  00FEE8                     
 37583                           ; BSR set to: 13
 37584                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 37585                           
 37586                           ; BSR set to: 13
 37587  00FEE8  0E80               	movlw	128
 37588  00FEEA  6E0D               	movwf	_inPipes+3,c	;volatile
 37589                           
 37590                           ; BSR set to: 13
 37591                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 37592  00FEEC  CD32 F18E          	movff	3378,_active_protocol	;volatile
 37593                           
 37594                           ; BSR set to: 13
 37595                           ;usb_device_hid.c: 239: }
 37596                           
 37597                           ;usb_device_hid.c: 238: break;
 37598  00FEF0  0012               	return	
 37599  00FEF2                     i2l432:
 37600                           
 37601                           ; BSR set to: 13
 37602                           
 37603                           ; BSR set to: 13
 37604  00FEF2  5131               	movf	49,w,b	;volatile
 37605                           
 37606                           ; Switch size 1, requested type "space"
 37607                           ; Number of cases is 6, Range of values is 1 to 11
 37608                           ; switch strategies available:
 37609                           ; Name         Instructions Cycles
 37610                           ; simple_byte           19    10 (average)
 37611                           ;	Chosen strategy is simple_byte
 37612  00FEF4  0A01               	xorlw	1	; case 1
 37613  00FEF6  B4D8               	btfsc	status,2,c
 37614  00FEF8  0012               	return	
 37615  00FEFA  0A03               	xorlw	3	; case 2
 37616  00FEFC  B4D8               	btfsc	status,2,c
 37617  00FEFE  D7D9               	goto	i2l436
 37618  00FF00  0A01               	xorlw	1	; case 3
 37619  00FF02  B4D8               	btfsc	status,2,c
 37620  00FF04  D7E6               	goto	i2l438
 37621  00FF06  0A0A               	xorlw	10	; case 9
 37622  00FF08  B4D8               	btfsc	status,2,c
 37623  00FF0A  0012               	return	
 37624  00FF0C  0A03               	xorlw	3	; case 10
 37625  00FF0E  B4D8               	btfsc	status,2,c
 37626  00FF10  D7DB               	goto	i2l437
 37627  00FF12  0A01               	xorlw	1	; case 11
 37628  00FF14  A4D8               	btfss	status,2,c
 37629  00FF16  0012               	return	
 37630  00FF18  D7E7               	goto	i2l439
 37631  00FF1A                     __end_of_USBCheckHIDRequest:
 37632                           	opt stack 0
 37633                           tosu	equ	0xFFF
 37634                           tosh	equ	0xFFE
 37635                           tosl	equ	0xFFD
 37636                           pclatu	equ	0xFFB
 37637                           pclath	equ	0xFFA
 37638                           tblptru	equ	0xFF8
 37639                           tblptrh	equ	0xFF7
 37640                           tblptrl	equ	0xFF6
 37641                           tablat	equ	0xFF5
 37642                           prodh	equ	0xFF4
 37643                           prodl	equ	0xFF3
 37644                           intcon	equ	0xFF2
 37645                           indf0	equ	0xFEF
 37646                           postinc0	equ	0xFEE
 37647                           fsr0h	equ	0xFEA
 37648                           fsr0l	equ	0xFE9
 37649                           wreg	equ	0xFE8
 37650                           indf1	equ	0xFE7
 37651                           postdec1	equ	0xFE5
 37652                           plusw1	equ	0xFE3
 37653                           fsr1h	equ	0xFE2
 37654                           fsr1l	equ	0xFE1
 37655                           indf2	equ	0xFDF
 37656                           postinc2	equ	0xFDE
 37657                           postdec2	equ	0xFDD
 37658                           plusw2	equ	0xFDB
 37659                           fsr2h	equ	0xFDA
 37660                           fsr2l	equ	0xFD9
 37661                           status	equ	0xFD8
 37662                           
 37663 ;; *************** function _MSDTransferTerminated *****************
 37664 ;; Defined at:
 37665 ;;		line 1674 in file "usb_device_msd.c"
 37666 ;; Parameters:    Size  Location     Type
 37667 ;;  handle          2   11[COMRAM] PTR void 
 37668 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 37669 ;;		 -> BDT(48), 
 37670 ;; Auto vars:     Size  Location     Type
 37671 ;;		None
 37672 ;; Return value:  Size  Location     Type
 37673 ;;                  1    wreg      void 
 37674 ;; Registers used:
 37675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37676 ;; Tracked objects:
 37677 ;;		On entry : 0/0
 37678 ;;		On exit  : 0/0
 37679 ;;		Unchanged: 0/0
 37680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37684 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37685 ;;Total ram usage:        4 bytes
 37686 ;; Hardware stack levels used:    1
 37687 ;; Hardware stack levels required when called:    1
 37688 ;; This function calls:
 37689 ;;		i2_USBStallEndpoint
 37690 ;;		i2_USBTransferOnePacket
 37691 ;; This function is called by:
 37692 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 37693 ;; This function uses a non-reentrant model
 37694 ;;
 37695                           
 37696                           	psect	text141
 37697  0117F4                     __ptext141:
 37698                           	opt stack 0
 37699  0117F4                     _MSDTransferTerminated:
 37700                           	opt stack 14
 37701                           
 37702                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 37703                           
 37704                           ; BSR set to: 13
 37705                           ;incstack = 0
 37706  0117F4  0101               	movlb	1	; () banked
 37707  0117F6  517E               	movf	_MSDCBWValid& (0+255),w,b
 37708  0117F8  A4D8               	btfss	status,2,c
 37709  0117FA  D00B               	goto	i2l780
 37710                           
 37711                           ; BSR set to: 1
 37712                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 37713  0117FC  0E01               	movlw	1
 37714  0117FE  6E2E               	movwf	i2USBStallEndpoint@dir,c
 37715  011800  0E02               	movlw	2
 37716  011802  EC22  F07A         	call	i2_USBStallEndpoint
 37717                           
 37718                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 37719  011806  0E00               	movlw	0
 37720  011808  6E2E               	movwf	i2USBStallEndpoint@dir,c
 37721  01180A  0E02               	movlw	2
 37722  01180C  EC22  F07A         	call	i2_USBStallEndpoint
 37723                           
 37724                           ;usb_device_msd.c: 1681: }
 37725  011810  0012               	return	
 37726  011812                     i2l780:
 37727  011812  C149  F03B         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 37728  011816  C14A  F03C         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 37729  01181A  503B               	movf	_MSDTransferTerminated$2623,w,c
 37730  01181C  1839               	xorwf	MSDTransferTerminated@handle,w,c
 37731  01181E  E114               	bnz	i2l783
 37732  011820  503C               	movf	_MSDTransferTerminated$2623+1,w,c
 37733  011822  183A               	xorwf	MSDTransferTerminated@handle+1,w,c
 37734  011824  A4D8               	btfss	status,2,c
 37735  011826  0012               	return	
 37736                           
 37737                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 37738  011828  0E00               	movlw	0
 37739  01182A  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 37740  01182C  0E40               	movlw	64
 37741  01182E  6E2F               	movwf	i2USBTransferOnePacket@data,c
 37742  011830  0E0D               	movlw	13
 37743  011832  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 37744  011834  0E40               	movlw	64
 37745  011836  6E31               	movwf	i2USBTransferOnePacket@len,c
 37746  011838  0E02               	movlw	2
 37747  01183A  ECA5  F07A         	call	i2_USBTransferOnePacket
 37748  01183E  C02E  F0F7         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 37749  011842  C02F  F0F8         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 37750  011846  0012               	return	
 37751  011848                     i2l783:
 37752  011848  0012               	return		;funcret
 37753  01184A                     __end_of_MSDTransferTerminated:
 37754                           	opt stack 0
 37755                           tosu	equ	0xFFF
 37756                           tosh	equ	0xFFE
 37757                           tosl	equ	0xFFD
 37758                           pclatu	equ	0xFFB
 37759                           pclath	equ	0xFFA
 37760                           tblptru	equ	0xFF8
 37761                           tblptrh	equ	0xFF7
 37762                           tblptrl	equ	0xFF6
 37763                           tablat	equ	0xFF5
 37764                           prodh	equ	0xFF4
 37765                           prodl	equ	0xFF3
 37766                           intcon	equ	0xFF2
 37767                           indf0	equ	0xFEF
 37768                           postinc0	equ	0xFEE
 37769                           fsr0h	equ	0xFEA
 37770                           fsr0l	equ	0xFE9
 37771                           wreg	equ	0xFE8
 37772                           indf1	equ	0xFE7
 37773                           postdec1	equ	0xFE5
 37774                           plusw1	equ	0xFE3
 37775                           fsr1h	equ	0xFE2
 37776                           fsr1l	equ	0xFE1
 37777                           indf2	equ	0xFDF
 37778                           postinc2	equ	0xFDE
 37779                           postdec2	equ	0xFDD
 37780                           plusw2	equ	0xFDB
 37781                           fsr2h	equ	0xFDA
 37782                           fsr2l	equ	0xFD9
 37783                           status	equ	0xFD8
 37784                           
 37785 ;; *************** function i2_USBStallEndpoint *****************
 37786 ;; Defined at:
 37787 ;;		line 1073 in file "usb_device.c"
 37788 ;; Parameters:    Size  Location     Type
 37789 ;;  ep              1    wreg     unsigned char 
 37790 ;;  dir             1    0[COMRAM] unsigned char 
 37791 ;; Auto vars:     Size  Location     Type
 37792 ;;  ep              1    5[COMRAM] unsigned char 
 37793 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 37794 ;;		 -> BDT(48), 
 37795 ;; Return value:  Size  Location     Type
 37796 ;;                  1    wreg      void 
 37797 ;; Registers used:
 37798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37799 ;; Tracked objects:
 37800 ;;		On entry : 0/0
 37801 ;;		On exit  : 0/0
 37802 ;;		Unchanged: 0/0
 37803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37804 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37805 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37806 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37807 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37808 ;;Total ram usage:        8 bytes
 37809 ;; Hardware stack levels used:    1
 37810 ;; This function calls:
 37811 ;;		Nothing
 37812 ;; This function is called by:
 37813 ;;		_MSDTransferTerminated
 37814 ;; This function uses a non-reentrant model
 37815 ;;
 37816                           
 37817                           	psect	text142
 37818  00F444                     __ptext142:
 37819                           	opt stack 0
 37820  00F444                     i2_USBStallEndpoint:
 37821                           	opt stack 14
 37822                           
 37823                           ;incstack = 0
 37824                           ;i2USBStallEndpoint@ep stored from wreg
 37825  00F444  6E33               	movwf	i2USBStallEndpoint@ep,c
 37826                           
 37827                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 37828  00F446  5033               	movf	i2USBStallEndpoint@ep,w,c
 37829  00F448  A4D8               	btfss	status,2,c
 37830  00F44A  D02B               	goto	i2l192
 37831                           
 37832                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 37833  00F44C  EE20 F001          	lfsr	2,1
 37834  00F450  501A               	movf	_pBDTEntryEP0OutNext,w,c
 37835  00F452  26D9               	addwf	fsr2l,f,c
 37836  00F454  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 37837  00F456  22DA               	addwfc	fsr2h,f,c
 37838  00F458  0E08               	movlw	8
 37839  00F45A  6EDF               	movwf	indf2,c
 37840                           
 37841                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 37842  00F45C  EE20 F002          	lfsr	2,2
 37843  00F460  501A               	movf	_pBDTEntryEP0OutNext,w,c
 37844  00F462  26D9               	addwf	fsr2l,f,c
 37845  00F464  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 37846  00F466  22DA               	addwfc	fsr2h,f,c
 37847  00F468  0E30               	movlw	48
 37848  00F46A  6EDE               	movwf	postinc2,c
 37849  00F46C  0E0D               	movlw	13
 37850  00F46E  6EDD               	movwf	postdec2,c
 37851                           
 37852                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 37853  00F470  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 37854  00F474  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 37855  00F478  0E0C               	movlw	12
 37856  00F47A  6EDF               	movwf	indf2,c
 37857                           
 37858                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 37859  00F47C  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 37860  00F480  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 37861  00F484  0E00               	movlw	0
 37862  00F486  8EDB               	bsf	plusw2,7,c
 37863                           
 37864                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 37865  00F488  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 37866  00F48C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 37867  00F490  0E04               	movlw	4
 37868  00F492  6EDF               	movwf	indf2,c
 37869                           
 37870                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 37871  00F494  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 37872  00F498  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 37873  00F49C  0E00               	movlw	0
 37874  00F49E  8EDB               	bsf	plusw2,7,c
 37875                           
 37876                           ;usb_device.c: 1089: }
 37877  00F4A0  0012               	return	
 37878  00F4A2                     i2l192:
 37879                           
 37880                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 37881  00F4A2  502E               	movf	i2USBStallEndpoint@dir,w,c
 37882  00F4A4  6E2F               	movwf	??i2_USBStallEndpoint& (0+255),c
 37883  00F4A6  6A30               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 37884  00F4A8  90D8               	bcf	status,0,c
 37885  00F4AA  362F               	rlcf	??i2_USBStallEndpoint,f,c
 37886  00F4AC  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 37887  00F4AE  5033               	movf	i2USBStallEndpoint@ep,w,c
 37888  00F4B0  6E31               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 37889  00F4B2  6A32               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 37890  00F4B4  90D8               	bcf	status,0,c
 37891  00F4B6  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 37892  00F4B8  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 37893  00F4BA  90D8               	bcf	status,0,c
 37894  00F4BC  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 37895  00F4BE  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 37896  00F4C0  502F               	movf	??i2_USBStallEndpoint,w,c
 37897  00F4C2  2631               	addwf	??i2_USBStallEndpoint+2,f,c
 37898  00F4C4  5030               	movf	??i2_USBStallEndpoint+1,w,c
 37899  00F4C6  2232               	addwfc	??i2_USBStallEndpoint+3,f,c
 37900  00F4C8  90D8               	bcf	status,0,c
 37901  00F4CA  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 37902  00F4CC  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 37903  00F4CE  90D8               	bcf	status,0,c
 37904  00F4D0  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 37905  00F4D2  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 37906  00F4D4  0E00               	movlw	0
 37907  00F4D6  2431               	addwf	??i2_USBStallEndpoint+2,w,c
 37908  00F4D8  6E34               	movwf	i2USBStallEndpoint@p,c
 37909  00F4DA  0E0D               	movlw	13
 37910  00F4DC  2032               	addwfc	??i2_USBStallEndpoint+3,w,c
 37911  00F4DE  6E35               	movwf	i2USBStallEndpoint@p+1,c
 37912                           
 37913                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 37914  00F4E0  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 37915  00F4E4  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 37916  00F4E8  0E00               	movlw	0
 37917  00F4EA  84DB               	bsf	plusw2,2,c
 37918                           
 37919                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 37920  00F4EC  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 37921  00F4F0  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 37922  00F4F4  0E00               	movlw	0
 37923  00F4F6  8EDB               	bsf	plusw2,7,c
 37924                           
 37925                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 37926  00F4F8  5033               	movf	i2USBStallEndpoint@ep,w,c
 37927  00F4FA  0D04               	mullw	4
 37928  00F4FC  CFF3 F02F          	movff	prodl,??i2_USBStallEndpoint
 37929  00F500  CFF4 F030          	movff	prodh,??i2_USBStallEndpoint+1
 37930  00F504  502E               	movf	i2USBStallEndpoint@dir,w,c
 37931  00F506  0D02               	mullw	2
 37932  00F508  50F3               	movf	prodl,w,c
 37933  00F50A  262F               	addwf	??i2_USBStallEndpoint,f,c
 37934  00F50C  50F4               	movf	prodh,w,c
 37935  00F50E  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 37936  00F510  90D8               	bcf	status,0,c
 37937  00F512  362F               	rlcf	??i2_USBStallEndpoint,f,c
 37938  00F514  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 37939  00F516  90D8               	bcf	status,0,c
 37940  00F518  362F               	rlcf	??i2_USBStallEndpoint,f,c
 37941  00F51A  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 37942  00F51C  0E04               	movlw	4
 37943  00F51E  262F               	addwf	??i2_USBStallEndpoint,f,c
 37944  00F520  0E00               	movlw	0
 37945  00F522  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 37946  00F524  0E00               	movlw	0
 37947  00F526  242F               	addwf	??i2_USBStallEndpoint,w,c
 37948  00F528  6E34               	movwf	i2USBStallEndpoint@p,c
 37949  00F52A  0E0D               	movlw	13
 37950  00F52C  2030               	addwfc	??i2_USBStallEndpoint+1,w,c
 37951  00F52E  6E35               	movwf	i2USBStallEndpoint@p+1,c
 37952                           
 37953                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 37954  00F530  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 37955  00F534  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 37956  00F538  0E00               	movlw	0
 37957  00F53A  84DB               	bsf	plusw2,2,c
 37958                           
 37959                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 37960  00F53C  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 37961  00F540  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 37962  00F544  0E00               	movlw	0
 37963  00F546  8EDB               	bsf	plusw2,7,c
 37964  00F548  0012               	return	
 37965  00F54A                     __end_ofi2_USBStallEndpoint:
 37966                           	opt stack 0
 37967                           tosu	equ	0xFFF
 37968                           tosh	equ	0xFFE
 37969                           tosl	equ	0xFFD
 37970                           pclatu	equ	0xFFB
 37971                           pclath	equ	0xFFA
 37972                           tblptru	equ	0xFF8
 37973                           tblptrh	equ	0xFF7
 37974                           tblptrl	equ	0xFF6
 37975                           tablat	equ	0xFF5
 37976                           prodh	equ	0xFF4
 37977                           prodl	equ	0xFF3
 37978                           intcon	equ	0xFF2
 37979                           indf0	equ	0xFEF
 37980                           postinc0	equ	0xFEE
 37981                           fsr0h	equ	0xFEA
 37982                           fsr0l	equ	0xFE9
 37983                           wreg	equ	0xFE8
 37984                           indf1	equ	0xFE7
 37985                           postdec1	equ	0xFE5
 37986                           plusw1	equ	0xFE3
 37987                           fsr1h	equ	0xFE2
 37988                           fsr1l	equ	0xFE1
 37989                           indf2	equ	0xFDF
 37990                           postinc2	equ	0xFDE
 37991                           postdec2	equ	0xFDD
 37992                           plusw2	equ	0xFDB
 37993                           fsr2h	equ	0xFDA
 37994                           fsr2l	equ	0xFD9
 37995                           status	equ	0xFD8
 37996                           
 37997 ;; *************** function _APP_DeviceMSDInitialize *****************
 37998 ;; Defined at:
 37999 ;;		line 84 in file "app_device_msd.c"
 38000 ;; Parameters:    Size  Location     Type
 38001 ;;		None
 38002 ;; Auto vars:     Size  Location     Type
 38003 ;;		None
 38004 ;; Return value:  Size  Location     Type
 38005 ;;                  1    wreg      void 
 38006 ;; Registers used:
 38007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 38008 ;; Tracked objects:
 38009 ;;		On entry : 0/0
 38010 ;;		On exit  : 0/0
 38011 ;;		Unchanged: 0/0
 38012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38017 ;;Total ram usage:        0 bytes
 38018 ;; Hardware stack levels used:    1
 38019 ;; Hardware stack levels required when called:    2
 38020 ;; This function calls:
 38021 ;;		_USBEnableEndpoint
 38022 ;;		_USBMSDInit
 38023 ;; This function is called by:
 38024 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 38025 ;; This function uses a non-reentrant model
 38026 ;;
 38027                           
 38028                           	psect	text143
 38029  012308                     __ptext143:
 38030                           	opt stack 0
 38031  012308                     _APP_DeviceMSDInitialize:
 38032                           	opt stack 13
 38033                           
 38034                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 38035                           
 38036                           ;incstack = 0
 38037  012308  0E1E               	movlw	30
 38038  01230A  6E36               	movwf	USBEnableEndpoint@options,c
 38039  01230C  0E02               	movlw	2
 38040  01230E  ECBB  F08E         	call	_USBEnableEndpoint
 38041                           
 38042                           ;app_device_msd.c: 93: USBMSDInit();
 38043  012312  EC0D  F078         	call	_USBMSDInit	;wreg free
 38044  012316  0012               	return		;funcret
 38045  012318                     __end_of_APP_DeviceMSDInitialize:
 38046                           	opt stack 0
 38047                           tosu	equ	0xFFF
 38048                           tosh	equ	0xFFE
 38049                           tosl	equ	0xFFD
 38050                           pclatu	equ	0xFFB
 38051                           pclath	equ	0xFFA
 38052                           tblptru	equ	0xFF8
 38053                           tblptrh	equ	0xFF7
 38054                           tblptrl	equ	0xFF6
 38055                           tablat	equ	0xFF5
 38056                           prodh	equ	0xFF4
 38057                           prodl	equ	0xFF3
 38058                           intcon	equ	0xFF2
 38059                           indf0	equ	0xFEF
 38060                           postinc0	equ	0xFEE
 38061                           fsr0h	equ	0xFEA
 38062                           fsr0l	equ	0xFE9
 38063                           wreg	equ	0xFE8
 38064                           indf1	equ	0xFE7
 38065                           postdec1	equ	0xFE5
 38066                           plusw1	equ	0xFE3
 38067                           fsr1h	equ	0xFE2
 38068                           fsr1l	equ	0xFE1
 38069                           indf2	equ	0xFDF
 38070                           postinc2	equ	0xFDE
 38071                           postdec2	equ	0xFDD
 38072                           plusw2	equ	0xFDB
 38073                           fsr2h	equ	0xFDA
 38074                           fsr2l	equ	0xFD9
 38075                           status	equ	0xFD8
 38076                           
 38077 ;; *************** function _USBMSDInit *****************
 38078 ;; Defined at:
 38079 ;;		line 142 in file "usb_device_msd.c"
 38080 ;; Parameters:    Size  Location     Type
 38081 ;;		None
 38082 ;; Auto vars:     Size  Location     Type
 38083 ;;		None
 38084 ;; Return value:  Size  Location     Type
 38085 ;;                  1    wreg      void 
 38086 ;; Registers used:
 38087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 38088 ;; Tracked objects:
 38089 ;;		On entry : 0/0
 38090 ;;		On exit  : 0/0
 38091 ;;		Unchanged: 0/0
 38092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38095 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38096 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38097 ;;Total ram usage:        3 bytes
 38098 ;; Hardware stack levels used:    1
 38099 ;; Hardware stack levels required when called:    1
 38100 ;; This function calls:
 38101 ;;		i2_ExternalFlash_MediaDetect
 38102 ;;		i2_ExternalFlash_MediaInitialize
 38103 ;;		i2_ResetSenseData
 38104 ;;		i2_USBTransferOnePacket
 38105 ;; This function is called by:
 38106 ;;		_APP_DeviceMSDInitialize
 38107 ;; This function uses a non-reentrant model
 38108 ;;
 38109                           
 38110                           	psect	text144
 38111  00F01A                     __ptext144:
 38112                           	opt stack 0
 38113  00F01A                     _USBMSDInit:
 38114                           	opt stack 13
 38115                           
 38116                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 38117                           
 38118                           ;incstack = 0
 38119  00F01A  0E00               	movlw	0
 38120  00F01C  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 38121  00F01E  0E40               	movlw	64
 38122  00F020  6E2F               	movwf	i2USBTransferOnePacket@data,c
 38123  00F022  0E0D               	movlw	13
 38124  00F024  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 38125  00F026  0E40               	movlw	64
 38126  00F028  6E31               	movwf	i2USBTransferOnePacket@len,c
 38127  00F02A  0E02               	movlw	2
 38128  00F02C  ECA5  F07A         	call	i2_USBTransferOnePacket
 38129  00F030  C02E  F0F7         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 38130  00F034  C02F  F0F8         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 38131  00F038  C014  F0F5         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 38132  00F03C  C015  F0F6         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 38133                           
 38134                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 38135  00F040  0E00               	movlw	0
 38136  00F042  0100               	movlb	0	; () banked
 38137  00F044  6FFF               	movwf	_MSD_State& (0+255),b
 38138                           
 38139                           ; BSR set to: 0
 38140                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 38141  00F046  69FE               	setf	_MSDCommandState& (0+255),b
 38142                           
 38143                           ; BSR set to: 0
 38144                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 38145  00F048  0E00               	movlw	0
 38146  00F04A  0101               	movlb	1	; () banked
 38147  00F04C  6F82               	movwf	_MSDReadState& (0+255),b
 38148                           
 38149                           ; BSR set to: 1
 38150                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 38151  00F04E  0E00               	movlw	0
 38152  00F050  6E21               	movwf	_MSDWriteState,c
 38153                           
 38154                           ; BSR set to: 1
 38155                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 38156  00F052  0E00               	movlw	0
 38157  00F054  0100               	movlb	0	; () banked
 38158  00F056  6FFD               	movwf	_MSDHostNoData& (0+255),b
 38159                           
 38160                           ; BSR set to: 0
 38161                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 38162  00F058  0E00               	movlw	0
 38163  00F05A  0101               	movlb	1	; () banked
 38164  00F05C  6F57               	movwf	_gblNumBLKS& (0+255),b
 38165  00F05E  0E00               	movlw	0
 38166  00F060  6F58               	movwf	(_gblNumBLKS+1)& (0+255),b
 38167  00F062  0E00               	movlw	0
 38168  00F064  6F59               	movwf	(_gblNumBLKS+2)& (0+255),b
 38169  00F066  0E00               	movlw	0
 38170  00F068  6F5A               	movwf	(_gblNumBLKS+3)& (0+255),b
 38171                           
 38172                           ; BSR set to: 1
 38173                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 38174  00F06A  0E00               	movlw	0
 38175  00F06C  6F53               	movwf	_gblBLKLen& (0+255),b
 38176  00F06E  0E00               	movlw	0
 38177  00F070  6F54               	movwf	(_gblBLKLen+1)& (0+255),b
 38178  00F072  0E00               	movlw	0
 38179  00F074  6F55               	movwf	(_gblBLKLen+2)& (0+255),b
 38180  00F076  0E00               	movlw	0
 38181  00F078  6F56               	movwf	(_gblBLKLen+3)& (0+255),b
 38182                           
 38183                           ; BSR set to: 1
 38184                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 38185  00F07A  0E01               	movlw	1
 38186  00F07C  6F7E               	movwf	_MSDCBWValid& (0+255),b
 38187                           
 38188                           ; BSR set to: 1
 38189                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 38190  00F07E  0E00               	movlw	0
 38191  00F080  6F76               	movwf	(_gblMediaPresent+1)& (0+255),b
 38192  00F082  0E00               	movlw	0
 38193  00F084  6F75               	movwf	_gblMediaPresent& (0+255),b
 38194                           
 38195                           ; BSR set to: 1
 38196                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 38197  00F086  0E00               	movlw	0
 38198  00F088  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 38199  00F08A  D04A               	goto	i2l534
 38200  00F08C                     
 38201                           ; BSR set to: 1
 38202                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 38203                           
 38204                           ; BSR set to: 1
 38205  00F08C  510D               	movf	(_gblCBW+13)& (0+255),w,b
 38206  00F08E  0D01               	mullw	1
 38207  00F090  0E7F               	movlw	low _SoftDetach
 38208  00F092  24F3               	addwf	prodl,w,c
 38209  00F094  6ED9               	movwf	fsr2l,c
 38210  00F096  0E01               	movlw	high _SoftDetach
 38211  00F098  20F4               	addwfc	prodh,w,c
 38212  00F09A  6EDA               	movwf	fsr2h,c
 38213  00F09C  0E00               	movlw	0
 38214  00F09E  6EDF               	movwf	indf2,c
 38215                           
 38216                           ; BSR set to: 1
 38217                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 38218  00F0A0  C1A5  F02E         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 38219  00F0A4  C1A6  F02F         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 38220  00F0A8  EE21  F099         	lfsr	2,_LUN+9
 38221  00F0AC  D801               	call	i2u1616_48
 38222  00F0AE  D00A               	goto	i2u1616_49
 38223  00F0B0                     i2u1616_48:
 38224  00F0B0  0005               	push	
 38225  00F0B2  6EFA               	movwf	pclath,c
 38226  00F0B4  50DE               	movf	postinc2,w,c
 38227  00F0B6  6EFD               	movwf	tosl,c
 38228  00F0B8  50DE               	movf	postinc2,w,c
 38229  00F0BA  6EFE               	movwf	tosh,c
 38230  00F0BC  50DE               	movf	postinc2,w,c
 38231  00F0BE  6EFF               	movwf	tosu,c
 38232  00F0C0  50FA               	movf	pclath,w,c
 38233  00F0C2  0012               	return		;indir
 38234  00F0C4                     i2u1616_49:
 38235  00F0C4  0900               	iorlw	0
 38236  00F0C6  B4D8               	btfsc	status,2,c
 38237  00F0C8  D027               	goto	i2l537
 38238                           
 38239                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 38240  00F0CA  C1A5  F02E         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 38241  00F0CE  C1A6  F02F         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 38242  00F0D2  D801               	call	i2u1618_48
 38243  00F0D4  D00B               	goto	i2u1618_49
 38244  00F0D6                     i2u1618_48:
 38245  00F0D6  0005               	push	
 38246  00F0D8  6EFA               	movwf	pclath,c
 38247  00F0DA  0101               	movlb	1	; () banked
 38248  00F0DC  5190               	movf	_LUN& (0+255),w,b
 38249  00F0DE  6EFD               	movwf	tosl,c
 38250  00F0E0  5191               	movf	(_LUN+1)& (0+255),w,b
 38251  00F0E2  6EFE               	movwf	tosh,c
 38252  00F0E4  5192               	movf	(_LUN+2)& (0+255),w,b
 38253  00F0E6  6EFF               	movwf	tosu,c
 38254  00F0E8  50FA               	movf	pclath,w,c
 38255  00F0EA  0012               	return		;indir
 38256  00F0EC                     i2u1618_49:
 38257  00F0EC  502E               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 38258  00F0EE  102F               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 38259  00F0F0  B4D8               	btfsc	status,2,c
 38260  00F0F2  D012               	goto	i2l537
 38261                           
 38262                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 38263  00F0F4  C10D  F039         	movff	_gblCBW+13,??_USBMSDInit
 38264  00F0F8  0E01               	movlw	1
 38265  00F0FA  6E3A               	movwf	(??_USBMSDInit+1)& (0+255),c
 38266  00F0FC  0E00               	movlw	0
 38267  00F0FE  6E3B               	movwf	(??_USBMSDInit+2)& (0+255),c
 38268  00F100  2A39               	incf	??_USBMSDInit,f,c
 38269  00F102  D003               	goto	i2u1620_44
 38270  00F104                     i2u1620_45:
 38271  00F104  90D8               	bcf	status,0,c
 38272  00F106  363A               	rlcf	??_USBMSDInit+1,f,c
 38273  00F108  363B               	rlcf	??_USBMSDInit+2,f,c
 38274  00F10A                     i2u1620_44:
 38275  00F10A  2E39               	decfsz	??_USBMSDInit,f,c
 38276  00F10C  D7FB               	goto	i2u1620_45
 38277  00F10E  503A               	movf	??_USBMSDInit+1,w,c
 38278  00F110  0101               	movlb	1	; () banked
 38279  00F112  1375               	iorwf	_gblMediaPresent& (0+255),f,b
 38280  00F114  503B               	movf	??_USBMSDInit+2,w,c
 38281  00F116  1376               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 38282  00F118                     i2l537:
 38283                           
 38284                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 38285                           
 38286                           ; BSR set to: 1
 38287                           
 38288                           ; BSR set to: 1
 38289  00F118  EC32  F08A         	call	i2_ResetSenseData	;wreg free
 38290  00F11C  0101               	movlb	1	; () banked
 38291  00F11E  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 38292  00F120                     i2l534:
 38293                           
 38294                           ; BSR set to: 1
 38295                           
 38296                           ; BSR set to: 1
 38297  00F120  510D               	movf	(_gblCBW+13)& (0+255),w,b
 38298  00F122  A4D8               	btfss	status,2,c
 38299  00F124  0012               	return	
 38300  00F126  D7B2               	goto	i2l535
 38301  00F128                     __end_of_USBMSDInit:
 38302                           	opt stack 0
 38303                           tosu	equ	0xFFF
 38304                           tosh	equ	0xFFE
 38305                           tosl	equ	0xFFD
 38306                           pclatu	equ	0xFFB
 38307                           pclath	equ	0xFFA
 38308                           tblptru	equ	0xFF8
 38309                           tblptrh	equ	0xFF7
 38310                           tblptrl	equ	0xFF6
 38311                           tablat	equ	0xFF5
 38312                           prodh	equ	0xFF4
 38313                           prodl	equ	0xFF3
 38314                           intcon	equ	0xFF2
 38315                           indf0	equ	0xFEF
 38316                           postinc0	equ	0xFEE
 38317                           fsr0h	equ	0xFEA
 38318                           fsr0l	equ	0xFE9
 38319                           wreg	equ	0xFE8
 38320                           indf1	equ	0xFE7
 38321                           postdec1	equ	0xFE5
 38322                           plusw1	equ	0xFE3
 38323                           fsr1h	equ	0xFE2
 38324                           fsr1l	equ	0xFE1
 38325                           indf2	equ	0xFDF
 38326                           postinc2	equ	0xFDE
 38327                           postdec2	equ	0xFDD
 38328                           plusw2	equ	0xFDB
 38329                           fsr2h	equ	0xFDA
 38330                           fsr2l	equ	0xFD9
 38331                           status	equ	0xFD8
 38332                           
 38333 ;; *************** function i2_ResetSenseData *****************
 38334 ;; Defined at:
 38335 ;;		line 1373 in file "usb_device_msd.c"
 38336 ;; Parameters:    Size  Location     Type
 38337 ;;		None
 38338 ;; Auto vars:     Size  Location     Type
 38339 ;;		None
 38340 ;; Return value:  Size  Location     Type
 38341 ;;                  1    wreg      void 
 38342 ;; Registers used:
 38343 ;;		wreg, status,2
 38344 ;; Tracked objects:
 38345 ;;		On entry : 0/0
 38346 ;;		On exit  : 0/0
 38347 ;;		Unchanged: 0/0
 38348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38353 ;;Total ram usage:        0 bytes
 38354 ;; Hardware stack levels used:    1
 38355 ;; This function calls:
 38356 ;;		Nothing
 38357 ;; This function is called by:
 38358 ;;		_USBMSDInit
 38359 ;; This function uses a non-reentrant model
 38360 ;;
 38361                           
 38362                           	psect	text145
 38363  011464                     __ptext145:
 38364                           	opt stack 0
 38365  011464                     i2_ResetSenseData:
 38366                           	opt stack 13
 38367                           
 38368                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 38369                           
 38370                           ; BSR set to: 1
 38371                           ;incstack = 0
 38372  011464  0101               	movlb	1	; () banked
 38373  011466  9133               	bcf	_gblSenseData& (0+255),0,b
 38374  011468  9333               	bcf	_gblSenseData& (0+255),1,b
 38375  01146A  9533               	bcf	_gblSenseData& (0+255),2,b
 38376  01146C  9733               	bcf	_gblSenseData& (0+255),3,b
 38377  01146E  8933               	bsf	_gblSenseData& (0+255),4,b
 38378  011470  8B33               	bsf	_gblSenseData& (0+255),5,b
 38379  011472  8D33               	bsf	_gblSenseData& (0+255),6,b
 38380                           
 38381                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 38382  011474  9F33               	bcf	_gblSenseData& (0+255),7,b
 38383                           
 38384                           ; BSR set to: 1
 38385                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 38386  011476  0E00               	movlw	0
 38387  011478  6F34               	movwf	(_gblSenseData+1)& (0+255),b
 38388                           
 38389                           ; BSR set to: 1
 38390                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 38391  01147A  9135               	bcf	(_gblSenseData+2)& (0+255),0,b
 38392  01147C  9335               	bcf	(_gblSenseData+2)& (0+255),1,b
 38393  01147E  9535               	bcf	(_gblSenseData+2)& (0+255),2,b
 38394  011480  9735               	bcf	(_gblSenseData+2)& (0+255),3,b
 38395                           
 38396                           ; BSR set to: 1
 38397                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 38398  011482  9B35               	bcf	(_gblSenseData+2)& (0+255),5,b
 38399                           
 38400                           ; BSR set to: 1
 38401                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 38402  011484  9D35               	bcf	(_gblSenseData+2)& (0+255),6,b
 38403                           
 38404                           ; BSR set to: 1
 38405                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 38406  011486  9F35               	bcf	(_gblSenseData+2)& (0+255),7,b
 38407                           
 38408                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 38409  011488  0E00               	movlw	0
 38410  01148A  6F36               	movwf	(_gblSenseData+3)& (0+255),b
 38411                           
 38412                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 38413  01148C  0E00               	movlw	0
 38414  01148E  6F37               	movwf	(_gblSenseData+4)& (0+255),b
 38415                           
 38416                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 38417  011490  0E00               	movlw	0
 38418  011492  6F38               	movwf	(_gblSenseData+5)& (0+255),b
 38419                           
 38420                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 38421  011494  0E00               	movlw	0
 38422  011496  6F39               	movwf	(_gblSenseData+6)& (0+255),b
 38423                           
 38424                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 38425  011498  0E0A               	movlw	10
 38426  01149A  6F3A               	movwf	(_gblSenseData+7)& (0+255),b
 38427                           
 38428                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 38429  01149C  0E00               	movlw	0
 38430  01149E  6F3B               	movwf	(_gblSenseData+8)& (0+255),b
 38431  0114A0  0E00               	movlw	0
 38432  0114A2  6F3C               	movwf	(_gblSenseData+9)& (0+255),b
 38433  0114A4  0E00               	movlw	0
 38434  0114A6  6F3D               	movwf	(_gblSenseData+10)& (0+255),b
 38435  0114A8  0E00               	movlw	0
 38436  0114AA  6F3E               	movwf	(_gblSenseData+11)& (0+255),b
 38437                           
 38438                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 38439  0114AC  0E00               	movlw	0
 38440  0114AE  6F3F               	movwf	(_gblSenseData+12)& (0+255),b
 38441                           
 38442                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 38443  0114B0  0E00               	movlw	0
 38444  0114B2  6F40               	movwf	(_gblSenseData+13)& (0+255),b
 38445                           
 38446                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 38447  0114B4  0E00               	movlw	0
 38448  0114B6  6F41               	movwf	(_gblSenseData+14)& (0+255),b
 38449                           
 38450                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 38451  0114B8  0E00               	movlw	0
 38452  0114BA  6F42               	movwf	(_gblSenseData+15)& (0+255),b
 38453                           
 38454                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 38455  0114BC  0E00               	movlw	0
 38456  0114BE  6F43               	movwf	(_gblSenseData+16)& (0+255),b
 38457                           
 38458                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 38459  0114C0  0E00               	movlw	0
 38460  0114C2  6F44               	movwf	(_gblSenseData+17)& (0+255),b
 38461                           
 38462                           ; BSR set to: 1
 38463  0114C4  0012               	return		;funcret
 38464  0114C6                     __end_ofi2_ResetSenseData:
 38465                           	opt stack 0
 38466                           tosu	equ	0xFFF
 38467                           tosh	equ	0xFFE
 38468                           tosl	equ	0xFFD
 38469                           pclatu	equ	0xFFB
 38470                           pclath	equ	0xFFA
 38471                           tblptru	equ	0xFF8
 38472                           tblptrh	equ	0xFF7
 38473                           tblptrl	equ	0xFF6
 38474                           tablat	equ	0xFF5
 38475                           prodh	equ	0xFF4
 38476                           prodl	equ	0xFF3
 38477                           intcon	equ	0xFF2
 38478                           indf0	equ	0xFEF
 38479                           postinc0	equ	0xFEE
 38480                           fsr0h	equ	0xFEA
 38481                           fsr0l	equ	0xFE9
 38482                           wreg	equ	0xFE8
 38483                           indf1	equ	0xFE7
 38484                           postdec1	equ	0xFE5
 38485                           plusw1	equ	0xFE3
 38486                           fsr1h	equ	0xFE2
 38487                           fsr1l	equ	0xFE1
 38488                           indf2	equ	0xFDF
 38489                           postinc2	equ	0xFDE
 38490                           postdec2	equ	0xFDD
 38491                           plusw2	equ	0xFDB
 38492                           fsr2h	equ	0xFDA
 38493                           fsr2l	equ	0xFD9
 38494                           status	equ	0xFD8
 38495                           
 38496 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 38497 ;; Defined at:
 38498 ;;		line 10 in file "external_flash.c"
 38499 ;; Parameters:    Size  Location     Type
 38500 ;;  config          2    0[COMRAM] PTR void 
 38501 ;;		 -> NULL(0), 
 38502 ;; Auto vars:     Size  Location     Type
 38503 ;;		None
 38504 ;; Return value:  Size  Location     Type
 38505 ;;                  2    0[COMRAM] PTR struct .
 38506 ;; Registers used:
 38507 ;;		wreg, status,2, status,0
 38508 ;; Tracked objects:
 38509 ;;		On entry : 0/0
 38510 ;;		On exit  : 0/0
 38511 ;;		Unchanged: 0/0
 38512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38517 ;;Total ram usage:        2 bytes
 38518 ;; Hardware stack levels used:    1
 38519 ;; This function calls:
 38520 ;;		Nothing
 38521 ;; This function is called by:
 38522 ;;		_USBMSDInit
 38523 ;;		_MSDProcessCommand
 38524 ;; This function uses a non-reentrant model
 38525 ;;
 38526                           
 38527                           	psect	text146
 38528  0122A2                     __ptext146:
 38529                           	opt stack 0
 38530  0122A2                     i2_ExternalFlash_MediaInitialize:
 38531                           	opt stack 13
 38532                           
 38533                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 38534                           
 38535                           ; BSR set to: 1
 38536                           ;incstack = 0
 38537  0122A2  0101               	movlb	1	; () banked
 38538  0122A4  8188               	bsf	(_mediaInformation+1)& (0+255),0,b
 38539                           
 38540                           ; BSR set to: 1
 38541                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 38542  0122A6  0E02               	movlw	2
 38543  0122A8  6F8A               	movwf	(_mediaInformation+3)& (0+255),b
 38544  0122AA  0E00               	movlw	0
 38545  0122AC  6F89               	movwf	(_mediaInformation+2)& (0+255),b
 38546                           
 38547                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 38548  0122AE  0E00               	movlw	0
 38549  0122B0  6F87               	movwf	_mediaInformation& (0+255),b
 38550                           
 38551                           ; BSR set to: 1
 38552                           ;external_flash.c: 15: return &mediaInformation;
 38553  0122B2  0E87               	movlw	low _mediaInformation
 38554  0122B4  6E2E               	movwf	?i2_ExternalFlash_MediaInitialize,c
 38555  0122B6  0E01               	movlw	high _mediaInformation
 38556  0122B8  6E2F               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 38557  0122BA  0012               	return	
 38558  0122BC                     __end_ofi2_ExternalFlash_MediaInitialize:
 38559                           	opt stack 0
 38560                           tosu	equ	0xFFF
 38561                           tosh	equ	0xFFE
 38562                           tosl	equ	0xFFD
 38563                           pclatu	equ	0xFFB
 38564                           pclath	equ	0xFFA
 38565                           tblptru	equ	0xFF8
 38566                           tblptrh	equ	0xFF7
 38567                           tblptrl	equ	0xFF6
 38568                           tablat	equ	0xFF5
 38569                           prodh	equ	0xFF4
 38570                           prodl	equ	0xFF3
 38571                           intcon	equ	0xFF2
 38572                           indf0	equ	0xFEF
 38573                           postinc0	equ	0xFEE
 38574                           fsr0h	equ	0xFEA
 38575                           fsr0l	equ	0xFE9
 38576                           wreg	equ	0xFE8
 38577                           indf1	equ	0xFE7
 38578                           postdec1	equ	0xFE5
 38579                           plusw1	equ	0xFE3
 38580                           fsr1h	equ	0xFE2
 38581                           fsr1l	equ	0xFE1
 38582                           indf2	equ	0xFDF
 38583                           postinc2	equ	0xFDE
 38584                           postdec2	equ	0xFDD
 38585                           plusw2	equ	0xFDB
 38586                           fsr2h	equ	0xFDA
 38587                           fsr2l	equ	0xFD9
 38588                           status	equ	0xFD8
 38589                           
 38590 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 38591 ;; Defined at:
 38592 ;;		line 29 in file "external_flash.c"
 38593 ;; Parameters:    Size  Location     Type
 38594 ;;  config          2    0[COMRAM] PTR void 
 38595 ;;		 -> NULL(0), 
 38596 ;; Auto vars:     Size  Location     Type
 38597 ;;		None
 38598 ;; Return value:  Size  Location     Type
 38599 ;;                  1    wreg      unsigned char 
 38600 ;; Registers used:
 38601 ;;		wreg
 38602 ;; Tracked objects:
 38603 ;;		On entry : 0/0
 38604 ;;		On exit  : 0/0
 38605 ;;		Unchanged: 0/0
 38606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38611 ;;Total ram usage:        2 bytes
 38612 ;; Hardware stack levels used:    1
 38613 ;; This function calls:
 38614 ;;		Nothing
 38615 ;; This function is called by:
 38616 ;;		_USBMSDInit
 38617 ;;		_MSDProcessCommand
 38618 ;; This function uses a non-reentrant model
 38619 ;;
 38620                           
 38621                           	psect	text147
 38622  012384                     __ptext147:
 38623                           	opt stack 0
 38624  012384                     i2_ExternalFlash_MediaDetect:
 38625                           	opt stack 13
 38626                           
 38627                           ;external_flash.c: 31: return 1;
 38628                           
 38629                           ; BSR set to: 1
 38630                           ;incstack = 0
 38631  012384  0E01               	movlw	1
 38632  012386  0012               	return	
 38633  012388                     __end_ofi2_ExternalFlash_MediaDetect:
 38634                           	opt stack 0
 38635                           tosu	equ	0xFFF
 38636                           tosh	equ	0xFFE
 38637                           tosl	equ	0xFFD
 38638                           pclatu	equ	0xFFB
 38639                           pclath	equ	0xFFA
 38640                           tblptru	equ	0xFF8
 38641                           tblptrh	equ	0xFF7
 38642                           tblptrl	equ	0xFF6
 38643                           tablat	equ	0xFF5
 38644                           prodh	equ	0xFF4
 38645                           prodl	equ	0xFF3
 38646                           intcon	equ	0xFF2
 38647                           indf0	equ	0xFEF
 38648                           postinc0	equ	0xFEE
 38649                           fsr0h	equ	0xFEA
 38650                           fsr0l	equ	0xFE9
 38651                           wreg	equ	0xFE8
 38652                           indf1	equ	0xFE7
 38653                           postdec1	equ	0xFE5
 38654                           plusw1	equ	0xFE3
 38655                           fsr1h	equ	0xFE2
 38656                           fsr1l	equ	0xFE1
 38657                           indf2	equ	0xFDF
 38658                           postinc2	equ	0xFDE
 38659                           postdec2	equ	0xFDD
 38660                           plusw2	equ	0xFDB
 38661                           fsr2h	equ	0xFDA
 38662                           fsr2l	equ	0xFD9
 38663                           status	equ	0xFD8
 38664                           
 38665 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 38666 ;; Defined at:
 38667 ;;		line 46 in file "app_device_custom_hid.c"
 38668 ;; Parameters:    Size  Location     Type
 38669 ;;		None
 38670 ;; Auto vars:     Size  Location     Type
 38671 ;;		None
 38672 ;; Return value:  Size  Location     Type
 38673 ;;                  1    wreg      void 
 38674 ;; Registers used:
 38675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38676 ;; Tracked objects:
 38677 ;;		On entry : 0/0
 38678 ;;		On exit  : 0/0
 38679 ;;		Unchanged: 0/0
 38680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38685 ;;Total ram usage:        0 bytes
 38686 ;; Hardware stack levels used:    1
 38687 ;; Hardware stack levels required when called:    2
 38688 ;; This function calls:
 38689 ;;		_USBEnableEndpoint
 38690 ;;		i2_USBTransferOnePacket
 38691 ;; This function is called by:
 38692 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 38693 ;; This function uses a non-reentrant model
 38694 ;;
 38695                           
 38696                           	psect	text148
 38697  011F30                     __ptext148:
 38698                           	opt stack 0
 38699  011F30                     _APP_DeviceCustomHIDInitialize:
 38700                           	opt stack 13
 38701                           
 38702                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 38703                           
 38704                           ;incstack = 0
 38705  011F30  0E00               	movlw	0
 38706  011F32  0101               	movlb	1	; () banked
 38707  011F34  6F71               	movwf	_USBInHandle& (0+255),b
 38708  011F36  0E00               	movlw	0
 38709  011F38  6F72               	movwf	(_USBInHandle+1)& (0+255),b
 38710                           
 38711                           ; BSR set to: 1
 38712                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 38713  011F3A  0E1E               	movlw	30
 38714  011F3C  6E36               	movwf	USBEnableEndpoint@options,c
 38715  011F3E  0E01               	movlw	1
 38716  011F40  ECBB  F08E         	call	_USBEnableEndpoint
 38717                           
 38718                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 38719  011F44  0E00               	movlw	0
 38720  011F46  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 38721  011F48  0E78               	movlw	low _ReceivedDataBuffer
 38722  011F4A  6E2F               	movwf	i2USBTransferOnePacket@data,c
 38723  011F4C  0E02               	movlw	high _ReceivedDataBuffer
 38724  011F4E  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 38725  011F50  0E40               	movlw	64
 38726  011F52  6E31               	movwf	i2USBTransferOnePacket@len,c
 38727  011F54  0E01               	movlw	1
 38728  011F56  ECA5  F07A         	call	i2_USBTransferOnePacket
 38729  011F5A  C02E  F173         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 38730  011F5E  C02F  F174         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 38731  011F62  0012               	return		;funcret
 38732  011F64                     __end_of_APP_DeviceCustomHIDInitialize:
 38733                           	opt stack 0
 38734                           tosu	equ	0xFFF
 38735                           tosh	equ	0xFFE
 38736                           tosl	equ	0xFFD
 38737                           pclatu	equ	0xFFB
 38738                           pclath	equ	0xFFA
 38739                           tblptru	equ	0xFF8
 38740                           tblptrh	equ	0xFF7
 38741                           tblptrl	equ	0xFF6
 38742                           tablat	equ	0xFF5
 38743                           prodh	equ	0xFF4
 38744                           prodl	equ	0xFF3
 38745                           intcon	equ	0xFF2
 38746                           indf0	equ	0xFEF
 38747                           postinc0	equ	0xFEE
 38748                           fsr0h	equ	0xFEA
 38749                           fsr0l	equ	0xFE9
 38750                           wreg	equ	0xFE8
 38751                           indf1	equ	0xFE7
 38752                           postdec1	equ	0xFE5
 38753                           plusw1	equ	0xFE3
 38754                           fsr1h	equ	0xFE2
 38755                           fsr1l	equ	0xFE1
 38756                           indf2	equ	0xFDF
 38757                           postinc2	equ	0xFDE
 38758                           postdec2	equ	0xFDD
 38759                           plusw2	equ	0xFDB
 38760                           fsr2h	equ	0xFDA
 38761                           fsr2l	equ	0xFD9
 38762                           status	equ	0xFD8
 38763                           
 38764 ;; *************** function i2_USBTransferOnePacket *****************
 38765 ;; Defined at:
 38766 ;;		line 995 in file "usb_device.c"
 38767 ;; Parameters:    Size  Location     Type
 38768 ;;  ep              1    wreg     unsigned char 
 38769 ;;  dir             1    0[COMRAM] unsigned char 
 38770 ;;  data            2    1[COMRAM] PTR unsigned char 
 38771 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 38772 ;;		 -> msd_cbw(31), NULL(0), 
 38773 ;;  len             1    3[COMRAM] unsigned char 
 38774 ;; Auto vars:     Size  Location     Type
 38775 ;;  ep              1    8[COMRAM] unsigned char 
 38776 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 38777 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 38778 ;; Return value:  Size  Location     Type
 38779 ;;                  2    0[COMRAM] PTR void 
 38780 ;; Registers used:
 38781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38782 ;; Tracked objects:
 38783 ;;		On entry : 0/0
 38784 ;;		On exit  : 0/0
 38785 ;;		Unchanged: 0/0
 38786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38788 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38789 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38790 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38791 ;;Total ram usage:       11 bytes
 38792 ;; Hardware stack levels used:    1
 38793 ;; This function calls:
 38794 ;;		Nothing
 38795 ;; This function is called by:
 38796 ;;		_USBMSDInit
 38797 ;;		_USBCheckMSDRequest
 38798 ;;		_MSDTransferTerminated
 38799 ;;		_APP_DeviceCustomHIDInitialize
 38800 ;; This function uses a non-reentrant model
 38801 ;;
 38802                           
 38803                           	psect	text149
 38804  00F54A                     __ptext149:
 38805                           	opt stack 0
 38806  00F54A                     i2_USBTransferOnePacket:
 38807                           	opt stack 14
 38808                           
 38809                           ;incstack = 0
 38810                           ;i2USBTransferOnePacket@ep stored from wreg
 38811  00F54A  6E36               	movwf	i2USBTransferOnePacket@ep,c
 38812                           
 38813                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 38814  00F54C  502E               	movf	i2USBTransferOnePacket@dir,w,c
 38815  00F54E  B4D8               	btfsc	status,2,c
 38816  00F550  D007               	goto	i2l184
 38817                           
 38818                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 38819  00F552  5036               	movf	i2USBTransferOnePacket@ep,w,c
 38820  00F554  0D02               	mullw	2
 38821  00F556  0E10               	movlw	low _pBDTEntryIn
 38822  00F558  24F3               	addwf	prodl,w,c
 38823  00F55A  6ED9               	movwf	fsr2l,c
 38824  00F55C  0E00               	movlw	high _pBDTEntryIn
 38825  00F55E  D006               	goto	L69
 38826  00F560                     i2l184:
 38827                           
 38828                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 38829  00F560  5036               	movf	i2USBTransferOnePacket@ep,w,c
 38830  00F562  0D02               	mullw	2
 38831  00F564  0E45               	movlw	low _pBDTEntryOut
 38832  00F566  24F3               	addwf	prodl,w,c
 38833  00F568  6ED9               	movwf	fsr2l,c
 38834  00F56A  0E01               	movlw	high _pBDTEntryOut
 38835  00F56C                     L69:
 38836  00F56C  20F4               	addwfc	prodh,w,c
 38837  00F56E  6EDA               	movwf	fsr2h,c
 38838  00F570  CFDE F037          	movff	postinc2,i2USBTransferOnePacket@handle
 38839  00F574  CFDD F038          	movff	postdec2,i2USBTransferOnePacket@handle+1
 38840                           
 38841                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 38842  00F578  5037               	movf	i2USBTransferOnePacket@handle,w,c
 38843  00F57A  1038               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 38844  00F57C  A4D8               	btfss	status,2,c
 38845  00F57E  D005               	goto	i2l186
 38846                           
 38847                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 38848  00F580  0E00               	movlw	0
 38849  00F582  6E2E               	movwf	?i2_USBTransferOnePacket,c
 38850  00F584  0E00               	movlw	0
 38851  00F586  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 38852  00F588  0012               	return	
 38853  00F58A                     i2l186:
 38854                           
 38855                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 38856  00F58A  EE20 F002          	lfsr	2,2
 38857  00F58E  5037               	movf	i2USBTransferOnePacket@handle,w,c
 38858  00F590  26D9               	addwf	fsr2l,f,c
 38859  00F592  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 38860  00F594  22DA               	addwfc	fsr2h,f,c
 38861  00F596  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 38862  00F59A  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 38863                           
 38864                           ;usb_device.c: 1030: handle->CNT = len;
 38865  00F59E  EE20 F001          	lfsr	2,1
 38866  00F5A2  5037               	movf	i2USBTransferOnePacket@handle,w,c
 38867  00F5A4  26D9               	addwf	fsr2l,f,c
 38868  00F5A6  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 38869  00F5A8  22DA               	addwfc	fsr2h,f,c
 38870  00F5AA  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 38871                           
 38872                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 38873  00F5AE  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 38874  00F5B2  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 38875  00F5B6  0E40               	movlw	64
 38876  00F5B8  16DF               	andwf	indf2,f,c
 38877                           
 38878                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 38879  00F5BA  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 38880  00F5BE  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 38881  00F5C2  0E00               	movlw	0
 38882  00F5C4  86DB               	bsf	plusw2,3,c
 38883                           
 38884                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 38885  00F5C6  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 38886  00F5CA  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 38887  00F5CE  0E00               	movlw	0
 38888  00F5D0  8EDB               	bsf	plusw2,7,c
 38889                           
 38890                           ;usb_device.c: 1036: if(dir != 0)
 38891  00F5D2  502E               	movf	i2USBTransferOnePacket@dir,w,c
 38892  00F5D4  B4D8               	btfsc	status,2,c
 38893  00F5D6  D018               	goto	i2l188
 38894                           
 38895                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 38896  00F5D8  5036               	movf	i2USBTransferOnePacket@ep,w,c
 38897  00F5DA  0D02               	mullw	2
 38898  00F5DC  0E10               	movlw	low _pBDTEntryIn
 38899  00F5DE  24F3               	addwf	prodl,w,c
 38900  00F5E0  6ED9               	movwf	fsr2l,c
 38901  00F5E2  0E00               	movlw	high _pBDTEntryIn
 38902  00F5E4  20F4               	addwfc	prodh,w,c
 38903  00F5E6  6EDA               	movwf	fsr2h,c
 38904  00F5E8  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 38905  00F5EC  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 38906  00F5F0  0E04               	movlw	4
 38907  00F5F2  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 38908  00F5F4  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 38909  00F5F6  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 38910  00F5F8  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 38911  00F5FA  5036               	movf	i2USBTransferOnePacket@ep,w,c
 38912  00F5FC  0D02               	mullw	2
 38913  00F5FE  0E10               	movlw	low _pBDTEntryIn
 38914  00F600  24F3               	addwf	prodl,w,c
 38915  00F602  6ED9               	movwf	fsr2l,c
 38916  00F604  0E00               	movlw	high _pBDTEntryIn
 38917  00F606  D017               	goto	L70
 38918  00F608                     i2l188:
 38919                           
 38920                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 38921  00F608  5036               	movf	i2USBTransferOnePacket@ep,w,c
 38922  00F60A  0D02               	mullw	2
 38923  00F60C  0E45               	movlw	low _pBDTEntryOut
 38924  00F60E  24F3               	addwf	prodl,w,c
 38925  00F610  6ED9               	movwf	fsr2l,c
 38926  00F612  0E01               	movlw	high _pBDTEntryOut
 38927  00F614  20F4               	addwfc	prodh,w,c
 38928  00F616  6EDA               	movwf	fsr2h,c
 38929  00F618  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 38930  00F61C  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 38931  00F620  0E04               	movlw	4
 38932  00F622  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 38933  00F624  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 38934  00F626  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 38935  00F628  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 38936  00F62A  5036               	movf	i2USBTransferOnePacket@ep,w,c
 38937  00F62C  0D02               	mullw	2
 38938  00F62E  0E45               	movlw	low _pBDTEntryOut
 38939  00F630  24F3               	addwf	prodl,w,c
 38940  00F632  6ED9               	movwf	fsr2l,c
 38941  00F634  0E01               	movlw	high _pBDTEntryOut
 38942  00F636                     L70:
 38943  00F636  20F4               	addwfc	prodh,w,c
 38944  00F638  6EDA               	movwf	fsr2h,c
 38945  00F63A  C034  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 38946  00F63E  C035  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 38947                           
 38948                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 38949  00F642  C037  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 38950  00F646  C038  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 38951  00F64A  0012               	return	
 38952  00F64C                     __end_ofi2_USBTransferOnePacket:
 38953                           	opt stack 0
 38954                           tosu	equ	0xFFF
 38955                           tosh	equ	0xFFE
 38956                           tosl	equ	0xFFD
 38957                           pclatu	equ	0xFFB
 38958                           pclath	equ	0xFFA
 38959                           tblptru	equ	0xFF8
 38960                           tblptrh	equ	0xFF7
 38961                           tblptrl	equ	0xFF6
 38962                           tablat	equ	0xFF5
 38963                           prodh	equ	0xFF4
 38964                           prodl	equ	0xFF3
 38965                           intcon	equ	0xFF2
 38966                           indf0	equ	0xFEF
 38967                           postinc0	equ	0xFEE
 38968                           fsr0h	equ	0xFEA
 38969                           fsr0l	equ	0xFE9
 38970                           wreg	equ	0xFE8
 38971                           indf1	equ	0xFE7
 38972                           postdec1	equ	0xFE5
 38973                           plusw1	equ	0xFE3
 38974                           fsr1h	equ	0xFE2
 38975                           fsr1l	equ	0xFE1
 38976                           indf2	equ	0xFDF
 38977                           postinc2	equ	0xFDE
 38978                           postdec2	equ	0xFDD
 38979                           plusw2	equ	0xFDB
 38980                           fsr2h	equ	0xFDA
 38981                           fsr2l	equ	0xFD9
 38982                           status	equ	0xFD8
 38983                           
 38984 ;; *************** function _USBEnableEndpoint *****************
 38985 ;; Defined at:
 38986 ;;		line 878 in file "usb_device.c"
 38987 ;; Parameters:    Size  Location     Type
 38988 ;;  ep              1    wreg     unsigned char 
 38989 ;;  options         1    8[COMRAM] unsigned char 
 38990 ;; Auto vars:     Size  Location     Type
 38991 ;;  ep              1   11[COMRAM] unsigned char 
 38992 ;;  p               2    9[COMRAM] PTR unsigned char 
 38993 ;;		 -> UEP0(1), 
 38994 ;; Return value:  Size  Location     Type
 38995 ;;                  1    wreg      void 
 38996 ;; Registers used:
 38997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38998 ;; Tracked objects:
 38999 ;;		On entry : 0/0
 39000 ;;		On exit  : 0/0
 39001 ;;		Unchanged: 0/0
 39002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39003 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39004 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39006 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39007 ;;Total ram usage:        4 bytes
 39008 ;; Hardware stack levels used:    1
 39009 ;; Hardware stack levels required when called:    1
 39010 ;; This function calls:
 39011 ;;		_USBConfigureEndpoint
 39012 ;; This function is called by:
 39013 ;;		_APP_DeviceCustomHIDInitialize
 39014 ;;		_APP_DeviceMSDInitialize
 39015 ;; This function uses a non-reentrant model
 39016 ;;
 39017                           
 39018                           	psect	text150
 39019  011D76                     __ptext150:
 39020                           	opt stack 0
 39021  011D76                     _USBEnableEndpoint:
 39022                           	opt stack 13
 39023                           
 39024                           ;incstack = 0
 39025                           ;USBEnableEndpoint@ep stored from wreg
 39026  011D76  6E39               	movwf	USBEnableEndpoint@ep,c
 39027                           
 39028                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 39029  011D78  A436               	btfss	USBEnableEndpoint@options,2,c
 39030  011D7A  D005               	goto	i2l179
 39031                           
 39032                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 39033  011D7C  0E00               	movlw	0
 39034  011D7E  6E2E               	movwf	USBConfigureEndpoint@direction,c
 39035  011D80  5039               	movf	USBEnableEndpoint@ep,w,c
 39036  011D82  ECC6  F085         	call	_USBConfigureEndpoint
 39037  011D86                     i2l179:
 39038                           
 39039                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 39040  011D86  A236               	btfss	USBEnableEndpoint@options,1,c
 39041  011D88  D005               	goto	i2l180
 39042                           
 39043                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 39044  011D8A  0E01               	movlw	1
 39045  011D8C  6E2E               	movwf	USBConfigureEndpoint@direction,c
 39046  011D8E  5039               	movf	USBEnableEndpoint@ep,w,c
 39047  011D90  ECC6  F085         	call	_USBConfigureEndpoint
 39048  011D94                     i2l180:
 39049                           
 39050                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 39051  011D94  5039               	movf	USBEnableEndpoint@ep,w,c
 39052  011D96  0D01               	mullw	1
 39053  011D98  0E26               	movlw	38
 39054  011D9A  24F3               	addwf	prodl,w,c
 39055  011D9C  6E37               	movwf	USBEnableEndpoint@p,c
 39056  011D9E  0E0F               	movlw	15
 39057  011DA0  20F4               	addwfc	prodh,w,c
 39058  011DA2  6E38               	movwf	USBEnableEndpoint@p+1,c
 39059                           
 39060                           ;usb_device.c: 901: *p = options;
 39061  011DA4  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 39062  011DA8  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 39063  011DAC  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 39064  011DB0  0012               	return		;funcret
 39065  011DB2                     __end_of_USBEnableEndpoint:
 39066                           	opt stack 0
 39067                           tosu	equ	0xFFF
 39068                           tosh	equ	0xFFE
 39069                           tosl	equ	0xFFD
 39070                           pclatu	equ	0xFFB
 39071                           pclath	equ	0xFFA
 39072                           tblptru	equ	0xFF8
 39073                           tblptrh	equ	0xFF7
 39074                           tblptrl	equ	0xFF6
 39075                           tablat	equ	0xFF5
 39076                           prodh	equ	0xFF4
 39077                           prodl	equ	0xFF3
 39078                           intcon	equ	0xFF2
 39079                           indf0	equ	0xFEF
 39080                           postinc0	equ	0xFEE
 39081                           fsr0h	equ	0xFEA
 39082                           fsr0l	equ	0xFE9
 39083                           wreg	equ	0xFE8
 39084                           indf1	equ	0xFE7
 39085                           postdec1	equ	0xFE5
 39086                           plusw1	equ	0xFE3
 39087                           fsr1h	equ	0xFE2
 39088                           fsr1l	equ	0xFE1
 39089                           indf2	equ	0xFDF
 39090                           postinc2	equ	0xFDE
 39091                           postdec2	equ	0xFDD
 39092                           plusw2	equ	0xFDB
 39093                           fsr2h	equ	0xFDA
 39094                           fsr2l	equ	0xFD9
 39095                           status	equ	0xFD8
 39096                           
 39097 ;; *************** function _USBConfigureEndpoint *****************
 39098 ;; Defined at:
 39099 ;;		line 1545 in file "usb_device.c"
 39100 ;; Parameters:    Size  Location     Type
 39101 ;;  EPNum           1    wreg     unsigned char 
 39102 ;;  direction       1    0[COMRAM] unsigned char 
 39103 ;; Auto vars:     Size  Location     Type
 39104 ;;  EPNum           1    5[COMRAM] unsigned char 
 39105 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 39106 ;;		 -> BDT(48), 
 39107 ;; Return value:  Size  Location     Type
 39108 ;;                  1    wreg      void 
 39109 ;; Registers used:
 39110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39111 ;; Tracked objects:
 39112 ;;		On entry : 0/0
 39113 ;;		On exit  : 0/0
 39114 ;;		Unchanged: 0/0
 39115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39116 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39117 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39118 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39119 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39120 ;;Total ram usage:        8 bytes
 39121 ;; Hardware stack levels used:    1
 39122 ;; This function calls:
 39123 ;;		Nothing
 39124 ;; This function is called by:
 39125 ;;		_USBEnableEndpoint
 39126 ;; This function uses a non-reentrant model
 39127 ;;
 39128                           
 39129                           	psect	text151
 39130  010B8C                     __ptext151:
 39131                           	opt stack 0
 39132  010B8C                     _USBConfigureEndpoint:
 39133                           	opt stack 13
 39134                           
 39135                           ;incstack = 0
 39136                           ;USBConfigureEndpoint@EPNum stored from wreg
 39137  010B8C  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 39138                           
 39139                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 39140  010B8E  0E00               	movlw	0
 39141  010B90  6E34               	movwf	USBConfigureEndpoint@handle,c
 39142  010B92  0E0D               	movlw	13
 39143  010B94  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 39144                           
 39145                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 39146  010B96  502E               	movf	USBConfigureEndpoint@direction,w,c
 39147  010B98  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 39148  010B9A  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 39149  010B9C  90D8               	bcf	status,0,c
 39150  010B9E  362F               	rlcf	??_USBConfigureEndpoint,f,c
 39151  010BA0  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 39152  010BA2  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 39153  010BA4  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 39154  010BA6  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 39155  010BA8  90D8               	bcf	status,0,c
 39156  010BAA  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 39157  010BAC  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 39158  010BAE  90D8               	bcf	status,0,c
 39159  010BB0  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 39160  010BB2  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 39161  010BB4  502F               	movf	??_USBConfigureEndpoint,w,c
 39162  010BB6  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 39163  010BB8  5030               	movf	??_USBConfigureEndpoint+1,w,c
 39164  010BBA  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 39165  010BBC  90D8               	bcf	status,0,c
 39166  010BBE  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 39167  010BC0  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 39168  010BC2  90D8               	bcf	status,0,c
 39169  010BC4  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 39170  010BC6  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 39171  010BC8  5031               	movf	??_USBConfigureEndpoint+2,w,c
 39172  010BCA  2634               	addwf	USBConfigureEndpoint@handle,f,c
 39173  010BCC  5032               	movf	??_USBConfigureEndpoint+3,w,c
 39174  010BCE  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 39175                           
 39176                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 39177  010BD0  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 39178  010BD4  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 39179  010BD8  9EDF               	bcf	indf2,7,c
 39180                           
 39181                           ;usb_device.c: 1559: if(direction == 0)
 39182  010BDA  502E               	movf	USBConfigureEndpoint@direction,w,c
 39183  010BDC  A4D8               	btfss	status,2,c
 39184  010BDE  D007               	goto	i2l226
 39185                           
 39186                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 39187  010BE0  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 39188  010BE2  0D02               	mullw	2
 39189  010BE4  0E45               	movlw	low _pBDTEntryOut
 39190  010BE6  24F3               	addwf	prodl,w,c
 39191  010BE8  6ED9               	movwf	fsr2l,c
 39192  010BEA  0E01               	movlw	high _pBDTEntryOut
 39193  010BEC  D006               	goto	L71
 39194  010BEE                     i2l226:
 39195                           
 39196                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 39197  010BEE  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 39198  010BF0  0D02               	mullw	2
 39199  010BF2  0E10               	movlw	low _pBDTEntryIn
 39200  010BF4  24F3               	addwf	prodl,w,c
 39201  010BF6  6ED9               	movwf	fsr2l,c
 39202  010BF8  0E00               	movlw	high _pBDTEntryIn
 39203  010BFA                     L71:
 39204  010BFA  20F4               	addwfc	prodh,w,c
 39205  010BFC  6EDA               	movwf	fsr2h,c
 39206  010BFE  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 39207  010C02  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 39208                           
 39209                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 39210  010C06  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 39211  010C0A  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 39212  010C0E  9CDF               	bcf	indf2,6,c
 39213                           
 39214                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 39215  010C10  EE20 F004          	lfsr	2,4
 39216  010C14  5034               	movf	USBConfigureEndpoint@handle,w,c
 39217  010C16  26D9               	addwf	fsr2l,f,c
 39218  010C18  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 39219  010C1A  22DA               	addwfc	fsr2h,f,c
 39220  010C1C  8CDF               	bsf	indf2,6,c
 39221  010C1E  0012               	return		;funcret
 39222  010C20                     __end_of_USBConfigureEndpoint:
 39223                           	opt stack 0
 39224                           tosu	equ	0xFFF
 39225                           tosh	equ	0xFFE
 39226                           tosl	equ	0xFFD
 39227                           pclatu	equ	0xFFB
 39228                           pclath	equ	0xFFA
 39229                           tblptru	equ	0xFF8
 39230                           tblptrh	equ	0xFF7
 39231                           tblptrl	equ	0xFF6
 39232                           tablat	equ	0xFF5
 39233                           prodh	equ	0xFF4
 39234                           prodl	equ	0xFF3
 39235                           intcon	equ	0xFF2
 39236                           indf0	equ	0xFEF
 39237                           postinc0	equ	0xFEE
 39238                           fsr0h	equ	0xFEA
 39239                           fsr0l	equ	0xFE9
 39240                           wreg	equ	0xFE8
 39241                           indf1	equ	0xFE7
 39242                           postdec1	equ	0xFE5
 39243                           plusw1	equ	0xFE3
 39244                           fsr1h	equ	0xFE2
 39245                           fsr1l	equ	0xFE1
 39246                           indf2	equ	0xFDF
 39247                           postinc2	equ	0xFDE
 39248                           postdec2	equ	0xFDD
 39249                           plusw2	equ	0xFDB
 39250                           fsr2h	equ	0xFDA
 39251                           fsr2l	equ	0xFD9
 39252                           status	equ	0xFD8
 39253                           
 39254 ;; *************** function _USBCtrlTrfOutHandler *****************
 39255 ;; Defined at:
 39256 ;;		line 2540 in file "usb_device.c"
 39257 ;; Parameters:    Size  Location     Type
 39258 ;;		None
 39259 ;; Auto vars:     Size  Location     Type
 39260 ;;		None
 39261 ;; Return value:  Size  Location     Type
 39262 ;;                  1    wreg      void 
 39263 ;; Registers used:
 39264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39265 ;; Tracked objects:
 39266 ;;		On entry : 0/0
 39267 ;;		On exit  : 0/0
 39268 ;;		Unchanged: 0/0
 39269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39274 ;;Total ram usage:        0 bytes
 39275 ;; Hardware stack levels used:    1
 39276 ;; Hardware stack levels required when called:    2
 39277 ;; This function calls:
 39278 ;;		_USBCtrlTrfRxService
 39279 ;; This function is called by:
 39280 ;;		_USBCtrlEPService
 39281 ;; This function uses a non-reentrant model
 39282 ;;
 39283                           
 39284                           	psect	text152
 39285  011582                     __ptext152:
 39286                           	opt stack 0
 39287  011582                     _USBCtrlTrfOutHandler:
 39288                           	opt stack 13
 39289                           
 39290                           ;usb_device.c: 2542: if(controlTransferState == 2)
 39291                           
 39292                           ;incstack = 0
 39293  011582  0E02               	movlw	2
 39294  011584  1829               	xorwf	_controlTransferState,w,c	;volatile
 39295  011586  A4D8               	btfss	status,2,c
 39296  011588  D003               	goto	i2l332
 39297                           
 39298                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 39299  01158A  EC94  F078         	call	_USBCtrlTrfRxService	;wreg free
 39300                           
 39301                           ;usb_device.c: 2545: }
 39302  01158E  0012               	return	
 39303  011590                     i2l332:
 39304                           
 39305                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 39306  011590  0E00               	movlw	0
 39307  011592  6E29               	movwf	_controlTransferState,c	;volatile
 39308                           
 39309                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 39310  011594  5025               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 39311  011596  A4D8               	btfss	status,2,c
 39312  011598  D01F               	goto	i2l334
 39313                           
 39314                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 39315  01159A  EE20 F001          	lfsr	2,1
 39316  01159E  501A               	movf	_pBDTEntryEP0OutNext,w,c
 39317  0115A0  26D9               	addwf	fsr2l,f,c
 39318  0115A2  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 39319  0115A4  22DA               	addwfc	fsr2h,f,c
 39320  0115A6  0E08               	movlw	8
 39321  0115A8  6EDF               	movwf	indf2,c
 39322                           
 39323                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 39324  0115AA  EE20 F002          	lfsr	2,2
 39325  0115AE  501A               	movf	_pBDTEntryEP0OutNext,w,c
 39326  0115B0  26D9               	addwf	fsr2l,f,c
 39327  0115B2  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 39328  0115B4  22DA               	addwfc	fsr2h,f,c
 39329  0115B6  0E30               	movlw	48
 39330  0115B8  6EDE               	movwf	postinc2,c
 39331  0115BA  0E0D               	movlw	13
 39332  0115BC  6EDD               	movwf	postdec2,c
 39333                           
 39334                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 39335  0115BE  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39336  0115C2  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39337  0115C6  0E0C               	movlw	12
 39338  0115C8  6EDF               	movwf	indf2,c
 39339                           
 39340                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 39341  0115CA  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39342  0115CE  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39343  0115D2  0E00               	movlw	0
 39344  0115D4  8EDB               	bsf	plusw2,7,c
 39345                           
 39346                           ;usb_device.c: 2563: }
 39347  0115D6  0012               	return	
 39348  0115D8                     i2l334:
 39349                           
 39350                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 39351  0115D8  0E00               	movlw	0
 39352  0115DA  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 39353  0115DC  0012               	return	
 39354  0115DE                     __end_of_USBCtrlTrfOutHandler:
 39355                           	opt stack 0
 39356                           tosu	equ	0xFFF
 39357                           tosh	equ	0xFFE
 39358                           tosl	equ	0xFFD
 39359                           pclatu	equ	0xFFB
 39360                           pclath	equ	0xFFA
 39361                           tblptru	equ	0xFF8
 39362                           tblptrh	equ	0xFF7
 39363                           tblptrl	equ	0xFF6
 39364                           tablat	equ	0xFF5
 39365                           prodh	equ	0xFF4
 39366                           prodl	equ	0xFF3
 39367                           intcon	equ	0xFF2
 39368                           indf0	equ	0xFEF
 39369                           postinc0	equ	0xFEE
 39370                           fsr0h	equ	0xFEA
 39371                           fsr0l	equ	0xFE9
 39372                           wreg	equ	0xFE8
 39373                           indf1	equ	0xFE7
 39374                           postdec1	equ	0xFE5
 39375                           plusw1	equ	0xFE3
 39376                           fsr1h	equ	0xFE2
 39377                           fsr1l	equ	0xFE1
 39378                           indf2	equ	0xFDF
 39379                           postinc2	equ	0xFDE
 39380                           postdec2	equ	0xFDD
 39381                           plusw2	equ	0xFDB
 39382                           fsr2h	equ	0xFDA
 39383                           fsr2l	equ	0xFD9
 39384                           status	equ	0xFD8
 39385                           
 39386 ;; *************** function _USBCtrlTrfRxService *****************
 39387 ;; Defined at:
 39388 ;;		line 1854 in file "usb_device.c"
 39389 ;; Parameters:    Size  Location     Type
 39390 ;;		None
 39391 ;; Auto vars:     Size  Location     Type
 39392 ;;  byteToRead      1    1[COMRAM] unsigned char 
 39393 ;;  i               1    0[COMRAM] unsigned char 
 39394 ;; Return value:  Size  Location     Type
 39395 ;;                  1    wreg      void 
 39396 ;; Registers used:
 39397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39398 ;; Tracked objects:
 39399 ;;		On entry : 0/0
 39400 ;;		On exit  : 0/0
 39401 ;;		Unchanged: 0/0
 39402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39407 ;;Total ram usage:        2 bytes
 39408 ;; Hardware stack levels used:    1
 39409 ;; Hardware stack levels required when called:    1
 39410 ;; This function calls:
 39411 ;;		_USBCtrlEPAllowStatusStage
 39412 ;; This function is called by:
 39413 ;;		_USBCtrlTrfOutHandler
 39414 ;; This function uses a non-reentrant model
 39415 ;;
 39416                           
 39417                           	psect	text153
 39418  00F128                     __ptext153:
 39419                           	opt stack 0
 39420  00F128                     _USBCtrlTrfRxService:
 39421                           	opt stack 13
 39422                           
 39423                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 39424                           
 39425                           ;incstack = 0
 39426  00F128  EE20 F001          	lfsr	2,1
 39427  00F12C  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 39428  00F12E  26D9               	addwf	fsr2l,f,c
 39429  00F130  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 39430  00F132  22DA               	addwfc	fsr2h,f,c
 39431  00F134  50DF               	movf	indf2,w,c
 39432  00F136  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 39433                           
 39434                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 39435  00F138  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 39436  00F13A  5C05               	subwf	_outPipes+4,w,c	;volatile
 39437  00F13C  0E00               	movlw	0
 39438  00F13E  5806               	subwfb	_outPipes+5,w,c	;volatile
 39439  00F140  A0D8               	btfss	status,0,c
 39440                           
 39441                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 39442  00F142  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 39443                           
 39444                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 39445  00F146  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 39446  00F148  5E05               	subwf	_outPipes+4,f,c	;volatile
 39447  00F14A  0E00               	movlw	0
 39448  00F14C  5A06               	subwfb	_outPipes+5,f,c	;volatile
 39449                           
 39450                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 39451  00F14E  0E00               	movlw	0
 39452  00F150  6E2E               	movwf	USBCtrlTrfRxService@i,c
 39453  00F152  D011               	goto	i2l260
 39454  00F154                     
 39455                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 39456  00F154  502E               	movf	USBCtrlTrfRxService@i,w,c
 39457  00F156  0D01               	mullw	1
 39458  00F158  0E38               	movlw	56
 39459  00F15A  24F3               	addwf	prodl,w,c
 39460  00F15C  6ED9               	movwf	fsr2l,c
 39461  00F15E  0E0D               	movlw	13
 39462  00F160  20F4               	addwfc	prodh,w,c
 39463  00F162  6EDA               	movwf	fsr2h,c
 39464  00F164  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 39465  00F168  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 39466  00F16C  CFDF FFE7          	movff	indf2,indf1
 39467  00F170  4A01               	infsnz	_outPipes,f,c	;volatile
 39468  00F172  2A02               	incf	_outPipes+1,f,c	;volatile
 39469  00F174  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 39470  00F176                     i2l260:
 39471  00F176  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 39472  00F178  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 39473  00F17A  A0D8               	btfss	status,0,c
 39474  00F17C  D7EB               	goto	i2l261
 39475                           
 39476                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 39477  00F17E  5005               	movf	_outPipes+4,w,c	;volatile
 39478  00F180  1006               	iorwf	_outPipes+5,w,c	;volatile
 39479  00F182  B4D8               	btfsc	status,2,c
 39480  00F184  D032               	goto	i2l263
 39481                           
 39482                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 39483  00F186  EE20 F001          	lfsr	2,1
 39484  00F18A  501A               	movf	_pBDTEntryEP0OutNext,w,c
 39485  00F18C  26D9               	addwf	fsr2l,f,c
 39486  00F18E  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 39487  00F190  22DA               	addwfc	fsr2h,f,c
 39488  00F192  0E08               	movlw	8
 39489  00F194  6EDF               	movwf	indf2,c
 39490                           
 39491                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 39492  00F196  EE20 F002          	lfsr	2,2
 39493  00F19A  501A               	movf	_pBDTEntryEP0OutNext,w,c
 39494  00F19C  26D9               	addwf	fsr2l,f,c
 39495  00F19E  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 39496  00F1A0  22DA               	addwfc	fsr2h,f,c
 39497  00F1A2  0E38               	movlw	56
 39498  00F1A4  6EDE               	movwf	postinc2,c
 39499  00F1A6  0E0D               	movlw	13
 39500  00F1A8  6EDD               	movwf	postdec2,c
 39501                           
 39502                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 39503  00F1AA  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 39504  00F1AE  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 39505  00F1B2  BCDF               	btfsc	indf2,6,c
 39506  00F1B4  D00D               	goto	i2l264
 39507                           
 39508                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 39509  00F1B6  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39510  00F1BA  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39511  00F1BE  0E48               	movlw	72
 39512  00F1C0  6EDF               	movwf	indf2,c
 39513                           
 39514                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 39515  00F1C2  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39516  00F1C6  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39517  00F1CA  0E00               	movlw	0
 39518  00F1CC  8EDB               	bsf	plusw2,7,c
 39519                           
 39520                           ;usb_device.c: 1891: }
 39521  00F1CE  0012               	return	
 39522  00F1D0                     i2l264:
 39523                           
 39524                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 39525  00F1D0  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39526  00F1D4  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39527  00F1D8  0E08               	movlw	8
 39528  00F1DA  6EDF               	movwf	indf2,c
 39529                           
 39530                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 39531  00F1DC  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39532  00F1E0  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39533  00F1E4  0E00               	movlw	0
 39534  00F1E6  8EDB               	bsf	plusw2,7,c
 39535                           
 39536                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 39537  00F1E8  0012               	return	
 39538  00F1EA                     i2l263:
 39539                           
 39540                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 39541  00F1EA  EE20 F001          	lfsr	2,1
 39542  00F1EE  501A               	movf	_pBDTEntryEP0OutNext,w,c
 39543  00F1F0  26D9               	addwf	fsr2l,f,c
 39544  00F1F2  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 39545  00F1F4  22DA               	addwfc	fsr2h,f,c
 39546  00F1F6  0E08               	movlw	8
 39547  00F1F8  6EDF               	movwf	indf2,c
 39548                           
 39549                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 39550  00F1FA  EE20 F002          	lfsr	2,2
 39551  00F1FE  501A               	movf	_pBDTEntryEP0OutNext,w,c
 39552  00F200  26D9               	addwf	fsr2l,f,c
 39553  00F202  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 39554  00F204  22DA               	addwfc	fsr2h,f,c
 39555  00F206  0E30               	movlw	48
 39556  00F208  6EDE               	movwf	postinc2,c
 39557  00F20A  0E0D               	movlw	13
 39558  00F20C  6EDD               	movwf	postdec2,c
 39559                           
 39560                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 39561  00F20E  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39562  00F212  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39563  00F216  0E04               	movlw	4
 39564  00F218  6EDF               	movwf	indf2,c
 39565                           
 39566                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 39567  00F21A  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39568  00F21E  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39569  00F222  0E00               	movlw	0
 39570  00F224  8EDB               	bsf	plusw2,7,c
 39571                           
 39572                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 39573                           
 39574                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 39575  00F226  9E04               	bcf	_outPipes+3,7,c	;volatile
 39576                           
 39577                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 39578  00F228  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 39579  00F22A  A4D8               	btfss	status,2,c
 39580  00F22C  0012               	return	
 39581                           
 39582                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 39583  00F22E  ECC1  F080         	call	_USBCtrlEPAllowStatusStage	;wreg free
 39584  00F232  0012               	return	
 39585  00F234                     __end_of_USBCtrlTrfRxService:
 39586                           	opt stack 0
 39587                           tosu	equ	0xFFF
 39588                           tosh	equ	0xFFE
 39589                           tosl	equ	0xFFD
 39590                           pclatu	equ	0xFFB
 39591                           pclath	equ	0xFFA
 39592                           tblptru	equ	0xFF8
 39593                           tblptrh	equ	0xFF7
 39594                           tblptrl	equ	0xFF6
 39595                           tablat	equ	0xFF5
 39596                           prodh	equ	0xFF4
 39597                           prodl	equ	0xFF3
 39598                           intcon	equ	0xFF2
 39599                           indf0	equ	0xFEF
 39600                           postinc0	equ	0xFEE
 39601                           fsr0h	equ	0xFEA
 39602                           fsr0l	equ	0xFE9
 39603                           wreg	equ	0xFE8
 39604                           indf1	equ	0xFE7
 39605                           postdec1	equ	0xFE5
 39606                           plusw1	equ	0xFE3
 39607                           fsr1h	equ	0xFE2
 39608                           fsr1l	equ	0xFE1
 39609                           indf2	equ	0xFDF
 39610                           postinc2	equ	0xFDE
 39611                           postdec2	equ	0xFDD
 39612                           plusw2	equ	0xFDB
 39613                           fsr2h	equ	0xFDA
 39614                           fsr2l	equ	0xFD9
 39615                           status	equ	0xFD8
 39616                           
 39617 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 39618 ;; Defined at:
 39619 ;;		line 1418 in file "usb_device.c"
 39620 ;; Parameters:    Size  Location     Type
 39621 ;;		None
 39622 ;; Auto vars:     Size  Location     Type
 39623 ;;		None
 39624 ;; Return value:  Size  Location     Type
 39625 ;;                  1    wreg      void 
 39626 ;; Registers used:
 39627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39628 ;; Tracked objects:
 39629 ;;		On entry : 0/0
 39630 ;;		On exit  : 0/0
 39631 ;;		Unchanged: 0/0
 39632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39637 ;;Total ram usage:        0 bytes
 39638 ;; Hardware stack levels used:    1
 39639 ;; This function calls:
 39640 ;;		Nothing
 39641 ;; This function is called by:
 39642 ;;		_USBDeviceTasks
 39643 ;;		_USBCtrlEPServiceComplete
 39644 ;;		_USBCtrlTrfRxService
 39645 ;; This function uses a non-reentrant model
 39646 ;;
 39647                           
 39648                           	psect	text154
 39649  010182                     __ptext154:
 39650                           	opt stack 0
 39651  010182                     _USBCtrlEPAllowStatusStage:
 39652                           	opt stack 13
 39653                           
 39654                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 39655                           
 39656                           ;incstack = 0
 39657  010182  5022               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 39658  010184  A4D8               	btfss	status,2,c
 39659  010186  0012               	return	
 39660                           
 39661                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 39662  010188  0E01               	movlw	1
 39663  01018A  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 39664                           
 39665                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 39666  01018C  0101               	movlb	1	; () banked
 39667  01018E  5186               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 39668  010190  A4D8               	btfss	status,2,c
 39669  010192  0012               	return	
 39670                           
 39671                           ; BSR set to: 1
 39672                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 39673  010194  0E01               	movlw	1
 39674  010196  6F86               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 39675                           
 39676                           ; BSR set to: 1
 39677                           ;usb_device.c: 1434: if(controlTransferState == 2)
 39678  010198  0E02               	movlw	2
 39679  01019A  1829               	xorwf	_controlTransferState,w,c	;volatile
 39680  01019C  A4D8               	btfss	status,2,c
 39681  01019E  D015               	goto	i2l214
 39682                           
 39683                           ; BSR set to: 1
 39684                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 39685  0101A0  EE20 F001          	lfsr	2,1
 39686  0101A4  5010               	movf	_pBDTEntryIn,w,c
 39687  0101A6  26D9               	addwf	fsr2l,f,c
 39688  0101A8  5011               	movf	_pBDTEntryIn+1,w,c
 39689  0101AA  22DA               	addwfc	fsr2h,f,c
 39690  0101AC  0E00               	movlw	0
 39691  0101AE  6EDF               	movwf	indf2,c
 39692                           
 39693                           ; BSR set to: 1
 39694                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 39695  0101B0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 39696  0101B4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39697  0101B8  0E48               	movlw	72
 39698  0101BA  6EDF               	movwf	indf2,c
 39699                           
 39700                           ; BSR set to: 1
 39701                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 39702  0101BC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 39703  0101C0  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39704  0101C4  0E00               	movlw	0
 39705  0101C6  8EDB               	bsf	plusw2,7,c
 39706                           
 39707                           ;usb_device.c: 1439: }
 39708  0101C8  0012               	return	
 39709  0101CA                     i2l214:
 39710                           
 39711                           ; BSR set to: 1
 39712                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 39713                           
 39714                           ; BSR set to: 1
 39715  0101CA  0429               	decf	_controlTransferState,w,c	;volatile
 39716  0101CC  A4D8               	btfss	status,2,c
 39717  0101CE  0012               	return	
 39718                           
 39719                           ; BSR set to: 1
 39720                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 39721  0101D0  0E00               	movlw	0
 39722  0101D2  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 39723                           
 39724                           ; BSR set to: 1
 39725                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 39726  0101D4  EE20 F001          	lfsr	2,1
 39727  0101D8  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 39728  0101DA  26D9               	addwf	fsr2l,f,c
 39729  0101DC  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 39730  0101DE  22DA               	addwfc	fsr2h,f,c
 39731  0101E0  0E08               	movlw	8
 39732  0101E2  6EDF               	movwf	indf2,c
 39733                           
 39734                           ; BSR set to: 1
 39735                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 39736  0101E4  EE20 F002          	lfsr	2,2
 39737  0101E8  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 39738  0101EA  26D9               	addwf	fsr2l,f,c
 39739  0101EC  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 39740  0101EE  22DA               	addwfc	fsr2h,f,c
 39741  0101F0  0E30               	movlw	48
 39742  0101F2  6EDE               	movwf	postinc2,c
 39743  0101F4  0E0D               	movlw	13
 39744  0101F6  6EDD               	movwf	postdec2,c
 39745                           
 39746                           ; BSR set to: 1
 39747                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 39748  0101F8  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 39749  0101FC  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 39750  010200  0E04               	movlw	4
 39751  010202  6EDF               	movwf	indf2,c
 39752                           
 39753                           ; BSR set to: 1
 39754                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 39755  010204  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 39756  010208  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 39757  01020C  0E00               	movlw	0
 39758  01020E  8EDB               	bsf	plusw2,7,c
 39759                           
 39760                           ; BSR set to: 1
 39761                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 39762  010210  0E01               	movlw	1
 39763  010212  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 39764                           
 39765                           ; BSR set to: 1
 39766                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 39767  010214  EE20 F001          	lfsr	2,1
 39768  010218  501A               	movf	_pBDTEntryEP0OutNext,w,c
 39769  01021A  26D9               	addwf	fsr2l,f,c
 39770  01021C  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 39771  01021E  22DA               	addwfc	fsr2h,f,c
 39772  010220  0E08               	movlw	8
 39773  010222  6EDF               	movwf	indf2,c
 39774                           
 39775                           ; BSR set to: 1
 39776                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 39777  010224  EE20 F002          	lfsr	2,2
 39778  010228  501A               	movf	_pBDTEntryEP0OutNext,w,c
 39779  01022A  26D9               	addwf	fsr2l,f,c
 39780  01022C  501B               	movf	_pBDTEntryEP0OutNext+1,w,c
 39781  01022E  22DA               	addwfc	fsr2h,f,c
 39782  010230  0E30               	movlw	48
 39783  010232  6EDE               	movwf	postinc2,c
 39784  010234  0E0D               	movlw	13
 39785  010236  6EDD               	movwf	postdec2,c
 39786                           
 39787                           ; BSR set to: 1
 39788                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 39789  010238  C01A  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39790  01023C  C01B  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39791  010240  0E80               	movlw	128
 39792  010242  6EDF               	movwf	indf2,c
 39793                           
 39794                           ; BSR set to: 1
 39795                           
 39796                           ; BSR set to: 1
 39797                           
 39798                           ; BSR set to: 1
 39799  010244  0012               	return	
 39800  010246                     __end_of_USBCtrlEPAllowStatusStage:
 39801                           	opt stack 0
 39802                           tosu	equ	0xFFF
 39803                           tosh	equ	0xFFE
 39804                           tosl	equ	0xFFD
 39805                           pclatu	equ	0xFFB
 39806                           pclath	equ	0xFFA
 39807                           tblptru	equ	0xFF8
 39808                           tblptrh	equ	0xFF7
 39809                           tblptrl	equ	0xFF6
 39810                           tablat	equ	0xFF5
 39811                           prodh	equ	0xFF4
 39812                           prodl	equ	0xFF3
 39813                           intcon	equ	0xFF2
 39814                           indf0	equ	0xFEF
 39815                           postinc0	equ	0xFEE
 39816                           fsr0h	equ	0xFEA
 39817                           fsr0l	equ	0xFE9
 39818                           wreg	equ	0xFE8
 39819                           indf1	equ	0xFE7
 39820                           postdec1	equ	0xFE5
 39821                           plusw1	equ	0xFE3
 39822                           fsr1h	equ	0xFE2
 39823                           fsr1l	equ	0xFE1
 39824                           indf2	equ	0xFDF
 39825                           postinc2	equ	0xFDE
 39826                           postdec2	equ	0xFDD
 39827                           plusw2	equ	0xFDB
 39828                           fsr2h	equ	0xFDA
 39829                           fsr2l	equ	0xFD9
 39830                           status	equ	0xFD8
 39831                           
 39832 ;; *************** function _USBCtrlTrfInHandler *****************
 39833 ;; Defined at:
 39834 ;;		line 2594 in file "usb_device.c"
 39835 ;; Parameters:    Size  Location     Type
 39836 ;;		None
 39837 ;; Auto vars:     Size  Location     Type
 39838 ;;  lastDTS         1    1[COMRAM] unsigned char 
 39839 ;; Return value:  Size  Location     Type
 39840 ;;                  1    wreg      void 
 39841 ;; Registers used:
 39842 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39843 ;; Tracked objects:
 39844 ;;		On entry : 0/0
 39845 ;;		On exit  : 0/0
 39846 ;;		Unchanged: 0/0
 39847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39852 ;;Total ram usage:        1 bytes
 39853 ;; Hardware stack levels used:    1
 39854 ;; Hardware stack levels required when called:    1
 39855 ;; This function calls:
 39856 ;;		_USBCtrlTrfTxService
 39857 ;; This function is called by:
 39858 ;;		_USBCtrlEPService
 39859 ;; This function uses a non-reentrant model
 39860 ;;
 39861                           
 39862                           	psect	text155
 39863  010304                     __ptext155:
 39864                           	opt stack 0
 39865  010304                     _USBCtrlTrfInHandler:
 39866                           	opt stack 14
 39867                           
 39868                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 39869                           
 39870                           ;incstack = 0
 39871  010304  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 39872  010308  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39873  01030C  0E00               	movlw	0
 39874  01030E  BCDF               	btfsc	indf2,6,c
 39875  010310  0E01               	movlw	1
 39876  010312  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 39877                           
 39878                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 39879  010314  0E04               	movlw	4
 39880  010316  1810               	xorwf	_pBDTEntryIn,w,c
 39881  010318  6E10               	movwf	_pBDTEntryIn,c
 39882  01031A  5011               	movf	_pBDTEntryIn+1,w,c
 39883  01031C  6E11               	movwf	_pBDTEntryIn+1,c
 39884                           
 39885                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 39886  01031E  0E08               	movlw	8
 39887  010320  182B               	xorwf	_USBDeviceState,w,c	;volatile
 39888  010322  A4D8               	btfss	status,2,c
 39889  010324  D00C               	goto	i2l341
 39890                           
 39891                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 39892  010326  010D               	movlb	13	; () banked
 39893  010328  5132               	movf	50,w,b	;volatile
 39894  01032A  0B7F               	andlw	127
 39895  01032C  010F               	movlb	15	; () banked
 39896  01032E  6F38               	movwf	56,b	;volatile
 39897                           
 39898                           ; BSR set to: 15
 39899                           ;usb_device.c: 2609: if(UADDR != 0u)
 39900  010330  5138               	movf	56,w,b	;volatile
 39901  010332  B4D8               	btfsc	status,2,c
 39902  010334  D002               	goto	i2l340
 39903                           
 39904                           ; BSR set to: 15
 39905                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 39906  010336  0E10               	movlw	16
 39907  010338  D001               	goto	L72
 39908  01033A                     i2l340:
 39909                           
 39910                           ; BSR set to: 15
 39911                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 39912                           
 39913                           ; BSR set to: 15
 39914  01033A  0E04               	movlw	4
 39915  01033C                     L72:
 39916  01033C  6E2B               	movwf	_USBDeviceState,c	;volatile
 39917  01033E                     i2l341:
 39918                           
 39919                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 39920                           
 39921                           ; BSR set to: 15
 39922                           
 39923                           ; BSR set to: 15
 39924  01033E  0429               	decf	_controlTransferState,w,c	;volatile
 39925  010340  A4D8               	btfss	status,2,c
 39926  010342  D03A               	goto	i2l342
 39927                           
 39928                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 39929  010344  EE20 F002          	lfsr	2,2
 39930  010348  5010               	movf	_pBDTEntryIn,w,c
 39931  01034A  26D9               	addwf	fsr2l,f,c
 39932  01034C  5011               	movf	_pBDTEntryIn+1,w,c
 39933  01034E  22DA               	addwfc	fsr2h,f,c
 39934  010350  0E38               	movlw	56
 39935  010352  6EDE               	movwf	postinc2,c
 39936  010354  0E0D               	movlw	13
 39937  010356  6EDD               	movwf	postdec2,c
 39938                           
 39939                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 39940  010358  EC8D  F07F         	call	_USBCtrlTrfTxService	;wreg free
 39941                           
 39942                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 39943  01035C  0E02               	movlw	2
 39944  01035E  182A               	xorwf	_shortPacketStatus,w,c	;volatile
 39945  010360  A4D8               	btfss	status,2,c
 39946  010362  D00D               	goto	i2l343
 39947                           
 39948                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 39949  010364  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 39950  010368  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39951  01036C  0E04               	movlw	4
 39952  01036E  6EDF               	movwf	indf2,c
 39953                           
 39954                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 39955  010370  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 39956  010374  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39957  010378  0E00               	movlw	0
 39958  01037A  8EDB               	bsf	plusw2,7,c
 39959                           
 39960                           ;usb_device.c: 2635: }
 39961  01037C  0012               	return	
 39962  01037E                     i2l343:
 39963                           
 39964                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 39965  01037E  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 39966  010380  A4D8               	btfss	status,2,c
 39967  010382  D00D               	goto	i2l345
 39968                           
 39969                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 39970  010384  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 39971  010388  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39972  01038C  0E48               	movlw	72
 39973  01038E  6EDF               	movwf	indf2,c
 39974                           
 39975                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 39976  010390  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 39977  010394  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39978  010398  0E00               	movlw	0
 39979  01039A  8EDB               	bsf	plusw2,7,c
 39980                           
 39981                           ;usb_device.c: 2642: }
 39982  01039C  0012               	return	
 39983  01039E                     i2l345:
 39984                           
 39985                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 39986  01039E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 39987  0103A2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39988  0103A6  0E08               	movlw	8
 39989  0103A8  6EDF               	movwf	indf2,c
 39990                           
 39991                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 39992  0103AA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 39993  0103AE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39994  0103B2  0E00               	movlw	0
 39995  0103B4  8EDB               	bsf	plusw2,7,c
 39996                           
 39997                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 39998  0103B6  0012               	return	
 39999  0103B8                     i2l342:
 40000                           
 40001                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 40002  0103B8  BE04               	btfsc	_outPipes+3,7,c	;volatile
 40003                           
 40004                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 40005                           
 40006                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 40007  0103BA  9E04               	bcf	_outPipes+3,7,c	;volatile
 40008                           
 40009                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 40010  0103BC  0E00               	movlw	0
 40011  0103BE  6E29               	movwf	_controlTransferState,c	;volatile
 40012  0103C0  0012               	return	
 40013  0103C2                     __end_of_USBCtrlTrfInHandler:
 40014                           	opt stack 0
 40015                           tosu	equ	0xFFF
 40016                           tosh	equ	0xFFE
 40017                           tosl	equ	0xFFD
 40018                           pclatu	equ	0xFFB
 40019                           pclath	equ	0xFFA
 40020                           tblptru	equ	0xFF8
 40021                           tblptrh	equ	0xFF7
 40022                           tblptrl	equ	0xFF6
 40023                           tablat	equ	0xFF5
 40024                           prodh	equ	0xFF4
 40025                           prodl	equ	0xFF3
 40026                           intcon	equ	0xFF2
 40027                           indf0	equ	0xFEF
 40028                           postinc0	equ	0xFEE
 40029                           fsr0h	equ	0xFEA
 40030                           fsr0l	equ	0xFE9
 40031                           wreg	equ	0xFE8
 40032                           indf1	equ	0xFE7
 40033                           postdec1	equ	0xFE5
 40034                           plusw1	equ	0xFE3
 40035                           fsr1h	equ	0xFE2
 40036                           fsr1l	equ	0xFE1
 40037                           indf2	equ	0xFDF
 40038                           postinc2	equ	0xFDE
 40039                           postdec2	equ	0xFDD
 40040                           plusw2	equ	0xFDB
 40041                           fsr2h	equ	0xFDA
 40042                           fsr2l	equ	0xFD9
 40043                           status	equ	0xFD8
 40044                           
 40045 ;; *************** function _USBCtrlTrfTxService *****************
 40046 ;; Defined at:
 40047 ;;		line 1773 in file "usb_device.c"
 40048 ;; Parameters:    Size  Location     Type
 40049 ;;		None
 40050 ;; Auto vars:     Size  Location     Type
 40051 ;;  byteToSend      1    0[COMRAM] unsigned char 
 40052 ;; Return value:  Size  Location     Type
 40053 ;;                  1    wreg      void 
 40054 ;; Registers used:
 40055 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 40056 ;; Tracked objects:
 40057 ;;		On entry : 0/0
 40058 ;;		On exit  : 0/0
 40059 ;;		Unchanged: 0/0
 40060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40065 ;;Total ram usage:        1 bytes
 40066 ;; Hardware stack levels used:    1
 40067 ;; This function calls:
 40068 ;;		Nothing
 40069 ;; This function is called by:
 40070 ;;		_USBCtrlEPAllowDataStage
 40071 ;;		_USBCtrlTrfInHandler
 40072 ;; This function uses a non-reentrant model
 40073 ;;
 40074                           
 40075                           	psect	text156
 40076  00FF1A                     __ptext156:
 40077                           	opt stack 0
 40078  00FF1A                     _USBCtrlTrfTxService:
 40079                           	opt stack 12
 40080                           
 40081                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 40082                           
 40083                           ;incstack = 0
 40084  00FF1A  0E08               	movlw	8
 40085  00FF1C  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 40086                           
 40087                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 40088  00FF1E  500F               	movf	_inPipes+5,w,c	;volatile
 40089  00FF20  E110               	bnz	i2l10818
 40090  00FF22  0E08               	movlw	8
 40091  00FF24  5C0E               	subwf	_inPipes+4,w,c	;volatile
 40092  00FF26  B0D8               	btfsc	status,0,c
 40093  00FF28  D00C               	goto	i2l247
 40094                           
 40095                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 40096  00FF2A  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 40097                           
 40098                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 40099  00FF2E  502A               	movf	_shortPacketStatus,w,c	;volatile
 40100  00FF30  A4D8               	btfss	status,2,c
 40101  00FF32  D002               	goto	i2l245
 40102                           
 40103                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 40104  00FF34  0E01               	movlw	1
 40105  00FF36  D004               	goto	L73
 40106  00FF38                     i2l245:
 40107                           
 40108                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 40109  00FF38  042A               	decf	_shortPacketStatus,w,c	;volatile
 40110  00FF3A  A4D8               	btfss	status,2,c
 40111  00FF3C  D002               	goto	i2l247
 40112                           
 40113                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 40114  00FF3E  0E02               	movlw	2
 40115  00FF40                     L73:
 40116  00FF40  6E2A               	movwf	_shortPacketStatus,c	;volatile
 40117  00FF42                     i2l247:
 40118  00FF42                     i2l10818:
 40119                           
 40120                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 40121  00FF42  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 40122  00FF44  5E0E               	subwf	_inPipes+4,f,c	;volatile
 40123  00FF46  0E00               	movlw	0
 40124  00FF48  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 40125                           
 40126                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 40127  00FF4A  EE20 F001          	lfsr	2,1
 40128  00FF4E  5010               	movf	_pBDTEntryIn,w,c
 40129  00FF50  26D9               	addwf	fsr2l,f,c
 40130  00FF52  5011               	movf	_pBDTEntryIn+1,w,c
 40131  00FF54  22DA               	addwfc	fsr2h,f,c
 40132  00FF56  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 40133                           
 40134                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 40135  00FF5A  0E38               	movlw	56
 40136  00FF5C  0101               	movlb	1	; () banked
 40137  00FF5E  6F7B               	movwf	_pDst& (0+255),b
 40138  00FF60  0E0D               	movlw	13
 40139  00FF62  6F7C               	movwf	(_pDst+1)& (0+255),b
 40140                           
 40141                           ; BSR set to: 1
 40142                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 40143  00FF64  A00D               	btfss	_inPipes+3,0,c	;volatile
 40144  00FF66  D01D               	goto	i2l249
 40145  00FF68  D03C               	goto	i2l253
 40146  00FF6A                     
 40147                           ; BSR set to: 1
 40148                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 40149                           
 40150                           ; BSR set to: 1
 40151  00FF6A  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 40152  00FF6E  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 40153  00FF72  0E00               	movlw	low (__mediumconst shr (0+16))
 40154  00FF74  6EF8               	movwf	tblptru,c
 40155  00FF76  C17B  FFD9         	movff	_pDst,fsr2l
 40156  00FF7A  C17C  FFDA         	movff	_pDst+1,fsr2h
 40157  00FF7E  0E0E               	movlw	(high __ramtop+-1)
 40158  00FF80  64F7               	cpfsgt	tblptrh,c
 40159  00FF82  D003               	bra	i2u894_47
 40160  00FF84  0008               	tblrd		*
 40161  00FF86  50F5               	movf	tablat,w,c
 40162  00FF88  D005               	bra	i2u894_40
 40163  00FF8A                     i2u894_47:
 40164  00FF8A  CFF6 FFE9          	movff	tblptrl,fsr0l
 40165  00FF8E  CFF7 FFEA          	movff	tblptrh,fsr0h
 40166  00FF92  50EF               	movf	indf0,w,c
 40167  00FF94                     i2u894_40:
 40168  00FF94  6EDF               	movwf	indf2,c
 40169  00FF96  4A0A               	infsnz	_inPipes,f,c	;volatile
 40170  00FF98  2A0B               	incf	_inPipes+1,f,c	;volatile
 40171  00FF9A  0101               	movlb	1	; () banked
 40172  00FF9C  4B7B               	infsnz	_pDst& (0+255),f,b
 40173  00FF9E  2B7C               	incf	(_pDst+1)& (0+255),f,b
 40174                           
 40175                           ; BSR set to: 1
 40176                           ;usb_device.c: 1816: byteToSend--;
 40177  00FFA0  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 40178  00FFA2                     i2l249:
 40179                           
 40180                           ; BSR set to: 1
 40181                           
 40182                           ; BSR set to: 1
 40183  00FFA2  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 40184  00FFA4  B4D8               	btfsc	status,2,c
 40185  00FFA6  0012               	return	
 40186  00FFA8  D7E0               	goto	i2l250
 40187  00FFAA                     
 40188                           ; BSR set to: 1
 40189                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 40190                           
 40191                           ; BSR set to: 1
 40192  00FFAA  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 40193  00FFAE  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 40194  00FFB2  0E00               	movlw	low (__mediumconst shr (0+16))
 40195  00FFB4  6EF8               	movwf	tblptru,c
 40196  00FFB6  C17B  FFD9         	movff	_pDst,fsr2l
 40197  00FFBA  C17C  FFDA         	movff	_pDst+1,fsr2h
 40198  00FFBE  0E0E               	movlw	(high __ramtop+-1)
 40199  00FFC0  64F7               	cpfsgt	tblptrh,c
 40200  00FFC2  D003               	bra	i2u896_47
 40201  00FFC4  0008               	tblrd		*
 40202  00FFC6  50F5               	movf	tablat,w,c
 40203  00FFC8  D005               	bra	i2u896_40
 40204  00FFCA                     i2u896_47:
 40205  00FFCA  CFF6 FFE9          	movff	tblptrl,fsr0l
 40206  00FFCE  CFF7 FFEA          	movff	tblptrh,fsr0h
 40207  00FFD2  50EF               	movf	indf0,w,c
 40208  00FFD4                     i2u896_40:
 40209  00FFD4  6EDF               	movwf	indf2,c
 40210  00FFD6  4A0A               	infsnz	_inPipes,f,c	;volatile
 40211  00FFD8  2A0B               	incf	_inPipes+1,f,c	;volatile
 40212  00FFDA  0101               	movlb	1	; () banked
 40213  00FFDC  4B7B               	infsnz	_pDst& (0+255),f,b
 40214  00FFDE  2B7C               	incf	(_pDst+1)& (0+255),f,b
 40215                           
 40216                           ; BSR set to: 1
 40217                           ;usb_device.c: 1824: byteToSend--;
 40218  00FFE0  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 40219  00FFE2                     i2l253:
 40220                           
 40221                           ; BSR set to: 1
 40222                           
 40223                           ; BSR set to: 1
 40224  00FFE2  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 40225  00FFE4  B4D8               	btfsc	status,2,c
 40226  00FFE6  0012               	return	
 40227  00FFE8  D7E0               	goto	i2l254
 40228  00FFEA                     __end_of_USBCtrlTrfTxService:
 40229                           	opt stack 0
 40230                           tosu	equ	0xFFF
 40231                           tosh	equ	0xFFE
 40232                           tosl	equ	0xFFD
 40233                           pclatu	equ	0xFFB
 40234                           pclath	equ	0xFFA
 40235                           tblptru	equ	0xFF8
 40236                           tblptrh	equ	0xFF7
 40237                           tblptrl	equ	0xFF6
 40238                           tablat	equ	0xFF5
 40239                           prodh	equ	0xFF4
 40240                           prodl	equ	0xFF3
 40241                           intcon	equ	0xFF2
 40242                           indf0	equ	0xFEF
 40243                           postinc0	equ	0xFEE
 40244                           fsr0h	equ	0xFEA
 40245                           fsr0l	equ	0xFE9
 40246                           wreg	equ	0xFE8
 40247                           indf1	equ	0xFE7
 40248                           postdec1	equ	0xFE5
 40249                           plusw1	equ	0xFE3
 40250                           fsr1h	equ	0xFE2
 40251                           fsr1l	equ	0xFE1
 40252                           indf2	equ	0xFDF
 40253                           postinc2	equ	0xFDE
 40254                           postdec2	equ	0xFDD
 40255                           plusw2	equ	0xFDB
 40256                           fsr2h	equ	0xFDA
 40257                           fsr2l	equ	0xFD9
 40258                           status	equ	0xFD8
 40259                           tosu	equ	0xFFF
 40260                           tosh	equ	0xFFE
 40261                           tosl	equ	0xFFD
 40262                           pclatu	equ	0xFFB
 40263                           pclath	equ	0xFFA
 40264                           tblptru	equ	0xFF8
 40265                           tblptrh	equ	0xFF7
 40266                           tblptrl	equ	0xFF6
 40267                           tablat	equ	0xFF5
 40268                           prodh	equ	0xFF4
 40269                           prodl	equ	0xFF3
 40270                           intcon	equ	0xFF2
 40271                           indf0	equ	0xFEF
 40272                           postinc0	equ	0xFEE
 40273                           fsr0h	equ	0xFEA
 40274                           fsr0l	equ	0xFE9
 40275                           wreg	equ	0xFE8
 40276                           indf1	equ	0xFE7
 40277                           postdec1	equ	0xFE5
 40278                           plusw1	equ	0xFE3
 40279                           fsr1h	equ	0xFE2
 40280                           fsr1l	equ	0xFE1
 40281                           indf2	equ	0xFDF
 40282                           postinc2	equ	0xFDE
 40283                           postdec2	equ	0xFDD
 40284                           plusw2	equ	0xFDB
 40285                           fsr2h	equ	0xFDA
 40286                           fsr2l	equ	0xFD9
 40287                           status	equ	0xFD8
 40288                           
 40289                           	psect	text157
 40290  000000                     __ptext157:
 40291                           	opt stack 0
 40292                           tosu	equ	0xFFF
 40293                           tosh	equ	0xFFE
 40294                           tosl	equ	0xFFD
 40295                           pclatu	equ	0xFFB
 40296                           pclath	equ	0xFFA
 40297                           tblptru	equ	0xFF8
 40298                           tblptrh	equ	0xFF7
 40299                           tblptrl	equ	0xFF6
 40300                           tablat	equ	0xFF5
 40301                           prodh	equ	0xFF4
 40302                           prodl	equ	0xFF3
 40303                           intcon	equ	0xFF2
 40304                           indf0	equ	0xFEF
 40305                           postinc0	equ	0xFEE
 40306                           fsr0h	equ	0xFEA
 40307                           fsr0l	equ	0xFE9
 40308                           wreg	equ	0xFE8
 40309                           indf1	equ	0xFE7
 40310                           postdec1	equ	0xFE5
 40311                           plusw1	equ	0xFE3
 40312                           fsr1h	equ	0xFE2
 40313                           fsr1l	equ	0xFE1
 40314                           indf2	equ	0xFDF
 40315                           postinc2	equ	0xFDE
 40316                           postdec2	equ	0xFDD
 40317                           plusw2	equ	0xFDB
 40318                           fsr2h	equ	0xFDA
 40319                           fsr2l	equ	0xFD9
 40320                           status	equ	0xFD8
 40321                           
 40322                           	psect	rparam
 40323  0000                     tosu	equ	0xFFF
 40324                           tosh	equ	0xFFE
 40325                           tosl	equ	0xFFD
 40326                           pclatu	equ	0xFFB
 40327                           pclath	equ	0xFFA
 40328                           tblptru	equ	0xFF8
 40329                           tblptrh	equ	0xFF7
 40330                           tblptrl	equ	0xFF6
 40331                           tablat	equ	0xFF5
 40332                           prodh	equ	0xFF4
 40333                           prodl	equ	0xFF3
 40334                           intcon	equ	0xFF2
 40335                           indf0	equ	0xFEF
 40336                           postinc0	equ	0xFEE
 40337                           fsr0h	equ	0xFEA
 40338                           fsr0l	equ	0xFE9
 40339                           wreg	equ	0xFE8
 40340                           indf1	equ	0xFE7
 40341                           postdec1	equ	0xFE5
 40342                           plusw1	equ	0xFE3
 40343                           fsr1h	equ	0xFE2
 40344                           fsr1l	equ	0xFE1
 40345                           indf2	equ	0xFDF
 40346                           postinc2	equ	0xFDE
 40347                           postdec2	equ	0xFDD
 40348                           plusw2	equ	0xFDB
 40349                           fsr2h	equ	0xFDA
 40350                           fsr2l	equ	0xFD9
 40351                           status	equ	0xFD8
 40352                           
 40353                           	psect	temp
 40354  00005B                     btemp:
 40355                           	opt stack 0
 40356  00005B                     	ds	1
 40357  0000                     int$flags	set	btemp
 40358  0000                     wtemp8	set	btemp+1
 40359  0000                     ttemp5	set	btemp+1
 40360  0000                     ttemp6	set	btemp+4
 40361  0000                     ttemp7	set	btemp+8
 40362                           tosu	equ	0xFFF
 40363                           tosh	equ	0xFFE
 40364                           tosl	equ	0xFFD
 40365                           pclatu	equ	0xFFB
 40366                           pclath	equ	0xFFA
 40367                           tblptru	equ	0xFF8
 40368                           tblptrh	equ	0xFF7
 40369                           tblptrl	equ	0xFF6
 40370                           tablat	equ	0xFF5
 40371                           prodh	equ	0xFF4
 40372                           prodl	equ	0xFF3
 40373                           intcon	equ	0xFF2
 40374                           indf0	equ	0xFEF
 40375                           postinc0	equ	0xFEE
 40376                           fsr0h	equ	0xFEA
 40377                           fsr0l	equ	0xFE9
 40378                           wreg	equ	0xFE8
 40379                           indf1	equ	0xFE7
 40380                           postdec1	equ	0xFE5
 40381                           plusw1	equ	0xFE3
 40382                           fsr1h	equ	0xFE2
 40383                           fsr1l	equ	0xFE1
 40384                           indf2	equ	0xFDF
 40385                           postinc2	equ	0xFDE
 40386                           postdec2	equ	0xFDD
 40387                           plusw2	equ	0xFDB
 40388                           fsr2h	equ	0xFDA
 40389                           fsr2l	equ	0xFD9
 40390                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4446
    Data        135
    BSS         939
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    106     160
    BANK1           256      0     253
    BANK2           256      4     214
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK1[80]), ToSendDataBuffer(BANK2[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK1[80]), ToSendDataBuffer(BANK2[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), STR_6(CODE[6]), STR_5(CODE[9]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), dc_manual(CODE[80]), dc_zero(CODE[80]), 
		 -> STR_2(CODE[7]), STR_1(CODE[9]), dc_arc2(CODE[80]), dc_arc1(CODE[80]), 
		 -> dc_divide2(CODE[80]), dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), 
		 -> dc_main(CODE[80]), ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), STR_6(CODE[6]), STR_5(CODE[9]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), dc_manual(CODE[80]), dc_zero(CODE[80]), 
		 -> STR_2(CODE[7]), STR_1(CODE[9]), dc_arc2(CODE[80]), dc_arc1(CODE[80]), 
		 -> dc_divide2(CODE[80]), dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), 
		 -> dc_main(CODE[80]), ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    _parse_format_drive@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _parse_format_drive@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_modify_file@root(COMRAM[32]), fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_modify_file@root(COMRAM[32]), fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK1[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(BANK0[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK1[80]), ToSendDataBuffer(BANK2[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK2[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_display_prepare
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_schedule_command
    _motor_schedule_command->_motor_nonzero_steps_from_degrees
    _motor_nonzero_steps_from_degrees->_motor_steps_from_degrees
    _motor_steps_from_degrees->___fldiv
    _motor_steps_from_degrees->___flmul
    ___flmul->___xxtofl
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    ___fldiv->___xxtofl
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_MSDCheckForErrorCases
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_status
    __fill_buffer_get_status->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_long
    __parse_command_short->_i2c_eeprom_writeByte
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    __parse_command_long->__parse_format_drive
    __parse_format_drive->_fat_format
    _fat_format->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  281663
                                              0 BANK2      4     4      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _display_prepare
                     _display_update
               _encoder_statemachine
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0   53657
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
                           _i2c_init
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   12224
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     270
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     208
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   11954
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   30772
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    8195
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    3085
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     369
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2586
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    2377
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0    7576
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    5267
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    2417
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    2309
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0     602
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                22    22      0   25905
                                             62 BANK0     22    22      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
         _encoder_next_arc_step_size
      _encoder_next_divide_step_size
        _encoder_next_setup_stepsize
                 _motor_change_speed
   _motor_nonzero_steps_from_degrees
             _motor_schedule_command
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_schedule_command                               7     1      6    5364
                                             55 BANK0      7     1      6
                            ___fltol (ARG)
                         __motor_run
                 _motor_items_in_cue
   _motor_nonzero_steps_from_degrees (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          11     5      6     602
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _motor_nonzero_steps_from_degrees                     8     4      4    9833
                                             47 BANK0      8     4      4
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (3) _motor_steps_from_degrees                             8     4      4    9526
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3401
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_change_speed                                   2     0      2     447
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _encoder_next_setup_stepsize                          4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _encoder_next_divide_step_size                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _encoder_next_arc_step_size                           4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   51633
                                             92 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    7363
                                             51 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    7124
                                             39 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1828
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     720
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     961
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3099
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    5913
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    5516
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   12731
                                             77 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    8311
                                             53 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     650
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    2706
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1849
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     657
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     641
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     653
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     198
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      99
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0   92102
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0   92102
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   86370
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   44090
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   42042
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0    8914
                                             17 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     231
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                            9     0      9     308
                                              0 BANK0      9     0      9
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   16190
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2847
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    2048
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1983
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    7815
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    7457
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    5939
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     509
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      77
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      77
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   43828
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   12444
                                             22 BANK0      5     1      4
__fill_buffer_get_bootloader_details
           __fill_buffer_get_display
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    6967
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    3595
                                             20 BANK0      2     0      2
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        1     1      0    3274
                                             19 BANK0      1     1      0
                     __flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3    1071
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     166
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_bootloader_details                 10     8      2     197
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   27839
                                             53 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0    3162
                                             19 BANK0      1     1      0
               _i2c_eeprom_writeByte
                             _reboot
 ---------------------------------------------------------------------------------
 (4) _reboot                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_writeByte                                 9     6      3    3131
                                             10 BANK0      9     6      3
                   __i2c_eeprom_busy
                         __i2c_write
 ---------------------------------------------------------------------------------
 (5) __i2c_write                                           5     2      3    2272
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_eeprom_busy                                     1     1      0      34
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   23675
                                             46 BANK0      7     1      6
                __parse_format_drive
 ---------------------------------------------------------------------------------
 (4) __parse_format_drive                                  8     2      6   23202
                                             38 BANK0      8     2      6
                         _fat_format
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   22577
                                             36 BANK0      2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   20335
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    5486
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     664
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    5716
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    7134
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    3240
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1614
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1580
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1592
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1496
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     417
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     239
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     239
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3545
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   58258
                                             31 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0      91
                                              0 COMRAM    24    24      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   58167
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   33624
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   33174
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   25127
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    8493
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    8633
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7955
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_eeprom_busy
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
         _reboot
     _api_prepare
       __fill_buffer_get_bootloader_details
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___fltol
           ___lmul
           ___xxtofl
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___fltol
             ___lmul
             ___xxtofl
         _strlen (ARG)
       _strlen
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
         ___lmul
         ___xxtofl
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
     _encoder_next_arc_step_size
     _encoder_next_divide_step_size
     _encoder_next_setup_stepsize
     _motor_change_speed
     _motor_nonzero_steps_from_degrees
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_schedule_command
       ___fltol (ARG)
       __motor_run (ARG)
       _motor_items_in_cue (ARG)
       _motor_nonzero_steps_from_degrees (ARG)
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
     _motor_stop
   _motor_process_cue
     __motor_run
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _display_init
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_init
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      4      D6       9       83.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6A      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2CD      31        0.0%
DATA                 0      0     4CD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jan 27 22:31:10 2019

                         _motor_next_speed_check 014B                                       _USB_SD_Ptr 9DE4  
                                   ___fldiv@aexp 0086                                     ___fldiv@bexp 0085  
                                   ___fldiv@sign 007E                              __system_timer0_init 2082  
                                             _os 00CA                                    _USBDeviceInit E1CA  
                             _USBCheckHIDRequest FE4A                   ?_encoder_next_divide_step_size 002E  
                               __i2c_eeprom_busy 2156                                 ??__flash_is_busy 0071  
                                   __CFG_CP0$OFF 000000                              __end_of_system_init F928  
                       ?_i2c_display_write_fixed 0065             USER_USB_CALLBACK_EVENT_HANDLER@event 003D  
           USER_USB_CALLBACK_EVENT_HANDLER@pdata 003F                                              l206 1F8C  
                                            l207 1F8A                                              l145 E214  
                                            l147 E23C                                              l149 E276  
                    __end_of_USBStdGetDscHandler EBB6                                              l184 F358  
                                            l192 F296                                              l186 F382  
                                            l602 D7D6                                              l188 F400  
                                            l700 CDF2                                              l620 13A2  
                                            l612 EA80                                              l701 CB3E  
                                            l613 EA7A                                              l605 D7DE  
                                            l710 CC38                                              l630 C7A0  
                                            l622 13BE                                              l703 CE14  
                                            l711 CCA2                                              l631 C422  
                                            l615 EA84                                              l720 CDDA  
                                            l712 CC9E                                              l704 CBE4  
                                            l640 C560                                              l624 13CA  
                                            l608 E9D4                                              l641 C56A  
                                            l625 13D0                                              l714 CCB8  
                                            l706 CBEA                                              l650 C65C  
                                            l642 C58C                                              l634 C432  
                                            l626 13D6                                              l570 D7F6  
                                            l731 F6AE                                              l715 CD38  
                                            l619 13DE                                              l571 D5CA  
                                            l708 CC14                                              l660 C700  
                                            l652 C690                                              l644 C5BA  
                                            l636 C442                                              l580 D6D0  
                                            l709 CC5C                                              l661 C714  
                                            l637 C44C                                              l734 F6BA  
                                            l726 F65E                                              l718 CDA8  
                                            l670 C798                                              l662 C732  
                                            l654 C6AC                                              l646 C5FA  
                                            l582 D6E8                                              l735 F6E2  
                                            l719 CDC0                                              l639 C49E  
                                            l591 D75C                                              l575 D5EC  
                                            l728 F672                                              l664 C75E  
                                            l656 C6C4                                              l592 D760  
                                            l753 F738                                              l737 F716  
                                            l681 E008                                              l665 C738  
                                            l649 C62E                                              l593 D784  
                                            l577 D70E                                              l770 ED88  
                                            l738 F700                                              l690 DF22  
                                            l682 DE50                                              l666 C748  
                                            l578 D6F4                                              l586 D814  
                                            l675 04C6                                              l763 EDD2  
                                            l771 EDC4                                              l691 DF48  
                                            l667 C75C                                              l587 D72E  
                                            l579 D6C8                                              l764 ED3C  
                                            l684 E02C                                              l692 DF76  
                                            l860 E70E                                              _BDT 000D00  
                                            l677 04DC                                              l757 ED0E  
                                            l749 F728                                              l693 DF88  
                                            l685 DEA6                                              l589 D73A  
                                            l861 E7E8                                              l766 ED44  
                                            l694 DF8E                                              l943 084C  
                                            l767 ED52                                              l695 DFA4  
                                            l687 DEBE                                              l863 E816  
                                            l768 ED66                                              l696 DFEE  
                                            l688 DED4                                              l864 E7EE  
                                            l937 07E8                                              l769 ED74  
                                            l857 E6F2                                              l890 1620  
                                            l891 15E4                                              l859 E7F4  
                                            l893 15F0                                              l897 1602  
                                            l979 22EE                                              l899 160E  
                                            _LBA 015B                                    ?_display_init 002E  
                                            _PR2 000FCB                                              _LUN 0190  
                                            _UIE 000F36                                              _UIR 000F62  
                             api_prepare@command 007A                                       _USBSuspend 1FF6  
                         __end_of_display_update 1E5C                             USBStdSetCfgHandler@i 0045  
                           ?__parse_format_drive 0086                                              prod 000FF3  
                                            tosl 000FFD                                              wreg 000FE8  
                                 _USBDeviceTasks E458                              ?_USBCheckHIDRequest 002E  
                                   __CFG_IESO$ON 000000                                   _USBDeviceState 002B  
                                   ___flmul@aexp 007B                                     ___flmul@bexp 0080  
                                   ___flmul@sign 007A                                     ___flmul@temp 0085  
                                   ___flmul@prod 0081                        __size_of_i2c_display_init 0050  
                          ??_USBCtrlTrfRxService 002E                         __size_ofi2_USBDeviceInit 0144  
                       USBEnableEndpoint@options 0036                                ??_MSDErrorHandler 0068  
                           ?__system_timer0_init 002E                              api_prepare@inBuffer 0076  
                                   ___fltol@exp1 0069                      __flash_write_to_buffer@data 0075  
                                           l1102 2372                                             l1117 236A  
                                           l1301 D966                                             l1213 0E76  
                                           l1134 1A2A                                             l1302 D97A  
                                           l2110 1CD2                                             l1135 1A0C  
                                           l1303 D9DA                                             l1207 1890  
                                           l1304 D994                                             l1400 BAAE  
                                           l1208 1872                                             l2121 0C72  
                                           l1305 D9D8                                             l1313 EF5C  
                                           l2130 0A18                                             l2202 03D6  
                                           l1322 BDE8                                             l1402 BB0C  
                                           l2115 16E4                                             l1307 DA14  
                                           l1411 BCB0                                             l1403 BBB2  
                                           l1331 BE42                                             l1323 B21A  
                                           l2107 1CE4                                             l2124 0CA8  
                                           l2220 12F4                                             l2204 0410  
                                           l1308 D9E4                                             l1412 BC80  
                                           l1404 BB2A                                             l1332 B278  
                                           l1324 B258                                             l2108 1CC0  
                                           l2133 0A56                                             l2221 130C  
                                           l1421 BDAA                                             l1405 BBC8  
                                           l1333 B2C0                                             l1325 B23A  
                                           l2109 1CF4                                             l2206 0450  
                                           l1270 1AE2                                             l1414 BD22  
                                           l1406 BB36                                             l1350 B3EE  
                                           l1342 B318                                             l2231 06C6  
                                           l2207 041A                                             l1423 BDB8  
                                           l1415 BD4A                                             l1407 BB74  
                                           l1343 B34A                                             l1335 B2FA  
                                           l1327 B244                                             l1431 1E32  
                                           l2208 0426                                             l1272 1AEE  
                                           l1280 F9D4                                             l1408 BC3C  
                                           l1360 B52C                                             l1352 B42A  
                                           l1344 B336                                             l1336 B2CA  
                                           l2304 1AC2                                             l1521 164E  
                                           l1513 195C                                             l2225 1D62  
                                           l2217 1324                                             l1281 F9A4  
                                           l1425 BDE0                                             l1417 BD58  
                                           l1409 BC04                                             l1353 B416  
                                           l1329 B24E                                             l1522 1658  
                                           l1514 1966                                             l2226 1D40  
                                           l2218 12DC                                             l3130 18BE  
                                           l1362 B5B8                                             l1346 B340  
                                           l2235 0732                                             l2227 1D72  
                                           l2171 FB9E                                             l3131 18B6  
                                           l1291 D8F6                                             l1419 BD80  
                                           l1371 B704                                             l1363 B588  
                                           l1355 B420                                             l1347 B35E  
                                           l2323 08BE                                             l3140 1C4A  
                                           l3212 CE4A                                             l3300 E3D4  
                                           l1372 B732                                             l1356 B43E  
                                           l1348 B3A0                                             l2340 DC8E  
                                           l1621 1EE4                                             l3141 1C42  
                                           l1277 F976                                             l3221 CEFC  
                                           l3213 CE46                                             l3301 E3BC  
                                           l1381 B834                                             l1373 B722  
                                           l1365 B646                                             l1357 B4AC  
                                           l2341 DCA2                                             l2501 A6C4  
                                           l2190 ECA0                                             l2174 FB1A  
                                           l3134 18DE                                             l1278 F960  
                                           l1286 1BC4                                             l3230 CFC0  
                                           l3222 CFAA                                             l1390 B90A  
                                           l1382 B804                                             l1374 B742  
                                           l1366 B616                                             l1358 B47C  
                                           l2350 DDB6                                             l2342 DCAA  
                                           l2510 A66E                                             l2502 A580  
                                           l1527 21E6                                             l2191 EC42  
                                           l2183 EBD4                                             l2175 FB28  
                                           l3135 18E8                                             l1295 D8CE  
                                           l3223 CF5A                                             l3303 E406  
                                           l1375 B72A                                             l2343 DD04  
                                           l2503 A5CC                                             l2192 ECD6  
                                           l2176 FB3C                                             l3144 1C62  
                                           l3320 077A                                             l1296 D8EC  
                                           l3240 D0A8                                             l3224 CF82  
                                           l3216 CE8A                                             l3304 E3FA  
                                           l1392 B9E0                                             l1384 B868  
                                           l1376 B79C                                             l1368 B6EC  
                                           l2600 B098                                             l2193 EC5A  
                                           l2177 FB50                                             l3145 1C6C  
                                           l3321 07BC                                             l3241 D0B4  
                                           l3217 CE86                                             l1393 B9A8  
                                           l1385 B8D0                                             l1377 B76C  
                                           l1369 B6BC                                             l2521 A728  
                                           l2513 A69C                                             l2194 EC76  
                                           l2186 EC22                                             l2178 FB5E  
                                           l3314 1C14                                             l1298 D982  
                                           l3242 D0B6                                             l3226 CFA8  
                                           l1386 B886                                             l3250 C85C  
                                           l2610 B12E                                             l2602 B0C6  
                                           l2522 A6F8                                             l2506 A5FA  
                                           l2450 A45A                                             l2179 FB7E  
                                           l3219 CED4                                             l1395 BA54  
                                           l1387 B8E0                                             l1379 B7FA  
                                           l3251 C858                                             l2347 DD10  
                                           l2339 DC7E                                             l2611 B138  
                                           l2531 A782                                             l2523 A702  
                                           l2451 A25C                                             l1900 D3F0  
                                           l1476 178A                                             l2188 EC28  
                                           l3332 1FB2                                             l3236 D016  
                                           l1396 BA24                                             l1388 B892  
                                           l3252 C86C                                             l2348 DD12  
                                           l2612 B146                                             l2532 A78C  
                                           l2516 A71A                                             l2524 A710  
                                           l2452 A26C                                             l1468 11C2  
                     USBConfigureEndpoint@handle 0034                                             l1901 D3F4  
                                           l1477 1746                                             l3333 1FA0  
                                           l3229 CFDE                                             l3309 E446  
                                           l1389 B93A                                             l2621 10E6  
                                           l3253 C88A                                             l2349 DD7C  
                                           l2605 B192                                             l2533 AAB8  
                                           l2541 AA3E                                             l2517 A6D8  
                                           l2509 A622                                             l1469 11E6  
                                           l1910 D418                                             l1902 D3F8  
                                           l1494 0EE6                                             l3326 1512  
                                           l3318 073E                                             l3238 D05A  
                                           l1398 BA6C                                             l2622 10B2  
                                           l3270 CB26                                             l3246 C81C  
                                           l2614 B14E                                             l2606 B0F4  
                                           l2542 A9CE                                             l2534 A7C6  
                                           l2526 A738                                             l2518 A6E2  
                                           l2470 A38E                                             l2462 A300  
                                           l1911 D41C                                             l1903 D3FC  
                                           l1479 1770                                             l1495 0EF0  
                                           l3327 14D8                                             l3239 D07E  
                                           l1399 BADE                                             l2631 203C  
                                           l3247 C818                                             l2615 B176  
                                           l2607 B120                                             l2551 AB0E  
                                           l2527 A74A                                             l2519 A6F0  
                                           l2471 A39E                                             l2455 A29A  
                                           l1920 D440                                             l1912 D420  
                                           l1904 D400                                             l2720 0020  
                                           l2640 1156                                             l2632 202C  
                                           l2624 10BE                                             l3264 CA82  
                                           l3248 C82C                                             l2448 B1B0  
                                           l2560 AB78                                             l2480 A432  
                                           l2464 A328                                             l1921 D444  
                                           l1913 D424                                             l1905 D404  
                                           l1497 0F28                                             l2641 1122  
                                           l2625 10C8                                             l3257 CA4A  
                                           l2617 B180                                             l2561 AB82  
                                           l2545 AA66                                             l2537 A7EA  
                                           l2529 A776                                             l2465 A338  
                                           l1930 D464                                             l1922 D448  
                                           l1914 D428                                             l1906 D408  
                                           l2722 004E                                             l3338 1D0A  
                                           l2634 2030                                             l2626 10D2  
                                           l3266 CAC6                                             l3258 CA2C  
                                           l2554 AB9A                                             l2562 AB90  
                                           l2546 AAB0                                             l2538 A94C  
                                           l2490 A4E8                                             l2474 A3CC  
                                           l2458 A2C2                                             l1931 D468  
                                           l1923 D44C                                             l1915 D42C  
                                           l1907 D40C                                             l1499 0F48  
                                           l2723 0042                                             l3339 1D04  
                                           l2643 112E                                             l2635 2034  
                                           l2627 10DC                                             l3267 CAE4  
                                           l2483 B202                                             l2571 AC6C  
                                           l2555 AB58                                             l2539 A92C  
                                           l2491 A4B8                                             l2459 A2D2  
                                           l1940 179E                                             l1932 D46C  
                                           l1916 D430                                             l1908 D410  
                                           l2740 0660                                             l2732 05F8  
                                           l2660 1712                                             l2644 1138  
                                           l2636 2038                                             l2572 AC7E  
                                           l2564 ABC2                                             l2556 AB62  
                                           l2548 AAD8                                             l2492 A4C2  
                                           l2476 A3F4                                             l2468 A366  
                                           l1933 D470                                             l1925 D450  
                                           l1917 D434                                             l1909 D414  
                                           l1861 FDC8                                             l2741 0676  
                                           l2733 060C                                             l3293 E356  
                                           l2645 1142                                             l3269 CB08  
                                           l2581 ADA8                                             l2557 AB70  
                                           l2549 AAF8                                             l2485 A4DA  
                                           l2493 A4D0                                             l2477 A404  
                                           l1942 17A2                                             l1934 D474  
                                           l1926 D454                                             l1918 D438  
                                           l1870 FD98                                             l1862 FD7C  
                                           l2726 0082                                             l3294 E366  
                                           l2646 114C                                             l2590 B08E  
                                           l2582 ADBC                                             l2574 AC9E  
                                           l2566 AC06                                             l2486 A480  
                                           l1943 17A6                                             l1935 D478  
                                           l1927 D458                                             l1919 D43C  
                                           l1871 FD9C                                             l2727 0090  
                                           l2719 0008                                             l2735 062A  
                                           l3295 E384                                             l2559 ABA8  
                                           l2495 A502                                             l2487 A4A2  
                                           l1944 17AA                                             l1928 D45C  
                                           l1880 FDC0                                             l1872 FDA0  
                                           l1864 FD80                                             l1960 E0EA  
                                           l1952 E064                                             l2728 00A6  
                                           l2736 061E                                             l2576 AEBE  
                                           l2584 ADCA                                             l2488 A4B0  
                                           l1945 17AE                                             l1929 D460  
                                           l1881 FDC4                                             l1873 FDA4  
                                           l1865 FD84                                             l1961 E0EE  
                                           l3297 E396                                             l2593 AF88  
                                           l2577 ACB4                                             l2569 AC4A  
                                           l2497 A540                                             l1946 17B2  
                                           l1890 D358                                             l1874 FDA8  
                                           l1866 FD88                                             l1970 E112  
                                           l1962 E0F2                                             l1954 E072  
                                           l3298 E38A                                             l2594 AF3C  
                                           l2586 ADD2                                             l2578 AD9A  
                                           l1939 17BA                                             l1947 17B6  
                                           l1891 D36A                                             l1875 FDAC  
                                           l1867 FD8C                                             l1971 E116  
                                           l1963 E0F6                                             l2739 0652  
                                           l2659 16FE                                             l2587 AEB6  
                                           l1892 D37C                                             l1876 FDB0  
                                           l1868 FD90                                             l1980 E1C6  
                                           l1972 E11A                                             l1964 E0FA  
                                           l1956 E0AA                                             l2940 FA96  
                                           l1885 D47C                                             l1893 D38E  
                                           l1877 FDB4                                             l1869 FD94  
                                           l1973 E11E                                             l1965 E0FE  
                                           l2941 FA86                                             l2597 AFEA  
                                           l2589 AED6                                             l1894 D3A0  
                                           l1886 D34C                                             l1878 FDB8  
                                           l1958 E13A                                             l1974 E122  
                                           l1966 E102                                             l2598 B080  
                                           l1983 212A                                             l1895 D3B2  
                                           l1879 FDBC                                             l1975 E126  
                                           l1967 E106                                             l1959 E0E6  
                                           l1896 D3C4                                             l1888 D350  
                                           l1976 E12A                                             l1968 E10A  
                                           l1897 D3D6                                             l1889 D354  
                                           l1977 E12E                                             l1969 E10E  
                                           l1993 05D0                                             l1898 D3E8  
                                           l1978 E132                                             l2946 FABA  
                                           l2938 FA2A                                             l1899 D3EC  
                                           l1979 E136                                             l2947 FAAE  
                                           l2949 FAD6                                             l1989 057C  
                    ?_encoder_next_arc_step_size 0060                    __size_of_encoder_statemachine 0FDE  
                          ??i2_SYSTEM_Initialize 002E                                             STR_1 A21C  
                                           STR_2 A225                                             STR_3 A21C  
                                           STR_4 A225                                             STR_5 A21C  
                                           STR_6 A22C                                             STR_7 A213  
                                           STR_8 A213                                             STR_9 A213  
                          ??_USBCtrlTrfTxService 002E                                             _UCFG 000F39  
                                           _UEP0 000F26                                             _UEP1 000F27  
                                           _UEIE 000F37                                             _UEIR 000F63  
                                           _UCON 000F65                                             _TMR2 000FCC  
                    __size_ofi2_USBStallEndpoint 0106                                   ??_encoder_init 0060  
                        ??_fat_get_format_status 008B                             api_parse@out_idx_ptr 009C  
                                 _ResetSenseData 1402                                             _enc1 001F  
                                           _enc2 001E           USBStdFeatureReqHandler@current_ep_data 0048  
                                           _pDst 017B                                             _main E6E0  
                        _bit_pattern_verticalbar A1DD                                             _itoa 1BEE  
                       ??i2_USBTransferOnePacket 0032                      __size_of_APP_DeviceMSDTasks 0012  
                                           fsr0h 000FEA                                             fsr1h 000FE2  
                        __end_of_display_prepare BE5E                                             indf0 000FEF  
                                           fsr2h 000FDA                                             fsr0l 000FE9  
                                           indf1 000FE7                                             indf2 000FDF  
                                           fsr1l 000FE1                                             fsr2l 000FD9  
                                _USBDeviceAttach 1F64                                             btemp 005B  
                                           _utoa 0736                           __CFG_DSWDTOSC$T1OSCREF 000000  
                     ??_ExternalFlash_SectorRead 0093                  __size_of_motor_schedule_command 00A2  
                   ?i2_ExternalFlash_MediaDetect 002E                        _ExternalFlash_MediaDetect 2354  
                                           prodh 000FF4                                             prodl 000FF3  
                                           start 908E                  __end_of_APP_DeviceMSDInitialize 2318  
                   ?__motor_get_speed_in_degrees 0087                                  ___fldiv@new_exp 007F  
                          _display_get_character 2054                    motor_steps_from_degrees@steps 008B  
                           ??_USBCheckHIDRequest 002E                                 ?_MSDWriteHandler 002E  
                 ??_MSDProcessCommandMediaAbsent 00A7                       __end_of_USBCheckStdRequest FD7A  
                         ??_USBCtrlTrfOutHandler 0030                   ?__flash_write_page_from_buffer 0073  
                                   ___param_bank 000000                        ??_USBStdFeatureReqHandler 0045  
                                   _USBOutHandle 0173                    __size_of__display_padded_itoa 00E2  
                __size_of__flash_write_to_buffer 0052                         ??_USBStdGetStatusHandler 002E  
                                 ?_USBDeviceInit 002E                                __flash_get_status 1EFC  
              motor_speed_from_index@speed_index 0093                         _motor_steps_from_degrees 00B8  
                                  __CFG_PLLDIV$2 000000                       __end_of_motor_speed_lookup 9461  
                  i2c_display_write_fixed@length 0067                                            l20044 E20C  
                                          l20224 15F0                                            l20072 E26E  
                                          l20228 160E                                            l22232 1100  
                                          l22250 D5AE                                            l22234 1116  
                                          l20900 B398                                            l22236 1170  
                                          l21452 E7E8                                            l22238 1186  
                                          l22248 D496                                            l20914 B3E6  
                                   spi_tx@length 0062                                            l18114 DA46  
                                          l17162 E000                                            l17250 CDEC  
                                          l17084 14D8                                            l18206 DBE2  
                                          l18142 DAD6                                            l19110 041E  
                                          l18216 DC0A                                            l18128 DA8E  
                                          l19008 1194                                            l18218 DC12  
                                          l18180 DB74                                            l18156 DB1E  
                                          l19038 054C                                            l17640 E072  
                                          l18168 DB44                                            l19224 DD7C  
                                          l19056 05A0                                            l17634 E064  
                                          l18194 DBBC                                            l18178 DB6C  
                                          l17740 E13A                                            l16908 F6BA  
                                          l19228 DDB6                                            l17648 E0AA  
                                          l19408 D5E4                                            l19344 1FA0  
                                          l19504 1E2A                                            l17758 212A  
                                          l18910 0E6E                                            l18568 D0A8  
                                          l17980 C584                                            l19574 EC70  
                                          l18950 D866                                            l19718 EF5C  
                                  ___fltol@sign1 0068                                            l19682 1ADA  
                                          l18970 D910                                  __end_of___aldiv 00B8  
                             ?__flash_get_status 006C                                            l19688 1AE6  
                                 ??_display_init 0081                                  __end_of___almod 0688  
                                          ?_main 002E                                  __end_of___fldiv D0D2  
                                          ?_itoa 0070                                            STR_10 A213  
                                          STR_11 A213                                            STR_12 A213  
                                          STR_13 A213                                            STR_14 A213  
                                          STR_15 A1FE                                            STR_16 A20A  
                                          STR_17 A232                                            STR_18 A1F1  
                                __end_of___flmul CB3C                                 ??__display_clear 0060  
              __size_of_USBCtrlEPServiceComplete 00FA                                  __end_of___fltol FAE8  
                                          ?_utoa 0067                 MSDCheckForErrorCases@DeviceBytes 006A  
                                          u21100 AC38                                            u21101 AC36  
                                          u20310 0816                           __end_of_USBDeviceTasks E59C  
                                          u20410 A2CE                                            u20500 A3C8  
                                          u20420 A2FC                                            u21080 ABF6  
                                          u20290 0802                                            u20530 A400  
                                          u20450 A334                                            u20370 A268  
                                          u20540 A42E                                            u20460 A362  
                                          u20380 A296                                            u20720 A62E  
                                          u20730 A698                                            u20490 A39A  
                                          u17000 1364                                            u21480 B3C8  
                                          u20680 A58E                                            u17010 1372  
                                          u20690 A5F6                        ?_USBCtrlEPServiceComplete 002E  
                                          u17020 1380                                            u17030 138C  
                                          u16230 ECFA                                            u20870 A7A0  
                                          u17111 E07C                                            u17008 1368  
                                          u17018 1376                                            u22707 1774  
                                          u16155 0F66                                            u17036 138E  
                                          u17028 1384                                            u16500 F734  
                                          u22717 177E                                            u16430 F6FC  
                                          u17160 18C2                                            u16460 F712  
                                          u17500 C5B4                                            u18140 D012  
                                          u19020 DD0C                                            u22677 19B4  
                                          u17190 1C4E                                            u22687 19C8  
                                          u16640 1EE0                                            u16480 F724  
                                          u18400 FA48                                            u22697 1762  
                                          u16545 0EFC                                            u16650 14FA  
                                          u17610 C766                                            u18170 D068  
                                          u18330 CA7E                                            u16635 1664  
                                          u19140 062E                                            u18180 D08C  
                                          u18405 FA3E                                            u17710 DB3C  
                                          u16910 CD74                                            u17518 C5D6  
                                          u18270 C878                                            u17519 C5EA  
                                          u16728 DEFC                                            u16920 CD76  
                                          u16808 CB9E                                            u19240 D5E0  
                                          u19080 0052                                            u18440 FAC0  
                                          u18520 E410                                            u18360 CAD4  
                                          u18280 C9EE                                            u16657 14F0  
                                          u16729 DF10                                            u16809 CBB2  
                                          u17810 DC3C                                            u17730 DB6C  
                                          u17650 DA70                                            u17570 C6D8  
                                          u18370 CAF2                                            u16675 DE78  
                                __end_of___lwdiv 18F2                                            u17580 C6EA  
                                          u17468 C4AE                                            u18604 E9EC  
                                          u19260 D614                                            u17469 C4C2  
                                          u18605 E9E6                                            u18285 C9E4  
                                          u17750 DB9E                                            u17670 DAB8  
                                          u17478 C4E2                                            u19430 D7B8  
                                          u17479 C4F6                                            u17920 06C2  
                                          u16785 CB66                                            u17770 DBDA  
                                          u17690 DB00                                            u16938 CD82  
                   __flash_write_to_buffer@start 0073                                            u16939 CD96  
                                          u18651 19A2                                            u16980 1348  
                                          u16868 CC6C                                            u18644 EA4A  
                                          u18628 EA14                                            u18580 E99A  
                                          u18740 D87A                                            u16869 CC80  
                                          u18645 EA44                                            u18629 EA2A  
                                          u17790 DC0A                                            u16990 1356  
                                          u19550 1B1A                                            u18750 D8F0  
                                          u18910 05D6                                            u18568 E968  
                                          u18680 0EBC                                            u18569 E97C  
                                          u18594 E9B2                                            u17875 1B7C  
                                          u18595 E9AC                                            u16988 134C  
                                          u18780 D924                                            u16998 135A  
                                          u18950 044E                                            u18790 D97E  
                                          u19920 E230                      __size_of_motor_change_speed 000A  
                                          u18880 0582                                            u19950 E2D2  
                                          u18975 E852                                  __end_of___lwmod 1C76  
                                          i2l300 0960                                            i2l220 0AAE  
                                          i2l214 01CA                                            i2l222 0AC4  
                                          i2l231 F7C2                                            i2l232 F76C  
                                          i2l160 E4A8                                            i2l321 0B7C  
                                          i2l145 E5E2                                            i2l250 FF6A  
                                          i2l226 0BEE                                            i2l322 0B76  
                                          i2l162 E4CE                                  __end_of_dc_arc1 9F2E  
                                          i2l307 1CB6                                            i2l315 1EBC  
                                          i2l147 E60A                                            i2l155 E46E  
                                __end_of_dc_arc2 9EDE                                            i2l340 033A  
                                          i2l260 F176                                            i2l332 1590  
                                          i2l180 1D94                                            i2l236 F7EC  
                                          i2l308 1CB4                                            i2l316 1EBA  
                                          i2l172 E558                                            i2l164 E4E2  
                                          i2l156 E47E                                    __CFG_WDTEN$ON 000000  
                                          i2l253 FFE2                                            i2l245 FF38  
                                          i2l341 033E                                            i2l261 F154  
                                          i2l149 E642                                            i2l165 E4EE  
                                          i2l157 E486                                            i2l254 FFAA  
                                          i2l342 03B8                                            i2l334 15D8  
                                          i2l174 E578                                            i2l166 E516  
                                          i2l247 FF42                                            i2l343 037E  
                                          i2l263 F1EA                                            i2l167 E520  
                                          i2l159 E49C                                            i2l264 F1D0  
                                          i2l184 F560                                            i2l192 F4A2  
                                          i2l432 FEF2                                            i2l280 EB9E  
                                          i2l272 FC0E                                            i2l360 FCC6  
                                          i2l176 E594                                            i2l249 FFA2  
                                          i2l345 039E                                            i2l425 FE94  
                                          i2l281 EA9A                                            i2l361 FCD8  
                                          i2l169 E532                                            i2l186 F58A  
                                          i2l426 FE66                                            i2l274 FC80  
                                          i2l362 FCDE                                            i2l179 1D86  
                                          i2l283 EAAC                                            i2l355 FD36  
                                          i2l188 F608                                            i2l436 FEB2  
                                          i2l428 FEA4                                            i2l372 D0F2  
                                          i2l284 EB36                                            i2l364 FCE4  
                                          i2l356 FCB2                                            i2l437 FEC8  
                                          i2l429 FE82                                            i2l381 D246  
                                          i2l373 D0F6                                            i2l293 099C  
                                          i2l365 FD00                                            i2l534 F120  
                                          i2l438 FED2                                            i2l550 02C2  
                                          i2l286 EB3C                                            i2l294 0936  
                                          i2l366 FD18                                            i2l358 FCBA  
                                          i2l535 F08C                                            i2l439 FEE8  
                                          i2l391 D2D2                                            i2l383 D210  
                                          i2l375 D15C                                            i2l287 EB92  
                                          i2l359 FCC0                                            i2l384 D22C  
                                          i2l537 F118                                            i2l545 02F4  
                                          i2l393 D324                                            i2l377 D1A4  
                                          i2l289 EB98                                            i2l297 09B2  
                                          i2l562 02C8                                            i2l546 025A  
                                          i2l386 D292                                            i2l298 0942  
                                          i2l387 D29E                                            i2l379 D1C6  
                                          i2l299 0946                                            i2l820 0DD0  
                                          i2l388 D318                                            i2l821 0DD8  
                                          i2l822 0DE0                                            i2l816 0E02  
                                          i2l824 0DEA                                            i2l826 0DF4  
                                          i2l780 1812                                            i2l783 1848  
                                          i2l890 1930                                            _UADDR 000F38  
                                          i2l891 18F6                                            i2l893 1900  
                                          i2l897 1912                                            i2l899 191E  
                                __end_of_dc_main A0BE                                            _TMR0H 000FD7  
                                          _TMR0L 000FD6                                            _PORTA 000F80  
                                          _PORTE 000F84                            ??__parse_format_drive 008C  
                                          _RPOR4 000EC4                                            _USTAT 000F64  
                                __end_of_dc_zero 9E8E                      ?_ExternalFlash_CapacityRead 0060  
                                ?_display_update 002E               __size_of_USBCtrlEPAllowStatusStage 00C4  
                            ___lmul@multiplicand 0064                                  ??_flash_is_busy 0073  
                               __end_of_MSDTasks D818                                       i2memcpy@d1 002E  
                                 __CFG_FCMEN$OFF 000000                               _USBCheckMSDRequest 0246  
                                     i2memcpy@s1 0030                  __end_of_USBCtrlEPAllowDataStage 0AF6  
                                          _sd000 A1ED                                            _sd001 A0FE  
                                          _sd002 A132                                            _sd003 A1A1  
                 ?_USBIncrement1msInternalTimers 002E                   __size_of_MSDTransferTerminated 0056  
                            ??__flash_get_status 006E                    __end_of_MSDTransferTerminated 184A  
                                   _gblCBWLength 0180            __i2c_display_send_init_sequence@F6889 02C1  
                                     i2memset@p1 002E                           ?_MSDCheckForErrorCases 006A  
                          ??__system_timer0_init 0060                            i2USBStallEndpoint@dir 002E  
                         __end_of_ResetSenseData 1464                          __end_of__backlight_init 237C  
                       __parse_command_long@data 008E                        fat_get_format_status@cntr 008D  
                __end_of_motor_postscaler_lookup 9A16                   __end_of_motor_prescaler_lookup 9DE4  
                                          pclath 000FFA                       __end_of__display_itoa_long F01A  
                                          tablat 000FF5                        __size_of_USBStallEndpoint 010A  
                            ?_USBCheckMSDRequest 002E                                  _MSDCommandState 00FE  
                    ??_ExternalFlash_SectorWrite 0069                                            plusw1 000FE3  
                                          plusw2 000FDB                                      ?_USBMSDInit 002E  
       ExternalFlash_WriteProtectStateGet@config 0060                                            ttemp5 005C  
                                          ttemp6 005F                                            ttemp7 0063  
                                          utoa@c 006F                                            utoa@v 006D  
                                          status 000FD8                                __CFG_DSWDTPS$8192 000000  
                                          wtemp8 005C                         __end_ofi2_ResetSenseData 14C6  
                               __end_ofi2_memcpy 1582                                 __end_ofi2_memset 20DA  
                 ??_MSDComputeDeviceInAndResidue 0062                                   _MSDReadHandler DE4E  
    i2c_display_program_custom_character@address 007F                     __size_of_USBStdSetCfgHandler 00DC  
                  ??i2_ExternalFlash_MediaDetect 0030                                  __initialization 0D40  
                      __end_of__flash_get_status 1F30          __end_ofi2_ExternalFlash_MediaInitialize 22BC  
       __size_ofi2_ExternalFlash_MediaInitialize 001A            __end_of_ExternalFlash_MediaInitialize 222E  
         __size_of_ExternalFlash_MediaInitialize 0022                ??i2_ExternalFlash_MediaInitialize 0030  
               ?i2_ExternalFlash_MediaInitialize 002E                  i2_ExternalFlash_MediaInitialize 22A2  
                  _ExternalFlash_MediaInitialize 220C                                      _system_init F842  
                                   __end_of_main E81E                                     __end_of_itoa 1C32  
         __end_of__ic2_display_set_ddram_address 21C6          __size_of__ic2_display_set_ddram_address 0024  
                 __ic2_display_set_ddram_address 21A2                  __end_of_i2c_display_write_fixed 189E  
                                   __end_of_utoa 07E0                         __parse_command_short@cmd 0073  
                               __end_of_i2c_init 2288                       __display_signed_itoa@value 008F  
                   __motor_run@distance_in_steps 0060                             ??_USBCheckMSDRequest 0039  
              __fill_buffer_get_status@outBuffer 0074                                   __CFG_OSC$HSPLL 000000  
         MSDComputeDeviceInAndResidue@DiExpected 0060                          _USBCheckMSDRequest$2534 0039  
                        _USBCheckMSDRequest$2535 003B                        __size_of_USBCtrlEPService 0096  
                                   __get_fat@idx 0060                                     __get_fbr@idx 0060  
                           api_prepare@outBuffer 0078                                           ??_main 00CA  
                                         ??_itoa 0076                           _motor_schedule_command 0888  
                             USBStallEndpoint@ep 0065                                           ??_utoa 006D  
                                  __activetblptr 000003                                  ?_USBDeviceTasks 002E  
                                   __get_mbr@idx 0060       __end_of_ExternalFlash_WriteProtectStateGet 2380  
    __size_of_ExternalFlash_WriteProtectStateGet 0004             ??_ExternalFlash_WriteProtectStateGet 0062  
            ?_ExternalFlash_WriteProtectStateGet 0060               _ExternalFlash_WriteProtectStateGet 237C  
                                    ?_USBSuspend 002E                             __size_of_api_prepare 00DE  
                          _motor_final_stepcount 014F                               _motor_items_in_cue 2326  
                           _i2c_eeprom_writeByte 1B64                    __flash_write_to_buffer@buffer 0079  
                        __end_of_USBDeviceAttach 1F96                           __flash_write_to_buffer 1946  
         __end_of__ic2_display_set_cgram_address 2104          __size_of__ic2_display_set_cgram_address 002A  
                 __ic2_display_set_cgram_address 20DA                                           _CCPR1L 000FBB  
                                         _EECON2 000FA7                                           _DMABCH 000F66  
                                         _DMABCL 000F67                                  ?_ResetSenseData 002E  
                                     __i2c_start 2370                           SYSTEM_Initialize@state 0060  
                                     __i2c_write 19E8                                           i2l1047 1DE2  
                            ?_motor_items_in_cue 002E                                           i2l2421 EE7A  
                                         i2l2430 EE74                                           i2l2431 EEF8  
                                         i2l2360 BF3A                                           i2l2440 EEF2  
                                         i2l2424 EE2A                                           i2l2370 C214  
                                         i2l2362 C1DC                                           i2l2434 EEA8  
                                         i2l2355 BE96                                           i2l2427 EE50  
                                         i2l3332 20C8                                           i2l3333 20B8  
                                         i2l2373 C374                                           i2l2365 C02C  
                                         i2l2357 C41E                                           i2l2437 EECE  
                                         i2l2429 EE6A                                           i2l3326 1570  
                                         i2l2374 C2CA                                           i2l2366 C07A  
                                         i2l2358 BE98                                           i2l3327 1538  
                                         i2l2367 C19C                                           i2l2359 BF00  
                                         i2l2439 EEE8                                           i2l2376 C3E2  
           __flash_write_page_from_buffer@buffer 0075                  ??_APP_DeviceCustomHIDInitialize 003A  
                       ?__fill_buffer_get_status 0074                                 __end_of__get_fat 17F4  
                               __end_of__get_fbr D5BE                                 __end_of__get_mbr FE4A  
                                         _OSCCON 000FD3                      __flash_partial_read@address 0083  
                                 __CFG_WDTPS$512 000000                                           _RPOR21 000ED5  
                                         _RPOR23 000ED7                                   __CFG_WPCFG$OFF 000000  
                          __display_itoa@missing 00AB                           __end_of_MSDReadHandler E032  
                              __spi_init@details 0060                                 __end_of___xxtofl E458  
                       i2USBTransferOnePacket@ep 0036                                 ??__i2c_wait_idle 0060  
                              ??i2_USBDeviceInit 0036                           ?_display_get_character 0060  
                               ?_display_prepare 002E                  __size_ofi2_USBTransferOnePacket 0102  
                        ?_motor_speed_from_index 0093                      __flash_partial_read@command 007F  
                                 __CFG_WPDIS$OFF 000000                                 __end_of_fat_init 2308  
                              _shortPacketStatus 002A                                   __CFG_XINST$OFF 000000  
                            _motor_current_speed 00F1                                  USBDeviceTasks@i 004C  
                                    i2memcpy@tmp 0038                                     _CCPTMRS0bits 000F52  
                              _motor_process_cue 0FC6                      USBStdFeatureReqHandler@pUEP 0046  
                       USBTransferOnePacket@data 0061                       USBCtrlTrfInHandler@lastDTS 002F  
                           __size_of_encoder_run 0110                     __end_of__flash_set_page_size 11FE  
                                ??_USBDeviceInit 0068                                           ___lmul 16EC  
                                         _gblCBW 0100                                        ??___aldiv 0068  
                                      ??___almod 0068                               __size_of__i2c_send 000A  
                                      ??___fldiv 0076                                   __CFG_STVREN$ON 000000  
                                      ??___flmul 0076                               __size_of__i2c_stop 0008  
                                      ??___fltol 0064      i2SYSTEM_Initialize@pll_startup_counter_3095 0030  
      SYSTEM_Initialize@pll_startup_counter_3095 0063                                        ??___lwdiv 0064  
                             ?_motor_process_cue 002E                                       _SoftDetach 017F  
                                      ??___lwmod 0064                                           _config 011F  
                                         _buffer 0800                                _USBEnableEndpoint 1D76  
                __size_of_USBStdGetStatusHandler 009C                             ??_motor_items_in_cue 0060  
                                         _memcpy 14C6                                           _memset 1F96  
                                         clear_0 0D88                                           clear_1 0D9A  
                                         clear_2 0DA6                                           clear_3 0DB2  
                                         clear_4 0DBE                        _ExternalFlash_SectorWrite 2380  
                              api_parse@inBuffer 0095                                  __CFG_CLKOEC$OFF 000000  
                               __end_of_inq_resp A184                                           _reboot 2388  
                               __motor_run@speed 0064                             __end_of_encoder_init 21A2  
                                         _spi_tx 1692                               ?_USBEnableEndpoint 0036  
                        i2c_eeprom_writeByte@dat 0071                                           _tx_buf 02CA  
                          i2c_display_init@F6892 02B8                                           _strlen 1CFA  
                        _motor_current_stepcount 0016                       __parse_command_long@length 0094  
       i2c_display_program_custom_character@cntr 0080                                 __end_of_tmr0_isr 1DEC  
                  __size_of_USBTransferOnePacket 0106                              __size_of_USBMSDInit 010E  
                    i2c_display_write_fixed@data 0065                           __size_of__flash_wakeup 0058  
                                         itoa@cp 0076                              ??_motor_process_cue 006B  
                  __size_of__display_signed_itoa 0044                       __end_of_motor_steps_lookup 982F  
           __size_of__motor_get_speed_in_degrees 013A                   __parse_command_long@out_buffer 0090  
                  __size_of__parse_command_short 0066                            ?_i2c_eeprom_writeByte 006A  
                                   __mediumconst 9092                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
                               __end_of_spi_init 1CFA                 __size_of_APP_DeviceMSDInitialize 0010  
                                _motor_direction 00F9                  ??__flash_compare_page_to_buffer 0076  
                            ??_USBEnableEndpoint 0037                                 _i2c_display_init 1998  
                                  spi_tx_rx@data 0064                                    spi_tx_tx@data 0064  
                                    _CtrlTrfData 000D38                                __system_pin_setup 126C  
                               ?__backlight_init 002E                i2ExternalFlash_MediaDetect@config 002E  
                ExternalFlash_MediaDetect@config 0060                             _controlTransferState 0029  
                     ??_APP_DeviceCustomHIDTasks 00A0                             __CFG_LS48MHZ$SYS48X8 000000  
                                   ___xxtofl@arg 006A                                     ___xxtofl@exp 0069  
                              _SYSTEM_Initialize 15DE                                     ___xxtofl@val 0060  
   encoder_statemachine@target_position_in_steps 00A6                               ?__system_pin_setup 002E  
                       __end_of__i2c_eeprom_busy 217E                                       __accesstop 0060  
                        __end_of__initialization 0DC4                   __end_of_motor_speed_from_index 22D2  
              MSDCheckForErrorCases@MSDErrorCase 0070                                  ?_MSDReadHandler 002E  
                           __end_of_display_init 1E92                               ?_SYSTEM_Initialize 002E  
                         __size_of__display_itoa 0224                                    ___rparam_used 000001  
  motor_isr@steps_until_standstill_if_accelerate 0040                         __size_of_USBStallHandler 0044  
                                     ___fltol@f1 0060                  ExternalFlash_SectorWrite@config 0060  
                ExternalFlash_SectorWrite@buffer 0066                        __end_of_motor_process_cue 103C  
                    __end_of__parse_command_long 1D76                               __size_of__get_data 002A  
                            __size_of_USBSuspend 0030                               __size_of__get_root 0198  
                            ??__system_pin_setup 0060                              _motor_maximum_speed 016F  
                                 __pcstackCOMRAM 002E                       __size_of__flash_get_status 0034  
                      __end_of_USBEnableEndpoint 1DB2              __size_of_ExternalFlash_CapacityRead 0014  
                                  __end_of_sd000 A1F1                                    __end_of_sd001 A132  
                                  __end_of_sd002 A160                                    __end_of_sd003 A1BB  
                                      ?_MSDTasks 002E                                     __pidataBANK1 11FE  
                                   __pidataBANK2 2288                              ??_SYSTEM_Initialize 0060  
           ExternalFlash_SectorWrite@sector_addr 0062                  __end_of_bit_pattern_verticalbar A1E5  
               __size_of_USBCtrlEPAllowDataStage 0098                                  _active_protocol 018E  
                            i2USBStallEndpoint@p 0034                    __size_of_USBConfigureEndpoint 0094  
             __size_of_ExternalFlash_MediaDetect 000A                      __end_of_USBCtrlTrfInHandler 03C2  
                            display_prepare@cntr 00C9                              display_prepare@temp 00BE  
                                   _gblSenseData 0133                      motor_change_speed@new_speed 0060  
                                _MSDErrorHandler ECE0                   ?_ExternalFlash_MediaInitialize 0060  
                         i2_USBTransferOnePacket F54A                               __size_of_api_parse 012A  
                             _flash_sector_write 1A38                                       _dc_divide1 9F7E  
                                     _dc_divide2 9F2E                               __size_of__spi_init 0038  
                                      ?i2_memcpy 002E                                        ?i2_memset 002E  
                        flash_sector_write@match 0083            __end_of_MSDProcessCommandMediaPresent C7EA  
         __size_of_MSDProcessCommandMediaPresent 03CA                    _MSDProcessCommandMediaPresent C420  
                      __end_of__system_pin_setup 12D6                                    __get_data@idx 0060  
                       ??_USBCtrlTrfSetupHandler 004B                          _USBTicksSinceSuspendEnd 0183  
          motor_nonzero_steps_from_degrees@steps 0093                                 ?_USBDeviceAttach 002E  
                      __end_of_SYSTEM_Initialize 1638                                __end_of__i2c_send 2368  
                         _USBStdGetStatusHandler 092A                              ?_flash_sector_write 007F  
                            USBStallEndpoint@dir 0060                                __end_of__i2c_stop 2370  
                                    ?__i2c_start 002E                  ??_encoder_next_divide_step_size 0060  
                                    ?__i2c_write 0065                                       __pbssBANK0 00CA  
                                     __pbssBANK1 0100                                       __pbssBANK2 0200  
               __size_of_i2c_display_write_fixed 0054                                 _USBStallEndpoint F234  
                                     _gblNumBLKS 0157                                        ?_i2c_init 002E  
                               _mediaInformation 0187                   __size_of_fat_get_format_status 00AE  
                  __end_of_fat_get_format_status 05DA                                    __flash_wakeup 1744  
                       __fill_buffer_get_display 03C2                      __size_of_USBWakeFromSuspend 0036  
                     ??_motor_steps_from_degrees 008B                                      _pBDTEntryIn 0010  
                    __size_of_i2c_display_cursor 0022                 __end_of_USBCtrlEPServiceComplete F842  
          __end_of_APP_DeviceCustomHIDInitialize 1F64           __size_of_APP_DeviceCustomHIDInitialize 0034  
                  _APP_DeviceCustomHIDInitialize 1F30                      MSDTransferTerminated@handle 0039  
             ExternalFlash_SectorSizeRead@config 0060                             USBCtrlTrfRxService@i 002E  
                                        ?___lmul 0060                                       ??_MSDTasks 00AC  
                         __display_itoa@decimals 0097                     __end_of_encoder_statemachine B216  
                                     _fat_format DA3C                             ??_flash_sector_write 0083  
                 __flash_write_to_buffer@command 007A                     __size_of__flash_partial_read 007A  
                                      MSDTasks@i 00B1                                          ?_memcpy 0060  
                                        ?_memset 0060                                       __motor_run DC54  
                                 ___lmul@product 0068                                       _device_dsc A1BB  
                               ??_display_update 0070                                          ?_reboot 002E  
                                  __get_root@idx 0060                                 _USBCtrlEPService 0AF6  
                                     _ep_data_in 016C                                          ?_spi_tx 0060  
                             __display_clear@col 0063                               __display_clear@row 0062  
                                        ?_strlen 0060                                        ?__get_fat 0060  
                                      ?__get_fbr 0060                                        ?__get_mbr 0060  
                    __end_of_USBCtrlTrfRxService F234        __ic2_display_set_ddram_address@data_array 006B  
                                  __display_itoa D818                               _USBCheckStdRequest FCA2  
                             __size_of_motor_isr 05C2                           ??_i2c_eeprom_writeByte 006D  
                              _configDescriptor1 A0BE                                          i2l10480 FE7C  
                                        i2l10818 FF42                                          i2l10770 191E  
                                        i2l14202 E5DA                                          i2l20178 E52A  
                                        i2l10766 1900                                          i2l14230 E63A  
                                        i2l11568 20B8                                          i2l22254 0E1A  
                                        i2l13382 1538                                          i2l22256 0E4E  
                                        i2l15510 C3E2                                          i2l15430 BF00  
                        ??_MSDCheckForErrorCases 006E                                          i2l17808 FC06  
                                      ?___xxtofl 0060                      __end_ofi2_SYSTEM_Initialize 1946  
                                     ??i2_memcpy 0034                                       ??i2_memset 0034  
                                     _flash_init 2318               __fill_buffer_get_display@outBuffer 0064  
                    __end_of_USBCtrlTrfTxService FFEA                                __end_of__get_data 212E  
                            _USBStdSetCfgHandler FBC6                                __end_of__get_root E1CA  
                             __size_of_spi_tx_rx 0098                               __size_of_spi_tx_tx 0090  
                                      ?_fat_init 002E                                          _RPINR21 000EFC  
                                        _RPINR22 000EFD                                          _SSP1ADD 000FC8  
                  i2c_display_init@init_sequence 006B                                __end_of_dc_manual 9E3E  
                   __end_of__display_padded_itoa FA0A                                          _SSP1BUF 000FC9  
                                        _RXADDRH 000F68                                          _RXADDRL 000F69  
                     __end_ofi2_USBStallEndpoint F54A                                          _TXADDRH 000F6A  
                                        _TXADDRL 000F6B                              ?_USBCheckStdRequest 002E  
                   __size_of_USBStdGetDscHandler 012C                               _motor_speed_lookup 9093  
                           __flash_set_page_size 1190                                __end_of_dc_setup1 A06E  
                              __end_of_dc_setup2 A01E                                          _UIEbits 000F36  
        motor_nonzero_steps_from_degrees@degrees 008F         __end_of_motor_nonzero_steps_from_degrees 1AD4  
      __size_of_motor_nonzero_steps_from_degrees 004C               ??_motor_nonzero_steps_from_degrees 0093  
              ?_motor_nonzero_steps_from_degrees 008F                 _motor_nonzero_steps_from_degrees 1A88  
                     __end_of_APP_DeviceMSDTasks 22F8                                          _UIRbits 000F62  
    MSDCheckForErrorCases@HostMoreDataThanDevice 006E            __end_of__flash_compare_page_to_buffer 0F4C  
         __size_of__flash_compare_page_to_buffer 007C                    __flash_compare_page_to_buffer 0ED0  
                                     ??_i2c_init 0060                                 __CFG_CFGPLLEN$ON 000000  
                       __i2c_write@slave_address 0068                                     ??_USBMSDInit 0039  
                                 ?__flash_wakeup 002E           encoder_next_arc_step_size@old_stepsize 0060  
                              __end_of_api_parse ECE0                                ?i2_ResetSenseData 002E  
                              _MSDProcessCommand E958                       __display_padded_itoa@value 0078  
                     __size_of_motor_process_cue 0076                                    __i2c_send@dat 0060  
                      __flash_get_status@command 006E                                        ?_tmr0_isr 002E  
                                        __Hparam 0000                  ??_USBIncrement1msInternalTimers 002E  
                           ?_USBStdSetCfgHandler 002E                                __end_of__spi_init 1E24  
                    __size_of_USBCheckHIDRequest 00D0                                          __Lparam 0000  
                             ??i2_ResetSenseData 002E                               __display_itoa@text 0098  
                              __end_of_hid_rpt01 A1A1                               ?_MSDProcessCommand 002E  
                        __end_of_MSDErrorHandler EDFC                       _MSDTransferTerminated$2623 003B  
                     __size_of_USBEnableEndpoint 003C                                     ?_system_init 002E  
                motor_steps_from_degrees@degrees 0087                            __size_of_encoder_init 0024  
                           ??_USBCheckStdRequest 004B                                          ___aldiv FFEA  
                                        ___almod 05DA                                        ?_spi_init 002E  
                  __size_of_USBCtrlTrfOutHandler 005C                               __display_itoa_long EF0C  
          i2ExternalFlash_MediaInitialize@config 002E              ExternalFlash_MediaInitialize@config 0060  
                                        ___fldiv CE18                                 _ToSendDataBuffer 0238  
                                __size_of___lmul 0058                                          ___flmul C7EA  
                                        ___fltol FA0A                                 ??_USBDeviceTasks 004C  
                                        ___lwdiv 189E                          ?_motor_schedule_command 0097  
                              ??_USBStallHandler 002E                                          ___lwmod 1C32  
                                        _dc_arc1 9EDE                                          _dc_arc2 9E8E  
                    motor_schedule_command@speed 009B                      __end_of__parse_format_drive 0736  
 i2c_display_program_custom_character@data_array 0074                                          _dc_main A06E  
         __ic2_display_set_cgram_address@address 006D                       __end_of_motor_change_speed 2354  
                                        _dc_zero 9E3E                              __size_of__i2c_start 0008  
                                        __pcinit 0D40                                  __size_of_memcpy 0060  
                            __size_of__i2c_write 0050                                  __size_of_memset 0030  
                       __size_of_MSDWriteHandler 02DC                        __end_of_configDescriptor1 A0FE  
                            ??_MSDProcessCommand 00A7                                          __ramtop 0F00  
                                __size_of_reboot 0002                     ExternalFlash_SectorRead@page 0093  
                                        __ptext0 E6E0                                          __ptext1 F842  
                                        __ptext2 224E                                          __ptext3 226C  
                                        __ptext4 2318                                          __ptext5 1CBA  
                                        __ptext6 1DEC                                          __ptext7 1190  
                                        __ptext8 22F8                                          __ptext9 052C  
                                 ?__display_itoa 0095                                          _inPipes 000A  
                                 fat_format@cntr 0084                __size_of_ExternalFlash_SectorRead 0034  
                                __size_of_spi_tx 005A                      _USBDeferOUTDataStagePackets 0184  
                                      _T0CONbits 000FD5                                       ??__get_fat 0062  
                                     ??__get_fbr 0062                              ?__display_itoa_long 00AD  
                                     ??__get_mbr 0062                        ?_ExternalFlash_SectorRead 008B  
                           __motor_run@direction 006A                                  __size_of_strlen 003E  
                    __end_of__system_timer0_init 20AE                                     ??_USBSuspend 0045  
                                      _T2CONbits 000FCA                               __end_of_USBMSDInit F128  
                               ??_ResetSenseData 0060                          ?__flash_write_to_buffer 0073  
                                     ??___xxtofl 0064                          _APP_DeviceMSDInitialize 2308  
                                        _msd_cbw 000D40                                 ___aldiv@dividend 0060  
                                        _msd_csw 000D80                      __display_itoa_long@decimals 00B1  
                                i2_USBDeviceInit E59C                                 i2USBDeviceInit@i 0036  
                     __size_of__system_pin_setup 006A                  ?__ic2_display_set_ddram_address 002E  
               ??__ic2_display_set_ddram_address 006A                                       ??_fat_init 008F  
             __size_of_ExternalFlash_SectorWrite 0004                            ?__flash_set_page_size 002E  
                          __end_of_flash_is_busy 234A                               __end_of_USB_CD_Ptr 9DEE  
                       i2c_eeprom_writeByte@data 006C                                       _msd_buffer 000600  
                     __size_of_SYSTEM_Initialize 005A                  __size_of_USBCtrlTrfSetupHandler 0090  
                                        main@tmp 02D2                            __size_of_display_init 0036  
                        __size_of__flash_is_busy 0024                             end_of_initialization 0DC4  
  __fill_buffer_get_bootloader_details@outBuffer 0060                          ??_display_get_character 0061  
                          _MSDTransferTerminated 17F4            __flash_compare_page_to_buffer@command 007B  
    __end_of__fill_buffer_get_bootloader_details 1FF6     __size_of__fill_buffer_get_bootloader_details 0030  
          ??__fill_buffer_get_bootloader_details 0062             ?__fill_buffer_get_bootloader_details 0060  
            __fill_buffer_get_bootloader_details 1FC6                   ?_MSDProcessCommandMediaPresent 002E  
                             __end_of_USB_SD_Ptr 9DEC                       __end_of_bit_pattern_degree A1DD  
                                        memcpy@d 0067                                          memcpy@n 0064  
                                        memcpy@s 0069          __motor_get_speed_in_degrees@speed_index 0087  
                            _pBDTEntryEP0OutNext 001A                        __end_of_MSDProcessCommand EA8A  
                                        itoa@buf 0070                                          memset@c 0062  
                                        itoa@val 0072                                          memset@n 0064  
                                        memset@p 0066                                     _encoder_init 217E  
                                _USB1msTickCount 015F                             ??__display_itoa_long 00B4  
                       __flash_partial_read@data 0079                         ?_USBStdFeatureReqHandler 002E  
                                      i2u1304_40 E5FE                         __flash_partial_read@page 0073  
                                      i2u1307_40 E69E                                        i2u2019_40 E598  
                                      i2u1501_40 C1F0                                        i2u1502_40 C210  
                                      i2u1188_40 155A                                        i2u1620_44 F10A  
                                      i2u1620_45 F104                                        i2u1188_47 1550  
                                      i2u1616_48 F0B0                                        i2u1616_49 F0C4  
                                      i2u1722_40 FC3A                                        i2u1618_48 F0D6  
                                      i2u1618_49 F0EC                                        i2u1491_41 BE86  
                              __end_of_motor_isr C420                                        i2u1740_40 D2B8  
                                      i2u1494_41 BF54                                        i2u1496_40 C01C  
     encoder_statemachine@target_divide_position 00AA                      i2c_eeprom_writeByte@address 006A  
                          ??_USBStdSetCfgHandler 0045                  __parse_command_long@out_idx_ptr 0092  
                                     ??_tmr0_isr 002E                  ?__ic2_display_set_cgram_address 002E  
               ??__ic2_display_set_cgram_address 006A                               __end_of_USBSuspend 2026  
                            _motor_period_lookup 9A16                          _USBCtrlEPAllowDataStage 0A5E  
                              __end_of_spi_tx_rx 0A5E                   __end_of_motor_schedule_command 092A  
                              __end_of_spi_tx_tx 0CB0                         __end_of_i2c_display_init 19E8  
                               ___aldiv@quotient 006A                                          postdec1 000FE5  
                                        postdec2 000FDD             __end_of_ExternalFlash_SectorSizeRead 233E  
          __size_of_ExternalFlash_SectorSizeRead 000C                     _ExternalFlash_SectorSizeRead 2332  
                                     ??_spi_init 0063                                          postinc0 000FEE  
                                        postinc2 000FDE                                      ?_fat_format 002E  
               __size_of__fill_buffer_get_status 0074                                          utoa@buf 0067  
                                     _motor_init 224E          MSDProcessCommandMediaPresent@sectorSize 009E  
                                     _motor_mode 0020                         _USBCtrlEPServiceComplete F748  
                                        utoa@val 0069                                        _MSD_State 00FF  
                                     _motor_stop 1B1E                                      ?__motor_run 0060  
                                        strlen@s 0060                      __size_of_USBCheckMSDRequest 00BE  
                                  ??_api_prepare 007A                       _USBStatusStageEnabledFlag1 0022  
                     _USBStatusStageEnabledFlag2 0186                   __parse_format_drive@out_buffer 0088  
                                 _bit_pattern_ae A1CD                               USBEnableEndpoint@p 0037  
                                      _PORTAbits 000F80                                        _PORTDbits 000F83  
                                      _PORTEbits 000F84                   __end_of__flash_write_to_buffer 1998  
                               __CFG_DSBOREN$OFF 000000                                     _display_init 1E5C  
                           spi_tx_rx@data_length 0066                                      ?_flash_init 002E  
                               __CFG_CPUDIV$OSC1 000000                                    ___xxtofl@sign 0068  
                                      _TRISAbits 000F92                                        _TRISBbits 000F93  
                                      _TRISCbits 000F94                               api_parse@outBuffer 0098  
                                      _TRISDbits 000F95                                        _TRISEbits 000F96  
                             _ReceivedDataBuffer 0278                               _BothEP0OutUOWNsSet 0025  
                                    ___fldiv@grs 0081                                      ___fldiv@rem 007A  
                                  __pbssBIGRAMll 0800                                 ??_MSDReadHandler 0095  
                      __flash_partial_read@start 0075                        USBConfigureEndpoint@EPNum 0033  
                        _i2c_display_write_fixed 184A                                __CFG_SOSCSEL$HIGH 000000  
                     ?_USBCtrlEPAllowStatusStage 002E                             _encoder_statemachine A238  
            USER_USB_CALLBACK_EVENT_HANDLER@size 0041                          __size_of__display_clear 004A  
                                      _USTATcopy 002C                                  ??__flash_wakeup 0068  
  MSDProcessCommandMediaPresent@NumBytesInPacket 009D                     ?_encoder_next_setup_stepsize 0060  
                                    ___flmul@grs 007C                     __end_of_USBTransferOnePacket F444  
                             _motor_steps_lookup 9461                                      _CCP1CONbits 000FBA  
                              ?__i2c_eeprom_busy 002E                            __i2c_eeprom_busy@busy 0065  
            __end_ofi2_ExternalFlash_MediaDetect 2388                      i2_ExternalFlash_MediaDetect 2384  
                   __end_of__display_signed_itoa 1BEE                 __end_of_motor_steps_from_degrees 0182  
            __end_of__motor_get_speed_in_degrees E958                      __motor_get_speed_in_degrees E81E  
                         i2c_display_cursor@line 006E                                 __CFG_IOL1WAY$OFF 000000  
                                  ??_encoder_run 002E                     __end_of__parse_command_short 133C  
                             ??__i2c_eeprom_busy 0065                   ?__flash_compare_page_to_buffer 0073  
                  __fill_buffer_get_display@cntr 006C                    __fill_buffer_get_display@line 006D  
                              __CFG_WPEND$PAGE_0 000000               __flash_compare_page_to_buffer@page 0073  
                            __CFG_MSSP7B_EN$MSK7 000000                                 ?_MSDErrorHandler 002E  
                         _USBCtrlTrfSetupHandler 0CB0                             __display_padded_itoa F928  
                         __end_of_bit_pattern_ae A1D5                 ExternalFlash_CapacityRead@config 0060  
                        ?i2_USBTransferOnePacket 002E                         __size_of_display_prepare 0C48  
                  ??__motor_get_speed_in_degrees 0089                            __end_of_USBDeviceInit E314  
          __end_of_USBIncrement1msInternalTimers 224E           __size_of_USBIncrement1msInternalTimers 0020  
                  _USBIncrement1msInternalTimers 222E                                   __end_of___lmul 1744  
                                ??__display_itoa 009A                    ?_ExternalFlash_SectorSizeRead 0060  
                    __size_of_motor_items_in_cue 000C                                __size_of_MSDTasks 025A  
                       __end_of_USBStallEndpoint F33E                                        i2memcpy@d 0034  
                                      i2memcpy@n 0032                          __end_ofi2_USBDeviceInit E6E0  
                                      i2memcpy@s 0036                        ??_APP_DeviceMSDInitialize 003C  
                                      i2memset@c 0030                                        i2memset@n 0032  
                                      i2memset@p 0034                                   __end_of_memcpy 1526  
                                _MSDRetryAttempt 0181                             i2USBStallEndpoint@ep 0033  
                                 __end_of_memset 1FC6                                   __end_of_reboot 238A  
                               __CFG_DSWDTEN$OFF 000000                                _USBBusIsSuspended 0027  
                                 __end_of_spi_tx 16EC                                   __end_of_strlen 1D38  
                   __display_padded_itoa@padding 008E                        __flash_set_page_size@size 0077  
                            start_initialization 0D40                          ?_USBStdGetStatusHandler 002E  
                       i2SYSTEM_Initialize@state 0032                    USBCtrlTrfRxService@byteToRead 002F  
                         ??__flash_set_page_size 0073                             display_prepare@space 00C8  
                              ??_MSDWriteHandler 0071                              __end_of_api_prepare FBC6  
                      __display_itoa_long@length 00B8                       ??__fill_buffer_get_display 0067  
                              __size_ofi2_memcpy 005C                       i2c_display_cursor@position 006D  
                         ?_MSDTransferTerminated 0039                                __size_ofi2_memset 002C  
                                _USBMSDOutHandle 00F7                     __end_of_USBConfigureEndpoint 0C20  
                          ?_encoder_statemachine 002E                                     ??__i2c_start 0060  
                                   ??__i2c_write 0068                  __end_of_USBStdFeatureReqHandler D34A  
                            __flash_partial_read 0F4C                                USBStallEndpoint@p 0066  
                            __size_of_fat_format 0218                                    _MSDHostNoData 00FD  
              __end_of_USBCtrlEPAllowStatusStage 0246                     ??_encoder_next_arc_step_size 0062  
                       __end_of_USBCtrlEPService 0B8C                       __size_of_MSDProcessCommand 0132  
                            __size_of__motor_run 01FA                                        __i2c_send 235E  
                                      __i2c_stop 2368                    ??_encoder_next_setup_stepsize 0062  
        _ExternalFlash_MediaInitialize$intlevel0 2212                                __size_of_i2c_init 001C  
                      ??_USBCtrlEPAllowDataStage 002F                            _motor_cue_write_index 00FA  
                                 USBDeviceInit@i 0068                         __size_of__backlight_init 0004  
                     __flash_partial_read@length 0077                           _pBDTEntryEP0OutCurrent 001C  
                                    _DMACON1bits 000F88                                      _DMACON2bits 000F86  
                            __size_of_flash_init 000E                          USBTransferOnePacket@dir 0060  
                        USBTransferOnePacket@len 0063                                    _MSDTasks$2588 00AD  
                    MSDErrorHandler@OldMSD_State 0069                                    _MSDTasks$2589 00AF  
                 __end_ofi2_USBTransferOnePacket F64C                                         ??___lmul 0068  
                          spi_init@configuration 0063                            ?__display_padded_itoa 0078  
                            _USBStdGetDscHandler EA8A                             ?__flash_partial_read 0073  
                                    ?_motor_init 002E                              __end_of_encoder_run EF0C  
                              __CFG_ADCSEL$BIT10 000000                __size_of_APP_DeviceCustomHIDTasks 00A8  
                                    __pdataBANK1 0190                                      __pdataBANK2 02B8  
                       motor_isr@steps_remaining 0042                                      ?_motor_stop 002E  
                      ?_APP_DeviceCustomHIDTasks 002E                             __size_of_system_init 00E6  
                                       ??_memcpy 0066                          __size_of__i2c_wait_idle 0064  
                                       ??_memset 0066                     __size_of__parse_command_long 003E  
                                       ??_reboot 0060                               __end_of__i2c_start 2378  
                                       ??_spi_tx 0064                               __end_of__i2c_write 1A38  
                                       ??_strlen 0062                           _USBActiveConfiguration 002D  
                 __end_of_USBStdGetStatusHandler 09C6                                        ___fldiv@a 0072  
                                      ___fldiv@b 006E              __size_of_encoder_next_arc_step_size 0070  
                    api_parse@receivedDataLength 0097                                 api_parse@out_idx 009E  
                                      ___flmul@a 0072                                        ___flmul@b 006E  
                                    __pbssCOMRAM 0001                                __size_of__get_fat 0058  
                              __size_of__get_fbr 0274                        ??_i2c_display_write_fixed 0068  
                                  __pcstackBANK0 0060                                    __pcstackBANK2 02D2  
                   __size_of_USBCtrlTrfInHandler 00BE                                __size_of__get_mbr 00D0  
                   ??_ExternalFlash_CapacityRead 0064                   __size_of_MSDCheckForErrorCases 00FC  
                  __end_of_MSDCheckForErrorCases F748                                __size_of___xxtofl 0144  
                                      _gblBLKLen 0153               __end_of_flash_command_pagesize_512 A1ED  
                     _flash_command_pagesize_512 A1E9               __end_of_flash_command_pagesize_528 A1E9  
                     _flash_command_pagesize_528 A1E5                                   __flash_is_busy 21C6  
                           ?_USBStdGetDscHandler 002E     __end_of_i2c_display_program_custom_character 0ED0  
  __size_of_i2c_display_program_custom_character 007C           ??_i2c_display_program_custom_character 0070  
          ?_i2c_display_program_custom_character 006E             _i2c_display_program_custom_character 0E54  
                                      __get_data 2104                                _flash_sector_read 212E  
                              __size_of_fat_init 0010                                        __get_root E032  
                         flash_sector_write@data 0081                           flash_sector_write@page 007F  
                                      _dc_manual 9DEE                       __end_of_USBWakeFromSuspend 1EC8  
                             ?_flash_sector_read 0087                       __end_of_i2c_display_cursor 220C  
                                     ?__i2c_send 002E                                        _dc_setup1 A01E  
                                      _dc_setup2 9FCE                                  _USBStallHandler 1C76  
                       __display_padded_itoa@len 008C                                     _pBDTEntryOut 0145  
                                     ?__i2c_stop 002E                         __display_padded_itoa@pos 008D  
                       __display_padded_itoa@tmp 0082                         __size_of_USBDeviceAttach 0032  
               __end_of_ExternalFlash_SectorRead 1EFC                              flash_is_busy@result 0073  
                             i2_USBStallEndpoint F444                                 ___lwdiv@dividend 0060  
                           _motor_cue_read_index 00FB                            _fat_get_format_status 052C  
                 MSDProcessCommandMediaPresent@i 00A6                              ??_flash_sector_read 008B  
                                      _api_parse EBB6                                        __pintcode 9008  
                        __fill_buffer_get_status 103C                               _APP_DeviceMSDTasks 22E6  
                                  __pmediumconst 9092                                         ?___aldiv 0060  
                              __size_of_tmr0_isr 003A                                         ?___almod 0060  
                          ??__flash_partial_read 007B                                         ?___fldiv 006E  
                                      __ptext100 1A38                                        __ptext101 1946  
                                      __ptext110 E032                                        __ptext102 0C20  
                                      __ptext111 FD7A                                        __ptext103 1638  
                                      __ptext120 E458                                        __ptext112 D34A  
                                      __ptext104 0ED0                                        __ptext121 E59C  
                                      __ptext113 179C                                        __ptext105 21C6  
                                      __ptext130 0A5E                                        __ptext122 1E92  
                                      __ptext114 2104                                        __ptext106 1744  
                                      __ptext131 FCA2                                        __ptext123 1FF6  
                                      __ptext115 F33E                                        __ptext107 1692  
                                      __ptext140 FE4A                                        __ptext132 FBC6  
                                      __ptext124 1C76                                        __ptext108 1EFC  
                                      __ptext141 17F4                                        __ptext133 20AE  
                                      __ptext125 222E                                        __ptext117 1DB2  
                                      __ptext109 09C6                                        __ptext150 1D76  
                                      __ptext142 F444                                        __ptext134 092A  
                                      __ptext126 0AF6                                        __ptext118 EDFC  
                                      __ptext151 0B8C                                        __ptext143 2308  
                                      __ptext135 EA8A                                        __ptext127 1526  
                                      __ptext119 BE5E                                        __ptext152 1582  
                                      __ptext144 F01A                                        __ptext136 D0D2  
                                      __ptext128 0CB0                                        __ptext153 F128  
                                      __ptext145 1464                                        __ptext137 0DCE  
                                      __ptext129 F748                                        __ptext154 0182  
                                      __ptext146 22A2                                        __ptext138 18F2  
                                      __ptext155 0304                                        __ptext147 2384  
                                      __ptext139 0246                                        __ptext156 FF1A  
                                      __ptext148 1F30                                        __ptext157 0000  
                                      __ptext149 F54A                                         ?___flmul 006E  
                                       ?___fltol 0060                      __size_of_flash_sector_write 0050  
                                       ?___lwdiv 0060                                        __spi_init 1DEC  
                                       ?___lwmod 0060                                        _hid_rpt01 A184  
                            ?i2_USBStallEndpoint 002E                                        _idle_rate 018F  
                             display_update@line 0070                                __size_of_spi_init 0040  
           __size_of_encoder_next_setup_stepsize 0070                                 ___almod@dividend 0060  
                               ?i2_USBDeviceInit 002E                                      _api_prepare FAE8  
                                __i2c_write@data 0065                                  __i2c_write@cntr 0069  
                            ?_APP_DeviceMSDTasks 002E                        __size_ofi2_ResetSenseData 0062  
             __flash_write_to_buffer@data_length 0077                             _USBTransferOnePacket F33E  
              __size_of_motor_steps_from_degrees 00CA        __ic2_display_set_cgram_address@data_array 006A  
                      ?_motor_steps_from_degrees 0087                       ?_ExternalFlash_MediaDetect 0060  
                 ??_ExternalFlash_SectorSizeRead 0062                             __display_signed_itoa 1BAA  
                              ??_display_prepare 00BC                             __CFG_RTCOSC$T1OSCREF 000000  
                           __parse_command_short 12D6              __fill_buffer_get_display@secondHalf 0066  
                         __end_of__flash_is_busy 21EA                                __display_itoa@len 00AA  
                  __size_of_i2c_eeprom_writeByte 0046                                __display_itoa@pos 00AC  
                              __display_itoa@tmp 00A0                     __end_of_USBCtrlTrfOutHandler 15DE  
                         ??_encoder_statemachine 009E                         ??_motor_speed_from_index 0095  
                      __end_of_flash_sector_read 2156                            ??_USBStdGetDscHandler 002E  
                                    _ep_data_out 0169                                 ___lwdiv@quotient 0065  
                             _motor_change_speed 234A                                    _MSDWriteState 0021  
                   __size_of_USBCtrlTrfRxService 010C                    USBConfigureEndpoint@direction 002E  
                                 __display_clear 1AD4                                       ?__get_data 0060  
                           ??i2_USBStallEndpoint 002F                                  _config_internal 0166  
                                     ?__get_root 0060                              __size_of_motor_init 001E  
                   __size_ofi2_SYSTEM_Initialize 0054                                  _config_external 0163  
                            __size_of_motor_stop 0046                                  ___aldiv@divisor 0064  
                   __size_of_USBCtrlTrfTxService 00D0                   __size_of_display_get_character 002E  
                                ___aldiv@counter 0068                             ??_APP_DeviceMSDTasks 00B2  
                  __end_of_display_get_character 2082                                         _LATAbits 000F89  
                                       _LATBbits 000F8A                                         _LATCbits 000F8B  
                                       _LATDbits 000F8C                       __end_of_USBCheckHIDRequest FF1A  
           __flash_compare_page_to_buffer@buffer 0075                              ?_motor_change_speed 0060  
                     ??_USBCtrlEPServiceComplete 002F                                         _IPR2bits 000FA2  
                                       _PIE1bits 000F9D                                         _PIE2bits 000FA0  
                motor_isr@steps_until_standstill 003E                                      _encoder_run EDFC  
           __flash_compare_page_to_buffer@status 0079                                         _PIR1bits 000F9E  
                                       _PIR2bits 000FA1                          encoder_statemachine@tmp 00B0  
                         ??__display_padded_itoa 007D                               __end_of_dc_divide1 9FCE  
                                       i2u851_40 02A4                               __end_of_dc_divide2 9F7E  
                                       i2u894_40 FF94                                         i2u966_40 EB02  
                                       i2u894_47 FF8A                                         i2u966_47 EAF8  
                                       i2u967_40 EB32                                         _RCONbits 000FD0  
                                       i2u967_47 EB28                                         i2u896_40 FFD4  
                                       i2u896_47 FFCA                                         i2u969_40 EB88  
                                     ?_api_parse 0095                                         i2u969_47 EB7E  
                                       _UEP0bits 000F26                                         _MSDTasks D5BE  
                                      _motor_isr BE5E                       _USBDeferINDataStagePackets 0185  
                                   ??_fat_format 0084                             _active_configuration 017D  
                              ?_i2c_display_init 002E                          spi_tx_rx@command_length 0062  
                             _bit_pattern_degree A1D5                      __size_of_USBCheckStdRequest 00D8  
                ??_MSDProcessCommandMediaPresent 0099                                         _UCONbits 000F65  
                                     ?__spi_init 0060                             _USBConfigureEndpoint 0B8C  
                                   ??__motor_run 0066           __ic2_display_set_ddram_address@address 006A  
                             ??_i2c_display_init 006A                                __i2c_write@length 0067  
                              ??__backlight_init 0060                                        _spi_tx_rx 09C6  
                                      _spi_tx_tx 0C20               __flash_write_page_from_buffer@page 0073  
               __size_of_USBStdFeatureReqHandler 0278                                   _USBMSDInHandle 00F5  
                          flash_sector_read@data 0089                            ?_USBTransferOnePacket 0060  
                          flash_sector_read@page 0087                             ??_motor_change_speed 0062  
                          ?__display_signed_itoa 008F              _ExternalFlash_MediaDetect$intlevel0 235A  
                              _SYS_InterruptHigh 9008                            ?__parse_command_short 002E  
                      i2c_display_cursor@address 006F                                 __CFG_WPFP$PAGE_1 000000  
                                   ??_flash_init 0078                                     _RemoteWakeup 0028  
              __end_of_ExternalFlash_MediaDetect 235E                                         i2_memcpy 1526  
                   __size_of__parse_format_drive 00AE                                         i2_memset 20AE  
              MSDCheckForErrorCases@DeviceNoData 006F                             spi_tx_tx@data_length 0066  
                                ?__flash_is_busy 002E                 __end_of__fill_buffer_get_display 047A  
                             ?_SYS_InterruptHigh 002E              __fill_buffer_get_display@start_line 006E  
                         __end_of__display_clear 1B1E                                       spi_tx@data 0060  
                        __end_of_USBStallHandler 1CBA                  motor_schedule_command@direction 009D  
                ??__flash_write_page_from_buffer 0076                          __size_of_display_update 0038  
                              ___lmul@multiplier 0060               __end_of_encoder_next_arc_step_size 1190  
                     _encoder_next_arc_step_size 1120                                        copy_data0 0D54  
                                      copy_data1 0D74                     __size_of__system_timer0_init 002C  
                      __display_signed_itoa@text 0091        encoder_next_divide_step_size@old_stepsize 0060  
                    ??_USBCtrlEPAllowStatusStage 002E                      __end_of_USBStdSetCfgHandler FCA2  
                             __end_of_fat_format DC54                      __display_padded_itoa@length 007A  
                                       _i2c_init 226C                              ??_SYS_InterruptHigh 004D  
                                    ??__i2c_send 0060                                     _MSDReadState 0182  
                                    ??__i2c_stop 0060                               __end_of__motor_run DE4E  
                             __end_of_device_dsc A1CD                      __size_of__display_itoa_long 010E  
        encoder_next_setup_stepsize@old_stepsize 0060                         MSDErrorHandler@ErrorCase 0068  
                         ?_fat_get_format_status 002E                          ?_USBCtrlTrfSetupHandler 002E  
                      ??__fill_buffer_get_status 0076                                       _ANCON0bits 000F48  
                                     _ANCON1bits 000F49                          USBStdGetStatusHandler@p 002F  
                                       __Hrparam 0000                              __display_itoa@value 0095  
                         _motor_prescaler_lookup 9BFD                                        memcpy@tmp 0066  
                                       __Lrparam 0000                           USBTransferOnePacket@ep 0068  
                                       _SetupPkt 000D30                               __end_of_flash_init 2326  
                                 _TransferLength 00F3                                       ?_motor_isr 002E  
                     __end_of_USBCheckMSDRequest 0304                                  api_parse@in_idx 009F  
                          ?_USBConfigureEndpoint 002E                            __flash_is_busy@status 0071  
                               __size_of___aldiv 00CE                         _ExternalFlash_SectorRead 1EC8  
                      display_get_character@line 0063                                 __size_of___almod 00AE  
                         __size_of_flash_is_busy 000C                                ??_USBDeviceAttach 0060  
                                 __i2c_wait_idle 133C                                  _MSDWriteHandler CB3C  
                               __size_of___fldiv 02BA                                 __size_of___flmul 0352  
                               __size_of___fltol 00DE                                 __size_of___lwdiv 0054  
                 __display_itoa_long@short_value 00B9                                 __size_of___lwmod 0044  
      ExternalFlash_SectorWrite@allowWriteToZero 0068                                       ?_spi_tx_rx 0060  
                                     ?_spi_tx_tx 0060             __size_ofi2_ExternalFlash_MediaDetect 0004  
                                    _MSDCBWValid 017E                        __size_of__i2c_eeprom_busy 0028  
                      __end_of_SYS_InterruptHigh 908E                    __display_itoa_long@last_digit 00BB  
                              ?_USBStallEndpoint 0060                       i2c_display_write_fixed@pos 0068  
                                       __get_fat 179C                                         __get_fbr D34A  
                                       __get_mbr FD7A                               ??_USBStallEndpoint 0061  
             __end_of_ExternalFlash_CapacityRead 22E6                       _ExternalFlash_CapacityRead 22D2  
                                       ___xxtofl E314                          ??_MSDTransferTerminated 003B  
                        __size_of_USBDeviceTasks 0144                                  ___lwdiv@divisor 0062  
                                       _fat_init 22F8                                  ?__display_clear 002E  
                                ___lwdiv@counter 0064                       __size_of_flash_sector_read 0028  
                                       __ptext10 217E                                         __ptext11 1E24  
                                       __ptext20 126C                                         __ptext12 184A  
                                       __ptext21 2378                                         __ptext13 21EA  
                                       __ptext30 C7EA                                         __ptext22 0FC6  
                                       __ptext14 21A2                                         __ptext31 234A  
                                       __ptext23 A238                                         __ptext15 1E5C  
                                       __ptext40 FA0A                                         __ptext32 10B0  
                                       __ptext24 1B1E                                         __ptext16 0E54  
                                       __ptext41 CE18                                         __ptext33 2026  
                                       __ptext25 0888                                         __ptext17 20DA  
                                       __ptext50 189E                                         __ptext42 1BAA  
                                       __ptext34 1120                                         __ptext26 2326  
                                       __ptext18 1998                                         __ptext51 05DA  
                                       __ptext43 F928                                         __ptext35 B216  
                                       __ptext27 DC54                                         __ptext19 2082  
                                       __ptext60 E958                                         __ptext52 FFEA  
                                       __ptext44 EF0C                                         __ptext36 22BC  
                                       __ptext28 1A88                                         __ptext61 13A0  
                                       __ptext53 1AD4                                         __ptext45 D818  
                                       __ptext37 E81E                                         __ptext29 00B8  
                                       __ptext70 1402                                         __ptext62 C420  
                                       __ptext54 E1CA                                         __ptext46 1CFA  
                                       __ptext38 E314                                         __ptext71 1EC8  
                                       __ptext63 CB3C                                         __ptext55 1F96  
                                       __ptext47 1BEE                                         __ptext39 16EC  
                                       __ptext80 FAE8                                         __ptext72 212E  
                                       __ptext64 237C                                         __ptext56 1F64  
                                       __ptext48 0736                                         __ptext81 14C6  
                                       __ptext73 0F4C                                         __ptext65 2380  
                                       __ptext57 15DE                                         __ptext49 1C32  
                                       __ptext90 1B64                                         __ptext82 103C  
                                       __ptext74 047A                                         __ptext66 DE4E  
                                       __ptext58 22E6                                         __ptext91 19E8  
                                       __ptext83 233E                                         __ptext75 2332  
                                       __ptext67 F64C                                         __ptext59 D5BE  
                                       __ptext92 2156                                         __ptext84 03C2  
                                       __ptext76 22D2                                         __ptext68 ECE0  
                                       __ptext93 133C                                         __ptext85 2054  
                                       __ptext77 220C                                         __ptext69 F234  
                                       __ptext94 2368                                         __ptext86 1FC6  
                                       __ptext78 2354                                         __ptext95 2370  
                                       __ptext87 EBB6                                         __ptext79 07E0  
                                       __ptext96 235E                                         __ptext88 12D6  
                                       __ptext97 1D38                                         __ptext89 2388  
                                       __ptext98 0688                                         __ptext99 DA3C  
                                   _SSP1CON1bits 000FC6                  __size_of_motor_speed_from_index 0016  
                                   _SSP1CON2bits 000FC5                     __flash_set_page_size@command 0073  
                                   _SSP2CON1bits 000F72             __end_of_MSDProcessCommandMediaAbsent 1402  
          __size_of_MSDProcessCommandMediaAbsent 0062                     _MSDProcessCommandMediaAbsent 13A0  
                                ___almod@divisor 0064                                      ??__get_data 0062  
                          __flash_wakeup@command 0068                                  ___almod@counter 0068  
                                    ??__get_root 0062                              __parse_command_long 1D38  
                     ?_ExternalFlash_SectorWrite 0060                   ExternalFlash_SectorRead@config 008B  
                 ExternalFlash_SectorRead@buffer 0091                          __size_of_ResetSenseData 0062  
               __end_of_APP_DeviceCustomHIDTasks 0888                            __end_of__flash_wakeup 179C  
                 __end_of_USBCtrlTrfSetupHandler 0D40                                    __size_of_main 013E  
                              ?_USBCtrlEPService 002E                                    __size_of_itoa 0044  
                                       _inq_resp A160  encoder_statemachine@distance_to_target_in_steps 00AC  
                                  __size_of_utoa 00AA                               ??_USBCtrlEPService 004B  
                                       _tmr0_isr 1DB2                              _USBCtrlTrfInHandler 0304  
             _MSDProcessCommandMediaPresent$2606 009B            __end_of_encoder_next_divide_step_size 2054  
         __size_of_encoder_next_divide_step_size 002E                    _encoder_next_divide_step_size 2026  
                                    ??_api_parse 009A                           __end_of__i2c_wait_idle 13A0  
                     __end_of_motor_items_in_cue 2332                                         _outPipes 0001  
i2c_display_program_custom_character@bit_pattern 006E                                         _spi_init 1CBA  
                           _USBCtrlTrfOutHandler 1582                                         int$flags 005B  
                      _USBCtrlEPAllowStatusStage 0182                                     ??_motor_init 0060  
                                    ??__spi_init 0063                                     ??_motor_stop 0060  
                           ?__parse_command_long 008E                                     _SSP1STATbits 000FC7  
              i2c_eeprom_writeByte@slave_address 0070                 __parse_format_drive@return_value 008D  
                         ??_USBTransferOnePacket 0064                      __end_of_motor_period_lookup 9BFD  
                                   _SSP2STATbits 000F73                           ??__display_signed_itoa 0093  
                          __end_of__display_itoa DA3C                                 i2_ResetSenseData 1464  
                 ?_APP_DeviceCustomHIDInitialize 002E                           ??__parse_command_short 0073  
          MSDProcessCommandMediaPresent@capacity 00A2                    display_get_character@position 0060  
                       __size_of_MSDErrorHandler 011C                          _motor_postscaler_lookup 982F  
                      _USBDeferStatusStagePacket 0023                  __end_of__fill_buffer_get_status 10B0  
              __fill_buffer_get_display@position 006F                                      _OSCTUNEbits 000F9B  
                                     _INTCONbits 000FF2                         __parse_format_drive@data 0086  
                           ?_USBCtrlTrfInHandler 002E                                         memcpy@d1 0060  
                                       memcpy@s1 0062                    USBCtrlTrfTxService@byteToSend 002E  
             __motor_get_speed_in_degrees@lookup 008F                        __display_padded_itoa@text 007B  
                                       itoa@base 0074                                         memset@p1 0060  
           __end_of_MSDComputeDeviceInAndResidue 052C            __size_of_MSDComputeDeviceInAndResidue 00B2  
                   _MSDComputeDeviceInAndResidue 047A                                 ?_USBStallHandler 002E  
                       USBStdFeatureReqHandler@p 0049                          spi_tx_tx@command_length 0062  
                  __size_of__flash_set_page_size 006E                                    _flash_is_busy 233E  
                                       intlevel2 0000                                 spi_tx_rx@command 0060  
                       __flash_get_status@status 006F                           __size_of_USBDeviceInit 014A  
                  ?_MSDProcessCommandMediaAbsent 002E          __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0E54  
       __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086                ??_USER_USB_CALLBACK_EVENT_HANDLER 0043  
               ?_USER_USB_CALLBACK_EVENT_HANDLER 003D                  _USER_USB_CALLBACK_EVENT_HANDLER 0DCE  
        motor_schedule_command@distance_in_steps 0097                               __end_of_motor_init 226C  
                               ___lwmod@dividend 0060                     i2USBTransferOnePacket@handle 0037  
              __end_of_ExternalFlash_SectorWrite 2384                               __end_of_motor_stop 1B64  
          __end_of__flash_write_page_from_buffer 1692           __size_of__flash_write_page_from_buffer 005A  
                  __flash_write_page_from_buffer 1638                         ??_motor_schedule_command 009D  
         i2SYSTEM_Initialize@pll_startup_counter 002E             SYSTEM_Initialize@pll_startup_counter 0061  
                                _display_content 01AD                          __end_of_MSDWriteHandler CE18  
                               spi_tx_tx@command 0060                          __size_of_MSDReadHandler 01E4  
                     i2USBTransferOnePacket@data 002F                                    ??_system_init 008F  
              __size_of__fill_buffer_get_display 00B8                           _motor_speed_from_index 22BC  
                      ?__fill_buffer_get_display 0064                           ??_USBConfigureEndpoint 002F  
                                ?__i2c_wait_idle 002E                            ?_USBCtrlTrfOutHandler 002E  
                                _display_prepare B216                                      ??_motor_isr 002E  
                       ??__flash_write_to_buffer 007A                         ?_APP_DeviceMSDInitialize 002E  
                            _USBCtrlTrfRxService F128                               _USBWakeFromSuspend 1E92  
                          ??__parse_command_long 0094                               _i2c_display_cursor 21EA  
                        _USBStdFeatureReqHandler D0D2                              i2_SYSTEM_Initialize 18F2  
                                    ??_spi_tx_rx 0068                                      ??_spi_tx_tx 0068  
                            _USBCtrlTrfTxService FF1A                       __size_of_SYS_InterruptHigh 0086  
                                   ?_api_prepare 0076                __motor_get_speed_in_degrees@speed 008B  
          __flash_write_page_from_buffer@command 0079                                         utoa@base 006B  
                                _gblMediaPresent 0175              ExternalFlash_SectorRead@sector_addr 008D  
                              _motor_command_cue 0200                              ?_USBWakeFromSuspend 002E  
                                     _PPSCONbits 000EBF                                  ___lwmod@divisor 0062  
                    ??_ExternalFlash_MediaDetect 0062                              ?_i2c_display_cursor 006D  
                          ??_USBCtrlTrfInHandler 002F                                         strlen@cp 0064  
                          _USBAlternateInterface 018C                                  ___lwmod@counter 0064  
                                    _ptrNextData 0179                                     ___aldiv@sign 0069  
                      i2USBTransferOnePacket@dir 002E                        i2USBTransferOnePacket@len 0031  
                __parse_format_drive@out_idx_ptr 008A                              USBEnableEndpoint@ep 0039  
                                _endpoint_number 0026                                   _display_update 1E24  
                                 ?_flash_is_busy 002E                             ?_USBCtrlTrfRxService 002E  
                          _MSDCheckForErrorCases F64C              __end_of_encoder_next_setup_stepsize 1120  
                    _encoder_next_setup_stepsize 10B0                    ?_MSDComputeDeviceInAndResidue 0060  
                           ?i2_SYSTEM_Initialize 002E                         ?_USBCtrlEPAllowDataStage 002E  
                                 _MSBBufferIndex 0177                                     ___almod@sign 0069  
                           ?_USBCtrlTrfTxService 002E                                    ?_encoder_init 002E  
                                     _USBMSDInit F01A                     _USBStatusStageTimeoutCounter 0024  
                ??_ExternalFlash_MediaInitialize 0062                             ??_USBWakeFromSuspend 0045  
                       __display_itoa_long@value 00AD                      __end_of__flash_partial_read 0FC6  
                     USBTransferOnePacket@handle 0069                                  __backlight_init 2378  
                           ??_i2c_display_cursor 006E                                     ?_encoder_run 002E  
                   __end_of_i2c_eeprom_writeByte 1BAA                          __display_itoa_long@text 00B2  
                            __parse_format_drive 0688                                       _USB_CD_Ptr 9DEC  
                                    _power_state 00FC                                      _USBInHandle 0171  
                       _APP_DeviceCustomHIDTasks 07E0                       __end_of_flash_sector_write 1A88  
