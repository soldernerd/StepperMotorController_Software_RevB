

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jan 02 14:18:31 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=2
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1,group=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1,group=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1
   202                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	text185,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1
   212                           	psect	text192,global,reloc=2,class=CODE,delta=1
   213                           	psect	text193,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	text201,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	text228,global,reloc=2,class=CODE,delta=1
   249                           	psect	text229,global,reloc=2,class=CODE,delta=1
   250                           	psect	text230,global,reloc=2,class=CODE,delta=1
   251                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   252                           	psect	text231,global,reloc=2,class=CODE,delta=1
   253                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   254                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   255                           	dabs	1,0x600,512,_msd_buffer
   256                           	dabs	1,0xD00,48,_BDT
   257                           	dabs	1,0xD40,31,_msd_cbw
   258                           	dabs	1,0xD80,13,_msd_csw
   259                           	dabs	1,0xD38,8,_CtrlTrfData
   260                           	dabs	1,0xD30,8,_SetupPkt
   261  0000                     
   262                           ; Version 2.00
   263                           ; Generated 27/05/2018 GMT
   264                           ; 
   265                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   266                           ; All rights reserved.
   267                           ; 
   268                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   269                           ; 
   270                           ; Redistribution and use in source and binary forms, with or without modification, are
   271                           ; permitted provided that the following conditions are met:
   272                           ; 
   273                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   274                           ;        conditions and the following disclaimer.
   275                           ; 
   276                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   277                           ;        of conditions and the following disclaimer in the documentation and/or other
   278                           ;        materials provided with the distribution.
   279                           ; 
   280                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   281                           ;        software without specific prior written permission.
   282                           ; 
   283                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   284                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   285                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   286                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   287                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   288                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   289                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   290                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   291                           ; 
   292                           ; 
   293                           ; Code-generator required, PIC18F47J53 Definitions
   294                           ; 
   295                           ; SFR Addresses
   296  0000                     
   297                           	psect	idataBANK2
   298  014A70                     __pidataBANK2:
   299                           	opt stack 0
   300                           
   301                           ;initializer for _LUN
   302  014A70  B0                 	db	low _ExternalFlash_MediaInitialize
   303  014A71  54                 	db	high _ExternalFlash_MediaInitialize
   304  014A72  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   305  014A73  DC                 	db	low _ExternalFlash_CapacityRead
   306  014A74  55                 	db	high _ExternalFlash_CapacityRead
   307  014A75  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   308  014A76  58                 	db	low _ExternalFlash_SectorSizeRead
   309  014A77  56                 	db	high _ExternalFlash_SectorSizeRead
   310  014A78  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   311  014A79  98                 	db	low _ExternalFlash_MediaDetect
   312  014A7A  56                 	db	high _ExternalFlash_MediaDetect
   313  014A7B  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   314  014A7C  06                 	db	low _ExternalFlash_SectorRead
   315  014A7D  50                 	db	high _ExternalFlash_SectorRead
   316  014A7E  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   317  014A7F  DE                 	db	low _ExternalFlash_WriteProtectStateGet
   318  014A80  56                 	db	high _ExternalFlash_WriteProtectStateGet
   319  014A81  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   320  014A82  D2                 	db	low _ExternalFlash_SectorWrite
   321  014A83  4F                 	db	high _ExternalFlash_SectorWrite
   322  014A84  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   323  014A85  00                 	db	0
   324  014A86  00                 	db	0
   325  014A87  00                 	db	0
   326  014A88  00                 	db	0
   327  014A89  00                 	db	0
   328  014A8A  00                 	db	0
   329  014A8B  00                 	db	0
   330  014A8C  00                 	db	0
   331                           
   332                           ;initializer for i2c_display_init@F6951
   333  014A8D  3A                 	db	58
   334  014A8E  1E                 	db	30
   335  014A8F  39                 	db	57
   336  014A90  0C                 	db	12
   337  014A91  74                 	db	116
   338  014A92  5C                 	db	92
   339  014A93  6D                 	db	109
   340  014A94  0C                 	db	12
   341  014A95  01                 	db	1
   342                           
   343                           ;initializer for __i2c_display_send_init_sequence@F6948
   344  014A96  3A                 	db	58
   345  014A97  1E                 	db	30
   346  014A98  39                 	db	57
   347  014A99  0C                 	db	12
   348  014A9A  74                 	db	116
   349  014A9B  5C                 	db	92
   350  014A9C  6D                 	db	109
   351  014A9D  0C                 	db	12
   352  014A9E  01                 	db	1
   353                           
   354                           ;initializer for _tx_buf
   355  014A9F  01                 	db	1
   356  014AA0  02                 	db	2
   357  014AA1  03                 	db	3
   358  014AA2  04                 	db	4
   359  014AA3  05                 	db	5
   360  014AA4  06                 	db	6
   361  014AA5  07                 	db	7
   362  014AA6  08                 	db	8
   363                           
   364                           ;initializer for _configFile_used_name
   365  014AA7  55                 	db	85
   366  014AA8  53                 	db	83
   367  014AA9  45                 	db	69
   368  014AAA  44                 	db	68
   369  014AAB  43                 	db	67
   370  014AAC  4F                 	db	79
   371  014AAD  4E                 	db	78
   372  014AAE  46                 	db	70
   373                           
   374                           ;initializer for _configFile_name
   375  014AAF  43                 	db	67
   376  014AB0  4F                 	db	79
   377  014AB1  4E                 	db	78
   378  014AB2  46                 	db	70
   379  014AB3  49                 	db	73
   380  014AB4  47                 	db	71
   381  014AB5  20                 	db	32
   382  014AB6  20                 	db	32
   383                           
   384                           ;initializer for _configFile_used_extention
   385  014AB7  54                 	db	84
   386  014AB8  58                 	db	88
   387  014AB9  54                 	db	84
   388                           
   389                           ;initializer for _configFile_extention
   390  014ABA  54                 	db	84
   391  014ABB  58                 	db	88
   392  014ABC  54                 	db	84
   393                           
   394                           	psect	idataBANK4
   395  0148E0                     __pidataBANK4:
   396                           	opt stack 0
   397                           
   398                           ;initializer for _dc_startup
   399  0148E0  2A                 	db	42
   400  0148E1  20                 	db	32
   401  0148E2  20                 	db	32
   402  0148E3  53                 	db	83
   403  0148E4  74                 	db	116
   404  0148E5  65                 	db	101
   405  0148E6  70                 	db	112
   406  0148E7  70                 	db	112
   407  0148E8  65                 	db	101
   408  0148E9  72                 	db	114
   409  0148EA  20                 	db	32
   410  0148EB  4D                 	db	77
   411  0148EC  6F                 	db	111
   412  0148ED  74                 	db	116
   413  0148EE  6F                 	db	111
   414  0148EF  72                 	db	114
   415  0148F0  20                 	db	32
   416  0148F1  20                 	db	32
   417  0148F2  20                 	db	32
   418  0148F3  2A                 	db	42
   419  0148F4  2A                 	db	42
   420  0148F5  20                 	db	32
   421  0148F6  20                 	db	32
   422  0148F7  20                 	db	32
   423  0148F8  20                 	db	32
   424  0148F9  43                 	db	67
   425  0148FA  6F                 	db	111
   426  0148FB  6E                 	db	110
   427  0148FC  74                 	db	116
   428  0148FD  72                 	db	114
   429  0148FE  6F                 	db	111
   430  0148FF  6C                 	db	108
   431  014900  6C                 	db	108
   432  014901  65                 	db	101
   433  014902  72                 	db	114
   434  014903  20                 	db	32
   435  014904  20                 	db	32
   436  014905  20                 	db	32
   437  014906  20                 	db	32
   438  014907  2A                 	db	42
   439  014908  2A                 	db	42
   440  014909  20                 	db	32
   441  01490A  20                 	db	32
   442  01490B  20                 	db	32
   443  01490C  20                 	db	32
   444  01490D  76                 	db	118
   445  01490E  20                 	db	32
   446  01490F  20                 	db	32
   447  014910  20                 	db	32
   448  014911  20                 	db	32
   449  014912  20                 	db	32
   450  014913  20                 	db	32
   451  014914  20                 	db	32
   452  014915  20                 	db	32
   453  014916  20                 	db	32
   454  014917  20                 	db	32
   455  014918  20                 	db	32
   456  014919  20                 	db	32
   457  01491A  20                 	db	32
   458  01491B  2A                 	db	42
   459  01491C  2A                 	db	42
   460  01491D  20                 	db	32
   461  01491E  20                 	db	32
   462  01491F  73                 	db	115
   463  014920  6F                 	db	111
   464  014921  6C                 	db	108
   465  014922  64                 	db	100
   466  014923  65                 	db	101
   467  014924  72                 	db	114
   468  014925  6E                 	db	110
   469  014926  65                 	db	101
   470  014927  72                 	db	114
   471  014928  64                 	db	100
   472  014929  2E                 	db	46
   473  01492A  63                 	db	99
   474  01492B  6F                 	db	111
   475  01492C  6D                 	db	109
   476  01492D  20                 	db	32
   477  01492E  20                 	db	32
   478  01492F  2A                 	db	42
   479                           
   480                           	psect	mediumconst
   481  009092                     __pmediumconst:
   482                           	opt stack 0
   483  009092  00                 	db	0
   484  009093                     _motor_speed_lookup:
   485                           	opt stack 0
   486  009093  0008               	dw	8
   487  009095  000C               	dw	12
   488  009097  0010               	dw	16
   489  009099  0013               	dw	19
   490  00909B  0016               	dw	22
   491  00909D  0019               	dw	25
   492  00909F  001C               	dw	28
   493  0090A1  001E               	dw	30
   494  0090A3  0021               	dw	33
   495  0090A5  0023               	dw	35
   496  0090A7  0026               	dw	38
   497  0090A9  0028               	dw	40
   498  0090AB  002A               	dw	42
   499  0090AD  002C               	dw	44
   500  0090AF  002E               	dw	46
   501  0090B1  0030               	dw	48
   502  0090B3  0032               	dw	50
   503  0090B5  0034               	dw	52
   504  0090B7  0036               	dw	54
   505  0090B9  0038               	dw	56
   506  0090BB  003A               	dw	58
   507  0090BD  003C               	dw	60
   508  0090BF  003D               	dw	61
   509  0090C1  003F               	dw	63
   510  0090C3  0041               	dw	65
   511  0090C5  0043               	dw	67
   512  0090C7  0045               	dw	69
   513  0090C9  0046               	dw	70
   514  0090CB  0048               	dw	72
   515  0090CD  0049               	dw	73
   516  0090CF  004B               	dw	75
   517  0090D1  004D               	dw	77
   518  0090D3  004E               	dw	78
   519  0090D5  0050               	dw	80
   520  0090D7  0051               	dw	81
   521  0090D9  0053               	dw	83
   522  0090DB  0054               	dw	84
   523  0090DD  0056               	dw	86
   524  0090DF  0057               	dw	87
   525  0090E1  0059               	dw	89
   526  0090E3  005A               	dw	90
   527  0090E5  005C               	dw	92
   528  0090E7  005D               	dw	93
   529  0090E9  005F               	dw	95
   530  0090EB  0060               	dw	96
   531  0090ED  0062               	dw	98
   532  0090EF  0063               	dw	99
   533  0090F1  0064               	dw	100
   534  0090F3  0066               	dw	102
   535  0090F5  0067               	dw	103
   536  0090F7  0069               	dw	105
   537  0090F9  006A               	dw	106
   538  0090FB  006C               	dw	108
   539  0090FD  006D               	dw	109
   540  0090FF  006E               	dw	110
   541  009101  0070               	dw	112
   542  009103  0071               	dw	113
   543  009105  0072               	dw	114
   544  009107  0073               	dw	115
   545  009109  0074               	dw	116
   546  00910B  0076               	dw	118
   547  00910D  0078               	dw	120
   548  00910F  0079               	dw	121
   549  009111  007A               	dw	122
   550  009113  007B               	dw	123
   551  009115  007D               	dw	125
   552  009117  007E               	dw	126
   553  009119  007F               	dw	127
   554  00911B  0082               	dw	130
   555  00911D  0085               	dw	133
   556  00911F  0087               	dw	135
   557  009121  008A               	dw	138
   558  009123  008C               	dw	140
   559  009125  008F               	dw	143
   560  009127  0091               	dw	145
   561  009129  0092               	dw	146
   562  00912B  0094               	dw	148
   563  00912D  0098               	dw	152
   564  00912F  009A               	dw	154
   565  009131  009C               	dw	156
   566  009133  009E               	dw	158
   567  009135  00A1               	dw	161
   568  009137  00A3               	dw	163
   569  009139  00A5               	dw	165
   570  00913B  00A7               	dw	167
   571  00913D  00AA               	dw	170
   572  00913F  00AC               	dw	172
   573  009141  00AF               	dw	175
   574  009143  00B2               	dw	178
   575  009145  00B4               	dw	180
   576  009147  00B7               	dw	183
   577  009149  00B8               	dw	184
   578  00914B  00BA               	dw	186
   579  00914D  00BC               	dw	188
   580  00914F  00BE               	dw	190
   581  009151  00C0               	dw	192
   582  009153  00C3               	dw	195
   583  009155  00C4               	dw	196
   584  009157  00C6               	dw	198
   585  009159  00C8               	dw	200
   586  00915B  00CA               	dw	202
   587  00915D  00CC               	dw	204
   588  00915F  00CE               	dw	206
   589  009161  00D0               	dw	208
   590  009163  00D2               	dw	210
   591  009165  00D4               	dw	212
   592  009167  00D6               	dw	214
   593  009169  00D8               	dw	216
   594  00916B  00D9               	dw	217
   595  00916D  00DB               	dw	219
   596  00916F  00DD               	dw	221
   597  009171  00DF               	dw	223
   598  009173  00E1               	dw	225
   599  009175  00E2               	dw	226
   600  009177  00E5               	dw	229
   601  009179  00E7               	dw	231
   602  00917B  00E8               	dw	232
   603  00917D  00EA               	dw	234
   604  00917F  00EC               	dw	236
   605  009181  00EE               	dw	238
   606  009183  00EF               	dw	239
   607  009185  00F2               	dw	242
   608  009187  00F3               	dw	243
   609  009189  00F5               	dw	245
   610  00918B  00F7               	dw	247
   611  00918D  00F8               	dw	248
   612  00918F  00FB               	dw	251
   613  009191  00FD               	dw	253
   614  009193  0100               	dw	256
   615  009195  0103               	dw	259
   616  009197  0104               	dw	260
   617  009199  0107               	dw	263
   618  00919B  010A               	dw	266
   619  00919D  010C               	dw	268
   620  00919F  010F               	dw	271
   621  0091A1  0112               	dw	274
   622  0091A3  0114               	dw	276
   623  0091A5  0117               	dw	279
   624  0091A7  0119               	dw	281
   625  0091A9  011C               	dw	284
   626  0091AB  011E               	dw	286
   627  0091AD  0121               	dw	289
   628  0091AF  0123               	dw	291
   629  0091B1  0125               	dw	293
   630  0091B3  0129               	dw	297
   631  0091B5  012B               	dw	299
   632  0091B7  012C               	dw	300
   633  0091B9  012E               	dw	302
   634  0091BB  0132               	dw	306
   635  0091BD  0134               	dw	308
   636  0091BF  0136               	dw	310
   637  0091C1  0138               	dw	312
   638  0091C3  013B               	dw	315
   639  0091C5  013D               	dw	317
   640  0091C7  013F               	dw	319
   641  0091C9  0143               	dw	323
   642  0091CB  0146               	dw	326
   643  0091CD  0148               	dw	328
   644  0091CF  014A               	dw	330
   645  0091D1  014C               	dw	332
   646  0091D3  014F               	dw	335
   647  0091D5  0151               	dw	337
   648  0091D7  0154               	dw	340
   649  0091D9  0156               	dw	342
   650  0091DB  0159               	dw	345
   651  0091DD  015B               	dw	347
   652  0091DF  015E               	dw	350
   653  0091E1  0160               	dw	352
   654  0091E3  0163               	dw	355
   655  0091E5  0166               	dw	358
   656  0091E7  0169               	dw	361
   657  0091E9  016B               	dw	363
   658  0091EB  016E               	dw	366
   659  0091ED  0171               	dw	369
   660  0091EF  0174               	dw	372
   661  0091F1  0177               	dw	375
   662  0091F3  017A               	dw	378
   663  0091F5  017D               	dw	381
   664  0091F7  0180               	dw	384
   665  0091F9  0183               	dw	387
   666  0091FB  0187               	dw	391
   667  0091FD  018A               	dw	394
   668  0091FF  018D               	dw	397
   669  009201  0191               	dw	401
   670  009203  0194               	dw	404
   671  009205  0198               	dw	408
   672  009207  019B               	dw	411
   673  009209  019F               	dw	415
   674  00920B  01A3               	dw	419
   675  00920D  01A6               	dw	422
   676  00920F  01AA               	dw	426
   677  009211  01AE               	dw	430
   678  009213  01B2               	dw	434
   679  009215  01B6               	dw	438
   680  009217  01BA               	dw	442
   681  009219  01BE               	dw	446
   682  00921B  01C3               	dw	451
   683  00921D  01C7               	dw	455
   684  00921F  01CC               	dw	460
   685  009221  01D0               	dw	464
   686  009223  01D5               	dw	469
   687  009225  01D9               	dw	473
   688  009227  01DE               	dw	478
   689  009229  01E3               	dw	483
   690  00922B  01E8               	dw	488
   691  00922D  01ED               	dw	493
   692  00922F  01F3               	dw	499
   693  009231  01F8               	dw	504
   694  009233  01FE               	dw	510
   695  009235  0203               	dw	515
   696  009237  0209               	dw	521
   697  009239  020F               	dw	527
   698  00923B  0215               	dw	533
   699  00923D  021B               	dw	539
   700  00923F  0221               	dw	545
   701  009241  0227               	dw	551
   702  009243  022E               	dw	558
   703  009245  0235               	dw	565
   704  009247  023C               	dw	572
   705  009249  0243               	dw	579
   706  00924B  024A               	dw	586
   707  00924D  0251               	dw	593
   708  00924F  0259               	dw	601
   709  009251  0261               	dw	609
   710  009253  0269               	dw	617
   711  009255  0271               	dw	625
   712  009257  0279               	dw	633
   713  009259  0282               	dw	642
   714  00925B  028B               	dw	651
   715  00925D  0294               	dw	660
   716  00925F  029E               	dw	670
   717  009261  02A7               	dw	679
   718  009263  02B1               	dw	689
   719  009265  02BC               	dw	700
   720  009267  02C6               	dw	710
   721  009269  02D1               	dw	721
   722  00926B  02DC               	dw	732
   723  00926D  02DC               	dw	732
   724  00926F  02DF               	dw	735
   725  009271  02E2               	dw	738
   726  009273  02E5               	dw	741
   727  009275  02E8               	dw	744
   728  009277  02EB               	dw	747
   729  009279  02EE               	dw	750
   730  00927B  02F1               	dw	753
   731  00927D  02F4               	dw	756
   732  00927F  02F7               	dw	759
   733  009281  02FA               	dw	762
   734  009283  02FD               	dw	765
   735  009285  0300               	dw	768
   736  009287  0304               	dw	772
   737  009289  0307               	dw	775
   738  00928B  030A               	dw	778
   739  00928D  030D               	dw	781
   740  00928F  0311               	dw	785
   741  009291  0314               	dw	788
   742  009293  0317               	dw	791
   743  009295  031A               	dw	794
   744  009297  031E               	dw	798
   745  009299  0321               	dw	801
   746  00929B  0325               	dw	805
   747  00929D  0328               	dw	808
   748  00929F  032C               	dw	812
   749  0092A1  032F               	dw	815
   750  0092A3  0333               	dw	819
   751  0092A5  0336               	dw	822
   752  0092A7  033A               	dw	826
   753  0092A9  033E               	dw	830
   754  0092AB  0341               	dw	833
   755  0092AD  0345               	dw	837
   756  0092AF  0349               	dw	841
   757  0092B1  034D               	dw	845
   758  0092B3  0350               	dw	848
   759  0092B5  0354               	dw	852
   760  0092B7  0358               	dw	856
   761  0092B9  035C               	dw	860
   762  0092BB  0360               	dw	864
   763  0092BD  0364               	dw	868
   764  0092BF  0368               	dw	872
   765  0092C1  036C               	dw	876
   766  0092C3  0370               	dw	880
   767  0092C5  0374               	dw	884
   768  0092C7  0379               	dw	889
   769  0092C9  037D               	dw	893
   770  0092CB  0381               	dw	897
   771  0092CD  0385               	dw	901
   772  0092CF  038A               	dw	906
   773  0092D1  038E               	dw	910
   774  0092D3  0393               	dw	915
   775  0092D5  0397               	dw	919
   776  0092D7  039C               	dw	924
   777  0092D9  03A0               	dw	928
   778  0092DB  03A5               	dw	933
   779  0092DD  03AA               	dw	938
   780  0092DF  03AE               	dw	942
   781  0092E1  03B3               	dw	947
   782  0092E3  03B8               	dw	952
   783  0092E5  03BD               	dw	957
   784  0092E7  03C2               	dw	962
   785  0092E9  03C6               	dw	966
   786  0092EB  03CC               	dw	972
   787  0092ED  03D1               	dw	977
   788  0092EF  03D6               	dw	982
   789  0092F1  03DB               	dw	987
   790  0092F3  03E0               	dw	992
   791  0092F5  03E5               	dw	997
   792  0092F7  03EB               	dw	1003
   793  0092F9  03F0               	dw	1008
   794  0092FB  03F6               	dw	1014
   795  0092FD  03FB               	dw	1019
   796  0092FF  0401               	dw	1025
   797  009301  0406               	dw	1030
   798  009303  040C               	dw	1036
   799  009305  0412               	dw	1042
   800  009307  0417               	dw	1047
   801  009309  041D               	dw	1053
   802  00930B  0423               	dw	1059
   803  00930D  0429               	dw	1065
   804  00930F  042F               	dw	1071
   805  009311  0436               	dw	1078
   806  009313  043C               	dw	1084
   807  009315  0442               	dw	1090
   808  009317  0448               	dw	1096
   809  009319  044F               	dw	1103
   810  00931B  0455               	dw	1109
   811  00931D  045C               	dw	1116
   812  00931F  0463               	dw	1123
   813  009321  046A               	dw	1130
   814  009323  0470               	dw	1136
   815  009325  0477               	dw	1143
   816  009327  047E               	dw	1150
   817  009329  0485               	dw	1157
   818  00932B  048D               	dw	1165
   819  00932D  0494               	dw	1172
   820  00932F  049B               	dw	1179
   821  009331  04A3               	dw	1187
   822  009333  04AA               	dw	1194
   823  009335  04B2               	dw	1202
   824  009337  04BA               	dw	1210
   825  009339  04C2               	dw	1218
   826  00933B  04C9               	dw	1225
   827  00933D  04D2               	dw	1234
   828  00933F  04DA               	dw	1242
   829  009341  04E2               	dw	1250
   830  009343  04EA               	dw	1258
   831  009345  04F3               	dw	1267
   832  009347  04FC               	dw	1276
   833  009349  0504               	dw	1284
   834  00934B  050D               	dw	1293
   835  00934D  0516               	dw	1302
   836  00934F  051F               	dw	1311
   837  009351  0528               	dw	1320
   838  009353  0532               	dw	1330
   839  009355  053B               	dw	1339
   840  009357  0545               	dw	1349
   841  009359  054F               	dw	1359
   842  00935B  0559               	dw	1369
   843  00935D  0563               	dw	1379
   844  00935F  056D               	dw	1389
   845  009361  0577               	dw	1399
   846  009363  0582               	dw	1410
   847  009365  058C               	dw	1420
   848  009367  0597               	dw	1431
   849  009369  05A2               	dw	1442
   850  00936B  05AD               	dw	1453
   851  00936D  05B9               	dw	1465
   852  00936F  05C4               	dw	1476
   853  009371  05D0               	dw	1488
   854  009373  05DC               	dw	1500
   855  009375  05E8               	dw	1512
   856  009377  05F4               	dw	1524
   857  009379  0601               	dw	1537
   858  00937B  060E               	dw	1550
   859  00937D  061A               	dw	1562
   860  00937F  0628               	dw	1576
   861  009381  0635               	dw	1589
   862  009383  0643               	dw	1603
   863  009385  0650               	dw	1616
   864  009387  065E               	dw	1630
   865  009389  066D               	dw	1645
   866  00938B  067B               	dw	1659
   867  00938D  068A               	dw	1674
   868  00938F  0699               	dw	1689
   869  009391  06A9               	dw	1705
   870  009393  06B8               	dw	1720
   871  009395  06C8               	dw	1736
   872  009397  06D8               	dw	1752
   873  009399  06E9               	dw	1769
   874  00939B  06FA               	dw	1786
   875  00939D  070B               	dw	1803
   876  00939F  071C               	dw	1820
   877  0093A1  072E               	dw	1838
   878  0093A3  0740               	dw	1856
   879  0093A5  0753               	dw	1875
   880  0093A7  0766               	dw	1894
   881  0093A9  0779               	dw	1913
   882  0093AB  078D               	dw	1933
   883  0093AD  07A1               	dw	1953
   884  0093AF  07B6               	dw	1974
   885  0093B1  07CB               	dw	1995
   886  0093B3  07E0               	dw	2016
   887  0093B5  07F6               	dw	2038
   888  0093B7  080C               	dw	2060
   889  0093B9  0823               	dw	2083
   890  0093BB  083B               	dw	2107
   891  0093BD  0853               	dw	2131
   892  0093BF  086B               	dw	2155
   893  0093C1  0884               	dw	2180
   894  0093C3  089E               	dw	2206
   895  0093C5  08B8               	dw	2232
   896  0093C7  08D3               	dw	2259
   897  0093C9  08EF               	dw	2287
   898  0093CB  090B               	dw	2315
   899  0093CD  0928               	dw	2344
   900  0093CF  0945               	dw	2373
   901  0093D1  0964               	dw	2404
   902  0093D3  0983               	dw	2435
   903  0093D5  09A3               	dw	2467
   904  0093D7  09C4               	dw	2500
   905  0093D9  09E6               	dw	2534
   906  0093DB  0A08               	dw	2568
   907  0093DD  0A2C               	dw	2604
   908  0093DF  0A51               	dw	2641
   909  0093E1  0A77               	dw	2679
   910  0093E3  0A9D               	dw	2717
   911  0093E5  0AC5               	dw	2757
   912  0093E7  0AEF               	dw	2799
   913  0093E9  0B19               	dw	2841
   914  0093EB  0B45               	dw	2885
   915  0093ED  0B72               	dw	2930
   916  0093EF  0B72               	dw	2930
   917  0093F1  0B7D               	dw	2941
   918  0093F3  0B89               	dw	2953
   919  0093F5  0B94               	dw	2964
   920  0093F7  0BA0               	dw	2976
   921  0093F9  0BAC               	dw	2988
   922  0093FB  0BB8               	dw	3000
   923  0093FD  0BC4               	dw	3012
   924  0093FF  0BD0               	dw	3024
   925  009401  0BDC               	dw	3036
   926  009403  0BE9               	dw	3049
   927  009405  0BF5               	dw	3061
   928  009407  0C02               	dw	3074
   929  009409  0C0E               	dw	3086
   930  00940B  0C1B               	dw	3099
   931  00940D  0C28               	dw	3112
   932  00940F  0C35               	dw	3125
   933  009411  0C42               	dw	3138
   934  009413  0C4F               	dw	3151
   935  009415  0C5D               	dw	3165
   936  009417  0C6A               	dw	3178
   937  009419  0C77               	dw	3191
   938  00941B  0C85               	dw	3205
   939  00941D  0C93               	dw	3219
   940  00941F  0CA1               	dw	3233
   941  009421  0CAF               	dw	3247
   942  009423  0CBD               	dw	3261
   943  009425  0CCB               	dw	3275
   944  009427  0CD9               	dw	3289
   945  009429  0CE8               	dw	3304
   946  00942B  0CF7               	dw	3319
   947  00942D  0D05               	dw	3333
   948  00942F  0D14               	dw	3348
   949  009431  0D23               	dw	3363
   950  009433  0D32               	dw	3378
   951  009435  0D42               	dw	3394
   952  009437  0D51               	dw	3409
   953  009439  0D61               	dw	3425
   954  00943B  0D70               	dw	3440
   955  00943D  0D80               	dw	3456
   956  00943F  0D90               	dw	3472
   957  009441  0DA0               	dw	3488
   958  009443  0DB1               	dw	3505
   959  009445  0DC1               	dw	3521
   960  009447  0DD2               	dw	3538
   961  009449  0DE3               	dw	3555
   962  00944B  0DF3               	dw	3571
   963  00944D  0E05               	dw	3589
   964  00944F  0E16               	dw	3606
   965  009451  0E27               	dw	3623
   966  009453  0E39               	dw	3641
   967  009455  0E4B               	dw	3659
   968  009457  0E5C               	dw	3676
   969  009459  0E6F               	dw	3695
   970  00945B  0E81               	dw	3713
   971  00945D  0E93               	dw	3731
   972  00945F  0EA6               	dw	3750
   973  009461                     __end_of_motor_speed_lookup:
   974                           	opt stack 0
   975  009461                     _motor_steps_lookup:
   976                           	opt stack 0
   977  009461  0001               	dw	1
   978  009463  0002               	dw	2
   979  009465  0003               	dw	3
   980  009467  0004               	dw	4
   981  009469  0005               	dw	5
   982  00946B  0006               	dw	6
   983  00946D  0007               	dw	7
   984  00946F  0008               	dw	8
   985  009471  0009               	dw	9
   986  009473  000A               	dw	10
   987  009475  000B               	dw	11
   988  009477  000C               	dw	12
   989  009479  000D               	dw	13
   990  00947B  000E               	dw	14
   991  00947D  000F               	dw	15
   992  00947F  0010               	dw	16
   993  009481  0011               	dw	17
   994  009483  0012               	dw	18
   995  009485  0013               	dw	19
   996  009487  0014               	dw	20
   997  009489  0015               	dw	21
   998  00948B  0016               	dw	22
   999  00948D  0017               	dw	23
  1000  00948F  0018               	dw	24
  1001  009491  0019               	dw	25
  1002  009493  001A               	dw	26
  1003  009495  001B               	dw	27
  1004  009497  001C               	dw	28
  1005  009499  001D               	dw	29
  1006  00949B  001E               	dw	30
  1007  00949D  001F               	dw	31
  1008  00949F  0020               	dw	32
  1009  0094A1  0021               	dw	33
  1010  0094A3  0022               	dw	34
  1011  0094A5  0023               	dw	35
  1012  0094A7  0024               	dw	36
  1013  0094A9  0025               	dw	37
  1014  0094AB  0026               	dw	38
  1015  0094AD  0027               	dw	39
  1016  0094AF  0028               	dw	40
  1017  0094B1  0029               	dw	41
  1018  0094B3  002A               	dw	42
  1019  0094B5  002B               	dw	43
  1020  0094B7  002C               	dw	44
  1021  0094B9  002D               	dw	45
  1022  0094BB  002E               	dw	46
  1023  0094BD  002F               	dw	47
  1024  0094BF  0030               	dw	48
  1025  0094C1  0031               	dw	49
  1026  0094C3  0032               	dw	50
  1027  0094C5  0033               	dw	51
  1028  0094C7  0034               	dw	52
  1029  0094C9  0035               	dw	53
  1030  0094CB  0036               	dw	54
  1031  0094CD  0037               	dw	55
  1032  0094CF  0038               	dw	56
  1033  0094D1  0039               	dw	57
  1034  0094D3  003A               	dw	58
  1035  0094D5  003B               	dw	59
  1036  0094D7  003C               	dw	60
  1037  0094D9  003D               	dw	61
  1038  0094DB  003E               	dw	62
  1039  0094DD  003F               	dw	63
  1040  0094DF  0040               	dw	64
  1041  0094E1  0041               	dw	65
  1042  0094E3  0042               	dw	66
  1043  0094E5  0043               	dw	67
  1044  0094E7  0045               	dw	69
  1045  0094E9  0047               	dw	71
  1046  0094EB  0049               	dw	73
  1047  0094ED  004B               	dw	75
  1048  0094EF  004D               	dw	77
  1049  0094F1  004F               	dw	79
  1050  0094F3  0051               	dw	81
  1051  0094F5  0053               	dw	83
  1052  0094F7  0055               	dw	85
  1053  0094F9  0057               	dw	87
  1054  0094FB  0059               	dw	89
  1055  0094FD  005B               	dw	91
  1056  0094FF  005D               	dw	93
  1057  009501  005F               	dw	95
  1058  009503  0061               	dw	97
  1059  009505  0063               	dw	99
  1060  009507  0065               	dw	101
  1061  009509  0067               	dw	103
  1062  00950B  0069               	dw	105
  1063  00950D  006B               	dw	107
  1064  00950F  006E               	dw	110
  1065  009511  0070               	dw	112
  1066  009513  0073               	dw	115
  1067  009515  0075               	dw	117
  1068  009517  0077               	dw	119
  1069  009519  0079               	dw	121
  1070  00951B  007B               	dw	123
  1071  00951D  007D               	dw	125
  1072  00951F  007F               	dw	127
  1073  009521  0081               	dw	129
  1074  009523  0083               	dw	131
  1075  009525  0085               	dw	133
  1076  009527  0087               	dw	135
  1077  009529  0089               	dw	137
  1078  00952B  008B               	dw	139
  1079  00952D  008D               	dw	141
  1080  00952F  008F               	dw	143
  1081  009531  0091               	dw	145
  1082  009533  0093               	dw	147
  1083  009535  0095               	dw	149
  1084  009537  0097               	dw	151
  1085  009539  0099               	dw	153
  1086  00953B  009B               	dw	155
  1087  00953D  009D               	dw	157
  1088  00953F  009F               	dw	159
  1089  009541  00A1               	dw	161
  1090  009543  00A3               	dw	163
  1091  009545  00A5               	dw	165
  1092  009547  00A7               	dw	167
  1093  009549  00A9               	dw	169
  1094  00954B  00AB               	dw	171
  1095  00954D  00AD               	dw	173
  1096  00954F  00AF               	dw	175
  1097  009551  00B1               	dw	177
  1098  009553  00B3               	dw	179
  1099  009555  00B5               	dw	181
  1100  009557  00B7               	dw	183
  1101  009559  00B9               	dw	185
  1102  00955B  00BB               	dw	187
  1103  00955D  00BD               	dw	189
  1104  00955F  00C0               	dw	192
  1105  009561  00C3               	dw	195
  1106  009563  00C6               	dw	198
  1107  009565  00C9               	dw	201
  1108  009567  00CC               	dw	204
  1109  009569  00CF               	dw	207
  1110  00956B  00D2               	dw	210
  1111  00956D  00D5               	dw	213
  1112  00956F  00D8               	dw	216
  1113  009571  00DB               	dw	219
  1114  009573  00DE               	dw	222
  1115  009575  00E1               	dw	225
  1116  009577  00E4               	dw	228
  1117  009579  00E7               	dw	231
  1118  00957B  00EA               	dw	234
  1119  00957D  00ED               	dw	237
  1120  00957F  00F0               	dw	240
  1121  009581  00F3               	dw	243
  1122  009583  00F6               	dw	246
  1123  009585  00F9               	dw	249
  1124  009587  00FC               	dw	252
  1125  009589  00FF               	dw	255
  1126  00958B  0102               	dw	258
  1127  00958D  0105               	dw	261
  1128  00958F  0108               	dw	264
  1129  009591  010B               	dw	267
  1130  009593  010E               	dw	270
  1131  009595  0111               	dw	273
  1132  009597  0114               	dw	276
  1133  009599  0117               	dw	279
  1134  00959B  011A               	dw	282
  1135  00959D  011D               	dw	285
  1136  00959F  0120               	dw	288
  1137  0095A1  0123               	dw	291
  1138  0095A3  0126               	dw	294
  1139  0095A5  012A               	dw	298
  1140  0095A7  012D               	dw	301
  1141  0095A9  0130               	dw	304
  1142  0095AB  0133               	dw	307
  1143  0095AD  0137               	dw	311
  1144  0095AF  013A               	dw	314
  1145  0095B1  013E               	dw	318
  1146  0095B3  0142               	dw	322
  1147  0095B5  0145               	dw	325
  1148  0095B7  0149               	dw	329
  1149  0095B9  014D               	dw	333
  1150  0095BB  0151               	dw	337
  1151  0095BD  0155               	dw	341
  1152  0095BF  0159               	dw	345
  1153  0095C1  015D               	dw	349
  1154  0095C3  0161               	dw	353
  1155  0095C5  0166               	dw	358
  1156  0095C7  016A               	dw	362
  1157  0095C9  016E               	dw	366
  1158  0095CB  0173               	dw	371
  1159  0095CD  0178               	dw	376
  1160  0095CF  017D               	dw	381
  1161  0095D1  0182               	dw	386
  1162  0095D3  0187               	dw	391
  1163  0095D5  018C               	dw	396
  1164  0095D7  0191               	dw	401
  1165  0095D9  0196               	dw	406
  1166  0095DB  019C               	dw	412
  1167  0095DD  01A1               	dw	417
  1168  0095DF  01A7               	dw	423
  1169  0095E1  01AD               	dw	429
  1170  0095E3  01B3               	dw	435
  1171  0095E5  01B9               	dw	441
  1172  0095E7  01BF               	dw	447
  1173  0095E9  01C6               	dw	454
  1174  0095EB  01CC               	dw	460
  1175  0095ED  01D3               	dw	467
  1176  0095EF  01DA               	dw	474
  1177  0095F1  01E1               	dw	481
  1178  0095F3  01E8               	dw	488
  1179  0095F5  01F0               	dw	496
  1180  0095F7  01F7               	dw	503
  1181  0095F9  01FF               	dw	511
  1182  0095FB  0207               	dw	519
  1183  0095FD  020F               	dw	527
  1184  0095FF  0218               	dw	536
  1185  009601  0221               	dw	545
  1186  009603  022A               	dw	554
  1187  009605  0233               	dw	563
  1188  009607  023D               	dw	573
  1189  009609  0247               	dw	583
  1190  00960B  0251               	dw	593
  1191  00960D  025C               	dw	604
  1192  00960F  0267               	dw	615
  1193  009611  0272               	dw	626
  1194  009613  027E               	dw	638
  1195  009615  028A               	dw	650
  1196  009617  0297               	dw	663
  1197  009619  02A4               	dw	676
  1198  00961B  02B2               	dw	690
  1199  00961D  02C0               	dw	704
  1200  00961F  02CF               	dw	719
  1201  009621  02DF               	dw	735
  1202  009623  02EF               	dw	751
  1203  009625  02FF               	dw	767
  1204  009627  0311               	dw	785
  1205  009629  0323               	dw	803
  1206  00962B  0336               	dw	822
  1207  00962D  0349               	dw	841
  1208  00962F  035E               	dw	862
  1209  009631  0373               	dw	883
  1210  009633  0389               	dw	905
  1211  009635  03A1               	dw	929
  1212  009637  03B9               	dw	953
  1213  009639  03D3               	dw	979
  1214  00963B  03DD               	dw	989
  1215  00963D  03E4               	dw	996
  1216  00963F  03EA               	dw	1002
  1217  009641  03F1               	dw	1009
  1218  009643  03F8               	dw	1016
  1219  009645  03FF               	dw	1023
  1220  009647  0406               	dw	1030
  1221  009649  040D               	dw	1037
  1222  00964B  0415               	dw	1045
  1223  00964D  041C               	dw	1052
  1224  00964F  0424               	dw	1060
  1225  009651  042B               	dw	1067
  1226  009653  0433               	dw	1075
  1227  009655  043B               	dw	1083
  1228  009657  0442               	dw	1090
  1229  009659  044A               	dw	1098
  1230  00965B  0452               	dw	1106
  1231  00965D  045A               	dw	1114
  1232  00965F  0463               	dw	1123
  1233  009661  046B               	dw	1131
  1234  009663  0474               	dw	1140
  1235  009665  047C               	dw	1148
  1236  009667  0485               	dw	1157
  1237  009669  048E               	dw	1166
  1238  00966B  0496               	dw	1174
  1239  00966D  049F               	dw	1183
  1240  00966F  04A9               	dw	1193
  1241  009671  04B2               	dw	1202
  1242  009673  04BB               	dw	1211
  1243  009675  04C5               	dw	1221
  1244  009677  04CE               	dw	1230
  1245  009679  04D8               	dw	1240
  1246  00967B  04E2               	dw	1250
  1247  00967D  04EC               	dw	1260
  1248  00967F  04F6               	dw	1270
  1249  009681  0500               	dw	1280
  1250  009683  050B               	dw	1291
  1251  009685  0515               	dw	1301
  1252  009687  0520               	dw	1312
  1253  009689  052B               	dw	1323
  1254  00968B  0536               	dw	1334
  1255  00968D  0541               	dw	1345
  1256  00968F  054C               	dw	1356
  1257  009691  0558               	dw	1368
  1258  009693  0564               	dw	1380
  1259  009695  056F               	dw	1391
  1260  009697  057B               	dw	1403
  1261  009699  0587               	dw	1415
  1262  00969B  0594               	dw	1428
  1263  00969D  05A0               	dw	1440
  1264  00969F  05AD               	dw	1453
  1265  0096A1  05BA               	dw	1466
  1266  0096A3  05C7               	dw	1479
  1267  0096A5  05D4               	dw	1492
  1268  0096A7  05E2               	dw	1506
  1269  0096A9  05EF               	dw	1519
  1270  0096AB  05FD               	dw	1533
  1271  0096AD  060B               	dw	1547
  1272  0096AF  0619               	dw	1561
  1273  0096B1  0628               	dw	1576
  1274  0096B3  0637               	dw	1591
  1275  0096B5  0646               	dw	1606
  1276  0096B7  0655               	dw	1621
  1277  0096B9  0664               	dw	1636
  1278  0096BB  0674               	dw	1652
  1279  0096BD  0684               	dw	1668
  1280  0096BF  0694               	dw	1684
  1281  0096C1  06A4               	dw	1700
  1282  0096C3  06B5               	dw	1717
  1283  0096C5  06C6               	dw	1734
  1284  0096C7  06D7               	dw	1751
  1285  0096C9  06E9               	dw	1769
  1286  0096CB  06FA               	dw	1786
  1287  0096CD  070C               	dw	1804
  1288  0096CF  071F               	dw	1823
  1289  0096D1  0731               	dw	1841
  1290  0096D3  0744               	dw	1860
  1291  0096D5  0758               	dw	1880
  1292  0096D7  076B               	dw	1899
  1293  0096D9  077F               	dw	1919
  1294  0096DB  0793               	dw	1939
  1295  0096DD  07A8               	dw	1960
  1296  0096DF  07BD               	dw	1981
  1297  0096E1  07D2               	dw	2002
  1298  0096E3  07E8               	dw	2024
  1299  0096E5  07FE               	dw	2046
  1300  0096E7  0815               	dw	2069
  1301  0096E9  082C               	dw	2092
  1302  0096EB  0843               	dw	2115
  1303  0096ED  085B               	dw	2139
  1304  0096EF  0873               	dw	2163
  1305  0096F1  088B               	dw	2187
  1306  0096F3  08A5               	dw	2213
  1307  0096F5  08BE               	dw	2238
  1308  0096F7  08D8               	dw	2264
  1309  0096F9  08F2               	dw	2290
  1310  0096FB  090D               	dw	2317
  1311  0096FD  0929               	dw	2345
  1312  0096FF  0945               	dw	2373
  1313  009701  0961               	dw	2401
  1314  009703  097E               	dw	2430
  1315  009705  099C               	dw	2460
  1316  009707  09BA               	dw	2490
  1317  009709  09D9               	dw	2521
  1318  00970B  09F9               	dw	2553
  1319  00970D  0A19               	dw	2585
  1320  00970F  0A39               	dw	2617
  1321  009711  0A5B               	dw	2651
  1322  009713  0A7D               	dw	2685
  1323  009715  0A9F               	dw	2719
  1324  009717  0AC3               	dw	2755
  1325  009719  0AE7               	dw	2791
  1326  00971B  0B0C               	dw	2828
  1327  00971D  0B31               	dw	2865
  1328  00971F  0B58               	dw	2904
  1329  009721  0B7F               	dw	2943
  1330  009723  0BA7               	dw	2983
  1331  009725  0BD0               	dw	3024
  1332  009727  0BFA               	dw	3066
  1333  009729  0C25               	dw	3109
  1334  00972B  0C51               	dw	3153
  1335  00972D  0C7E               	dw	3198
  1336  00972F  0CAB               	dw	3243
  1337  009731  0CDA               	dw	3290
  1338  009733  0D0A               	dw	3338
  1339  009735  0D3B               	dw	3387
  1340  009737  0D6D               	dw	3437
  1341  009739  0DA0               	dw	3488
  1342  00973B  0DD4               	dw	3540
  1343  00973D  0E0A               	dw	3594
  1344  00973F  0E41               	dw	3649
  1345  009741  0E79               	dw	3705
  1346  009743  0EB3               	dw	3763
  1347  009745  0EEE               	dw	3822
  1348  009747  0F2A               	dw	3882
  1349  009749  0F68               	dw	3944
  1350  00974B  0FA8               	dw	4008
  1351  00974D  0FE9               	dw	4073
  1352  00974F  102C               	dw	4140
  1353  009751  1070               	dw	4208
  1354  009753  10B6               	dw	4278
  1355  009755  10FE               	dw	4350
  1356  009757  1148               	dw	4424
  1357  009759  1194               	dw	4500
  1358  00975B  11E2               	dw	4578
  1359  00975D  1232               	dw	4658
  1360  00975F  1285               	dw	4741
  1361  009761  12D9               	dw	4825
  1362  009763  1330               	dw	4912
  1363  009765  1389               	dw	5001
  1364  009767  13E5               	dw	5093
  1365  009769  1444               	dw	5188
  1366  00976B  14A5               	dw	5285
  1367  00976D  1509               	dw	5385
  1368  00976F  1570               	dw	5488
  1369  009771  15DA               	dw	5594
  1370  009773  1647               	dw	5703
  1371  009775  16B8               	dw	5816
  1372  009777  172B               	dw	5931
  1373  009779  17A3               	dw	6051
  1374  00977B  181E               	dw	6174
  1375  00977D  189D               	dw	6301
  1376  00977F  1921               	dw	6433
  1377  009781  19A8               	dw	6568
  1378  009783  1A34               	dw	6708
  1379  009785  1AC4               	dw	6852
  1380  009787  1B5A               	dw	7002
  1381  009789  1BF4               	dw	7156
  1382  00978B  1C94               	dw	7316
  1383  00978D  1D39               	dw	7481
  1384  00978F  1DE4               	dw	7652
  1385  009791  1E95               	dw	7829
  1386  009793  1F4C               	dw	8012
  1387  009795  200A               	dw	8202
  1388  009797  20CE               	dw	8398
  1389  009799  219A               	dw	8602
  1390  00979B  226E               	dw	8814
  1391  00979D  234A               	dw	9034
  1392  00979F  242E               	dw	9262
  1393  0097A1  251B               	dw	9499
  1394  0097A3  2612               	dw	9746
  1395  0097A5  2712               	dw	10002
  1396  0097A7  281D               	dw	10269
  1397  0097A9  2932               	dw	10546
  1398  0097AB  2A53               	dw	10835
  1399  0097AD  2B81               	dw	11137
  1400  0097AF  2CBB               	dw	11451
  1401  0097B1  2E03               	dw	11779
  1402  0097B3  2F5A               	dw	12122
  1403  0097B5  30C0               	dw	12480
  1404  0097B7  3236               	dw	12854
  1405  0097B9  33BD               	dw	13245
  1406  0097BB  3557               	dw	13655
  1407  0097BD  35F5               	dw	13813
  1408  0097BF  3661               	dw	13921
  1409  0097C1  36CD               	dw	14029
  1410  0097C3  373B               	dw	14139
  1411  0097C5  37AA               	dw	14250
  1412  0097C7  381B               	dw	14363
  1413  0097C9  388C               	dw	14476
  1414  0097CB  3900               	dw	14592
  1415  0097CD  3974               	dw	14708
  1416  0097CF  39EA               	dw	14826
  1417  0097D1  3A62               	dw	14946
  1418  0097D3  3ADB               	dw	15067
  1419  0097D5  3B55               	dw	15189
  1420  0097D7  3BD1               	dw	15313
  1421  0097D9  3C4E               	dw	15438
  1422  0097DB  3CCD               	dw	15565
  1423  0097DD  3D4E               	dw	15694
  1424  0097DF  3DD0               	dw	15824
  1425  0097E1  3E54               	dw	15956
  1426  0097E3  3EDA               	dw	16090
  1427  0097E5  3F61               	dw	16225
  1428  0097E7  3FEA               	dw	16362
  1429  0097E9  4074               	dw	16500
  1430  0097EB  4101               	dw	16641
  1431  0097ED  418F               	dw	16783
  1432  0097EF  421F               	dw	16927
  1433  0097F1  42B1               	dw	17073
  1434  0097F3  4345               	dw	17221
  1435  0097F5  43DB               	dw	17371
  1436  0097F7  4473               	dw	17523
  1437  0097F9  450D               	dw	17677
  1438  0097FB  45A9               	dw	17833
  1439  0097FD  4647               	dw	17991
  1440  0097FF  46E7               	dw	18151
  1441  009801  4789               	dw	18313
  1442  009803  482E               	dw	18478
  1443  009805  48D5               	dw	18645
  1444  009807  497E               	dw	18814
  1445  009809  4A29               	dw	18985
  1446  00980B  4AD7               	dw	19159
  1447  00980D  4B87               	dw	19335
  1448  00980F  4C3A               	dw	19514
  1449  009811  4CEF               	dw	19695
  1450  009813  4DA6               	dw	19878
  1451  009815  4E61               	dw	20065
  1452  009817  4F1E               	dw	20254
  1453  009819  4FDD               	dw	20445
  1454  00981B  50A0               	dw	20640
  1455  00981D  5165               	dw	20837
  1456  00981F  522D               	dw	21037
  1457  009821  52F8               	dw	21240
  1458  009823  53C6               	dw	21446
  1459  009825  5497               	dw	21655
  1460  009827  556B               	dw	21867
  1461  009829  5642               	dw	22082
  1462  00982B  571C               	dw	22300
  1463  00982D  57FA               	dw	22522
  1464  00982F                     __end_of_motor_steps_lookup:
  1465                           	opt stack 0
  1466  00982F                     _motor_postscaler_lookup:
  1467                           	opt stack 0
  1468  00982F  0C                 	db	12
  1469  009830  07                 	db	7
  1470  009831  05                 	db	5
  1471  009832  04                 	db	4
  1472  009833  04                 	db	4
  1473  009834  03                 	db	3
  1474  009835  03                 	db	3
  1475  009836  03                 	db	3
  1476  009837  02                 	db	2
  1477  009838  02                 	db	2
  1478  009839  02                 	db	2
  1479  00983A  02                 	db	2
  1480  00983B  02                 	db	2
  1481  00983C  02                 	db	2
  1482  00983D  01                 	db	1
  1483  00983E  01                 	db	1
  1484  00983F  01                 	db	1
  1485  009840  01                 	db	1
  1486  009841  01                 	db	1
  1487  009842  01                 	db	1
  1488  009843  01                 	db	1
  1489  009844  01                 	db	1
  1490  009845  01                 	db	1
  1491  009846  01                 	db	1
  1492  009847  01                 	db	1
  1493  009848  01                 	db	1
  1494  009849  01                 	db	1
  1495  00984A  01                 	db	1
  1496  00984B  01                 	db	1
  1497  00984C  01                 	db	1
  1498  00984D  01                 	db	1
  1499  00984E  01                 	db	1
  1500  00984F  01                 	db	1
  1501  009850  01                 	db	1
  1502  009851  01                 	db	1
  1503  009852  01                 	db	1
  1504  009853  01                 	db	1
  1505  009854  01                 	db	1
  1506  009855  01                 	db	1
  1507  009856  01                 	db	1
  1508  009857  01                 	db	1
  1509  009858  01                 	db	1
  1510  009859  01                 	db	1
  1511  00985A  01                 	db	1
  1512  00985B  01                 	db	1
  1513  00985C  01                 	db	1
  1514  00985D  01                 	db	1
  1515  00985E  01                 	db	1
  1516  00985F  01                 	db	1
  1517  009860  01                 	db	1
  1518  009861  01                 	db	1
  1519  009862  01                 	db	1
  1520  009863  01                 	db	1
  1521  009864  01                 	db	1
  1522  009865  01                 	db	1
  1523  009866  01                 	db	1
  1524  009867  01                 	db	1
  1525  009868  01                 	db	1
  1526  009869  01                 	db	1
  1527  00986A  01                 	db	1
  1528  00986B  01                 	db	1
  1529  00986C  01                 	db	1
  1530  00986D  01                 	db	1
  1531  00986E  01                 	db	1
  1532  00986F  01                 	db	1
  1533  009870  01                 	db	1
  1534  009871  01                 	db	1
  1535  009872  01                 	db	1
  1536  009873  01                 	db	1
  1537  009874  01                 	db	1
  1538  009875  01                 	db	1
  1539  009876  01                 	db	1
  1540  009877  01                 	db	1
  1541  009878  01                 	db	1
  1542  009879  01                 	db	1
  1543  00987A  01                 	db	1
  1544  00987B  01                 	db	1
  1545  00987C  01                 	db	1
  1546  00987D  01                 	db	1
  1547  00987E  01                 	db	1
  1548  00987F  01                 	db	1
  1549  009880  01                 	db	1
  1550  009881  01                 	db	1
  1551  009882  01                 	db	1
  1552  009883  01                 	db	1
  1553  009884  01                 	db	1
  1554  009885  01                 	db	1
  1555  009886  01                 	db	1
  1556  009887  01                 	db	1
  1557  009888  01                 	db	1
  1558  009889  01                 	db	1
  1559  00988A  00                 	db	0
  1560  00988B  00                 	db	0
  1561  00988C  00                 	db	0
  1562  00988D  00                 	db	0
  1563  00988E  00                 	db	0
  1564  00988F  00                 	db	0
  1565  009890  00                 	db	0
  1566  009891  00                 	db	0
  1567  009892  00                 	db	0
  1568  009893  00                 	db	0
  1569  009894  00                 	db	0
  1570  009895  00                 	db	0
  1571  009896  00                 	db	0
  1572  009897  00                 	db	0
  1573  009898  00                 	db	0
  1574  009899  00                 	db	0
  1575  00989A  00                 	db	0
  1576  00989B  00                 	db	0
  1577  00989C  00                 	db	0
  1578  00989D  00                 	db	0
  1579  00989E  00                 	db	0
  1580  00989F  00                 	db	0
  1581  0098A0  00                 	db	0
  1582  0098A1  00                 	db	0
  1583  0098A2  00                 	db	0
  1584  0098A3  00                 	db	0
  1585  0098A4  00                 	db	0
  1586  0098A5  00                 	db	0
  1587  0098A6  00                 	db	0
  1588  0098A7  00                 	db	0
  1589  0098A8  00                 	db	0
  1590  0098A9  00                 	db	0
  1591  0098AA  00                 	db	0
  1592  0098AB  00                 	db	0
  1593  0098AC  00                 	db	0
  1594  0098AD  00                 	db	0
  1595  0098AE  00                 	db	0
  1596  0098AF  00                 	db	0
  1597  0098B0  00                 	db	0
  1598  0098B1  00                 	db	0
  1599  0098B2  00                 	db	0
  1600  0098B3  00                 	db	0
  1601  0098B4  00                 	db	0
  1602  0098B5  00                 	db	0
  1603  0098B6  00                 	db	0
  1604  0098B7  00                 	db	0
  1605  0098B8  00                 	db	0
  1606  0098B9  00                 	db	0
  1607  0098BA  00                 	db	0
  1608  0098BB  00                 	db	0
  1609  0098BC  00                 	db	0
  1610  0098BD  00                 	db	0
  1611  0098BE  00                 	db	0
  1612  0098BF  00                 	db	0
  1613  0098C0  00                 	db	0
  1614  0098C1  00                 	db	0
  1615  0098C2  00                 	db	0
  1616  0098C3  00                 	db	0
  1617  0098C4  00                 	db	0
  1618  0098C5  00                 	db	0
  1619  0098C6  00                 	db	0
  1620  0098C7  00                 	db	0
  1621  0098C8  00                 	db	0
  1622  0098C9  00                 	db	0
  1623  0098CA  00                 	db	0
  1624  0098CB  00                 	db	0
  1625  0098CC  00                 	db	0
  1626  0098CD  00                 	db	0
  1627  0098CE  00                 	db	0
  1628  0098CF  00                 	db	0
  1629  0098D0  00                 	db	0
  1630  0098D1  00                 	db	0
  1631  0098D2  00                 	db	0
  1632  0098D3  00                 	db	0
  1633  0098D4  00                 	db	0
  1634  0098D5  00                 	db	0
  1635  0098D6  00                 	db	0
  1636  0098D7  00                 	db	0
  1637  0098D8  00                 	db	0
  1638  0098D9  00                 	db	0
  1639  0098DA  00                 	db	0
  1640  0098DB  00                 	db	0
  1641  0098DC  00                 	db	0
  1642  0098DD  00                 	db	0
  1643  0098DE  00                 	db	0
  1644  0098DF  00                 	db	0
  1645  0098E0  00                 	db	0
  1646  0098E1  00                 	db	0
  1647  0098E2  00                 	db	0
  1648  0098E3  00                 	db	0
  1649  0098E4  00                 	db	0
  1650  0098E5  00                 	db	0
  1651  0098E6  00                 	db	0
  1652  0098E7  00                 	db	0
  1653  0098E8  00                 	db	0
  1654  0098E9  00                 	db	0
  1655  0098EA  00                 	db	0
  1656  0098EB  00                 	db	0
  1657  0098EC  00                 	db	0
  1658  0098ED  00                 	db	0
  1659  0098EE  00                 	db	0
  1660  0098EF  00                 	db	0
  1661  0098F0  00                 	db	0
  1662  0098F1  00                 	db	0
  1663  0098F2  00                 	db	0
  1664  0098F3  00                 	db	0
  1665  0098F4  00                 	db	0
  1666  0098F5  00                 	db	0
  1667  0098F6  00                 	db	0
  1668  0098F7  00                 	db	0
  1669  0098F8  00                 	db	0
  1670  0098F9  00                 	db	0
  1671  0098FA  00                 	db	0
  1672  0098FB  00                 	db	0
  1673  0098FC  00                 	db	0
  1674  0098FD  00                 	db	0
  1675  0098FE  00                 	db	0
  1676  0098FF  00                 	db	0
  1677  009900  00                 	db	0
  1678  009901  00                 	db	0
  1679  009902  00                 	db	0
  1680  009903  00                 	db	0
  1681  009904  00                 	db	0
  1682  009905  00                 	db	0
  1683  009906  00                 	db	0
  1684  009907  00                 	db	0
  1685  009908  00                 	db	0
  1686  009909  00                 	db	0
  1687  00990A  00                 	db	0
  1688  00990B  00                 	db	0
  1689  00990C  00                 	db	0
  1690  00990D  00                 	db	0
  1691  00990E  00                 	db	0
  1692  00990F  00                 	db	0
  1693  009910  00                 	db	0
  1694  009911  00                 	db	0
  1695  009912  00                 	db	0
  1696  009913  00                 	db	0
  1697  009914  00                 	db	0
  1698  009915  00                 	db	0
  1699  009916  00                 	db	0
  1700  009917  00                 	db	0
  1701  009918  00                 	db	0
  1702  009919  00                 	db	0
  1703  00991A  00                 	db	0
  1704  00991B  00                 	db	0
  1705  00991C  00                 	db	0
  1706  00991D  00                 	db	0
  1707  00991E  00                 	db	0
  1708  00991F  00                 	db	0
  1709  009920  00                 	db	0
  1710  009921  00                 	db	0
  1711  009922  00                 	db	0
  1712  009923  00                 	db	0
  1713  009924  00                 	db	0
  1714  009925  00                 	db	0
  1715  009926  00                 	db	0
  1716  009927  00                 	db	0
  1717  009928  00                 	db	0
  1718  009929  00                 	db	0
  1719  00992A  00                 	db	0
  1720  00992B  00                 	db	0
  1721  00992C  00                 	db	0
  1722  00992D  00                 	db	0
  1723  00992E  00                 	db	0
  1724  00992F  00                 	db	0
  1725  009930  00                 	db	0
  1726  009931  00                 	db	0
  1727  009932  00                 	db	0
  1728  009933  00                 	db	0
  1729  009934  00                 	db	0
  1730  009935  00                 	db	0
  1731  009936  00                 	db	0
  1732  009937  00                 	db	0
  1733  009938  00                 	db	0
  1734  009939  00                 	db	0
  1735  00993A  00                 	db	0
  1736  00993B  00                 	db	0
  1737  00993C  00                 	db	0
  1738  00993D  00                 	db	0
  1739  00993E  00                 	db	0
  1740  00993F  00                 	db	0
  1741  009940  00                 	db	0
  1742  009941  00                 	db	0
  1743  009942  00                 	db	0
  1744  009943  00                 	db	0
  1745  009944  00                 	db	0
  1746  009945  00                 	db	0
  1747  009946  00                 	db	0
  1748  009947  00                 	db	0
  1749  009948  00                 	db	0
  1750  009949  00                 	db	0
  1751  00994A  00                 	db	0
  1752  00994B  00                 	db	0
  1753  00994C  00                 	db	0
  1754  00994D  00                 	db	0
  1755  00994E  00                 	db	0
  1756  00994F  00                 	db	0
  1757  009950  00                 	db	0
  1758  009951  00                 	db	0
  1759  009952  00                 	db	0
  1760  009953  00                 	db	0
  1761  009954  00                 	db	0
  1762  009955  00                 	db	0
  1763  009956  00                 	db	0
  1764  009957  00                 	db	0
  1765  009958  00                 	db	0
  1766  009959  00                 	db	0
  1767  00995A  00                 	db	0
  1768  00995B  00                 	db	0
  1769  00995C  00                 	db	0
  1770  00995D  00                 	db	0
  1771  00995E  00                 	db	0
  1772  00995F  00                 	db	0
  1773  009960  00                 	db	0
  1774  009961  00                 	db	0
  1775  009962  00                 	db	0
  1776  009963  00                 	db	0
  1777  009964  00                 	db	0
  1778  009965  00                 	db	0
  1779  009966  00                 	db	0
  1780  009967  00                 	db	0
  1781  009968  00                 	db	0
  1782  009969  00                 	db	0
  1783  00996A  00                 	db	0
  1784  00996B  00                 	db	0
  1785  00996C  00                 	db	0
  1786  00996D  00                 	db	0
  1787  00996E  00                 	db	0
  1788  00996F  00                 	db	0
  1789  009970  00                 	db	0
  1790  009971  00                 	db	0
  1791  009972  00                 	db	0
  1792  009973  00                 	db	0
  1793  009974  00                 	db	0
  1794  009975  00                 	db	0
  1795  009976  00                 	db	0
  1796  009977  00                 	db	0
  1797  009978  00                 	db	0
  1798  009979  00                 	db	0
  1799  00997A  00                 	db	0
  1800  00997B  00                 	db	0
  1801  00997C  00                 	db	0
  1802  00997D  00                 	db	0
  1803  00997E  00                 	db	0
  1804  00997F  00                 	db	0
  1805  009980  00                 	db	0
  1806  009981  00                 	db	0
  1807  009982  00                 	db	0
  1808  009983  00                 	db	0
  1809  009984  00                 	db	0
  1810  009985  00                 	db	0
  1811  009986  00                 	db	0
  1812  009987  00                 	db	0
  1813  009988  00                 	db	0
  1814  009989  00                 	db	0
  1815  00998A  00                 	db	0
  1816  00998B  00                 	db	0
  1817  00998C  00                 	db	0
  1818  00998D  00                 	db	0
  1819  00998E  00                 	db	0
  1820  00998F  00                 	db	0
  1821  009990  00                 	db	0
  1822  009991  00                 	db	0
  1823  009992  00                 	db	0
  1824  009993  00                 	db	0
  1825  009994  00                 	db	0
  1826  009995  00                 	db	0
  1827  009996  00                 	db	0
  1828  009997  00                 	db	0
  1829  009998  00                 	db	0
  1830  009999  00                 	db	0
  1831  00999A  00                 	db	0
  1832  00999B  00                 	db	0
  1833  00999C  00                 	db	0
  1834  00999D  00                 	db	0
  1835  00999E  00                 	db	0
  1836  00999F  00                 	db	0
  1837  0099A0  00                 	db	0
  1838  0099A1  00                 	db	0
  1839  0099A2  00                 	db	0
  1840  0099A3  00                 	db	0
  1841  0099A4  00                 	db	0
  1842  0099A5  00                 	db	0
  1843  0099A6  00                 	db	0
  1844  0099A7  00                 	db	0
  1845  0099A8  00                 	db	0
  1846  0099A9  00                 	db	0
  1847  0099AA  00                 	db	0
  1848  0099AB  00                 	db	0
  1849  0099AC  00                 	db	0
  1850  0099AD  00                 	db	0
  1851  0099AE  00                 	db	0
  1852  0099AF  00                 	db	0
  1853  0099B0  00                 	db	0
  1854  0099B1  00                 	db	0
  1855  0099B2  00                 	db	0
  1856  0099B3  00                 	db	0
  1857  0099B4  00                 	db	0
  1858  0099B5  00                 	db	0
  1859  0099B6  00                 	db	0
  1860  0099B7  00                 	db	0
  1861  0099B8  00                 	db	0
  1862  0099B9  00                 	db	0
  1863  0099BA  00                 	db	0
  1864  0099BB  00                 	db	0
  1865  0099BC  00                 	db	0
  1866  0099BD  00                 	db	0
  1867  0099BE  00                 	db	0
  1868  0099BF  00                 	db	0
  1869  0099C0  00                 	db	0
  1870  0099C1  00                 	db	0
  1871  0099C2  00                 	db	0
  1872  0099C3  00                 	db	0
  1873  0099C4  00                 	db	0
  1874  0099C5  00                 	db	0
  1875  0099C6  00                 	db	0
  1876  0099C7  00                 	db	0
  1877  0099C8  00                 	db	0
  1878  0099C9  00                 	db	0
  1879  0099CA  00                 	db	0
  1880  0099CB  00                 	db	0
  1881  0099CC  00                 	db	0
  1882  0099CD  00                 	db	0
  1883  0099CE  00                 	db	0
  1884  0099CF  00                 	db	0
  1885  0099D0  00                 	db	0
  1886  0099D1  00                 	db	0
  1887  0099D2  00                 	db	0
  1888  0099D3  00                 	db	0
  1889  0099D4  00                 	db	0
  1890  0099D5  00                 	db	0
  1891  0099D6  00                 	db	0
  1892  0099D7  00                 	db	0
  1893  0099D8  00                 	db	0
  1894  0099D9  00                 	db	0
  1895  0099DA  00                 	db	0
  1896  0099DB  00                 	db	0
  1897  0099DC  00                 	db	0
  1898  0099DD  00                 	db	0
  1899  0099DE  00                 	db	0
  1900  0099DF  00                 	db	0
  1901  0099E0  00                 	db	0
  1902  0099E1  00                 	db	0
  1903  0099E2  00                 	db	0
  1904  0099E3  00                 	db	0
  1905  0099E4  00                 	db	0
  1906  0099E5  00                 	db	0
  1907  0099E6  00                 	db	0
  1908  0099E7  00                 	db	0
  1909  0099E8  00                 	db	0
  1910  0099E9  00                 	db	0
  1911  0099EA  00                 	db	0
  1912  0099EB  00                 	db	0
  1913  0099EC  00                 	db	0
  1914  0099ED  00                 	db	0
  1915  0099EE  00                 	db	0
  1916  0099EF  00                 	db	0
  1917  0099F0  00                 	db	0
  1918  0099F1  00                 	db	0
  1919  0099F2  00                 	db	0
  1920  0099F3  00                 	db	0
  1921  0099F4  00                 	db	0
  1922  0099F5  00                 	db	0
  1923  0099F6  00                 	db	0
  1924  0099F7  00                 	db	0
  1925  0099F8  00                 	db	0
  1926  0099F9  00                 	db	0
  1927  0099FA  00                 	db	0
  1928  0099FB  00                 	db	0
  1929  0099FC  00                 	db	0
  1930  0099FD  00                 	db	0
  1931  0099FE  00                 	db	0
  1932  0099FF  00                 	db	0
  1933  009A00  00                 	db	0
  1934  009A01  00                 	db	0
  1935  009A02  00                 	db	0
  1936  009A03  00                 	db	0
  1937  009A04  00                 	db	0
  1938  009A05  00                 	db	0
  1939  009A06  00                 	db	0
  1940  009A07  00                 	db	0
  1941  009A08  00                 	db	0
  1942  009A09  00                 	db	0
  1943  009A0A  00                 	db	0
  1944  009A0B  00                 	db	0
  1945  009A0C  00                 	db	0
  1946  009A0D  00                 	db	0
  1947  009A0E  00                 	db	0
  1948  009A0F  00                 	db	0
  1949  009A10  00                 	db	0
  1950  009A11  00                 	db	0
  1951  009A12  00                 	db	0
  1952  009A13  00                 	db	0
  1953  009A14  00                 	db	0
  1954  009A15  00                 	db	0
  1955  009A16                     __end_of_motor_postscaler_lookup:
  1956                           	opt stack 0
  1957  009A16                     _motor_period_lookup:
  1958                           	opt stack 0
  1959  009A16  EC                 	db	236
  1960  009A17  F2                 	db	242
  1961  009A18  F6                 	db	246
  1962  009A19  F4                 	db	244
  1963  009A1A  D2                 	db	210
  1964  009A1B  E8                 	db	232
  1965  009A1C  D2                 	db	210
  1966  009A1D  C0                 	db	192
  1967  009A1E  EC                 	db	236
  1968  009A1F  DC                 	db	220
  1969  009A20  CF                 	db	207
  1970  009A21  C3                 	db	195
  1971  009A22  B9                 	db	185
  1972  009A23  B0                 	db	176
  1973  009A24  FC                 	db	252
  1974  009A25  F2                 	db	242
  1975  009A26  E8                 	db	232
  1976  009A27  DF                 	db	223
  1977  009A28  D7                 	db	215
  1978  009A29  D0                 	db	208
  1979  009A2A  CA                 	db	202
  1980  009A2B  C3                 	db	195
  1981  009A2C  BE                 	db	190
  1982  009A2D  B8                 	db	184
  1983  009A2E  B3                 	db	179
  1984  009A2F  AF                 	db	175
  1985  009A30  AA                 	db	170
  1986  009A31  A6                 	db	166
  1987  009A32  A2                 	db	162
  1988  009A33  9F                 	db	159
  1989  009A34  9B                 	db	155
  1990  009A35  98                 	db	152
  1991  009A36  95                 	db	149
  1992  009A37  92                 	db	146
  1993  009A38  8F                 	db	143
  1994  009A39  8C                 	db	140
  1995  009A3A  8A                 	db	138
  1996  009A3B  87                 	db	135
  1997  009A3C  85                 	db	133
  1998  009A3D  83                 	db	131
  1999  009A3E  81                 	db	129
  2000  009A3F  7F                 	db	127
  2001  009A40  7D                 	db	125
  2002  009A41  7B                 	db	123
  2003  009A42  79                 	db	121
  2004  009A43  77                 	db	119
  2005  009A44  75                 	db	117
  2006  009A45  74                 	db	116
  2007  009A46  72                 	db	114
  2008  009A47  71                 	db	113
  2009  009A48  6F                 	db	111
  2010  009A49  6E                 	db	110
  2011  009A4A  6C                 	db	108
  2012  009A4B  6B                 	db	107
  2013  009A4C  6A                 	db	106
  2014  009A4D  68                 	db	104
  2015  009A4E  67                 	db	103
  2016  009A4F  66                 	db	102
  2017  009A50  65                 	db	101
  2018  009A51  64                 	db	100
  2019  009A52  62                 	db	98
  2020  009A53  61                 	db	97
  2021  009A54  60                 	db	96
  2022  009A55  5F                 	db	95
  2023  009A56  5E                 	db	94
  2024  009A57  5D                 	db	93
  2025  009A58  5C                 	db	92
  2026  009A59  5B                 	db	91
  2027  009A5A  59                 	db	89
  2028  009A5B  57                 	db	87
  2029  009A5C  56                 	db	86
  2030  009A5D  54                 	db	84
  2031  009A5E  53                 	db	83
  2032  009A5F  51                 	db	81
  2033  009A60  50                 	db	80
  2034  009A61  4F                 	db	79
  2035  009A62  4E                 	db	78
  2036  009A63  4C                 	db	76
  2037  009A64  4B                 	db	75
  2038  009A65  4A                 	db	74
  2039  009A66  49                 	db	73
  2040  009A67  48                 	db	72
  2041  009A68  47                 	db	71
  2042  009A69  46                 	db	70
  2043  009A6A  45                 	db	69
  2044  009A6B  44                 	db	68
  2045  009A6C  43                 	db	67
  2046  009A6D  42                 	db	66
  2047  009A6E  41                 	db	65
  2048  009A6F  40                 	db	64
  2049  009A70  3F                 	db	63
  2050  009A71  FE                 	db	254
  2051  009A72  FB                 	db	251
  2052  009A73  F8                 	db	248
  2053  009A74  F6                 	db	246
  2054  009A75  F3                 	db	243
  2055  009A76  F0                 	db	240
  2056  009A77  EE                 	db	238
  2057  009A78  EC                 	db	236
  2058  009A79  E9                 	db	233
  2059  009A7A  E7                 	db	231
  2060  009A7B  E5                 	db	229
  2061  009A7C  E3                 	db	227
  2062  009A7D  E0                 	db	224
  2063  009A7E  DE                 	db	222
  2064  009A7F  DC                 	db	220
  2065  009A80  DA                 	db	218
  2066  009A81  D8                 	db	216
  2067  009A82  D7                 	db	215
  2068  009A83  D5                 	db	213
  2069  009A84  D3                 	db	211
  2070  009A85  D1                 	db	209
  2071  009A86  CF                 	db	207
  2072  009A87  CE                 	db	206
  2073  009A88  CC                 	db	204
  2074  009A89  CA                 	db	202
  2075  009A8A  C9                 	db	201
  2076  009A8B  C7                 	db	199
  2077  009A8C  C6                 	db	198
  2078  009A8D  C4                 	db	196
  2079  009A8E  C3                 	db	195
  2080  009A8F  C1                 	db	193
  2081  009A90  C0                 	db	192
  2082  009A91  BE                 	db	190
  2083  009A92  BD                 	db	189
  2084  009A93  BC                 	db	188
  2085  009A94  BA                 	db	186
  2086  009A95  B8                 	db	184
  2087  009A96  B6                 	db	182
  2088  009A97  B4                 	db	180
  2089  009A98  B3                 	db	179
  2090  009A99  B1                 	db	177
  2091  009A9A  AF                 	db	175
  2092  009A9B  AE                 	db	174
  2093  009A9C  AC                 	db	172
  2094  009A9D  AA                 	db	170
  2095  009A9E  A9                 	db	169
  2096  009A9F  A7                 	db	167
  2097  009AA0  A6                 	db	166
  2098  009AA1  A4                 	db	164
  2099  009AA2  A3                 	db	163
  2100  009AA3  A1                 	db	161
  2101  009AA4  A0                 	db	160
  2102  009AA5  9F                 	db	159
  2103  009AA6  9D                 	db	157
  2104  009AA7  9C                 	db	156
  2105  009AA8  9B                 	db	155
  2106  009AA9  9A                 	db	154
  2107  009AAA  98                 	db	152
  2108  009AAB  97                 	db	151
  2109  009AAC  96                 	db	150
  2110  009AAD  95                 	db	149
  2111  009AAE  94                 	db	148
  2112  009AAF  93                 	db	147
  2113  009AB0  92                 	db	146
  2114  009AB1  90                 	db	144
  2115  009AB2  8F                 	db	143
  2116  009AB3  8E                 	db	142
  2117  009AB4  8D                 	db	141
  2118  009AB5  8C                 	db	140
  2119  009AB6  8B                 	db	139
  2120  009AB7  8A                 	db	138
  2121  009AB8  89                 	db	137
  2122  009AB9  88                 	db	136
  2123  009ABA  87                 	db	135
  2124  009ABB  86                 	db	134
  2125  009ABC  85                 	db	133
  2126  009ABD  84                 	db	132
  2127  009ABE  83                 	db	131
  2128  009ABF  82                 	db	130
  2129  009AC0  81                 	db	129
  2130  009AC1  80                 	db	128
  2131  009AC2  7F                 	db	127
  2132  009AC3  7E                 	db	126
  2133  009AC4  7D                 	db	125
  2134  009AC5  7C                 	db	124
  2135  009AC6  7B                 	db	123
  2136  009AC7  7A                 	db	122
  2137  009AC8  79                 	db	121
  2138  009AC9  78                 	db	120
  2139  009ACA  77                 	db	119
  2140  009ACB  76                 	db	118
  2141  009ACC  75                 	db	117
  2142  009ACD  74                 	db	116
  2143  009ACE  73                 	db	115
  2144  009ACF  72                 	db	114
  2145  009AD0  71                 	db	113
  2146  009AD1  70                 	db	112
  2147  009AD2  6F                 	db	111
  2148  009AD3  6E                 	db	110
  2149  009AD4  6D                 	db	109
  2150  009AD5  6C                 	db	108
  2151  009AD6  6B                 	db	107
  2152  009AD7  6A                 	db	106
  2153  009AD8  69                 	db	105
  2154  009AD9  68                 	db	104
  2155  009ADA  67                 	db	103
  2156  009ADB  66                 	db	102
  2157  009ADC  65                 	db	101
  2158  009ADD  64                 	db	100
  2159  009ADE  63                 	db	99
  2160  009ADF  62                 	db	98
  2161  009AE0  61                 	db	97
  2162  009AE1  60                 	db	96
  2163  009AE2  5F                 	db	95
  2164  009AE3  5E                 	db	94
  2165  009AE4  5D                 	db	93
  2166  009AE5  5C                 	db	92
  2167  009AE6  5B                 	db	91
  2168  009AE7  5A                 	db	90
  2169  009AE8  59                 	db	89
  2170  009AE9  58                 	db	88
  2171  009AEA  57                 	db	87
  2172  009AEB  56                 	db	86
  2173  009AEC  55                 	db	85
  2174  009AED  54                 	db	84
  2175  009AEE  53                 	db	83
  2176  009AEF  52                 	db	82
  2177  009AF0  51                 	db	81
  2178  009AF1  50                 	db	80
  2179  009AF2  4F                 	db	79
  2180  009AF3  4E                 	db	78
  2181  009AF4  4D                 	db	77
  2182  009AF5  4C                 	db	76
  2183  009AF6  4B                 	db	75
  2184  009AF7  4A                 	db	74
  2185  009AF8  49                 	db	73
  2186  009AF9  48                 	db	72
  2187  009AFA  47                 	db	71
  2188  009AFB  46                 	db	70
  2189  009AFC  45                 	db	69
  2190  009AFD  44                 	db	68
  2191  009AFE  43                 	db	67
  2192  009AFF  42                 	db	66
  2193  009B00  41                 	db	65
  2194  009B01  40                 	db	64
  2195  009B02  3F                 	db	63
  2196  009B03  FF                 	db	255
  2197  009B04  FE                 	db	254
  2198  009B05  FD                 	db	253
  2199  009B06  FC                 	db	252
  2200  009B07  FB                 	db	251
  2201  009B08  FA                 	db	250
  2202  009B09  F9                 	db	249
  2203  009B0A  F8                 	db	248
  2204  009B0B  F7                 	db	247
  2205  009B0C  F6                 	db	246
  2206  009B0D  F5                 	db	245
  2207  009B0E  F4                 	db	244
  2208  009B0F  F3                 	db	243
  2209  009B10  F2                 	db	242
  2210  009B11  F1                 	db	241
  2211  009B12  F0                 	db	240
  2212  009B13  EF                 	db	239
  2213  009B14  EE                 	db	238
  2214  009B15  ED                 	db	237
  2215  009B16  EC                 	db	236
  2216  009B17  EB                 	db	235
  2217  009B18  EA                 	db	234
  2218  009B19  E9                 	db	233
  2219  009B1A  E8                 	db	232
  2220  009B1B  E7                 	db	231
  2221  009B1C  E6                 	db	230
  2222  009B1D  E5                 	db	229
  2223  009B1E  E4                 	db	228
  2224  009B1F  E3                 	db	227
  2225  009B20  E2                 	db	226
  2226  009B21  E1                 	db	225
  2227  009B22  E0                 	db	224
  2228  009B23  DF                 	db	223
  2229  009B24  DE                 	db	222
  2230  009B25  DD                 	db	221
  2231  009B26  DC                 	db	220
  2232  009B27  DB                 	db	219
  2233  009B28  DA                 	db	218
  2234  009B29  D9                 	db	217
  2235  009B2A  D8                 	db	216
  2236  009B2B  D7                 	db	215
  2237  009B2C  D6                 	db	214
  2238  009B2D  D5                 	db	213
  2239  009B2E  D4                 	db	212
  2240  009B2F  D3                 	db	211
  2241  009B30  D2                 	db	210
  2242  009B31  D1                 	db	209
  2243  009B32  D0                 	db	208
  2244  009B33  CF                 	db	207
  2245  009B34  CE                 	db	206
  2246  009B35  CD                 	db	205
  2247  009B36  CC                 	db	204
  2248  009B37  CB                 	db	203
  2249  009B38  CA                 	db	202
  2250  009B39  C9                 	db	201
  2251  009B3A  C8                 	db	200
  2252  009B3B  C7                 	db	199
  2253  009B3C  C6                 	db	198
  2254  009B3D  C5                 	db	197
  2255  009B3E  C4                 	db	196
  2256  009B3F  C3                 	db	195
  2257  009B40  C2                 	db	194
  2258  009B41  C1                 	db	193
  2259  009B42  C0                 	db	192
  2260  009B43  BF                 	db	191
  2261  009B44  BE                 	db	190
  2262  009B45  BD                 	db	189
  2263  009B46  BC                 	db	188
  2264  009B47  BB                 	db	187
  2265  009B48  BA                 	db	186
  2266  009B49  B9                 	db	185
  2267  009B4A  B8                 	db	184
  2268  009B4B  B7                 	db	183
  2269  009B4C  B6                 	db	182
  2270  009B4D  B5                 	db	181
  2271  009B4E  B4                 	db	180
  2272  009B4F  B3                 	db	179
  2273  009B50  B2                 	db	178
  2274  009B51  B1                 	db	177
  2275  009B52  B0                 	db	176
  2276  009B53  AF                 	db	175
  2277  009B54  AE                 	db	174
  2278  009B55  AD                 	db	173
  2279  009B56  AC                 	db	172
  2280  009B57  AB                 	db	171
  2281  009B58  AA                 	db	170
  2282  009B59  A9                 	db	169
  2283  009B5A  A8                 	db	168
  2284  009B5B  A7                 	db	167
  2285  009B5C  A6                 	db	166
  2286  009B5D  A5                 	db	165
  2287  009B5E  A4                 	db	164
  2288  009B5F  A3                 	db	163
  2289  009B60  A2                 	db	162
  2290  009B61  A1                 	db	161
  2291  009B62  A0                 	db	160
  2292  009B63  9F                 	db	159
  2293  009B64  9E                 	db	158
  2294  009B65  9D                 	db	157
  2295  009B66  9C                 	db	156
  2296  009B67  9B                 	db	155
  2297  009B68  9A                 	db	154
  2298  009B69  99                 	db	153
  2299  009B6A  98                 	db	152
  2300  009B6B  97                 	db	151
  2301  009B6C  96                 	db	150
  2302  009B6D  95                 	db	149
  2303  009B6E  94                 	db	148
  2304  009B6F  93                 	db	147
  2305  009B70  92                 	db	146
  2306  009B71  91                 	db	145
  2307  009B72  90                 	db	144
  2308  009B73  8F                 	db	143
  2309  009B74  8E                 	db	142
  2310  009B75  8D                 	db	141
  2311  009B76  8C                 	db	140
  2312  009B77  8B                 	db	139
  2313  009B78  8A                 	db	138
  2314  009B79  89                 	db	137
  2315  009B7A  88                 	db	136
  2316  009B7B  87                 	db	135
  2317  009B7C  86                 	db	134
  2318  009B7D  85                 	db	133
  2319  009B7E  84                 	db	132
  2320  009B7F  83                 	db	131
  2321  009B80  82                 	db	130
  2322  009B81  81                 	db	129
  2323  009B82  80                 	db	128
  2324  009B83  7F                 	db	127
  2325  009B84  7E                 	db	126
  2326  009B85  7D                 	db	125
  2327  009B86  7C                 	db	124
  2328  009B87  7B                 	db	123
  2329  009B88  7A                 	db	122
  2330  009B89  79                 	db	121
  2331  009B8A  78                 	db	120
  2332  009B8B  77                 	db	119
  2333  009B8C  76                 	db	118
  2334  009B8D  75                 	db	117
  2335  009B8E  74                 	db	116
  2336  009B8F  73                 	db	115
  2337  009B90  72                 	db	114
  2338  009B91  71                 	db	113
  2339  009B92  70                 	db	112
  2340  009B93  6F                 	db	111
  2341  009B94  6E                 	db	110
  2342  009B95  6D                 	db	109
  2343  009B96  6C                 	db	108
  2344  009B97  6B                 	db	107
  2345  009B98  6A                 	db	106
  2346  009B99  69                 	db	105
  2347  009B9A  68                 	db	104
  2348  009B9B  67                 	db	103
  2349  009B9C  66                 	db	102
  2350  009B9D  65                 	db	101
  2351  009B9E  64                 	db	100
  2352  009B9F  63                 	db	99
  2353  009BA0  62                 	db	98
  2354  009BA1  61                 	db	97
  2355  009BA2  60                 	db	96
  2356  009BA3  5F                 	db	95
  2357  009BA4  5E                 	db	94
  2358  009BA5  5D                 	db	93
  2359  009BA6  5C                 	db	92
  2360  009BA7  5B                 	db	91
  2361  009BA8  5A                 	db	90
  2362  009BA9  59                 	db	89
  2363  009BAA  58                 	db	88
  2364  009BAB  57                 	db	87
  2365  009BAC  56                 	db	86
  2366  009BAD  55                 	db	85
  2367  009BAE  54                 	db	84
  2368  009BAF  53                 	db	83
  2369  009BB0  52                 	db	82
  2370  009BB1  51                 	db	81
  2371  009BB2  50                 	db	80
  2372  009BB3  4F                 	db	79
  2373  009BB4  4E                 	db	78
  2374  009BB5  4D                 	db	77
  2375  009BB6  4C                 	db	76
  2376  009BB7  4B                 	db	75
  2377  009BB8  4A                 	db	74
  2378  009BB9  49                 	db	73
  2379  009BBA  48                 	db	72
  2380  009BBB  47                 	db	71
  2381  009BBC  46                 	db	70
  2382  009BBD  45                 	db	69
  2383  009BBE  44                 	db	68
  2384  009BBF  43                 	db	67
  2385  009BC0  42                 	db	66
  2386  009BC1  41                 	db	65
  2387  009BC2  40                 	db	64
  2388  009BC3  3F                 	db	63
  2389  009BC4  FF                 	db	255
  2390  009BC5  FE                 	db	254
  2391  009BC6  FD                 	db	253
  2392  009BC7  FC                 	db	252
  2393  009BC8  FB                 	db	251
  2394  009BC9  FA                 	db	250
  2395  009BCA  F9                 	db	249
  2396  009BCB  F8                 	db	248
  2397  009BCC  F7                 	db	247
  2398  009BCD  F6                 	db	246
  2399  009BCE  F5                 	db	245
  2400  009BCF  F4                 	db	244
  2401  009BD0  F3                 	db	243
  2402  009BD1  F2                 	db	242
  2403  009BD2  F1                 	db	241
  2404  009BD3  F0                 	db	240
  2405  009BD4  EF                 	db	239
  2406  009BD5  EE                 	db	238
  2407  009BD6  ED                 	db	237
  2408  009BD7  EC                 	db	236
  2409  009BD8  EB                 	db	235
  2410  009BD9  EA                 	db	234
  2411  009BDA  E9                 	db	233
  2412  009BDB  E8                 	db	232
  2413  009BDC  E7                 	db	231
  2414  009BDD  E6                 	db	230
  2415  009BDE  E5                 	db	229
  2416  009BDF  E4                 	db	228
  2417  009BE0  E3                 	db	227
  2418  009BE1  E2                 	db	226
  2419  009BE2  E1                 	db	225
  2420  009BE3  E0                 	db	224
  2421  009BE4  DF                 	db	223
  2422  009BE5  DE                 	db	222
  2423  009BE6  DD                 	db	221
  2424  009BE7  DC                 	db	220
  2425  009BE8  DB                 	db	219
  2426  009BE9  DA                 	db	218
  2427  009BEA  D9                 	db	217
  2428  009BEB  D8                 	db	216
  2429  009BEC  D7                 	db	215
  2430  009BED  D6                 	db	214
  2431  009BEE  D5                 	db	213
  2432  009BEF  D4                 	db	212
  2433  009BF0  D3                 	db	211
  2434  009BF1  D2                 	db	210
  2435  009BF2  D1                 	db	209
  2436  009BF3  D0                 	db	208
  2437  009BF4  CF                 	db	207
  2438  009BF5  CE                 	db	206
  2439  009BF6  CD                 	db	205
  2440  009BF7  CC                 	db	204
  2441  009BF8  CB                 	db	203
  2442  009BF9  CA                 	db	202
  2443  009BFA  C9                 	db	201
  2444  009BFB  C8                 	db	200
  2445  009BFC  C7                 	db	199
  2446  009BFD                     __end_of_motor_period_lookup:
  2447                           	opt stack 0
  2448  009BFD                     _motor_prescaler_lookup:
  2449                           	opt stack 0
  2450  009BFD  02                 	db	2
  2451  009BFE  02                 	db	2
  2452  009BFF  02                 	db	2
  2453  009C00  02                 	db	2
  2454  009C01  02                 	db	2
  2455  009C02  02                 	db	2
  2456  009C03  02                 	db	2
  2457  009C04  02                 	db	2
  2458  009C05  02                 	db	2
  2459  009C06  02                 	db	2
  2460  009C07  02                 	db	2
  2461  009C08  02                 	db	2
  2462  009C09  02                 	db	2
  2463  009C0A  02                 	db	2
  2464  009C0B  02                 	db	2
  2465  009C0C  02                 	db	2
  2466  009C0D  02                 	db	2
  2467  009C0E  02                 	db	2
  2468  009C0F  02                 	db	2
  2469  009C10  02                 	db	2
  2470  009C11  02                 	db	2
  2471  009C12  02                 	db	2
  2472  009C13  02                 	db	2
  2473  009C14  02                 	db	2
  2474  009C15  02                 	db	2
  2475  009C16  02                 	db	2
  2476  009C17  02                 	db	2
  2477  009C18  02                 	db	2
  2478  009C19  02                 	db	2
  2479  009C1A  02                 	db	2
  2480  009C1B  02                 	db	2
  2481  009C1C  02                 	db	2
  2482  009C1D  02                 	db	2
  2483  009C1E  02                 	db	2
  2484  009C1F  02                 	db	2
  2485  009C20  02                 	db	2
  2486  009C21  02                 	db	2
  2487  009C22  02                 	db	2
  2488  009C23  02                 	db	2
  2489  009C24  02                 	db	2
  2490  009C25  02                 	db	2
  2491  009C26  02                 	db	2
  2492  009C27  02                 	db	2
  2493  009C28  02                 	db	2
  2494  009C29  02                 	db	2
  2495  009C2A  02                 	db	2
  2496  009C2B  02                 	db	2
  2497  009C2C  02                 	db	2
  2498  009C2D  02                 	db	2
  2499  009C2E  02                 	db	2
  2500  009C2F  02                 	db	2
  2501  009C30  02                 	db	2
  2502  009C31  02                 	db	2
  2503  009C32  02                 	db	2
  2504  009C33  02                 	db	2
  2505  009C34  02                 	db	2
  2506  009C35  02                 	db	2
  2507  009C36  02                 	db	2
  2508  009C37  02                 	db	2
  2509  009C38  02                 	db	2
  2510  009C39  02                 	db	2
  2511  009C3A  02                 	db	2
  2512  009C3B  02                 	db	2
  2513  009C3C  02                 	db	2
  2514  009C3D  02                 	db	2
  2515  009C3E  02                 	db	2
  2516  009C3F  02                 	db	2
  2517  009C40  02                 	db	2
  2518  009C41  02                 	db	2
  2519  009C42  02                 	db	2
  2520  009C43  02                 	db	2
  2521  009C44  02                 	db	2
  2522  009C45  02                 	db	2
  2523  009C46  02                 	db	2
  2524  009C47  02                 	db	2
  2525  009C48  02                 	db	2
  2526  009C49  02                 	db	2
  2527  009C4A  02                 	db	2
  2528  009C4B  02                 	db	2
  2529  009C4C  02                 	db	2
  2530  009C4D  02                 	db	2
  2531  009C4E  02                 	db	2
  2532  009C4F  02                 	db	2
  2533  009C50  02                 	db	2
  2534  009C51  02                 	db	2
  2535  009C52  02                 	db	2
  2536  009C53  02                 	db	2
  2537  009C54  02                 	db	2
  2538  009C55  02                 	db	2
  2539  009C56  02                 	db	2
  2540  009C57  02                 	db	2
  2541  009C58  02                 	db	2
  2542  009C59  02                 	db	2
  2543  009C5A  02                 	db	2
  2544  009C5B  02                 	db	2
  2545  009C5C  02                 	db	2
  2546  009C5D  02                 	db	2
  2547  009C5E  02                 	db	2
  2548  009C5F  02                 	db	2
  2549  009C60  02                 	db	2
  2550  009C61  02                 	db	2
  2551  009C62  02                 	db	2
  2552  009C63  02                 	db	2
  2553  009C64  02                 	db	2
  2554  009C65  02                 	db	2
  2555  009C66  02                 	db	2
  2556  009C67  02                 	db	2
  2557  009C68  02                 	db	2
  2558  009C69  02                 	db	2
  2559  009C6A  02                 	db	2
  2560  009C6B  02                 	db	2
  2561  009C6C  02                 	db	2
  2562  009C6D  02                 	db	2
  2563  009C6E  02                 	db	2
  2564  009C6F  02                 	db	2
  2565  009C70  02                 	db	2
  2566  009C71  02                 	db	2
  2567  009C72  02                 	db	2
  2568  009C73  02                 	db	2
  2569  009C74  02                 	db	2
  2570  009C75  02                 	db	2
  2571  009C76  02                 	db	2
  2572  009C77  02                 	db	2
  2573  009C78  02                 	db	2
  2574  009C79  02                 	db	2
  2575  009C7A  02                 	db	2
  2576  009C7B  02                 	db	2
  2577  009C7C  02                 	db	2
  2578  009C7D  02                 	db	2
  2579  009C7E  02                 	db	2
  2580  009C7F  02                 	db	2
  2581  009C80  02                 	db	2
  2582  009C81  02                 	db	2
  2583  009C82  02                 	db	2
  2584  009C83  02                 	db	2
  2585  009C84  02                 	db	2
  2586  009C85  02                 	db	2
  2587  009C86  02                 	db	2
  2588  009C87  02                 	db	2
  2589  009C88  02                 	db	2
  2590  009C89  02                 	db	2
  2591  009C8A  02                 	db	2
  2592  009C8B  02                 	db	2
  2593  009C8C  02                 	db	2
  2594  009C8D  02                 	db	2
  2595  009C8E  02                 	db	2
  2596  009C8F  02                 	db	2
  2597  009C90  02                 	db	2
  2598  009C91  02                 	db	2
  2599  009C92  02                 	db	2
  2600  009C93  02                 	db	2
  2601  009C94  02                 	db	2
  2602  009C95  02                 	db	2
  2603  009C96  02                 	db	2
  2604  009C97  02                 	db	2
  2605  009C98  02                 	db	2
  2606  009C99  02                 	db	2
  2607  009C9A  02                 	db	2
  2608  009C9B  02                 	db	2
  2609  009C9C  02                 	db	2
  2610  009C9D  02                 	db	2
  2611  009C9E  02                 	db	2
  2612  009C9F  02                 	db	2
  2613  009CA0  02                 	db	2
  2614  009CA1  02                 	db	2
  2615  009CA2  02                 	db	2
  2616  009CA3  02                 	db	2
  2617  009CA4  02                 	db	2
  2618  009CA5  02                 	db	2
  2619  009CA6  02                 	db	2
  2620  009CA7  02                 	db	2
  2621  009CA8  02                 	db	2
  2622  009CA9  02                 	db	2
  2623  009CAA  02                 	db	2
  2624  009CAB  02                 	db	2
  2625  009CAC  02                 	db	2
  2626  009CAD  02                 	db	2
  2627  009CAE  02                 	db	2
  2628  009CAF  02                 	db	2
  2629  009CB0  02                 	db	2
  2630  009CB1  02                 	db	2
  2631  009CB2  02                 	db	2
  2632  009CB3  02                 	db	2
  2633  009CB4  02                 	db	2
  2634  009CB5  02                 	db	2
  2635  009CB6  02                 	db	2
  2636  009CB7  02                 	db	2
  2637  009CB8  02                 	db	2
  2638  009CB9  02                 	db	2
  2639  009CBA  02                 	db	2
  2640  009CBB  02                 	db	2
  2641  009CBC  02                 	db	2
  2642  009CBD  02                 	db	2
  2643  009CBE  02                 	db	2
  2644  009CBF  02                 	db	2
  2645  009CC0  02                 	db	2
  2646  009CC1  02                 	db	2
  2647  009CC2  02                 	db	2
  2648  009CC3  02                 	db	2
  2649  009CC4  02                 	db	2
  2650  009CC5  02                 	db	2
  2651  009CC6  02                 	db	2
  2652  009CC7  02                 	db	2
  2653  009CC8  02                 	db	2
  2654  009CC9  02                 	db	2
  2655  009CCA  02                 	db	2
  2656  009CCB  02                 	db	2
  2657  009CCC  02                 	db	2
  2658  009CCD  02                 	db	2
  2659  009CCE  02                 	db	2
  2660  009CCF  02                 	db	2
  2661  009CD0  02                 	db	2
  2662  009CD1  02                 	db	2
  2663  009CD2  02                 	db	2
  2664  009CD3  02                 	db	2
  2665  009CD4  02                 	db	2
  2666  009CD5  02                 	db	2
  2667  009CD6  02                 	db	2
  2668  009CD7  02                 	db	2
  2669  009CD8  02                 	db	2
  2670  009CD9  02                 	db	2
  2671  009CDA  02                 	db	2
  2672  009CDB  02                 	db	2
  2673  009CDC  02                 	db	2
  2674  009CDD  02                 	db	2
  2675  009CDE  02                 	db	2
  2676  009CDF  02                 	db	2
  2677  009CE0  02                 	db	2
  2678  009CE1  02                 	db	2
  2679  009CE2  02                 	db	2
  2680  009CE3  02                 	db	2
  2681  009CE4  02                 	db	2
  2682  009CE5  02                 	db	2
  2683  009CE6  02                 	db	2
  2684  009CE7  02                 	db	2
  2685  009CE8  02                 	db	2
  2686  009CE9  02                 	db	2
  2687  009CEA  01                 	db	1
  2688  009CEB  01                 	db	1
  2689  009CEC  01                 	db	1
  2690  009CED  01                 	db	1
  2691  009CEE  01                 	db	1
  2692  009CEF  01                 	db	1
  2693  009CF0  01                 	db	1
  2694  009CF1  01                 	db	1
  2695  009CF2  01                 	db	1
  2696  009CF3  01                 	db	1
  2697  009CF4  01                 	db	1
  2698  009CF5  01                 	db	1
  2699  009CF6  01                 	db	1
  2700  009CF7  01                 	db	1
  2701  009CF8  01                 	db	1
  2702  009CF9  01                 	db	1
  2703  009CFA  01                 	db	1
  2704  009CFB  01                 	db	1
  2705  009CFC  01                 	db	1
  2706  009CFD  01                 	db	1
  2707  009CFE  01                 	db	1
  2708  009CFF  01                 	db	1
  2709  009D00  01                 	db	1
  2710  009D01  01                 	db	1
  2711  009D02  01                 	db	1
  2712  009D03  01                 	db	1
  2713  009D04  01                 	db	1
  2714  009D05  01                 	db	1
  2715  009D06  01                 	db	1
  2716  009D07  01                 	db	1
  2717  009D08  01                 	db	1
  2718  009D09  01                 	db	1
  2719  009D0A  01                 	db	1
  2720  009D0B  01                 	db	1
  2721  009D0C  01                 	db	1
  2722  009D0D  01                 	db	1
  2723  009D0E  01                 	db	1
  2724  009D0F  01                 	db	1
  2725  009D10  01                 	db	1
  2726  009D11  01                 	db	1
  2727  009D12  01                 	db	1
  2728  009D13  01                 	db	1
  2729  009D14  01                 	db	1
  2730  009D15  01                 	db	1
  2731  009D16  01                 	db	1
  2732  009D17  01                 	db	1
  2733  009D18  01                 	db	1
  2734  009D19  01                 	db	1
  2735  009D1A  01                 	db	1
  2736  009D1B  01                 	db	1
  2737  009D1C  01                 	db	1
  2738  009D1D  01                 	db	1
  2739  009D1E  01                 	db	1
  2740  009D1F  01                 	db	1
  2741  009D20  01                 	db	1
  2742  009D21  01                 	db	1
  2743  009D22  01                 	db	1
  2744  009D23  01                 	db	1
  2745  009D24  01                 	db	1
  2746  009D25  01                 	db	1
  2747  009D26  01                 	db	1
  2748  009D27  01                 	db	1
  2749  009D28  01                 	db	1
  2750  009D29  01                 	db	1
  2751  009D2A  01                 	db	1
  2752  009D2B  01                 	db	1
  2753  009D2C  01                 	db	1
  2754  009D2D  01                 	db	1
  2755  009D2E  01                 	db	1
  2756  009D2F  01                 	db	1
  2757  009D30  01                 	db	1
  2758  009D31  01                 	db	1
  2759  009D32  01                 	db	1
  2760  009D33  01                 	db	1
  2761  009D34  01                 	db	1
  2762  009D35  01                 	db	1
  2763  009D36  01                 	db	1
  2764  009D37  01                 	db	1
  2765  009D38  01                 	db	1
  2766  009D39  01                 	db	1
  2767  009D3A  01                 	db	1
  2768  009D3B  01                 	db	1
  2769  009D3C  01                 	db	1
  2770  009D3D  01                 	db	1
  2771  009D3E  01                 	db	1
  2772  009D3F  01                 	db	1
  2773  009D40  01                 	db	1
  2774  009D41  01                 	db	1
  2775  009D42  01                 	db	1
  2776  009D43  01                 	db	1
  2777  009D44  01                 	db	1
  2778  009D45  01                 	db	1
  2779  009D46  01                 	db	1
  2780  009D47  01                 	db	1
  2781  009D48  01                 	db	1
  2782  009D49  01                 	db	1
  2783  009D4A  01                 	db	1
  2784  009D4B  01                 	db	1
  2785  009D4C  01                 	db	1
  2786  009D4D  01                 	db	1
  2787  009D4E  01                 	db	1
  2788  009D4F  01                 	db	1
  2789  009D50  01                 	db	1
  2790  009D51  01                 	db	1
  2791  009D52  01                 	db	1
  2792  009D53  01                 	db	1
  2793  009D54  01                 	db	1
  2794  009D55  01                 	db	1
  2795  009D56  01                 	db	1
  2796  009D57  01                 	db	1
  2797  009D58  01                 	db	1
  2798  009D59  01                 	db	1
  2799  009D5A  01                 	db	1
  2800  009D5B  01                 	db	1
  2801  009D5C  01                 	db	1
  2802  009D5D  01                 	db	1
  2803  009D5E  01                 	db	1
  2804  009D5F  01                 	db	1
  2805  009D60  01                 	db	1
  2806  009D61  01                 	db	1
  2807  009D62  01                 	db	1
  2808  009D63  01                 	db	1
  2809  009D64  01                 	db	1
  2810  009D65  01                 	db	1
  2811  009D66  01                 	db	1
  2812  009D67  01                 	db	1
  2813  009D68  01                 	db	1
  2814  009D69  01                 	db	1
  2815  009D6A  01                 	db	1
  2816  009D6B  01                 	db	1
  2817  009D6C  01                 	db	1
  2818  009D6D  01                 	db	1
  2819  009D6E  01                 	db	1
  2820  009D6F  01                 	db	1
  2821  009D70  01                 	db	1
  2822  009D71  01                 	db	1
  2823  009D72  01                 	db	1
  2824  009D73  01                 	db	1
  2825  009D74  01                 	db	1
  2826  009D75  01                 	db	1
  2827  009D76  01                 	db	1
  2828  009D77  01                 	db	1
  2829  009D78  01                 	db	1
  2830  009D79  01                 	db	1
  2831  009D7A  01                 	db	1
  2832  009D7B  01                 	db	1
  2833  009D7C  01                 	db	1
  2834  009D7D  01                 	db	1
  2835  009D7E  01                 	db	1
  2836  009D7F  01                 	db	1
  2837  009D80  01                 	db	1
  2838  009D81  01                 	db	1
  2839  009D82  01                 	db	1
  2840  009D83  01                 	db	1
  2841  009D84  01                 	db	1
  2842  009D85  01                 	db	1
  2843  009D86  01                 	db	1
  2844  009D87  01                 	db	1
  2845  009D88  01                 	db	1
  2846  009D89  01                 	db	1
  2847  009D8A  01                 	db	1
  2848  009D8B  01                 	db	1
  2849  009D8C  01                 	db	1
  2850  009D8D  01                 	db	1
  2851  009D8E  01                 	db	1
  2852  009D8F  01                 	db	1
  2853  009D90  01                 	db	1
  2854  009D91  01                 	db	1
  2855  009D92  01                 	db	1
  2856  009D93  01                 	db	1
  2857  009D94  01                 	db	1
  2858  009D95  01                 	db	1
  2859  009D96  01                 	db	1
  2860  009D97  01                 	db	1
  2861  009D98  01                 	db	1
  2862  009D99  01                 	db	1
  2863  009D9A  01                 	db	1
  2864  009D9B  01                 	db	1
  2865  009D9C  01                 	db	1
  2866  009D9D  01                 	db	1
  2867  009D9E  01                 	db	1
  2868  009D9F  01                 	db	1
  2869  009DA0  01                 	db	1
  2870  009DA1  01                 	db	1
  2871  009DA2  01                 	db	1
  2872  009DA3  01                 	db	1
  2873  009DA4  01                 	db	1
  2874  009DA5  01                 	db	1
  2875  009DA6  01                 	db	1
  2876  009DA7  01                 	db	1
  2877  009DA8  01                 	db	1
  2878  009DA9  01                 	db	1
  2879  009DAA  01                 	db	1
  2880  009DAB  00                 	db	0
  2881  009DAC  00                 	db	0
  2882  009DAD  00                 	db	0
  2883  009DAE  00                 	db	0
  2884  009DAF  00                 	db	0
  2885  009DB0  00                 	db	0
  2886  009DB1  00                 	db	0
  2887  009DB2  00                 	db	0
  2888  009DB3  00                 	db	0
  2889  009DB4  00                 	db	0
  2890  009DB5  00                 	db	0
  2891  009DB6  00                 	db	0
  2892  009DB7  00                 	db	0
  2893  009DB8  00                 	db	0
  2894  009DB9  00                 	db	0
  2895  009DBA  00                 	db	0
  2896  009DBB  00                 	db	0
  2897  009DBC  00                 	db	0
  2898  009DBD  00                 	db	0
  2899  009DBE  00                 	db	0
  2900  009DBF  00                 	db	0
  2901  009DC0  00                 	db	0
  2902  009DC1  00                 	db	0
  2903  009DC2  00                 	db	0
  2904  009DC3  00                 	db	0
  2905  009DC4  00                 	db	0
  2906  009DC5  00                 	db	0
  2907  009DC6  00                 	db	0
  2908  009DC7  00                 	db	0
  2909  009DC8  00                 	db	0
  2910  009DC9  00                 	db	0
  2911  009DCA  00                 	db	0
  2912  009DCB  00                 	db	0
  2913  009DCC  00                 	db	0
  2914  009DCD  00                 	db	0
  2915  009DCE  00                 	db	0
  2916  009DCF  00                 	db	0
  2917  009DD0  00                 	db	0
  2918  009DD1  00                 	db	0
  2919  009DD2  00                 	db	0
  2920  009DD3  00                 	db	0
  2921  009DD4  00                 	db	0
  2922  009DD5  00                 	db	0
  2923  009DD6  00                 	db	0
  2924  009DD7  00                 	db	0
  2925  009DD8  00                 	db	0
  2926  009DD9  00                 	db	0
  2927  009DDA  00                 	db	0
  2928  009DDB  00                 	db	0
  2929  009DDC  00                 	db	0
  2930  009DDD  00                 	db	0
  2931  009DDE  00                 	db	0
  2932  009DDF  00                 	db	0
  2933  009DE0  00                 	db	0
  2934  009DE1  00                 	db	0
  2935  009DE2  00                 	db	0
  2936  009DE3  00                 	db	0
  2937  009DE4                     __end_of_motor_prescaler_lookup:
  2938                           	opt stack 0
  2939  009DE4                     _USB_SD_Ptr:
  2940                           	opt stack 0
  2941  009DE4  E5                 	db	low _sd000
  2942  009DE5  A2                 	db	high _sd000
  2943  009DE6  FE                 	db	low _sd001
  2944  009DE7  A0                 	db	high _sd001
  2945  009DE8  32                 	db	low _sd002
  2946  009DE9  A1                 	db	high _sd002
  2947  009DEA  A1                 	db	low _sd003
  2948  009DEB  A1                 	db	high _sd003
  2949  009DEC                     __end_of_USB_SD_Ptr:
  2950                           	opt stack 0
  2951  009DEC                     _USB_CD_Ptr:
  2952                           	opt stack 0
  2953  009DEC  BE                 	db	low _configDescriptor1
  2954  009DED  A0                 	db	high _configDescriptor1
  2955  009DEE                     __end_of_USB_CD_Ptr:
  2956                           	opt stack 0
  2957  009DEE                     _dc_manual:
  2958                           	opt stack 0
  2959  009DEE  4D                 	db	77
  2960  009DEF  61                 	db	97
  2961  009DF0  6E                 	db	110
  2962  009DF1  75                 	db	117
  2963  009DF2  61                 	db	97
  2964  009DF3  6C                 	db	108
  2965  009DF4  20                 	db	32
  2966  009DF5  4D                 	db	77
  2967  009DF6  6F                 	db	111
  2968  009DF7  64                 	db	100
  2969  009DF8  65                 	db	101
  2970  009DF9  20                 	db	32
  2971  009DFA  20                 	db	32
  2972  009DFB  20                 	db	32
  2973  009DFC  20                 	db	32
  2974  009DFD  20                 	db	32
  2975  009DFE  20                 	db	32
  2976  009DFF  20                 	db	32
  2977  009E00  20                 	db	32
  2978  009E01  20                 	db	32
  2979  009E02  43                 	db	67
  2980  009E03  75                 	db	117
  2981  009E04  72                 	db	114
  2982  009E05  72                 	db	114
  2983  009E06  65                 	db	101
  2984  009E07  6E                 	db	110
  2985  009E08  74                 	db	116
  2986  009E09  20                 	db	32
  2987  009E0A  70                 	db	112
  2988  009E0B  6F                 	db	111
  2989  009E0C  73                 	db	115
  2990  009E0D  3A                 	db	58
  2991  009E0E  20                 	db	32
  2992  009E0F  20                 	db	32
  2993  009E10  20                 	db	32
  2994  009E11  20                 	db	32
  2995  009E12  20                 	db	32
  2996  009E13  20                 	db	32
  2997  009E14  20                 	db	32
  2998  009E15  01                 	db	1
  2999  009E16  54                 	db	84
  3000  009E17  75                 	db	117
  3001  009E18  72                 	db	114
  3002  009E19  6E                 	db	110
  3003  009E1A  20                 	db	32
  3004  009E1B  43                 	db	67
  3005  009E1C  43                 	db	67
  3006  009E1D  57                 	db	87
  3007  009E1E  20                 	db	32
  3008  009E1F  00                 	db	0
  3009  009E20  20                 	db	32
  3010  009E21  53                 	db	83
  3011  009E22  70                 	db	112
  3012  009E23  65                 	db	101
  3013  009E24  65                 	db	101
  3014  009E25  64                 	db	100
  3015  009E26  20                 	db	32
  3016  009E27  20                 	db	32
  3017  009E28  20                 	db	32
  3018  009E29  20                 	db	32
  3019  009E2A  53                 	db	83
  3020  009E2B  74                 	db	116
  3021  009E2C  61                 	db	97
  3022  009E2D  72                 	db	114
  3023  009E2E  74                 	db	116
  3024  009E2F  20                 	db	32
  3025  009E30  20                 	db	32
  3026  009E31  20                 	db	32
  3027  009E32  20                 	db	32
  3028  009E33  00                 	db	0
  3029  009E34  20                 	db	32
  3030  009E35  20                 	db	32
  3031  009E36  20                 	db	32
  3032  009E37  20                 	db	32
  3033  009E38  20                 	db	32
  3034  009E39  20                 	db	32
  3035  009E3A  20                 	db	32
  3036  009E3B  20                 	db	32
  3037  009E3C  20                 	db	32
  3038  009E3D  20                 	db	32
  3039  009E3E                     __end_of_dc_manual:
  3040                           	opt stack 0
  3041  009E3E                     _dc_zero:
  3042                           	opt stack 0
  3043  009E3E  52                 	db	82
  3044  009E3F  65                 	db	101
  3045  009E40  74                 	db	116
  3046  009E41  75                 	db	117
  3047  009E42  72                 	db	114
  3048  009E43  6E                 	db	110
  3049  009E44  20                 	db	32
  3050  009E45  74                 	db	116
  3051  009E46  6F                 	db	111
  3052  009E47  20                 	db	32
  3053  009E48  5A                 	db	90
  3054  009E49  65                 	db	101
  3055  009E4A  72                 	db	114
  3056  009E4B  6F                 	db	111
  3057  009E4C  3F                 	db	63
  3058  009E4D  20                 	db	32
  3059  009E4E  20                 	db	32
  3060  009E4F  20                 	db	32
  3061  009E50  20                 	db	32
  3062  009E51  20                 	db	32
  3063  009E52  43                 	db	67
  3064  009E53  75                 	db	117
  3065  009E54  72                 	db	114
  3066  009E55  72                 	db	114
  3067  009E56  65                 	db	101
  3068  009E57  6E                 	db	110
  3069  009E58  74                 	db	116
  3070  009E59  20                 	db	32
  3071  009E5A  70                 	db	112
  3072  009E5B  6F                 	db	111
  3073  009E5C  73                 	db	115
  3074  009E5D  3A                 	db	58
  3075  009E5E  20                 	db	32
  3076  009E5F  20                 	db	32
  3077  009E60  20                 	db	32
  3078  009E61  20                 	db	32
  3079  009E62  20                 	db	32
  3080  009E63  20                 	db	32
  3081  009E64  20                 	db	32
  3082  009E65  20                 	db	32
  3083  009E66  20                 	db	32
  3084  009E67  20                 	db	32
  3085  009E68  20                 	db	32
  3086  009E69  20                 	db	32
  3087  009E6A  20                 	db	32
  3088  009E6B  20                 	db	32
  3089  009E6C  20                 	db	32
  3090  009E6D  20                 	db	32
  3091  009E6E  20                 	db	32
  3092  009E6F  20                 	db	32
  3093  009E70  20                 	db	32
  3094  009E71  20                 	db	32
  3095  009E72  20                 	db	32
  3096  009E73  20                 	db	32
  3097  009E74  20                 	db	32
  3098  009E75  20                 	db	32
  3099  009E76  20                 	db	32
  3100  009E77  20                 	db	32
  3101  009E78  20                 	db	32
  3102  009E79  20                 	db	32
  3103  009E7A  20                 	db	32
  3104  009E7B  59                 	db	89
  3105  009E7C  65                 	db	101
  3106  009E7D  73                 	db	115
  3107  009E7E  20                 	db	32
  3108  009E7F  20                 	db	32
  3109  009E80  20                 	db	32
  3110  009E81  20                 	db	32
  3111  009E82  20                 	db	32
  3112  009E83  20                 	db	32
  3113  009E84  20                 	db	32
  3114  009E85  20                 	db	32
  3115  009E86  20                 	db	32
  3116  009E87  20                 	db	32
  3117  009E88  20                 	db	32
  3118  009E89  20                 	db	32
  3119  009E8A  4E                 	db	78
  3120  009E8B  6F                 	db	111
  3121  009E8C  20                 	db	32
  3122  009E8D  20                 	db	32
  3123  009E8E                     __end_of_dc_zero:
  3124                           	opt stack 0
  3125  009E8E                     _dc_arc2:
  3126                           	opt stack 0
  3127  009E8E  41                 	db	65
  3128  009E8F  72                 	db	114
  3129  009E90  63                 	db	99
  3130  009E91  3A                 	db	58
  3131  009E92  20                 	db	32
  3132  009E93  53                 	db	83
  3133  009E94  69                 	db	105
  3134  009E95  7A                 	db	122
  3135  009E96  65                 	db	101
  3136  009E97  3D                 	db	61
  3137  009E98  20                 	db	32
  3138  009E99  20                 	db	32
  3139  009E9A  20                 	db	32
  3140  009E9B  20                 	db	32
  3141  009E9C  20                 	db	32
  3142  009E9D  20                 	db	32
  3143  009E9E  20                 	db	32
  3144  009E9F  20                 	db	32
  3145  009EA0  20                 	db	32
  3146  009EA1  20                 	db	32
  3147  009EA2  43                 	db	67
  3148  009EA3  75                 	db	117
  3149  009EA4  72                 	db	114
  3150  009EA5  72                 	db	114
  3151  009EA6  65                 	db	101
  3152  009EA7  6E                 	db	110
  3153  009EA8  74                 	db	116
  3154  009EA9  20                 	db	32
  3155  009EAA  70                 	db	112
  3156  009EAB  6F                 	db	111
  3157  009EAC  73                 	db	115
  3158  009EAD  3A                 	db	58
  3159  009EAE  20                 	db	32
  3160  009EAF  20                 	db	32
  3161  009EB0  20                 	db	32
  3162  009EB1  20                 	db	32
  3163  009EB2  20                 	db	32
  3164  009EB3  20                 	db	32
  3165  009EB4  20                 	db	32
  3166  009EB5  01                 	db	1
  3167  009EB6  54                 	db	84
  3168  009EB7  75                 	db	117
  3169  009EB8  72                 	db	114
  3170  009EB9  6E                 	db	110
  3171  009EBA  20                 	db	32
  3172  009EBB  43                 	db	67
  3173  009EBC  43                 	db	67
  3174  009EBD  57                 	db	87
  3175  009EBE  20                 	db	32
  3176  009EBF  00                 	db	0
  3177  009EC0  20                 	db	32
  3178  009EC1  53                 	db	83
  3179  009EC2  70                 	db	112
  3180  009EC3  65                 	db	101
  3181  009EC4  65                 	db	101
  3182  009EC5  64                 	db	100
  3183  009EC6  20                 	db	32
  3184  009EC7  20                 	db	32
  3185  009EC8  20                 	db	32
  3186  009EC9  20                 	db	32
  3187  009ECA  53                 	db	83
  3188  009ECB  74                 	db	116
  3189  009ECC  61                 	db	97
  3190  009ECD  72                 	db	114
  3191  009ECE  74                 	db	116
  3192  009ECF  20                 	db	32
  3193  009ED0  20                 	db	32
  3194  009ED1  20                 	db	32
  3195  009ED2  20                 	db	32
  3196  009ED3  00                 	db	0
  3197  009ED4  20                 	db	32
  3198  009ED5  20                 	db	32
  3199  009ED6  20                 	db	32
  3200  009ED7  20                 	db	32
  3201  009ED8  20                 	db	32
  3202  009ED9  20                 	db	32
  3203  009EDA  20                 	db	32
  3204  009EDB  20                 	db	32
  3205  009EDC  20                 	db	32
  3206  009EDD  20                 	db	32
  3207  009EDE                     __end_of_dc_arc2:
  3208                           	opt stack 0
  3209  009EDE                     _dc_arc1:
  3210                           	opt stack 0
  3211  009EDE  41                 	db	65
  3212  009EDF  72                 	db	114
  3213  009EE0  63                 	db	99
  3214  009EE1  3A                 	db	58
  3215  009EE2  20                 	db	32
  3216  009EE3  53                 	db	83
  3217  009EE4  65                 	db	101
  3218  009EE5  74                 	db	116
  3219  009EE6  20                 	db	32
  3220  009EE7  61                 	db	97
  3221  009EE8  72                 	db	114
  3222  009EE9  63                 	db	99
  3223  009EEA  20                 	db	32
  3224  009EEB  73                 	db	115
  3225  009EEC  69                 	db	105
  3226  009EED  7A                 	db	122
  3227  009EEE  65                 	db	101
  3228  009EEF  20                 	db	32
  3229  009EF0  20                 	db	32
  3230  009EF1  20                 	db	32
  3231  009EF2  41                 	db	65
  3232  009EF3  72                 	db	114
  3233  009EF4  63                 	db	99
  3234  009EF5  20                 	db	32
  3235  009EF6  73                 	db	115
  3236  009EF7  69                 	db	105
  3237  009EF8  7A                 	db	122
  3238  009EF9  65                 	db	101
  3239  009EFA  3A                 	db	58
  3240  009EFB  20                 	db	32
  3241  009EFC  20                 	db	32
  3242  009EFD  20                 	db	32
  3243  009EFE  20                 	db	32
  3244  009EFF  20                 	db	32
  3245  009F00  20                 	db	32
  3246  009F01  20                 	db	32
  3247  009F02  20                 	db	32
  3248  009F03  20                 	db	32
  3249  009F04  20                 	db	32
  3250  009F05  20                 	db	32
  3251  009F06  53                 	db	83
  3252  009F07  74                 	db	116
  3253  009F08  65                 	db	101
  3254  009F09  70                 	db	112
  3255  009F0A  20                 	db	32
  3256  009F0B  73                 	db	115
  3257  009F0C  69                 	db	105
  3258  009F0D  7A                 	db	122
  3259  009F0E  65                 	db	101
  3260  009F0F  20                 	db	32
  3261  009F10  00                 	db	0
  3262  009F11  20                 	db	32
  3263  009F12  20                 	db	32
  3264  009F13  43                 	db	67
  3265  009F14  6F                 	db	111
  3266  009F15  6E                 	db	110
  3267  009F16  66                 	db	102
  3268  009F17  69                 	db	105
  3269  009F18  72                 	db	114
  3270  009F19  6D                 	db	109
  3271  009F1A  20                 	db	32
  3272  009F1B  20                 	db	32
  3273  009F1C  20                 	db	32
  3274  009F1D  20                 	db	32
  3275  009F1E  20                 	db	32
  3276  009F1F  20                 	db	32
  3277  009F20  20                 	db	32
  3278  009F21  20                 	db	32
  3279  009F22  20                 	db	32
  3280  009F23  20                 	db	32
  3281  009F24  00                 	db	0
  3282  009F25  20                 	db	32
  3283  009F26  20                 	db	32
  3284  009F27  43                 	db	67
  3285  009F28  61                 	db	97
  3286  009F29  6E                 	db	110
  3287  009F2A  63                 	db	99
  3288  009F2B  65                 	db	101
  3289  009F2C  6C                 	db	108
  3290  009F2D  20                 	db	32
  3291  009F2E                     __end_of_dc_arc1:
  3292                           	opt stack 0
  3293  009F2E                     _dc_divide2:
  3294                           	opt stack 0
  3295  009F2E  44                 	db	68
  3296  009F2F  69                 	db	105
  3297  009F30  76                 	db	118
  3298  009F31  69                 	db	105
  3299  009F32  64                 	db	100
  3300  009F33  65                 	db	101
  3301  009F34  3A                 	db	58
  3302  009F35  20                 	db	32
  3303  009F36  20                 	db	32
  3304  009F37  20                 	db	32
  3305  009F38  20                 	db	32
  3306  009F39  20                 	db	32
  3307  009F3A  20                 	db	32
  3308  009F3B  20                 	db	32
  3309  009F3C  20                 	db	32
  3310  009F3D  20                 	db	32
  3311  009F3E  20                 	db	32
  3312  009F3F  20                 	db	32
  3313  009F40  20                 	db	32
  3314  009F41  20                 	db	32
  3315  009F42  50                 	db	80
  3316  009F43  6F                 	db	111
  3317  009F44  73                 	db	115
  3318  009F45  3A                 	db	58
  3319  009F46  20                 	db	32
  3320  009F47  20                 	db	32
  3321  009F48  20                 	db	32
  3322  009F49  20                 	db	32
  3323  009F4A  20                 	db	32
  3324  009F4B  20                 	db	32
  3325  009F4C  20                 	db	32
  3326  009F4D  20                 	db	32
  3327  009F4E  20                 	db	32
  3328  009F4F  20                 	db	32
  3329  009F50  20                 	db	32
  3330  009F51  20                 	db	32
  3331  009F52  20                 	db	32
  3332  009F53  20                 	db	32
  3333  009F54  20                 	db	32
  3334  009F55  20                 	db	32
  3335  009F56  4A                 	db	74
  3336  009F57  75                 	db	117
  3337  009F58  6D                 	db	109
  3338  009F59  70                 	db	112
  3339  009F5A  20                 	db	32
  3340  009F5B  73                 	db	115
  3341  009F5C  69                 	db	105
  3342  009F5D  7A                 	db	122
  3343  009F5E  65                 	db	101
  3344  009F5F  3A                 	db	58
  3345  009F60  20                 	db	32
  3346  009F61  20                 	db	32
  3347  009F62  20                 	db	32
  3348  009F63  20                 	db	32
  3349  009F64  20                 	db	32
  3350  009F65  20                 	db	32
  3351  009F66  20                 	db	32
  3352  009F67  20                 	db	32
  3353  009F68  20                 	db	32
  3354  009F69  20                 	db	32
  3355  009F6A  50                 	db	80
  3356  009F6B  72                 	db	114
  3357  009F6C  65                 	db	101
  3358  009F6D  73                 	db	115
  3359  009F6E  73                 	db	115
  3360  009F6F  54                 	db	84
  3361  009F70  6F                 	db	111
  3362  009F71  4A                 	db	74
  3363  009F72  75                 	db	117
  3364  009F73  6D                 	db	109
  3365  009F74  70                 	db	112
  3366  009F75  20                 	db	32
  3367  009F76  00                 	db	0
  3368  009F77  20                 	db	32
  3369  009F78  43                 	db	67
  3370  009F79  61                 	db	97
  3371  009F7A  6E                 	db	110
  3372  009F7B  63                 	db	99
  3373  009F7C  65                 	db	101
  3374  009F7D  6C                 	db	108
  3375  009F7E                     __end_of_dc_divide2:
  3376                           	opt stack 0
  3377  009F7E                     _dc_divide1:
  3378                           	opt stack 0
  3379  009F7E  44                 	db	68
  3380  009F7F  69                 	db	105
  3381  009F80  76                 	db	118
  3382  009F81  69                 	db	105
  3383  009F82  64                 	db	100
  3384  009F83  65                 	db	101
  3385  009F84  3A                 	db	58
  3386  009F85  20                 	db	32
  3387  009F86  53                 	db	83
  3388  009F87  65                 	db	101
  3389  009F88  74                 	db	116
  3390  009F89  20                 	db	32
  3391  009F8A  64                 	db	100
  3392  009F8B  69                 	db	105
  3393  009F8C  76                 	db	118
  3394  009F8D  69                 	db	105
  3395  009F8E  73                 	db	115
  3396  009F8F  69                 	db	105
  3397  009F90  6F                 	db	111
  3398  009F91  6E                 	db	110
  3399  009F92  20                 	db	32
  3400  009F93  20                 	db	32
  3401  009F94  20                 	db	32
  3402  009F95  20                 	db	32
  3403  009F96  20                 	db	32
  3404  009F97  20                 	db	32
  3405  009F98  20                 	db	32
  3406  009F99  20                 	db	32
  3407  009F9A  20                 	db	32
  3408  009F9B  20                 	db	32
  3409  009F9C  20                 	db	32
  3410  009F9D  20                 	db	32
  3411  009F9E  20                 	db	32
  3412  009F9F  20                 	db	32
  3413  009FA0  20                 	db	32
  3414  009FA1  20                 	db	32
  3415  009FA2  20                 	db	32
  3416  009FA3  20                 	db	32
  3417  009FA4  20                 	db	32
  3418  009FA5  20                 	db	32
  3419  009FA6  20                 	db	32
  3420  009FA7  20                 	db	32
  3421  009FA8  20                 	db	32
  3422  009FA9  2F                 	db	47
  3423  009FAA  73                 	db	115
  3424  009FAB  74                 	db	116
  3425  009FAC  65                 	db	101
  3426  009FAD  70                 	db	112
  3427  009FAE  20                 	db	32
  3428  009FAF  20                 	db	32
  3429  009FB0  00                 	db	0
  3430  009FB1  20                 	db	32
  3431  009FB2  20                 	db	32
  3432  009FB3  43                 	db	67
  3433  009FB4  6F                 	db	111
  3434  009FB5  6E                 	db	110
  3435  009FB6  66                 	db	102
  3436  009FB7  69                 	db	105
  3437  009FB8  72                 	db	114
  3438  009FB9  6D                 	db	109
  3439  009FBA  31                 	db	49
  3440  009FBB  32                 	db	50
  3441  009FBC  33                 	db	51
  3442  009FBD  34                 	db	52
  3443  009FBE  20                 	db	32
  3444  009FBF  20                 	db	32
  3445  009FC0  20                 	db	32
  3446  009FC1  20                 	db	32
  3447  009FC2  20                 	db	32
  3448  009FC3  20                 	db	32
  3449  009FC4  00                 	db	0
  3450  009FC5  20                 	db	32
  3451  009FC6  20                 	db	32
  3452  009FC7  43                 	db	67
  3453  009FC8  61                 	db	97
  3454  009FC9  6E                 	db	110
  3455  009FCA  63                 	db	99
  3456  009FCB  65                 	db	101
  3457  009FCC  6C                 	db	108
  3458  009FCD  20                 	db	32
  3459  009FCE                     __end_of_dc_divide1:
  3460                           	opt stack 0
  3461  009FCE                     _dc_setup2:
  3462                           	opt stack 0
  3463  009FCE  53                 	db	83
  3464  009FCF  65                 	db	101
  3465  009FD0  74                 	db	116
  3466  009FD1  75                 	db	117
  3467  009FD2  70                 	db	112
  3468  009FD3  3A                 	db	58
  3469  009FD4  20                 	db	32
  3470  009FD5  53                 	db	83
  3471  009FD6  65                 	db	101
  3472  009FD7  74                 	db	116
  3473  009FD8  20                 	db	32
  3474  009FD9  64                 	db	100
  3475  009FDA  69                 	db	105
  3476  009FDB  72                 	db	114
  3477  009FDC  65                 	db	101
  3478  009FDD  63                 	db	99
  3479  009FDE  74                 	db	116
  3480  009FDF  69                 	db	105
  3481  009FE0  6F                 	db	111
  3482  009FE1  6E                 	db	110
  3483  009FE2  20                 	db	32
  3484  009FE3  20                 	db	32
  3485  009FE4  20                 	db	32
  3486  009FE5  20                 	db	32
  3487  009FE6  20                 	db	32
  3488  009FE7  20                 	db	32
  3489  009FE8  20                 	db	32
  3490  009FE9  20                 	db	32
  3491  009FEA  20                 	db	32
  3492  009FEB  20                 	db	32
  3493  009FEC  20                 	db	32
  3494  009FED  20                 	db	32
  3495  009FEE  20                 	db	32
  3496  009FEF  20                 	db	32
  3497  009FF0  20                 	db	32
  3498  009FF1  20                 	db	32
  3499  009FF2  20                 	db	32
  3500  009FF3  20                 	db	32
  3501  009FF4  20                 	db	32
  3502  009FF5  20                 	db	32
  3503  009FF6  20                 	db	32
  3504  009FF7  43                 	db	67
  3505  009FF8  6F                 	db	111
  3506  009FF9  75                 	db	117
  3507  009FFA  6E                 	db	110
  3508  009FFB  74                 	db	116
  3509  009FFC  65                 	db	101
  3510  009FFD  72                 	db	114
  3511  009FFE  43                 	db	67
  3512  009FFF  6C                 	db	108
  3513  00A000  6F                 	db	111
  3514  00A001  63                 	db	99
  3515  00A002  6B                 	db	107
  3516  00A003  77                 	db	119
  3517  00A004  69                 	db	105
  3518  00A005  73                 	db	115
  3519  00A006  65                 	db	101
  3520  00A007  20                 	db	32
  3521  00A008  20                 	db	32
  3522  00A009  20                 	db	32
  3523  00A00A  20                 	db	32
  3524  00A00B  43                 	db	67
  3525  00A00C  6C                 	db	108
  3526  00A00D  6F                 	db	111
  3527  00A00E  63                 	db	99
  3528  00A00F  6B                 	db	107
  3529  00A010  77                 	db	119
  3530  00A011  69                 	db	105
  3531  00A012  73                 	db	115
  3532  00A013  65                 	db	101
  3533  00A014  20                 	db	32
  3534  00A015  20                 	db	32
  3535  00A016  20                 	db	32
  3536  00A017  20                 	db	32
  3537  00A018  20                 	db	32
  3538  00A019  20                 	db	32
  3539  00A01A  20                 	db	32
  3540  00A01B  20                 	db	32
  3541  00A01C  20                 	db	32
  3542  00A01D  20                 	db	32
  3543  00A01E                     __end_of_dc_setup2:
  3544                           	opt stack 0
  3545  00A01E                     _dc_setup1:
  3546                           	opt stack 0
  3547  00A01E  53                 	db	83
  3548  00A01F  65                 	db	101
  3549  00A020  74                 	db	116
  3550  00A021  75                 	db	117
  3551  00A022  70                 	db	112
  3552  00A023  3A                 	db	58
  3553  00A024  20                 	db	32
  3554  00A025  53                 	db	83
  3555  00A026  65                 	db	101
  3556  00A027  74                 	db	116
  3557  00A028  20                 	db	32
  3558  00A029  7A                 	db	122
  3559  00A02A  65                 	db	101
  3560  00A02B  72                 	db	114
  3561  00A02C  6F                 	db	111
  3562  00A02D  20                 	db	32
  3563  00A02E  70                 	db	112
  3564  00A02F  6F                 	db	111
  3565  00A030  73                 	db	115
  3566  00A031  2E                 	db	46
  3567  00A032  20                 	db	32
  3568  00A033  20                 	db	32
  3569  00A034  20                 	db	32
  3570  00A035  20                 	db	32
  3571  00A036  20                 	db	32
  3572  00A037  20                 	db	32
  3573  00A038  20                 	db	32
  3574  00A039  20                 	db	32
  3575  00A03A  20                 	db	32
  3576  00A03B  20                 	db	32
  3577  00A03C  20                 	db	32
  3578  00A03D  20                 	db	32
  3579  00A03E  20                 	db	32
  3580  00A03F  20                 	db	32
  3581  00A040  20                 	db	32
  3582  00A041  20                 	db	32
  3583  00A042  20                 	db	32
  3584  00A043  20                 	db	32
  3585  00A044  20                 	db	32
  3586  00A045  20                 	db	32
  3587  00A046  53                 	db	83
  3588  00A047  74                 	db	116
  3589  00A048  65                 	db	101
  3590  00A049  70                 	db	112
  3591  00A04A  20                 	db	32
  3592  00A04B  73                 	db	115
  3593  00A04C  69                 	db	105
  3594  00A04D  7A                 	db	122
  3595  00A04E  65                 	db	101
  3596  00A04F  20                 	db	32
  3597  00A050  00                 	db	0
  3598  00A051  20                 	db	32
  3599  00A052  20                 	db	32
  3600  00A053  43                 	db	67
  3601  00A054  6F                 	db	111
  3602  00A055  6E                 	db	110
  3603  00A056  66                 	db	102
  3604  00A057  69                 	db	105
  3605  00A058  72                 	db	114
  3606  00A059  6D                 	db	109
  3607  00A05A  20                 	db	32
  3608  00A05B  78                 	db	120
  3609  00A05C  2E                 	db	46
  3610  00A05D  78                 	db	120
  3611  00A05E  78                 	db	120
  3612  00A05F  01                 	db	1
  3613  00A060  20                 	db	32
  3614  00A061  20                 	db	32
  3615  00A062  20                 	db	32
  3616  00A063  20                 	db	32
  3617  00A064  00                 	db	0
  3618  00A065  20                 	db	32
  3619  00A066  20                 	db	32
  3620  00A067  43                 	db	67
  3621  00A068  61                 	db	97
  3622  00A069  6E                 	db	110
  3623  00A06A  63                 	db	99
  3624  00A06B  65                 	db	101
  3625  00A06C  6C                 	db	108
  3626  00A06D  20                 	db	32
  3627  00A06E                     __end_of_dc_setup1:
  3628                           	opt stack 0
  3629  00A06E                     _dc_main:
  3630                           	opt stack 0
  3631  00A06E  4D                 	db	77
  3632  00A06F  61                 	db	97
  3633  00A070  69                 	db	105
  3634  00A071  6E                 	db	110
  3635  00A072  20                 	db	32
  3636  00A073  4D                 	db	77
  3637  00A074  65                 	db	101
  3638  00A075  6E                 	db	110
  3639  00A076  75                 	db	117
  3640  00A077  3A                 	db	58
  3641  00A078  20                 	db	32
  3642  00A079  20                 	db	32
  3643  00A07A  20                 	db	32
  3644  00A07B  20                 	db	32
  3645  00A07C  20                 	db	32
  3646  00A07D  20                 	db	32
  3647  00A07E  20                 	db	32
  3648  00A07F  20                 	db	32
  3649  00A080  20                 	db	32
  3650  00A081  20                 	db	32
  3651  00A082  20                 	db	32
  3652  00A083  53                 	db	83
  3653  00A084  65                 	db	101
  3654  00A085  74                 	db	116
  3655  00A086  75                 	db	117
  3656  00A087  70                 	db	112
  3657  00A088  20                 	db	32
  3658  00A089  20                 	db	32
  3659  00A08A  20                 	db	32
  3660  00A08B  20                 	db	32
  3661  00A08C  44                 	db	68
  3662  00A08D  69                 	db	105
  3663  00A08E  76                 	db	118
  3664  00A08F  69                 	db	105
  3665  00A090  64                 	db	100
  3666  00A091  65                 	db	101
  3667  00A092  20                 	db	32
  3668  00A093  20                 	db	32
  3669  00A094  20                 	db	32
  3670  00A095  20                 	db	32
  3671  00A096  20                 	db	32
  3672  00A097  41                 	db	65
  3673  00A098  72                 	db	114
  3674  00A099  63                 	db	99
  3675  00A09A  20                 	db	32
  3676  00A09B  20                 	db	32
  3677  00A09C  20                 	db	32
  3678  00A09D  20                 	db	32
  3679  00A09E  20                 	db	32
  3680  00A09F  20                 	db	32
  3681  00A0A0  4D                 	db	77
  3682  00A0A1  61                 	db	97
  3683  00A0A2  6E                 	db	110
  3684  00A0A3  75                 	db	117
  3685  00A0A4  61                 	db	97
  3686  00A0A5  6C                 	db	108
  3687  00A0A6  20                 	db	32
  3688  00A0A7  20                 	db	32
  3689  00A0A8  20                 	db	32
  3690  00A0A9  20                 	db	32
  3691  00A0AA  20                 	db	32
  3692  00A0AB  47                 	db	71
  3693  00A0AC  6F                 	db	111
  3694  00A0AD  32                 	db	50
  3695  00A0AE  5A                 	db	90
  3696  00A0AF  65                 	db	101
  3697  00A0B0  72                 	db	114
  3698  00A0B1  6F                 	db	111
  3699  00A0B2  20                 	db	32
  3700  00A0B3  20                 	db	32
  3701  00A0B4  20                 	db	32
  3702  00A0B5  20                 	db	32
  3703  00A0B6  20                 	db	32
  3704  00A0B7  20                 	db	32
  3705  00A0B8  20                 	db	32
  3706  00A0B9  20                 	db	32
  3707  00A0BA  20                 	db	32
  3708  00A0BB  20                 	db	32
  3709  00A0BC  20                 	db	32
  3710  00A0BD  20                 	db	32
  3711  00A0BE                     __end_of_dc_main:
  3712                           	opt stack 0
  3713  00A0BE                     _configDescriptor1:
  3714                           	opt stack 0
  3715  00A0BE  09                 	db	9
  3716  00A0BF  02                 	db	2
  3717  00A0C0  40                 	db	64
  3718  00A0C1  00                 	db	0
  3719  00A0C2  02                 	db	2
  3720  00A0C3  01                 	db	1
  3721  00A0C4  00                 	db	0
  3722  00A0C5  C0                 	db	192
  3723  00A0C6  32                 	db	50
  3724  00A0C7  09                 	db	9
  3725  00A0C8  04                 	db	4
  3726  00A0C9  00                 	db	0
  3727  00A0CA  00                 	db	0
  3728  00A0CB  02                 	db	2
  3729  00A0CC  03                 	db	3
  3730  00A0CD  00                 	db	0
  3731  00A0CE  00                 	db	0
  3732  00A0CF  00                 	db	0
  3733  00A0D0  09                 	db	9
  3734  00A0D1  21                 	db	33
  3735  00A0D2  11                 	db	17
  3736  00A0D3  01                 	db	1
  3737  00A0D4  00                 	db	0
  3738  00A0D5  01                 	db	1
  3739  00A0D6  22                 	db	34
  3740  00A0D7  1D                 	db	29
  3741  00A0D8  00                 	db	0
  3742  00A0D9  07                 	db	7
  3743  00A0DA  05                 	db	5
  3744  00A0DB  81                 	db	129
  3745  00A0DC  03                 	db	3
  3746  00A0DD  40                 	db	64
  3747  00A0DE  00                 	db	0
  3748  00A0DF  01                 	db	1
  3749  00A0E0  07                 	db	7
  3750  00A0E1  05                 	db	5
  3751  00A0E2  01                 	db	1
  3752  00A0E3  03                 	db	3
  3753  00A0E4  40                 	db	64
  3754  00A0E5  00                 	db	0
  3755  00A0E6  01                 	db	1
  3756  00A0E7  09                 	db	9
  3757  00A0E8  04                 	db	4
  3758  00A0E9  01                 	db	1
  3759  00A0EA  00                 	db	0
  3760  00A0EB  02                 	db	2
  3761  00A0EC  08                 	db	8
  3762  00A0ED  06                 	db	6
  3763  00A0EE  50                 	db	80
  3764  00A0EF  00                 	db	0
  3765  00A0F0  07                 	db	7
  3766  00A0F1  05                 	db	5
  3767  00A0F2  82                 	db	130
  3768  00A0F3  02                 	db	2
  3769  00A0F4  40                 	db	64
  3770  00A0F5  00                 	db	0
  3771  00A0F6  01                 	db	1
  3772  00A0F7  07                 	db	7
  3773  00A0F8  05                 	db	5
  3774  00A0F9  02                 	db	2
  3775  00A0FA  02                 	db	2
  3776  00A0FB  40                 	db	64
  3777  00A0FC  00                 	db	0
  3778  00A0FD  01                 	db	1
  3779  00A0FE                     __end_of_configDescriptor1:
  3780                           	opt stack 0
  3781  00A0FE                     _sd001:
  3782                           	opt stack 0
  3783  00A0FE  34                 	db	52
  3784  00A0FF  03                 	db	3
  3785  00A100  0053               	dw	83
  3786  00A102  006F               	dw	111
  3787  00A104  006C               	dw	108
  3788  00A106  0064               	dw	100
  3789  00A108  0065               	dw	101
  3790  00A10A  0072               	dw	114
  3791  00A10C  006E               	dw	110
  3792  00A10E  0065               	dw	101
  3793  00A110  0072               	dw	114
  3794  00A112  0064               	dw	100
  3795  00A114  002E               	dw	46
  3796  00A116  0063               	dw	99
  3797  00A118  006F               	dw	111
  3798  00A11A  006D               	dw	109
  3799  00A11C  0020               	dw	32
  3800  00A11E  0020               	dw	32
  3801  00A120  0020               	dw	32
  3802  00A122  0020               	dw	32
  3803  00A124  0020               	dw	32
  3804  00A126  0020               	dw	32
  3805  00A128  0020               	dw	32
  3806  00A12A  0020               	dw	32
  3807  00A12C  0020               	dw	32
  3808  00A12E  0020               	dw	32
  3809  00A130  0020               	dw	32
  3810  00A132                     __end_of_sd001:
  3811                           	opt stack 0
  3812  00A132                     _sd002:
  3813                           	opt stack 0
  3814  00A132  2E                 	db	46
  3815  00A133  03                 	db	3
  3816  00A134  0053               	dw	83
  3817  00A136  0074               	dw	116
  3818  00A138  0065               	dw	101
  3819  00A13A  0070               	dw	112
  3820  00A13C  0070               	dw	112
  3821  00A13E  0065               	dw	101
  3822  00A140  0072               	dw	114
  3823  00A142  004D               	dw	77
  3824  00A144  006F               	dw	111
  3825  00A146  0074               	dw	116
  3826  00A148  006F               	dw	111
  3827  00A14A  0072               	dw	114
  3828  00A14C  0043               	dw	67
  3829  00A14E  006F               	dw	111
  3830  00A150  006E               	dw	110
  3831  00A152  0074               	dw	116
  3832  00A154  0072               	dw	114
  3833  00A156  006F               	dw	111
  3834  00A158  006C               	dw	108
  3835  00A15A  006C               	dw	108
  3836  00A15C  0065               	dw	101
  3837  00A15E  0072               	dw	114
  3838  00A160                     __end_of_sd002:
  3839                           	opt stack 0
  3840  00A160                     _inq_resp:
  3841                           	opt stack 0
  3842  00A160  00                 	db	0
  3843  00A161  80                 	db	128
  3844  00A162  04                 	db	4
  3845  00A163  02                 	db	2
  3846  00A164  20                 	db	32
  3847  00A165  00                 	db	0
  3848  00A166  00                 	db	0
  3849  00A167  00                 	db	0
  3850  00A168  4D                 	db	77
  3851  00A169  69                 	db	105
  3852  00A16A  63                 	db	99
  3853  00A16B  72                 	db	114
  3854  00A16C  6F                 	db	111
  3855  00A16D  63                 	db	99
  3856  00A16E  68                 	db	104
  3857  00A16F  70                 	db	112
  3858  00A170  4D                 	db	77
  3859  00A171  61                 	db	97
  3860  00A172  73                 	db	115
  3861  00A173  73                 	db	115
  3862  00A174  20                 	db	32
  3863  00A175  53                 	db	83
  3864  00A176  74                 	db	116
  3865  00A177  6F                 	db	111
  3866  00A178  72                 	db	114
  3867  00A179  61                 	db	97
  3868  00A17A  67                 	db	103
  3869  00A17B  65                 	db	101
  3870  00A17C  20                 	db	32
  3871  00A17D  20                 	db	32
  3872  00A17E  20                 	db	32
  3873  00A17F  20                 	db	32
  3874  00A180  30                 	db	48
  3875  00A181  30                 	db	48
  3876  00A182  30                 	db	48
  3877  00A183  31                 	db	49
  3878  00A184                     __end_of_inq_resp:
  3879                           	opt stack 0
  3880  00A184                     _hid_rpt01:
  3881                           	opt stack 0
  3882  00A184  06                 	db	6
  3883  00A185  00                 	db	0
  3884  00A186  FF                 	db	255
  3885  00A187  09                 	db	9
  3886  00A188  01                 	db	1
  3887  00A189  A1                 	db	161
  3888  00A18A  01                 	db	1
  3889  00A18B  19                 	db	25
  3890  00A18C  01                 	db	1
  3891  00A18D  29                 	db	41
  3892  00A18E  40                 	db	64
  3893  00A18F  15                 	db	21
  3894  00A190  00                 	db	0
  3895  00A191  26                 	db	38
  3896  00A192  FF                 	db	255
  3897  00A193  00                 	db	0
  3898  00A194  75                 	db	117
  3899  00A195  08                 	db	8
  3900  00A196  95                 	db	149
  3901  00A197  40                 	db	64
  3902  00A198  81                 	db	129
  3903  00A199  00                 	db	0
  3904  00A19A  19                 	db	25
  3905  00A19B  01                 	db	1
  3906  00A19C  29                 	db	41
  3907  00A19D  40                 	db	64
  3908  00A19E  91                 	db	145
  3909  00A19F  00                 	db	0
  3910  00A1A0  C0                 	db	192
  3911  00A1A1                     __end_of_hid_rpt01:
  3912                           	opt stack 0
  3913  00A1A1                     _sd003:
  3914                           	opt stack 0
  3915  00A1A1  1A                 	db	26
  3916  00A1A2  03                 	db	3
  3917  00A1A3  0031               	dw	49
  3918  00A1A5  0032               	dw	50
  3919  00A1A7  0033               	dw	51
  3920  00A1A9  0034               	dw	52
  3921  00A1AB  0035               	dw	53
  3922  00A1AD  0036               	dw	54
  3923  00A1AF  0037               	dw	55
  3924  00A1B1  0038               	dw	56
  3925  00A1B3  0039               	dw	57
  3926  00A1B5  0030               	dw	48
  3927  00A1B7  0039               	dw	57
  3928  00A1B9  0039               	dw	57
  3929  00A1BB                     __end_of_sd003:
  3930                           	opt stack 0
  3931  00A1BB                     _overshoot_cost_in_steps_string:
  3932                           	opt stack 0
  3933  00A1BB  4F                 	db	79
  3934  00A1BC  56                 	db	86
  3935  00A1BD  45                 	db	69
  3936  00A1BE  52                 	db	82
  3937  00A1BF  53                 	db	83
  3938  00A1C0  48                 	db	72
  3939  00A1C1  4F                 	db	79
  3940  00A1C2  4F                 	db	79
  3941  00A1C3  54                 	db	84
  3942  00A1C4  5F                 	db	95
  3943  00A1C5  43                 	db	67
  3944  00A1C6  4F                 	db	79
  3945  00A1C7  53                 	db	83
  3946  00A1C8  54                 	db	84
  3947  00A1C9  5F                 	db	95
  3948  00A1CA  49                 	db	73
  3949  00A1CB  4E                 	db	78
  3950  00A1CC  5F                 	db	95
  3951  00A1CD  53                 	db	83
  3952  00A1CE  54                 	db	84
  3953  00A1CF  45                 	db	69
  3954  00A1D0  50                 	db	80
  3955  00A1D1  53                 	db	83
  3956  00A1D2  00                 	db	0
  3957  00A1D3                     __end_of_overshoot_cost_in_steps_string:
  3958                           	opt stack 0
  3959  00A1D3                     _maximum_speed_manual_string:
  3960                           	opt stack 0
  3961  00A1D3  4D                 	db	77
  3962  00A1D4  41                 	db	65
  3963  00A1D5  58                 	db	88
  3964  00A1D6  49                 	db	73
  3965  00A1D7  4D                 	db	77
  3966  00A1D8  55                 	db	85
  3967  00A1D9  4D                 	db	77
  3968  00A1DA  5F                 	db	95
  3969  00A1DB  53                 	db	83
  3970  00A1DC  50                 	db	80
  3971  00A1DD  45                 	db	69
  3972  00A1DE  45                 	db	69
  3973  00A1DF  44                 	db	68
  3974  00A1E0  5F                 	db	95
  3975  00A1E1  4D                 	db	77
  3976  00A1E2  41                 	db	65
  3977  00A1E3  4E                 	db	78
  3978  00A1E4  55                 	db	85
  3979  00A1E5  41                 	db	65
  3980  00A1E6  4C                 	db	76
  3981  00A1E7  00                 	db	0
  3982  00A1E8                     __end_of_maximum_speed_manual_string:
  3983                           	opt stack 0
  3984  00A1E8                     _initial_speed_manual_string:
  3985                           	opt stack 0
  3986  00A1E8  49                 	db	73
  3987  00A1E9  4E                 	db	78
  3988  00A1EA  49                 	db	73
  3989  00A1EB  54                 	db	84
  3990  00A1EC  49                 	db	73
  3991  00A1ED  41                 	db	65
  3992  00A1EE  4C                 	db	76
  3993  00A1EF  5F                 	db	95
  3994  00A1F0  53                 	db	83
  3995  00A1F1  50                 	db	80
  3996  00A1F2  45                 	db	69
  3997  00A1F3  45                 	db	69
  3998  00A1F4  44                 	db	68
  3999  00A1F5  5F                 	db	95
  4000  00A1F6  4D                 	db	77
  4001  00A1F7  41                 	db	65
  4002  00A1F8  4E                 	db	78
  4003  00A1F9  55                 	db	85
  4004  00A1FA  41                 	db	65
  4005  00A1FB  4C                 	db	76
  4006  00A1FC  00                 	db	0
  4007  00A1FD                     __end_of_initial_speed_manual_string:
  4008                           	opt stack 0
  4009  00A1FD                     _full_circle_in_steps_string:
  4010                           	opt stack 0
  4011  00A1FD  46                 	db	70
  4012  00A1FE  55                 	db	85
  4013  00A1FF  4C                 	db	76
  4014  00A200  4C                 	db	76
  4015  00A201  5F                 	db	95
  4016  00A202  43                 	db	67
  4017  00A203  49                 	db	73
  4018  00A204  52                 	db	82
  4019  00A205  43                 	db	67
  4020  00A206  4C                 	db	76
  4021  00A207  45                 	db	69
  4022  00A208  5F                 	db	95
  4023  00A209  49                 	db	73
  4024  00A20A  4E                 	db	78
  4025  00A20B  5F                 	db	95
  4026  00A20C  53                 	db	83
  4027  00A20D  54                 	db	84
  4028  00A20E  45                 	db	69
  4029  00A20F  50                 	db	80
  4030  00A210  53                 	db	83
  4031  00A211  00                 	db	0
  4032  00A212                     __end_of_full_circle_in_steps_string:
  4033                           	opt stack 0
  4034  00A212                     _overshoot_in_steps_string:
  4035                           	opt stack 0
  4036  00A212  4F                 	db	79
  4037  00A213  56                 	db	86
  4038  00A214  45                 	db	69
  4039  00A215  52                 	db	82
  4040  00A216  53                 	db	83
  4041  00A217  48                 	db	72
  4042  00A218  4F                 	db	79
  4043  00A219  4F                 	db	79
  4044  00A21A  54                 	db	84
  4045  00A21B  5F                 	db	95
  4046  00A21C  49                 	db	73
  4047  00A21D  4E                 	db	78
  4048  00A21E  5F                 	db	95
  4049  00A21F  53                 	db	83
  4050  00A220  54                 	db	84
  4051  00A221  45                 	db	69
  4052  00A222  50                 	db	80
  4053  00A223  53                 	db	83
  4054  00A224  00                 	db	0
  4055  00A225                     __end_of_overshoot_in_steps_string:
  4056                           	opt stack 0
  4057  00A225                     _maximum_speed_arc_string:
  4058                           	opt stack 0
  4059  00A225  4D                 	db	77
  4060  00A226  41                 	db	65
  4061  00A227  58                 	db	88
  4062  00A228  49                 	db	73
  4063  00A229  4D                 	db	77
  4064  00A22A  55                 	db	85
  4065  00A22B  4D                 	db	77
  4066  00A22C  5F                 	db	95
  4067  00A22D  53                 	db	83
  4068  00A22E  50                 	db	80
  4069  00A22F  45                 	db	69
  4070  00A230  45                 	db	69
  4071  00A231  44                 	db	68
  4072  00A232  5F                 	db	95
  4073  00A233  41                 	db	65
  4074  00A234  52                 	db	82
  4075  00A235  43                 	db	67
  4076  00A236  00                 	db	0
  4077  00A237                     __end_of_maximum_speed_arc_string:
  4078                           	opt stack 0
  4079  00A237                     _initial_speed_arc_string:
  4080                           	opt stack 0
  4081  00A237  49                 	db	73
  4082  00A238  4E                 	db	78
  4083  00A239  49                 	db	73
  4084  00A23A  54                 	db	84
  4085  00A23B  49                 	db	73
  4086  00A23C  41                 	db	65
  4087  00A23D  4C                 	db	76
  4088  00A23E  5F                 	db	95
  4089  00A23F  53                 	db	83
  4090  00A240  50                 	db	80
  4091  00A241  45                 	db	69
  4092  00A242  45                 	db	69
  4093  00A243  44                 	db	68
  4094  00A244  5F                 	db	95
  4095  00A245  41                 	db	65
  4096  00A246  52                 	db	82
  4097  00A247  43                 	db	67
  4098  00A248  00                 	db	0
  4099  00A249                     __end_of_initial_speed_arc_string:
  4100                           	opt stack 0
  4101  00A249                     _inverse_direction_string:
  4102                           	opt stack 0
  4103  00A249  49                 	db	73
  4104  00A24A  4E                 	db	78
  4105  00A24B  56                 	db	86
  4106  00A24C  45                 	db	69
  4107  00A24D  52                 	db	82
  4108  00A24E  53                 	db	83
  4109  00A24F  45                 	db	69
  4110  00A250  5F                 	db	95
  4111  00A251  44                 	db	68
  4112  00A252  49                 	db	73
  4113  00A253  52                 	db	82
  4114  00A254  45                 	db	69
  4115  00A255  43                 	db	67
  4116  00A256  54                 	db	84
  4117  00A257  49                 	db	73
  4118  00A258  4F                 	db	79
  4119  00A259  4E                 	db	78
  4120  00A25A  00                 	db	0
  4121  00A25B                     __end_of_inverse_direction_string:
  4122                           	opt stack 0
  4123  00A25B                     _device_dsc:
  4124                           	opt stack 0
  4125  00A25B  12                 	db	18
  4126  00A25C  01                 	db	1
  4127  00A25D  0200               	dw	512
  4128  00A25F  00                 	db	0
  4129  00A260  00                 	db	0
  4130  00A261  00                 	db	0
  4131  00A262  08                 	db	8
  4132  00A263  04D8               	dw	1240
  4133  00A265  EDCF               	dw	60879
  4134  00A267  0100               	dw	256
  4135  00A269  01                 	db	1
  4136  00A26A  02                 	db	2
  4137  00A26B  00                 	db	0
  4138  00A26C  01                 	db	1
  4139  00A26D                     __end_of_device_dsc:
  4140                           	opt stack 0
  4141  00A26D                     _use_ccw_limit_string:
  4142                           	opt stack 0
  4143  00A26D  55                 	db	85
  4144  00A26E  53                 	db	83
  4145  00A26F  45                 	db	69
  4146  00A270  5F                 	db	95
  4147  00A271  43                 	db	67
  4148  00A272  43                 	db	67
  4149  00A273  57                 	db	87
  4150  00A274  5F                 	db	95
  4151  00A275  4C                 	db	76
  4152  00A276  49                 	db	73
  4153  00A277  4D                 	db	77
  4154  00A278  49                 	db	73
  4155  00A279  54                 	db	84
  4156  00A27A  00                 	db	0
  4157  00A27B                     __end_of_use_ccw_limit_string:
  4158                           	opt stack 0
  4159  00A27B                     _beep_duration_string:
  4160                           	opt stack 0
  4161  00A27B  42                 	db	66
  4162  00A27C  45                 	db	69
  4163  00A27D  45                 	db	69
  4164  00A27E  50                 	db	80
  4165  00A27F  5F                 	db	95
  4166  00A280  44                 	db	68
  4167  00A281  55                 	db	85
  4168  00A282  52                 	db	82
  4169  00A283  41                 	db	65
  4170  00A284  54                 	db	84
  4171  00A285  49                 	db	73
  4172  00A286  4F                 	db	79
  4173  00A287  4E                 	db	78
  4174  00A288  00                 	db	0
  4175  00A289                     __end_of_beep_duration_string:
  4176                           	opt stack 0
  4177  00A289                     _maximum_speed_string:
  4178                           	opt stack 0
  4179  00A289  4D                 	db	77
  4180  00A28A  41                 	db	65
  4181  00A28B  58                 	db	88
  4182  00A28C  49                 	db	73
  4183  00A28D  4D                 	db	77
  4184  00A28E  55                 	db	85
  4185  00A28F  4D                 	db	77
  4186  00A290  5F                 	db	95
  4187  00A291  53                 	db	83
  4188  00A292  50                 	db	80
  4189  00A293  45                 	db	69
  4190  00A294  45                 	db	69
  4191  00A295  44                 	db	68
  4192  00A296  00                 	db	0
  4193  00A297                     __end_of_maximum_speed_string:
  4194                           	opt stack 0
  4195  00A297                     _minimum_speed_string:
  4196                           	opt stack 0
  4197  00A297  4D                 	db	77
  4198  00A298  49                 	db	73
  4199  00A299  4E                 	db	78
  4200  00A29A  49                 	db	73
  4201  00A29B  4D                 	db	77
  4202  00A29C  55                 	db	85
  4203  00A29D  4D                 	db	77
  4204  00A29E  5F                 	db	95
  4205  00A29F  53                 	db	83
  4206  00A2A0  50                 	db	80
  4207  00A2A1  45                 	db	69
  4208  00A2A2  45                 	db	69
  4209  00A2A3  44                 	db	68
  4210  00A2A4  00                 	db	0
  4211  00A2A5                     __end_of_minimum_speed_string:
  4212                           	opt stack 0
  4213  00A2A5                     _use_cw_limit_string:
  4214                           	opt stack 0
  4215  00A2A5  55                 	db	85
  4216  00A2A6  53                 	db	83
  4217  00A2A7  45                 	db	69
  4218  00A2A8  5F                 	db	95
  4219  00A2A9  43                 	db	67
  4220  00A2AA  57                 	db	87
  4221  00A2AB  5F                 	db	95
  4222  00A2AC  4C                 	db	76
  4223  00A2AD  49                 	db	73
  4224  00A2AE  4D                 	db	77
  4225  00A2AF  49                 	db	73
  4226  00A2B0  54                 	db	84
  4227  00A2B1  00                 	db	0
  4228  00A2B2                     __end_of_use_cw_limit_string:
  4229                           	opt stack 0
  4230  00A2B2                     _ccw_limit_string:
  4231                           	opt stack 0
  4232  00A2B2  43                 	db	67
  4233  00A2B3  43                 	db	67
  4234  00A2B4  57                 	db	87
  4235  00A2B5  5F                 	db	95
  4236  00A2B6  4C                 	db	76
  4237  00A2B7  49                 	db	73
  4238  00A2B8  4D                 	db	77
  4239  00A2B9  49                 	db	73
  4240  00A2BA  54                 	db	84
  4241  00A2BB  00                 	db	0
  4242  00A2BC                     __end_of_ccw_limit_string:
  4243                           	opt stack 0
  4244  00A2BC                     _cw_limit_string:
  4245                           	opt stack 0
  4246  00A2BC  43                 	db	67
  4247  00A2BD  57                 	db	87
  4248  00A2BE  5F                 	db	95
  4249  00A2BF  4C                 	db	76
  4250  00A2C0  49                 	db	73
  4251  00A2C1  4D                 	db	77
  4252  00A2C2  49                 	db	73
  4253  00A2C3  54                 	db	84
  4254  00A2C4  00                 	db	0
  4255  00A2C5                     __end_of_cw_limit_string:
  4256                           	opt stack 0
  4257  00A2C5                     _bit_pattern_ae:
  4258                           	opt stack 0
  4259  00A2C5  0A                 	db	10
  4260  00A2C6  00                 	db	0
  4261  00A2C7  0E                 	db	14
  4262  00A2C8  01                 	db	1
  4263  00A2C9  0F                 	db	15
  4264  00A2CA  11                 	db	17
  4265  00A2CB  0F                 	db	15
  4266  00A2CC  00                 	db	0
  4267  00A2CD                     __end_of_bit_pattern_ae:
  4268                           	opt stack 0
  4269  00A2CD                     _bit_pattern_degree:
  4270                           	opt stack 0
  4271  00A2CD  18                 	db	24
  4272  00A2CE  18                 	db	24
  4273  00A2CF  00                 	db	0
  4274  00A2D0  00                 	db	0
  4275  00A2D1  00                 	db	0
  4276  00A2D2  00                 	db	0
  4277  00A2D3  00                 	db	0
  4278  00A2D4  00                 	db	0
  4279  00A2D5                     __end_of_bit_pattern_degree:
  4280                           	opt stack 0
  4281  00A2D5                     _bit_pattern_verticalbar:
  4282                           	opt stack 0
  4283  00A2D5  04                 	db	4
  4284  00A2D6  04                 	db	4
  4285  00A2D7  04                 	db	4
  4286  00A2D8  04                 	db	4
  4287  00A2D9  04                 	db	4
  4288  00A2DA  04                 	db	4
  4289  00A2DB  04                 	db	4
  4290  00A2DC  04                 	db	4
  4291  00A2DD                     __end_of_bit_pattern_verticalbar:
  4292                           	opt stack 0
  4293  00A2DD                     _flash_command_pagesize_528:
  4294                           	opt stack 0
  4295  00A2DD  3D                 	db	61
  4296  00A2DE  2A                 	db	42
  4297  00A2DF  80                 	db	128
  4298  00A2E0  A7                 	db	167
  4299  00A2E1                     __end_of_flash_command_pagesize_528:
  4300                           	opt stack 0
  4301  00A2E1                     _flash_command_pagesize_512:
  4302                           	opt stack 0
  4303  00A2E1  3D                 	db	61
  4304  00A2E2  2A                 	db	42
  4305  00A2E3  80                 	db	128
  4306  00A2E4  A6                 	db	166
  4307  00A2E5                     __end_of_flash_command_pagesize_512:
  4308                           	opt stack 0
  4309  00A2E5                     _sd000:
  4310                           	opt stack 0
  4311  00A2E5  04                 	db	4
  4312  00A2E6  03                 	db	3
  4313  00A2E7  0409               	dw	1033
  4314  00A2E9                     __end_of_sd000:
  4315                           	opt stack 0
  4316  0000                     _RPINR22	set	3837
  4317  0000                     _RPOR23	set	3799
  4318  0000                     _RPOR21	set	3797
  4319  0000                     _RPINR21	set	3836
  4320  0000                     _RPOR4	set	3780
  4321  0000                     _PPSCONbits	set	3775
  4322  0000                     _CCPTMRS0bits	set	3922
  4323  0000                     _ANCON0bits	set	3912
  4324  0000                     _ANCON1bits	set	3913
  4325  0000                     _UEP0bits	set	3878
  4326  0000                     _UIEbits	set	3894
  4327  0000                     _UADDR	set	3896
  4328  0000                     _UIE	set	3894
  4329  0000                     _UEIE	set	3895
  4330  0000                     _UCFG	set	3897
  4331  0000                     _UEP1	set	3879
  4332  0000                     _UEP0	set	3878
  4333  0000                     _ADRESL	set	4035
  4334  0000                     _ADRESH	set	4036
  4335  0000                     _ADCON1bits	set	4033
  4336  0000                     _ADCON0bits	set	4034
  4337  0000                     _PORTA	set	3968
  4338  0000                     _PORTE	set	3972
  4339  0000                     _TMR2	set	4044
  4340  0000                     _PIE1bits	set	3997
  4341  0000                     _CCPR1L	set	4027
  4342  0000                     _PR2	set	4043
  4343  0000                     _T2CONbits	set	4042
  4344  0000                     _CCP1CONbits	set	4026
  4345  0000                     _RXADDRL	set	3945
  4346  0000                     _RXADDRH	set	3944
  4347  0000                     _DMABCL	set	3943
  4348  0000                     _DMABCH	set	3942
  4349  0000                     _TXADDRL	set	3947
  4350  0000                     _TXADDRH	set	3946
  4351  0000                     _DMACON2bits	set	3974
  4352  0000                     _DMACON1bits	set	3976
  4353  0000                     _SSP2CON1bits	set	3954
  4354  0000                     _SSP2STATbits	set	3955
  4355  0000                     _PORTDbits	set	3971
  4356  0000                     _PORTEbits	set	3972
  4357  0000                     _SSP1BUF	set	4041
  4358  0000                     _SSP1CON2bits	set	4037
  4359  0000                     _SSP1CON1bits	set	4038
  4360  0000                     _SSP1ADD	set	4040
  4361  0000                     _SSP1STATbits	set	4039
  4362  0000                     _PORTAbits	set	3968
  4363  0000                     _T0CONbits	set	4053
  4364  0000                     _TRISEbits	set	3990
  4365  0000                     _EECON2	set	4007
  4366  0000                     _LATBbits	set	3978
  4367  0000                     _LATAbits	set	3977
  4368  0000                     _TRISAbits	set	3986
  4369  0000                     _LATCbits	set	3979
  4370  0000                     _TRISCbits	set	3988
  4371  0000                     _TRISBbits	set	3987
  4372  0000                     _LATDbits	set	3980
  4373  0000                     _TRISDbits	set	3989
  4374  0000                     _TMR0L	set	4054
  4375  0000                     _TMR0H	set	4055
  4376  0000                     _PIR1bits	set	3998
  4377  0000                     _OSCCON	set	4051
  4378  0000                     _OSCTUNEbits	set	3995
  4379  0000                     _INTCONbits	set	4082
  4380  0000                     _IPR2bits	set	4002
  4381  0000                     _RCONbits	set	4048
  4382  0000                     _UCON	set	3941
  4383  0000                     _USTAT	set	3940
  4384  0000                     _PIR2bits	set	4001
  4385  0000                     _UIRbits	set	3938
  4386  0000                     _UCONbits	set	3941
  4387  0000                     _UIR	set	3938
  4388  0000                     _UEIR	set	3939
  4389  0000                     _PIE2bits	set	4000
  4390  00A2E9                     
  4391                           ; BSR set to: 1
  4392  00A2E9  68                 	db	104	;'h'
  4393  00A2EA  65                 	db	101	;'e'
  4394  00A2EB  6C                 	db	108	;'l'
  4395  00A2EC  6C                 	db	108	;'l'
  4396  00A2ED  6F                 	db	111	;'o'
  4397  00A2EE  20                 	db	32
  4398  00A2EF  77                 	db	119	;'w'
  4399  00A2F0  6F                 	db	111	;'o'
  4400  00A2F1  72                 	db	114	;'r'
  4401  00A2F2  6C                 	db	108	;'l'
  4402  00A2F3  64                 	db	100	;'d'
  4403  00A2F4  21                 	db	33
  4404  00A2F5  00                 	db	0
  4405  00A2F6                     
  4406                           ; BSR set to: 1
  4407  00A2F6  53                 	db	83	;'S'
  4408  00A2F7  74                 	db	116	;'t'
  4409  00A2F8  65                 	db	101	;'e'
  4410  00A2F9  70                 	db	112	;'p'
  4411  00A2FA  70                 	db	112	;'p'
  4412  00A2FB  65                 	db	101	;'e'
  4413  00A2FC  72                 	db	114	;'r'
  4414  00A2FD  43                 	db	67	;'C'
  4415  00A2FE  74                 	db	116	;'t'
  4416  00A2FF  72                 	db	114	;'r'
  4417  00A300  6C                 	db	108	;'l'
  4418  00A301  00                 	db	0
  4419  00A302                     
  4420                           ; BSR set to: 1
  4421  00A302  46                 	db	70	;'F'
  4422  00A303  49                 	db	73	;'I'
  4423  00A304  4C                 	db	76	;'L'
  4424  00A305  45                 	db	69	;'E'
  4425  00A306  20                 	db	32
  4426  00A307  20                 	db	32
  4427  00A308  20                 	db	32
  4428  00A309  20                 	db	32
  4429  00A30A  00                 	db	0
  4430  00A30B                     STR_7:
  4431                           
  4432                           ; BSR set to: 1
  4433  00A30B  4D                 	db	77	;'M'
  4434  00A30C  53                 	db	83	;'S'
  4435  00A30D  44                 	db	68	;'D'
  4436  00A30E  4F                 	db	79	;'O'
  4437  00A30F  53                 	db	83	;'S'
  4438  00A310  35                 	db	53	;'5'
  4439  00A311  2E                 	db	46
  4440  00A312  30                 	db	48	;'0'
  4441  00A313  00                 	db	0
  4442  00A314                     STR_1:
  4443                           
  4444                           ; BSR set to: 1
  4445  00A314  20                 	db	32
  4446  00A315  20                 	db	32
  4447  00A316  20                 	db	32
  4448  00A317  20                 	db	32
  4449  00A318  20                 	db	32
  4450  00A319  20                 	db	32
  4451  00A31A  20                 	db	32
  4452  00A31B  20                 	db	32
  4453  00A31C  00                 	db	0
  4454  00A31D                     STR_2:
  4455                           
  4456                           ; BSR set to: 1
  4457  00A31D  43                 	db	67	;'C'
  4458  00A31E  61                 	db	97	;'a'
  4459  00A31F  6E                 	db	110	;'n'
  4460  00A320  63                 	db	99	;'c'
  4461  00A321  65                 	db	101	;'e'
  4462  00A322  6C                 	db	108	;'l'
  4463  00A323  00                 	db	0
  4464  00A324                     STR_6:
  4465                           
  4466                           ; BSR set to: 1
  4467  00A324  53                 	db	83	;'S'
  4468  00A325  74                 	db	116	;'t'
  4469  00A326  6F                 	db	111	;'o'
  4470  00A327  70                 	db	112	;'p'
  4471  00A328  20                 	db	32
  4472  00A329  00                 	db	0
  4473  00A32A                     
  4474                           ; BSR set to: 1
  4475  00A32A  54                 	db	84	;'T'
  4476  00A32B  58                 	db	88	;'X'
  4477  00A32C  54                 	db	84	;'T'
  4478  00A32D  00                 	db	0
  4479  0000                     
  4480                           ; #config settings
  4481  00A32E  00                 	db	0	; dummy byte at the end
  4482  0000                     
  4483                           	psect	cinit
  4484  013384                     __pcinit:
  4485                           	opt stack 0
  4486  013384                     start_initialization:
  4487                           	opt stack 0
  4488  013384                     __initialization:
  4489                           	opt stack 0
  4490                           
  4491                           ; Initialize objects allocated to BANK4 (80 bytes)
  4492                           ; load TBLPTR registers with __pidataBANK4
  4493  013384  0EE0               	movlw	low __pidataBANK4
  4494  013386  6EF6               	movwf	tblptrl,c
  4495  013388  0E48               	movlw	high __pidataBANK4
  4496  01338A  6EF7               	movwf	tblptrh,c
  4497  01338C  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4498  01338E  6EF8               	movwf	tblptru,c
  4499  013390  EE04  F000         	lfsr	0,__pdataBANK4
  4500  013394  EE10 F050          	lfsr	1,80
  4501  013398                     copy_data0:
  4502  013398  0009               	tblrd		*+
  4503  01339A  CFF5 FFEE          	movff	tablat,postinc0
  4504  01339E  50E5               	movf	postdec1,w,c
  4505  0133A0  50E1               	movf	fsr1l,w,c
  4506  0133A2  E1FA               	bnz	copy_data0
  4507                           
  4508                           ; Initialize objects allocated to BANK2 (77 bytes)
  4509                           ; load TBLPTR registers with __pidataBANK2
  4510  0133A4  0E70               	movlw	low __pidataBANK2
  4511  0133A6  6EF6               	movwf	tblptrl,c
  4512  0133A8  0E4A               	movlw	high __pidataBANK2
  4513  0133AA  6EF7               	movwf	tblptrh,c
  4514  0133AC  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4515  0133AE  6EF8               	movwf	tblptru,c
  4516  0133B0  EE02  F089         	lfsr	0,__pdataBANK2
  4517  0133B4  EE10 F04D          	lfsr	1,77
  4518  0133B8                     copy_data1:
  4519  0133B8  0009               	tblrd		*+
  4520  0133BA  CFF5 FFEE          	movff	tablat,postinc0
  4521  0133BE  50E5               	movf	postdec1,w,c
  4522  0133C0  50E1               	movf	fsr1l,w,c
  4523  0133C2  E1FA               	bnz	copy_data1
  4524                           
  4525                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4526  0133C4  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4527  0133C8  EE14 F000          	lfsr	1,1024
  4528  0133CC                     clear_0:
  4529  0133CC  6AEE               	clrf	postinc0,c
  4530  0133CE  50E5               	movf	postdec1,w,c
  4531  0133D0  50E1               	movf	fsr1l,w,c
  4532  0133D2  E1FC               	bnz	clear_0
  4533  0133D4  50E2               	movf	fsr1h,w,c
  4534  0133D6  E1FA               	bnz	clear_0
  4535                           
  4536                           ; Clear objects allocated to BANK3 (192 bytes)
  4537  0133D8  EE03  F000         	lfsr	0,__pbssBANK3
  4538  0133DC  0EC0               	movlw	192
  4539  0133DE                     clear_1:
  4540  0133DE  6AEE               	clrf	postinc0,c
  4541  0133E0  06E8               	decf	wreg,f,c
  4542  0133E2  E1FD               	bnz	clear_1
  4543                           
  4544                           ; Clear objects allocated to BANK2 (137 bytes)
  4545  0133E4  EE02  F000         	lfsr	0,__pbssBANK2
  4546  0133E8  0E89               	movlw	137
  4547  0133EA                     clear_2:
  4548  0133EA  6AEE               	clrf	postinc0,c
  4549  0133EC  06E8               	decf	wreg,f,c
  4550  0133EE  E1FD               	bnz	clear_2
  4551                           
  4552                           ; Clear objects allocated to BANK1 (195 bytes)
  4553  0133F0  EE01  F000         	lfsr	0,__pbssBANK1
  4554  0133F4  0EC3               	movlw	195
  4555  0133F6                     clear_3:
  4556  0133F6  6AEE               	clrf	postinc0,c
  4557  0133F8  06E8               	decf	wreg,f,c
  4558  0133FA  E1FD               	bnz	clear_3
  4559                           
  4560                           ; Clear objects allocated to BANK0 (2 bytes)
  4561  0133FC  0100               	movlb	0
  4562  0133FE  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
  4563  013400  6BFE               	clrf	__pbssBANK0& (0+255),b
  4564                           
  4565                           ; Clear objects allocated to COMRAM (13 bytes)
  4566  013402  EE00  F052         	lfsr	0,__pbssCOMRAM
  4567  013406  0E0D               	movlw	13
  4568  013408                     clear_4:
  4569  013408  6AEE               	clrf	postinc0,c
  4570  01340A  06E8               	decf	wreg,f,c
  4571  01340C  E1FD               	bnz	clear_4
  4572  01340E                     end_of_initialization:
  4573                           	opt stack 0
  4574  01340E                     __end_of__initialization:
  4575                           	opt stack 0
  4576  01340E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4577  013410  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4578  013412  0100               	movlb	0
  4579  013414  EF2C  F099         	goto	_main	;jump to C main() function
  4580                           tblptru	equ	0xFF8
  4581                           tblptrh	equ	0xFF7
  4582                           tblptrl	equ	0xFF6
  4583                           tablat	equ	0xFF5
  4584                           postinc0	equ	0xFEE
  4585                           wreg	equ	0xFE8
  4586                           postdec1	equ	0xFE5
  4587                           fsr1h	equ	0xFE2
  4588                           fsr1l	equ	0xFE1
  4589                           
  4590                           	psect	bssCOMRAM
  4591  000052                     __pbssCOMRAM:
  4592                           	opt stack 0
  4593  000052                     _inPipes:
  4594                           	opt stack 0
  4595  000052                     	ds	6
  4596  000058                     _motor_current_stepcount:
  4597                           	opt stack 0
  4598  000058                     	ds	4
  4599  00005C                     _pBDTEntryEP0OutNext:
  4600                           	opt stack 0
  4601  00005C                     	ds	2
  4602  00005E                     _USBDeviceState:
  4603                           	opt stack 0
  4604  00005E                     	ds	1
  4605                           tblptru	equ	0xFF8
  4606                           tblptrh	equ	0xFF7
  4607                           tblptrl	equ	0xFF6
  4608                           tablat	equ	0xFF5
  4609                           postinc0	equ	0xFEE
  4610                           wreg	equ	0xFE8
  4611                           postdec1	equ	0xFE5
  4612                           fsr1h	equ	0xFE2
  4613                           fsr1l	equ	0xFE1
  4614                           
  4615                           	psect	bssBANK0
  4616  0000FE                     __pbssBANK0:
  4617                           	opt stack 0
  4618  0000FE                     _motor_current_speed:
  4619                           	opt stack 0
  4620  0000FE                     	ds	2
  4621                           tblptru	equ	0xFF8
  4622                           tblptrh	equ	0xFF7
  4623                           tblptrl	equ	0xFF6
  4624                           tablat	equ	0xFF5
  4625                           postinc0	equ	0xFEE
  4626                           wreg	equ	0xFE8
  4627                           postdec1	equ	0xFE5
  4628                           fsr1h	equ	0xFE2
  4629                           fsr1l	equ	0xFE1
  4630                           
  4631                           	psect	bssBANK1
  4632  000100                     __pbssBANK1:
  4633                           	opt stack 0
  4634  000100                     _gblSenseData:
  4635                           	opt stack 0
  4636  000100                     	ds	18
  4637  000112                     _outPipes:
  4638                           	opt stack 0
  4639  000112                     	ds	9
  4640  00011B                     _pBDTEntryIn:
  4641                           	opt stack 0
  4642  00011B                     	ds	6
  4643  000121                     _pBDTEntryOut:
  4644                           	opt stack 0
  4645  000121                     	ds	6
  4646  000127                     _motor_final_stepcount:
  4647                           	opt stack 0
  4648  000127                     	ds	4
  4649  00012B                     _LBA:
  4650                           	opt stack 0
  4651  00012B                     	ds	4
  4652  00012F                     _USB1msTickCount:
  4653                           	opt stack 0
  4654  00012F                     	ds	4
  4655  000133                     _config_external:
  4656                           	opt stack 0
  4657  000133                     	ds	3
  4658  000136                     _config_internal:
  4659                           	opt stack 0
  4660  000136                     	ds	3
  4661  000139                     _ep_data_out:
  4662                           	opt stack 0
  4663  000139                     	ds	3
  4664  00013C                     _ep_data_in:
  4665                           	opt stack 0
  4666  00013C                     	ds	3
  4667  00013F                     _motor_maximum_speed:
  4668                           	opt stack 0
  4669  00013F                     	ds	2
  4670  000141                     _USBInHandle:
  4671                           	opt stack 0
  4672  000141                     	ds	2
  4673  000143                     _USBOutHandle:
  4674                           	opt stack 0
  4675  000143                     	ds	2
  4676  000145                     _TransferLength:
  4677                           	opt stack 0
  4678  000145                     	ds	2
  4679  000147                     _gblMediaPresent:
  4680                           	opt stack 0
  4681  000147                     	ds	2
  4682  000149                     _USBMSDInHandle:
  4683                           	opt stack 0
  4684  000149                     	ds	2
  4685  00014B                     _USBMSDOutHandle:
  4686                           	opt stack 0
  4687  00014B                     	ds	2
  4688  00014D                     _ptrNextData:
  4689                           	opt stack 0
  4690  00014D                     	ds	2
  4691  00014F                     _pDst:
  4692                           	opt stack 0
  4693  00014F                     	ds	2
  4694  000151                     _pBDTEntryEP0OutCurrent:
  4695                           	opt stack 0
  4696  000151                     	ds	2
  4697  000153                     _enc2:
  4698                           	opt stack 0
  4699  000153                     	ds	1
  4700  000154                     _enc1:
  4701                           	opt stack 0
  4702  000154                     	ds	1
  4703  000155                     _motor_direction:
  4704                           	opt stack 0
  4705  000155                     	ds	1
  4706  000156                     _motor_mode:
  4707                           	opt stack 0
  4708  000156                     	ds	1
  4709  000157                     _motor_cue_write_index:
  4710                           	opt stack 0
  4711  000157                     	ds	1
  4712  000158                     _motor_cue_read_index:
  4713                           	opt stack 0
  4714  000158                     	ds	1
  4715  000159                     _active_configuration:
  4716                           	opt stack 0
  4717  000159                     	ds	1
  4718  00015A                     _power_state:
  4719                           	opt stack 0
  4720  00015A                     	ds	1
  4721  00015B                     _MSDCBWValid:
  4722                           	opt stack 0
  4723  00015B                     	ds	1
  4724  00015C                     _MSDHostNoData:
  4725                           	opt stack 0
  4726  00015C                     	ds	1
  4727  00015D                     _SoftDetach:
  4728                           	opt stack 0
  4729  00015D                     	ds	1
  4730  00015E                     _gblCBWLength:
  4731                           	opt stack 0
  4732  00015E                     	ds	1
  4733  00015F                     _MSDRetryAttempt:
  4734                           	opt stack 0
  4735  00015F                     	ds	1
  4736  000160                     _MSDWriteState:
  4737                           	opt stack 0
  4738  000160                     	ds	1
  4739  000161                     _MSDReadState:
  4740                           	opt stack 0
  4741  000161                     	ds	1
  4742  000162                     _MSDCommandState:
  4743                           	opt stack 0
  4744  000162                     	ds	1
  4745  000163                     _MSD_State:
  4746                           	opt stack 0
  4747  000163                     	ds	1
  4748  000164                     _USBTicksSinceSuspendEnd:
  4749                           	opt stack 0
  4750  000164                     	ds	1
  4751  000165                     _USBDeferOUTDataStagePackets:
  4752                           	opt stack 0
  4753  000165                     	ds	1
  4754  000166                     _USBDeferINDataStagePackets:
  4755                           	opt stack 0
  4756  000166                     	ds	1
  4757  000167                     _USBStatusStageEnabledFlag2:
  4758                           	opt stack 0
  4759  000167                     	ds	1
  4760  000168                     _USBStatusStageEnabledFlag1:
  4761                           	opt stack 0
  4762  000168                     	ds	1
  4763  000169                     _USBDeferStatusStagePacket:
  4764                           	opt stack 0
  4765  000169                     	ds	1
  4766  00016A                     _USBStatusStageTimeoutCounter:
  4767                           	opt stack 0
  4768  00016A                     	ds	1
  4769  00016B                     _BothEP0OutUOWNsSet:
  4770                           	opt stack 0
  4771  00016B                     	ds	1
  4772  00016C                     _endpoint_number:
  4773                           	opt stack 0
  4774  00016C                     	ds	1
  4775  00016D                     _USBBusIsSuspended:
  4776                           	opt stack 0
  4777  00016D                     	ds	1
  4778  00016E                     _RemoteWakeup:
  4779                           	opt stack 0
  4780  00016E                     	ds	1
  4781  00016F                     _controlTransferState:
  4782                           	opt stack 0
  4783  00016F                     	ds	1
  4784  000170                     _shortPacketStatus:
  4785                           	opt stack 0
  4786  000170                     	ds	1
  4787  000171                     _os:
  4788                           	opt stack 0
  4789  000171                     	ds	48
  4790  0001A1                     _config:
  4791                           	opt stack 0
  4792  0001A1                     	ds	28
  4793  0001BD                     _USBAlternateInterface:
  4794                           	opt stack 0
  4795  0001BD                     	ds	2
  4796  0001BF                     _active_protocol:
  4797                           	opt stack 0
  4798  0001BF                     	ds	1
  4799  0001C0                     _idle_rate:
  4800                           	opt stack 0
  4801  0001C0                     	ds	1
  4802  0001C1                     _USTATcopy:
  4803                           	opt stack 0
  4804  0001C1                     	ds	1
  4805  0001C2                     _USBActiveConfiguration:
  4806                           	opt stack 0
  4807  0001C2                     	ds	1
  4808                           tblptru	equ	0xFF8
  4809                           tblptrh	equ	0xFF7
  4810                           tblptrl	equ	0xFF6
  4811                           tablat	equ	0xFF5
  4812                           postinc0	equ	0xFEE
  4813                           wreg	equ	0xFE8
  4814                           postdec1	equ	0xFE5
  4815                           fsr1h	equ	0xFE2
  4816                           fsr1l	equ	0xFE1
  4817                           
  4818                           	psect	bssBANK2
  4819  000200                     __pbssBANK2:
  4820                           	opt stack 0
  4821  000200                     _gblCBW:
  4822                           	opt stack 0
  4823  000200                     	ds	31
  4824  00021F                     _params:
  4825                           	opt stack 0
  4826  00021F                     	ds	7
  4827  000226                     _motor_next_speed_check:
  4828                           	opt stack 0
  4829  000226                     	ds	4
  4830  00022A                     _gblBLKLen:
  4831                           	opt stack 0
  4832  00022A                     	ds	4
  4833  00022E                     _gblNumBLKS:
  4834                           	opt stack 0
  4835  00022E                     	ds	4
  4836  000232                     _MSBBufferIndex:
  4837                           	opt stack 0
  4838  000232                     	ds	2
  4839  000234                     _display_content:
  4840                           	opt stack 0
  4841  000234                     	ds	80
  4842  000284                     _mediaInformation:
  4843                           	opt stack 0
  4844  000284                     	ds	5
  4845                           tblptru	equ	0xFF8
  4846                           tblptrh	equ	0xFF7
  4847                           tblptrl	equ	0xFF6
  4848                           tablat	equ	0xFF5
  4849                           postinc0	equ	0xFEE
  4850                           wreg	equ	0xFE8
  4851                           postdec1	equ	0xFE5
  4852                           fsr1h	equ	0xFE2
  4853                           fsr1l	equ	0xFE1
  4854                           
  4855                           	psect	dataBANK2
  4856  000289                     __pdataBANK2:
  4857                           	opt stack 0
  4858  000289                     _LUN:
  4859                           	opt stack 0
  4860  000289                     	ds	29
  4861  0002A6                     i2c_display_init@F6951:
  4862                           	opt stack 0
  4863  0002A6                     	ds	9
  4864  0002AF                     __i2c_display_send_init_sequence@F6948:
  4865                           	opt stack 0
  4866  0002AF                     	ds	9
  4867  0002B8                     	ds	8
  4868  0002C0                     _configFile_used_name:
  4869                           	opt stack 0
  4870  0002C0                     	ds	8
  4871  0002C8                     _configFile_name:
  4872                           	opt stack 0
  4873  0002C8                     	ds	8
  4874  0002D0                     _configFile_used_extention:
  4875                           	opt stack 0
  4876  0002D0                     	ds	3
  4877  0002D3                     _configFile_extention:
  4878                           	opt stack 0
  4879  0002D3                     	ds	3
  4880                           tblptru	equ	0xFF8
  4881                           tblptrh	equ	0xFF7
  4882                           tblptrl	equ	0xFF6
  4883                           tablat	equ	0xFF5
  4884                           postinc0	equ	0xFEE
  4885                           wreg	equ	0xFE8
  4886                           postdec1	equ	0xFE5
  4887                           fsr1h	equ	0xFE2
  4888                           fsr1l	equ	0xFE1
  4889                           
  4890                           	psect	bssBANK3
  4891  000300                     __pbssBANK3:
  4892                           	opt stack 0
  4893  000300                     _motor_command_cue:
  4894                           	opt stack 0
  4895  000300                     	ds	64
  4896  000340                     _ToSendDataBuffer:
  4897                           	opt stack 0
  4898  000340                     	ds	64
  4899  000380                     _ReceivedDataBuffer:
  4900                           	opt stack 0
  4901  000380                     	ds	64
  4902                           tblptru	equ	0xFF8
  4903                           tblptrh	equ	0xFF7
  4904                           tblptrl	equ	0xFF6
  4905                           tablat	equ	0xFF5
  4906                           postinc0	equ	0xFEE
  4907                           wreg	equ	0xFE8
  4908                           postdec1	equ	0xFE5
  4909                           fsr1h	equ	0xFE2
  4910                           fsr1l	equ	0xFE1
  4911                           
  4912                           	psect	dataBANK4
  4913  000400                     __pdataBANK4:
  4914                           	opt stack 0
  4915  000400                     _dc_startup:
  4916                           	opt stack 0
  4917  000400                     	ds	80
  4918                           tblptru	equ	0xFF8
  4919                           tblptrh	equ	0xFF7
  4920                           tblptrl	equ	0xFF6
  4921                           tablat	equ	0xFF5
  4922                           postinc0	equ	0xFEE
  4923                           wreg	equ	0xFE8
  4924                           postdec1	equ	0xFE5
  4925                           fsr1h	equ	0xFE2
  4926                           fsr1l	equ	0xFE1
  4927                           
  4928                           	psect	bssBIGRAMll
  4929  000800                     __pbssBIGRAMll:
  4930                           	opt stack 0
  4931  000800                     _ConfigFile_buffer:
  4932                           	opt stack 0
  4933  000800                     	ds	512
  4934  000A00                     _buffer:
  4935                           	opt stack 0
  4936  000A00                     	ds	512
  4937                           tblptru	equ	0xFF8
  4938                           tblptrh	equ	0xFF7
  4939                           tblptrl	equ	0xFF6
  4940                           tablat	equ	0xFF5
  4941                           postinc0	equ	0xFEE
  4942                           wreg	equ	0xFE8
  4943                           postdec1	equ	0xFE5
  4944                           fsr1h	equ	0xFE2
  4945                           fsr1l	equ	0xFE1
  4946                           
  4947                           	psect	cstackBANK1
  4948  0001C3                     __pcstackBANK1:
  4949                           	opt stack 0
  4950  0001C3                     ??_configFile_read:
  4951                           
  4952                           ; 1 bytes @ 0x0
  4953  0001C3                     	ds	8
  4954  0001CB                     configFile_read@item_string:
  4955                           	opt stack 0
  4956                           
  4957                           ; 31 bytes @ 0x8
  4958  0001CB                     	ds	31
  4959  0001EA                     configFile_read@value_string:
  4960                           	opt stack 0
  4961                           
  4962                           ; 12 bytes @ 0x27
  4963  0001EA                     	ds	12
  4964  0001F6                     configFile_read@file_size:
  4965                           	opt stack 0
  4966                           
  4967                           ; 4 bytes @ 0x33
  4968  0001F6                     	ds	4
  4969  0001FA                     configFile_read@file_number:
  4970                           	opt stack 0
  4971                           
  4972                           ; 1 bytes @ 0x37
  4973  0001FA                     	ds	1
  4974  0001FB                     configFile_read@position:
  4975                           	opt stack 0
  4976                           
  4977                           ; 4 bytes @ 0x38
  4978  0001FB                     	ds	4
  4979                           tblptru	equ	0xFF8
  4980                           tblptrh	equ	0xFF7
  4981                           tblptrl	equ	0xFF6
  4982                           tablat	equ	0xFF5
  4983                           postinc0	equ	0xFEE
  4984                           wreg	equ	0xFE8
  4985                           postdec1	equ	0xFE5
  4986                           fsr1h	equ	0xFE2
  4987                           fsr1l	equ	0xFE1
  4988                           
  4989                           	psect	cstackBANK0
  4990  000060                     __pcstackBANK0:
  4991                           	opt stack 0
  4992  000060                     ??_motor_stop:
  4993  000060                     ??_isdigit:
  4994  000060                     ??__i2c_wait_idle:
  4995  000060                     ??__display_clear:
  4996  000060                     ??__divide_jump_size_increment:
  4997  000060                     ??__divide_jump_size_decrement:
  4998  000060                     ?_USBTransferOnePacket:
  4999                           	opt stack 0
  5000  000060                     ?_ExternalFlash_MediaInitialize:
  5001                           	opt stack 0
  5002  000060                     ?_ExternalFlash_SectorSizeRead:
  5003                           	opt stack 0
  5004  000060                     ?_strlen:
  5005                           	opt stack 0
  5006  000060                     ?_strncmp:
  5007                           	opt stack 0
  5008  000060                     ?__sector_from_file_number:
  5009                           	opt stack 0
  5010  000060                     ?__offset_from_file_number:
  5011                           	opt stack 0
  5012  000060                     ?__data_sector_from_cluster:
  5013                           	opt stack 0
  5014  000060                     ?__fat_sector_from_cluster:
  5015                           	opt stack 0
  5016  000060                     ?__fat_offset_from_cluster:
  5017                           	opt stack 0
  5018  000060                     ?__cluster_from_sector_and_offset:
  5019                           	opt stack 0
  5020  000060                     ?__get_available_offset_from_buffer:
  5021                           	opt stack 0
  5022  000060                     ?__read_value_from_offset:
  5023                           	opt stack 0
  5024  000060                     ?__get_time:
  5025                           	opt stack 0
  5026  000060                     ?__get_date:
  5027                           	opt stack 0
  5028  000060                     ?__encoder_next_setup_stepsize:
  5029                           	opt stack 0
  5030  000060                     ?__encoder_next_arc_step_size:
  5031                           	opt stack 0
  5032  000060                     ?___wmul:
  5033                           	opt stack 0
  5034  000060                     ?___lwdiv:
  5035                           	opt stack 0
  5036  000060                     ?___lwmod:
  5037                           	opt stack 0
  5038  000060                     ?_ExternalFlash_CapacityRead:
  5039                           	opt stack 0
  5040  000060                     ?___lmul:
  5041                           	opt stack 0
  5042  000060                     ?___lldiv:
  5043                           	opt stack 0
  5044  000060                     ?___aldiv:
  5045                           	opt stack 0
  5046  000060                     ?___almod:
  5047                           	opt stack 0
  5048  000060                     ?___fltol:
  5049                           	opt stack 0
  5050  000060                     ?___llmod:
  5051                           	opt stack 0
  5052  000060                     ?___xxtofl:
  5053                           	opt stack 0
  5054  000060                     USBTransferOnePacket@dir:
  5055                           	opt stack 0
  5056  000060                     USBStallEndpoint@dir:
  5057                           	opt stack 0
  5058  000060                     __i2c_send@dat:
  5059                           	opt stack 0
  5060  000060                     display_get_character@position:
  5061                           	opt stack 0
  5062  000060                     __encoder_next_divide_step_size@old_stepsize:
  5063                           	opt stack 0
  5064  000060                     toupper@c:
  5065                           	opt stack 0
  5066  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5067                           	opt stack 0
  5068  000060                     SYSTEM_Initialize@pll_startup_counter:
  5069                           	opt stack 0
  5070  000060                     ExternalFlash_MediaInitialize@config:
  5071                           	opt stack 0
  5072  000060                     ExternalFlash_SectorSizeRead@config:
  5073                           	opt stack 0
  5074  000060                     ExternalFlash_CapacityRead@config:
  5075                           	opt stack 0
  5076  000060                     ExternalFlash_MediaDetect@config:
  5077                           	opt stack 0
  5078  000060                     ExternalFlash_WriteProtectStateGet@config:
  5079                           	opt stack 0
  5080  000060                     __data_sector_from_cluster@fat_cluster:
  5081                           	opt stack 0
  5082  000060                     __fat_sector_from_cluster@cluster:
  5083                           	opt stack 0
  5084  000060                     __fat_offset_from_cluster@cluster:
  5085                           	opt stack 0
  5086  000060                     __cluster_from_sector_and_offset@sector:
  5087                           	opt stack 0
  5088  000060                     __get_available_offset_from_buffer@minimum_offset:
  5089                           	opt stack 0
  5090  000060                     __read_value_from_offset@offset:
  5091                           	opt stack 0
  5092  000060                     __write_value_to_offset@offset:
  5093                           	opt stack 0
  5094  000060                     __get_mbr@idx:
  5095                           	opt stack 0
  5096  000060                     __get_fbr@idx:
  5097                           	opt stack 0
  5098  000060                     spi_tx@data:
  5099                           	opt stack 0
  5100  000060                     spi_tx_tx@command:
  5101                           	opt stack 0
  5102  000060                     spi_tx_rx@command:
  5103                           	opt stack 0
  5104  000060                     __fill_buffer_get_mode_details@outBuffer:
  5105                           	opt stack 0
  5106  000060                     motor_change_speed@new_speed:
  5107                           	opt stack 0
  5108  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5109                           	opt stack 0
  5110  000060                     __encoder_next_arc_step_size@old_stepsize:
  5111                           	opt stack 0
  5112  000060                     __get_item@item_string:
  5113                           	opt stack 0
  5114  000060                     ___wmul@multiplier:
  5115                           	opt stack 0
  5116  000060                     ___lwdiv@dividend:
  5117                           	opt stack 0
  5118  000060                     ___lwmod@dividend:
  5119                           	opt stack 0
  5120  000060                     memcpy@d1:
  5121                           	opt stack 0
  5122  000060                     memset@p1:
  5123                           	opt stack 0
  5124  000060                     strlen@s:
  5125                           	opt stack 0
  5126  000060                     strncmp@s1:
  5127                           	opt stack 0
  5128  000060                     __spi_init@details:
  5129                           	opt stack 0
  5130  000060                     ___lmul@multiplier:
  5131                           	opt stack 0
  5132  000060                     ___lldiv@dividend:
  5133                           	opt stack 0
  5134  000060                     ___aldiv@dividend:
  5135                           	opt stack 0
  5136  000060                     ___almod@dividend:
  5137                           	opt stack 0
  5138  000060                     ___fltol@f1:
  5139                           	opt stack 0
  5140  000060                     ___llmod@dividend:
  5141                           	opt stack 0
  5142  000060                     ___xxtofl@val:
  5143                           	opt stack 0
  5144                           
  5145                           ; 4 bytes @ 0x0
  5146  000060                     	ds	1
  5147  000061                     ??_USBStallEndpoint:
  5148  000061                     ??_display_get_character:
  5149  000061                     ?_stricmp:
  5150                           	opt stack 0
  5151  000061                     _isdigit$8211:
  5152                           	opt stack 0
  5153  000061                     USBTransferOnePacket@data:
  5154                           	opt stack 0
  5155  000061                     stricmp@s1:
  5156                           	opt stack 0
  5157                           
  5158                           ; 2 bytes @ 0x1
  5159  000061                     	ds	1
  5160  000062                     ??_MSDComputeDeviceInAndResidue:
  5161  000062                     ??_strlen:
  5162  000062                     ??__fill_buffer_get_mode_details:
  5163  000062                     ??__get_mbr:
  5164  000062                     ??__get_fbr:
  5165  000062                     ??__encoder_next_setup_stepsize:
  5166  000062                     ??__encoder_next_arc_step_size:
  5167  000062                     __display_clear@row:
  5168                           	opt stack 0
  5169  000062                     __sector_from_file_number@file_number:
  5170                           	opt stack 0
  5171  000062                     __offset_from_file_number@file_number:
  5172                           	opt stack 0
  5173  000062                     isdigit@c:
  5174                           	opt stack 0
  5175  000062                     SYSTEM_Initialize@pll_startup_counter_3132:
  5176                           	opt stack 0
  5177  000062                     __cluster_from_sector_and_offset@offset:
  5178                           	opt stack 0
  5179  000062                     __get_available_offset_from_buffer@buffer:
  5180                           	opt stack 0
  5181  000062                     __read_value_from_offset@buffer:
  5182                           	opt stack 0
  5183  000062                     __write_value_to_offset@buffer:
  5184                           	opt stack 0
  5185  000062                     spi_tx@length:
  5186                           	opt stack 0
  5187  000062                     spi_tx_tx@command_length:
  5188                           	opt stack 0
  5189  000062                     spi_tx_rx@command_length:
  5190                           	opt stack 0
  5191  000062                     motor_set_manual_speed@new_speed:
  5192                           	opt stack 0
  5193  000062                     __get_item@value_string:
  5194                           	opt stack 0
  5195  000062                     ___wmul@multiplicand:
  5196                           	opt stack 0
  5197  000062                     ___lwdiv@divisor:
  5198                           	opt stack 0
  5199  000062                     ___lwmod@divisor:
  5200                           	opt stack 0
  5201  000062                     memcpy@s1:
  5202                           	opt stack 0
  5203  000062                     memset@c:
  5204                           	opt stack 0
  5205  000062                     strncmp@s2:
  5206                           	opt stack 0
  5207                           
  5208                           ; 2 bytes @ 0x2
  5209  000062                     	ds	1
  5210  000063                     USBTransferOnePacket@len:
  5211                           	opt stack 0
  5212  000063                     __display_clear@col:
  5213                           	opt stack 0
  5214  000063                     display_get_character@line:
  5215                           	opt stack 0
  5216  000063                     spi_init@configuration:
  5217                           	opt stack 0
  5218  000063                     __sector_from_file_number@sector:
  5219                           	opt stack 0
  5220  000063                     __offset_from_file_number@offset:
  5221                           	opt stack 0
  5222  000063                     stricmp@s2:
  5223                           	opt stack 0
  5224                           
  5225                           ; 2 bytes @ 0x3
  5226  000063                     	ds	1
  5227  000064                     ??_USBTransferOnePacket:
  5228  000064                     ??_spi_tx:
  5229  000064                     ??__get_available_offset_from_buffer:
  5230  000064                     ??__read_value_from_offset:
  5231  000064                     ??___fltol:
  5232  000064                     ??___xxtofl:
  5233  000064                     SYSTEM_Initialize@state:
  5234                           	opt stack 0
  5235  000064                     ___lwmod@counter:
  5236                           	opt stack 0
  5237  000064                     __write_value_to_offset@value:
  5238                           	opt stack 0
  5239  000064                     spi_tx_tx@data:
  5240                           	opt stack 0
  5241  000064                     spi_tx_rx@data:
  5242                           	opt stack 0
  5243  000064                     __fill_buffer_get_display@outBuffer:
  5244                           	opt stack 0
  5245  000064                     __parse_set_manual_speed@data:
  5246                           	opt stack 0
  5247  000064                     __get_item@buffer:
  5248                           	opt stack 0
  5249  000064                     ___wmul@product:
  5250                           	opt stack 0
  5251  000064                     ___lwdiv@quotient:
  5252                           	opt stack 0
  5253  000064                     memcpy@n:
  5254                           	opt stack 0
  5255  000064                     memset@n:
  5256                           	opt stack 0
  5257  000064                     strlen@cp:
  5258                           	opt stack 0
  5259  000064                     strncmp@len:
  5260                           	opt stack 0
  5261  000064                     ___lmul@multiplicand:
  5262                           	opt stack 0
  5263  000064                     ___lldiv@divisor:
  5264                           	opt stack 0
  5265  000064                     ___aldiv@divisor:
  5266                           	opt stack 0
  5267  000064                     ___almod@divisor:
  5268                           	opt stack 0
  5269  000064                     ___llmod@divisor:
  5270                           	opt stack 0
  5271                           
  5272                           ; 4 bytes @ 0x4
  5273  000064                     	ds	1
  5274  000065                     ??_stricmp:
  5275  000065                     USBStallEndpoint@ep:
  5276                           	opt stack 0
  5277  000065                     __i2c_eeprom_busy@busy:
  5278                           	opt stack 0
  5279  000065                     __i2c_write@data:
  5280                           	opt stack 0
  5281  000065                     __i2c_read@data:
  5282                           	opt stack 0
  5283  000065                     i2c_display_write_fixed@data:
  5284                           	opt stack 0
  5285                           
  5286                           ; 2 bytes @ 0x5
  5287  000065                     	ds	1
  5288  000066                     ??_strncmp:
  5289  000066                     ??__write_value_to_offset:
  5290  000066                     ??__get_item:
  5291  000066                     ?_atoi:
  5292                           	opt stack 0
  5293  000066                     __fill_buffer_get_display@secondHalf:
  5294                           	opt stack 0
  5295  000066                     ___lwdiv@counter:
  5296                           	opt stack 0
  5297  000066                     stricmp@r:
  5298                           	opt stack 0
  5299  000066                     USBStallEndpoint@p:
  5300                           	opt stack 0
  5301  000066                     __get_available_offset_from_buffer@offset:
  5302                           	opt stack 0
  5303  000066                     spi_tx_tx@data_length:
  5304                           	opt stack 0
  5305  000066                     spi_tx_rx@data_length:
  5306                           	opt stack 0
  5307  000066                     __parse_set_manual_speed@out_buffer:
  5308                           	opt stack 0
  5309  000066                     atoi@s:
  5310                           	opt stack 0
  5311  000066                     memcpy@d:
  5312                           	opt stack 0
  5313  000066                     memset@p:
  5314                           	opt stack 0
  5315                           
  5316                           ; 2 bytes @ 0x6
  5317  000066                     	ds	1
  5318  000067                     ??__fill_buffer_get_display:
  5319  000067                     __i2c_write@length:
  5320                           	opt stack 0
  5321  000067                     __i2c_read@length:
  5322                           	opt stack 0
  5323  000067                     i2c_display_write_fixed@length:
  5324                           	opt stack 0
  5325  000067                     __read_value_from_offset@value:
  5326                           	opt stack 0
  5327  000067                     utoa@buf:
  5328                           	opt stack 0
  5329                           
  5330                           ; 2 bytes @ 0x7
  5331  000067                     	ds	1
  5332  000068                     ??_spi_tx_rx:
  5333  000068                     ??_spi_tx_tx:
  5334  000068                     ??_atoi:
  5335  000068                     ??__i2c_read:
  5336  000068                     USBDeviceInit@i:
  5337                           	opt stack 0
  5338  000068                     USBTransferOnePacket@ep:
  5339                           	opt stack 0
  5340  000068                     MSDErrorHandler@ErrorCase:
  5341                           	opt stack 0
  5342  000068                     __i2c_write@slave_address:
  5343                           	opt stack 0
  5344  000068                     i2c_display_write_fixed@pos:
  5345                           	opt stack 0
  5346  000068                     __flash_wakeup@command:
  5347                           	opt stack 0
  5348  000068                     ___aldiv@counter:
  5349                           	opt stack 0
  5350  000068                     ___almod@counter:
  5351                           	opt stack 0
  5352  000068                     ___fltol@sign1:
  5353                           	opt stack 0
  5354  000068                     ___llmod@counter:
  5355                           	opt stack 0
  5356  000068                     ___xxtofl@sign:
  5357                           	opt stack 0
  5358  000068                     __parse_set_manual_speed@out_idx_ptr:
  5359                           	opt stack 0
  5360  000068                     memcpy@s:
  5361                           	opt stack 0
  5362  000068                     ___lmul@product:
  5363                           	opt stack 0
  5364  000068                     ___lldiv@quotient:
  5365                           	opt stack 0
  5366                           
  5367                           ; 4 bytes @ 0x8
  5368  000068                     	ds	1
  5369  000069                     MSDErrorHandler@OldMSD_State:
  5370                           	opt stack 0
  5371  000069                     __i2c_write@cntr:
  5372                           	opt stack 0
  5373  000069                     __get_item@value_ctr:
  5374                           	opt stack 0
  5375  000069                     ___aldiv@sign:
  5376                           	opt stack 0
  5377  000069                     ___almod@sign:
  5378                           	opt stack 0
  5379  000069                     ___fltol@exp1:
  5380                           	opt stack 0
  5381  000069                     ___xxtofl@exp:
  5382                           	opt stack 0
  5383  000069                     USBTransferOnePacket@handle:
  5384                           	opt stack 0
  5385  000069                     utoa@val:
  5386                           	opt stack 0
  5387                           
  5388                           ; 2 bytes @ 0x9
  5389  000069                     	ds	1
  5390  00006A                     ??__parse_set_manual_speed:
  5391  00006A                     ??_i2c_display_init:
  5392  00006A                     __ic2_display_set_ddram_address@address:
  5393                           	opt stack 0
  5394  00006A                     __get_item@item_ctr:
  5395                           	opt stack 0
  5396  00006A                     atoi@sign:
  5397                           	opt stack 0
  5398  00006A                     memcpy@tmp:
  5399                           	opt stack 0
  5400  00006A                     __ic2_display_set_cgram_address@data_array:
  5401                           	opt stack 0
  5402  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5403                           	opt stack 0
  5404  00006A                     ___aldiv@quotient:
  5405                           	opt stack 0
  5406  00006A                     ___xxtofl@arg:
  5407                           	opt stack 0
  5408                           
  5409                           ; 4 bytes @ 0xA
  5410  00006A                     	ds	1
  5411  00006B                     __ic2_display_set_ddram_address@data_array:
  5412                           	opt stack 0
  5413  00006B                     __fill_buffer_get_status@outBuffer:
  5414                           	opt stack 0
  5415  00006B                     __parse_set_manual_speed@new_speed:
  5416                           	opt stack 0
  5417  00006B                     atoi@a:
  5418                           	opt stack 0
  5419  00006B                     utoa@base:
  5420                           	opt stack 0
  5421  00006B                     i2c_display_init@init_sequence:
  5422                           	opt stack 0
  5423                           
  5424                           ; 9 bytes @ 0xB
  5425  00006B                     	ds	1
  5426  00006C                     ?__flash_get_status:
  5427                           	opt stack 0
  5428  00006C                     ?_atol:
  5429                           	opt stack 0
  5430  00006C                     __fill_buffer_get_display@cntr:
  5431                           	opt stack 0
  5432  00006C                     ___lldiv@counter:
  5433                           	opt stack 0
  5434  00006C                     atol@s:
  5435                           	opt stack 0
  5436                           
  5437                           ; 2 bytes @ 0xC
  5438  00006C                     	ds	1
  5439  00006D                     __ic2_display_set_cgram_address@address:
  5440                           	opt stack 0
  5441  00006D                     i2c_display_cursor@position:
  5442                           	opt stack 0
  5443  00006D                     __fill_buffer_get_display@line:
  5444                           	opt stack 0
  5445  00006D                     utoa@v:
  5446                           	opt stack 0
  5447  00006D                     ultoa@buf:
  5448                           	opt stack 0
  5449                           
  5450                           ; 2 bytes @ 0xD
  5451  00006D                     	ds	1
  5452  00006E                     ?___fldiv:
  5453                           	opt stack 0
  5454  00006E                     ?___flmul:
  5455                           	opt stack 0
  5456  00006E                     ?___flneg:
  5457                           	opt stack 0
  5458  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5459                           	opt stack 0
  5460  00006E                     i2c_display_cursor@line:
  5461                           	opt stack 0
  5462  00006E                     __flash_get_status@command:
  5463                           	opt stack 0
  5464  00006E                     __fill_buffer_get_display@start_line:
  5465                           	opt stack 0
  5466  00006E                     i2c_display_program_custom_character@bit_pattern:
  5467                           	opt stack 0
  5468  00006E                     ___flneg@f1:
  5469                           	opt stack 0
  5470  00006E                     ___fldiv@b:
  5471                           	opt stack 0
  5472  00006E                     ___flmul@b:
  5473                           	opt stack 0
  5474                           
  5475                           ; 4 bytes @ 0xE
  5476  00006E                     	ds	1
  5477  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5478                           	opt stack 0
  5479  00006F                     __i2c_read@slave_address:
  5480                           	opt stack 0
  5481  00006F                     i2c_display_cursor@address:
  5482                           	opt stack 0
  5483  00006F                     __fill_buffer_get_display@position:
  5484                           	opt stack 0
  5485  00006F                     utoa@c:
  5486                           	opt stack 0
  5487  00006F                     __flash_get_status@status:
  5488                           	opt stack 0
  5489  00006F                     ultoa@val:
  5490                           	opt stack 0
  5491                           
  5492                           ; 4 bytes @ 0xF
  5493  00006F                     	ds	1
  5494  000070                     ??_atol:
  5495  000070                     ??_i2c_display_program_custom_character:
  5496  000070                     MSDCheckForErrorCases@DeviceNoData:
  5497                           	opt stack 0
  5498  000070                     __i2c_read@cntr:
  5499                           	opt stack 0
  5500  000070                     display_update@line:
  5501                           	opt stack 0
  5502  000070                     api_prepare@inBuffer:
  5503                           	opt stack 0
  5504  000070                     itoa@buf:
  5505                           	opt stack 0
  5506                           
  5507                           ; 2 bytes @ 0x10
  5508  000070                     	ds	1
  5509  000071                     i2c_eeprom_read@address:
  5510                           	opt stack 0
  5511  000071                     __flash_is_busy@status:
  5512                           	opt stack 0
  5513                           
  5514                           ; 2 bytes @ 0x11
  5515  000071                     	ds	1
  5516  000072                     ?___fladd:
  5517                           	opt stack 0
  5518  000072                     api_prepare@outBuffer:
  5519                           	opt stack 0
  5520  000072                     itoa@val:
  5521                           	opt stack 0
  5522  000072                     ___fladd@b:
  5523                           	opt stack 0
  5524  000072                     ___fldiv@a:
  5525                           	opt stack 0
  5526  000072                     ___flmul@a:
  5527                           	opt stack 0
  5528                           
  5529                           ; 4 bytes @ 0x12
  5530  000072                     	ds	1
  5531  000073                     i2c_eeprom_read@data:
  5532                           	opt stack 0
  5533  000073                     __flash_copy_page_to_buffer@page:
  5534                           	opt stack 0
  5535  000073                     __flash_compare_page_to_buffer@page:
  5536                           	opt stack 0
  5537  000073                     __flash_write_to_buffer@start:
  5538                           	opt stack 0
  5539  000073                     __flash_write_page_from_buffer@page:
  5540                           	opt stack 0
  5541  000073                     __flash_partial_read@page:
  5542                           	opt stack 0
  5543  000073                     ultoa@base:
  5544                           	opt stack 0
  5545  000073                     __flash_set_page_size@command:
  5546                           	opt stack 0
  5547                           
  5548                           ; 4 bytes @ 0x13
  5549  000073                     	ds	1
  5550  000074                     api_prepare@command:
  5551                           	opt stack 0
  5552  000074                     atol@sign:
  5553                           	opt stack 0
  5554  000074                     itoa@base:
  5555                           	opt stack 0
  5556  000074                     i2c_display_program_custom_character@data_array:
  5557                           	opt stack 0
  5558                           
  5559                           ; 11 bytes @ 0x14
  5560  000074                     	ds	1
  5561  000075                     i2c_eeprom_read@length:
  5562                           	opt stack 0
  5563  000075                     __flash_copy_page_to_buffer@buffer:
  5564                           	opt stack 0
  5565  000075                     __flash_compare_page_to_buffer@buffer:
  5566                           	opt stack 0
  5567  000075                     __flash_write_page_from_buffer@buffer:
  5568                           	opt stack 0
  5569  000075                     __flash_write_to_buffer@data:
  5570                           	opt stack 0
  5571  000075                     __flash_partial_read@start:
  5572                           	opt stack 0
  5573  000075                     atol@a:
  5574                           	opt stack 0
  5575  000075                     ultoa@v:
  5576                           	opt stack 0
  5577                           
  5578                           ; 4 bytes @ 0x15
  5579  000075                     	ds	1
  5580  000076                     ??_i2c_eeprom_read:
  5581  000076                     ??___fldiv:
  5582  000076                     ??___flmul:
  5583  000076                     ??__flash_copy_page_to_buffer:
  5584  000076                     ??__flash_compare_page_to_buffer:
  5585  000076                     ??__flash_write_page_from_buffer:
  5586  000076                     itoa@cp:
  5587                           	opt stack 0
  5588  000076                     ___fladd@a:
  5589                           	opt stack 0
  5590                           
  5591                           ; 4 bytes @ 0x16
  5592  000076                     	ds	1
  5593  000077                     i2c_eeprom_read@addr:
  5594                           	opt stack 0
  5595  000077                     __flash_set_page_size@size:
  5596                           	opt stack 0
  5597  000077                     __flash_write_to_buffer@data_length:
  5598                           	opt stack 0
  5599  000077                     __flash_partial_read@length:
  5600                           	opt stack 0
  5601                           
  5602                           ; 2 bytes @ 0x17
  5603  000077                     	ds	1
  5604  000078                     i2c_eeprom_read@slave_address:
  5605                           	opt stack 0
  5606  000078                     __display_padded_itoa@value:
  5607                           	opt stack 0
  5608  000078                     __display_itoa_u16@value:
  5609                           	opt stack 0
  5610                           
  5611                           ; 2 bytes @ 0x18
  5612  000078                     	ds	1
  5613  000079                     ?_i2c_eeprom_readUint32:
  5614                           	opt stack 0
  5615  000079                     __flash_write_to_buffer@buffer:
  5616                           	opt stack 0
  5617  000079                     atol@c:
  5618                           	opt stack 0
  5619  000079                     ultoa@c:
  5620                           	opt stack 0
  5621  000079                     i2c_eeprom_readUint32@address:
  5622                           	opt stack 0
  5623  000079                     __flash_compare_page_to_buffer@status:
  5624                           	opt stack 0
  5625  000079                     __flash_partial_read@data:
  5626                           	opt stack 0
  5627  000079                     __flash_copy_page_to_buffer@command:
  5628                           	opt stack 0
  5629  000079                     __flash_write_page_from_buffer@command:
  5630                           	opt stack 0
  5631                           
  5632                           ; 4 bytes @ 0x19
  5633  000079                     	ds	1
  5634  00007A                     ??___fladd:
  5635  00007A                     __display_padded_itoa@length:
  5636                           	opt stack 0
  5637  00007A                     ___flmul@sign:
  5638                           	opt stack 0
  5639  00007A                     __display_itoa_u16@text:
  5640                           	opt stack 0
  5641  00007A                     __parse_item@item_string:
  5642                           	opt stack 0
  5643  00007A                     ltoa@buf:
  5644                           	opt stack 0
  5645  00007A                     __flash_write_to_buffer@command:
  5646                           	opt stack 0
  5647  00007A                     ___fldiv@rem:
  5648                           	opt stack 0
  5649                           
  5650                           ; 4 bytes @ 0x1A
  5651  00007A                     	ds	1
  5652  00007B                     ??__flash_partial_read:
  5653  00007B                     __display_padded_itoa@text:
  5654                           	opt stack 0
  5655  00007B                     __flash_compare_page_to_buffer@command:
  5656                           	opt stack 0
  5657  00007B                     ___flmul@grs:
  5658                           	opt stack 0
  5659                           
  5660                           ; 4 bytes @ 0x1B
  5661  00007B                     	ds	1
  5662  00007C                     __display_start@cntr:
  5663                           	opt stack 0
  5664  00007C                     __parse_item@value_string:
  5665                           	opt stack 0
  5666  00007C                     ltoa@val:
  5667                           	opt stack 0
  5668                           
  5669                           ; 4 bytes @ 0x1C
  5670  00007C                     	ds	1
  5671  00007D                     ??__display_padded_itoa:
  5672  00007D                     i2c_eeprom_readUint32@data:
  5673                           	opt stack 0
  5674                           
  5675                           ; 4 bytes @ 0x1D
  5676  00007D                     	ds	1
  5677  00007E                     ___fldiv@sign:
  5678                           	opt stack 0
  5679                           
  5680                           ; 1 bytes @ 0x1E
  5681  00007E                     	ds	1
  5682  00007F                     i2c_display_program_custom_character@address:
  5683                           	opt stack 0
  5684  00007F                     ___flmul@aexp:
  5685                           	opt stack 0
  5686  00007F                     flash_sector_write@page:
  5687                           	opt stack 0
  5688  00007F                     flash_partial_write@page:
  5689                           	opt stack 0
  5690  00007F                     ___fldiv@new_exp:
  5691                           	opt stack 0
  5692  00007F                     __flash_partial_read@command:
  5693                           	opt stack 0
  5694                           
  5695                           ; 4 bytes @ 0x1F
  5696  00007F                     	ds	1
  5697  000080                     i2c_display_program_custom_character@cntr:
  5698                           	opt stack 0
  5699  000080                     ___flmul@bexp:
  5700                           	opt stack 0
  5701  000080                     ltoa@base:
  5702                           	opt stack 0
  5703                           
  5704                           ; 2 bytes @ 0x20
  5705  000080                     	ds	1
  5706  000081                     flash_sector_write@data:
  5707                           	opt stack 0
  5708  000081                     flash_partial_write@start:
  5709                           	opt stack 0
  5710  000081                     ___fldiv@grs:
  5711                           	opt stack 0
  5712  000081                     ___flmul@prod:
  5713                           	opt stack 0
  5714                           
  5715                           ; 4 bytes @ 0x21
  5716  000081                     	ds	1
  5717  000082                     ___fladd@signs:
  5718                           	opt stack 0
  5719  000082                     ltoa@cp:
  5720                           	opt stack 0
  5721  000082                     __display_padded_itoa@tmp:
  5722                           	opt stack 0
  5723                           
  5724                           ; 10 bytes @ 0x22
  5725  000082                     	ds	1
  5726  000083                     flash_sector_write@match:
  5727                           	opt stack 0
  5728  000083                     ___fladd@aexp:
  5729                           	opt stack 0
  5730  000083                     flash_partial_write@length:
  5731                           	opt stack 0
  5732  000083                     __flash_partial_read@address:
  5733                           	opt stack 0
  5734                           
  5735                           ; 4 bytes @ 0x23
  5736  000083                     	ds	1
  5737  000084                     ___fladd@bexp:
  5738                           	opt stack 0
  5739  000084                     ExternalFlash_SectorWrite@config:
  5740                           	opt stack 0
  5741  000084                     fat_restore_mbr_fbr@cntr:
  5742                           	opt stack 0
  5743  000084                     __add_item@item_string:
  5744                           	opt stack 0
  5745                           
  5746                           ; 2 bytes @ 0x24
  5747  000084                     	ds	1
  5748  000085                     ___fladd@grs:
  5749                           	opt stack 0
  5750  000085                     ___fldiv@bexp:
  5751                           	opt stack 0
  5752  000085                     flash_partial_write@data:
  5753                           	opt stack 0
  5754  000085                     ___flmul@temp:
  5755                           	opt stack 0
  5756                           
  5757                           ; 2 bytes @ 0x25
  5758  000085                     	ds	1
  5759  000086                     ___fldiv@aexp:
  5760                           	opt stack 0
  5761  000086                     ExternalFlash_SectorWrite@sector_addr:
  5762                           	opt stack 0
  5763  000086                     __add_item@value:
  5764                           	opt stack 0
  5765                           
  5766                           ; 4 bytes @ 0x26
  5767  000086                     	ds	1
  5768  000087                     ??_adc_read_temperature:
  5769  000087                     ?__motor_get_speed_in_degrees:
  5770                           	opt stack 0
  5771  000087                     ?_motor_steps_from_degrees:
  5772                           	opt stack 0
  5773  000087                     ?__step_position_from_divide_position:
  5774                           	opt stack 0
  5775  000087                     flash_partial_write@match:
  5776                           	opt stack 0
  5777  000087                     flash_sector_read@page:
  5778                           	opt stack 0
  5779  000087                     flash_partial_read@page:
  5780                           	opt stack 0
  5781  000087                     motor_steps_from_degrees@degrees:
  5782                           	opt stack 0
  5783  000087                     __motor_get_speed_in_degrees@speed_index:
  5784                           	opt stack 0
  5785  000087                     __step_position_from_divide_position@divide_position:
  5786                           	opt stack 0
  5787  000087                     motor_calculate_position_in_degrees@tmp:
  5788                           	opt stack 0
  5789                           
  5790                           ; 4 bytes @ 0x27
  5791  000087                     	ds	1
  5792  000088                     __write_root@data:
  5793                           	opt stack 0
  5794                           
  5795                           ; 2 bytes @ 0x28
  5796  000088                     	ds	1
  5797  000089                     ??__motor_get_speed_in_degrees:
  5798  000089                     flash_sector_read@data:
  5799                           	opt stack 0
  5800  000089                     flash_partial_read@start:
  5801                           	opt stack 0
  5802  000089                     adc_read_temperature@adc_result:
  5803                           	opt stack 0
  5804                           
  5805                           ; 2 bytes @ 0x29
  5806  000089                     	ds	1
  5807  00008A                     ExternalFlash_SectorWrite@buffer:
  5808                           	opt stack 0
  5809  00008A                     __write_root@sector:
  5810                           	opt stack 0
  5811  00008A                     __add_item@buffer:
  5812                           	opt stack 0
  5813                           
  5814                           ; 2 bytes @ 0x2A
  5815  00008A                     	ds	1
  5816  00008B                     ??_fat_get_format_status:
  5817  00008B                     ?__get_available_cluster:
  5818                           	opt stack 0
  5819  00008B                     flash_partial_read@length:
  5820                           	opt stack 0
  5821  00008B                     ExternalFlash_SectorRead@config:
  5822                           	opt stack 0
  5823  00008B                     __get_available_cluster@first_sector:
  5824                           	opt stack 0
  5825  00008B                     fat_find_file@name:
  5826                           	opt stack 0
  5827  00008B                     motor_steps_from_degrees@steps:
  5828                           	opt stack 0
  5829  00008B                     __motor_get_speed_in_degrees@speed:
  5830                           	opt stack 0
  5831  00008B                     __step_position_from_divide_position@target_position:
  5832                           	opt stack 0
  5833  00008B                     adc_read_temperature@temperature:
  5834                           	opt stack 0
  5835                           
  5836                           ; 4 bytes @ 0x2B
  5837  00008B                     	ds	1
  5838  00008C                     ??__add_item:
  5839  00008C                     __display_padded_itoa@len:
  5840                           	opt stack 0
  5841  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  5842                           	opt stack 0
  5843  00008C                     __write_root@offset:
  5844                           	opt stack 0
  5845                           
  5846                           ; 2 bytes @ 0x2C
  5847  00008C                     	ds	1
  5848  00008D                     __display_padded_itoa@pos:
  5849                           	opt stack 0
  5850  00008D                     flash_partial_read@data:
  5851                           	opt stack 0
  5852  00008D                     ExternalFlash_SectorWrite@page:
  5853                           	opt stack 0
  5854  00008D                     __get_available_cluster@skip_sector:
  5855                           	opt stack 0
  5856  00008D                     fat_find_file@extension:
  5857                           	opt stack 0
  5858  00008D                     fat_get_format_status@cntr:
  5859                           	opt stack 0
  5860  00008D                     ExternalFlash_SectorRead@sector_addr:
  5861                           	opt stack 0
  5862                           
  5863                           ; 4 bytes @ 0x2D
  5864  00008D                     	ds	1
  5865  00008E                     __display_padded_itoa@padding:
  5866                           	opt stack 0
  5867  00008E                     __write_root@file_number:
  5868                           	opt stack 0
  5869  00008E                     __add_item@length:
  5870                           	opt stack 0
  5871                           
  5872                           ; 1 bytes @ 0x2E
  5873  00008E                     	ds	1
  5874  00008F                     ??_MSDWriteHandler:
  5875  00008F                     ??_fat_find_file:
  5876  00008F                     ?__read_fat:
  5877                           	opt stack 0
  5878  00008F                     ?_motor_nonzero_steps_from_degrees:
  5879                           	opt stack 0
  5880  00008F                     __display_signed_itoa@value:
  5881                           	opt stack 0
  5882  00008F                     __get_available_cluster@cluster:
  5883                           	opt stack 0
  5884  00008F                     __root_is_available@root_sector:
  5885                           	opt stack 0
  5886  00008F                     __read_fat@cluster:
  5887                           	opt stack 0
  5888  00008F                     fat_get_file_information@data:
  5889                           	opt stack 0
  5890  00008F                     motor_nonzero_steps_from_degrees@degrees:
  5891                           	opt stack 0
  5892  00008F                     __motor_get_speed_in_degrees@lookup:
  5893                           	opt stack 0
  5894  00008F                     __motor_run@distance_in_steps:
  5895                           	opt stack 0
  5896                           
  5897                           ; 4 bytes @ 0x2F
  5898  00008F                     	ds	2
  5899  000091                     fat_find_file@file_number:
  5900                           	opt stack 0
  5901  000091                     __display_signed_itoa@text:
  5902                           	opt stack 0
  5903  000091                     ExternalFlash_SectorRead@buffer:
  5904                           	opt stack 0
  5905  000091                     __get_available_cluster@offset:
  5906                           	opt stack 0
  5907  000091                     __root_is_available@offset:
  5908                           	opt stack 0
  5909  000091                     __read_fat@sector:
  5910                           	opt stack 0
  5911                           
  5912                           ; 2 bytes @ 0x31
  5913  000091                     	ds	1
  5914  000092                     fat_find_file@sector:
  5915                           	opt stack 0
  5916  000092                     fat_get_file_information@root_sector:
  5917                           	opt stack 0
  5918                           
  5919                           ; 2 bytes @ 0x32
  5920  000092                     	ds	1
  5921  000093                     ?_motor_speed_from_index:
  5922                           	opt stack 0
  5923  000093                     __root_is_available@file_number:
  5924                           	opt stack 0
  5925  000093                     ExternalFlash_SectorRead@page:
  5926                           	opt stack 0
  5927  000093                     __get_available_cluster@sector:
  5928                           	opt stack 0
  5929  000093                     __read_fat@offset:
  5930                           	opt stack 0
  5931  000093                     motor_speed_from_index@speed_index:
  5932                           	opt stack 0
  5933  000093                     __motor_run@speed:
  5934                           	opt stack 0
  5935  000093                     motor_nonzero_steps_from_degrees@steps:
  5936                           	opt stack 0
  5937                           
  5938                           ; 4 bytes @ 0x33
  5939  000093                     	ds	1
  5940  000094                     __root_is_available@first_byte:
  5941                           	opt stack 0
  5942  000094                     fat_find_file@offset:
  5943                           	opt stack 0
  5944  000094                     fat_get_file_information@offset:
  5945                           	opt stack 0
  5946                           
  5947                           ; 2 bytes @ 0x34
  5948  000094                     	ds	1
  5949  000095                     ??_MSDReadHandler:
  5950  000095                     ?__make_cluster_chain:
  5951                           	opt stack 0
  5952  000095                     ?_fat_get_file_size:
  5953                           	opt stack 0
  5954  000095                     __get_available_root_entry@file_number:
  5955                           	opt stack 0
  5956  000095                     __motor_run@type:
  5957                           	opt stack 0
  5958  000095                     __display_itoa@value:
  5959                           	opt stack 0
  5960  000095                     __make_cluster_chain@first_cluster:
  5961                           	opt stack 0
  5962  000095                     __read_fat@value:
  5963                           	opt stack 0
  5964                           
  5965                           ; 2 bytes @ 0x35
  5966  000095                     	ds	1
  5967  000096                     ??__motor_run:
  5968  000096                     fat_get_file_information@file_number:
  5969                           	opt stack 0
  5970                           
  5971                           ; 1 bytes @ 0x36
  5972  000096                     	ds	1
  5973  000097                     ?__find_nth_cluster:
  5974                           	opt stack 0
  5975  000097                     __display_itoa@decimals:
  5976                           	opt stack 0
  5977  000097                     __find_nth_cluster@cluster:
  5978                           	opt stack 0
  5979  000097                     __make_cluster_chain@number_of_clusters:
  5980                           	opt stack 0
  5981                           
  5982                           ; 2 bytes @ 0x37
  5983  000097                     	ds	1
  5984  000098                     __display_itoa@text:
  5985                           	opt stack 0
  5986                           
  5987                           ; 2 bytes @ 0x38
  5988  000098                     	ds	1
  5989  000099                     ??_MSDProcessCommandMediaPresent:
  5990  000099                     ??__make_cluster_chain:
  5991  000099                     __find_nth_cluster@n:
  5992                           	opt stack 0
  5993  000099                     fat_get_file_size@sector:
  5994                           	opt stack 0
  5995                           
  5996                           ; 2 bytes @ 0x39
  5997  000099                     	ds	1
  5998  00009A                     ??__display_itoa:
  5999  00009A                     __motor_run@direction:
  6000                           	opt stack 0
  6001                           
  6002                           ; 1 bytes @ 0x3A
  6003  00009A                     	ds	1
  6004  00009B                     _MSDProcessCommandMediaPresent$2606:
  6005                           	opt stack 0
  6006  00009B                     __find_nth_cluster@offset:
  6007                           	opt stack 0
  6008  00009B                     __make_cluster_chain@next_offset:
  6009                           	opt stack 0
  6010  00009B                     fat_get_file_size@offset:
  6011                           	opt stack 0
  6012  00009B                     __motor_run@maximum_distance_in_degrees:
  6013                           	opt stack 0
  6014                           
  6015                           ; 2 bytes @ 0x3B
  6016  00009B                     	ds	2
  6017  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6018                           	opt stack 0
  6019  00009D                     __find_nth_cluster@sector_in_buffer:
  6020                           	opt stack 0
  6021  00009D                     __make_cluster_chain@minimum_sector:
  6022                           	opt stack 0
  6023  00009D                     fat_get_file_size@file_size:
  6024                           	opt stack 0
  6025  00009D                     __motor_run@maximum_distance_in_steps:
  6026                           	opt stack 0
  6027                           
  6028                           ; 4 bytes @ 0x3D
  6029  00009D                     	ds	1
  6030  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6031                           	opt stack 0
  6032                           
  6033                           ; 4 bytes @ 0x3E
  6034  00009E                     	ds	1
  6035  00009F                     __find_nth_cluster@sector:
  6036                           	opt stack 0
  6037  00009F                     __make_cluster_chain@different_sector_cluster:
  6038                           	opt stack 0
  6039                           
  6040                           ; 2 bytes @ 0x3F
  6041  00009F                     	ds	1
  6042  0000A0                     __display_itoa@tmp:
  6043                           	opt stack 0
  6044                           
  6045                           ; 10 bytes @ 0x40
  6046  0000A0                     	ds	1
  6047  0000A1                     __make_cluster_chain@data_changed:
  6048                           	opt stack 0
  6049  0000A1                     fat_get_file_size@file_number:
  6050                           	opt stack 0
  6051  0000A1                     fat_read_from_file_fast@start_byte:
  6052                           	opt stack 0
  6053  0000A1                     fat_modify_file@start_byte:
  6054                           	opt stack 0
  6055  0000A1                     motor_schedule_command@distance_in_steps:
  6056                           	opt stack 0
  6057                           
  6058                           ; 4 bytes @ 0x41
  6059  0000A1                     	ds	1
  6060  0000A2                     __make_cluster_chain@remaining_clusters:
  6061                           	opt stack 0
  6062  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6063                           	opt stack 0
  6064                           
  6065                           ; 4 bytes @ 0x42
  6066  0000A2                     	ds	2
  6067  0000A4                     __make_cluster_chain@sector:
  6068                           	opt stack 0
  6069                           
  6070                           ; 2 bytes @ 0x44
  6071  0000A4                     	ds	1
  6072  0000A5                     fat_modify_file@length:
  6073                           	opt stack 0
  6074  0000A5                     motor_schedule_command@speed:
  6075                           	opt stack 0
  6076  0000A5                     fat_read_from_file_fast@length:
  6077                           	opt stack 0
  6078                           
  6079                           ; 4 bytes @ 0x45
  6080  0000A5                     	ds	1
  6081  0000A6                     MSDProcessCommandMediaPresent@i:
  6082                           	opt stack 0
  6083  0000A6                     __make_cluster_chain@sector_in_buffer:
  6084                           	opt stack 0
  6085                           
  6086                           ; 2 bytes @ 0x46
  6087  0000A6                     	ds	1
  6088  0000A7                     ??_MSDProcessCommand:
  6089  0000A7                     motor_schedule_command@type:
  6090                           	opt stack 0
  6091  0000A7                     fat_modify_file@data:
  6092                           	opt stack 0
  6093                           
  6094                           ; 2 bytes @ 0x47
  6095  0000A7                     	ds	1
  6096  0000A8                     motor_schedule_command@direction:
  6097                           	opt stack 0
  6098  0000A8                     __make_cluster_chain@offset:
  6099                           	opt stack 0
  6100                           
  6101                           ; 2 bytes @ 0x48
  6102  0000A8                     	ds	1
  6103  0000A9                     ??_fat_modify_file:
  6104  0000A9                     motor_set_zero@direction:
  6105                           	opt stack 0
  6106  0000A9                     fat_read_from_file_fast@data:
  6107                           	opt stack 0
  6108  0000A9                     __parse_jump_steps@data:
  6109                           	opt stack 0
  6110  0000A9                     motor_go_to_steps_position@target_position:
  6111                           	opt stack 0
  6112  0000A9                     _motor_arc_move$8822:
  6113                           	opt stack 0
  6114                           
  6115                           ; 4 bytes @ 0x49
  6116  0000A9                     	ds	1
  6117  0000AA                     __display_itoa@len:
  6118                           	opt stack 0
  6119  0000AA                     __make_cluster_chain@next_cluster:
  6120                           	opt stack 0
  6121                           
  6122                           ; 2 bytes @ 0x4A
  6123  0000AA                     	ds	1
  6124  0000AB                     __display_itoa@missing:
  6125                           	opt stack 0
  6126  0000AB                     fat_read_from_file_fast@cluster:
  6127                           	opt stack 0
  6128  0000AB                     __parse_jump_steps@out_buffer:
  6129                           	opt stack 0
  6130                           
  6131                           ; 2 bytes @ 0x4B
  6132  0000AB                     	ds	1
  6133  0000AC                     ??_MSDTasks:
  6134  0000AC                     __display_itoa@pos:
  6135                           	opt stack 0
  6136  0000AC                     fat_create_file@name:
  6137                           	opt stack 0
  6138  0000AC                     fat_resize_file@new_file_size:
  6139                           	opt stack 0
  6140                           
  6141                           ; 4 bytes @ 0x4C
  6142  0000AC                     	ds	1
  6143  0000AD                     ??_motor_go_to_steps_position:
  6144  0000AD                     motor_arc_move@direction:
  6145                           	opt stack 0
  6146  0000AD                     _MSDTasks$2588:
  6147                           	opt stack 0
  6148  0000AD                     fat_read_from_file_fast@cluster_number:
  6149                           	opt stack 0
  6150  0000AD                     __parse_jump_steps@out_idx_ptr:
  6151                           	opt stack 0
  6152  0000AD                     __display_itoa_long@value:
  6153                           	opt stack 0
  6154                           
  6155                           ; 4 bytes @ 0x4D
  6156  0000AD                     	ds	1
  6157  0000AE                     fat_create_file@extension:
  6158                           	opt stack 0
  6159  0000AE                     motor_arc_move@arc_in_steps:
  6160                           	opt stack 0
  6161                           
  6162                           ; 4 bytes @ 0x4E
  6163  0000AE                     	ds	1
  6164  0000AF                     ??_fat_read_from_file_fast:
  6165  0000AF                     ??__parse_jump_steps:
  6166  0000AF                     _MSDTasks$2589:
  6167                           	opt stack 0
  6168                           
  6169                           ; 2 bytes @ 0x4F
  6170  0000AF                     	ds	1
  6171  0000B0                     ??_fat_resize_file:
  6172  0000B0                     __parse_jump_steps@return_value:
  6173                           	opt stack 0
  6174  0000B0                     fat_create_file@size:
  6175                           	opt stack 0
  6176                           
  6177                           ; 4 bytes @ 0x50
  6178  0000B0                     	ds	1
  6179  0000B1                     MSDTasks@i:
  6180                           	opt stack 0
  6181  0000B1                     __display_itoa_long@decimals:
  6182                           	opt stack 0
  6183  0000B1                     __parse_jump_steps@number_of_steps:
  6184                           	opt stack 0
  6185                           
  6186                           ; 4 bytes @ 0x51
  6187  0000B1                     	ds	1
  6188  0000B2                     __display_itoa_long@text:
  6189                           	opt stack 0
  6190                           
  6191                           ; 2 bytes @ 0x52
  6192  0000B2                     	ds	2
  6193  0000B4                     ??__display_itoa_long:
  6194  0000B4                     ??_fat_create_file:
  6195  0000B4                     fat_resize_file@old_number_of_clusters:
  6196                           	opt stack 0
  6197                           
  6198                           ; 2 bytes @ 0x54
  6199  0000B4                     	ds	1
  6200  0000B5                     fat_modify_file@sector:
  6201                           	opt stack 0
  6202  0000B5                     __parse_command_long@data:
  6203                           	opt stack 0
  6204  0000B5                     motor_go_to_steps_position@overhead_cw:
  6205                           	opt stack 0
  6206                           
  6207                           ; 4 bytes @ 0x55
  6208  0000B5                     	ds	1
  6209  0000B6                     fat_resize_file@new_number_of_clusters:
  6210                           	opt stack 0
  6211                           
  6212                           ; 2 bytes @ 0x56
  6213  0000B6                     	ds	1
  6214  0000B7                     fat_modify_file@file_number:
  6215                           	opt stack 0
  6216  0000B7                     __parse_command_long@out_buffer:
  6217                           	opt stack 0
  6218                           
  6219                           ; 2 bytes @ 0x57
  6220  0000B7                     	ds	1
  6221  0000B8                     __display_itoa_long@length:
  6222                           	opt stack 0
  6223  0000B8                     fat_modify_file@return_code:
  6224                           	opt stack 0
  6225  0000B8                     fat_create_file@number_of_clusters:
  6226                           	opt stack 0
  6227  0000B8                     fat_resize_file@first_cluster:
  6228                           	opt stack 0
  6229                           
  6230                           ; 2 bytes @ 0x58
  6231  0000B8                     	ds	1
  6232  0000B9                     __display_itoa_long@short_value:
  6233                           	opt stack 0
  6234  0000B9                     fat_modify_file@cluster:
  6235                           	opt stack 0
  6236  0000B9                     __parse_command_long@out_idx_ptr:
  6237                           	opt stack 0
  6238  0000B9                     motor_go_to_steps_position@overhead_ccw:
  6239                           	opt stack 0
  6240                           
  6241                           ; 4 bytes @ 0x59
  6242  0000B9                     	ds	1
  6243  0000BA                     fat_resize_file@file_number:
  6244                           	opt stack 0
  6245  0000BA                     fat_create_file@first_cluster:
  6246                           	opt stack 0
  6247                           
  6248                           ; 2 bytes @ 0x5A
  6249  0000BA                     	ds	1
  6250  0000BB                     __display_itoa_long@last_digit:
  6251                           	opt stack 0
  6252  0000BB                     __parse_command_long@length:
  6253                           	opt stack 0
  6254  0000BB                     fat_read_from_file_fast@sector:
  6255                           	opt stack 0
  6256  0000BB                     fat_modify_file@offset:
  6257                           	opt stack 0
  6258  0000BB                     fat_resize_file@root:
  6259                           	opt stack 0
  6260                           
  6261                           ; 32 bytes @ 0x5B
  6262  0000BB                     	ds	1
  6263  0000BC                     ??_display_prepare:
  6264  0000BC                     fat_create_file@file_number:
  6265                           	opt stack 0
  6266                           
  6267                           ; 1 bytes @ 0x5C
  6268  0000BC                     	ds	1
  6269  0000BD                     fat_read_from_file_fast@working_cluster:
  6270                           	opt stack 0
  6271  0000BD                     fat_modify_file@number_of_bytes:
  6272                           	opt stack 0
  6273  0000BD                     motor_go_to_steps_position@distance_cw:
  6274                           	opt stack 0
  6275  0000BD                     fat_create_file@root_entry:
  6276                           	opt stack 0
  6277                           
  6278                           ; 32 bytes @ 0x5D
  6279  0000BD                     	ds	1
  6280  0000BE                     display_prepare@temp:
  6281                           	opt stack 0
  6282                           
  6283                           ; 10 bytes @ 0x5E
  6284  0000BE                     	ds	1
  6285  0000BF                     fat_read_from_file_fast@offset:
  6286                           	opt stack 0
  6287  0000BF                     fat_modify_file@position:
  6288                           	opt stack 0
  6289                           
  6290                           ; 4 bytes @ 0x5F
  6291  0000BF                     	ds	2
  6292  0000C1                     fat_read_from_file_fast@needed_cluster:
  6293                           	opt stack 0
  6294  0000C1                     motor_go_to_steps_position@distance_ccw:
  6295                           	opt stack 0
  6296                           
  6297                           ; 4 bytes @ 0x61
  6298  0000C1                     	ds	2
  6299  0000C3                     fat_read_from_file_fast@read_length:
  6300                           	opt stack 0
  6301  0000C3                     fat_modify_file@root:
  6302                           	opt stack 0
  6303                           
  6304                           ; 32 bytes @ 0x63
  6305  0000C3                     	ds	2
  6306  0000C5                     ??_motor_divide_jump:
  6307  0000C5                     __parse_command_short@cmd:
  6308                           	opt stack 0
  6309  0000C5                     fat_read_from_file_fast@position:
  6310                           	opt stack 0
  6311  0000C5                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6312                           	opt stack 0
  6313                           
  6314                           ; 4 bytes @ 0x65
  6315  0000C5                     	ds	1
  6316  0000C6                     api_parse@inBuffer:
  6317                           	opt stack 0
  6318  0000C6                     motor_divide_jump@target_position_in_steps:
  6319                           	opt stack 0
  6320                           
  6321                           ; 4 bytes @ 0x66
  6322  0000C6                     	ds	2
  6323  0000C8                     display_prepare@space:
  6324                           	opt stack 0
  6325  0000C8                     api_parse@receivedDataLength:
  6326                           	opt stack 0
  6327                           
  6328                           ; 1 bytes @ 0x68
  6329  0000C8                     	ds	1
  6330  0000C9                     display_prepare@cntr:
  6331                           	opt stack 0
  6332  0000C9                     api_parse@outBuffer:
  6333                           	opt stack 0
  6334  0000C9                     motor_divide_jump_to_nearest@nearest_divide_position:
  6335                           	opt stack 0
  6336  0000C9                     fat_read_from_file@start_byte:
  6337                           	opt stack 0
  6338                           
  6339                           ; 4 bytes @ 0x69
  6340  0000C9                     	ds	1
  6341  0000CA                     motor_divide_jump@target_divide_position:
  6342                           	opt stack 0
  6343                           
  6344                           ; 2 bytes @ 0x6A
  6345  0000CA                     	ds	1
  6346  0000CB                     ??_api_parse:
  6347  0000CB                     motor_divide_jump_to_nearest@divide_position_float:
  6348                           	opt stack 0
  6349                           
  6350                           ; 4 bytes @ 0x6B
  6351  0000CB                     	ds	2
  6352  0000CD                     api_parse@out_idx_ptr:
  6353                           	opt stack 0
  6354  0000CD                     fat_read_from_file@length:
  6355                           	opt stack 0
  6356                           
  6357                           ; 4 bytes @ 0x6D
  6358  0000CD                     	ds	2
  6359  0000CF                     ??_encoder_statemachine:
  6360  0000CF                     api_parse@out_idx:
  6361                           	opt stack 0
  6362                           
  6363                           ; 1 bytes @ 0x6F
  6364  0000CF                     	ds	1
  6365  0000D0                     api_parse@in_idx:
  6366                           	opt stack 0
  6367                           
  6368                           ; 1 bytes @ 0x70
  6369  0000D0                     	ds	1
  6370  0000D1                     fat_read_from_file@data:
  6371                           	opt stack 0
  6372                           
  6373                           ; 2 bytes @ 0x71
  6374  0000D1                     	ds	2
  6375  0000D3                     ??_fat_read_from_file:
  6376                           
  6377                           ; 1 bytes @ 0x73
  6378  0000D3                     	ds	4
  6379  0000D7                     fat_read_from_file@file_number:
  6380                           	opt stack 0
  6381                           
  6382                           ; 1 bytes @ 0x77
  6383  0000D7                     	ds	1
  6384  0000D8                     fat_read_from_file@return_code:
  6385                           	opt stack 0
  6386                           
  6387                           ; 1 bytes @ 0x78
  6388  0000D8                     	ds	1
  6389  0000D9                     fat_read_from_file@cluster:
  6390                           	opt stack 0
  6391                           
  6392                           ; 2 bytes @ 0x79
  6393  0000D9                     	ds	2
  6394  0000DB                     fat_read_from_file@cluster_number:
  6395                           	opt stack 0
  6396                           
  6397                           ; 2 bytes @ 0x7B
  6398  0000DB                     	ds	2
  6399  0000DD                     fat_read_from_file@root:
  6400                           	opt stack 0
  6401                           
  6402                           ; 32 bytes @ 0x7D
  6403  0000DD                     	ds	6
  6404  0000E3                     ??_configFile_write:
  6405                           
  6406                           ; 1 bytes @ 0x83
  6407  0000E3                     	ds	1
  6408  0000E4                     configFile_write@file_number:
  6409                           	opt stack 0
  6410                           
  6411                           ; 1 bytes @ 0x84
  6412  0000E4                     	ds	1
  6413  0000E5                     configFile_write@file_size:
  6414                           	opt stack 0
  6415                           
  6416                           ; 4 bytes @ 0x85
  6417  0000E5                     	ds	24
  6418  0000FD                     main@startup_timer:
  6419                           	opt stack 0
  6420                           
  6421                           ; 1 bytes @ 0x9D
  6422  0000FD                     	ds	1
  6423                           tblptru	equ	0xFF8
  6424                           tblptrh	equ	0xFF7
  6425                           tblptrl	equ	0xFF6
  6426                           tablat	equ	0xFF5
  6427                           postinc0	equ	0xFEE
  6428                           wreg	equ	0xFE8
  6429                           postdec1	equ	0xFE5
  6430                           fsr1h	equ	0xFE2
  6431                           fsr1l	equ	0xFE1
  6432                           
  6433                           	psect	cstackCOMRAM
  6434  000001                     __pcstackCOMRAM:
  6435                           	opt stack 0
  6436  000001                     ??_USBStdGetDscHandler:
  6437  000001                     ??_USBStdGetStatusHandler:
  6438  000001                     ??i2__i2c_wait_idle:
  6439  000001                     ?i2_USBTransferOnePacket:
  6440                           	opt stack 0
  6441  000001                     ?i2_ExternalFlash_MediaInitialize:
  6442                           	opt stack 0
  6443  000001                     USBConfigureEndpoint@direction:
  6444                           	opt stack 0
  6445  000001                     USBCtrlTrfTxService@byteToSend:
  6446                           	opt stack 0
  6447  000001                     USBCtrlTrfRxService@i:
  6448                           	opt stack 0
  6449  000001                     i2USBTransferOnePacket@dir:
  6450                           	opt stack 0
  6451  000001                     i2USBStallEndpoint@dir:
  6452                           	opt stack 0
  6453  000001                     i2__i2c_send@dat:
  6454                           	opt stack 0
  6455  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6456                           	opt stack 0
  6457  000001                     i2ExternalFlash_MediaInitialize@config:
  6458                           	opt stack 0
  6459  000001                     i2ExternalFlash_MediaDetect@config:
  6460                           	opt stack 0
  6461  000001                     i2memcpy@d1:
  6462                           	opt stack 0
  6463  000001                     i2memset@p1:
  6464                           	opt stack 0
  6465                           
  6466                           ; 2 bytes @ 0x0
  6467  000001                     	ds	1
  6468  000002                     ??_USBConfigureEndpoint:
  6469  000002                     ??i2_USBStallEndpoint:
  6470  000002                     USBCtrlTrfRxService@byteToRead:
  6471                           	opt stack 0
  6472  000002                     USBCtrlTrfInHandler@lastDTS:
  6473                           	opt stack 0
  6474  000002                     USBStdGetStatusHandler@p:
  6475                           	opt stack 0
  6476  000002                     i2USBTransferOnePacket@data:
  6477                           	opt stack 0
  6478                           
  6479                           ; 2 bytes @ 0x1
  6480  000002                     	ds	1
  6481  000003                     i2SYSTEM_Initialize@pll_startup_counter_3132:
  6482                           	opt stack 0
  6483  000003                     i2memcpy@s1:
  6484                           	opt stack 0
  6485  000003                     i2memset@c:
  6486                           	opt stack 0
  6487                           
  6488                           ; 2 bytes @ 0x2
  6489  000003                     	ds	1
  6490  000004                     i2USBTransferOnePacket@len:
  6491                           	opt stack 0
  6492                           
  6493                           ; 1 bytes @ 0x3
  6494  000004                     	ds	1
  6495  000005                     ??i2_USBTransferOnePacket:
  6496  000005                     i2SYSTEM_Initialize@state:
  6497                           	opt stack 0
  6498  000005                     i2memcpy@n:
  6499                           	opt stack 0
  6500  000005                     i2memset@n:
  6501                           	opt stack 0
  6502                           
  6503                           ; 2 bytes @ 0x4
  6504  000005                     	ds	1
  6505  000006                     USBConfigureEndpoint@EPNum:
  6506                           	opt stack 0
  6507  000006                     i2USBStallEndpoint@ep:
  6508                           	opt stack 0
  6509  000006                     i2__i2c_eeprom_busy@busy:
  6510                           	opt stack 0
  6511  000006                     i2__i2c_write@data:
  6512                           	opt stack 0
  6513                           
  6514                           ; 2 bytes @ 0x5
  6515  000006                     	ds	1
  6516  000007                     USBConfigureEndpoint@handle:
  6517                           	opt stack 0
  6518  000007                     i2USBStallEndpoint@p:
  6519                           	opt stack 0
  6520  000007                     i2memcpy@d:
  6521                           	opt stack 0
  6522  000007                     i2memset@p:
  6523                           	opt stack 0
  6524                           
  6525                           ; 2 bytes @ 0x6
  6526  000007                     	ds	1
  6527  000008                     i2__i2c_write@length:
  6528                           	opt stack 0
  6529                           
  6530                           ; 1 bytes @ 0x7
  6531  000008                     	ds	1
  6532  000009                     USBEnableEndpoint@options:
  6533                           	opt stack 0
  6534  000009                     i2USBDeviceInit@i:
  6535                           	opt stack 0
  6536  000009                     i2USBTransferOnePacket@ep:
  6537                           	opt stack 0
  6538  000009                     i2__i2c_write@slave_address:
  6539                           	opt stack 0
  6540  000009                     i2memcpy@s:
  6541                           	opt stack 0
  6542                           
  6543                           ; 2 bytes @ 0x8
  6544  000009                     	ds	1
  6545  00000A                     i2__i2c_write@cntr:
  6546                           	opt stack 0
  6547  00000A                     USBEnableEndpoint@p:
  6548                           	opt stack 0
  6549  00000A                     i2USBTransferOnePacket@handle:
  6550                           	opt stack 0
  6551                           
  6552                           ; 2 bytes @ 0x9
  6553  00000A                     	ds	1
  6554  00000B                     i2memcpy@tmp:
  6555                           	opt stack 0
  6556  00000B                     i2c_eeprom_write@address:
  6557                           	opt stack 0
  6558                           
  6559                           ; 2 bytes @ 0xA
  6560  00000B                     	ds	1
  6561  00000C                     ??_USBMSDInit:
  6562  00000C                     USBEnableEndpoint@ep:
  6563                           	opt stack 0
  6564  00000C                     _USBCheckMSDRequest$2534:
  6565                           	opt stack 0
  6566  00000C                     MSDTransferTerminated@handle:
  6567                           	opt stack 0
  6568                           
  6569                           ; 2 bytes @ 0xB
  6570  00000C                     	ds	1
  6571  00000D                     i2c_eeprom_write@data:
  6572                           	opt stack 0
  6573                           
  6574                           ; 2 bytes @ 0xC
  6575  00000D                     	ds	1
  6576  00000E                     _USBCheckMSDRequest$2535:
  6577                           	opt stack 0
  6578  00000E                     _MSDTransferTerminated$2623:
  6579                           	opt stack 0
  6580                           
  6581                           ; 2 bytes @ 0xD
  6582  00000E                     	ds	1
  6583  00000F                     i2c_eeprom_write@length:
  6584                           	opt stack 0
  6585                           
  6586                           ; 1 bytes @ 0xE
  6587  00000F                     	ds	1
  6588  000010                     ??_i2c_eeprom_write:
  6589  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6590                           	opt stack 0
  6591                           
  6592                           ; 2 bytes @ 0xF
  6593  000010                     	ds	2
  6594  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6595                           	opt stack 0
  6596                           
  6597                           ; 2 bytes @ 0x11
  6598  000012                     	ds	1
  6599  000013                     i2c_eeprom_write@dat:
  6600                           	opt stack 0
  6601                           
  6602                           ; 17 bytes @ 0x12
  6603  000013                     	ds	1
  6604  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6605                           	opt stack 0
  6606                           
  6607                           ; 2 bytes @ 0x13
  6608  000014                     	ds	2
  6609  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6610                           
  6611                           ; 1 bytes @ 0x15
  6612  000016                     	ds	2
  6613  000018                     ??_USBStdFeatureReqHandler:
  6614  000018                     USBStdSetCfgHandler@i:
  6615                           	opt stack 0
  6616                           
  6617                           ; 1 bytes @ 0x17
  6618  000018                     	ds	1
  6619  000019                     USBStdFeatureReqHandler@pUEP:
  6620                           	opt stack 0
  6621                           
  6622                           ; 2 bytes @ 0x18
  6623  000019                     	ds	2
  6624  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6625                           	opt stack 0
  6626                           
  6627                           ; 1 bytes @ 0x1A
  6628  00001B                     	ds	1
  6629  00001C                     USBStdFeatureReqHandler@p:
  6630                           	opt stack 0
  6631                           
  6632                           ; 2 bytes @ 0x1B
  6633  00001C                     	ds	2
  6634  00001E                     ??_USBCtrlEPService:
  6635  00001E                     
  6636                           ; 1 bytes @ 0x1D
  6637  00001E                     	ds	1
  6638  00001F                     USBDeviceTasks@i:
  6639                           	opt stack 0
  6640                           
  6641                           ; 1 bytes @ 0x1E
  6642  00001F                     	ds	5
  6643  000024                     i2c_eeprom_write@slave_address:
  6644                           	opt stack 0
  6645                           
  6646                           ; 1 bytes @ 0x23
  6647  000024                     	ds	1
  6648  000025                     i2c_eeprom_write@cntr:
  6649                           	opt stack 0
  6650                           
  6651                           ; 1 bytes @ 0x24
  6652  000025                     	ds	1
  6653  000026                     i2c_eeprom_writeUint32@address:
  6654                           	opt stack 0
  6655                           
  6656                           ; 2 bytes @ 0x25
  6657  000026                     	ds	2
  6658  000028                     i2c_eeprom_writeUint32@data:
  6659                           	opt stack 0
  6660                           
  6661                           ; 4 bytes @ 0x27
  6662  000028                     	ds	4
  6663  00002C                     ??_motor_isr:
  6664  00002C                     
  6665                           ; 1 bytes @ 0x2B
  6666  00002C                     	ds	16
  6667  00003C                     motor_isr@steps_until_standstill:
  6668                           	opt stack 0
  6669                           
  6670                           ; 2 bytes @ 0x3B
  6671  00003C                     	ds	2
  6672  00003E                     motor_isr@steps_until_standstill_if_accelerate:
  6673                           	opt stack 0
  6674                           
  6675                           ; 2 bytes @ 0x3D
  6676  00003E                     	ds	2
  6677  000040                     motor_isr@steps_remaining:
  6678                           	opt stack 0
  6679                           
  6680                           ; 4 bytes @ 0x3F
  6681  000040                     	ds	4
  6682  000044                     ??_SYS_InterruptHigh:
  6683                           
  6684                           ; 1 bytes @ 0x43
  6685  000044                     	ds	14
  6686                           tblptru	equ	0xFF8
  6687                           tblptrh	equ	0xFF7
  6688                           tblptrl	equ	0xFF6
  6689                           tablat	equ	0xFF5
  6690                           postinc0	equ	0xFEE
  6691                           wreg	equ	0xFE8
  6692                           postdec1	equ	0xFE5
  6693                           fsr1h	equ	0xFE2
  6694                           fsr1l	equ	0xFE1
  6695                           
  6696 ;;
  6697 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6698 ;;
  6699 ;; *************** function _main *****************
  6700 ;; Defined at:
  6701 ;;		line 49 in file "main.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;		None
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  startup_time    1  157[BANK0 ] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  1    wreg      void 
  6708 ;; Registers used:
  6709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6716 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6718 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6719 ;;Total ram usage:        1 bytes
  6720 ;; Hardware stack levels required when called:   22
  6721 ;; This function calls:
  6722 ;;		_APP_DeviceCustomHIDTasks
  6723 ;;		_APP_DeviceMSDTasks
  6724 ;;		_SYSTEM_Initialize
  6725 ;;		_USBDeviceAttach
  6726 ;;		_USBDeviceInit
  6727 ;;		_adc_read_temperature
  6728 ;;		_display_prepare
  6729 ;;		_display_update
  6730 ;;		_encoder_statemachine
  6731 ;;		_motor_calculate_position_in_degrees
  6732 ;;		_motor_process_cue
  6733 ;;		_system_init
  6734 ;; This function is called by:
  6735 ;;		Startup code after reset
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           	psect	text0
  6740  013258                     __ptext0:
  6741                           	opt stack 0
  6742  013258                     _main:
  6743                           	opt stack 9
  6744                           
  6745                           ;main.c: 51: uint8_t startup_timer;;main.c: 55: system_init();
  6746                           
  6747                           ;incstack = 0
  6748  013258  EC4F  F08B         	call	_system_init	;wreg free
  6749                           
  6750                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6751  01325C  0E00               	movlw	0
  6752  01325E  ECE6  F0A1         	call	_SYSTEM_Initialize
  6753                           
  6754                           ;main.c: 59: USBDeviceInit();
  6755  013262  EC9F  F07D         	call	_USBDeviceInit	;wreg free
  6756                           
  6757                           ;main.c: 60: USBDeviceAttach();
  6758  013266  EC51  F0A8         	call	_USBDeviceAttach	;wreg free
  6759                           
  6760                           ;main.c: 63: startup_timer = 150;
  6761  01326A  0E96               	movlw	150
  6762  01326C  0100               	movlb	0	; () banked
  6763  01326E  6FFD               	movwf	main@startup_timer& (0+255),b
  6764                           
  6765                           ;main.c: 64: while(startup_timer)
  6766  013270  D00D               	goto	l863
  6767  013272                     
  6768                           ; BSR set to: 0
  6769                           ;main.c: 65: {;main.c: 67: APP_DeviceMSDTasks();
  6770                           
  6771                           ; BSR set to: 0
  6772  013272  ECF8  F0AA         	call	_APP_DeviceMSDTasks	;wreg free
  6773                           
  6774                           ;main.c: 69: if(!os.done)
  6775  013276  0101               	movlb	1	; () banked
  6776  013278  5173               	movf	(_os+2)& (0+255),w,b	;volatile
  6777  01327A  A4D8               	btfss	status,2,c
  6778  01327C  D007               	goto	l863
  6779                           
  6780                           ; BSR set to: 1
  6781                           ;main.c: 70: {;main.c: 72: APP_DeviceCustomHIDTasks();
  6782  01327E  EC4F  F097         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6783                           
  6784                           ;main.c: 74: --startup_timer;
  6785  013282  0100               	movlb	0	; () banked
  6786  013284  07FD               	decf	main@startup_timer& (0+255),f,b
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;main.c: 75: os.done = 1;
  6790  013286  0E01               	movlw	1
  6791  013288  0101               	movlb	1	; () banked
  6792  01328A  6F73               	movwf	(_os+2)& (0+255),b	;volatile
  6793  01328C                     l863:
  6794                           
  6795                           ; BSR set to: 1
  6796                           
  6797                           ; BSR set to: 1
  6798  01328C  0100               	movlb	0	; () banked
  6799  01328E  51FD               	movf	main@startup_timer& (0+255),w,b
  6800  013290  A4D8               	btfss	status,2,c
  6801  013292  D7EF               	goto	l862
  6802  013294                     u18580:
  6803                           
  6804                           ;main.c: 81: {;main.c: 83: APP_DeviceMSDTasks();
  6805                           
  6806                           ; BSR set to: 0
  6807                           
  6808                           ;main.c: 76: };main.c: 78: };main.c: 80: while(1)
  6809                           
  6810                           ; BSR set to: 0
  6811  013294  ECF8  F0AA         	call	_APP_DeviceMSDTasks	;wreg free
  6812                           
  6813                           ;main.c: 85: if(!os.done)
  6814  013298  0101               	movlb	1	; () banked
  6815  01329A  5173               	movf	(_os+2)& (0+255),w,b	;volatile
  6816  01329C  A4D8               	btfss	status,2,c
  6817  01329E  D7FA               	goto	u18580
  6818                           
  6819                           ; BSR set to: 1
  6820  0132A0  0004               	clrwdt		;# 
  6821                           
  6822                           ;main.c: 91: APP_DeviceCustomHIDTasks();
  6823  0132A2  EC4F  F097         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6824                           
  6825                           ;main.c: 94: encoder_statemachine();
  6826  0132A6  ECCA  F057         	call	_encoder_statemachine	;wreg free
  6827                           
  6828                           ;main.c: 97: motor_process_cue();
  6829  0132AA  EC77  F099         	call	_motor_process_cue	;wreg free
  6830                           
  6831                           ;main.c: 100: adc_read_temperature();
  6832  0132AE  EC32  F078         	call	_adc_read_temperature	;wreg free
  6833                           
  6834                           ;main.c: 103: switch(os.timeSlot)
  6835  0132B2  D008               	goto	l867
  6836  0132B4                     
  6837                           ;main.c: 114: motor_calculate_position_in_degrees();
  6838  0132B4  EC74  F08E         	call	_motor_calculate_position_in_degrees	;wreg free
  6839  0132B8                     
  6840                           ;main.c: 117: display_prepare();
  6841  0132B8  EC98  F051         	call	_display_prepare	;wreg free
  6842                           
  6843                           ;main.c: 118: break;
  6844  0132BC  D014               	goto	l869
  6845  0132BE                     
  6846                           ;main.c: 121: display_update();
  6847  0132BE  EC96  F0A7         	call	_display_update	;wreg free
  6848                           
  6849                           ;main.c: 123: }
  6850                           
  6851                           ;main.c: 122: break;
  6852  0132C2  D011               	goto	l869
  6853  0132C4                     l867:
  6854  0132C4  0101               	movlb	1	; () banked
  6855  0132C6  5172               	movf	(_os+1)& (0+255),w,b	;volatile
  6856                           
  6857                           ; Switch size 1, requested type "space"
  6858                           ; Number of cases is 5, Range of values is 0 to 7
  6859                           ; switch strategies available:
  6860                           ; Name         Instructions Cycles
  6861                           ; simple_byte           16     9 (average)
  6862                           ;	Chosen strategy is simple_byte
  6863  0132C8  0A00               	xorlw	0	; case 0
  6864  0132CA  B4D8               	btfsc	status,2,c
  6865  0132CC  D00C               	goto	l869
  6866  0132CE  0A01               	xorlw	1	; case 1
  6867  0132D0  B4D8               	btfsc	status,2,c
  6868  0132D2  D009               	goto	l869
  6869  0132D4  0A04               	xorlw	4	; case 5
  6870  0132D6  B4D8               	btfsc	status,2,c
  6871  0132D8  D7ED               	goto	l871
  6872  0132DA  0A03               	xorlw	3	; case 6
  6873  0132DC  B4D8               	btfsc	status,2,c
  6874  0132DE  D7EC               	goto	l872
  6875  0132E0  0A01               	xorlw	1	; case 7
  6876  0132E2  B4D8               	btfsc	status,2,c
  6877  0132E4  D7EC               	goto	l873
  6878  0132E6                     l869:
  6879                           
  6880                           ;main.c: 125: os.done = 1;
  6881                           
  6882                           ; BSR set to: 1
  6883  0132E6  0E01               	movlw	1
  6884  0132E8  0101               	movlb	1	; () banked
  6885  0132EA  6F73               	movwf	(_os+2)& (0+255),b	;volatile
  6886                           
  6887                           ; BSR set to: 1
  6888                           
  6889                           ; BSR set to: 1
  6890  0132EC  D7D3               	goto	u18580
  6891  0132EE                     __end_of_main:
  6892                           	opt stack 0
  6893                           tblptru	equ	0xFF8
  6894                           tblptrh	equ	0xFF7
  6895                           tblptrl	equ	0xFF6
  6896                           tablat	equ	0xFF5
  6897                           postinc0	equ	0xFEE
  6898                           wreg	equ	0xFE8
  6899                           postdec1	equ	0xFE5
  6900                           fsr1h	equ	0xFE2
  6901                           fsr1l	equ	0xFE1
  6902                           status	equ	0xFD8
  6903                           
  6904 ;; *************** function _system_init *****************
  6905 ;; Defined at:
  6906 ;;		line 177 in file "os.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;		None
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;		None
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6924 ;;Total ram usage:        0 bytes
  6925 ;; Hardware stack levels used:    1
  6926 ;; Hardware stack levels required when called:   20
  6927 ;; This function calls:
  6928 ;;		__backlight_init
  6929 ;;		__system_pin_setup
  6930 ;;		__system_timer0_init
  6931 ;;		_adc_init
  6932 ;;		_configFile_read
  6933 ;;		_configFile_readDefault
  6934 ;;		_configFile_write
  6935 ;;		_display_init
  6936 ;;		_display_update
  6937 ;;		_encoder_init
  6938 ;;		_fat_init
  6939 ;;		_flash_init
  6940 ;;		_i2c_eeprom_readUint32
  6941 ;;		_i2c_init
  6942 ;;		_motor_calculate_position_in_degrees
  6943 ;;		_motor_init
  6944 ;; This function is called by:
  6945 ;;		_main
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text1
  6950  01169E                     __ptext1:
  6951                           	opt stack 0
  6952  01169E                     _system_init:
  6953                           	opt stack 10
  6954                           
  6955                           ;os.c: 180: _system_pin_setup();
  6956                           
  6957                           ; BSR set to: 1
  6958                           ;incstack = 0
  6959  01169E  EC3E  F09F         	call	__system_pin_setup	;wreg free
  6960                           
  6961                           ;os.c: 183: adc_init();
  6962  0116A2  EC99  F0A2         	call	_adc_init	;wreg free
  6963                           
  6964                           ;os.c: 186: flash_init();
  6965  0116A6  EC19  F0AB         	call	_flash_init	;wreg free
  6966                           
  6967                           ;os.c: 189: fat_init();
  6968  0116AA  EC01  F0AB         	call	_fat_init	;wreg free
  6969                           
  6970                           ;os.c: 192: encoder_init();
  6971  0116AE  ECEF  F0A9         	call	_encoder_init	;wreg free
  6972                           
  6973                           ;os.c: 195: i2c_init();
  6974  0116B2  EC88  F0AA         	call	_i2c_init	;wreg free
  6975                           
  6976                           ;os.c: 198: display_init();
  6977  0116B6  EC40  F0A7         	call	_display_init	;wreg free
  6978                           
  6979                           ;os.c: 199: display_update();
  6980  0116BA  EC96  F0A7         	call	_display_update	;wreg free
  6981                           
  6982                           ;os.c: 200: _backlight_init();
  6983  0116BE  EC6D  F0AB         	call	__backlight_init	;wreg free
  6984                           
  6985                           ;os.c: 203: motor_init();
  6986  0116C2  EC79  F0AA         	call	_motor_init	;wreg free
  6987                           
  6988                           ;os.c: 206: configFile_readDefault();
  6989  0116C6  ECD9  F09F         	call	_configFile_readDefault	;wreg free
  6990                           
  6991                           ;os.c: 209: configFile_read();
  6992  0116CA  ECF8  F079         	call	_configFile_read	;wreg free
  6993                           
  6994                           ;os.c: 212: configFile_write();
  6995  0116CE  ECD4  F060         	call	_configFile_write	;wreg free
  6996                           
  6997                           ;os.c: 215: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  6998  0116D2  0E01               	movlw	1
  6999  0116D4  0101               	movlb	1	; () banked
  7000  0116D6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
  7001                           
  7002                           ; BSR set to: 1
  7003                           ;os.c: 216: os.busy = 0;
  7004  0116D8  0E00               	movlw	0
  7005  0116DA  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
  7006                           
  7007                           ; BSR set to: 1
  7008                           ;os.c: 218: os.last_approach_direction = MOTOR_DIRECTION_CW;
  7009  0116DC  0E01               	movlw	1
  7010  0116DE  6F80               	movwf	(_os+15)& (0+255),b	;volatile
  7011                           
  7012                           ; BSR set to: 1
  7013                           ;os.c: 219: os.setup_step_size = 1000;
  7014  0116E0  0E03               	movlw	3
  7015  0116E2  6F82               	movwf	(_os+17)& (0+255),b	;volatile
  7016  0116E4  0EE8               	movlw	232
  7017  0116E6  6F81               	movwf	(_os+16)& (0+255),b	;volatile
  7018                           
  7019                           ; BSR set to: 1
  7020                           ;os.c: 220: os.approach_direction = MOTOR_DIRECTION_CW;
  7021  0116E8  0E01               	movlw	1
  7022  0116EA  6F83               	movwf	(_os+18)& (0+255),b	;volatile
  7023                           
  7024                           ; BSR set to: 1
  7025                           ;os.c: 221: os.division = 36;
  7026  0116EC  0E00               	movlw	0
  7027  0116EE  6F85               	movwf	(_os+20)& (0+255),b	;volatile
  7028  0116F0  0E24               	movlw	36
  7029  0116F2  6F84               	movwf	(_os+19)& (0+255),b	;volatile
  7030                           
  7031                           ; BSR set to: 1
  7032                           ;os.c: 222: os.divide_step_size = 10;
  7033  0116F4  0E0A               	movlw	10
  7034  0116F6  6F86               	movwf	(_os+21)& (0+255),b	;volatile
  7035                           
  7036                           ; BSR set to: 1
  7037                           ;os.c: 223: os.divide_position = 0;
  7038  0116F8  0E00               	movlw	0
  7039  0116FA  6F88               	movwf	(_os+23)& (0+255),b	;volatile
  7040  0116FC  0E00               	movlw	0
  7041  0116FE  6F87               	movwf	(_os+22)& (0+255),b	;volatile
  7042                           
  7043                           ; BSR set to: 1
  7044                           ;os.c: 224: os.divide_jump_size = 1;
  7045  011700  0E00               	movlw	0
  7046  011702  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
  7047  011704  0E01               	movlw	1
  7048  011706  6F89               	movwf	(_os+24)& (0+255),b	;volatile
  7049                           
  7050                           ; BSR set to: 1
  7051                           ;os.c: 225: os.arc_step_size = 1000;
  7052  011708  0E03               	movlw	3
  7053  01170A  6F8C               	movwf	(_os+27)& (0+255),b	;volatile
  7054  01170C  0EE8               	movlw	232
  7055  01170E  6F8B               	movwf	(_os+26)& (0+255),b	;volatile
  7056                           
  7057                           ; BSR set to: 1
  7058                           ;os.c: 226: os.arc_size = 1000;
  7059  011710  0EE8               	movlw	232
  7060  011712  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
  7061  011714  0E03               	movlw	3
  7062  011716  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
  7063  011718  0E00               	movlw	0
  7064  01171A  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
  7065  01171C  0E00               	movlw	0
  7066  01171E  6F90               	movwf	(_os+31)& (0+255),b	;volatile
  7067                           
  7068                           ; BSR set to: 1
  7069                           ;os.c: 227: os.arc_speed = config.initial_speed_arc;
  7070  011720  C1AE  F191         	movff	_config+13,_os+32	;volatile
  7071  011724  C1AF  F192         	movff	_config+14,_os+33	;volatile
  7072                           
  7073                           ; BSR set to: 1
  7074                           ;os.c: 228: os.arc_direction = MOTOR_DIRECTION_CW;
  7075  011728  0E01               	movlw	1
  7076  01172A  6F93               	movwf	(_os+34)& (0+255),b	;volatile
  7077                           
  7078                           ; BSR set to: 1
  7079                           ;os.c: 229: os.manual_speed = config.initial_speed_manual;
  7080  01172C  C1B2  F194         	movff	_config+17,_os+35	;volatile
  7081  011730  C1B3  F195         	movff	_config+18,_os+36	;volatile
  7082                           
  7083                           ; BSR set to: 1
  7084                           ;os.c: 230: os.manual_direction = MOTOR_DIRECTION_CW;
  7085  011734  0E01               	movlw	1
  7086  011736  6F96               	movwf	(_os+37)& (0+255),b	;volatile
  7087                           
  7088                           ; BSR set to: 1
  7089                           ;os.c: 231: os.beep_count = 0;
  7090  011738  0E00               	movlw	0
  7091  01173A  6F97               	movwf	(_os+38)& (0+255),b	;volatile
  7092                           
  7093                           ; BSR set to: 1
  7094                           ;os.c: 234: os.current_position_in_steps = i2c_eeprom_readUint32(0x200);
  7095  01173C  0E02               	movlw	2
  7096  01173E  0100               	movlb	0	; () banked
  7097  011740  6F7A               	movwf	(i2c_eeprom_readUint32@address+1)& (0+255),b
  7098  011742  0E00               	movlw	0
  7099  011744  6F79               	movwf	i2c_eeprom_readUint32@address& (0+255),b
  7100  011746  ECF8  F0A8         	call	_i2c_eeprom_readUint32	;wreg free
  7101  01174A  C079  F178         	movff	?_i2c_eeprom_readUint32,_os+7	;volatile
  7102  01174E  C07A  F179         	movff	?_i2c_eeprom_readUint32+1,_os+8	;volatile
  7103  011752  C07B  F17A         	movff	?_i2c_eeprom_readUint32+2,_os+9	;volatile
  7104  011756  C07C  F17B         	movff	?_i2c_eeprom_readUint32+3,_os+10	;volatile
  7105                           
  7106                           ;os.c: 235: if(os.current_position_in_steps>config.full_circle_in_steps)
  7107  01175A  0101               	movlb	1	; () banked
  7108  01175C  5178               	movf	(_os+7)& (0+255),w,b	;volatile
  7109  01175E  5DA1               	subwf	_config& (0+255),w,b
  7110  011760  5179               	movf	(_os+8)& (0+255),w,b	;volatile
  7111  011762  59A2               	subwfb	(_config+1)& (0+255),w,b
  7112  011764  517A               	movf	(_os+9)& (0+255),w,b	;volatile
  7113  011766  59A3               	subwfb	(_config+2)& (0+255),w,b
  7114  011768  517B               	movf	(_os+10)& (0+255),w,b	;volatile
  7115  01176A  59A4               	subwfb	(_config+3)& (0+255),w,b
  7116  01176C  B0D8               	btfsc	status,0,c
  7117  01176E  D008               	goto	l1082
  7118                           
  7119                           ; BSR set to: 1
  7120                           ;os.c: 236: {;os.c: 237: os.current_position_in_steps = 0;
  7121  011770  0E00               	movlw	0
  7122  011772  6F78               	movwf	(_os+7)& (0+255),b	;volatile
  7123  011774  0E00               	movlw	0
  7124  011776  6F79               	movwf	(_os+8)& (0+255),b	;volatile
  7125  011778  0E00               	movlw	0
  7126  01177A  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
  7127  01177C  0E00               	movlw	0
  7128  01177E  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
  7129  011780                     l1082:
  7130                           
  7131                           ; BSR set to: 1
  7132                           ;os.c: 238: };os.c: 239: motor_calculate_position_in_degrees();
  7133                           
  7134                           ; BSR set to: 1
  7135  011780  EC74  F08E         	call	_motor_calculate_position_in_degrees	;wreg free
  7136                           
  7137                           ;os.c: 242: _system_timer0_init();
  7138  011784  EC0E  F0A9         	call	__system_timer0_init	;wreg free
  7139  011788  0012               	return		;funcret
  7140  01178A                     __end_of_system_init:
  7141                           	opt stack 0
  7142                           tblptru	equ	0xFF8
  7143                           tblptrh	equ	0xFF7
  7144                           tblptrl	equ	0xFF6
  7145                           tablat	equ	0xFF5
  7146                           postinc0	equ	0xFEE
  7147                           wreg	equ	0xFE8
  7148                           postdec1	equ	0xFE5
  7149                           fsr1h	equ	0xFE2
  7150                           fsr1l	equ	0xFE1
  7151                           status	equ	0xFD8
  7152                           
  7153 ;; *************** function _motor_init *****************
  7154 ;; Defined at:
  7155 ;;		line 186 in file "motor.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;		None
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;		None
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  1    wreg      void 
  7162 ;; Registers used:
  7163 ;;		wreg, status,2
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7173 ;;Total ram usage:        0 bytes
  7174 ;; Hardware stack levels used:    1
  7175 ;; Hardware stack levels required when called:   10
  7176 ;; This function calls:
  7177 ;;		Nothing
  7178 ;; This function is called by:
  7179 ;;		_system_init
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           	psect	text2
  7184  0154F2                     __ptext2:
  7185                           	opt stack 0
  7186  0154F2                     _motor_init:
  7187                           	opt stack 19
  7188                           
  7189                           ;motor.c: 189: motor_cue_read_index = 0;
  7190                           
  7191                           ;incstack = 0
  7192  0154F2  0E00               	movlw	0
  7193  0154F4  0101               	movlb	1	; () banked
  7194  0154F6  6F58               	movwf	_motor_cue_read_index& (0+255),b
  7195                           
  7196                           ;motor.c: 190: motor_cue_write_index = 0;
  7197  0154F8  0E00               	movlw	0
  7198  0154FA  6F57               	movwf	_motor_cue_write_index& (0+255),b
  7199                           
  7200                           ; BSR set to: 1
  7201                           ;motor.c: 196: CCPTMRS0bits.C2TSEL = 0b000;
  7202  0154FC  010F               	movlb	15	; () banked
  7203  0154FE  9752               	bcf	82,3,b	;volatile
  7204  015500  9952               	bcf	82,4,b	;volatile
  7205  015502  9B52               	bcf	82,5,b	;volatile
  7206                           
  7207                           ;motor.c: 201: CCP1CONbits.P1M = 0b00;
  7208  015504  0E3F               	movlw	-193
  7209  015506  16BA               	andwf	4026,f,c	;volatile
  7210                           
  7211                           ;motor.c: 204: CCP1CONbits.DC1B = 0b00;
  7212  015508  0ECF               	movlw	-49
  7213  01550A  16BA               	andwf	4026,f,c	;volatile
  7214                           
  7215                           ; BSR set to: 15
  7216                           ;motor.c: 207: LATBbits.LB0 = 0;
  7217  01550C  908A               	bcf	3978,0,c	;volatile
  7218                           
  7219                           ; BSR set to: 15
  7220  01550E  0012               	return		;funcret
  7221  015510                     __end_of_motor_init:
  7222                           	opt stack 0
  7223                           tblptru	equ	0xFF8
  7224                           tblptrh	equ	0xFF7
  7225                           tblptrl	equ	0xFF6
  7226                           tablat	equ	0xFF5
  7227                           postinc0	equ	0xFEE
  7228                           wreg	equ	0xFE8
  7229                           postdec1	equ	0xFE5
  7230                           fsr1h	equ	0xFE2
  7231                           fsr1l	equ	0xFE1
  7232                           status	equ	0xFD8
  7233                           
  7234 ;; *************** function _i2c_init *****************
  7235 ;; Defined at:
  7236 ;;		line 24 in file "i2c.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;		None
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;		None
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  1    wreg      void 
  7243 ;; Registers used:
  7244 ;;		wreg, status,2
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7254 ;;Total ram usage:        0 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; Hardware stack levels required when called:   10
  7257 ;; This function calls:
  7258 ;;		Nothing
  7259 ;; This function is called by:
  7260 ;;		_system_init
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text3
  7265  015510                     __ptext3:
  7266                           	opt stack 0
  7267  015510                     _i2c_init:
  7268                           	opt stack 19
  7269                           
  7270                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  7271                           
  7272                           ; BSR set to: 15
  7273                           ;incstack = 0
  7274  015510  8A93               	bsf	3987,5,c	;volatile
  7275                           
  7276                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  7277  015512  8893               	bsf	3987,4,c	;volatile
  7278                           
  7279                           ;i2c.c: 29: SSP1STATbits.SMP = 1;
  7280  015514  8EC7               	bsf	4039,7,c	;volatile
  7281                           
  7282                           ;i2c.c: 30: SSP1STATbits.CKE = 0;
  7283  015516  9CC7               	bcf	4039,6,c	;volatile
  7284                           
  7285                           ;i2c.c: 32: SSP1ADD = 119;
  7286  015518  0E77               	movlw	119
  7287  01551A  6EC8               	movwf	4040,c	;volatile
  7288                           
  7289                           ;i2c.c: 34: SSP1CON1bits.WCOL = 0;
  7290  01551C  9EC6               	bcf	4038,7,c	;volatile
  7291                           
  7292                           ;i2c.c: 35: SSP1CON1bits.SSPOV = 0;
  7293  01551E  9CC6               	bcf	4038,6,c	;volatile
  7294                           
  7295                           ;i2c.c: 36: SSP1CON1bits.SSPM = 0b1000;
  7296  015520  50C6               	movf	4038,w,c	;volatile
  7297  015522  0BF0               	andlw	-16
  7298  015524  0908               	iorlw	8
  7299  015526  6EC6               	movwf	4038,c	;volatile
  7300                           
  7301                           ;i2c.c: 37: SSP1CON1bits.SSPEN = 1;
  7302  015528  8AC6               	bsf	4038,5,c	;volatile
  7303  01552A  0012               	return		;funcret
  7304  01552C                     __end_of_i2c_init:
  7305                           	opt stack 0
  7306                           tblptru	equ	0xFF8
  7307                           tblptrh	equ	0xFF7
  7308                           tblptrl	equ	0xFF6
  7309                           tablat	equ	0xFF5
  7310                           postinc0	equ	0xFEE
  7311                           wreg	equ	0xFE8
  7312                           postdec1	equ	0xFE5
  7313                           fsr1h	equ	0xFE2
  7314                           fsr1l	equ	0xFE1
  7315                           status	equ	0xFD8
  7316                           
  7317 ;; *************** function _i2c_eeprom_readUint32 *****************
  7318 ;; Defined at:
  7319 ;;		line 235 in file "i2c.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  address         2   25[BANK0 ] unsigned int 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;  data            4   29[BANK0 ] unsigned long 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  4   25[BANK0 ] unsigned long 
  7326 ;; Registers used:
  7327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7333 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7336 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7337 ;;Total ram usage:        8 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:   13
  7340 ;; This function calls:
  7341 ;;		_i2c_eeprom_read
  7342 ;; This function is called by:
  7343 ;;		_system_init
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           	psect	text4
  7348  0151F0                     __ptext4:
  7349                           	opt stack 0
  7350  0151F0                     _i2c_eeprom_readUint32:
  7351                           	opt stack 16
  7352                           
  7353                           ;i2c.c: 237: uint32_t data;;i2c.c: 238: i2c_eeprom_read(address, &data, 4);
  7354                           
  7355                           ;incstack = 0
  7356  0151F0  C079  F071         	movff	i2c_eeprom_readUint32@address,i2c_eeprom_read@address
  7357  0151F4  C07A  F072         	movff	i2c_eeprom_readUint32@address+1,i2c_eeprom_read@address+1
  7358  0151F8  0E7D               	movlw	low i2c_eeprom_readUint32@data
  7359  0151FA  0100               	movlb	0	; () banked
  7360  0151FC  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7361  0151FE  0E00               	movlw	high i2c_eeprom_readUint32@data
  7362  015200  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7363  015202  0E04               	movlw	4
  7364  015204  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7365  015206  EC49  F0A3         	call	_i2c_eeprom_read	;wreg free
  7366                           
  7367                           ;i2c.c: 239: return data;
  7368  01520A  C07D  F079         	movff	i2c_eeprom_readUint32@data,?_i2c_eeprom_readUint32
  7369  01520E  C07E  F07A         	movff	i2c_eeprom_readUint32@data+1,?_i2c_eeprom_readUint32+1
  7370  015212  C07F  F07B         	movff	i2c_eeprom_readUint32@data+2,?_i2c_eeprom_readUint32+2
  7371  015216  C080  F07C         	movff	i2c_eeprom_readUint32@data+3,?_i2c_eeprom_readUint32+3
  7372  01521A  0012               	return	
  7373  01521C                     __end_of_i2c_eeprom_readUint32:
  7374                           	opt stack 0
  7375                           tblptru	equ	0xFF8
  7376                           tblptrh	equ	0xFF7
  7377                           tblptrl	equ	0xFF6
  7378                           tablat	equ	0xFF5
  7379                           postinc0	equ	0xFEE
  7380                           wreg	equ	0xFE8
  7381                           postdec1	equ	0xFE5
  7382                           fsr1h	equ	0xFE2
  7383                           fsr1l	equ	0xFE1
  7384                           status	equ	0xFD8
  7385                           
  7386 ;; *************** function _i2c_eeprom_read *****************
  7387 ;; Defined at:
  7388 ;;		line 263 in file "i2c.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;  address         2   17[BANK0 ] unsigned int 
  7391 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7392 ;;		 -> i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), 
  7393 ;;  length          1   21[BANK0 ] unsigned char 
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7396 ;;  addr            1   23[BANK0 ] unsigned char 
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  1    wreg      void 
  7399 ;; Registers used:
  7400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7406 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7407 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7408 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7409 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7410 ;;Total ram usage:        8 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:   12
  7413 ;; This function calls:
  7414 ;;		__i2c_eeprom_busy
  7415 ;;		__i2c_read
  7416 ;;		__i2c_write
  7417 ;; This function is called by:
  7418 ;;		_i2c_eeprom_readUint32
  7419 ;;		_i2c_eeprom_readUint16
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text5
  7424  014692                     __ptext5:
  7425                           	opt stack 0
  7426  014692                     _i2c_eeprom_read:
  7427                           	opt stack 16
  7428                           
  7429                           ;i2c.c: 265: uint8_t slave_address;;i2c.c: 266: uint8_t addr;;i2c.c: 267: addr = address
      +                           & 0xFF;
  7430                           
  7431                           ;incstack = 0
  7432  014692  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  7433                           
  7434                           ;i2c.c: 268: address &= 0b0000011100000000;
  7435  014696  0100               	movlb	0	; () banked
  7436  014698  0E00               	movlw	0
  7437  01469A  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  7438  01469C  0E07               	movlw	7
  7439  01469E  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7440                           
  7441                           ;i2c.c: 269: address >>= 7;
  7442  0146A0  0E07               	movlw	7
  7443  0146A2  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  7444  0146A4                     u14115:
  7445  0146A4  90D8               	bcf	status,0,c
  7446  0146A6  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7447  0146A8  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  7448  0146AA  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  7449  0146AC  D7FB               	goto	u14115
  7450                           
  7451                           ;i2c.c: 270: slave_address = 0b10100000 | address;
  7452  0146AE  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  7453  0146B0  09A0               	iorlw	160
  7454  0146B2  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  7455  0146B4                     
  7456                           ; BSR set to: 0
  7457                           
  7458                           ; BSR set to: 0
  7459  0146B4  EC79  F0A9         	call	__i2c_eeprom_busy	;wreg free
  7460  0146B8  0900               	iorlw	0
  7461  0146BA  A4D8               	btfss	status,2,c
  7462  0146BC  D7FB               	goto	l1213
  7463                           
  7464                           ;i2c.c: 275: _i2c_write(slave_address, &addr, 1);
  7465  0146BE  0E77               	movlw	low i2c_eeprom_read@addr
  7466  0146C0  0100               	movlb	0	; () banked
  7467  0146C2  6F65               	movwf	__i2c_write@data& (0+255),b
  7468  0146C4  0E00               	movlw	high i2c_eeprom_read@addr
  7469  0146C6  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7470  0146C8  0E01               	movlw	1
  7471  0146CA  6F67               	movwf	__i2c_write@length& (0+255),b
  7472  0146CC  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7473  0146CE  ECC0  F0A4         	call	__i2c_write
  7474                           
  7475                           ;i2c.c: 276: _i2c_read(slave_address, &data[0], length);
  7476  0146D2  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  7477  0146D6  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  7478  0146DA  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  7479  0146DE  0100               	movlb	0	; () banked
  7480  0146E0  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7481  0146E2  EC0C  F09A         	call	__i2c_read
  7482  0146E6  0012               	return		;funcret
  7483  0146E8                     __end_of_i2c_eeprom_read:
  7484                           	opt stack 0
  7485                           tblptru	equ	0xFF8
  7486                           tblptrh	equ	0xFF7
  7487                           tblptrl	equ	0xFF6
  7488                           tablat	equ	0xFF5
  7489                           postinc0	equ	0xFEE
  7490                           wreg	equ	0xFE8
  7491                           postdec1	equ	0xFE5
  7492                           fsr1h	equ	0xFE2
  7493                           fsr1l	equ	0xFE1
  7494                           status	equ	0xFD8
  7495                           
  7496 ;; *************** function __i2c_read *****************
  7497 ;; Defined at:
  7498 ;;		line 103 in file "i2c.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;  slave_addres    1    wreg     unsigned char 
  7501 ;;  data            2    5[BANK0 ] PTR unsigned char 
  7502 ;;		 -> i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), i2c_eeprom_readByte@addr(1), 
  7503 ;;  length          1    7[BANK0 ] unsigned char 
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  7506 ;;  cntr            1   16[BANK0 ] unsigned char 
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  1    wreg      void 
  7509 ;; Registers used:
  7510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7516 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7517 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7518 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7519 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7520 ;;Total ram usage:       12 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; Hardware stack levels required when called:   11
  7523 ;; This function calls:
  7524 ;;		__i2c_acknowledge
  7525 ;;		__i2c_get
  7526 ;;		__i2c_not_acknowledge
  7527 ;;		__i2c_send
  7528 ;;		__i2c_start
  7529 ;;		__i2c_stop
  7530 ;;		__i2c_wait_idle
  7531 ;; This function is called by:
  7532 ;;		_i2c_eeprom_read
  7533 ;;		_i2c_eeprom_readByte
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           	psect	text6
  7538  013418                     __ptext6:
  7539                           	opt stack 0
  7540  013418                     __i2c_read:
  7541                           	opt stack 16
  7542                           
  7543                           ;incstack = 0
  7544                           ;__i2c_read@slave_address stored from wreg
  7545  013418  0100               	movlb	0	; () banked
  7546  01341A  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  7547                           
  7548                           ;i2c.c: 105: uint8_t cntr;;i2c.c: 107: _i2c_wait_idle();
  7549  01341C  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
  7550                           
  7551                           ;i2c.c: 108: _i2c_start();
  7552  013420  EC5A  F0AB         	call	__i2c_start	;wreg free
  7553                           
  7554                           ;i2c.c: 109: _i2c_wait_idle();
  7555  013424  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
  7556                           
  7557                           ;i2c.c: 110: _i2c_send(slave_address | 0x01);
  7558  013428  0100               	movlb	0	; () banked
  7559  01342A  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  7560  01342C  0901               	iorlw	1
  7561  01342E  EC47  F0AB         	call	__i2c_send
  7562                           
  7563                           ;i2c.c: 111: _i2c_wait_idle();
  7564  013432  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
  7565                           
  7566                           ;i2c.c: 121: for(cntr=0; cntr<length-1; ++cntr)
  7567  013436  0E00               	movlw	0
  7568  013438  0100               	movlb	0	; () banked
  7569  01343A  6F70               	movwf	__i2c_read@cntr& (0+255),b
  7570  01343C  D00F               	goto	l1164
  7571  01343E                     
  7572                           ; BSR set to: 0
  7573                           ;i2c.c: 122: {;i2c.c: 123: data[cntr] = _i2c_get();
  7574                           
  7575                           ; BSR set to: 0
  7576  01343E  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7577  013440  0D01               	mullw	1
  7578  013442  50F3               	movf	prodl,w,c
  7579  013444  2565               	addwf	__i2c_read@data& (0+255),w,b
  7580  013446  6ED9               	movwf	fsr2l,c
  7581  013448  50F4               	movf	prodh,w,c
  7582  01344A  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7583  01344C  6EDA               	movwf	fsr2h,c
  7584  01344E  EC3D  F0AB         	call	__i2c_get	;wreg free
  7585  013452  6EDF               	movwf	indf2,c
  7586                           
  7587                           ;i2c.c: 124: _i2c_acknowledge();
  7588  013454  EC42  F0AB         	call	__i2c_acknowledge	;wreg free
  7589  013458  0100               	movlb	0	; () banked
  7590  01345A  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  7591  01345C                     l1164:
  7592                           
  7593                           ; BSR set to: 0
  7594                           
  7595                           ; BSR set to: 0
  7596  01345C  0EFF               	movlw	255
  7597  01345E  6F68               	movwf	??__i2c_read& (0+255),b
  7598  013460  0EFF               	movlw	255
  7599  013462  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  7600  013464  5167               	movf	__i2c_read@length& (0+255),w,b
  7601  013466  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  7602  013468  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  7603  01346A  5168               	movf	??__i2c_read& (0+255),w,b
  7604  01346C  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  7605  01346E  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  7606  013470  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  7607  013472  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7608  013474  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  7609  013476  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  7610  013478  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  7611  01347A  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  7612  01347C  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  7613  01347E  0A80               	xorlw	128
  7614  013480  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  7615  013482  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  7616  013484  0A80               	xorlw	128
  7617  013486  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  7618  013488  A0D8               	btfss	status,0,c
  7619  01348A  D7D9               	goto	l1165
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;i2c.c: 125: };i2c.c: 126: data[cntr] = _i2c_get();
  7623                           
  7624                           ; BSR set to: 0
  7625  01348C  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7626  01348E  0D01               	mullw	1
  7627  013490  50F3               	movf	prodl,w,c
  7628  013492  2565               	addwf	__i2c_read@data& (0+255),w,b
  7629  013494  6ED9               	movwf	fsr2l,c
  7630  013496  50F4               	movf	prodh,w,c
  7631  013498  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7632  01349A  6EDA               	movwf	fsr2h,c
  7633  01349C  EC3D  F0AB         	call	__i2c_get	;wreg free
  7634  0134A0  6EDF               	movwf	indf2,c
  7635                           
  7636                           ;i2c.c: 127: _i2c_not_acknowledge();
  7637  0134A2  EC38  F0AB         	call	__i2c_not_acknowledge	;wreg free
  7638                           
  7639                           ;i2c.c: 129: _i2c_stop();
  7640  0134A6  EC56  F0AB         	call	__i2c_stop	;wreg free
  7641  0134AA  0012               	return		;funcret
  7642  0134AC                     __end_of__i2c_read:
  7643                           	opt stack 0
  7644                           tblptru	equ	0xFF8
  7645                           tblptrh	equ	0xFF7
  7646                           tblptrl	equ	0xFF6
  7647                           tablat	equ	0xFF5
  7648                           prodh	equ	0xFF4
  7649                           prodl	equ	0xFF3
  7650                           postinc0	equ	0xFEE
  7651                           wreg	equ	0xFE8
  7652                           postdec1	equ	0xFE5
  7653                           fsr1h	equ	0xFE2
  7654                           fsr1l	equ	0xFE1
  7655                           indf2	equ	0xFDF
  7656                           fsr2h	equ	0xFDA
  7657                           fsr2l	equ	0xFD9
  7658                           status	equ	0xFD8
  7659                           
  7660 ;; *************** function __i2c_not_acknowledge *****************
  7661 ;; Defined at:
  7662 ;;		line 76 in file "i2c.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;		None
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;		None
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  1    wreg      void 
  7669 ;; Registers used:
  7670 ;;		None
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7680 ;;Total ram usage:        0 bytes
  7681 ;; Hardware stack levels used:    1
  7682 ;; Hardware stack levels required when called:   10
  7683 ;; This function calls:
  7684 ;;		Nothing
  7685 ;; This function is called by:
  7686 ;;		__i2c_read
  7687 ;;		_i2c_adc_read
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           	psect	text7
  7692  015670                     __ptext7:
  7693                           	opt stack 0
  7694  015670                     __i2c_not_acknowledge:
  7695                           	opt stack 16
  7696                           
  7697                           ;i2c.c: 78: SSP1CON2bits.ACKDT = 1;
  7698                           
  7699                           ;incstack = 0
  7700  015670  8AC5               	bsf	4037,5,c	;volatile
  7701                           
  7702                           ;i2c.c: 79: SSP1CON2bits.ACKEN = 1;
  7703  015672  88C5               	bsf	4037,4,c	;volatile
  7704  015674  A8C5               	btfss	4037,4,c	;volatile
  7705  015676  0012               	return	
  7706  015678  D7FD               	goto	l1153
  7707  01567A                     __end_of__i2c_not_acknowledge:
  7708                           	opt stack 0
  7709                           tblptru	equ	0xFF8
  7710                           tblptrh	equ	0xFF7
  7711                           tblptrl	equ	0xFF6
  7712                           tablat	equ	0xFF5
  7713                           prodh	equ	0xFF4
  7714                           prodl	equ	0xFF3
  7715                           postinc0	equ	0xFEE
  7716                           wreg	equ	0xFE8
  7717                           postdec1	equ	0xFE5
  7718                           fsr1h	equ	0xFE2
  7719                           fsr1l	equ	0xFE1
  7720                           indf2	equ	0xFDF
  7721                           fsr2h	equ	0xFDA
  7722                           fsr2l	equ	0xFD9
  7723                           status	equ	0xFD8
  7724                           
  7725 ;; *************** function __i2c_get *****************
  7726 ;; Defined at:
  7727 ;;		line 56 in file "i2c.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;		None
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      unsigned char 
  7734 ;; Registers used:
  7735 ;;		wreg, status,2
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7745 ;;Total ram usage:        0 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:   10
  7748 ;; This function calls:
  7749 ;;		Nothing
  7750 ;; This function is called by:
  7751 ;;		__i2c_read
  7752 ;;		_i2c_adc_read
  7753 ;; This function uses a non-reentrant model
  7754 ;;
  7755                           
  7756                           	psect	text8
  7757  01567A                     __ptext8:
  7758                           	opt stack 0
  7759  01567A                     __i2c_get:
  7760                           	opt stack 16
  7761                           
  7762                           ;i2c.c: 58: SSP1CON2bits.RCEN = 1 ;
  7763                           
  7764                           ;incstack = 0
  7765  01567A  86C5               	bsf	4037,3,c	;volatile
  7766  01567C  B6C5               	btfsc	4037,3,c	;volatile
  7767  01567E  D7FE               	goto	l1135
  7768                           
  7769                           ;i2c.c: 60: return SSP1BUF;
  7770  015680  50C9               	movf	4041,w,c	;volatile
  7771  015682  0012               	return	
  7772  015684                     __end_of__i2c_get:
  7773                           	opt stack 0
  7774                           tblptru	equ	0xFF8
  7775                           tblptrh	equ	0xFF7
  7776                           tblptrl	equ	0xFF6
  7777                           tablat	equ	0xFF5
  7778                           prodh	equ	0xFF4
  7779                           prodl	equ	0xFF3
  7780                           postinc0	equ	0xFEE
  7781                           wreg	equ	0xFE8
  7782                           postdec1	equ	0xFE5
  7783                           fsr1h	equ	0xFE2
  7784                           fsr1l	equ	0xFE1
  7785                           indf2	equ	0xFDF
  7786                           fsr2h	equ	0xFDA
  7787                           fsr2l	equ	0xFD9
  7788                           status	equ	0xFD8
  7789                           
  7790 ;; *************** function __i2c_acknowledge *****************
  7791 ;; Defined at:
  7792 ;;		line 69 in file "i2c.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;		None
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;		None
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  1    wreg      void 
  7799 ;; Registers used:
  7800 ;;		None
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7810 ;;Total ram usage:        0 bytes
  7811 ;; Hardware stack levels used:    1
  7812 ;; Hardware stack levels required when called:   10
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		__i2c_read
  7817 ;;		_i2c_adc_read
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           	psect	text9
  7822  015684                     __ptext9:
  7823                           	opt stack 0
  7824  015684                     __i2c_acknowledge:
  7825                           	opt stack 16
  7826                           
  7827                           ;i2c.c: 71: SSP1CON2bits.ACKDT = 0;
  7828                           
  7829                           ;incstack = 0
  7830  015684  9AC5               	bcf	4037,5,c	;volatile
  7831                           
  7832                           ;i2c.c: 72: SSP1CON2bits.ACKEN = 1;
  7833  015686  88C5               	bsf	4037,4,c	;volatile
  7834  015688  A8C5               	btfss	4037,4,c	;volatile
  7835  01568A  0012               	return	
  7836  01568C  D7FD               	goto	l1147
  7837  01568E                     __end_of__i2c_acknowledge:
  7838                           	opt stack 0
  7839                           tblptru	equ	0xFF8
  7840                           tblptrh	equ	0xFF7
  7841                           tblptrl	equ	0xFF6
  7842                           tablat	equ	0xFF5
  7843                           prodh	equ	0xFF4
  7844                           prodl	equ	0xFF3
  7845                           postinc0	equ	0xFEE
  7846                           wreg	equ	0xFE8
  7847                           postdec1	equ	0xFE5
  7848                           fsr1h	equ	0xFE2
  7849                           fsr1l	equ	0xFE1
  7850                           indf2	equ	0xFDF
  7851                           fsr2h	equ	0xFDA
  7852                           fsr2l	equ	0xFD9
  7853                           status	equ	0xFD8
  7854                           
  7855 ;; *************** function __i2c_eeprom_busy *****************
  7856 ;; Defined at:
  7857 ;;		line 169 in file "i2c.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;		None
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  busy            1    5[BANK0 ] unsigned char 
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      unsigned char 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0, cstack
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7874 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7875 ;;Total ram usage:        1 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:   11
  7878 ;; This function calls:
  7879 ;;		__i2c_send
  7880 ;;		__i2c_start
  7881 ;;		__i2c_stop
  7882 ;;		__i2c_wait_idle
  7883 ;; This function is called by:
  7884 ;;		_i2c_eeprom_read
  7885 ;;		_i2c_eeprom_writeByte
  7886 ;;		_i2c_eeprom_readByte
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text10
  7891  0152F2                     __ptext10:
  7892                           	opt stack 0
  7893  0152F2                     __i2c_eeprom_busy:
  7894                           	opt stack 16
  7895                           
  7896                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
  7897                           
  7898                           ;incstack = 0
  7899  0152F2  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
  7900                           
  7901                           ;i2c.c: 173: _i2c_start();
  7902  0152F6  EC5A  F0AB         	call	__i2c_start	;wreg free
  7903                           
  7904                           ;i2c.c: 174: _i2c_wait_idle();
  7905  0152FA  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
  7906                           
  7907                           ;i2c.c: 175: _i2c_send(0b10100000);
  7908  0152FE  0EA0               	movlw	160
  7909  015300  EC47  F0AB         	call	__i2c_send
  7910                           
  7911                           ;i2c.c: 176: _i2c_wait_idle();
  7912  015304  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
  7913                           
  7914                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
  7915  015308  0E00               	movlw	0
  7916  01530A  BCC5               	btfsc	4037,6,c	;volatile
  7917  01530C  0E01               	movlw	1
  7918  01530E  0100               	movlb	0	; () banked
  7919  015310  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;i2c.c: 181: _i2c_stop();
  7923  015312  EC56  F0AB         	call	__i2c_stop	;wreg free
  7924                           
  7925                           ;i2c.c: 183: return 0;
  7926  015316  0E00               	movlw	0
  7927  015318  0012               	return	
  7928  01531A                     __end_of__i2c_eeprom_busy:
  7929                           	opt stack 0
  7930                           tblptru	equ	0xFF8
  7931                           tblptrh	equ	0xFF7
  7932                           tblptrl	equ	0xFF6
  7933                           tablat	equ	0xFF5
  7934                           prodh	equ	0xFF4
  7935                           prodl	equ	0xFF3
  7936                           postinc0	equ	0xFEE
  7937                           wreg	equ	0xFE8
  7938                           postdec1	equ	0xFE5
  7939                           fsr1h	equ	0xFE2
  7940                           fsr1l	equ	0xFE1
  7941                           indf2	equ	0xFDF
  7942                           fsr2h	equ	0xFDA
  7943                           fsr2l	equ	0xFD9
  7944                           status	equ	0xFD8
  7945                           
  7946 ;; *************** function _flash_init *****************
  7947 ;; Defined at:
  7948 ;;		line 361 in file "flash.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;		None
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;		None
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  1    wreg      void 
  7955 ;; Registers used:
  7956 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7966 ;;Total ram usage:        0 bytes
  7967 ;; Hardware stack levels used:    1
  7968 ;; Hardware stack levels required when called:   14
  7969 ;; This function calls:
  7970 ;;		__flash_set_page_size
  7971 ;;		_spi_init
  7972 ;; This function is called by:
  7973 ;;		_system_init
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           	psect	text11
  7978  015632                     __ptext11:
  7979                           	opt stack 0
  7980  015632                     _flash_init:
  7981                           	opt stack 15
  7982                           
  7983                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  7984                           
  7985                           ;incstack = 0
  7986  015632  0E00               	movlw	0
  7987  015634  ECC3  F0A6         	call	_spi_init
  7988                           
  7989                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  7990  015638  0E00               	movlw	0
  7991  01563A  EC64  F09E         	call	__flash_set_page_size
  7992  01563E  0012               	return		;funcret
  7993  015640                     __end_of_flash_init:
  7994                           	opt stack 0
  7995                           tblptru	equ	0xFF8
  7996                           tblptrh	equ	0xFF7
  7997                           tblptrl	equ	0xFF6
  7998                           tablat	equ	0xFF5
  7999                           prodh	equ	0xFF4
  8000                           prodl	equ	0xFF3
  8001                           postinc0	equ	0xFEE
  8002                           wreg	equ	0xFE8
  8003                           postdec1	equ	0xFE5
  8004                           fsr1h	equ	0xFE2
  8005                           fsr1l	equ	0xFE1
  8006                           indf2	equ	0xFDF
  8007                           fsr2h	equ	0xFDA
  8008                           fsr2l	equ	0xFD9
  8009                           status	equ	0xFD8
  8010                           
  8011 ;; *************** function _spi_init *****************
  8012 ;; Defined at:
  8013 ;;		line 89 in file "spi.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  configuratio    1    wreg     enum E6832
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  configuratio    1    3[BANK0 ] enum E6832
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  1    wreg      void 
  8020 ;; Registers used:
  8021 ;;		wreg, status,2, status,0, cstack
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8030 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8031 ;;Total ram usage:        1 bytes
  8032 ;; Hardware stack levels used:    1
  8033 ;; Hardware stack levels required when called:   11
  8034 ;; This function calls:
  8035 ;;		__spi_init
  8036 ;; This function is called by:
  8037 ;;		_flash_init
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           	psect	text12
  8042  014D86                     __ptext12:
  8043                           	opt stack 0
  8044  014D86                     _spi_init:
  8045                           	opt stack 17
  8046                           
  8047                           ;incstack = 0
  8048                           ;spi_init@configuration stored from wreg
  8049  014D86  0100               	movlb	0	; () banked
  8050  014D88  6F63               	movwf	spi_init@configuration& (0+255),b
  8051                           
  8052                           ;spi.c: 91: switch(configuration)
  8053  014D8A  D012               	goto	l2169
  8054  014D8C                     
  8055                           ;spi.c: 94: _spi_init(config_internal);
  8056  014D8C  C136  F060         	movff	_config_internal,__spi_init@details
  8057  014D90  C137  F061         	movff	_config_internal+1,__spi_init@details+1
  8058  014D94  C138  F062         	movff	_config_internal+2,__spi_init@details+2
  8059  014D98  EC7A  F0A7         	call	__spi_init	;wreg free
  8060                           
  8061                           ;spi.c: 95: break;
  8062  014D9C  D011               	goto	l2171
  8063  014D9E                     
  8064                           ;spi.c: 98: _spi_init(config_external);
  8065  014D9E  C133  F060         	movff	_config_external,__spi_init@details
  8066  014DA2  C134  F061         	movff	_config_external+1,__spi_init@details+1
  8067  014DA6  C135  F062         	movff	_config_external+2,__spi_init@details+2
  8068  014DAA  EC7A  F0A7         	call	__spi_init	;wreg free
  8069                           
  8070                           ;spi.c: 100: }
  8071                           
  8072                           ;spi.c: 99: break;
  8073  014DAE  D008               	goto	l2171
  8074  014DB0                     l2169:
  8075  014DB0  0100               	movlb	0	; () banked
  8076  014DB2  5163               	movf	spi_init@configuration& (0+255),w,b
  8077                           
  8078                           ; Switch size 1, requested type "space"
  8079                           ; Number of cases is 2, Range of values is 0 to 1
  8080                           ; switch strategies available:
  8081                           ; Name         Instructions Cycles
  8082                           ; simple_byte            7     4 (average)
  8083                           ;	Chosen strategy is simple_byte
  8084  014DB4  0A00               	xorlw	0	; case 0
  8085  014DB6  B4D8               	btfsc	status,2,c
  8086  014DB8  D7E9               	goto	l2170
  8087  014DBA  0A01               	xorlw	1	; case 1
  8088  014DBC  B4D8               	btfsc	status,2,c
  8089  014DBE  D7EF               	goto	l2172
  8090  014DC0                     l2171:
  8091                           
  8092                           ;spi.c: 102: active_configuration = configuration;
  8093  014DC0  C063  F159         	movff	spi_init@configuration,_active_configuration
  8094  014DC4  0012               	return		;funcret
  8095  014DC6                     __end_of_spi_init:
  8096                           	opt stack 0
  8097                           tblptru	equ	0xFF8
  8098                           tblptrh	equ	0xFF7
  8099                           tblptrl	equ	0xFF6
  8100                           tablat	equ	0xFF5
  8101                           prodh	equ	0xFF4
  8102                           prodl	equ	0xFF3
  8103                           postinc0	equ	0xFEE
  8104                           wreg	equ	0xFE8
  8105                           postdec1	equ	0xFE5
  8106                           fsr1h	equ	0xFE2
  8107                           fsr1l	equ	0xFE1
  8108                           indf2	equ	0xFDF
  8109                           fsr2h	equ	0xFDA
  8110                           fsr2l	equ	0xFD9
  8111                           status	equ	0xFD8
  8112                           
  8113 ;; *************** function __spi_init *****************
  8114 ;; Defined at:
  8115 ;;		line 24 in file "spi.c"
  8116 ;; Parameters:    Size  Location     Type
  8117 ;;  details         3    0[BANK0 ] struct .
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;		None
  8120 ;; Return value:  Size  Location     Type
  8121 ;;                  1    wreg      void 
  8122 ;; Registers used:
  8123 ;;		wreg, status,2
  8124 ;; Tracked objects:
  8125 ;;		On entry : 0/0
  8126 ;;		On exit  : 0/0
  8127 ;;		Unchanged: 0/0
  8128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8129 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8132 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8133 ;;Total ram usage:        3 bytes
  8134 ;; Hardware stack levels used:    1
  8135 ;; Hardware stack levels required when called:   10
  8136 ;; This function calls:
  8137 ;;		Nothing
  8138 ;; This function is called by:
  8139 ;;		_spi_init
  8140 ;; This function uses a non-reentrant model
  8141 ;;
  8142                           
  8143                           	psect	text13
  8144  014EF4                     __ptext13:
  8145                           	opt stack 0
  8146  014EF4                     __spi_init:
  8147                           	opt stack 17
  8148                           
  8149                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8150                           
  8151                           ;incstack = 0
  8152  014EF4  0E55               	movlw	85
  8153  014EF6  6EA7               	movwf	4007,c	;volsfr
  8154  014EF8  0EAA               	movlw	170
  8155  014EFA  6EA7               	movwf	4007,c	;volsfr
  8156  014EFC  010E               	movlb	14	; () banked
  8157  014EFE  91BF               	bcf	191,0,b	;volatile
  8158                           
  8159                           ;spi.c: 31: RPINR21 = 22;
  8160  014F00  0E16               	movlw	22
  8161  014F02  6FFC               	movwf	252,b	;volatile
  8162                           
  8163                           ;spi.c: 32: RPOR21 = 10;
  8164  014F04  0E0A               	movlw	10
  8165  014F06  6FD5               	movwf	213,b	;volatile
  8166                           
  8167                           ;spi.c: 34: RPOR23 = 11;
  8168  014F08  0E0B               	movlw	11
  8169  014F0A  6FD7               	movwf	215,b	;volatile
  8170                           
  8171                           ;spi.c: 35: RPINR22 = 23;
  8172  014F0C  0E17               	movlw	23
  8173  014F0E  6FFD               	movwf	253,b	;volatile
  8174                           
  8175                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8176  014F10  0E55               	movlw	85
  8177  014F12  6EA7               	movwf	4007,c	;volsfr
  8178  014F14  0EAA               	movlw	170
  8179  014F16  6EA7               	movwf	4007,c	;volsfr
  8180                           
  8181                           ; BSR set to: 14
  8182  014F18  81BF               	bsf	191,0,b	;volatile
  8183                           
  8184                           ; BSR set to: 14
  8185                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8186  014F1A  8E73               	bsf	3955,7,c	;volatile
  8187                           
  8188                           ; BSR set to: 14
  8189                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8190  014F1C  8C73               	bsf	3955,6,c	;volatile
  8191                           
  8192                           ; BSR set to: 14
  8193                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8194  014F1E  9872               	bcf	3954,4,c	;volatile
  8195                           
  8196                           ; BSR set to: 14
  8197                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8198  014F20  9072               	bcf	3954,0,c	;volatile
  8199  014F22  9272               	bcf	3954,1,c	;volatile
  8200  014F24  9472               	bcf	3954,2,c	;volatile
  8201  014F26  9672               	bcf	3954,3,c	;volatile
  8202                           
  8203                           ; BSR set to: 14
  8204                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8205  014F28  8A72               	bsf	3954,5,c	;volatile
  8206                           
  8207                           ; BSR set to: 14
  8208  014F2A  0012               	return		;funcret
  8209  014F2C                     __end_of__spi_init:
  8210                           	opt stack 0
  8211                           tblptru	equ	0xFF8
  8212                           tblptrh	equ	0xFF7
  8213                           tblptrl	equ	0xFF6
  8214                           tablat	equ	0xFF5
  8215                           prodh	equ	0xFF4
  8216                           prodl	equ	0xFF3
  8217                           postinc0	equ	0xFEE
  8218                           wreg	equ	0xFE8
  8219                           postdec1	equ	0xFE5
  8220                           fsr1h	equ	0xFE2
  8221                           fsr1l	equ	0xFE1
  8222                           indf2	equ	0xFDF
  8223                           fsr2h	equ	0xFDA
  8224                           fsr2l	equ	0xFD9
  8225                           status	equ	0xFD8
  8226                           
  8227 ;; *************** function __flash_set_page_size *****************
  8228 ;; Defined at:
  8229 ;;		line 99 in file "flash.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;  size            1    wreg     enum E7005
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;  size            1   23[BANK0 ] enum E7005
  8234 ;;  command         4   19[BANK0 ] unsigned char [4]
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  1    wreg      void 
  8237 ;; Registers used:
  8238 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8239 ;; Tracked objects:
  8240 ;;		On entry : 0/0
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8245 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8247 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8248 ;;Total ram usage:        5 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; Hardware stack levels required when called:   13
  8251 ;; This function calls:
  8252 ;;		__flash_is_busy
  8253 ;;		_memcpy
  8254 ;;		_spi_tx
  8255 ;; This function is called by:
  8256 ;;		_flash_init
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text14
  8261  013CC8                     __ptext14:
  8262                           	opt stack 0
  8263  013CC8                     __flash_set_page_size:
  8264                           	opt stack 15
  8265                           
  8266                           ; BSR set to: 14
  8267                           ;incstack = 0
  8268                           ;__flash_set_page_size@size stored from wreg
  8269  013CC8  0100               	movlb	0	; () banked
  8270  013CCA  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8271  013CCC                     
  8272                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8273  013CCC  EC13  F0AA         	call	__flash_is_busy	;wreg free
  8274  013CD0  0900               	iorlw	0
  8275  013CD2  A4D8               	btfss	status,2,c
  8276  013CD4  D7FB               	goto	l15374
  8277                           
  8278                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8279  013CD6  0100               	movlb	0	; () banked
  8280  013CD8  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8281  013CDA  A4D8               	btfss	status,2,c
  8282  013CDC  D00E               	goto	l1522
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8286  013CDE  0E73               	movlw	low __flash_set_page_size@command
  8287  013CE0  6F60               	movwf	memcpy@d1& (0+255),b
  8288  013CE2  0E00               	movlw	high __flash_set_page_size@command
  8289  013CE4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8290  013CE6  0EE1               	movlw	low _flash_command_pagesize_512
  8291  013CE8  6F62               	movwf	memcpy@s1& (0+255),b
  8292  013CEA  0EA2               	movlw	high _flash_command_pagesize_512
  8293  013CEC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8294  013CEE  0E00               	movlw	0
  8295  013CF0  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8296  013CF2  0E04               	movlw	4
  8297  013CF4  6F64               	movwf	memcpy@n& (0+255),b
  8298  013CF6  ECCF  F0A0         	call	_memcpy	;wreg free
  8299  013CFA                     l1522:
  8300                           
  8301                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8302  013CFA  0100               	movlb	0	; () banked
  8303  013CFC  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8304  013CFE  A4D8               	btfss	status,2,c
  8305  013D00  D00E               	goto	l1523
  8306                           
  8307                           ; BSR set to: 0
  8308                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8309  013D02  0E73               	movlw	low __flash_set_page_size@command
  8310  013D04  6F60               	movwf	memcpy@d1& (0+255),b
  8311  013D06  0E00               	movlw	high __flash_set_page_size@command
  8312  013D08  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8313  013D0A  0EDD               	movlw	low _flash_command_pagesize_528
  8314  013D0C  6F62               	movwf	memcpy@s1& (0+255),b
  8315  013D0E  0EA2               	movlw	high _flash_command_pagesize_528
  8316  013D10  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8317  013D12  0E00               	movlw	0
  8318  013D14  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8319  013D16  0E04               	movlw	4
  8320  013D18  6F64               	movwf	memcpy@n& (0+255),b
  8321  013D1A  ECCF  F0A0         	call	_memcpy	;wreg free
  8322  013D1E                     l1523:
  8323                           
  8324                           ;flash.c: 113: spi_tx(command, 4);
  8325  013D1E  0E73               	movlw	low __flash_set_page_size@command
  8326  013D20  0100               	movlb	0	; () banked
  8327  013D22  6F60               	movwf	spi_tx@data& (0+255),b
  8328  013D24  0E00               	movlw	high __flash_set_page_size@command
  8329  013D26  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8330  013D28  0E00               	movlw	0
  8331  013D2A  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8332  013D2C  0E04               	movlw	4
  8333  013D2E  6F62               	movwf	spi_tx@length& (0+255),b
  8334  013D30  EC40  F0A2         	call	_spi_tx	;wreg free
  8335  013D34  0012               	return		;funcret
  8336  013D36                     __end_of__flash_set_page_size:
  8337                           	opt stack 0
  8338                           tblptru	equ	0xFF8
  8339                           tblptrh	equ	0xFF7
  8340                           tblptrl	equ	0xFF6
  8341                           tablat	equ	0xFF5
  8342                           prodh	equ	0xFF4
  8343                           prodl	equ	0xFF3
  8344                           postinc0	equ	0xFEE
  8345                           wreg	equ	0xFE8
  8346                           postdec1	equ	0xFE5
  8347                           fsr1h	equ	0xFE2
  8348                           fsr1l	equ	0xFE1
  8349                           indf2	equ	0xFDF
  8350                           fsr2h	equ	0xFDA
  8351                           fsr2l	equ	0xFD9
  8352                           status	equ	0xFD8
  8353                           
  8354 ;; *************** function _fat_init *****************
  8355 ;; Defined at:
  8356 ;;		line 1404 in file "fat16.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;		None
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;		None
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  1    wreg      void 
  8363 ;; Registers used:
  8364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8374 ;;Total ram usage:        0 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; Hardware stack levels required when called:   16
  8377 ;; This function calls:
  8378 ;;		_fat_get_format_status
  8379 ;;		_fat_restore_mbr_fbr
  8380 ;; This function is called by:
  8381 ;;		_system_init
  8382 ;; This function uses a non-reentrant model
  8383 ;;
  8384                           
  8385                           	psect	text15
  8386  015602                     __ptext15:
  8387                           	opt stack 0
  8388  015602                     _fat_init:
  8389                           	opt stack 13
  8390                           
  8391                           ;fat16.c: 1407: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8392                           
  8393                           ;incstack = 0
  8394  015602  ECF7  F095         	call	_fat_get_format_status	;wreg free
  8395  015606  0900               	iorlw	0
  8396  015608  A4D8               	btfss	status,2,c
  8397  01560A  0012               	return	
  8398                           
  8399                           ;fat16.c: 1408: {;fat16.c: 1416: fat_restore_mbr_fbr();
  8400  01560C  ECA0  F09A         	call	_fat_restore_mbr_fbr	;wreg free
  8401  015610  0012               	return	
  8402  015612                     __end_of_fat_init:
  8403                           	opt stack 0
  8404                           tblptru	equ	0xFF8
  8405                           tblptrh	equ	0xFF7
  8406                           tblptrl	equ	0xFF6
  8407                           tablat	equ	0xFF5
  8408                           prodh	equ	0xFF4
  8409                           prodl	equ	0xFF3
  8410                           postinc0	equ	0xFEE
  8411                           wreg	equ	0xFE8
  8412                           postdec1	equ	0xFE5
  8413                           fsr1h	equ	0xFE2
  8414                           fsr1l	equ	0xFE1
  8415                           indf2	equ	0xFDF
  8416                           fsr2h	equ	0xFDA
  8417                           fsr2l	equ	0xFD9
  8418                           status	equ	0xFD8
  8419                           
  8420 ;; *************** function _fat_restore_mbr_fbr *****************
  8421 ;; Defined at:
  8422 ;;		line 1321 in file "fat16.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;		None
  8425 ;; Auto vars:     Size  Location     Type
  8426 ;;  cntr            2   36[BANK0 ] unsigned int 
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  1    wreg      unsigned char 
  8429 ;; Registers used:
  8430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8431 ;; Tracked objects:
  8432 ;;		On entry : 0/0
  8433 ;;		On exit  : 0/0
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8437 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8439 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8440 ;;Total ram usage:        2 bytes
  8441 ;; Hardware stack levels used:    1
  8442 ;; Hardware stack levels required when called:   15
  8443 ;; This function calls:
  8444 ;;		__get_fbr
  8445 ;;		__get_mbr
  8446 ;;		_flash_sector_write
  8447 ;; This function is called by:
  8448 ;;		_fat_init
  8449 ;; This function uses a non-reentrant model
  8450 ;;
  8451                           
  8452                           	psect	text16
  8453  013540                     __ptext16:
  8454                           	opt stack 0
  8455  013540                     _fat_restore_mbr_fbr:
  8456                           	opt stack 13
  8457                           
  8458                           ;fat16.c: 1323: uint16_t cntr;;fat16.c: 1326: for(cntr=0; cntr<512; ++cntr)
  8459                           
  8460                           ;incstack = 0
  8461  013540  0E00               	movlw	0
  8462  013542  0100               	movlb	0	; () banked
  8463  013544  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8464  013546  0E00               	movlw	0
  8465  013548  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8466  01354A                     l15604:
  8467                           
  8468                           ; BSR set to: 0
  8469  01354A  0E02               	movlw	2
  8470  01354C  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8471  01354E  B0D8               	btfsc	status,0,c
  8472  013550  D011               	goto	u14620
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;fat16.c: 1327: {;fat16.c: 1328: buffer[cntr] = _get_mbr(cntr);
  8476                           
  8477                           ; BSR set to: 0
  8478                           
  8479                           ; BSR set to: 0
  8480  013552  0E00               	movlw	low _buffer
  8481  013554  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8482  013556  6ED9               	movwf	fsr2l,c
  8483  013558  0E0A               	movlw	high _buffer
  8484  01355A  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8485  01355C  6EDA               	movwf	fsr2h,c
  8486  01355E  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_mbr@idx
  8487  013562  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_mbr@idx+1
  8488  013566  EC6D  F091         	call	__get_mbr	;wreg free
  8489  01356A  6EDF               	movwf	indf2,c
  8490  01356C  0100               	movlb	0	; () banked
  8491  01356E  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8492  013570  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8493  013572  D7EB               	goto	l15604
  8494  013574                     u14620:
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;fat16.c: 1329: };fat16.c: 1330: flash_sector_write(0, buffer);
  8498                           
  8499                           ; BSR set to: 0
  8500  013574  0E00               	movlw	0
  8501  013576  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8502  013578  0E00               	movlw	0
  8503  01357A  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8504  01357C  0E00               	movlw	low _buffer
  8505  01357E  6F81               	movwf	flash_sector_write@data& (0+255),b
  8506  013580  0E0A               	movlw	high _buffer
  8507  013582  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8508  013584  ECE8  F0A4         	call	_flash_sector_write	;wreg free
  8509                           
  8510                           ;fat16.c: 1333: for(cntr=0; cntr<512; ++cntr)
  8511  013588  0E00               	movlw	0
  8512  01358A  0100               	movlb	0	; () banked
  8513  01358C  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8514  01358E  0E00               	movlw	0
  8515  013590  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8516  013592                     l15618:
  8517                           
  8518                           ; BSR set to: 0
  8519  013592  0E02               	movlw	2
  8520  013594  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8521  013596  B0D8               	btfsc	status,0,c
  8522  013598  D011               	goto	u14640
  8523                           
  8524                           ; BSR set to: 0
  8525                           ;fat16.c: 1334: {;fat16.c: 1335: buffer[cntr] = _get_fbr(cntr);
  8526                           
  8527                           ; BSR set to: 0
  8528                           
  8529                           ; BSR set to: 0
  8530  01359A  0E00               	movlw	low _buffer
  8531  01359C  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8532  01359E  6ED9               	movwf	fsr2l,c
  8533  0135A0  0E0A               	movlw	high _buffer
  8534  0135A2  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8535  0135A4  6EDA               	movwf	fsr2h,c
  8536  0135A6  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_fbr@idx
  8537  0135AA  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_fbr@idx+1
  8538  0135AE  EC97  F070         	call	__get_fbr	;wreg free
  8539  0135B2  6EDF               	movwf	indf2,c
  8540  0135B4  0100               	movlb	0	; () banked
  8541  0135B6  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8542  0135B8  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8543  0135BA  D7EB               	goto	l15618
  8544  0135BC                     u14640:
  8545                           
  8546                           ; BSR set to: 0
  8547                           ;fat16.c: 1336: };fat16.c: 1337: flash_sector_write(1, buffer);
  8548                           
  8549                           ; BSR set to: 0
  8550  0135BC  0E00               	movlw	0
  8551  0135BE  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8552  0135C0  0E01               	movlw	1
  8553  0135C2  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8554  0135C4  0E00               	movlw	low _buffer
  8555  0135C6  6F81               	movwf	flash_sector_write@data& (0+255),b
  8556  0135C8  0E0A               	movlw	high _buffer
  8557  0135CA  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8558  0135CC  ECE8  F0A4         	call	_flash_sector_write	;wreg free
  8559  0135D0  0012               	return	
  8560  0135D2                     __end_of_fat_restore_mbr_fbr:
  8561                           	opt stack 0
  8562                           tblptru	equ	0xFF8
  8563                           tblptrh	equ	0xFF7
  8564                           tblptrl	equ	0xFF6
  8565                           tablat	equ	0xFF5
  8566                           prodh	equ	0xFF4
  8567                           prodl	equ	0xFF3
  8568                           postinc0	equ	0xFEE
  8569                           wreg	equ	0xFE8
  8570                           postdec1	equ	0xFE5
  8571                           fsr1h	equ	0xFE2
  8572                           fsr1l	equ	0xFE1
  8573                           indf2	equ	0xFDF
  8574                           fsr2h	equ	0xFDA
  8575                           fsr2l	equ	0xFD9
  8576                           status	equ	0xFD8
  8577                           
  8578 ;; *************** function _fat_get_format_status *****************
  8579 ;; Defined at:
  8580 ;;		line 1293 in file "fat16.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;		None
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;  cntr            2   45[BANK0 ] unsigned int 
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  1    wreg      enum E6979
  8587 ;; Registers used:
  8588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8596 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8597 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8598 ;;Total ram usage:        4 bytes
  8599 ;; Hardware stack levels used:    1
  8600 ;; Hardware stack levels required when called:   15
  8601 ;; This function calls:
  8602 ;;		__get_fbr
  8603 ;;		__get_mbr
  8604 ;;		_flash_sector_read
  8605 ;; This function is called by:
  8606 ;;		_fat_init
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           	psect	text17
  8611  012BEE                     __ptext17:
  8612                           	opt stack 0
  8613  012BEE                     _fat_get_format_status:
  8614                           	opt stack 13
  8615                           
  8616                           ;fat16.c: 1295: uint16_t cntr;;fat16.c: 1298: flash_sector_read(0, buffer);
  8617                           
  8618                           ;incstack = 0
  8619  012BEE  0E00               	movlw	0
  8620  012BF0  0100               	movlb	0	; () banked
  8621  012BF2  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8622  012BF4  0E00               	movlw	0
  8623  012BF6  6F87               	movwf	flash_sector_read@page& (0+255),b
  8624  012BF8  0E00               	movlw	low _buffer
  8625  012BFA  6F89               	movwf	flash_sector_read@data& (0+255),b
  8626  012BFC  0E0A               	movlw	high _buffer
  8627  012BFE  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8628  012C00  ECB5  F0A9         	call	_flash_sector_read	;wreg free
  8629                           
  8630                           ;fat16.c: 1299: for(cntr=0; cntr<512; ++cntr)
  8631  012C04  0E00               	movlw	0
  8632  012C06  0100               	movlb	0	; () banked
  8633  012C08  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8634  012C0A  0E00               	movlw	0
  8635  012C0C  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8636  012C0E                     l15566:
  8637                           
  8638                           ; BSR set to: 0
  8639  012C0E  0E02               	movlw	2
  8640  012C10  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8641  012C12  B0D8               	btfsc	status,0,c
  8642  012C14  D017               	goto	u14570
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;fat16.c: 1300: {;fat16.c: 1301: if(buffer[cntr] != _get_mbr(cntr))
  8646                           
  8647                           ; BSR set to: 0
  8648                           
  8649                           ; BSR set to: 0
  8650  012C16  0E00               	movlw	low _buffer
  8651  012C18  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8652  012C1A  6ED9               	movwf	fsr2l,c
  8653  012C1C  0E0A               	movlw	high _buffer
  8654  012C1E  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8655  012C20  6EDA               	movwf	fsr2h,c
  8656  012C22  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  8657  012C26  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  8658  012C2A  EC6D  F091         	call	__get_mbr	;wreg free
  8659  012C2E  0100               	movlb	0	; () banked
  8660  012C30  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8661  012C32  50DE               	movf	postinc2,w,c
  8662  012C34  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8663  012C36  B4D8               	btfsc	status,2,c
  8664  012C38  D002               	goto	l2046
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;fat16.c: 1302: {;fat16.c: 1303: return DRIVE_NOT_FORMATED;
  8668  012C3A  0E00               	movlw	0
  8669                           
  8670                           ; BSR set to: 0
  8671  012C3C  0012               	return	
  8672  012C3E                     l2046:
  8673                           
  8674                           ; BSR set to: 0
  8675                           
  8676                           ; BSR set to: 0
  8677  012C3E  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8678  012C40  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8679  012C42  D7E5               	goto	l15566
  8680  012C44                     u14570:
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;fat16.c: 1304: };fat16.c: 1305: };fat16.c: 1308: flash_sector_read(1, buffer);
  8684                           
  8685                           ; BSR set to: 0
  8686  012C44  0E00               	movlw	0
  8687  012C46  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8688  012C48  0E01               	movlw	1
  8689  012C4A  6F87               	movwf	flash_sector_read@page& (0+255),b
  8690  012C4C  0E00               	movlw	low _buffer
  8691  012C4E  6F89               	movwf	flash_sector_read@data& (0+255),b
  8692  012C50  0E0A               	movlw	high _buffer
  8693  012C52  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8694  012C54  ECB5  F0A9         	call	_flash_sector_read	;wreg free
  8695                           
  8696                           ;fat16.c: 1309: for(cntr=0; cntr<512; ++cntr)
  8697  012C58  0E00               	movlw	0
  8698  012C5A  0100               	movlb	0	; () banked
  8699  012C5C  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8700  012C5E  0E00               	movlw	0
  8701  012C60  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8702  012C62                     l15584:
  8703                           
  8704                           ; BSR set to: 0
  8705  012C62  0E02               	movlw	2
  8706  012C64  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8707  012C66  B0D8               	btfsc	status,0,c
  8708  012C68  D017               	goto	u14600
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;fat16.c: 1310: {;fat16.c: 1311: if(buffer[cntr] != _get_fbr(cntr))
  8712                           
  8713                           ; BSR set to: 0
  8714                           
  8715                           ; BSR set to: 0
  8716  012C6A  0E00               	movlw	low _buffer
  8717  012C6C  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8718  012C6E  6ED9               	movwf	fsr2l,c
  8719  012C70  0E0A               	movlw	high _buffer
  8720  012C72  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8721  012C74  6EDA               	movwf	fsr2h,c
  8722  012C76  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  8723  012C7A  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  8724  012C7E  EC97  F070         	call	__get_fbr	;wreg free
  8725  012C82  0100               	movlb	0	; () banked
  8726  012C84  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8727  012C86  50DE               	movf	postinc2,w,c
  8728  012C88  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8729  012C8A  B4D8               	btfsc	status,2,c
  8730  012C8C  D002               	goto	l2050
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;fat16.c: 1312: {;fat16.c: 1313: return DRIVE_NOT_FORMATED;
  8734  012C8E  0E00               	movlw	0
  8735                           
  8736                           ; BSR set to: 0
  8737  012C90  0012               	return	
  8738  012C92                     l2050:
  8739                           
  8740                           ; BSR set to: 0
  8741                           
  8742                           ; BSR set to: 0
  8743  012C92  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8744  012C94  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8745  012C96  D7E5               	goto	l15584
  8746  012C98                     u14600:
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;fat16.c: 1314: };fat16.c: 1315: };fat16.c: 1318: return DRIVE_FORMATED;
  8750                           
  8751                           ; BSR set to: 0
  8752  012C98  0E01               	movlw	1
  8753  012C9A  0012               	return	
  8754  012C9C                     __end_of_fat_get_format_status:
  8755                           	opt stack 0
  8756                           tblptru	equ	0xFF8
  8757                           tblptrh	equ	0xFF7
  8758                           tblptrl	equ	0xFF6
  8759                           tablat	equ	0xFF5
  8760                           prodh	equ	0xFF4
  8761                           prodl	equ	0xFF3
  8762                           postinc0	equ	0xFEE
  8763                           wreg	equ	0xFE8
  8764                           postdec1	equ	0xFE5
  8765                           fsr1h	equ	0xFE2
  8766                           fsr1l	equ	0xFE1
  8767                           indf2	equ	0xFDF
  8768                           postinc2	equ	0xFDE
  8769                           fsr2h	equ	0xFDA
  8770                           fsr2l	equ	0xFD9
  8771                           status	equ	0xFD8
  8772                           
  8773 ;; *************** function __get_mbr *****************
  8774 ;; Defined at:
  8775 ;;		line 1038 in file "fat16.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;  idx             2    0[BANK0 ] unsigned int 
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;		None
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      unsigned char 
  8782 ;; Registers used:
  8783 ;;		wreg, status,2, status,0
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8789 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8791 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8792 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8793 ;;Total ram usage:        4 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:   10
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_fat_get_format_status
  8800 ;;		_fat_restore_mbr_fbr
  8801 ;;		_fat_format
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           	psect	text18
  8806  0122DA                     __ptext18:
  8807                           	opt stack 0
  8808  0122DA                     __get_mbr:
  8809                           	opt stack 17
  8810                           
  8811                           ;fat16.c: 1040: switch (idx)
  8812                           
  8813                           ; BSR set to: 0
  8814                           ;incstack = 0
  8815  0122DA  D026               	goto	l1918
  8816  0122DC                     
  8817                           ;fat16.c: 1043: return 0x80;
  8818  0122DC  0E80               	movlw	128
  8819  0122DE  0012               	return	
  8820  0122E0                     
  8821                           ;fat16.c: 1045: return 0;
  8822  0122E0  0E00               	movlw	0
  8823  0122E2  0012               	return	
  8824  0122E4                     
  8825                           ;fat16.c: 1047: return 2;
  8826  0122E4  0E02               	movlw	2
  8827  0122E6  0012               	return	
  8828  0122E8                     
  8829                           ;fat16.c: 1049: return 0;
  8830  0122E8  0E00               	movlw	0
  8831  0122EA  0012               	return	
  8832  0122EC                     
  8833                           ;fat16.c: 1051: return 0x04;
  8834  0122EC  0E04               	movlw	4
  8835  0122EE  0012               	return	
  8836  0122F0                     
  8837                           ;fat16.c: 1053: return 2;
  8838  0122F0  0E02               	movlw	2
  8839  0122F2  0012               	return	
  8840  0122F4                     
  8841                           ;fat16.c: 1055: return 3;
  8842  0122F4  0E03               	movlw	3
  8843  0122F6  0012               	return	
  8844  0122F8                     
  8845                           ;fat16.c: 1057: return 8;
  8846  0122F8  0E08               	movlw	8
  8847  0122FA  0012               	return	
  8848  0122FC                     
  8849                           ;fat16.c: 1059: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  8850  0122FC  0E01               	movlw	1
  8851  0122FE  0012               	return	
  8852  012300                     
  8853                           ;fat16.c: 1061: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  8854  012300  0E00               	movlw	0
  8855  012302  0012               	return	
  8856  012304                     
  8857                           ;fat16.c: 1063: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  8858  012304  0E00               	movlw	0
  8859  012306  0012               	return	
  8860  012308                     
  8861                           ;fat16.c: 1065: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  8862  012308  0E00               	movlw	0
  8863  01230A  0012               	return	
  8864  01230C                     
  8865                           ;fat16.c: 1067: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  8866  01230C  0EFF               	movlw	255
  8867  01230E  0012               	return	
  8868  012310                     
  8869                           ;fat16.c: 1069: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  8870  012310  0E1F               	movlw	31
  8871  012312  0012               	return	
  8872  012314                     
  8873                           ;fat16.c: 1071: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  8874  012314  0E00               	movlw	0
  8875  012316  0012               	return	
  8876  012318                     
  8877                           ;fat16.c: 1073: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  8878  012318  0E00               	movlw	0
  8879  01231A  0012               	return	
  8880  01231C                     
  8881                           ;fat16.c: 1075: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  8882  01231C  0E55               	movlw	85
  8883  01231E  0012               	return	
  8884  012320                     
  8885                           ;fat16.c: 1077: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  8886  012320  0EAA               	movlw	170
  8887  012322  0012               	return	
  8888  012324                     
  8889                           ;fat16.c: 1079: return 0X00;
  8890  012324  0E00               	movlw	0
  8891                           
  8892                           ;fat16.c: 1080: }
  8893  012326  0012               	return	
  8894  012328                     l1918:
  8895  012328  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  8896  01232C  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  8897                           
  8898                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8899                           ; Switch size 1, requested type "space"
  8900                           ; Number of cases is 1, Range of values is 1 to 1
  8901                           ; switch strategies available:
  8902                           ; Name         Instructions Cycles
  8903                           ; simple_byte            4     3 (average)
  8904                           ;	Chosen strategy is simple_byte
  8905  012330  0100               	movlb	0	; () banked
  8906  012332  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  8907  012334  0A01               	xorlw	1	; case 1
  8908  012336  A4D8               	btfss	status,2,c
  8909  012338  D7F5               	goto	l1938
  8910                           
  8911                           ; BSR set to: 0
  8912                           ; Switch size 1, requested type "space"
  8913                           ; Number of cases is 18, Range of values is 190 to 255
  8914                           ; switch strategies available:
  8915                           ; Name         Instructions Cycles
  8916                           ; simple_byte           55    28 (average)
  8917                           ;	Chosen strategy is simple_byte
  8918  01233A  5162               	movf	??__get_mbr& (0+255),w,b
  8919  01233C  0ABE               	xorlw	190	; case 190
  8920  01233E  B4D8               	btfsc	status,2,c
  8921  012340  D7CD               	goto	l1919
  8922  012342  0A01               	xorlw	1	; case 191
  8923  012344  B4D8               	btfsc	status,2,c
  8924  012346  D7CC               	goto	l1921
  8925  012348  0A7F               	xorlw	127	; case 192
  8926  01234A  B4D8               	btfsc	status,2,c
  8927  01234C  D7CB               	goto	l1922
  8928  01234E  0A01               	xorlw	1	; case 193
  8929  012350  B4D8               	btfsc	status,2,c
  8930  012352  D7CA               	goto	l1923
  8931  012354  0A03               	xorlw	3	; case 194
  8932  012356  B4D8               	btfsc	status,2,c
  8933  012358  D7C9               	goto	l1924
  8934  01235A  0A01               	xorlw	1	; case 195
  8935  01235C  B4D8               	btfsc	status,2,c
  8936  01235E  D7C8               	goto	l1925
  8937  012360  0A07               	xorlw	7	; case 196
  8938  012362  B4D8               	btfsc	status,2,c
  8939  012364  D7C7               	goto	l1926
  8940  012366  0A01               	xorlw	1	; case 197
  8941  012368  B4D8               	btfsc	status,2,c
  8942  01236A  D7C6               	goto	l1927
  8943  01236C  0A03               	xorlw	3	; case 198
  8944  01236E  B4D8               	btfsc	status,2,c
  8945  012370  D7C5               	goto	l1928
  8946  012372  0A01               	xorlw	1	; case 199
  8947  012374  B4D8               	btfsc	status,2,c
  8948  012376  D7C4               	goto	l1929
  8949  012378  0A0F               	xorlw	15	; case 200
  8950  01237A  B4D8               	btfsc	status,2,c
  8951  01237C  D7C3               	goto	l1930
  8952  01237E  0A01               	xorlw	1	; case 201
  8953  012380  B4D8               	btfsc	status,2,c
  8954  012382  D7C2               	goto	l1931
  8955  012384  0A03               	xorlw	3	; case 202
  8956  012386  B4D8               	btfsc	status,2,c
  8957  012388  D7C1               	goto	l1932
  8958  01238A  0A01               	xorlw	1	; case 203
  8959  01238C  B4D8               	btfsc	status,2,c
  8960  01238E  D7C0               	goto	l1933
  8961  012390  0A07               	xorlw	7	; case 204
  8962  012392  B4D8               	btfsc	status,2,c
  8963  012394  D7BF               	goto	l1934
  8964  012396  0A01               	xorlw	1	; case 205
  8965  012398  B4D8               	btfsc	status,2,c
  8966  01239A  D7BE               	goto	l1935
  8967  01239C  0A33               	xorlw	51	; case 254
  8968  01239E  B4D8               	btfsc	status,2,c
  8969  0123A0  D7BD               	goto	l1936
  8970  0123A2  0A01               	xorlw	1	; case 255
  8971  0123A4  B4D8               	btfsc	status,2,c
  8972  0123A6  D7BC               	goto	l1937
  8973  0123A8  D7BD               	goto	l1938
  8974  0123AA                     __end_of__get_mbr:
  8975                           	opt stack 0
  8976                           tblptru	equ	0xFF8
  8977                           tblptrh	equ	0xFF7
  8978                           tblptrl	equ	0xFF6
  8979                           tablat	equ	0xFF5
  8980                           prodh	equ	0xFF4
  8981                           prodl	equ	0xFF3
  8982                           postinc0	equ	0xFEE
  8983                           wreg	equ	0xFE8
  8984                           postdec1	equ	0xFE5
  8985                           fsr1h	equ	0xFE2
  8986                           fsr1l	equ	0xFE1
  8987                           indf2	equ	0xFDF
  8988                           postinc2	equ	0xFDE
  8989                           fsr2h	equ	0xFDA
  8990                           fsr2l	equ	0xFD9
  8991                           status	equ	0xFD8
  8992                           
  8993 ;; *************** function __get_fbr *****************
  8994 ;; Defined at:
  8995 ;;		line 1083 in file "fat16.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;  idx             2    0[BANK0 ] unsigned int 
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;		None
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  1    wreg      unsigned char 
  9002 ;; Registers used:
  9003 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9009 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9011 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9012 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9013 ;;Total ram usage:        4 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; Hardware stack levels required when called:   10
  9016 ;; This function calls:
  9017 ;;		Nothing
  9018 ;; This function is called by:
  9019 ;;		_fat_get_format_status
  9020 ;;		_fat_restore_mbr_fbr
  9021 ;;		_fat_format
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           	psect	text19
  9026  00E12E                     __ptext19:
  9027                           	opt stack 0
  9028  00E12E                     __get_fbr:
  9029                           	opt stack 17
  9030                           
  9031                           ;fat16.c: 1085: switch (idx)
  9032                           
  9033                           ;incstack = 0
  9034  00E12E  D098               	goto	l1942
  9035  00E130                     
  9036                           ;fat16.c: 1088: return 0xEB;
  9037  00E130  0EEB               	movlw	235
  9038  00E132  0012               	return	
  9039  00E134                     
  9040                           ;fat16.c: 1090: return 0x3C;
  9041  00E134  0E3C               	movlw	60
  9042  00E136  0012               	return	
  9043  00E138                     
  9044                           ;fat16.c: 1092: return 0x90;
  9045  00E138  0E90               	movlw	144
  9046  00E13A  0012               	return	
  9047  00E13C                     
  9048                           ;fat16.c: 1094: return "MSDOS5.0"[0];
  9049  00E13C  0E0B               	movlw	low STR_7
  9050  00E13E  6EF6               	movwf	tblptrl,c
  9051  00E140                     	if	1	;There is more than 1 active tblptr byte
  9052  00E140  0EA3               	movlw	high STR_7
  9053  00E142  6EF7               	movwf	tblptrh,c
  9054  00E144                     	endif
  9055  00E144                     	if	1	;There are 3 active tblptr bytes
  9056  00E144  0E00               	movlw	low (STR_7 shr (0+16))
  9057  00E146  6EF8               	movwf	tblptru,c
  9058  00E148                     	endif
  9059  00E148  0008               	tblrd		*
  9060  00E14A  50F5               	movf	tablat,w,c
  9061  00E14C  0012               	return	
  9062  00E14E                     
  9063                           ;fat16.c: 1096: return "MSDOS5.0"[1];
  9064  00E14E  0E0C               	movlw	low (STR_7+1)
  9065  00E150  6EF6               	movwf	tblptrl,c
  9066  00E152  0EA3               	movlw	high (STR_7+1)
  9067  00E154  6EF7               	movwf	tblptrh,c
  9068  00E156                     	if	0	;tblptru may be non-zero
  9069  00E156                     	endif
  9070  00E156                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9071  00E156  0E00               	movlw	low (__mediumconst shr (0+16))
  9072  00E158  6EF8               	movwf	tblptru,c
  9073  00E15A                     	endif
  9074  00E15A  0008               	tblrd		*
  9075  00E15C  50F5               	movf	tablat,w,c
  9076  00E15E  0012               	return	
  9077  00E160                     
  9078                           ;fat16.c: 1098: return "MSDOS5.0"[2];
  9079  00E160  0E0D               	movlw	low (STR_7+2)
  9080  00E162  6EF6               	movwf	tblptrl,c
  9081  00E164  0EA3               	movlw	high (STR_7+2)
  9082  00E166  6EF7               	movwf	tblptrh,c
  9083  00E168                     	if	0	;tblptru may be non-zero
  9084  00E168                     	endif
  9085  00E168                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9086  00E168  0E00               	movlw	low (__mediumconst shr (0+16))
  9087  00E16A  6EF8               	movwf	tblptru,c
  9088  00E16C                     	endif
  9089  00E16C  0008               	tblrd		*
  9090  00E16E  50F5               	movf	tablat,w,c
  9091  00E170  0012               	return	
  9092  00E172                     
  9093                           ;fat16.c: 1100: return "MSDOS5.0"[3];
  9094  00E172  0E0E               	movlw	low (STR_7+3)
  9095  00E174  6EF6               	movwf	tblptrl,c
  9096  00E176  0EA3               	movlw	high (STR_7+3)
  9097  00E178  6EF7               	movwf	tblptrh,c
  9098  00E17A                     	if	0	;tblptru may be non-zero
  9099  00E17A                     	endif
  9100  00E17A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9101  00E17A  0E00               	movlw	low (__mediumconst shr (0+16))
  9102  00E17C  6EF8               	movwf	tblptru,c
  9103  00E17E                     	endif
  9104  00E17E  0008               	tblrd		*
  9105  00E180  50F5               	movf	tablat,w,c
  9106  00E182  0012               	return	
  9107  00E184                     
  9108                           ;fat16.c: 1102: return "MSDOS5.0"[4];
  9109  00E184  0E0F               	movlw	low (STR_7+4)
  9110  00E186  6EF6               	movwf	tblptrl,c
  9111  00E188  0EA3               	movlw	high (STR_7+4)
  9112  00E18A  6EF7               	movwf	tblptrh,c
  9113  00E18C                     	if	0	;tblptru may be non-zero
  9114  00E18C                     	endif
  9115  00E18C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9116  00E18C  0E00               	movlw	low (__mediumconst shr (0+16))
  9117  00E18E  6EF8               	movwf	tblptru,c
  9118  00E190                     	endif
  9119  00E190  0008               	tblrd		*
  9120  00E192  50F5               	movf	tablat,w,c
  9121  00E194  0012               	return	
  9122  00E196                     
  9123                           ;fat16.c: 1104: return "MSDOS5.0"[5];
  9124  00E196  0E10               	movlw	low (STR_7+5)
  9125  00E198  6EF6               	movwf	tblptrl,c
  9126  00E19A  0EA3               	movlw	high (STR_7+5)
  9127  00E19C  6EF7               	movwf	tblptrh,c
  9128  00E19E                     	if	0	;tblptru may be non-zero
  9129  00E19E                     	endif
  9130  00E19E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9131  00E19E  0E00               	movlw	low (__mediumconst shr (0+16))
  9132  00E1A0  6EF8               	movwf	tblptru,c
  9133  00E1A2                     	endif
  9134  00E1A2  0008               	tblrd		*
  9135  00E1A4  50F5               	movf	tablat,w,c
  9136  00E1A6  0012               	return	
  9137  00E1A8                     
  9138                           ;fat16.c: 1106: return "MSDOS5.0"[6];
  9139  00E1A8  0E11               	movlw	low (STR_7+6)
  9140  00E1AA  6EF6               	movwf	tblptrl,c
  9141  00E1AC  0EA3               	movlw	high (STR_7+6)
  9142  00E1AE  6EF7               	movwf	tblptrh,c
  9143  00E1B0                     	if	0	;tblptru may be non-zero
  9144  00E1B0                     	endif
  9145  00E1B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9146  00E1B0  0E00               	movlw	low (__mediumconst shr (0+16))
  9147  00E1B2  6EF8               	movwf	tblptru,c
  9148  00E1B4                     	endif
  9149  00E1B4  0008               	tblrd		*
  9150  00E1B6  50F5               	movf	tablat,w,c
  9151  00E1B8  0012               	return	
  9152  00E1BA                     
  9153                           ;fat16.c: 1108: return "MSDOS5.0"[7];
  9154  00E1BA  0E12               	movlw	low (STR_7+7)
  9155  00E1BC  6EF6               	movwf	tblptrl,c
  9156  00E1BE  0EA3               	movlw	high (STR_7+7)
  9157  00E1C0  6EF7               	movwf	tblptrh,c
  9158  00E1C2                     	if	0	;tblptru may be non-zero
  9159  00E1C2                     	endif
  9160  00E1C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9161  00E1C2  0E00               	movlw	low (__mediumconst shr (0+16))
  9162  00E1C4  6EF8               	movwf	tblptru,c
  9163  00E1C6                     	endif
  9164  00E1C6  0008               	tblrd		*
  9165  00E1C8  50F5               	movf	tablat,w,c
  9166  00E1CA  0012               	return	
  9167  00E1CC                     
  9168                           ;fat16.c: 1110: return ((unsigned char)((((uint16_t)512))&0xFF));
  9169  00E1CC  0E00               	movlw	0
  9170  00E1CE  0012               	return	
  9171  00E1D0                     
  9172                           ;fat16.c: 1112: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9173  00E1D0  0E02               	movlw	2
  9174  00E1D2  0012               	return	
  9175  00E1D4                     
  9176                           ;fat16.c: 1114: return 1;
  9177  00E1D4  0E01               	movlw	1
  9178  00E1D6  0012               	return	
  9179  00E1D8                     
  9180                           ;fat16.c: 1116: return ((unsigned char)((((uint16_t)1))&0xFF));
  9181  00E1D8  0E01               	movlw	1
  9182  00E1DA  0012               	return	
  9183  00E1DC                     
  9184                           ;fat16.c: 1118: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9185  00E1DC  0E00               	movlw	0
  9186  00E1DE  0012               	return	
  9187  00E1E0                     
  9188                           ;fat16.c: 1120: return 1;
  9189  00E1E0  0E01               	movlw	1
  9190  00E1E2  0012               	return	
  9191  00E1E4                     
  9192                           ;fat16.c: 1122: return ((unsigned char)((((uint16_t)64))&0xFF));
  9193  00E1E4  0E40               	movlw	64
  9194  00E1E6  0012               	return	
  9195  00E1E8                     
  9196                           ;fat16.c: 1124: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9197  00E1E8  0E00               	movlw	0
  9198  00E1EA  0012               	return	
  9199  00E1EC                     
  9200                           ;fat16.c: 1126: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9201  00E1EC  0EFF               	movlw	255
  9202  00E1EE  0012               	return	
  9203  00E1F0                     
  9204                           ;fat16.c: 1128: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  9205  00E1F0  0E1F               	movlw	31
  9206  00E1F2  0012               	return	
  9207  00E1F4                     
  9208                           ;fat16.c: 1130: return 0XF8;
  9209  00E1F4  0EF8               	movlw	248
  9210  00E1F6  0012               	return	
  9211  00E1F8                     
  9212                           ;fat16.c: 1132: return ((unsigned char)((((uint16_t)32))&0xFF));
  9213  00E1F8  0E20               	movlw	32
  9214  00E1FA  0012               	return	
  9215  00E1FC                     
  9216                           ;fat16.c: 1134: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  9217  00E1FC  0E00               	movlw	0
  9218  00E1FE  0012               	return	
  9219  00E200                     
  9220                           ;fat16.c: 1136: return ((unsigned char)((((uint16_t)63))&0xFF));
  9221  00E200  0E3F               	movlw	63
  9222  00E202  0012               	return	
  9223  00E204                     
  9224                           ;fat16.c: 1138: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  9225  00E204  0E00               	movlw	0
  9226  00E206  0012               	return	
  9227  00E208                     
  9228                           ;fat16.c: 1140: return ((unsigned char)((((uint16_t)16))&0xFF));
  9229  00E208  0E10               	movlw	16
  9230  00E20A  0012               	return	
  9231  00E20C                     
  9232                           ;fat16.c: 1142: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  9233  00E20C  0E00               	movlw	0
  9234  00E20E  0012               	return	
  9235  00E210                     
  9236                           ;fat16.c: 1144: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
  9237  00E210  0E00               	movlw	0
  9238  00E212  0012               	return	
  9239  00E214                     
  9240                           ;fat16.c: 1146: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
  9241  00E214  0E00               	movlw	0
  9242  00E216  0012               	return	
  9243  00E218                     
  9244                           ;fat16.c: 1148: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
  9245  00E218  0E00               	movlw	0
  9246  00E21A  0012               	return	
  9247  00E21C                     
  9248                           ;fat16.c: 1150: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9249  00E21C  0E00               	movlw	0
  9250  00E21E  0012               	return	
  9251  00E220                     
  9252                           ;fat16.c: 1152: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  9253  00E220  0E01               	movlw	1
  9254  00E222  0012               	return	
  9255  00E224                     
  9256                           ;fat16.c: 1154: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  9257  00E224  0E00               	movlw	0
  9258  00E226  0012               	return	
  9259  00E228                     
  9260                           ;fat16.c: 1156: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
  9261  00E228  0E22               	movlw	34
  9262  00E22A  0012               	return	
  9263  00E22C                     
  9264                           ;fat16.c: 1158: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
  9265  00E22C  0E00               	movlw	0
  9266  00E22E  0012               	return	
  9267  00E230                     
  9268                           ;fat16.c: 1162: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9269                           
  9270                           ;fat16.c: 1161: case 0x2F:
  9271  00E230  0E00               	movlw	0
  9272  00E232  0012               	return	
  9273  00E234                     
  9274                           ;fat16.c: 1164: return 'F';
  9275  00E234  0E46               	movlw	70
  9276  00E236  0012               	return	
  9277  00E238                     
  9278                           ;fat16.c: 1166: return 'A';
  9279  00E238  0E41               	movlw	65
  9280  00E23A  0012               	return	
  9281  00E23C                     
  9282                           ;fat16.c: 1168: return 'T';
  9283  00E23C  0E54               	movlw	84
  9284  00E23E  0012               	return	
  9285  00E240                     
  9286                           ;fat16.c: 1170: return '1';
  9287  00E240  0E31               	movlw	49
  9288  00E242  0012               	return	
  9289  00E244                     
  9290                           ;fat16.c: 1172: return '6';
  9291  00E244  0E36               	movlw	54
  9292  00E246  0012               	return	
  9293  00E248                     
  9294                           ;fat16.c: 1174: return ' ';
  9295  00E248  0E20               	movlw	32
  9296  00E24A  0012               	return	
  9297  00E24C                     
  9298                           ;fat16.c: 1176: return ' ';
  9299  00E24C  0E20               	movlw	32
  9300  00E24E  0012               	return	
  9301  00E250                     
  9302                           ;fat16.c: 1178: return ' ';
  9303  00E250  0E20               	movlw	32
  9304  00E252  0012               	return	
  9305  00E254                     
  9306                           ;fat16.c: 1180: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  9307  00E254  0E55               	movlw	85
  9308  00E256  0012               	return	
  9309  00E258                     
  9310                           ;fat16.c: 1182: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  9311  00E258  0EAA               	movlw	170
  9312  00E25A  0012               	return	
  9313  00E25C                     
  9314                           ;fat16.c: 1184: return 0X00;
  9315  00E25C  0E00               	movlw	0
  9316                           
  9317                           ;fat16.c: 1185: }
  9318  00E25E  0012               	return	
  9319  00E260                     l1942:
  9320  00E260  C060  F062         	movff	__get_fbr@idx,??__get_fbr
  9321  00E264  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
  9322                           
  9323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9324                           ; Switch size 1, requested type "space"
  9325                           ; Number of cases is 2, Range of values is 0 to 1
  9326                           ; switch strategies available:
  9327                           ; Name         Instructions Cycles
  9328                           ; simple_byte            7     4 (average)
  9329                           ;	Chosen strategy is simple_byte
  9330  00E268  0100               	movlb	0	; () banked
  9331  00E26A  5163               	movf	(??__get_fbr+1)& (0+255),w,b
  9332  00E26C  0A00               	xorlw	0	; case 0
  9333  00E26E  B4D8               	btfsc	status,2,c
  9334  00E270  D004               	goto	l19202
  9335  00E272  0A01               	xorlw	1	; case 1
  9336  00E274  B4D8               	btfsc	status,2,c
  9337  00E276  D08D               	goto	l19204
  9338  00E278  D7F1               	goto	l1992
  9339  00E27A                     l19202:
  9340                           
  9341                           ; BSR set to: 0
  9342                           ; Switch size 1, requested type "space"
  9343                           ; Number of cases is 46, Range of values is 0 to 61
  9344                           ; switch strategies available:
  9345                           ; Name         Instructions Cycles
  9346                           ; simple_byte          139    70 (average)
  9347                           ;	Chosen strategy is simple_byte
  9348  00E27A  5162               	movf	??__get_fbr& (0+255),w,b
  9349  00E27C  0A00               	xorlw	0	; case 0
  9350  00E27E  B4D8               	btfsc	status,2,c
  9351  00E280  D757               	goto	l1943
  9352  00E282  0A01               	xorlw	1	; case 1
  9353  00E284  B4D8               	btfsc	status,2,c
  9354  00E286  D756               	goto	l1945
  9355  00E288  0A03               	xorlw	3	; case 2
  9356  00E28A  B4D8               	btfsc	status,2,c
  9357  00E28C  D755               	goto	l1946
  9358  00E28E  0A01               	xorlw	1	; case 3
  9359  00E290  B4D8               	btfsc	status,2,c
  9360  00E292  D754               	goto	l1947
  9361  00E294  0A07               	xorlw	7	; case 4
  9362  00E296  B4D8               	btfsc	status,2,c
  9363  00E298  D75A               	goto	l1948
  9364  00E29A  0A01               	xorlw	1	; case 5
  9365  00E29C  B4D8               	btfsc	status,2,c
  9366  00E29E  D760               	goto	l1949
  9367  00E2A0  0A03               	xorlw	3	; case 6
  9368  00E2A2  B4D8               	btfsc	status,2,c
  9369  00E2A4  D766               	goto	l1950
  9370  00E2A6  0A01               	xorlw	1	; case 7
  9371  00E2A8  B4D8               	btfsc	status,2,c
  9372  00E2AA  D76C               	goto	l1951
  9373  00E2AC  0A0F               	xorlw	15	; case 8
  9374  00E2AE  B4D8               	btfsc	status,2,c
  9375  00E2B0  D772               	goto	l1952
  9376  00E2B2  0A01               	xorlw	1	; case 9
  9377  00E2B4  B4D8               	btfsc	status,2,c
  9378  00E2B6  D778               	goto	l1953
  9379  00E2B8  0A03               	xorlw	3	; case 10
  9380  00E2BA  B4D8               	btfsc	status,2,c
  9381  00E2BC  D77E               	goto	l1954
  9382  00E2BE  0A01               	xorlw	1	; case 11
  9383  00E2C0  B4D8               	btfsc	status,2,c
  9384  00E2C2  D784               	goto	l1955
  9385  00E2C4  0A07               	xorlw	7	; case 12
  9386  00E2C6  B4D8               	btfsc	status,2,c
  9387  00E2C8  D783               	goto	l1956
  9388  00E2CA  0A01               	xorlw	1	; case 13
  9389  00E2CC  B4D8               	btfsc	status,2,c
  9390  00E2CE  D782               	goto	l1957
  9391  00E2D0  0A03               	xorlw	3	; case 14
  9392  00E2D2  B4D8               	btfsc	status,2,c
  9393  00E2D4  D781               	goto	l1958
  9394  00E2D6  0A01               	xorlw	1	; case 15
  9395  00E2D8  B4D8               	btfsc	status,2,c
  9396  00E2DA  D780               	goto	l1959
  9397  00E2DC  0A1F               	xorlw	31	; case 16
  9398  00E2DE  B4D8               	btfsc	status,2,c
  9399  00E2E0  D77F               	goto	l1960
  9400  00E2E2  0A01               	xorlw	1	; case 17
  9401  00E2E4  B4D8               	btfsc	status,2,c
  9402  00E2E6  D77E               	goto	l1961
  9403  00E2E8  0A03               	xorlw	3	; case 18
  9404  00E2EA  B4D8               	btfsc	status,2,c
  9405  00E2EC  D77D               	goto	l1962
  9406  00E2EE  0A01               	xorlw	1	; case 19
  9407  00E2F0  B4D8               	btfsc	status,2,c
  9408  00E2F2  D77C               	goto	l1963
  9409  00E2F4  0A07               	xorlw	7	; case 20
  9410  00E2F6  B4D8               	btfsc	status,2,c
  9411  00E2F8  D77B               	goto	l1964
  9412  00E2FA  0A01               	xorlw	1	; case 21
  9413  00E2FC  B4D8               	btfsc	status,2,c
  9414  00E2FE  D77A               	goto	l1965
  9415  00E300  0A03               	xorlw	3	; case 22
  9416  00E302  B4D8               	btfsc	status,2,c
  9417  00E304  D779               	goto	l1966
  9418  00E306  0A01               	xorlw	1	; case 23
  9419  00E308  B4D8               	btfsc	status,2,c
  9420  00E30A  D778               	goto	l1967
  9421  00E30C  0A0F               	xorlw	15	; case 24
  9422  00E30E  B4D8               	btfsc	status,2,c
  9423  00E310  D777               	goto	l1968
  9424  00E312  0A01               	xorlw	1	; case 25
  9425  00E314  B4D8               	btfsc	status,2,c
  9426  00E316  D776               	goto	l1969
  9427  00E318  0A03               	xorlw	3	; case 26
  9428  00E31A  B4D8               	btfsc	status,2,c
  9429  00E31C  D775               	goto	l1970
  9430  00E31E  0A01               	xorlw	1	; case 27
  9431  00E320  B4D8               	btfsc	status,2,c
  9432  00E322  D774               	goto	l1971
  9433  00E324  0A07               	xorlw	7	; case 28
  9434  00E326  B4D8               	btfsc	status,2,c
  9435  00E328  D773               	goto	l1972
  9436  00E32A  0A01               	xorlw	1	; case 29
  9437  00E32C  B4D8               	btfsc	status,2,c
  9438  00E32E  D772               	goto	l1973
  9439  00E330  0A03               	xorlw	3	; case 30
  9440  00E332  B4D8               	btfsc	status,2,c
  9441  00E334  D771               	goto	l1974
  9442  00E336  0A01               	xorlw	1	; case 31
  9443  00E338  B4D8               	btfsc	status,2,c
  9444  00E33A  D770               	goto	l1975
  9445  00E33C  0A37               	xorlw	55	; case 40
  9446  00E33E  B4D8               	btfsc	status,2,c
  9447  00E340  D76F               	goto	l1976
  9448  00E342  0A01               	xorlw	1	; case 41
  9449  00E344  B4D8               	btfsc	status,2,c
  9450  00E346  D76E               	goto	l1977
  9451  00E348  0A05               	xorlw	5	; case 44
  9452  00E34A  B4D8               	btfsc	status,2,c
  9453  00E34C  D76D               	goto	l1978
  9454  00E34E  0A01               	xorlw	1	; case 45
  9455  00E350  B4D8               	btfsc	status,2,c
  9456  00E352  D76C               	goto	l1979
  9457  00E354  0A03               	xorlw	3	; case 46
  9458  00E356  B4D8               	btfsc	status,2,c
  9459  00E358  D76B               	goto	l1980
  9460  00E35A  0A01               	xorlw	1	; case 47
  9461  00E35C  B4D8               	btfsc	status,2,c
  9462  00E35E  D768               	goto	l1980
  9463  00E360  0A19               	xorlw	25	; case 54
  9464  00E362  B4D8               	btfsc	status,2,c
  9465  00E364  D767               	goto	l1982
  9466  00E366  0A01               	xorlw	1	; case 55
  9467  00E368  B4D8               	btfsc	status,2,c
  9468  00E36A  D766               	goto	l1983
  9469  00E36C  0A0F               	xorlw	15	; case 56
  9470  00E36E  B4D8               	btfsc	status,2,c
  9471  00E370  D765               	goto	l1984
  9472  00E372  0A01               	xorlw	1	; case 57
  9473  00E374  B4D8               	btfsc	status,2,c
  9474  00E376  D764               	goto	l1985
  9475  00E378  0A03               	xorlw	3	; case 58
  9476  00E37A  B4D8               	btfsc	status,2,c
  9477  00E37C  D763               	goto	l1986
  9478  00E37E  0A01               	xorlw	1	; case 59
  9479  00E380  B4D8               	btfsc	status,2,c
  9480  00E382  D762               	goto	l1987
  9481  00E384  0A07               	xorlw	7	; case 60
  9482  00E386  B4D8               	btfsc	status,2,c
  9483  00E388  D761               	goto	l1988
  9484  00E38A  0A01               	xorlw	1	; case 61
  9485  00E38C  B4D8               	btfsc	status,2,c
  9486  00E38E  D760               	goto	l1989
  9487  00E390  D765               	goto	l1992
  9488  00E392                     l19204:
  9489                           
  9490                           ; BSR set to: 0
  9491                           ; Switch size 1, requested type "space"
  9492                           ; Number of cases is 2, Range of values is 254 to 255
  9493                           ; switch strategies available:
  9494                           ; Name         Instructions Cycles
  9495                           ; simple_byte            7     4 (average)
  9496                           ;	Chosen strategy is simple_byte
  9497  00E392  5162               	movf	??__get_fbr& (0+255),w,b
  9498  00E394  0AFE               	xorlw	254	; case 254
  9499  00E396  B4D8               	btfsc	status,2,c
  9500  00E398  D75D               	goto	l1990
  9501  00E39A  0A01               	xorlw	1	; case 255
  9502  00E39C  B4D8               	btfsc	status,2,c
  9503  00E39E  D75C               	goto	l1991
  9504  00E3A0  D75D               	goto	l1992
  9505  00E3A2                     __end_of__get_fbr:
  9506                           	opt stack 0
  9507                           tblptru	equ	0xFF8
  9508                           tblptrh	equ	0xFF7
  9509                           tblptrl	equ	0xFF6
  9510                           tablat	equ	0xFF5
  9511                           prodh	equ	0xFF4
  9512                           prodl	equ	0xFF3
  9513                           postinc0	equ	0xFEE
  9514                           wreg	equ	0xFE8
  9515                           postdec1	equ	0xFE5
  9516                           fsr1h	equ	0xFE2
  9517                           fsr1l	equ	0xFE1
  9518                           indf2	equ	0xFDF
  9519                           postinc2	equ	0xFDE
  9520                           fsr2h	equ	0xFDA
  9521                           fsr2l	equ	0xFD9
  9522                           status	equ	0xFD8
  9523                           
  9524 ;; *************** function _encoder_init *****************
  9525 ;; Defined at:
  9526 ;;		line 92 in file "encoder.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;		None
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;		None
  9531 ;; Return value:  Size  Location     Type
  9532 ;;                  1    wreg      void 
  9533 ;; Registers used:
  9534 ;;		wreg, status,2, status,0
  9535 ;; Tracked objects:
  9536 ;;		On entry : 0/0
  9537 ;;		On exit  : 0/0
  9538 ;;		Unchanged: 0/0
  9539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9544 ;;Total ram usage:        0 bytes
  9545 ;; Hardware stack levels used:    1
  9546 ;; Hardware stack levels required when called:   10
  9547 ;; This function calls:
  9548 ;;		Nothing
  9549 ;; This function is called by:
  9550 ;;		_system_init
  9551 ;; This function uses a non-reentrant model
  9552 ;;
  9553                           
  9554                           	psect	text20
  9555  0153DE                     __ptext20:
  9556                           	opt stack 0
  9557  0153DE                     _encoder_init:
  9558                           	opt stack 19
  9559                           
  9560                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
  9561                           
  9562                           ;incstack = 0
  9563  0153DE  5084               	movf	3972,w,c	;volatile
  9564  0153E0  0B07               	andlw	7
  9565  0153E2  0101               	movlb	1	; () banked
  9566  0153E4  6F54               	movwf	_enc1& (0+255),b
  9567                           
  9568                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
  9569  0153E6  5080               	movf	3968,w,c	;volatile
  9570  0153E8  0B07               	andlw	7
  9571  0153EA  6F53               	movwf	_enc2& (0+255),b
  9572                           
  9573                           ; BSR set to: 1
  9574                           ;encoder.c: 96: os.encoder1Count = 0;
  9575  0153EC  0E00               	movlw	0
  9576  0153EE  6F74               	movwf	(_os+3)& (0+255),b	;volatile
  9577                           
  9578                           ; BSR set to: 1
  9579                           ;encoder.c: 97: os.encoder2Count = 0;
  9580  0153F0  0E00               	movlw	0
  9581  0153F2  6F76               	movwf	(_os+5)& (0+255),b	;volatile
  9582                           
  9583                           ; BSR set to: 1
  9584                           ;encoder.c: 98: os.button1 = 0;
  9585  0153F4  0E00               	movlw	0
  9586  0153F6  6F75               	movwf	(_os+4)& (0+255),b	;volatile
  9587                           
  9588                           ; BSR set to: 1
  9589                           ;encoder.c: 99: os.button2 = 0;
  9590  0153F8  0E00               	movlw	0
  9591  0153FA  6F77               	movwf	(_os+6)& (0+255),b	;volatile
  9592                           
  9593                           ; BSR set to: 1
  9594                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  9595  0153FC  0E01               	movlw	1
  9596  0153FE  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
  9597                           
  9598                           ; BSR set to: 1
  9599  015400  0012               	return		;funcret
  9600  015402                     __end_of_encoder_init:
  9601                           	opt stack 0
  9602                           tblptru	equ	0xFF8
  9603                           tblptrh	equ	0xFF7
  9604                           tblptrl	equ	0xFF6
  9605                           tablat	equ	0xFF5
  9606                           prodh	equ	0xFF4
  9607                           prodl	equ	0xFF3
  9608                           postinc0	equ	0xFEE
  9609                           wreg	equ	0xFE8
  9610                           postdec1	equ	0xFE5
  9611                           fsr1h	equ	0xFE2
  9612                           fsr1l	equ	0xFE1
  9613                           indf2	equ	0xFDF
  9614                           postinc2	equ	0xFDE
  9615                           fsr2h	equ	0xFDA
  9616                           fsr2l	equ	0xFD9
  9617                           status	equ	0xFD8
  9618                           
  9619 ;; *************** function _display_update *****************
  9620 ;; Defined at:
  9621 ;;		line 618 in file "display.c"
  9622 ;; Parameters:    Size  Location     Type
  9623 ;;		None
  9624 ;; Auto vars:     Size  Location     Type
  9625 ;;  line            1   16[BANK0 ] unsigned char 
  9626 ;; Return value:  Size  Location     Type
  9627 ;;                  1    wreg      void 
  9628 ;; Registers used:
  9629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9630 ;; Tracked objects:
  9631 ;;		On entry : 0/0
  9632 ;;		On exit  : 0/0
  9633 ;;		Unchanged: 0/0
  9634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9636 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9638 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9639 ;;Total ram usage:        1 bytes
  9640 ;; Hardware stack levels used:    1
  9641 ;; Hardware stack levels required when called:   14
  9642 ;; This function calls:
  9643 ;;		_i2c_display_cursor
  9644 ;;		_i2c_display_write_fixed
  9645 ;; This function is called by:
  9646 ;;		_main
  9647 ;;		_system_init
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           	psect	text21
  9652  014F2C                     __ptext21:
  9653                           	opt stack 0
  9654  014F2C                     _display_update:
  9655                           	opt stack 15
  9656                           
  9657                           ;display.c: 620: uint8_t line;;display.c: 621: for(line=0; line<4; ++line)
  9658                           
  9659                           ; BSR set to: 1
  9660                           ;incstack = 0
  9661  014F2C  0E00               	movlw	0
  9662  014F2E  0100               	movlb	0	; () banked
  9663  014F30  6F70               	movwf	display_update@line& (0+255),b
  9664  014F32                     l16504:
  9665                           
  9666                           ; BSR set to: 0
  9667  014F32  0E03               	movlw	3
  9668  014F34  6570               	cpfsgt	display_update@line& (0+255),b
  9669  014F36  D001               	goto	l1485
  9670  014F38  0012               	return	
  9671  014F3A                     l1485:
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;display.c: 622: {;display.c: 623: i2c_display_cursor(line, 0);
  9675                           
  9676                           ; BSR set to: 0
  9677  014F3A  0E00               	movlw	0
  9678  014F3C  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
  9679  014F3E  5170               	movf	display_update@line& (0+255),w,b
  9680  014F40  EC25  F0AA         	call	_i2c_display_cursor
  9681                           
  9682                           ;display.c: 624: i2c_display_write_fixed(display_content[line], 20);
  9683  014F44  0100               	movlb	0	; () banked
  9684  014F46  5170               	movf	display_update@line& (0+255),w,b
  9685  014F48  0D14               	mullw	20
  9686  014F4A  0E34               	movlw	low _display_content
  9687  014F4C  24F3               	addwf	prodl,w,c
  9688  014F4E  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
  9689  014F50  0E02               	movlw	high _display_content
  9690  014F52  20F4               	addwfc	prodh,w,c
  9691  014F54  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
  9692  014F56  0E14               	movlw	20
  9693  014F58  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
  9694  014F5A  EC9F  F0A3         	call	_i2c_display_write_fixed	;wreg free
  9695  014F5E  0100               	movlb	0	; () banked
  9696  014F60  2B70               	incf	display_update@line& (0+255),f,b
  9697  014F62  D7E7               	goto	l16504
  9698  014F64                     __end_of_display_update:
  9699                           	opt stack 0
  9700                           tblptru	equ	0xFF8
  9701                           tblptrh	equ	0xFF7
  9702                           tblptrl	equ	0xFF6
  9703                           tablat	equ	0xFF5
  9704                           prodh	equ	0xFF4
  9705                           prodl	equ	0xFF3
  9706                           postinc0	equ	0xFEE
  9707                           wreg	equ	0xFE8
  9708                           postdec1	equ	0xFE5
  9709                           fsr1h	equ	0xFE2
  9710                           fsr1l	equ	0xFE1
  9711                           indf2	equ	0xFDF
  9712                           postinc2	equ	0xFDE
  9713                           fsr2h	equ	0xFDA
  9714                           fsr2l	equ	0xFD9
  9715                           status	equ	0xFD8
  9716                           
  9717 ;; *************** function _i2c_display_write_fixed *****************
  9718 ;; Defined at:
  9719 ;;		line 419 in file "i2c.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;  data            2    5[BANK0 ] PTR unsigned char 
  9722 ;;		 -> display_content(80), 
  9723 ;;  length          1    7[BANK0 ] unsigned char 
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;  pos             1    8[BANK0 ] unsigned char 
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  1    wreg      void 
  9728 ;; Registers used:
  9729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9735 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9736 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9738 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9739 ;;Total ram usage:        4 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; Hardware stack levels required when called:   11
  9742 ;; This function calls:
  9743 ;;		__i2c_send
  9744 ;;		__i2c_start
  9745 ;;		__i2c_stop
  9746 ;;		__i2c_wait_idle
  9747 ;; This function is called by:
  9748 ;;		_display_update
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           	psect	text22
  9753  01473E                     __ptext22:
  9754                           	opt stack 0
  9755  01473E                     _i2c_display_write_fixed:
  9756                           	opt stack 17
  9757                           
  9758                           ;i2c.c: 421: uint8_t pos;;i2c.c: 426: _i2c_wait_idle();
  9759                           
  9760                           ; BSR set to: 0
  9761                           ;incstack = 0
  9762  01473E  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
  9763                           
  9764                           ;i2c.c: 427: _i2c_start();
  9765  014742  EC5A  F0AB         	call	__i2c_start	;wreg free
  9766                           
  9767                           ;i2c.c: 428: _i2c_wait_idle();
  9768  014746  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
  9769                           
  9770                           ;i2c.c: 429: _i2c_send(0b01111000);
  9771  01474A  0E78               	movlw	120
  9772  01474C  EC47  F0AB         	call	__i2c_send
  9773                           
  9774                           ;i2c.c: 430: _i2c_wait_idle();
  9775  014750  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
  9776                           
  9777                           ;i2c.c: 431: _i2c_send(0b01000000);
  9778  014754  0E40               	movlw	64
  9779  014756  EC47  F0AB         	call	__i2c_send
  9780                           
  9781                           ;i2c.c: 432: _i2c_wait_idle();
  9782  01475A  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
  9783                           
  9784                           ;i2c.c: 435: for(pos=0; pos<length; ++pos)
  9785  01475E  0E00               	movlw	0
  9786  014760  0100               	movlb	0	; () banked
  9787  014762  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
  9788  014764  D00F               	goto	l1243
  9789  014766                     
  9790                           ; BSR set to: 0
  9791                           ;i2c.c: 436: {;i2c.c: 437: _i2c_send(data[pos]);
  9792                           
  9793                           ; BSR set to: 0
  9794  014766  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
  9795  014768  0D01               	mullw	1
  9796  01476A  50F3               	movf	prodl,w,c
  9797  01476C  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
  9798  01476E  6ED9               	movwf	fsr2l,c
  9799  014770  50F4               	movf	prodh,w,c
  9800  014772  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
  9801  014774  6EDA               	movwf	fsr2h,c
  9802  014776  50DF               	movf	indf2,w,c
  9803  014778  EC47  F0AB         	call	__i2c_send
  9804                           
  9805                           ;i2c.c: 438: _i2c_wait_idle();
  9806  01477C  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
  9807  014780  0100               	movlb	0	; () banked
  9808  014782  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
  9809  014784                     l1243:
  9810                           
  9811                           ; BSR set to: 0
  9812                           
  9813                           ; BSR set to: 0
  9814  014784  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
  9815  014786  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
  9816  014788  A0D8               	btfss	status,0,c
  9817  01478A  D7ED               	goto	l1244
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;i2c.c: 439: };i2c.c: 441: _i2c_stop();
  9821                           
  9822                           ; BSR set to: 0
  9823  01478C  EC56  F0AB         	call	__i2c_stop	;wreg free
  9824  014790  0012               	return		;funcret
  9825  014792                     __end_of_i2c_display_write_fixed:
  9826                           	opt stack 0
  9827                           tblptru	equ	0xFF8
  9828                           tblptrh	equ	0xFF7
  9829                           tblptrl	equ	0xFF6
  9830                           tablat	equ	0xFF5
  9831                           prodh	equ	0xFF4
  9832                           prodl	equ	0xFF3
  9833                           postinc0	equ	0xFEE
  9834                           wreg	equ	0xFE8
  9835                           postdec1	equ	0xFE5
  9836                           fsr1h	equ	0xFE2
  9837                           fsr1l	equ	0xFE1
  9838                           indf2	equ	0xFDF
  9839                           postinc2	equ	0xFDE
  9840                           fsr2h	equ	0xFDA
  9841                           fsr2l	equ	0xFD9
  9842                           status	equ	0xFD8
  9843                           
  9844 ;; *************** function _i2c_display_cursor *****************
  9845 ;; Defined at:
  9846 ;;		line 379 in file "i2c.c"
  9847 ;; Parameters:    Size  Location     Type
  9848 ;;  line            1    wreg     unsigned char 
  9849 ;;  position        1   13[BANK0 ] unsigned char 
  9850 ;; Auto vars:     Size  Location     Type
  9851 ;;  line            1   14[BANK0 ] unsigned char 
  9852 ;;  address         1   15[BANK0 ] unsigned char 
  9853 ;; Return value:  Size  Location     Type
  9854 ;;                  1    wreg      void 
  9855 ;; Registers used:
  9856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9857 ;; Tracked objects:
  9858 ;;		On entry : 0/0
  9859 ;;		On exit  : 0/0
  9860 ;;		Unchanged: 0/0
  9861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9862 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9863 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9865 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9866 ;;Total ram usage:        3 bytes
  9867 ;; Hardware stack levels used:    1
  9868 ;; Hardware stack levels required when called:   13
  9869 ;; This function calls:
  9870 ;;		__ic2_display_set_ddram_address
  9871 ;; This function is called by:
  9872 ;;		_display_update
  9873 ;; This function uses a non-reentrant model
  9874 ;;
  9875                           
  9876                           	psect	text23
  9877  01544A                     __ptext23:
  9878                           	opt stack 0
  9879  01544A                     _i2c_display_cursor:
  9880                           	opt stack 15
  9881                           
  9882                           ;incstack = 0
  9883                           ;i2c_display_cursor@line stored from wreg
  9884  01544A  0100               	movlb	0	; () banked
  9885  01544C  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
  9886                           
  9887                           ;i2c.c: 381: uint8_t address;;i2c.c: 384: line &= 0b11;
  9888  01544E  0E03               	movlw	3
  9889  015450  0100               	movlb	0	; () banked
  9890  015452  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
  9891                           
  9892                           ;i2c.c: 385: address = line<<5;
  9893  015454  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
  9894  015456  46E8               	rlncf	wreg,f,c
  9895  015458  0BE0               	andlw	224
  9896  01545A  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
  9897                           
  9898                           ;i2c.c: 386: position &= 0b11111;
  9899  01545C  0E1F               	movlw	31
  9900  01545E  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
  9901                           
  9902                           ;i2c.c: 387: address |= position;
  9903  015460  516D               	movf	i2c_display_cursor@position& (0+255),w,b
  9904  015462  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;i2c.c: 393: _ic2_display_set_ddram_address(address);
  9908  015464  516F               	movf	i2c_display_cursor@address& (0+255),w,b
  9909  015466  EC01  F0AA         	call	__ic2_display_set_ddram_address
  9910  01546A  0012               	return		;funcret
  9911  01546C                     __end_of_i2c_display_cursor:
  9912                           	opt stack 0
  9913                           tblptru	equ	0xFF8
  9914                           tblptrh	equ	0xFF7
  9915                           tblptrl	equ	0xFF6
  9916                           tablat	equ	0xFF5
  9917                           prodh	equ	0xFF4
  9918                           prodl	equ	0xFF3
  9919                           postinc0	equ	0xFEE
  9920                           wreg	equ	0xFE8
  9921                           postdec1	equ	0xFE5
  9922                           fsr1h	equ	0xFE2
  9923                           fsr1l	equ	0xFE1
  9924                           indf2	equ	0xFDF
  9925                           postinc2	equ	0xFDE
  9926                           fsr2h	equ	0xFDA
  9927                           fsr2l	equ	0xFD9
  9928                           status	equ	0xFD8
  9929                           
  9930 ;; *************** function __ic2_display_set_ddram_address *****************
  9931 ;; Defined at:
  9932 ;;		line 350 in file "i2c.c"
  9933 ;; Parameters:    Size  Location     Type
  9934 ;;  address         1    wreg     unsigned char 
  9935 ;; Auto vars:     Size  Location     Type
  9936 ;;  address         1   10[BANK0 ] unsigned char 
  9937 ;;  data_array      2   11[BANK0 ] unsigned char [2]
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1    wreg      void 
  9940 ;; Registers used:
  9941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9948 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9950 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9951 ;;Total ram usage:        3 bytes
  9952 ;; Hardware stack levels used:    1
  9953 ;; Hardware stack levels required when called:   12
  9954 ;; This function calls:
  9955 ;;		__i2c_write
  9956 ;; This function is called by:
  9957 ;;		_i2c_display_cursor
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           	psect	text24
  9962  015402                     __ptext24:
  9963                           	opt stack 0
  9964  015402                     __ic2_display_set_ddram_address:
  9965                           	opt stack 15
  9966                           
  9967                           ;incstack = 0
  9968                           ;__ic2_display_set_ddram_address@address stored from wreg
  9969  015402  0100               	movlb	0	; () banked
  9970  015404  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
  9971                           
  9972                           ;i2c.c: 352: uint8_t data_array[2];;i2c.c: 353: data_array[0] = 0b00000000;
  9973  015406  0E00               	movlw	0
  9974  015408  0100               	movlb	0	; () banked
  9975  01540A  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
  9976                           
  9977                           ; BSR set to: 0
  9978                           ;i2c.c: 354: data_array[1] = 0b10000000 | address;
  9979  01540C  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
  9980  01540E  0980               	iorlw	128
  9981  015410  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
  9982                           
  9983                           ; BSR set to: 0
  9984                           ;i2c.c: 360: _i2c_write(0b01111000, &data_array[0], 2);
  9985  015412  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
  9986  015414  6F65               	movwf	__i2c_write@data& (0+255),b
  9987  015416  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
  9988  015418  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  9989  01541A  0E02               	movlw	2
  9990  01541C  6F67               	movwf	__i2c_write@length& (0+255),b
  9991  01541E  0E78               	movlw	120
  9992  015420  ECC0  F0A4         	call	__i2c_write
  9993  015424  0012               	return		;funcret
  9994  015426                     __end_of__ic2_display_set_ddram_address:
  9995                           	opt stack 0
  9996                           tblptru	equ	0xFF8
  9997                           tblptrh	equ	0xFF7
  9998                           tblptrl	equ	0xFF6
  9999                           tablat	equ	0xFF5
 10000                           prodh	equ	0xFF4
 10001                           prodl	equ	0xFF3
 10002                           postinc0	equ	0xFEE
 10003                           wreg	equ	0xFE8
 10004                           postdec1	equ	0xFE5
 10005                           fsr1h	equ	0xFE2
 10006                           fsr1l	equ	0xFE1
 10007                           indf2	equ	0xFDF
 10008                           postinc2	equ	0xFDE
 10009                           fsr2h	equ	0xFDA
 10010                           fsr2l	equ	0xFD9
 10011                           status	equ	0xFD8
 10012                           
 10013 ;; *************** function _display_init *****************
 10014 ;; Defined at:
 10015 ;;		line 256 in file "display.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;		None
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;		None
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  1    wreg      void 
 10022 ;; Registers used:
 10023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10033 ;;Total ram usage:        0 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; Hardware stack levels required when called:   15
 10036 ;; This function calls:
 10037 ;;		__display_start
 10038 ;;		_i2c_display_init
 10039 ;;		_i2c_display_program_custom_character
 10040 ;; This function is called by:
 10041 ;;		_system_init
 10042 ;; This function uses a non-reentrant model
 10043 ;;
 10044                           
 10045                           	psect	text25
 10046  014E80                     __ptext25:
 10047                           	opt stack 0
 10048  014E80                     _display_init:
 10049                           	opt stack 14
 10050                           
 10051                           ;display.c: 258: i2c_display_init();
 10052                           
 10053                           ;incstack = 0
 10054  014E80  EC98  F0A4         	call	_i2c_display_init	;wreg free
 10055                           
 10056                           ;display.c: 259: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 10057  014E84  0ED5               	movlw	low _bit_pattern_verticalbar
 10058  014E86  0100               	movlb	0	; () banked
 10059  014E88  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10060  014E8A  0EA2               	movlw	high _bit_pattern_verticalbar
 10061  014E8C  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10062  014E8E  0E00               	movlw	0
 10063  014E90  ECC1  F09C         	call	_i2c_display_program_custom_character
 10064                           
 10065                           ;display.c: 260: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 10066  014E94  0ECD               	movlw	low _bit_pattern_degree
 10067  014E96  0100               	movlb	0	; () banked
 10068  014E98  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10069  014E9A  0EA2               	movlw	high _bit_pattern_degree
 10070  014E9C  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10071  014E9E  0E01               	movlw	1
 10072  014EA0  ECC1  F09C         	call	_i2c_display_program_custom_character
 10073                           
 10074                           ;display.c: 261: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 10075  014EA4  0EC5               	movlw	low _bit_pattern_ae
 10076  014EA6  0100               	movlb	0	; () banked
 10077  014EA8  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10078  014EAA  0EA2               	movlw	high _bit_pattern_ae
 10079  014EAC  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10080  014EAE  0E02               	movlw	2
 10081  014EB0  ECC1  F09C         	call	_i2c_display_program_custom_character
 10082                           
 10083                           ;display.c: 263: _display_start();
 10084  014EB4  EC9E  F095         	call	__display_start	;wreg free
 10085  014EB8  0012               	return		;funcret
 10086  014EBA                     __end_of_display_init:
 10087                           	opt stack 0
 10088                           tblptru	equ	0xFF8
 10089                           tblptrh	equ	0xFF7
 10090                           tblptrl	equ	0xFF6
 10091                           tablat	equ	0xFF5
 10092                           prodh	equ	0xFF4
 10093                           prodl	equ	0xFF3
 10094                           postinc0	equ	0xFEE
 10095                           wreg	equ	0xFE8
 10096                           postdec1	equ	0xFE5
 10097                           fsr1h	equ	0xFE2
 10098                           fsr1l	equ	0xFE1
 10099                           indf2	equ	0xFDF
 10100                           postinc2	equ	0xFDE
 10101                           fsr2h	equ	0xFDA
 10102                           fsr2l	equ	0xFD9
 10103                           status	equ	0xFD8
 10104                           
 10105 ;; *************** function _i2c_display_program_custom_character *****************
 10106 ;; Defined at:
 10107 ;;		line 444 in file "i2c.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  address         1    wreg     unsigned char 
 10110 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 10111 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;  address         1   31[BANK0 ] unsigned char 
 10114 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 10115 ;;  cntr            1   32[BANK0 ] unsigned char 
 10116 ;; Return value:  Size  Location     Type
 10117 ;;                  1    wreg      void 
 10118 ;; Registers used:
 10119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10120 ;; Tracked objects:
 10121 ;;		On entry : 0/0
 10122 ;;		On exit  : 0/0
 10123 ;;		Unchanged: 0/0
 10124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10125 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10126 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10127 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10128 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10129 ;;Total ram usage:       19 bytes
 10130 ;; Hardware stack levels used:    1
 10131 ;; Hardware stack levels required when called:   13
 10132 ;; This function calls:
 10133 ;;		__i2c_write
 10134 ;;		__ic2_display_set_cgram_address
 10135 ;; This function is called by:
 10136 ;;		_display_init
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           
 10140                           	psect	text26
 10141  013982                     __ptext26:
 10142                           	opt stack 0
 10143  013982                     _i2c_display_program_custom_character:
 10144                           	opt stack 15
 10145                           
 10146                           ;incstack = 0
 10147                           ;i2c_display_program_custom_character@address stored from wreg
 10148  013982  0100               	movlb	0	; () banked
 10149  013984  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 10150                           
 10151                           ;i2c.c: 446: uint8_t cntr;;i2c.c: 447: uint8_t data_array[11];;i2c.c: 450: _ic2_display_
      +                          set_cgram_address(address<<3);
 10152  013986  0100               	movlb	0	; () banked
 10153  013988  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 10154  01398A  42E8               	rrncf	wreg,f,c
 10155  01398C  0BF8               	andlw	248
 10156  01398E  EC3A  F0A9         	call	__ic2_display_set_cgram_address
 10157                           
 10158                           ;i2c.c: 453: data_array[0] = 0b01000000;
 10159  013992  0E40               	movlw	64
 10160  013994  0100               	movlb	0	; () banked
 10161  013996  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 10162                           
 10163                           ; BSR set to: 0
 10164                           ;i2c.c: 454: for(cntr=0; cntr<8; ++cntr)
 10165  013998  0E00               	movlw	0
 10166  01399A  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 10167  01399C                     l15258:
 10168                           
 10169                           ; BSR set to: 0
 10170  01399C  0E07               	movlw	7
 10171  01399E  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 10172  0139A0  D001               	goto	l1249
 10173  0139A2  D023               	goto	u14160
 10174  0139A4                     l1249:
 10175                           
 10176                           ; BSR set to: 0
 10177                           ;i2c.c: 455: {;i2c.c: 456: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 10178                           
 10179                           ; BSR set to: 0
 10180  0139A4  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10181  0139A6  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 10182  0139A8  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 10183  0139AA  0E01               	movlw	1
 10184  0139AC  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 10185  0139AE  0E00               	movlw	0
 10186  0139B0  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 10187  0139B2  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10188  0139B4  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 10189  0139B6  6ED9               	movwf	fsr2l,c
 10190  0139B8  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10191  0139BA  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 10192  0139BC  6EDA               	movwf	fsr2h,c
 10193  0139BE  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10194  0139C0  0D01               	mullw	1
 10195  0139C2  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 10196  0139C6  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 10197  0139CA  50F3               	movf	prodl,w,c
 10198  0139CC  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 10199  0139CE  50F4               	movf	prodh,w,c
 10200  0139D0  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 10201  0139D2  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 10202  0139D6  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 10203  0139DA                     	if	0	;tblptru may be non-zero
 10204  0139DA                     	endif
 10205  0139DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10206  0139DA  0E00               	movlw	low (__mediumconst shr (0+16))
 10207  0139DC  6EF8               	movwf	tblptru,c
 10208  0139DE                     	endif
 10209  0139DE  0008               	tblrd		*
 10210  0139E0  50F5               	movf	tablat,w,c
 10211  0139E2  0B1F               	andlw	31
 10212  0139E4  6EDF               	movwf	indf2,c
 10213                           
 10214                           ; BSR set to: 0
 10215  0139E6  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 10216  0139E8  D7D9               	goto	l15258
 10217  0139EA                     u14160:
 10218                           
 10219                           ; BSR set to: 0
 10220                           ;i2c.c: 457: };i2c.c: 458: _i2c_write(0b01111000, data_array, 9);
 10221                           
 10222                           ; BSR set to: 0
 10223  0139EA  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10224  0139EC  6F65               	movwf	__i2c_write@data& (0+255),b
 10225  0139EE  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10226  0139F0  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10227  0139F2  0E09               	movlw	9
 10228  0139F4  6F67               	movwf	__i2c_write@length& (0+255),b
 10229  0139F6  0E78               	movlw	120
 10230  0139F8  ECC0  F0A4         	call	__i2c_write
 10231  0139FC  0012               	return		;funcret
 10232  0139FE                     __end_of_i2c_display_program_custom_character:
 10233                           	opt stack 0
 10234                           tblptru	equ	0xFF8
 10235                           tblptrh	equ	0xFF7
 10236                           tblptrl	equ	0xFF6
 10237                           tablat	equ	0xFF5
 10238                           prodh	equ	0xFF4
 10239                           prodl	equ	0xFF3
 10240                           postinc0	equ	0xFEE
 10241                           wreg	equ	0xFE8
 10242                           postdec1	equ	0xFE5
 10243                           fsr1h	equ	0xFE2
 10244                           fsr1l	equ	0xFE1
 10245                           indf2	equ	0xFDF
 10246                           postinc2	equ	0xFDE
 10247                           fsr2h	equ	0xFDA
 10248                           fsr2l	equ	0xFD9
 10249                           status	equ	0xFD8
 10250                           
 10251 ;; *************** function __ic2_display_set_cgram_address *****************
 10252 ;; Defined at:
 10253 ;;		line 363 in file "i2c.c"
 10254 ;; Parameters:    Size  Location     Type
 10255 ;;  address         1    wreg     unsigned char 
 10256 ;; Auto vars:     Size  Location     Type
 10257 ;;  address         1   13[BANK0 ] unsigned char 
 10258 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 10259 ;; Return value:  Size  Location     Type
 10260 ;;                  1    wreg      void 
 10261 ;; Registers used:
 10262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10263 ;; Tracked objects:
 10264 ;;		On entry : 0/0
 10265 ;;		On exit  : 0/0
 10266 ;;		Unchanged: 0/0
 10267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10269 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10271 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10272 ;;Total ram usage:        4 bytes
 10273 ;; Hardware stack levels used:    1
 10274 ;; Hardware stack levels required when called:   12
 10275 ;; This function calls:
 10276 ;;		__i2c_write
 10277 ;; This function is called by:
 10278 ;;		_i2c_display_program_custom_character
 10279 ;; This function uses a non-reentrant model
 10280 ;;
 10281                           
 10282                           	psect	text27
 10283  015274                     __ptext27:
 10284                           	opt stack 0
 10285  015274                     __ic2_display_set_cgram_address:
 10286                           	opt stack 15
 10287                           
 10288                           ;incstack = 0
 10289                           ;__ic2_display_set_cgram_address@address stored from wreg
 10290  015274  0100               	movlb	0	; () banked
 10291  015276  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 10292                           
 10293                           ;i2c.c: 365: uint8_t data_array[3];;i2c.c: 370: address &= 0b001111111;
 10294  015278  0100               	movlb	0	; () banked
 10295  01527A  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 10296                           
 10297                           ; BSR set to: 0
 10298                           ;i2c.c: 371: data_array[0] = 0b00000000;
 10299  01527C  0E00               	movlw	0
 10300  01527E  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 10301                           
 10302                           ; BSR set to: 0
 10303                           ;i2c.c: 372: data_array[1] = 0b00111000;
 10304  015280  0E38               	movlw	56
 10305  015282  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 10306                           
 10307                           ;i2c.c: 373: data_array[2] = 0b01000000 | address;
 10308  015284  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 10309  015286  0940               	iorlw	64
 10310  015288  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 10311                           
 10312                           ; BSR set to: 0
 10313                           ;i2c.c: 376: _i2c_write(0b01111000, data_array, 3);
 10314  01528A  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 10315  01528C  6F65               	movwf	__i2c_write@data& (0+255),b
 10316  01528E  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 10317  015290  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10318  015292  0E03               	movlw	3
 10319  015294  6F67               	movwf	__i2c_write@length& (0+255),b
 10320  015296  0E78               	movlw	120
 10321  015298  ECC0  F0A4         	call	__i2c_write
 10322  01529C  0012               	return		;funcret
 10323  01529E                     __end_of__ic2_display_set_cgram_address:
 10324                           	opt stack 0
 10325                           tblptru	equ	0xFF8
 10326                           tblptrh	equ	0xFF7
 10327                           tblptrl	equ	0xFF6
 10328                           tablat	equ	0xFF5
 10329                           prodh	equ	0xFF4
 10330                           prodl	equ	0xFF3
 10331                           postinc0	equ	0xFEE
 10332                           wreg	equ	0xFE8
 10333                           postdec1	equ	0xFE5
 10334                           fsr1h	equ	0xFE2
 10335                           fsr1l	equ	0xFE1
 10336                           indf2	equ	0xFDF
 10337                           postinc2	equ	0xFDE
 10338                           fsr2h	equ	0xFDA
 10339                           fsr2l	equ	0xFD9
 10340                           status	equ	0xFD8
 10341                           
 10342 ;; *************** function _i2c_display_init *****************
 10343 ;; Defined at:
 10344 ;;		line 321 in file "i2c.c"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;		None
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 10349 ;; Return value:  Size  Location     Type
 10350 ;;                  1    wreg      void 
 10351 ;; Registers used:
 10352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10353 ;; Tracked objects:
 10354 ;;		On entry : 0/0
 10355 ;;		On exit  : 0/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10359 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10361 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10362 ;;Total ram usage:       10 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; Hardware stack levels required when called:   12
 10365 ;; This function calls:
 10366 ;;		__i2c_write
 10367 ;; This function is called by:
 10368 ;;		_display_init
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           	psect	text28
 10373  014930                     __ptext28:
 10374                           	opt stack 0
 10375  014930                     _i2c_display_init:
 10376                           	opt stack 16
 10377                           
 10378                           ;i2c.c: 323: uint8_t init_sequence[9] = {;i2c.c: 324: 0x3A,;i2c.c: 326: 0b00011110,;i2c.
      +                          c: 327: 0x39,;i2c.c: 329: 0b00001100,;i2c.c: 330: 0x74,;i2c.c: 331: 0b1011100,;i2c.c: 33
      +                          2: 0x6d,;i2c.c: 333: 0x0c,;i2c.c: 334: 0x01;i2c.c: 335: };
 10379                           
 10380                           ;incstack = 0
 10381  014930  EE22  F0A6         	lfsr	2,i2c_display_init@F6951
 10382  014934  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 10383  014938  0E08               	movlw	8
 10384  01493A                     u14131:
 10385  01493A  CFDB FFE3          	movff	plusw2,plusw1
 10386  01493E  06E8               	decf	wreg,f,c
 10387  014940  E2FC               	bc	u14131
 10388                           
 10389                           ;i2c.c: 338: LATAbits.LA3 = 0;
 10390  014942  9689               	bcf	3977,3,c	;volatile
 10391                           
 10392                           ;i2c.c: 339: _delay((unsigned long)((10)*(8000000/4000.0)));
 10393  014944  0E1A               	movlw	26
 10394  014946  0100               	movlb	0	; () banked
 10395  014948  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10396  01494A  0EF8               	movlw	248
 10397  01494C                     u19157:
 10398  01494C  2EE8               	decfsz	wreg,f,c
 10399  01494E  D7FE               	bra	u19157
 10400  014950  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10401  014952  D7FC               	bra	u19157
 10402  014954  F000               	nop	
 10403                           
 10404                           ;i2c.c: 340: LATAbits.LA3 = 1;
 10405  014956  8689               	bsf	3977,3,c	;volatile
 10406                           
 10407                           ;i2c.c: 341: _delay((unsigned long)((50)*(8000000/4000.0)));
 10408  014958  0E82               	movlw	130
 10409  01495A  0100               	movlb	0	; () banked
 10410  01495C  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10411  01495E  0EDD               	movlw	221
 10412  014960                     u19167:
 10413  014960  2EE8               	decfsz	wreg,f,c
 10414  014962  D7FE               	bra	u19167
 10415  014964  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10416  014966  D7FC               	bra	u19167
 10417  014968  D000               	nop2	
 10418                           
 10419                           ;i2c.c: 347: _i2c_write(0b01111000, &init_sequence[0], 9);
 10420  01496A  0E6B               	movlw	low i2c_display_init@init_sequence
 10421  01496C  0100               	movlb	0	; () banked
 10422  01496E  6F65               	movwf	__i2c_write@data& (0+255),b
 10423  014970  0E00               	movlw	high i2c_display_init@init_sequence
 10424  014972  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10425  014974  0E09               	movlw	9
 10426  014976  6F67               	movwf	__i2c_write@length& (0+255),b
 10427  014978  0E78               	movlw	120
 10428  01497A  ECC0  F0A4         	call	__i2c_write
 10429  01497E  0012               	return		;funcret
 10430  014980                     __end_of_i2c_display_init:
 10431                           	opt stack 0
 10432                           tblptru	equ	0xFF8
 10433                           tblptrh	equ	0xFF7
 10434                           tblptrl	equ	0xFF6
 10435                           tablat	equ	0xFF5
 10436                           prodh	equ	0xFF4
 10437                           prodl	equ	0xFF3
 10438                           postinc0	equ	0xFEE
 10439                           wreg	equ	0xFE8
 10440                           postdec1	equ	0xFE5
 10441                           plusw1	equ	0xFE3
 10442                           fsr1h	equ	0xFE2
 10443                           fsr1l	equ	0xFE1
 10444                           indf2	equ	0xFDF
 10445                           postinc2	equ	0xFDE
 10446                           plusw2	equ	0xFDB
 10447                           fsr2h	equ	0xFDA
 10448                           fsr2l	equ	0xFD9
 10449                           status	equ	0xFD8
 10450                           
 10451 ;; *************** function __i2c_write *****************
 10452 ;; Defined at:
 10453 ;;		line 84 in file "i2c.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;  slave_addres    1    wreg     unsigned char 
 10456 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10457 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 10458 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 10459 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 10460 ;;  length          1    7[BANK0 ] unsigned char 
 10461 ;; Auto vars:     Size  Location     Type
 10462 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 10463 ;;  cntr            1    9[BANK0 ] unsigned char 
 10464 ;; Return value:  Size  Location     Type
 10465 ;;                  1    wreg      void 
 10466 ;; Registers used:
 10467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10468 ;; Tracked objects:
 10469 ;;		On entry : 0/0
 10470 ;;		On exit  : 0/0
 10471 ;;		Unchanged: 0/0
 10472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10473 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10474 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10477 ;;Total ram usage:        5 bytes
 10478 ;; Hardware stack levels used:    1
 10479 ;; Hardware stack levels required when called:   11
 10480 ;; This function calls:
 10481 ;;		__i2c_send
 10482 ;;		__i2c_start
 10483 ;;		__i2c_stop
 10484 ;;		__i2c_wait_idle
 10485 ;; This function is called by:
 10486 ;;		_i2c_eeprom_read
 10487 ;;		_i2c_display_init
 10488 ;;		__ic2_display_set_ddram_address
 10489 ;;		__ic2_display_set_cgram_address
 10490 ;;		_i2c_display_program_custom_character
 10491 ;;		_i2c_adc_start
 10492 ;;		_i2c_eeprom_writeByte
 10493 ;;		_i2c_eeprom_readByte
 10494 ;;		__i2c_display_send_init_sequence
 10495 ;; This function uses a non-reentrant model
 10496 ;;
 10497                           
 10498                           	psect	text29
 10499  014980                     __ptext29:
 10500                           	opt stack 0
 10501  014980                     __i2c_write:
 10502                           	opt stack 16
 10503                           
 10504                           ;incstack = 0
 10505                           ;__i2c_write@slave_address stored from wreg
 10506  014980  0100               	movlb	0	; () banked
 10507  014982  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 10508                           
 10509                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 10510  014984  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
 10511                           
 10512                           ;i2c.c: 89: _i2c_start();
 10513  014988  EC5A  F0AB         	call	__i2c_start	;wreg free
 10514                           
 10515                           ;i2c.c: 90: _i2c_wait_idle();
 10516  01498C  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
 10517                           
 10518                           ;i2c.c: 91: _i2c_send(slave_address);
 10519  014990  0100               	movlb	0	; () banked
 10520  014992  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 10521  014994  EC47  F0AB         	call	__i2c_send
 10522                           
 10523                           ;i2c.c: 92: _i2c_wait_idle();
 10524  014998  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
 10525                           
 10526                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 10527  01499C  0E00               	movlw	0
 10528  01499E  0100               	movlb	0	; () banked
 10529  0149A0  6F69               	movwf	__i2c_write@cntr& (0+255),b
 10530  0149A2  D00F               	goto	l1158
 10531  0149A4                     
 10532                           ; BSR set to: 0
 10533                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 10534                           
 10535                           ; BSR set to: 0
 10536  0149A4  5169               	movf	__i2c_write@cntr& (0+255),w,b
 10537  0149A6  0D01               	mullw	1
 10538  0149A8  50F3               	movf	prodl,w,c
 10539  0149AA  2565               	addwf	__i2c_write@data& (0+255),w,b
 10540  0149AC  6ED9               	movwf	fsr2l,c
 10541  0149AE  50F4               	movf	prodh,w,c
 10542  0149B0  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 10543  0149B2  6EDA               	movwf	fsr2h,c
 10544  0149B4  50DF               	movf	indf2,w,c
 10545  0149B6  EC47  F0AB         	call	__i2c_send
 10546                           
 10547                           ;i2c.c: 97: _i2c_wait_idle();
 10548  0149BA  ECA7  F09F         	call	__i2c_wait_idle	;wreg free
 10549  0149BE  0100               	movlb	0	; () banked
 10550  0149C0  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 10551  0149C2                     l1158:
 10552                           
 10553                           ; BSR set to: 0
 10554                           
 10555                           ; BSR set to: 0
 10556  0149C2  5167               	movf	__i2c_write@length& (0+255),w,b
 10557  0149C4  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 10558  0149C6  A0D8               	btfss	status,0,c
 10559  0149C8  D7ED               	goto	l1159
 10560                           
 10561                           ; BSR set to: 0
 10562                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 10563                           
 10564                           ; BSR set to: 0
 10565  0149CA  EC56  F0AB         	call	__i2c_stop	;wreg free
 10566  0149CE  0012               	return		;funcret
 10567  0149D0                     __end_of__i2c_write:
 10568                           	opt stack 0
 10569                           tblptru	equ	0xFF8
 10570                           tblptrh	equ	0xFF7
 10571                           tblptrl	equ	0xFF6
 10572                           tablat	equ	0xFF5
 10573                           prodh	equ	0xFF4
 10574                           prodl	equ	0xFF3
 10575                           postinc0	equ	0xFEE
 10576                           wreg	equ	0xFE8
 10577                           postdec1	equ	0xFE5
 10578                           plusw1	equ	0xFE3
 10579                           fsr1h	equ	0xFE2
 10580                           fsr1l	equ	0xFE1
 10581                           indf2	equ	0xFDF
 10582                           postinc2	equ	0xFDE
 10583                           plusw2	equ	0xFDB
 10584                           fsr2h	equ	0xFDA
 10585                           fsr2l	equ	0xFD9
 10586                           status	equ	0xFD8
 10587                           
 10588 ;; *************** function __i2c_wait_idle *****************
 10589 ;; Defined at:
 10590 ;;		line 40 in file "i2c.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;		None
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;		None
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  1    wreg      void 
 10597 ;; Registers used:
 10598 ;;		wreg, status,2, status,0
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10606 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10607 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10608 ;;Total ram usage:        5 bytes
 10609 ;; Hardware stack levels used:    1
 10610 ;; Hardware stack levels required when called:   10
 10611 ;; This function calls:
 10612 ;;		Nothing
 10613 ;; This function is called by:
 10614 ;;		__i2c_write
 10615 ;;		__i2c_read
 10616 ;;		__i2c_eeprom_busy
 10617 ;;		_i2c_display_write_fixed
 10618 ;;		_i2c_adc_read
 10619 ;;		_i2c_display_write
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623                           	psect	text30
 10624  013F4E                     __ptext30:
 10625                           	opt stack 0
 10626  013F4E                     __i2c_wait_idle:
 10627                           	opt stack 16
 10628                           
 10629                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 10630                           
 10631                           ;incstack = 0
 10632  013F4E  A4C7               	btfss	4039,2,c	;volatile
 10633  013F50  D004               	goto	u11520
 10634  013F52  0100               	movlb	0	; () banked
 10635  013F54  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 10636  013F56  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 10637  013F58  D002               	goto	u11528
 10638  013F5A                     u11520:
 10639  013F5A  0100               	movlb	0	; () banked
 10640  013F5C  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 10641  013F5E                     u11528:
 10642  013F5E  A0C5               	btfss	4037,0,c	;volatile
 10643  013F60  D003               	goto	u11530
 10644  013F62  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 10645  013F64  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 10646  013F66  D002               	goto	u11538
 10647  013F68                     u11530:
 10648  013F68  0100               	movlb	0	; () banked
 10649  013F6A  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 10650  013F6C                     u11538:
 10651  013F6C  A2C5               	btfss	4037,1,c	;volatile
 10652  013F6E  D003               	goto	u11540
 10653  013F70  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 10654  013F72  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 10655  013F74  D002               	goto	u11548
 10656  013F76                     u11540:
 10657  013F76  0100               	movlb	0	; () banked
 10658  013F78  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 10659  013F7A                     u11548:
 10660  013F7A  A4C5               	btfss	4037,2,c	;volatile
 10661  013F7C  D003               	goto	u11550
 10662  013F7E  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 10663  013F80  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 10664  013F82  D002               	goto	u11558
 10665  013F84                     u11550:
 10666  013F84  0100               	movlb	0	; () banked
 10667  013F86  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 10668  013F88                     u11558:
 10669  013F88  A6C5               	btfss	4037,3,c	;volatile
 10670  013F8A  D003               	goto	u11560
 10671  013F8C  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 10672  013F8E  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 10673  013F90  D002               	goto	u11568
 10674  013F92                     u11560:
 10675  013F92  0100               	movlb	0	; () banked
 10676  013F94  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 10677  013F96                     u11568:
 10678  013F96  A8C5               	btfss	4037,4,c	;volatile
 10679  013F98  D002               	goto	u11570
 10680  013F9A  0E01               	movlw	1
 10681  013F9C  D001               	goto	u11576
 10682  013F9E                     u11570:
 10683  013F9E  0E00               	movlw	0
 10684  013FA0                     u11576:
 10685  013FA0  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 10686  013FA2  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 10687  013FA4  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 10688  013FA6  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 10689  013FA8  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 10690  013FAA  0900               	iorlw	0
 10691  013FAC  B4D8               	btfsc	status,2,c
 10692  013FAE  0012               	return	
 10693  013FB0  D7CE               	goto	__i2c_wait_idle
 10694  013FB2                     __end_of__i2c_wait_idle:
 10695                           	opt stack 0
 10696                           tblptru	equ	0xFF8
 10697                           tblptrh	equ	0xFF7
 10698                           tblptrl	equ	0xFF6
 10699                           tablat	equ	0xFF5
 10700                           prodh	equ	0xFF4
 10701                           prodl	equ	0xFF3
 10702                           postinc0	equ	0xFEE
 10703                           wreg	equ	0xFE8
 10704                           postdec1	equ	0xFE5
 10705                           plusw1	equ	0xFE3
 10706                           fsr1h	equ	0xFE2
 10707                           fsr1l	equ	0xFE1
 10708                           indf2	equ	0xFDF
 10709                           postinc2	equ	0xFDE
 10710                           plusw2	equ	0xFDB
 10711                           fsr2h	equ	0xFDA
 10712                           fsr2l	equ	0xFD9
 10713                           status	equ	0xFD8
 10714                           
 10715 ;; *************** function __i2c_stop *****************
 10716 ;; Defined at:
 10717 ;;		line 63 in file "i2c.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;		None
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;		None
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  1    wreg      void 
 10724 ;; Registers used:
 10725 ;;		None
 10726 ;; Tracked objects:
 10727 ;;		On entry : 0/0
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10735 ;;Total ram usage:        0 bytes
 10736 ;; Hardware stack levels used:    1
 10737 ;; Hardware stack levels required when called:   10
 10738 ;; This function calls:
 10739 ;;		Nothing
 10740 ;; This function is called by:
 10741 ;;		__i2c_write
 10742 ;;		__i2c_read
 10743 ;;		__i2c_eeprom_busy
 10744 ;;		_i2c_display_write_fixed
 10745 ;;		_i2c_adc_read
 10746 ;;		_i2c_display_write
 10747 ;; This function uses a non-reentrant model
 10748 ;;
 10749                           
 10750                           	psect	text31
 10751  0156AC                     __ptext31:
 10752                           	opt stack 0
 10753  0156AC                     __i2c_stop:
 10754                           	opt stack 16
 10755                           
 10756                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 10757                           
 10758                           ; BSR set to: 0
 10759                           ;incstack = 0
 10760  0156AC  84C5               	bsf	4037,2,c	;volatile
 10761  0156AE  A4C5               	btfss	4037,2,c	;volatile
 10762  0156B0  0012               	return	
 10763  0156B2  D7FD               	goto	l1141
 10764  0156B4                     __end_of__i2c_stop:
 10765                           	opt stack 0
 10766                           tblptru	equ	0xFF8
 10767                           tblptrh	equ	0xFF7
 10768                           tblptrl	equ	0xFF6
 10769                           tablat	equ	0xFF5
 10770                           prodh	equ	0xFF4
 10771                           prodl	equ	0xFF3
 10772                           postinc0	equ	0xFEE
 10773                           wreg	equ	0xFE8
 10774                           postdec1	equ	0xFE5
 10775                           plusw1	equ	0xFE3
 10776                           fsr1h	equ	0xFE2
 10777                           fsr1l	equ	0xFE1
 10778                           indf2	equ	0xFDF
 10779                           postinc2	equ	0xFDE
 10780                           plusw2	equ	0xFDB
 10781                           fsr2h	equ	0xFDA
 10782                           fsr2l	equ	0xFD9
 10783                           status	equ	0xFD8
 10784                           
 10785 ;; *************** function __i2c_start *****************
 10786 ;; Defined at:
 10787 ;;		line 45 in file "i2c.c"
 10788 ;; Parameters:    Size  Location     Type
 10789 ;;		None
 10790 ;; Auto vars:     Size  Location     Type
 10791 ;;		None
 10792 ;; Return value:  Size  Location     Type
 10793 ;;                  1    wreg      void 
 10794 ;; Registers used:
 10795 ;;		None
 10796 ;; Tracked objects:
 10797 ;;		On entry : 0/0
 10798 ;;		On exit  : 0/0
 10799 ;;		Unchanged: 0/0
 10800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10805 ;;Total ram usage:        0 bytes
 10806 ;; Hardware stack levels used:    1
 10807 ;; Hardware stack levels required when called:   10
 10808 ;; This function calls:
 10809 ;;		Nothing
 10810 ;; This function is called by:
 10811 ;;		__i2c_write
 10812 ;;		__i2c_read
 10813 ;;		__i2c_eeprom_busy
 10814 ;;		_i2c_display_write_fixed
 10815 ;;		_i2c_adc_read
 10816 ;;		_i2c_display_write
 10817 ;; This function uses a non-reentrant model
 10818 ;;
 10819                           
 10820                           	psect	text32
 10821  0156B4                     __ptext32:
 10822                           	opt stack 0
 10823  0156B4                     __i2c_start:
 10824                           	opt stack 16
 10825                           
 10826                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 10827                           
 10828                           ;incstack = 0
 10829  0156B4  80C5               	bsf	4037,0,c	;volatile
 10830  0156B6  A0C5               	btfss	4037,0,c	;volatile
 10831  0156B8  0012               	return	
 10832  0156BA  D7FD               	goto	l1126
 10833  0156BC                     __end_of__i2c_start:
 10834                           	opt stack 0
 10835                           tblptru	equ	0xFF8
 10836                           tblptrh	equ	0xFF7
 10837                           tblptrl	equ	0xFF6
 10838                           tablat	equ	0xFF5
 10839                           prodh	equ	0xFF4
 10840                           prodl	equ	0xFF3
 10841                           postinc0	equ	0xFEE
 10842                           wreg	equ	0xFE8
 10843                           postdec1	equ	0xFE5
 10844                           plusw1	equ	0xFE3
 10845                           fsr1h	equ	0xFE2
 10846                           fsr1l	equ	0xFE1
 10847                           indf2	equ	0xFDF
 10848                           postinc2	equ	0xFDE
 10849                           plusw2	equ	0xFDB
 10850                           fsr2h	equ	0xFDA
 10851                           fsr2l	equ	0xFD9
 10852                           status	equ	0xFD8
 10853                           
 10854 ;; *************** function __i2c_send *****************
 10855 ;; Defined at:
 10856 ;;		line 51 in file "i2c.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;  dat             1    wreg     unsigned char 
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;  dat             1    0[BANK0 ] unsigned char 
 10861 ;; Return value:  Size  Location     Type
 10862 ;;                  1    wreg      void 
 10863 ;; Registers used:
 10864 ;;		wreg
 10865 ;; Tracked objects:
 10866 ;;		On entry : 0/0
 10867 ;;		On exit  : 0/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10873 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10874 ;;Total ram usage:        1 bytes
 10875 ;; Hardware stack levels used:    1
 10876 ;; Hardware stack levels required when called:   10
 10877 ;; This function calls:
 10878 ;;		Nothing
 10879 ;; This function is called by:
 10880 ;;		__i2c_write
 10881 ;;		__i2c_read
 10882 ;;		__i2c_eeprom_busy
 10883 ;;		_i2c_display_write_fixed
 10884 ;;		_i2c_adc_read
 10885 ;;		_i2c_display_write
 10886 ;; This function uses a non-reentrant model
 10887 ;;
 10888                           
 10889                           	psect	text33
 10890  01568E                     __ptext33:
 10891                           	opt stack 0
 10892  01568E                     __i2c_send:
 10893                           	opt stack 16
 10894                           
 10895                           ;incstack = 0
 10896                           ;__i2c_send@dat stored from wreg
 10897  01568E  0100               	movlb	0	; () banked
 10898  015690  6F60               	movwf	__i2c_send@dat& (0+255),b
 10899                           
 10900                           ;i2c.c: 53: SSP1BUF = dat;
 10901  015692  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 10902  015696  0012               	return		;funcret
 10903  015698                     __end_of__i2c_send:
 10904                           	opt stack 0
 10905                           tblptru	equ	0xFF8
 10906                           tblptrh	equ	0xFF7
 10907                           tblptrl	equ	0xFF6
 10908                           tablat	equ	0xFF5
 10909                           prodh	equ	0xFF4
 10910                           prodl	equ	0xFF3
 10911                           postinc0	equ	0xFEE
 10912                           wreg	equ	0xFE8
 10913                           postdec1	equ	0xFE5
 10914                           plusw1	equ	0xFE3
 10915                           fsr1h	equ	0xFE2
 10916                           fsr1l	equ	0xFE1
 10917                           indf2	equ	0xFDF
 10918                           postinc2	equ	0xFDE
 10919                           plusw2	equ	0xFDB
 10920                           fsr2h	equ	0xFDA
 10921                           fsr2l	equ	0xFD9
 10922                           status	equ	0xFD8
 10923                           
 10924 ;; *************** function __display_start *****************
 10925 ;; Defined at:
 10926 ;;		line 266 in file "display.c"
 10927 ;; Parameters:    Size  Location     Type
 10928 ;;		None
 10929 ;; Auto vars:     Size  Location     Type
 10930 ;;  cntr            1   28[BANK0 ] unsigned char 
 10931 ;; Return value:  Size  Location     Type
 10932 ;;                  1    wreg      void 
 10933 ;; Registers used:
 10934 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10935 ;; Tracked objects:
 10936 ;;		On entry : 0/0
 10937 ;;		On exit  : 0/0
 10938 ;;		Unchanged: 0/0
 10939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10941 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10943 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10944 ;;Total ram usage:        1 bytes
 10945 ;; Hardware stack levels used:    1
 10946 ;; Hardware stack levels required when called:   14
 10947 ;; This function calls:
 10948 ;;		__display_itoa_u16
 10949 ;;		_memcpy
 10950 ;; This function is called by:
 10951 ;;		_display_init
 10952 ;; This function uses a non-reentrant model
 10953 ;;
 10954                           
 10955                           	psect	text34
 10956  012B3C                     __ptext34:
 10957                           	opt stack 0
 10958  012B3C                     __display_start:
 10959                           	opt stack 14
 10960                           
 10961                           ;display.c: 268: uint8_t cntr;;display.c: 269: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 10962                           
 10963                           ;incstack = 0
 10964  012B3C  0E34               	movlw	low _display_content
 10965  012B3E  0100               	movlb	0	; () banked
 10966  012B40  6F60               	movwf	memcpy@d1& (0+255),b
 10967  012B42  0E02               	movlw	high _display_content
 10968  012B44  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10969  012B46  0E00               	movlw	low _dc_startup
 10970  012B48  6F62               	movwf	memcpy@s1& (0+255),b
 10971  012B4A  0E04               	movlw	high _dc_startup
 10972  012B4C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10973  012B4E  0E00               	movlw	0
 10974  012B50  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10975  012B52  0E50               	movlw	80
 10976  012B54  6F64               	movwf	memcpy@n& (0+255),b
 10977  012B56  ECCF  F0A0         	call	_memcpy	;wreg free
 10978                           
 10979                           ;display.c: 270: cntr = 6;
 10980  012B5A  0E06               	movlw	6
 10981  012B5C  0100               	movlb	0	; () banked
 10982  012B5E  6F7C               	movwf	__display_start@cntr& (0+255),b
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;display.c: 271: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 10986  012B60  0E00               	movlw	0
 10987  012B62  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 10988  012B64  0E00               	movlw	0
 10989  012B66  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 10990  012B68  517C               	movf	__display_start@cntr& (0+255),w,b
 10991  012B6A  0D01               	mullw	1
 10992  012B6C  0E5C               	movlw	low (_display_content+40)
 10993  012B6E  24F3               	addwf	prodl,w,c
 10994  012B70  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 10995  012B72  0E02               	movlw	high (_display_content+40)
 10996  012B74  20F4               	addwfc	prodh,w,c
 10997  012B76  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 10998  012B78  EC44  F095         	call	__display_itoa_u16	;wreg free
 10999  012B7C  0100               	movlb	0	; () banked
 11000  012B7E  277C               	addwf	__display_start@cntr& (0+255),f,b
 11001                           
 11002                           ; BSR set to: 0
 11003                           ;display.c: 272: display_content[2][cntr++] = '.';
 11004  012B80  517C               	movf	__display_start@cntr& (0+255),w,b
 11005  012B82  0D01               	mullw	1
 11006  012B84  0E5C               	movlw	low (_display_content+40)
 11007  012B86  24F3               	addwf	prodl,w,c
 11008  012B88  6ED9               	movwf	fsr2l,c
 11009  012B8A  0E02               	movlw	high (_display_content+40)
 11010  012B8C  20F4               	addwfc	prodh,w,c
 11011  012B8E  6EDA               	movwf	fsr2h,c
 11012  012B90  0E2E               	movlw	46
 11013  012B92  6EDF               	movwf	indf2,c
 11014                           
 11015                           ; BSR set to: 0
 11016  012B94  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11017                           
 11018                           ; BSR set to: 0
 11019                           ;display.c: 273: cntr += _display_itoa_u16(0x05, &display_content[2][cntr]);
 11020  012B96  0E00               	movlw	0
 11021  012B98  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11022  012B9A  0E05               	movlw	5
 11023  012B9C  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11024  012B9E  517C               	movf	__display_start@cntr& (0+255),w,b
 11025  012BA0  0D01               	mullw	1
 11026  012BA2  0E5C               	movlw	low (_display_content+40)
 11027  012BA4  24F3               	addwf	prodl,w,c
 11028  012BA6  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11029  012BA8  0E02               	movlw	high (_display_content+40)
 11030  012BAA  20F4               	addwfc	prodh,w,c
 11031  012BAC  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11032  012BAE  EC44  F095         	call	__display_itoa_u16	;wreg free
 11033  012BB2  0100               	movlb	0	; () banked
 11034  012BB4  277C               	addwf	__display_start@cntr& (0+255),f,b
 11035                           
 11036                           ; BSR set to: 0
 11037                           ;display.c: 274: display_content[2][cntr++] = '.';
 11038  012BB6  517C               	movf	__display_start@cntr& (0+255),w,b
 11039  012BB8  0D01               	mullw	1
 11040  012BBA  0E5C               	movlw	low (_display_content+40)
 11041  012BBC  24F3               	addwf	prodl,w,c
 11042  012BBE  6ED9               	movwf	fsr2l,c
 11043  012BC0  0E02               	movlw	high (_display_content+40)
 11044  012BC2  20F4               	addwfc	prodh,w,c
 11045  012BC4  6EDA               	movwf	fsr2h,c
 11046  012BC6  0E2E               	movlw	46
 11047  012BC8  6EDF               	movwf	indf2,c
 11048                           
 11049                           ; BSR set to: 0
 11050  012BCA  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11051                           
 11052                           ; BSR set to: 0
 11053                           ;display.c: 275: cntr += _display_itoa_u16(0x06, &display_content[2][cntr]);
 11054  012BCC  0E00               	movlw	0
 11055  012BCE  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11056  012BD0  0E06               	movlw	6
 11057  012BD2  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11058  012BD4  517C               	movf	__display_start@cntr& (0+255),w,b
 11059  012BD6  0D01               	mullw	1
 11060  012BD8  0E5C               	movlw	low (_display_content+40)
 11061  012BDA  24F3               	addwf	prodl,w,c
 11062  012BDC  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11063  012BDE  0E02               	movlw	high (_display_content+40)
 11064  012BE0  20F4               	addwfc	prodh,w,c
 11065  012BE2  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11066  012BE4  EC44  F095         	call	__display_itoa_u16	;wreg free
 11067  012BE8  0100               	movlb	0	; () banked
 11068  012BEA  277C               	addwf	__display_start@cntr& (0+255),f,b
 11069                           
 11070                           ; BSR set to: 0
 11071  012BEC  0012               	return		;funcret
 11072  012BEE                     __end_of__display_start:
 11073                           	opt stack 0
 11074                           tblptru	equ	0xFF8
 11075                           tblptrh	equ	0xFF7
 11076                           tblptrl	equ	0xFF6
 11077                           tablat	equ	0xFF5
 11078                           prodh	equ	0xFF4
 11079                           prodl	equ	0xFF3
 11080                           postinc0	equ	0xFEE
 11081                           wreg	equ	0xFE8
 11082                           postdec1	equ	0xFE5
 11083                           plusw1	equ	0xFE3
 11084                           fsr1h	equ	0xFE2
 11085                           fsr1l	equ	0xFE1
 11086                           indf2	equ	0xFDF
 11087                           postinc2	equ	0xFDE
 11088                           plusw2	equ	0xFDB
 11089                           fsr2h	equ	0xFDA
 11090                           fsr2l	equ	0xFD9
 11091                           status	equ	0xFD8
 11092                           
 11093 ;; *************** function __display_itoa_u16 *****************
 11094 ;; Defined at:
 11095 ;;		line 226 in file "display.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;  value           2   24[BANK0 ] unsigned int 
 11098 ;;  text            2   26[BANK0 ] PTR unsigned char 
 11099 ;;		 -> display_content(80), 
 11100 ;; Auto vars:     Size  Location     Type
 11101 ;;		None
 11102 ;; Return value:  Size  Location     Type
 11103 ;;                  1    wreg      unsigned char 
 11104 ;; Registers used:
 11105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11106 ;; Tracked objects:
 11107 ;;		On entry : 0/0
 11108 ;;		On exit  : 0/0
 11109 ;;		Unchanged: 0/0
 11110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11111 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11114 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11115 ;;Total ram usage:        4 bytes
 11116 ;; Hardware stack levels used:    1
 11117 ;; Hardware stack levels required when called:   13
 11118 ;; This function calls:
 11119 ;;		_itoa
 11120 ;; This function is called by:
 11121 ;;		__display_start
 11122 ;; This function uses a non-reentrant model
 11123 ;;
 11124                           
 11125                           	psect	text35
 11126  012A88                     __ptext35:
 11127                           	opt stack 0
 11128  012A88                     __display_itoa_u16:
 11129                           	opt stack 14
 11130                           
 11131                           ;display.c: 228: itoa(text, value, 10);
 11132                           
 11133                           ; BSR set to: 0
 11134                           ;incstack = 0
 11135  012A88  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 11136  012A8C  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11137  012A90  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 11138  012A94  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 11139  012A98  0E00               	movlw	0
 11140  012A9A  0100               	movlb	0	; () banked
 11141  012A9C  6F75               	movwf	(itoa@base+1)& (0+255),b
 11142  012A9E  0E0A               	movlw	10
 11143  012AA0  6F74               	movwf	itoa@base& (0+255),b
 11144  012AA2  EC5D  F0A6         	call	_itoa	;wreg free
 11145                           
 11146                           ;display.c: 229: if(value>9999)
 11147  012AA6  0E10               	movlw	16
 11148  012AA8  0100               	movlb	0	; () banked
 11149  012AAA  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11150  012AAC  0E27               	movlw	39
 11151  012AAE  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11152  012AB0  A0D8               	btfss	status,0,c
 11153  012AB2  D00A               	goto	l1359
 11154                           
 11155                           ; BSR set to: 0
 11156                           ;display.c: 230: {;display.c: 231: *(text+5) = ' ';
 11157  012AB4  EE20 F005          	lfsr	2,5
 11158  012AB8  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11159  012ABA  26D9               	addwf	fsr2l,f,c
 11160  012ABC  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11161  012ABE  22DA               	addwfc	fsr2h,f,c
 11162  012AC0  0E20               	movlw	32
 11163  012AC2  6EDF               	movwf	indf2,c
 11164                           
 11165                           ; BSR set to: 0
 11166                           ;display.c: 232: return 5;
 11167  012AC4  0E05               	movlw	5
 11168                           
 11169                           ; BSR set to: 0
 11170                           ;display.c: 233: }
 11171                           
 11172                           ; BSR set to: 0
 11173  012AC6  0012               	return	
 11174  012AC8                     l1359:
 11175                           
 11176                           ; BSR set to: 0
 11177                           ;display.c: 234: else if (value>999)
 11178                           
 11179                           ; BSR set to: 0
 11180  012AC8  0EE8               	movlw	232
 11181  012ACA  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11182  012ACC  0E03               	movlw	3
 11183  012ACE  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11184  012AD0  A0D8               	btfss	status,0,c
 11185  012AD2  D00A               	goto	l1362
 11186                           
 11187                           ; BSR set to: 0
 11188                           ;display.c: 235: {;display.c: 236: *(text+4) = ' ';
 11189  012AD4  EE20 F004          	lfsr	2,4
 11190  012AD8  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11191  012ADA  26D9               	addwf	fsr2l,f,c
 11192  012ADC  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11193  012ADE  22DA               	addwfc	fsr2h,f,c
 11194  012AE0  0E20               	movlw	32
 11195  012AE2  6EDF               	movwf	indf2,c
 11196                           
 11197                           ; BSR set to: 0
 11198                           ;display.c: 237: return 4;
 11199  012AE4  0E04               	movlw	4
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;display.c: 238: }
 11203                           
 11204                           ; BSR set to: 0
 11205  012AE6  0012               	return	
 11206  012AE8                     l1362:
 11207                           
 11208                           ; BSR set to: 0
 11209                           ;display.c: 239: else if (value>99)
 11210                           
 11211                           ; BSR set to: 0
 11212  012AE8  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11213  012AEA  E104               	bnz	u13180
 11214  012AEC  0E64               	movlw	100
 11215  012AEE  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11216  012AF0  A0D8               	btfss	status,0,c
 11217  012AF2  D00A               	goto	l1364
 11218  012AF4                     u13180:
 11219                           
 11220                           ; BSR set to: 0
 11221                           ;display.c: 240: {;display.c: 241: *(text+3) = ' ';
 11222  012AF4  EE20 F003          	lfsr	2,3
 11223  012AF8  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11224  012AFA  26D9               	addwf	fsr2l,f,c
 11225  012AFC  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11226  012AFE  22DA               	addwfc	fsr2h,f,c
 11227  012B00  0E20               	movlw	32
 11228  012B02  6EDF               	movwf	indf2,c
 11229                           
 11230                           ; BSR set to: 0
 11231                           ;display.c: 242: return 3;
 11232  012B04  0E03               	movlw	3
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;display.c: 243: }
 11236                           
 11237                           ; BSR set to: 0
 11238  012B06  0012               	return	
 11239  012B08                     l1364:
 11240                           
 11241                           ; BSR set to: 0
 11242                           ;display.c: 244: else if (value>9)
 11243                           
 11244                           ; BSR set to: 0
 11245  012B08  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11246  012B0A  E104               	bnz	u13190
 11247  012B0C  0E0A               	movlw	10
 11248  012B0E  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11249  012B10  A0D8               	btfss	status,0,c
 11250  012B12  D00A               	goto	l1366
 11251  012B14                     u13190:
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;display.c: 245: {;display.c: 246: *(text+2) = ' ';
 11255  012B14  EE20 F002          	lfsr	2,2
 11256  012B18  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11257  012B1A  26D9               	addwf	fsr2l,f,c
 11258  012B1C  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11259  012B1E  22DA               	addwfc	fsr2h,f,c
 11260  012B20  0E20               	movlw	32
 11261  012B22  6EDF               	movwf	indf2,c
 11262                           
 11263                           ; BSR set to: 0
 11264                           ;display.c: 247: return 2;
 11265  012B24  0E02               	movlw	2
 11266                           
 11267                           ; BSR set to: 0
 11268                           ;display.c: 248: }
 11269                           
 11270                           ; BSR set to: 0
 11271  012B26  0012               	return	
 11272  012B28                     l1366:
 11273                           
 11274                           ; BSR set to: 0
 11275                           ;display.c: 249: else;display.c: 250: {;display.c: 251: *(text+1) = ' ';
 11276                           
 11277                           ; BSR set to: 0
 11278  012B28  EE20 F001          	lfsr	2,1
 11279  012B2C  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11280  012B2E  26D9               	addwf	fsr2l,f,c
 11281  012B30  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11282  012B32  22DA               	addwfc	fsr2h,f,c
 11283  012B34  0E20               	movlw	32
 11284  012B36  6EDF               	movwf	indf2,c
 11285                           
 11286                           ; BSR set to: 0
 11287                           ;display.c: 252: return 1;
 11288  012B38  0E01               	movlw	1
 11289                           
 11290                           ; BSR set to: 0
 11291                           
 11292                           ; BSR set to: 0
 11293                           
 11294                           ; BSR set to: 0
 11295                           
 11296                           ; BSR set to: 0
 11297  012B3A  0012               	return	
 11298  012B3C                     __end_of__display_itoa_u16:
 11299                           	opt stack 0
 11300                           tblptru	equ	0xFF8
 11301                           tblptrh	equ	0xFF7
 11302                           tblptrl	equ	0xFF6
 11303                           tablat	equ	0xFF5
 11304                           prodh	equ	0xFF4
 11305                           prodl	equ	0xFF3
 11306                           postinc0	equ	0xFEE
 11307                           wreg	equ	0xFE8
 11308                           postdec1	equ	0xFE5
 11309                           plusw1	equ	0xFE3
 11310                           fsr1h	equ	0xFE2
 11311                           fsr1l	equ	0xFE1
 11312                           indf2	equ	0xFDF
 11313                           postinc2	equ	0xFDE
 11314                           plusw2	equ	0xFDB
 11315                           fsr2h	equ	0xFDA
 11316                           fsr2l	equ	0xFD9
 11317                           status	equ	0xFD8
 11318                           
 11319 ;; *************** function _configFile_write *****************
 11320 ;; Defined at:
 11321 ;;		line 270 in file "config_file.c"
 11322 ;; Parameters:    Size  Location     Type
 11323 ;;		None
 11324 ;; Auto vars:     Size  Location     Type
 11325 ;;  file_size       4  133[BANK0 ] unsigned long 
 11326 ;;  file_number     1  132[BANK0 ] unsigned char 
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  1    wreg      void 
 11329 ;; Registers used:
 11330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11337 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11338 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11339 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11340 ;;Total ram usage:        6 bytes
 11341 ;; Hardware stack levels used:    1
 11342 ;; Hardware stack levels required when called:   18
 11343 ;; This function calls:
 11344 ;;		__add_item
 11345 ;;		_fat_create_file
 11346 ;;		_fat_find_file
 11347 ;;		_fat_modify_file
 11348 ;;		_fat_resize_file
 11349 ;; This function is called by:
 11350 ;;		_system_init
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           	psect	text36
 11355  00C1A8                     __ptext36:
 11356                           	opt stack 0
 11357  00C1A8                     _configFile_write:
 11358                           	opt stack 11
 11359                           
 11360                           ;config_file.c: 272: uint8_t file_number;;config_file.c: 273: uint32_t file_size;;config
      +                          _file.c: 275: file_size = 0;
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;incstack = 0
 11364  00C1A8  0E00               	movlw	0
 11365  00C1AA  0100               	movlb	0	; () banked
 11366  00C1AC  6FE5               	movwf	configFile_write@file_size& (0+255),b
 11367  00C1AE  0E00               	movlw	0
 11368  00C1B0  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 11369  00C1B2  0E00               	movlw	0
 11370  00C1B4  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 11371  00C1B6  0E00               	movlw	0
 11372  00C1B8  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 11373                           
 11374                           ; BSR set to: 0
 11375                           ;config_file.c: 276: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 11376  00C1BA  0EFD               	movlw	low _full_circle_in_steps_string
 11377  00C1BC  6F84               	movwf	__add_item@item_string& (0+255),b
 11378  00C1BE  0EA1               	movlw	high _full_circle_in_steps_string
 11379  00C1C0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11380  00C1C2  C1A1  F086         	movff	_config,__add_item@value
 11381  00C1C6  C1A2  F087         	movff	_config+1,__add_item@value+1
 11382  00C1CA  C1A3  F088         	movff	_config+2,__add_item@value+2
 11383  00C1CE  C1A4  F089         	movff	_config+3,__add_item@value+3
 11384  00C1D2  0E00               	movlw	low _ConfigFile_buffer
 11385  00C1D4  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11386  00C1D6  6F8A               	movwf	__add_item@buffer& (0+255),b
 11387  00C1D8  0E08               	movlw	high _ConfigFile_buffer
 11388  00C1DA  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11389  00C1DC  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11390  00C1DE  EC61  F089         	call	__add_item	;wreg free
 11391  00C1E2  0100               	movlb	0	; () banked
 11392  00C1E4  6FE3               	movwf	??_configFile_write& (0+255),b
 11393  00C1E6  51E3               	movf	??_configFile_write& (0+255),w,b
 11394  00C1E8  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11395  00C1EA  0E00               	movlw	0
 11396  00C1EC  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11397  00C1EE  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11398  00C1F0  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11399                           
 11400                           ; BSR set to: 0
 11401                           ;config_file.c: 277: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 11402  00C1F2  0E49               	movlw	low _inverse_direction_string
 11403  00C1F4  6F84               	movwf	__add_item@item_string& (0+255),b
 11404  00C1F6  0EA2               	movlw	high _inverse_direction_string
 11405  00C1F8  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11406  00C1FA  0101               	movlb	1	; () banked
 11407  00C1FC  51A5               	movf	(_config+4)& (0+255),w,b
 11408  00C1FE  0100               	movlb	0	; () banked
 11409  00C200  6F86               	movwf	__add_item@value& (0+255),b
 11410  00C202  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11411  00C204  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11412  00C206  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11413  00C208  0E00               	movlw	low _ConfigFile_buffer
 11414  00C20A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11415  00C20C  6F8A               	movwf	__add_item@buffer& (0+255),b
 11416  00C20E  0E08               	movlw	high _ConfigFile_buffer
 11417  00C210  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11418  00C212  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11419  00C214  EC61  F089         	call	__add_item	;wreg free
 11420  00C218  0100               	movlb	0	; () banked
 11421  00C21A  6FE3               	movwf	??_configFile_write& (0+255),b
 11422  00C21C  51E3               	movf	??_configFile_write& (0+255),w,b
 11423  00C21E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11424  00C220  0E00               	movlw	0
 11425  00C222  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11426  00C224  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11427  00C226  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;config_file.c: 278: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 11431  00C228  0E12               	movlw	low _overshoot_in_steps_string
 11432  00C22A  6F84               	movwf	__add_item@item_string& (0+255),b
 11433  00C22C  0EA2               	movlw	high _overshoot_in_steps_string
 11434  00C22E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11435  00C230  C1A6  F086         	movff	_config+5,__add_item@value
 11436  00C234  C1A7  F087         	movff	_config+6,__add_item@value+1
 11437  00C238  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11438  00C23A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11439  00C23C  0E00               	movlw	low _ConfigFile_buffer
 11440  00C23E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11441  00C240  6F8A               	movwf	__add_item@buffer& (0+255),b
 11442  00C242  0E08               	movlw	high _ConfigFile_buffer
 11443  00C244  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11444  00C246  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11445  00C248  EC61  F089         	call	__add_item	;wreg free
 11446  00C24C  0100               	movlb	0	; () banked
 11447  00C24E  6FE3               	movwf	??_configFile_write& (0+255),b
 11448  00C250  51E3               	movf	??_configFile_write& (0+255),w,b
 11449  00C252  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11450  00C254  0E00               	movlw	0
 11451  00C256  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11452  00C258  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11453  00C25A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;config_file.c: 279: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 11457  00C25C  0EBB               	movlw	low _overshoot_cost_in_steps_string
 11458  00C25E  6F84               	movwf	__add_item@item_string& (0+255),b
 11459  00C260  0EA1               	movlw	high _overshoot_cost_in_steps_string
 11460  00C262  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11461  00C264  C1A8  F086         	movff	_config+7,__add_item@value
 11462  00C268  C1A9  F087         	movff	_config+8,__add_item@value+1
 11463  00C26C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11464  00C26E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11465  00C270  0E00               	movlw	low _ConfigFile_buffer
 11466  00C272  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11467  00C274  6F8A               	movwf	__add_item@buffer& (0+255),b
 11468  00C276  0E08               	movlw	high _ConfigFile_buffer
 11469  00C278  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11470  00C27A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11471  00C27C  EC61  F089         	call	__add_item	;wreg free
 11472  00C280  0100               	movlb	0	; () banked
 11473  00C282  6FE3               	movwf	??_configFile_write& (0+255),b
 11474  00C284  51E3               	movf	??_configFile_write& (0+255),w,b
 11475  00C286  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11476  00C288  0E00               	movlw	0
 11477  00C28A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11478  00C28C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11479  00C28E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11480                           
 11481                           ; BSR set to: 0
 11482                           ;config_file.c: 280: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11483  00C290  0E97               	movlw	low _minimum_speed_string
 11484  00C292  6F84               	movwf	__add_item@item_string& (0+255),b
 11485  00C294  0EA2               	movlw	high _minimum_speed_string
 11486  00C296  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11487  00C298  C1AA  F086         	movff	_config+9,__add_item@value
 11488  00C29C  C1AB  F087         	movff	_config+10,__add_item@value+1
 11489  00C2A0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11490  00C2A2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11491  00C2A4  0E00               	movlw	low _ConfigFile_buffer
 11492  00C2A6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11493  00C2A8  6F8A               	movwf	__add_item@buffer& (0+255),b
 11494  00C2AA  0E08               	movlw	high _ConfigFile_buffer
 11495  00C2AC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11496  00C2AE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11497  00C2B0  EC61  F089         	call	__add_item	;wreg free
 11498  00C2B4  0100               	movlb	0	; () banked
 11499  00C2B6  6FE3               	movwf	??_configFile_write& (0+255),b
 11500  00C2B8  51E3               	movf	??_configFile_write& (0+255),w,b
 11501  00C2BA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11502  00C2BC  0E00               	movlw	0
 11503  00C2BE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11504  00C2C0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11505  00C2C2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11506                           
 11507                           ; BSR set to: 0
 11508                           ;config_file.c: 281: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11509  00C2C4  0E89               	movlw	low _maximum_speed_string
 11510  00C2C6  6F84               	movwf	__add_item@item_string& (0+255),b
 11511  00C2C8  0EA2               	movlw	high _maximum_speed_string
 11512  00C2CA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11513  00C2CC  C1AC  F086         	movff	_config+11,__add_item@value
 11514  00C2D0  C1AD  F087         	movff	_config+12,__add_item@value+1
 11515  00C2D4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11516  00C2D6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11517  00C2D8  0E00               	movlw	low _ConfigFile_buffer
 11518  00C2DA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11519  00C2DC  6F8A               	movwf	__add_item@buffer& (0+255),b
 11520  00C2DE  0E08               	movlw	high _ConfigFile_buffer
 11521  00C2E0  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11522  00C2E2  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11523  00C2E4  EC61  F089         	call	__add_item	;wreg free
 11524  00C2E8  0100               	movlb	0	; () banked
 11525  00C2EA  6FE3               	movwf	??_configFile_write& (0+255),b
 11526  00C2EC  51E3               	movf	??_configFile_write& (0+255),w,b
 11527  00C2EE  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11528  00C2F0  0E00               	movlw	0
 11529  00C2F2  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11530  00C2F4  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11531  00C2F6  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;config_file.c: 282: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 11535  00C2F8  0E37               	movlw	low _initial_speed_arc_string
 11536  00C2FA  6F84               	movwf	__add_item@item_string& (0+255),b
 11537  00C2FC  0EA2               	movlw	high _initial_speed_arc_string
 11538  00C2FE  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11539  00C300  C1AE  F086         	movff	_config+13,__add_item@value
 11540  00C304  C1AF  F087         	movff	_config+14,__add_item@value+1
 11541  00C308  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11542  00C30A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11543  00C30C  0E00               	movlw	low _ConfigFile_buffer
 11544  00C30E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11545  00C310  6F8A               	movwf	__add_item@buffer& (0+255),b
 11546  00C312  0E08               	movlw	high _ConfigFile_buffer
 11547  00C314  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11548  00C316  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11549  00C318  EC61  F089         	call	__add_item	;wreg free
 11550  00C31C  0100               	movlb	0	; () banked
 11551  00C31E  6FE3               	movwf	??_configFile_write& (0+255),b
 11552  00C320  51E3               	movf	??_configFile_write& (0+255),w,b
 11553  00C322  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11554  00C324  0E00               	movlw	0
 11555  00C326  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11556  00C328  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11557  00C32A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11558                           
 11559                           ; BSR set to: 0
 11560                           ;config_file.c: 283: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 11561  00C32C  0E25               	movlw	low _maximum_speed_arc_string
 11562  00C32E  6F84               	movwf	__add_item@item_string& (0+255),b
 11563  00C330  0EA2               	movlw	high _maximum_speed_arc_string
 11564  00C332  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11565  00C334  C1B0  F086         	movff	_config+15,__add_item@value
 11566  00C338  C1B1  F087         	movff	_config+16,__add_item@value+1
 11567  00C33C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11568  00C33E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11569  00C340  0E00               	movlw	low _ConfigFile_buffer
 11570  00C342  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11571  00C344  6F8A               	movwf	__add_item@buffer& (0+255),b
 11572  00C346  0E08               	movlw	high _ConfigFile_buffer
 11573  00C348  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11574  00C34A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11575  00C34C  EC61  F089         	call	__add_item	;wreg free
 11576  00C350  0100               	movlb	0	; () banked
 11577  00C352  6FE3               	movwf	??_configFile_write& (0+255),b
 11578  00C354  51E3               	movf	??_configFile_write& (0+255),w,b
 11579  00C356  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11580  00C358  0E00               	movlw	0
 11581  00C35A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11582  00C35C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11583  00C35E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;config_file.c: 284: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 11587  00C360  0EE8               	movlw	low _initial_speed_manual_string
 11588  00C362  6F84               	movwf	__add_item@item_string& (0+255),b
 11589  00C364  0EA1               	movlw	high _initial_speed_manual_string
 11590  00C366  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11591  00C368  C1B2  F086         	movff	_config+17,__add_item@value
 11592  00C36C  C1B3  F087         	movff	_config+18,__add_item@value+1
 11593  00C370  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11594  00C372  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11595  00C374  0E00               	movlw	low _ConfigFile_buffer
 11596  00C376  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11597  00C378  6F8A               	movwf	__add_item@buffer& (0+255),b
 11598  00C37A  0E08               	movlw	high _ConfigFile_buffer
 11599  00C37C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11600  00C37E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11601  00C380  EC61  F089         	call	__add_item	;wreg free
 11602  00C384  0100               	movlb	0	; () banked
 11603  00C386  6FE3               	movwf	??_configFile_write& (0+255),b
 11604  00C388  51E3               	movf	??_configFile_write& (0+255),w,b
 11605  00C38A  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11606  00C38C  0E00               	movlw	0
 11607  00C38E  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11608  00C390  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11609  00C392  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11610                           
 11611                           ; BSR set to: 0
 11612                           ;config_file.c: 285: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 11613  00C394  0ED3               	movlw	low _maximum_speed_manual_string
 11614  00C396  6F84               	movwf	__add_item@item_string& (0+255),b
 11615  00C398  0EA1               	movlw	high _maximum_speed_manual_string
 11616  00C39A  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11617  00C39C  C1B4  F086         	movff	_config+19,__add_item@value
 11618  00C3A0  C1B5  F087         	movff	_config+20,__add_item@value+1
 11619  00C3A4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11620  00C3A6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11621  00C3A8  0E00               	movlw	low _ConfigFile_buffer
 11622  00C3AA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11623  00C3AC  6F8A               	movwf	__add_item@buffer& (0+255),b
 11624  00C3AE  0E08               	movlw	high _ConfigFile_buffer
 11625  00C3B0  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11626  00C3B2  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11627  00C3B4  EC61  F089         	call	__add_item	;wreg free
 11628  00C3B8  0100               	movlb	0	; () banked
 11629  00C3BA  6FE3               	movwf	??_configFile_write& (0+255),b
 11630  00C3BC  51E3               	movf	??_configFile_write& (0+255),w,b
 11631  00C3BE  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11632  00C3C0  0E00               	movlw	0
 11633  00C3C2  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11634  00C3C4  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11635  00C3C6  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11636                           
 11637                           ; BSR set to: 0
 11638                           ;config_file.c: 286: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 11639  00C3C8  0E6D               	movlw	low _use_ccw_limit_string
 11640  00C3CA  6F84               	movwf	__add_item@item_string& (0+255),b
 11641  00C3CC  0EA2               	movlw	high _use_ccw_limit_string
 11642  00C3CE  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11643  00C3D0  0101               	movlb	1	; () banked
 11644  00C3D2  51BA               	movf	(_config+25)& (0+255),w,b
 11645  00C3D4  0100               	movlb	0	; () banked
 11646  00C3D6  6F86               	movwf	__add_item@value& (0+255),b
 11647  00C3D8  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11648  00C3DA  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11649  00C3DC  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11650  00C3DE  0E00               	movlw	low _ConfigFile_buffer
 11651  00C3E0  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11652  00C3E2  6F8A               	movwf	__add_item@buffer& (0+255),b
 11653  00C3E4  0E08               	movlw	high _ConfigFile_buffer
 11654  00C3E6  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11655  00C3E8  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11656  00C3EA  EC61  F089         	call	__add_item	;wreg free
 11657  00C3EE  0100               	movlb	0	; () banked
 11658  00C3F0  6FE3               	movwf	??_configFile_write& (0+255),b
 11659  00C3F2  51E3               	movf	??_configFile_write& (0+255),w,b
 11660  00C3F4  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11661  00C3F6  0E00               	movlw	0
 11662  00C3F8  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11663  00C3FA  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11664  00C3FC  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11665                           
 11666                           ; BSR set to: 0
 11667                           ;config_file.c: 287: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 11668  00C3FE  0EB2               	movlw	low _ccw_limit_string
 11669  00C400  6F84               	movwf	__add_item@item_string& (0+255),b
 11670  00C402  0EA2               	movlw	high _ccw_limit_string
 11671  00C404  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11672  00C406  C1BB  F086         	movff	_config+26,__add_item@value
 11673  00C40A  C1BC  F087         	movff	_config+27,__add_item@value+1
 11674  00C40E  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11675  00C410  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11676  00C412  0E00               	movlw	low _ConfigFile_buffer
 11677  00C414  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11678  00C416  6F8A               	movwf	__add_item@buffer& (0+255),b
 11679  00C418  0E08               	movlw	high _ConfigFile_buffer
 11680  00C41A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11681  00C41C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11682  00C41E  EC61  F089         	call	__add_item	;wreg free
 11683  00C422  0100               	movlb	0	; () banked
 11684  00C424  6FE3               	movwf	??_configFile_write& (0+255),b
 11685  00C426  51E3               	movf	??_configFile_write& (0+255),w,b
 11686  00C428  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11687  00C42A  0E00               	movlw	0
 11688  00C42C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11689  00C42E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11690  00C430  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11691                           
 11692                           ; BSR set to: 0
 11693                           ;config_file.c: 288: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 11694  00C432  0EA5               	movlw	low _use_cw_limit_string
 11695  00C434  6F84               	movwf	__add_item@item_string& (0+255),b
 11696  00C436  0EA2               	movlw	high _use_cw_limit_string
 11697  00C438  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11698  00C43A  0101               	movlb	1	; () banked
 11699  00C43C  51B7               	movf	(_config+22)& (0+255),w,b
 11700  00C43E  0100               	movlb	0	; () banked
 11701  00C440  6F86               	movwf	__add_item@value& (0+255),b
 11702  00C442  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11703  00C444  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11704  00C446  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11705  00C448  0E00               	movlw	low _ConfigFile_buffer
 11706  00C44A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11707  00C44C  6F8A               	movwf	__add_item@buffer& (0+255),b
 11708  00C44E  0E08               	movlw	high _ConfigFile_buffer
 11709  00C450  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11710  00C452  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11711  00C454  EC61  F089         	call	__add_item	;wreg free
 11712  00C458  0100               	movlb	0	; () banked
 11713  00C45A  6FE3               	movwf	??_configFile_write& (0+255),b
 11714  00C45C  51E3               	movf	??_configFile_write& (0+255),w,b
 11715  00C45E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11716  00C460  0E00               	movlw	0
 11717  00C462  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11718  00C464  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11719  00C466  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;config_file.c: 289: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 11723  00C468  0EBC               	movlw	low _cw_limit_string
 11724  00C46A  6F84               	movwf	__add_item@item_string& (0+255),b
 11725  00C46C  0EA2               	movlw	high _cw_limit_string
 11726  00C46E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11727  00C470  C1B8  F086         	movff	_config+23,__add_item@value
 11728  00C474  C1B9  F087         	movff	_config+24,__add_item@value+1
 11729  00C478  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11730  00C47A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11731  00C47C  0E00               	movlw	low _ConfigFile_buffer
 11732  00C47E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11733  00C480  6F8A               	movwf	__add_item@buffer& (0+255),b
 11734  00C482  0E08               	movlw	high _ConfigFile_buffer
 11735  00C484  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11736  00C486  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11737  00C488  EC61  F089         	call	__add_item	;wreg free
 11738  00C48C  0100               	movlb	0	; () banked
 11739  00C48E  6FE3               	movwf	??_configFile_write& (0+255),b
 11740  00C490  51E3               	movf	??_configFile_write& (0+255),w,b
 11741  00C492  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11742  00C494  0E00               	movlw	0
 11743  00C496  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11744  00C498  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11745  00C49A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;config_file.c: 290: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 11749  00C49C  0E7B               	movlw	low _beep_duration_string
 11750  00C49E  6F84               	movwf	__add_item@item_string& (0+255),b
 11751  00C4A0  0EA2               	movlw	high _beep_duration_string
 11752  00C4A2  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11753  00C4A4  0101               	movlb	1	; () banked
 11754  00C4A6  51B6               	movf	(_config+21)& (0+255),w,b
 11755  00C4A8  0100               	movlb	0	; () banked
 11756  00C4AA  6F86               	movwf	__add_item@value& (0+255),b
 11757  00C4AC  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11758  00C4AE  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11759  00C4B0  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11760  00C4B2  0E00               	movlw	low _ConfigFile_buffer
 11761  00C4B4  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11762  00C4B6  6F8A               	movwf	__add_item@buffer& (0+255),b
 11763  00C4B8  0E08               	movlw	high _ConfigFile_buffer
 11764  00C4BA  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11765  00C4BC  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11766  00C4BE  EC61  F089         	call	__add_item	;wreg free
 11767  00C4C2  0100               	movlb	0	; () banked
 11768  00C4C4  6FE3               	movwf	??_configFile_write& (0+255),b
 11769  00C4C6  51E3               	movf	??_configFile_write& (0+255),w,b
 11770  00C4C8  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11771  00C4CA  0E00               	movlw	0
 11772  00C4CC  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11773  00C4CE  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11774  00C4D0  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11775                           
 11776                           ; BSR set to: 0
 11777                           ;config_file.c: 293: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 11778  00C4D2  0EC0               	movlw	low _configFile_used_name
 11779  00C4D4  6F8B               	movwf	fat_find_file@name& (0+255),b
 11780  00C4D6  0E02               	movlw	high _configFile_used_name
 11781  00C4D8  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 11782  00C4DA  0ED0               	movlw	low _configFile_used_extention
 11783  00C4DC  6F8D               	movwf	fat_find_file@extension& (0+255),b
 11784  00C4DE  0E02               	movlw	high _configFile_used_extention
 11785  00C4E0  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 11786  00C4E2  EC3B  F08C         	call	_fat_find_file	;wreg free
 11787  00C4E6  0100               	movlb	0	; () banked
 11788  00C4E8  6FE4               	movwf	configFile_write@file_number& (0+255),b
 11789                           
 11790                           ; BSR set to: 0
 11791                           ;config_file.c: 294: if(file_number==0xFF)
 11792  00C4EA  29E4               	incf	configFile_write@file_number& (0+255),w,b
 11793  00C4EC  A4D8               	btfss	status,2,c
 11794  00C4EE  D015               	goto	l2985
 11795                           
 11796                           ; BSR set to: 0
 11797                           ;config_file.c: 295: {;config_file.c: 296: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 11798  00C4F0  0EC0               	movlw	low _configFile_used_name
 11799  00C4F2  6FAC               	movwf	fat_create_file@name& (0+255),b
 11800  00C4F4  0E02               	movlw	high _configFile_used_name
 11801  00C4F6  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 11802  00C4F8  0ED0               	movlw	low _configFile_used_extention
 11803  00C4FA  6FAE               	movwf	fat_create_file@extension& (0+255),b
 11804  00C4FC  0E02               	movlw	high _configFile_used_extention
 11805  00C4FE  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 11806  00C500  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 11807  00C504  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 11808  00C508  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 11809  00C50C  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 11810  00C510  EC2D  F080         	call	_fat_create_file	;wreg free
 11811  00C514  0100               	movlb	0	; () banked
 11812  00C516  6FE4               	movwf	configFile_write@file_number& (0+255),b
 11813                           
 11814                           ;config_file.c: 297: }
 11815  00C518  D00B               	goto	l2986
 11816  00C51A                     l2985:
 11817                           
 11818                           ; BSR set to: 0
 11819                           ;config_file.c: 298: else;config_file.c: 299: {;config_file.c: 300: fat_resize_file(file
      +                          _number, file_size);
 11820                           
 11821                           ; BSR set to: 0
 11822  00C51A  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 11823  00C51E  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 11824  00C522  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 11825  00C526  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 11826  00C52A  51E4               	movf	configFile_write@file_number& (0+255),w,b
 11827  00C52C  ECE5  F087         	call	_fat_resize_file
 11828  00C530                     l2986:
 11829                           
 11830                           ;config_file.c: 301: };config_file.c: 304: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 11831  00C530  0E00               	movlw	0
 11832  00C532  0100               	movlb	0	; () banked
 11833  00C534  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 11834  00C536  0E00               	movlw	0
 11835  00C538  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 11836  00C53A  0E00               	movlw	0
 11837  00C53C  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 11838  00C53E  0E00               	movlw	0
 11839  00C540  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 11840  00C542  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 11841  00C546  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 11842  00C54A  0E00               	movlw	low _ConfigFile_buffer
 11843  00C54C  6FA7               	movwf	fat_modify_file@data& (0+255),b
 11844  00C54E  0E08               	movlw	high _ConfigFile_buffer
 11845  00C550  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 11846  00C552  51E4               	movf	configFile_write@file_number& (0+255),w,b
 11847  00C554  EC06  F073         	call	_fat_modify_file
 11848  00C558  0012               	return		;funcret
 11849  00C55A                     __end_of_configFile_write:
 11850                           	opt stack 0
 11851                           tblptru	equ	0xFF8
 11852                           tblptrh	equ	0xFF7
 11853                           tblptrl	equ	0xFF6
 11854                           tablat	equ	0xFF5
 11855                           prodh	equ	0xFF4
 11856                           prodl	equ	0xFF3
 11857                           postinc0	equ	0xFEE
 11858                           wreg	equ	0xFE8
 11859                           postdec1	equ	0xFE5
 11860                           plusw1	equ	0xFE3
 11861                           fsr1h	equ	0xFE2
 11862                           fsr1l	equ	0xFE1
 11863                           indf2	equ	0xFDF
 11864                           postinc2	equ	0xFDE
 11865                           plusw2	equ	0xFDB
 11866                           fsr2h	equ	0xFDA
 11867                           fsr2l	equ	0xFD9
 11868                           status	equ	0xFD8
 11869                           
 11870 ;; *************** function _fat_resize_file *****************
 11871 ;; Defined at:
 11872 ;;		line 911 in file "fat16.c"
 11873 ;; Parameters:    Size  Location     Type
 11874 ;;  file_number     1    wreg     unsigned char 
 11875 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 11876 ;; Auto vars:     Size  Location     Type
 11877 ;;  file_number     1   90[BANK0 ] unsigned char 
 11878 ;;  root           32   91[BANK0 ] struct .
 11879 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 11880 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 11881 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 11882 ;; Return value:  Size  Location     Type
 11883 ;;                  1    wreg      unsigned char 
 11884 ;; Registers used:
 11885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : 0/0
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11891 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11892 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11893 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11894 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11895 ;;Total ram usage:       47 bytes
 11896 ;; Hardware stack levels used:    1
 11897 ;; Hardware stack levels required when called:   17
 11898 ;; This function calls:
 11899 ;;		__make_cluster_chain
 11900 ;;		__root_is_available
 11901 ;;		__write_root
 11902 ;;		_fat_get_file_information
 11903 ;; This function is called by:
 11904 ;;		_configFile_write
 11905 ;;		_fat_append_to_file
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text37
 11910  010FCA                     __ptext37:
 11911                           	opt stack 0
 11912  010FCA                     _fat_resize_file:
 11913                           	opt stack 11
 11914                           
 11915                           ;incstack = 0
 11916                           ;fat_resize_file@file_number stored from wreg
 11917  010FCA  0100               	movlb	0	; () banked
 11918  010FCC  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 11919                           
 11920                           ;fat16.c: 913: rootEntry_t root;;fat16.c: 914: uint16_t old_number_of_clusters;;fat16.c:
      +                           915: uint16_t new_number_of_clusters;;fat16.c: 916: uint16_t first_cluster;;fat16.c: 91
      +                          9: if(file_number>=64)
 11921  010FCE  0E3F               	movlw	63
 11922  010FD0  0100               	movlb	0	; () banked
 11923  010FD2  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 11924  010FD4  D002               	goto	l1900
 11925                           
 11926                           ; BSR set to: 0
 11927                           ;fat16.c: 920: {;fat16.c: 922: return 0xFF;
 11928  010FD6  0EFF               	movlw	255
 11929                           
 11930                           ; BSR set to: 0
 11931  010FD8  0012               	return	
 11932  010FDA                     l1900:
 11933                           
 11934                           ; BSR set to: 0
 11935                           ;fat16.c: 923: };fat16.c: 926: if(_root_is_available(file_number))
 11936                           
 11937                           ; BSR set to: 0
 11938  010FDA  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 11939  010FDC  EC08  F09F         	call	__root_is_available
 11940  010FE0  0900               	iorlw	0
 11941  010FE2  B4D8               	btfsc	status,2,c
 11942  010FE4  D002               	goto	l1902
 11943                           
 11944                           ;fat16.c: 927: {;fat16.c: 929: return 0xFE;
 11945  010FE6  0EFE               	movlw	254
 11946  010FE8  0012               	return	
 11947  010FEA                     l1902:
 11948                           
 11949                           ;fat16.c: 930: };fat16.c: 933: fat_get_file_information(file_number, &root);
 11950  010FEA  0EBB               	movlw	low fat_resize_file@root
 11951  010FEC  0100               	movlb	0	; () banked
 11952  010FEE  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 11953  010FF0  0E00               	movlw	high fat_resize_file@root
 11954  010FF2  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 11955  010FF4  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 11956  010FF6  EC3D  F09D         	call	_fat_get_file_information
 11957                           
 11958                           ;fat16.c: 936: old_number_of_clusters = (root.fileSize+512-1)>>9;
 11959  010FFA  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 11960  010FFE  0EFF               	movlw	255
 11961  011000  24DE               	addwf	postinc2,w,c
 11962  011002  0100               	movlb	0	; () banked
 11963  011004  6FB0               	movwf	??_fat_resize_file& (0+255),b
 11964  011006  0E01               	movlw	1
 11965  011008  20DE               	addwfc	postinc2,w,c
 11966  01100A  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 11967  01100C  0E00               	movlw	0
 11968  01100E  20DE               	addwfc	postinc2,w,c
 11969  011010  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 11970  011012  0E00               	movlw	0
 11971  011014  20DE               	addwfc	postinc2,w,c
 11972  011016  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 11973  011018  0E0A               	movlw	10
 11974  01101A  D005               	goto	u14410
 11975  01101C                     u14415:
 11976  01101C  90D8               	bcf	status,0,c
 11977  01101E  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 11978  011020  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 11979  011022  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 11980  011024  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 11981  011026                     u14410:
 11982  011026  2EE8               	decfsz	wreg,f,c
 11983  011028  D7F9               	goto	u14415
 11984  01102A  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 11985  01102E  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 11986                           
 11987                           ; BSR set to: 0
 11988                           ;fat16.c: 937: new_number_of_clusters = (new_file_size+512-1)>>9;
 11989  011032  0EFF               	movlw	255
 11990  011034  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 11991  011036  6FB0               	movwf	??_fat_resize_file& (0+255),b
 11992  011038  0E01               	movlw	1
 11993  01103A  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 11994  01103C  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 11995  01103E  0E00               	movlw	0
 11996  011040  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 11997  011042  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 11998  011044  0E00               	movlw	0
 11999  011046  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 12000  011048  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12001  01104A  0E0A               	movlw	10
 12002  01104C  D005               	goto	u14420
 12003  01104E                     u14425:
 12004  01104E  90D8               	bcf	status,0,c
 12005  011050  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12006  011052  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12007  011054  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12008  011056  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12009  011058                     u14420:
 12010  011058  2EE8               	decfsz	wreg,f,c
 12011  01105A  D7F9               	goto	u14425
 12012  01105C  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 12013  011060  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 12014                           
 12015                           ; BSR set to: 0
 12016                           ;fat16.c: 940: if(old_number_of_clusters!=new_number_of_clusters)
 12017  011064  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 12018  011066  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 12019  011068  E104               	bnz	u14430
 12020  01106A  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 12021  01106C  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 12022  01106E  B4D8               	btfsc	status,2,c
 12023  011070  D01A               	goto	l1903
 12024  011072                     u14430:
 12025                           
 12026                           ; BSR set to: 0
 12027                           ;fat16.c: 941: {;fat16.c: 942: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 12028  011072  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 12029  011076  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 12030  01107A  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 12031  01107E  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 12032  011082  EC91  F06C         	call	__make_cluster_chain	;wreg free
 12033  011086  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 12034  01108A  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 12035                           
 12036                           ;fat16.c: 943: if(first_cluster==0xFFFF)
 12037  01108E  0100               	movlb	0	; () banked
 12038  011090  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 12039  011092  E105               	bnz	l1904
 12040  011094  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 12041  011096  A4D8               	btfss	status,2,c
 12042  011098  D002               	goto	l1904
 12043                           
 12044                           ; BSR set to: 0
 12045                           ;fat16.c: 944: {;fat16.c: 946: return 0xFD;
 12046  01109A  0EFD               	movlw	253
 12047                           
 12048                           ; BSR set to: 0
 12049  01109C  0012               	return	
 12050  01109E                     l1904:
 12051                           
 12052                           ; BSR set to: 0
 12053                           ;fat16.c: 947: };fat16.c: 950: root.firstCluster = first_cluster;
 12054  01109E  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 12055  0110A2  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 12056  0110A6                     l1903:
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;fat16.c: 951: };fat16.c: 954: root.fileSize = new_file_size;
 12060  0110A6  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 12061  0110AA  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 12062  0110AE  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 12063  0110B2  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;fat16.c: 957: _write_root(file_number, &root);
 12067  0110B6  0EBB               	movlw	low fat_resize_file@root
 12068  0110B8  6F88               	movwf	__write_root@data& (0+255),b
 12069  0110BA  0E00               	movlw	high fat_resize_file@root
 12070  0110BC  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12071  0110BE  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12072  0110C0  EC5F  F0A5         	call	__write_root
 12073                           
 12074                           ;fat16.c: 960: return 0x00;
 12075  0110C4  0E00               	movlw	0
 12076  0110C6  0012               	return	
 12077  0110C8                     __end_of_fat_resize_file:
 12078                           	opt stack 0
 12079                           tblptru	equ	0xFF8
 12080                           tblptrh	equ	0xFF7
 12081                           tblptrl	equ	0xFF6
 12082                           tablat	equ	0xFF5
 12083                           prodh	equ	0xFF4
 12084                           prodl	equ	0xFF3
 12085                           postinc0	equ	0xFEE
 12086                           wreg	equ	0xFE8
 12087                           postdec1	equ	0xFE5
 12088                           plusw1	equ	0xFE3
 12089                           fsr1h	equ	0xFE2
 12090                           fsr1l	equ	0xFE1
 12091                           indf2	equ	0xFDF
 12092                           postinc2	equ	0xFDE
 12093                           plusw2	equ	0xFDB
 12094                           fsr2h	equ	0xFDA
 12095                           fsr2l	equ	0xFD9
 12096                           status	equ	0xFD8
 12097                           
 12098 ;; *************** function _fat_modify_file *****************
 12099 ;; Defined at:
 12100 ;;		line 963 in file "fat16.c"
 12101 ;; Parameters:    Size  Location     Type
 12102 ;;  file_number     1    wreg     unsigned char 
 12103 ;;  start_byte      4   65[BANK0 ] unsigned long 
 12104 ;;  length          2   69[BANK0 ] unsigned int 
 12105 ;;  data            2   71[BANK0 ] PTR unsigned char 
 12106 ;;		 -> ConfigFile_buffer(512), 
 12107 ;; Auto vars:     Size  Location     Type
 12108 ;;  file_number     1   87[BANK0 ] unsigned char 
 12109 ;;  root           32   99[BANK0 ] struct .
 12110 ;;  position        4   95[BANK0 ] unsigned long 
 12111 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 12112 ;;  offset          2   91[BANK0 ] unsigned int 
 12113 ;;  cluster         2   89[BANK0 ] unsigned int 
 12114 ;;  sector          2   85[BANK0 ] unsigned int 
 12115 ;;  return_code     1   88[BANK0 ] unsigned char 
 12116 ;; Return value:  Size  Location     Type
 12117 ;;                  1    wreg      unsigned char 
 12118 ;; Registers used:
 12119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12120 ;; Tracked objects:
 12121 ;;		On entry : 0/0
 12122 ;;		On exit  : 0/0
 12123 ;;		Unchanged: 0/0
 12124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12125 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12126 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12127 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12128 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12129 ;;Total ram usage:       66 bytes
 12130 ;; Hardware stack levels used:    1
 12131 ;; Hardware stack levels required when called:   17
 12132 ;; This function calls:
 12133 ;;		__data_sector_from_cluster
 12134 ;;		__find_nth_cluster
 12135 ;;		__read_fat
 12136 ;;		_fat_get_file_information
 12137 ;;		_flash_partial_write
 12138 ;; This function is called by:
 12139 ;;		_configFile_write
 12140 ;;		_fat_append_to_file
 12141 ;; This function uses a non-reentrant model
 12142 ;;
 12143                           
 12144                           	psect	text38
 12145  00E60C                     __ptext38:
 12146                           	opt stack 0
 12147  00E60C                     _fat_modify_file:
 12148                           	opt stack 11
 12149                           
 12150                           ;incstack = 0
 12151                           ;fat_modify_file@file_number stored from wreg
 12152  00E60C  0100               	movlb	0	; () banked
 12153  00E60E  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 12154                           
 12155                           ;fat16.c: 965: rootEntry_t root;;fat16.c: 966: uint16_t cluster;;fat16.c: 967: uint32_t 
      +                          position;;fat16.c: 968: uint16_t offset;;fat16.c: 969: uint16_t sector;;fat16.c: 970: ui
      +                          nt16_t number_of_bytes;;fat16.c: 971: uint8_t return_code;;fat16.c: 974: return_code = f
      +                          at_get_file_information(file_number, &root);
 12156  00E610  0EC3               	movlw	low fat_modify_file@root
 12157  00E612  0100               	movlb	0	; () banked
 12158  00E614  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12159  00E616  0E00               	movlw	high fat_modify_file@root
 12160  00E618  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12161  00E61A  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 12162  00E61C  EC3D  F09D         	call	_fat_get_file_information
 12163  00E620  0100               	movlb	0	; () banked
 12164  00E622  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 12165                           
 12166                           ; BSR set to: 0
 12167                           ;fat16.c: 975: if(return_code!=0x00)
 12168  00E624  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 12169  00E626  A4D8               	btfss	status,2,c
 12170  00E628  0012               	return	
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;fat16.c: 979: };fat16.c: 982: if(start_byte>root.fileSize)
 12174                           
 12175                           ; BSR set to: 0
 12176                           
 12177                           ; BSR set to: 0
 12178                           ;fat16.c: 976: {;fat16.c: 978: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 12179  00E62A  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12180  00E62C  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12181  00E62E  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12182  00E630  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12183  00E632  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12184  00E634  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12185  00E636  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12186  00E638  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12187  00E63A  A0D8               	btfss	status,0,c
 12188  00E63C  0012               	return	
 12189                           
 12190                           ; BSR set to: 0
 12191                           ;fat16.c: 986: };fat16.c: 988: if((start_byte+length) > root.fileSize)
 12192                           
 12193                           ; BSR set to: 0
 12194                           
 12195                           ; BSR set to: 0
 12196                           ;fat16.c: 983: {;fat16.c: 985: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 12197  00E63E  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12198  00E640  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 12199  00E642  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12200  00E644  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12201  00E646  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 12202  00E648  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12203  00E64A  0E00               	movlw	0
 12204  00E64C  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 12205  00E64E  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 12206  00E650  0E00               	movlw	0
 12207  00E652  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 12208  00E654  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 12209  00E656  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12210  00E658  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12211  00E65A  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12212  00E65C  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12213  00E65E  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12214  00E660  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12215  00E662  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12216  00E664  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12217  00E666  B0D8               	btfsc	status,0,c
 12218  00E668  D00E               	goto	l1910
 12219                           
 12220                           ; BSR set to: 0
 12221                           ;fat16.c: 989: {;fat16.c: 991: length = root.fileSize - start_byte;
 12222  00E66A  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12223  00E66E  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12224  00E672  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12225  00E674  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12226  00E676  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12227  00E678  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12228  00E67A  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 12229  00E67C  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12230  00E67E  6FA5               	movwf	fat_modify_file@length& (0+255),b
 12231  00E680  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 12232  00E682  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12233  00E684  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 12234  00E686                     l1910:
 12235                           
 12236                           ; BSR set to: 0
 12237                           ;fat16.c: 992: };fat16.c: 995: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 12238                           
 12239                           ; BSR set to: 0
 12240  00E686  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 12241  00E68A  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 12242  00E68E  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12243  00E692  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12244  00E696  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 12245  00E69A  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 12246  00E69E  0E0A               	movlw	10
 12247  00E6A0  D005               	goto	u14480
 12248  00E6A2                     u14485:
 12249  00E6A2  90D8               	bcf	status,0,c
 12250  00E6A4  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 12251  00E6A6  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 12252  00E6A8  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 12253  00E6AA  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 12254  00E6AC                     u14480:
 12255  00E6AC  2EE8               	decfsz	wreg,f,c
 12256  00E6AE  D7F9               	goto	u14485
 12257  00E6B0  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 12258  00E6B4  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 12259  00E6B8  ECA3  F097         	call	__find_nth_cluster	;wreg free
 12260  00E6BC  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 12261  00E6C0  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 12262                           
 12263                           ;fat16.c: 998: position = start_byte & 0xFFFFFE00;
 12264  00E6C4  0E00               	movlw	0
 12265  00E6C6  0100               	movlb	0	; () banked
 12266  00E6C8  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 12267  00E6CA  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12268  00E6CC  0EFE               	movlw	254
 12269  00E6CE  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12270  00E6D0  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12271  00E6D2  0EFF               	movlw	255
 12272  00E6D4  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12273  00E6D6  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12274  00E6D8  0EFF               	movlw	255
 12275  00E6DA  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12276  00E6DC  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12277                           
 12278                           ; BSR set to: 0
 12279                           ;fat16.c: 1001: offset = (uint16_t) (start_byte-position);
 12280  00E6DE  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12281  00E6E2  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12282  00E6E6  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12283  00E6E8  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12284  00E6EA  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12285  00E6EC  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12286  00E6EE  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12287  00E6F0  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12288  00E6F2  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12289  00E6F4  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12290  00E6F6  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12291  00E6F8  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;fat16.c: 1004: position = 0;
 12295  00E6FA  0E00               	movlw	0
 12296  00E6FC  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12297  00E6FE  0E00               	movlw	0
 12298  00E700  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12299  00E702  0E00               	movlw	0
 12300  00E704  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12301  00E706  0E00               	movlw	0
 12302  00E708  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12303                           
 12304                           ;fat16.c: 1005: while(position < length)
 12305  00E70A  D089               	goto	l1911
 12306  00E70C                     
 12307                           ; BSR set to: 0
 12308                           ;fat16.c: 1006: {;fat16.c: 1008: if(offset==512)
 12309                           
 12310                           ; BSR set to: 0
 12311  00E70C  0E02               	movlw	2
 12312  00E70E  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 12313  00E710  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 12314  00E712  A4D8               	btfss	status,2,c
 12315  00E714  D00F               	goto	l1913
 12316                           
 12317                           ; BSR set to: 0
 12318                           ;fat16.c: 1009: {;fat16.c: 1011: cluster = _read_fat(cluster);
 12319  00E716  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 12320  00E71A  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 12321  00E71E  EC6D  F0A2         	call	__read_fat	;wreg free
 12322  00E722  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 12323  00E726  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 12324                           
 12325                           ;fat16.c: 1013: offset = 0;
 12326  00E72A  0E00               	movlw	0
 12327  00E72C  0100               	movlb	0	; () banked
 12328  00E72E  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12329  00E730  0E00               	movlw	0
 12330  00E732  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12331  00E734                     l1913:
 12332                           
 12333                           ; BSR set to: 0
 12334                           ;fat16.c: 1014: };fat16.c: 1017: sector = _data_sector_from_cluster(cluster);
 12335                           
 12336                           ; BSR set to: 0
 12337  00E734  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 12338  00E738  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 12339  00E73C  EC09  F0AB         	call	__data_sector_from_cluster	;wreg free
 12340  00E740  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 12341  00E744  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 12342                           
 12343                           ;fat16.c: 1020: number_of_bytes = 512 - offset;
 12344  00E748  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 12345  00E74C  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 12346  00E750  0100               	movlb	0	; () banked
 12347  00E752  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12348  00E754  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12349  00E756  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12350  00E758  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12351  00E75A  0E00               	movlw	0
 12352  00E75C  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12353  00E75E  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12354  00E760  0E02               	movlw	2
 12355  00E762  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12356  00E764  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12357                           
 12358                           ; BSR set to: 0
 12359                           ;fat16.c: 1021: if(number_of_bytes > (length-position))
 12360  00E766  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12361  00E768  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12362  00E76A  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12363  00E76C  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12364  00E76E  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12365  00E770  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12366  00E772  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 12367  00E776  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 12368  00E77A  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 12369  00E77E  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 12370  00E782  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 12371  00E784  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 12372  00E786  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 12373  00E788  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 12374  00E78A  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 12375  00E78C  0E00               	movlw	0
 12376  00E78E  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 12377  00E790  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 12378  00E792  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 12379  00E794  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12380  00E796  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 12381  00E798  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 12382  00E79A  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12383  00E79C  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 12384  00E79E  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 12385  00E7A0  0E00               	movlw	0
 12386  00E7A2  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 12387  00E7A4  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 12388  00E7A6  0E00               	movlw	0
 12389  00E7A8  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 12390  00E7AA  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 12391  00E7AC  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12392  00E7AE  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 12393  00E7B0  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12394  00E7B2  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 12395  00E7B4  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12396  00E7B6  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 12397  00E7B8  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12398  00E7BA  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 12399  00E7BC  B0D8               	btfsc	status,0,c
 12400  00E7BE  D00E               	goto	l1914
 12401                           
 12402                           ; BSR set to: 0
 12403                           ;fat16.c: 1022: {;fat16.c: 1023: number_of_bytes = length - position;
 12404  00E7C0  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12405  00E7C4  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12406  00E7C8  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12407  00E7CA  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12408  00E7CC  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12409  00E7CE  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12410  00E7D0  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12411  00E7D2  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12412  00E7D4  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12413  00E7D6  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12414  00E7D8  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12415  00E7DA  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12416  00E7DC                     l1914:
 12417                           
 12418                           ; BSR set to: 0
 12419                           ;fat16.c: 1024: };fat16.c: 1027: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 12420                           
 12421                           ; BSR set to: 0
 12422  00E7DC  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 12423  00E7E0  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 12424  00E7E4  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 12425  00E7E8  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 12426  00E7EC  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 12427  00E7F0  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 12428  00E7F4  51BF               	movf	fat_modify_file@position& (0+255),w,b
 12429  00E7F6  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 12430  00E7F8  6F85               	movwf	flash_partial_write@data& (0+255),b
 12431  00E7FA  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 12432  00E7FC  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 12433  00E7FE  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 12434  00E800  ECD2  F09E         	call	_flash_partial_write	;wreg free
 12435                           
 12436                           ;fat16.c: 1030: position += number_of_bytes;
 12437  00E804  0100               	movlb	0	; () banked
 12438  00E806  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12439  00E808  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 12440  00E80A  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12441  00E80C  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 12442  00E80E  0E00               	movlw	0
 12443  00E810  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 12444  00E812  0E00               	movlw	0
 12445  00E814  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 12446                           
 12447                           ; BSR set to: 0
 12448                           ;fat16.c: 1031: offset += number_of_bytes;
 12449  00E816  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12450  00E818  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 12451  00E81A  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12452  00E81C  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 12453  00E81E                     l1911:
 12454                           
 12455                           ; BSR set to: 0
 12456                           
 12457                           ; BSR set to: 0
 12458  00E81E  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12459  00E820  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12460  00E822  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12461  00E824  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12462  00E826  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12463  00E828  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12464  00E82A  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12465  00E82C  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 12466  00E82E  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12467  00E830  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 12468  00E832  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12469  00E834  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 12470  00E836  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12471  00E838  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 12472  00E83A  B0D8               	btfsc	status,0,c
 12473  00E83C  0012               	return	
 12474  00E83E  D766               	goto	l1912
 12475  00E840                     __end_of_fat_modify_file:
 12476                           	opt stack 0
 12477                           tblptru	equ	0xFF8
 12478                           tblptrh	equ	0xFF7
 12479                           tblptrl	equ	0xFF6
 12480                           tablat	equ	0xFF5
 12481                           prodh	equ	0xFF4
 12482                           prodl	equ	0xFF3
 12483                           postinc0	equ	0xFEE
 12484                           wreg	equ	0xFE8
 12485                           postdec1	equ	0xFE5
 12486                           plusw1	equ	0xFE3
 12487                           fsr1h	equ	0xFE2
 12488                           fsr1l	equ	0xFE1
 12489                           indf2	equ	0xFDF
 12490                           postinc2	equ	0xFDE
 12491                           plusw2	equ	0xFDB
 12492                           fsr2h	equ	0xFDA
 12493                           fsr2l	equ	0xFD9
 12494                           status	equ	0xFD8
 12495                           
 12496 ;; *************** function _fat_create_file *****************
 12497 ;; Defined at:
 12498 ;;		line 587 in file "fat16.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;  name            2   76[BANK0 ] PTR unsigned char 
 12501 ;;		 -> configFile_used_name(8), 
 12502 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 12503 ;;		 -> configFile_used_extention(3), 
 12504 ;;  size            4   80[BANK0 ] unsigned long 
 12505 ;; Auto vars:     Size  Location     Type
 12506 ;;  root_entry     32   93[BANK0 ] struct .
 12507 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 12508 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 12509 ;;  file_number     1   92[BANK0 ] unsigned char 
 12510 ;; Return value:  Size  Location     Type
 12511 ;;                  1    wreg      unsigned char 
 12512 ;; Registers used:
 12513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12514 ;; Tracked objects:
 12515 ;;		On entry : 0/0
 12516 ;;		On exit  : 0/0
 12517 ;;		Unchanged: 0/0
 12518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12519 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12520 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12521 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12522 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12523 ;;Total ram usage:       49 bytes
 12524 ;; Hardware stack levels used:    1
 12525 ;; Hardware stack levels required when called:   17
 12526 ;; This function calls:
 12527 ;;		__get_available_root_entry
 12528 ;;		__get_date
 12529 ;;		__get_time
 12530 ;;		__make_cluster_chain
 12531 ;;		__write_root
 12532 ;;		_fat_find_file
 12533 ;;		_memcpy
 12534 ;; This function is called by:
 12535 ;;		_configFile_write
 12536 ;;		_fat_copy_file
 12537 ;; This function uses a non-reentrant model
 12538 ;;
 12539                           
 12540                           	psect	text39
 12541  01005A                     __ptext39:
 12542                           	opt stack 0
 12543  01005A                     _fat_create_file:
 12544                           	opt stack 11
 12545                           
 12546                           ;fat16.c: 589: rootEntry_t root_entry;;fat16.c: 590: uint8_t file_number;;fat16.c: 591: 
      +                          uint16_t number_of_clusters;;fat16.c: 592: uint16_t first_cluster;;fat16.c: 596: if(fat_
      +                          find_file(name, extension) != 0xFF)
 12547                           
 12548                           ; BSR set to: 0
 12549                           ;incstack = 0
 12550  01005A  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 12551  01005E  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 12552  010062  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 12553  010066  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 12554  01006A  EC3B  F08C         	call	_fat_find_file	;wreg free
 12555  01006E  0AFF               	xorlw	255
 12556  010070  B4D8               	btfsc	status,2,c
 12557  010072  D002               	goto	l1849
 12558                           
 12559                           ;fat16.c: 597: {;fat16.c: 600: return 0xFF;
 12560  010074  0EFF               	movlw	255
 12561  010076  0012               	return	
 12562  010078                     l1849:
 12563                           
 12564                           ;fat16.c: 601: };fat16.c: 605: file_number = _get_available_root_entry();
 12565  010078  EC4F  F0A9         	call	__get_available_root_entry	;wreg free
 12566  01007C  0100               	movlb	0	; () banked
 12567  01007E  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;fat16.c: 606: if(file_number == 0xFF)
 12571  010080  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 12572  010082  A4D8               	btfss	status,2,c
 12573  010084  D002               	goto	l1851
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;fat16.c: 607: {;fat16.c: 610: return 0xFE;
 12577  010086  0EFE               	movlw	254
 12578                           
 12579                           ; BSR set to: 0
 12580  010088  0012               	return	
 12581  01008A                     l1851:
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;fat16.c: 611: };fat16.c: 614: number_of_clusters = (size + 512 - 1) >> 9;
 12585                           
 12586                           ; BSR set to: 0
 12587  01008A  0EFF               	movlw	255
 12588  01008C  25B0               	addwf	fat_create_file@size& (0+255),w,b
 12589  01008E  6FB4               	movwf	??_fat_create_file& (0+255),b
 12590  010090  0E01               	movlw	1
 12591  010092  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 12592  010094  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 12593  010096  0E00               	movlw	0
 12594  010098  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 12595  01009A  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 12596  01009C  0E00               	movlw	0
 12597  01009E  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 12598  0100A0  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 12599  0100A2  0E0A               	movlw	10
 12600  0100A4  D005               	goto	u14370
 12601  0100A6                     u14375:
 12602  0100A6  90D8               	bcf	status,0,c
 12603  0100A8  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 12604  0100AA  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 12605  0100AC  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 12606  0100AE  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 12607  0100B0                     u14370:
 12608  0100B0  2EE8               	decfsz	wreg,f,c
 12609  0100B2  D7F9               	goto	u14375
 12610  0100B4  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 12611  0100B8  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 12612                           
 12613                           ; BSR set to: 0
 12614                           ;fat16.c: 617: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 12615  0100BC  0E00               	movlw	0
 12616  0100BE  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 12617  0100C0  0E00               	movlw	0
 12618  0100C2  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 12619  0100C4  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 12620  0100C8  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 12621  0100CC  EC91  F06C         	call	__make_cluster_chain	;wreg free
 12622  0100D0  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 12623  0100D4  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 12624                           
 12625                           ;fat16.c: 620: if(first_cluster == 0xFFFF)
 12626  0100D8  0100               	movlb	0	; () banked
 12627  0100DA  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 12628  0100DC  E105               	bnz	l15432
 12629  0100DE  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 12630  0100E0  A4D8               	btfss	status,2,c
 12631  0100E2  D002               	goto	l1852
 12632                           
 12633                           ; BSR set to: 0
 12634                           ;fat16.c: 621: {;fat16.c: 624: return 0xFD;
 12635  0100E4  0EFD               	movlw	253
 12636                           
 12637                           ; BSR set to: 0
 12638  0100E6  0012               	return	
 12639  0100E8                     l1852:
 12640  0100E8                     l15432:
 12641                           
 12642                           ; BSR set to: 0
 12643                           ;fat16.c: 625: };fat16.c: 628: memcpy(root_entry.fileName, name, 8);
 12644  0100E8  0EBD               	movlw	low fat_create_file@root_entry
 12645  0100EA  6F60               	movwf	memcpy@d1& (0+255),b
 12646  0100EC  0E00               	movlw	high fat_create_file@root_entry
 12647  0100EE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12648  0100F0  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 12649  0100F4  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 12650  0100F8  0E00               	movlw	0
 12651  0100FA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12652  0100FC  0E08               	movlw	8
 12653  0100FE  6F64               	movwf	memcpy@n& (0+255),b
 12654  010100  ECCF  F0A0         	call	_memcpy	;wreg free
 12655                           
 12656                           ;fat16.c: 629: memcpy(root_entry.fileExtension, extension, 3);
 12657  010104  0EC5               	movlw	low (fat_create_file@root_entry+8)
 12658  010106  0100               	movlb	0	; () banked
 12659  010108  6F60               	movwf	memcpy@d1& (0+255),b
 12660  01010A  0E00               	movlw	high (fat_create_file@root_entry+8)
 12661  01010C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12662  01010E  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 12663  010112  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 12664  010116  0E00               	movlw	0
 12665  010118  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12666  01011A  0E03               	movlw	3
 12667  01011C  6F64               	movwf	memcpy@n& (0+255),b
 12668  01011E  ECCF  F0A0         	call	_memcpy	;wreg free
 12669                           
 12670                           ;fat16.c: 630: root_entry.attributes = 0x00;
 12671  010122  0E00               	movlw	0
 12672  010124  0100               	movlb	0	; () banked
 12673  010126  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 12674                           
 12675                           ; BSR set to: 0
 12676                           ;fat16.c: 631: root_entry.reserved1 = 0x00;
 12677  010128  0E00               	movlw	0
 12678  01012A  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 12679                           
 12680                           ; BSR set to: 0
 12681                           ;fat16.c: 632: root_entry.secondFractions = 0x00;
 12682  01012C  0E00               	movlw	0
 12683  01012E  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 12684                           
 12685                           ; BSR set to: 0
 12686                           ;fat16.c: 633: root_entry.createdTime = _get_time();
 12687  010130  EC20  F0AB         	call	__get_time	;wreg free
 12688  010134  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 12689  010138  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 12690                           
 12691                           ;fat16.c: 634: root_entry.createdDate = _get_date();
 12692  01013C  EC26  F0AB         	call	__get_date	;wreg free
 12693  010140  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 12694  010144  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 12695                           
 12696                           ;fat16.c: 635: root_entry.lastAccessDate = root_entry.createdDate;
 12697  010148  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 12698  01014C  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 12699                           
 12700                           ;fat16.c: 636: root_entry.reserved2 = 0x00;
 12701  010150  0E00               	movlw	0
 12702  010152  0100               	movlb	0	; () banked
 12703  010154  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 12704  010156  0E00               	movlw	0
 12705  010158  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 12706                           
 12707                           ; BSR set to: 0
 12708                           ;fat16.c: 637: root_entry.modifiedTime = root_entry.createdTime;
 12709  01015A  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 12710  01015E  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 12711                           
 12712                           ; BSR set to: 0
 12713                           ;fat16.c: 638: root_entry.modifiedDate = root_entry.createdDate;
 12714  010162  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 12715  010166  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 12716                           
 12717                           ; BSR set to: 0
 12718                           ;fat16.c: 639: root_entry.firstCluster = first_cluster;
 12719  01016A  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 12720  01016E  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 12721                           
 12722                           ; BSR set to: 0
 12723                           ;fat16.c: 640: root_entry.fileSize = size;
 12724  010172  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 12725  010176  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 12726  01017A  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 12727  01017E  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;fat16.c: 643: _write_root(file_number, &root_entry);
 12731  010182  0EBD               	movlw	low fat_create_file@root_entry
 12732  010184  6F88               	movwf	__write_root@data& (0+255),b
 12733  010186  0E00               	movlw	high fat_create_file@root_entry
 12734  010188  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12735  01018A  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 12736  01018C  EC5F  F0A5         	call	__write_root
 12737                           
 12738                           ;fat16.c: 645: return file_number;
 12739  010190  0100               	movlb	0	; () banked
 12740  010192  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 12741  010194  0012               	return	
 12742  010196                     __end_of_fat_create_file:
 12743                           	opt stack 0
 12744                           tblptru	equ	0xFF8
 12745                           tblptrh	equ	0xFF7
 12746                           tblptrl	equ	0xFF6
 12747                           tablat	equ	0xFF5
 12748                           prodh	equ	0xFF4
 12749                           prodl	equ	0xFF3
 12750                           postinc0	equ	0xFEE
 12751                           wreg	equ	0xFE8
 12752                           postdec1	equ	0xFE5
 12753                           plusw1	equ	0xFE3
 12754                           fsr1h	equ	0xFE2
 12755                           fsr1l	equ	0xFE1
 12756                           indf2	equ	0xFDF
 12757                           postinc2	equ	0xFDE
 12758                           plusw2	equ	0xFDB
 12759                           fsr2h	equ	0xFDA
 12760                           fsr2l	equ	0xFD9
 12761                           status	equ	0xFD8
 12762                           
 12763 ;; *************** function __write_root *****************
 12764 ;; Defined at:
 12765 ;;		line 474 in file "fat16.c"
 12766 ;; Parameters:    Size  Location     Type
 12767 ;;  file_number     1    wreg     unsigned char 
 12768 ;;  data            2   40[BANK0 ] PTR struct .
 12769 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 12770 ;; Auto vars:     Size  Location     Type
 12771 ;;  file_number     1   46[BANK0 ] unsigned char 
 12772 ;;  offset          2   44[BANK0 ] unsigned int 
 12773 ;;  sector          2   42[BANK0 ] unsigned int 
 12774 ;; Return value:  Size  Location     Type
 12775 ;;                  1    wreg      void 
 12776 ;; Registers used:
 12777 ;;		wreg, status,2, status,0, cstack
 12778 ;; Tracked objects:
 12779 ;;		On entry : 0/0
 12780 ;;		On exit  : 0/0
 12781 ;;		Unchanged: 0/0
 12782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12783 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12784 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12786 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12787 ;;Total ram usage:        7 bytes
 12788 ;; Hardware stack levels used:    1
 12789 ;; Hardware stack levels required when called:   15
 12790 ;; This function calls:
 12791 ;;		__offset_from_file_number
 12792 ;;		__sector_from_file_number
 12793 ;;		_flash_partial_write
 12794 ;; This function is called by:
 12795 ;;		_fat_create_file
 12796 ;;		_fat_resize_file
 12797 ;;		_fat_rename_file
 12798 ;; This function uses a non-reentrant model
 12799 ;;
 12800                           
 12801                           	psect	text40
 12802  014ABE                     __ptext40:
 12803                           	opt stack 0
 12804  014ABE                     __write_root:
 12805                           	opt stack 12
 12806                           
 12807                           ;incstack = 0
 12808                           ;__write_root@file_number stored from wreg
 12809  014ABE  0100               	movlb	0	; () banked
 12810  014AC0  6F8E               	movwf	__write_root@file_number& (0+255),b
 12811                           
 12812                           ;fat16.c: 476: uint16_t sector;;fat16.c: 477: uint16_t offset;;fat16.c: 480: sector = _s
      +                          ector_from_file_number(file_number);
 12813  014AC2  0100               	movlb	0	; () banked
 12814  014AC4  518E               	movf	__write_root@file_number& (0+255),w,b
 12815  014AC6  EC6A  F0A8         	call	__sector_from_file_number
 12816  014ACA  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 12817  014ACE  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 12818                           
 12819                           ;fat16.c: 481: offset = _offset_from_file_number(file_number);
 12820  014AD2  0100               	movlb	0	; () banked
 12821  014AD4  518E               	movf	__write_root@file_number& (0+255),w,b
 12822  014AD6  EC64  F0A9         	call	__offset_from_file_number
 12823  014ADA  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 12824  014ADE  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 12825                           
 12826                           ;fat16.c: 484: flash_partial_write(sector, offset, 32, data);
 12827  014AE2  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 12828  014AE6  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 12829  014AEA  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 12830  014AEE  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 12831  014AF2  0E00               	movlw	0
 12832  014AF4  0100               	movlb	0	; () banked
 12833  014AF6  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 12834  014AF8  0E20               	movlw	32
 12835  014AFA  6F83               	movwf	flash_partial_write@length& (0+255),b
 12836  014AFC  C088  F085         	movff	__write_root@data,flash_partial_write@data
 12837  014B00  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 12838  014B04  ECD2  F09E         	call	_flash_partial_write	;wreg free
 12839  014B08  0012               	return		;funcret
 12840  014B0A                     __end_of__write_root:
 12841                           	opt stack 0
 12842                           tblptru	equ	0xFF8
 12843                           tblptrh	equ	0xFF7
 12844                           tblptrl	equ	0xFF6
 12845                           tablat	equ	0xFF5
 12846                           prodh	equ	0xFF4
 12847                           prodl	equ	0xFF3
 12848                           postinc0	equ	0xFEE
 12849                           wreg	equ	0xFE8
 12850                           postdec1	equ	0xFE5
 12851                           plusw1	equ	0xFE3
 12852                           fsr1h	equ	0xFE2
 12853                           fsr1l	equ	0xFE1
 12854                           indf2	equ	0xFDF
 12855                           postinc2	equ	0xFDE
 12856                           plusw2	equ	0xFDB
 12857                           fsr2h	equ	0xFDA
 12858                           fsr2l	equ	0xFD9
 12859                           status	equ	0xFD8
 12860                           
 12861 ;; *************** function _flash_partial_write *****************
 12862 ;; Defined at:
 12863 ;;		line 460 in file "flash.c"
 12864 ;; Parameters:    Size  Location     Type
 12865 ;;  page            2   31[BANK0 ] unsigned int 
 12866 ;;  start           2   33[BANK0 ] unsigned int 
 12867 ;;  length          2   35[BANK0 ] unsigned int 
 12868 ;;  data            2   37[BANK0 ] PTR unsigned char 
 12869 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 12870 ;;		 -> _delete_root@deleted_value(1), 
 12871 ;; Auto vars:     Size  Location     Type
 12872 ;;  match           1   39[BANK0 ] enum E7013
 12873 ;; Return value:  Size  Location     Type
 12874 ;;                  1    wreg      void 
 12875 ;; Registers used:
 12876 ;;		wreg, status,2, status,0, cstack
 12877 ;; Tracked objects:
 12878 ;;		On entry : 0/0
 12879 ;;		On exit  : 0/0
 12880 ;;		Unchanged: 0/0
 12881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12882 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12883 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12885 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12886 ;;Total ram usage:        9 bytes
 12887 ;; Hardware stack levels used:    1
 12888 ;; Hardware stack levels required when called:   14
 12889 ;; This function calls:
 12890 ;;		__flash_compare_page_to_buffer
 12891 ;;		__flash_copy_page_to_buffer
 12892 ;;		__flash_is_busy
 12893 ;;		__flash_write_page_from_buffer
 12894 ;;		__flash_write_to_buffer
 12895 ;; This function is called by:
 12896 ;;		__write_root
 12897 ;;		_fat_modify_file
 12898 ;;		__delete_root
 12899 ;; This function uses a non-reentrant model
 12900 ;;
 12901                           
 12902                           	psect	text41
 12903  013DA4                     __ptext41:
 12904                           	opt stack 0
 12905  013DA4                     _flash_partial_write:
 12906                           	opt stack 12
 12907                           
 12908                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 12909                           
 12910                           ;incstack = 0
 12911  013DA4  EC13  F0AA         	call	__flash_is_busy	;wreg free
 12912  013DA8  0900               	iorlw	0
 12913  013DAA  A4D8               	btfss	status,2,c
 12914  013DAC  D7FB               	goto	_flash_partial_write
 12915                           
 12916                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 12917  013DAE  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 12918  013DB2  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 12919  013DB6  0E00               	movlw	0
 12920  013DB8  0100               	movlb	0	; () banked
 12921  013DBA  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 12922  013DBC  EC8C  F0A1         	call	__flash_copy_page_to_buffer	;wreg free
 12923                           
 12924                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 12925  013DC0  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 12926  013DC4  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 12927  013DC8  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 12928  013DCC  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 12929  013DD0  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 12930  013DD4  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 12931  013DD8  0E00               	movlw	0
 12932  013DDA  0100               	movlb	0	; () banked
 12933  013DDC  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 12934  013DDE  EC47  F0A4         	call	__flash_write_to_buffer	;wreg free
 12935                           
 12936                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 12937  013DE2  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 12938  013DE6  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 12939  013DEA  0E00               	movlw	0
 12940  013DEC  0100               	movlb	0	; () banked
 12941  013DEE  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 12942  013DF0  ECFF  F09C         	call	__flash_compare_page_to_buffer	;wreg free
 12943  013DF4  0100               	movlb	0	; () banked
 12944  013DF6  6F87               	movwf	flash_partial_write@match& (0+255),b
 12945                           
 12946                           ; BSR set to: 0
 12947                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 12948  013DF8  0587               	decf	flash_partial_write@match& (0+255),w,b
 12949  013DFA  A4D8               	btfss	status,2,c
 12950  013DFC  0012               	return	
 12951                           
 12952                           ; BSR set to: 0
 12953                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 12954  013DFE  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 12955  013E02  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 12956  013E06  0E00               	movlw	0
 12957  013E08  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 12958  013E0A  EC13  F0A2         	call	__flash_write_page_from_buffer	;wreg free
 12959  013E0E  0012               	return	
 12960  013E10                     __end_of_flash_partial_write:
 12961                           	opt stack 0
 12962                           tblptru	equ	0xFF8
 12963                           tblptrh	equ	0xFF7
 12964                           tblptrl	equ	0xFF6
 12965                           tablat	equ	0xFF5
 12966                           prodh	equ	0xFF4
 12967                           prodl	equ	0xFF3
 12968                           postinc0	equ	0xFEE
 12969                           wreg	equ	0xFE8
 12970                           postdec1	equ	0xFE5
 12971                           plusw1	equ	0xFE3
 12972                           fsr1h	equ	0xFE2
 12973                           fsr1l	equ	0xFE1
 12974                           indf2	equ	0xFDF
 12975                           postinc2	equ	0xFDE
 12976                           plusw2	equ	0xFDB
 12977                           fsr2h	equ	0xFDA
 12978                           fsr2l	equ	0xFD9
 12979                           status	equ	0xFD8
 12980                           
 12981 ;; *************** function __flash_copy_page_to_buffer *****************
 12982 ;; Defined at:
 12983 ;;		line 154 in file "flash.c"
 12984 ;; Parameters:    Size  Location     Type
 12985 ;;  page            2   19[BANK0 ] unsigned int 
 12986 ;;  buffer          1   21[BANK0 ] enum E7009
 12987 ;; Auto vars:     Size  Location     Type
 12988 ;;  command         4   25[BANK0 ] unsigned char [4]
 12989 ;; Return value:  Size  Location     Type
 12990 ;;                  1    wreg      void 
 12991 ;; Registers used:
 12992 ;;		wreg, status,2, status,0, cstack
 12993 ;; Tracked objects:
 12994 ;;		On entry : 0/0
 12995 ;;		On exit  : 0/0
 12996 ;;		Unchanged: 0/0
 12997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12998 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12999 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13000 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13001 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13002 ;;Total ram usage:       10 bytes
 13003 ;; Hardware stack levels used:    1
 13004 ;; Hardware stack levels required when called:   13
 13005 ;; This function calls:
 13006 ;;		__flash_is_busy
 13007 ;;		_spi_tx
 13008 ;; This function is called by:
 13009 ;;		_flash_partial_write
 13010 ;;		_flash_copy_page_to_buffer
 13011 ;; This function uses a non-reentrant model
 13012 ;;
 13013                           
 13014                           	psect	text42
 13015  014318                     __ptext42:
 13016                           	opt stack 0
 13017  014318                     __flash_copy_page_to_buffer:
 13018                           	opt stack 12
 13019                           
 13020                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 13021                           
 13022                           ;incstack = 0
 13023  014318  EC13  F0AA         	call	__flash_is_busy	;wreg free
 13024  01431C  0900               	iorlw	0
 13025  01431E  A4D8               	btfss	status,2,c
 13026  014320  D7FB               	goto	__flash_copy_page_to_buffer
 13027                           
 13028                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 13029  014322  0100               	movlb	0	; () banked
 13030  014324  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13031  014326  A4D8               	btfss	status,2,c
 13032  014328  D002               	goto	l1540
 13033                           
 13034                           ; BSR set to: 0
 13035                           ;flash.c: 163: command[0] = 0x53;
 13036  01432A  0E53               	movlw	83
 13037  01432C  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13038  01432E                     l1540:
 13039                           
 13040                           ; BSR set to: 0
 13041                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 13042                           
 13043                           ; BSR set to: 0
 13044  01432E  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13045  014330  A4D8               	btfss	status,2,c
 13046  014332  D002               	goto	l1541
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;flash.c: 165: command[0] = 0x55;
 13050  014334  0E55               	movlw	85
 13051  014336  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13052  014338                     l1541:
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 13056                           
 13057                           ; BSR set to: 0
 13058  014338  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 13059  01433C  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 13060  014340  0E07               	movlw	7
 13061  014342  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 13062  014344                     u11645:
 13063  014344  90D8               	bcf	status,0,c
 13064  014346  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 13065  014348  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 13066  01434A  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 13067  01434C  D7FB               	goto	u11645
 13068  01434E  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 13069  014350  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 13073  014352  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13074  014354  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13075  014356  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 13076                           
 13077                           ;flash.c: 169: command[3] = 0x00;
 13078  014358  0E00               	movlw	0
 13079  01435A  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;flash.c: 172: spi_tx(command, 4);
 13083  01435C  0E79               	movlw	low __flash_copy_page_to_buffer@command
 13084  01435E  6F60               	movwf	spi_tx@data& (0+255),b
 13085  014360  0E00               	movlw	high __flash_copy_page_to_buffer@command
 13086  014362  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 13087  014364  0E00               	movlw	0
 13088  014366  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 13089  014368  0E04               	movlw	4
 13090  01436A  6F62               	movwf	spi_tx@length& (0+255),b
 13091  01436C  EC40  F0A2         	call	_spi_tx	;wreg free
 13092  014370  0012               	return		;funcret
 13093  014372                     __end_of__flash_copy_page_to_buffer:
 13094                           	opt stack 0
 13095                           tblptru	equ	0xFF8
 13096                           tblptrh	equ	0xFF7
 13097                           tblptrl	equ	0xFF6
 13098                           tablat	equ	0xFF5
 13099                           prodh	equ	0xFF4
 13100                           prodl	equ	0xFF3
 13101                           postinc0	equ	0xFEE
 13102                           wreg	equ	0xFE8
 13103                           postdec1	equ	0xFE5
 13104                           plusw1	equ	0xFE3
 13105                           fsr1h	equ	0xFE2
 13106                           fsr1l	equ	0xFE1
 13107                           indf2	equ	0xFDF
 13108                           postinc2	equ	0xFDE
 13109                           plusw2	equ	0xFDB
 13110                           fsr2h	equ	0xFDA
 13111                           fsr2l	equ	0xFD9
 13112                           status	equ	0xFD8
 13113                           
 13114 ;; *************** function __make_cluster_chain *****************
 13115 ;; Defined at:
 13116 ;;		line 214 in file "fat16.c"
 13117 ;; Parameters:    Size  Location     Type
 13118 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 13119 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 13120 ;; Auto vars:     Size  Location     Type
 13121 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 13122 ;;  offset          2   72[BANK0 ] unsigned int 
 13123 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 13124 ;;  sector          2   68[BANK0 ] unsigned int 
 13125 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 13126 ;;  different_se    2   63[BANK0 ] unsigned int 
 13127 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 13128 ;;  next_offset     2   59[BANK0 ] unsigned int 
 13129 ;;  data_changed    1   65[BANK0 ] unsigned char 
 13130 ;; Return value:  Size  Location     Type
 13131 ;;                  2   53[BANK0 ] unsigned int 
 13132 ;; Registers used:
 13133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13134 ;; Tracked objects:
 13135 ;;		On entry : 0/0
 13136 ;;		On exit  : 0/0
 13137 ;;		Unchanged: 0/0
 13138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13139 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13140 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13141 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13142 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13143 ;;Total ram usage:       23 bytes
 13144 ;; Hardware stack levels used:    1
 13145 ;; Hardware stack levels required when called:   16
 13146 ;; This function calls:
 13147 ;;		__fat_offset_from_cluster
 13148 ;;		__fat_sector_from_cluster
 13149 ;;		__get_available_cluster
 13150 ;;		__get_available_offset_from_buffer
 13151 ;;		__read_value_from_offset
 13152 ;;		__write_value_to_offset
 13153 ;;		_flash_sector_read
 13154 ;;		_flash_sector_write
 13155 ;; This function is called by:
 13156 ;;		_fat_create_file
 13157 ;;		_fat_resize_file
 13158 ;;		_fat_delete_file
 13159 ;; This function uses a non-reentrant model
 13160 ;;
 13161                           
 13162                           	psect	text43
 13163  00D922                     __ptext43:
 13164                           	opt stack 0
 13165  00D922                     __make_cluster_chain:
 13166                           	opt stack 11
 13167                           
 13168                           ;fat16.c: 216: uint16_t remaining_clusters;;fat16.c: 217: uint16_t minimum_sector;;fat16
      +                          .c: 218: uint16_t sector;;fat16.c: 219: uint16_t offset;;fat16.c: 220: uint16_t next_off
      +                          set;;fat16.c: 221: uint16_t sector_in_buffer;;fat16.c: 222: uint16_t next_cluster;;fat16
      +                          .c: 223: uint16_t different_sector_cluster;;fat16.c: 224: uint8_t data_changed;;fat16.c:
      +                           227: sector_in_buffer = 0;
 13169                           
 13170                           ;incstack = 0
 13171  00D922  0E00               	movlw	0
 13172  00D924  0100               	movlb	0	; () banked
 13173  00D926  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 13174  00D928  0E00               	movlw	0
 13175  00D92A  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 13176                           
 13177                           ; BSR set to: 0
 13178                           ;fat16.c: 228: remaining_clusters = number_of_clusters;
 13179  00D92C  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 13180  00D930  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 13181                           
 13182                           ;fat16.c: 229: minimum_sector = 2;
 13183  00D934  0E00               	movlw	0
 13184  00D936  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 13185  00D938  0E02               	movlw	2
 13186  00D93A  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 13187                           
 13188                           ;fat16.c: 230: data_changed = 0;
 13189  00D93C  0E00               	movlw	0
 13190  00D93E  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13191                           
 13192                           ; BSR set to: 0
 13193                           ;fat16.c: 233: if((first_cluster==0) && (number_of_clusters>0))
 13194  00D940  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13195  00D942  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13196  00D944  A4D8               	btfss	status,2,c
 13197  00D946  D024               	goto	l1774
 13198                           
 13199                           ; BSR set to: 0
 13200  00D948  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13201  00D94A  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13202  00D94C  B4D8               	btfsc	status,2,c
 13203  00D94E  D020               	goto	l1774
 13204                           
 13205                           ; BSR set to: 0
 13206                           ;fat16.c: 234: {;fat16.c: 235: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 13207  00D950  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13208  00D954  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13209  00D958  0E00               	movlw	0
 13210  00D95A  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 13211  00D95C  0E00               	movlw	0
 13212  00D95E  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 13213  00D960  ECD5  F091         	call	__get_available_cluster	;wreg free
 13214  00D964  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 13215  00D968  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 13216                           
 13217                           ;fat16.c: 237: minimum_sector = _fat_sector_from_cluster(first_cluster);
 13218  00D96C  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 13219  00D970  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 13220  00D974  EC96  F0AA         	call	__fat_sector_from_cluster	;wreg free
 13221  00D978  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13222  00D97C  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13223                           
 13224                           ;fat16.c: 238: if(first_cluster == 0)
 13225  00D980  0100               	movlb	0	; () banked
 13226  00D982  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13227  00D984  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13228  00D986  A4D8               	btfss	status,2,c
 13229  00D988  D003               	goto	l1774
 13230                           
 13231                           ; BSR set to: 0
 13232                           ;fat16.c: 239: {;fat16.c: 240: return 0xFFFF;
 13233  00D98A  6995               	setf	?__make_cluster_chain& (0+255),b
 13234  00D98C  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13235  00D98E  0012               	return	
 13236  00D990                     l1774:
 13237                           
 13238                           ; BSR set to: 0
 13239                           ;fat16.c: 241: };fat16.c: 242: };fat16.c: 243: next_cluster = first_cluster;
 13240                           
 13241                           ; BSR set to: 0
 13242  00D990  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 13243  00D994  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 13244                           
 13245                           ;fat16.c: 246: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 13246  00D998  D103               	goto	l1791
 13247  00D99A                     
 13248                           ; BSR set to: 0
 13249                           ;fat16.c: 247: {;fat16.c: 260: sector = _fat_sector_from_cluster(next_cluster);
 13250                           
 13251                           ; BSR set to: 0
 13252  00D99A  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 13253  00D99E  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 13254  00D9A2  EC96  F0AA         	call	__fat_sector_from_cluster	;wreg free
 13255  00D9A6  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 13256  00D9AA  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 13257                           
 13258                           ;fat16.c: 261: offset = _fat_offset_from_cluster(next_cluster);
 13259  00D9AE  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 13260  00D9B2  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 13261  00D9B6  ECA3  F0AA         	call	__fat_offset_from_cluster	;wreg free
 13262  00D9BA  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 13263  00D9BE  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 13264                           
 13265                           ;fat16.c: 264: if(sector != sector_in_buffer)
 13266  00D9C2  0100               	movlb	0	; () banked
 13267  00D9C4  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13268  00D9C6  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 13269  00D9C8  E104               	bnz	u13230
 13270  00D9CA  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13271  00D9CC  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 13272  00D9CE  B4D8               	btfsc	status,2,c
 13273  00D9D0  D037               	goto	l1778
 13274  00D9D2                     u13230:
 13275                           
 13276                           ; BSR set to: 0
 13277                           ;fat16.c: 265: {;fat16.c: 267: if(data_changed)
 13278  00D9D2  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13279  00D9D4  B4D8               	btfsc	status,2,c
 13280  00D9D6  D00A               	goto	l1779
 13281                           
 13282                           ; BSR set to: 0
 13283                           ;fat16.c: 268: {;fat16.c: 269: flash_sector_write(sector_in_buffer, buffer);
 13284  00D9D8  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13285  00D9DC  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13286  00D9E0  0E00               	movlw	low _buffer
 13287  00D9E2  6F81               	movwf	flash_sector_write@data& (0+255),b
 13288  00D9E4  0E0A               	movlw	high _buffer
 13289  00D9E6  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13290  00D9E8  ECE8  F0A4         	call	_flash_sector_write	;wreg free
 13291  00D9EC                     l1779:
 13292                           
 13293                           ;fat16.c: 270: };fat16.c: 273: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 13294  00D9EC  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13295  00D9F0  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13296  00D9F4  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 13297  00D9F8  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 13298  00D9FC  ECD5  F091         	call	__get_available_cluster	;wreg free
 13299  00DA00  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 13300  00DA04  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 13301                           
 13302                           ;fat16.c: 276: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 13303  00DA08  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 13304  00DA0C  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 13305  00DA10  EC96  F0AA         	call	__fat_sector_from_cluster	;wreg free
 13306  00DA14  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13307  00DA18  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13308                           
 13309                           ;fat16.c: 279: flash_sector_read(sector, buffer);
 13310  00DA1C  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 13311  00DA20  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 13312  00DA24  0E00               	movlw	low _buffer
 13313  00DA26  0100               	movlb	0	; () banked
 13314  00DA28  6F89               	movwf	flash_sector_read@data& (0+255),b
 13315  00DA2A  0E0A               	movlw	high _buffer
 13316  00DA2C  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13317  00DA2E  ECB5  F0A9         	call	_flash_sector_read	;wreg free
 13318                           
 13319                           ;fat16.c: 280: sector_in_buffer = sector;
 13320  00DA32  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 13321  00DA36  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 13322                           
 13323                           ;fat16.c: 281: data_changed = 0;
 13324  00DA3A  0E00               	movlw	0
 13325  00DA3C  0100               	movlb	0	; () banked
 13326  00DA3E  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13327  00DA40                     l1778:
 13328                           
 13329                           ; BSR set to: 0
 13330                           ;fat16.c: 282: };fat16.c: 285: if(remaining_clusters > 1)
 13331                           
 13332                           ; BSR set to: 0
 13333  00DA40  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13334  00DA42  E104               	bnz	u13250
 13335  00DA44  0E02               	movlw	2
 13336  00DA46  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13337  00DA48  A0D8               	btfss	status,0,c
 13338  00DA4A  D05E               	goto	l1780
 13339  00DA4C                     u13250:
 13340                           
 13341                           ; BSR set to: 0
 13342                           ;fat16.c: 286: {;fat16.c: 288: next_cluster = _read_value_from_offset(offset, buffer);
 13343  00DA4C  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13344  00DA50  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13345  00DA54  0E00               	movlw	low _buffer
 13346  00DA56  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13347  00DA58  0E0A               	movlw	high _buffer
 13348  00DA5A  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13349  00DA5C  ECD0  F0A5         	call	__read_value_from_offset	;wreg free
 13350  00DA60  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13351  00DA64  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13352                           
 13353                           ;fat16.c: 291: if((next_cluster < 2) || (next_cluster > 8153))
 13354  00DA68  0100               	movlb	0	; () banked
 13355  00DA6A  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13356  00DA6C  E104               	bnz	u13260
 13357  00DA6E  0E02               	movlw	2
 13358  00DA70  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13359  00DA72  A0D8               	btfss	status,0,c
 13360  00DA74  D006               	goto	u13270
 13361  00DA76                     u13260:
 13362                           
 13363                           ; BSR set to: 0
 13364  00DA76  0EDA               	movlw	218
 13365  00DA78  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13366  00DA7A  0E1F               	movlw	31
 13367  00DA7C  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13368  00DA7E  A0D8               	btfss	status,0,c
 13369  00DA80  D06B               	goto	l1790
 13370  00DA82                     u13270:
 13371                           
 13372                           ; BSR set to: 0
 13373                           ;fat16.c: 292: {;fat16.c: 294: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 13374                           
 13375                           ; BSR set to: 0
 13376  00DA82  0E02               	movlw	2
 13377  00DA84  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 13378  00DA86  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13379  00DA88  0E00               	movlw	0
 13380  00DA8A  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 13381  00DA8C  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13382  00DA8E  0E00               	movlw	low _buffer
 13383  00DA90  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13384  00DA92  0E0A               	movlw	high _buffer
 13385  00DA94  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13386  00DA96  EC2F  F0A1         	call	__get_available_offset_from_buffer	;wreg free
 13387  00DA9A  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 13388  00DA9E  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 13389                           
 13390                           ;fat16.c: 296: if(next_offset != 0xFFFF)
 13391  00DAA2  0100               	movlb	0	; () banked
 13392  00DAA4  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 13393  00DAA6  E103               	bnz	u13280
 13394  00DAA8  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13395  00DAAA  B4D8               	btfsc	status,2,c
 13396  00DAAC  D013               	goto	l1784
 13397  00DAAE                     u13280:
 13398                           
 13399                           ; BSR set to: 0
 13400                           ;fat16.c: 297: {;fat16.c: 299: next_cluster = sector_in_buffer - 2;
 13401  00DAAE  0EFE               	movlw	254
 13402  00DAB0  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13403  00DAB2  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 13404  00DAB4  0EFF               	movlw	255
 13405  00DAB6  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13406  00DAB8  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13407                           
 13408                           ; BSR set to: 0
 13409                           ;fat16.c: 300: next_cluster <<= 8;
 13410  00DABA  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 13411  00DABC  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13412  00DABE  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 13413                           
 13414                           ; BSR set to: 0
 13415                           ;fat16.c: 301: next_cluster |= (next_offset>>1);
 13416  00DAC0  90D8               	bcf	status,0,c
 13417  00DAC2  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13418  00DAC4  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 13419  00DAC6  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 13420  00DAC8  6F99               	movwf	??__make_cluster_chain& (0+255),b
 13421  00DACA  5199               	movf	??__make_cluster_chain& (0+255),w,b
 13422  00DACC  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 13423  00DACE  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 13424  00DAD0  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 13425                           
 13426                           ;fat16.c: 302: }
 13427  00DAD2  D00B               	goto	l1787
 13428  00DAD4                     l1784:
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;fat16.c: 303: else;fat16.c: 304: {;fat16.c: 305: if(different_sector_cluster == 0x0000)
 13432                           
 13433                           ; BSR set to: 0
 13434  00DAD4  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 13435  00DAD6  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 13436  00DAD8  A4D8               	btfss	status,2,c
 13437  00DADA  D003               	goto	l1786
 13438                           
 13439                           ; BSR set to: 0
 13440                           ;fat16.c: 306: {;fat16.c: 308: return 0xFFFF;
 13441  00DADC  6995               	setf	?__make_cluster_chain& (0+255),b
 13442  00DADE  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13443  00DAE0  0012               	return	
 13444  00DAE2                     l1786:
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;fat16.c: 310: else;fat16.c: 311: {;fat16.c: 313: next_cluster = different_sector_cluste
      +                          r;
 13448  00DAE2  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 13449  00DAE6  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 13450  00DAEA                     l1787:
 13451                           
 13452                           ; BSR set to: 0
 13453                           ;fat16.c: 314: };fat16.c: 315: };fat16.c: 317: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 13454                           
 13455                           ; BSR set to: 0
 13456                           
 13457                           ; BSR set to: 0
 13458  00DAEA  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13459  00DAEE  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13460  00DAF2  0E00               	movlw	low _buffer
 13461  00DAF4  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13462  00DAF6  0E0A               	movlw	high _buffer
 13463  00DAF8  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13464  00DAFA  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 13465  00DAFE  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 13466  00DB02  ECCE  F0A7         	call	__write_value_to_offset	;wreg free
 13467  00DB06  D025               	goto	L90
 13468  00DB08                     l1780:
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;fat16.c: 327: else if(remaining_clusters == 1)
 13472                           
 13473                           ; BSR set to: 0
 13474  00DB08  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13475  00DB0A  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13476  00DB0C  A4D8               	btfss	status,2,c
 13477  00DB0E  D028               	goto	l1789
 13478                           
 13479                           ; BSR set to: 0
 13480                           ;fat16.c: 328: {;fat16.c: 330: next_cluster = _read_value_from_offset(offset, buffer);
 13481  00DB10  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13482  00DB14  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13483  00DB18  0E00               	movlw	low _buffer
 13484  00DB1A  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13485  00DB1C  0E0A               	movlw	high _buffer
 13486  00DB1E  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13487  00DB20  ECD0  F0A5         	call	__read_value_from_offset	;wreg free
 13488  00DB24  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13489  00DB28  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13490                           
 13491                           ;fat16.c: 332: if(next_cluster != 0xFFFF)
 13492  00DB2C  0100               	movlb	0	; () banked
 13493  00DB2E  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 13494  00DB30  E103               	bnz	u13310
 13495  00DB32  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13496  00DB34  B4D8               	btfsc	status,2,c
 13497  00DB36  D010               	goto	l1790
 13498  00DB38                     u13310:
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;fat16.c: 333: {;fat16.c: 335: _write_value_to_offset(offset, buffer, 0xFFFF);
 13502  00DB38  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13503  00DB3C  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13504  00DB40  0E00               	movlw	low _buffer
 13505  00DB42  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13506  00DB44  0E0A               	movlw	high _buffer
 13507  00DB46  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13508  00DB48  0EFF               	movlw	255
 13509  00DB4A  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13510  00DB4C  6964               	setf	__write_value_to_offset@value& (0+255),b
 13511  00DB4E  ECCE  F0A7         	call	__write_value_to_offset	;wreg free
 13512  00DB52                     L90:
 13513                           
 13514                           ;fat16.c: 337: data_changed = 1;
 13515  00DB52  0E01               	movlw	1
 13516  00DB54  0100               	movlb	0	; () banked
 13517  00DB56  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13518  00DB58                     l1790:
 13519                           
 13520                           ; BSR set to: 0
 13521                           ;fat16.c: 338: };fat16.c: 341: --remaining_clusters;
 13522                           
 13523                           ; BSR set to: 0
 13524  00DB58  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 13525  00DB5A  A0D8               	btfss	status,0,c
 13526  00DB5C  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 13527                           
 13528                           ;fat16.c: 342: }
 13529  00DB5E  D020               	goto	l1791
 13530  00DB60                     l1789:
 13531                           
 13532                           ; BSR set to: 0
 13533                           ;fat16.c: 345: else;fat16.c: 346: {;fat16.c: 348: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 13534                           
 13535                           ; BSR set to: 0
 13536  00DB60  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13537  00DB64  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13538  00DB68  0E00               	movlw	low _buffer
 13539  00DB6A  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13540  00DB6C  0E0A               	movlw	high _buffer
 13541  00DB6E  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13542  00DB70  ECD0  F0A5         	call	__read_value_from_offset	;wreg free
 13543  00DB74  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13544  00DB78  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13545                           
 13546                           ;fat16.c: 351: _write_value_to_offset(offset, buffer, 0x0000);
 13547  00DB7C  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13548  00DB80  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13549  00DB84  0E00               	movlw	low _buffer
 13550  00DB86  0100               	movlb	0	; () banked
 13551  00DB88  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13552  00DB8A  0E0A               	movlw	high _buffer
 13553  00DB8C  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13554  00DB8E  0E00               	movlw	0
 13555  00DB90  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13556  00DB92  0E00               	movlw	0
 13557  00DB94  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 13558  00DB96  ECCE  F0A7         	call	__write_value_to_offset	;wreg free
 13559                           
 13560                           ;fat16.c: 353: data_changed = 1;
 13561  00DB9A  0E01               	movlw	1
 13562  00DB9C  0100               	movlb	0	; () banked
 13563  00DB9E  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13564  00DBA0                     l1791:
 13565                           
 13566                           ; BSR set to: 0
 13567                           
 13568                           ; BSR set to: 0
 13569                           
 13570                           ; BSR set to: 0
 13571                           
 13572                           ; BSR set to: 0
 13573  00DBA0  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13574  00DBA2  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13575  00DBA4  A4D8               	btfss	status,2,c
 13576  00DBA6  D6F9               	goto	l1777
 13577                           
 13578                           ; BSR set to: 0
 13579  00DBA8  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13580  00DBAA  E104               	bnz	u13330
 13581  00DBAC  0E02               	movlw	2
 13582  00DBAE  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13583  00DBB0  A0D8               	btfss	status,0,c
 13584  00DBB2  D006               	goto	u13340
 13585  00DBB4                     u13330:
 13586                           
 13587                           ; BSR set to: 0
 13588  00DBB4  0EDA               	movlw	218
 13589  00DBB6  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13590  00DBB8  0E1F               	movlw	31
 13591  00DBBA  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13592  00DBBC  A0D8               	btfss	status,0,c
 13593  00DBBE  D6ED               	goto	l1777
 13594  00DBC0                     u13340:
 13595                           
 13596                           ; BSR set to: 0
 13597                           ;fat16.c: 354: };fat16.c: 356: };fat16.c: 359: if(data_changed)
 13598                           
 13599                           ; BSR set to: 0
 13600                           
 13601                           ; BSR set to: 0
 13602  00DBC0  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13603  00DBC2  B4D8               	btfsc	status,2,c
 13604  00DBC4  D00A               	goto	l1795
 13605                           
 13606                           ; BSR set to: 0
 13607                           ;fat16.c: 360: {;fat16.c: 361: flash_sector_write(sector_in_buffer, buffer);
 13608  00DBC6  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13609  00DBCA  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13610  00DBCE  0E00               	movlw	low _buffer
 13611  00DBD0  6F81               	movwf	flash_sector_write@data& (0+255),b
 13612  00DBD2  0E0A               	movlw	high _buffer
 13613  00DBD4  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13614  00DBD6  ECE8  F0A4         	call	_flash_sector_write	;wreg free
 13615  00DBDA                     l1795:
 13616                           
 13617                           ;fat16.c: 362: };fat16.c: 365: if(number_of_clusters>0)
 13618  00DBDA  0100               	movlb	0	; () banked
 13619  00DBDC  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13620  00DBDE  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13621  00DBE0  B4D8               	btfsc	status,2,c
 13622  00DBE2  D005               	goto	l1796
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;fat16.c: 366: {;fat16.c: 367: return first_cluster;
 13626  00DBE4  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 13627  00DBE8  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 13628                           
 13629                           ; BSR set to: 0
 13630                           ;fat16.c: 368: }
 13631  00DBEC  0012               	return	
 13632  00DBEE                     l1796:
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;fat16.c: 369: else;fat16.c: 370: {;fat16.c: 371: return 0x0000;
 13636                           
 13637                           ; BSR set to: 0
 13638  00DBEE  0E00               	movlw	0
 13639  00DBF0  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 13640  00DBF2  0E00               	movlw	0
 13641  00DBF4  6F95               	movwf	?__make_cluster_chain& (0+255),b
 13642                           
 13643                           ; BSR set to: 0
 13644  00DBF6  0012               	return	
 13645  00DBF8                     __end_of__make_cluster_chain:
 13646                           	opt stack 0
 13647                           tblptru	equ	0xFF8
 13648                           tblptrh	equ	0xFF7
 13649                           tblptrl	equ	0xFF6
 13650                           tablat	equ	0xFF5
 13651                           prodh	equ	0xFF4
 13652                           prodl	equ	0xFF3
 13653                           postinc0	equ	0xFEE
 13654                           wreg	equ	0xFE8
 13655                           postdec1	equ	0xFE5
 13656                           plusw1	equ	0xFE3
 13657                           fsr1h	equ	0xFE2
 13658                           fsr1l	equ	0xFE1
 13659                           indf2	equ	0xFDF
 13660                           postinc2	equ	0xFDE
 13661                           plusw2	equ	0xFDB
 13662                           fsr2h	equ	0xFDA
 13663                           fsr2l	equ	0xFD9
 13664                           status	equ	0xFD8
 13665                           
 13666 ;; *************** function __write_value_to_offset *****************
 13667 ;; Defined at:
 13668 ;;		line 124 in file "fat16.c"
 13669 ;; Parameters:    Size  Location     Type
 13670 ;;  offset          2    0[BANK0 ] unsigned int 
 13671 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 13672 ;;		 -> buffer(512), 
 13673 ;;  value           2    4[BANK0 ] unsigned int 
 13674 ;; Auto vars:     Size  Location     Type
 13675 ;;		None
 13676 ;; Return value:  Size  Location     Type
 13677 ;;                  1    wreg      void 
 13678 ;; Registers used:
 13679 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13680 ;; Tracked objects:
 13681 ;;		On entry : 0/0
 13682 ;;		On exit  : 0/0
 13683 ;;		Unchanged: 0/0
 13684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13685 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13687 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13688 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13689 ;;Total ram usage:        8 bytes
 13690 ;; Hardware stack levels used:    1
 13691 ;; Hardware stack levels required when called:   10
 13692 ;; This function calls:
 13693 ;;		Nothing
 13694 ;; This function is called by:
 13695 ;;		__make_cluster_chain
 13696 ;; This function uses a non-reentrant model
 13697 ;;
 13698                           
 13699                           	psect	text44
 13700  014F9C                     __ptext44:
 13701                           	opt stack 0
 13702  014F9C                     __write_value_to_offset:
 13703                           	opt stack 16
 13704                           
 13705                           ;fat16.c: 126: buffer[offset] = (uint8_t) (value & 0xFF);
 13706                           
 13707                           ; BSR set to: 0
 13708                           ;incstack = 0
 13709  014F9C  0100               	movlb	0	; () banked
 13710  014F9E  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 13711  014FA0  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 13712  014FA2  6ED9               	movwf	fsr2l,c
 13713  014FA4  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 13714  014FA6  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 13715  014FA8  6EDA               	movwf	fsr2h,c
 13716  014FAA  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 13717                           
 13718                           ; BSR set to: 0
 13719                           ;fat16.c: 127: value >>= 8;
 13720  014FAE  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 13721  014FB0  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 13722  014FB2  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;fat16.c: 128: buffer[offset+1] = (uint8_t) (value & 0xFF);
 13726  014FB4  0E01               	movlw	1
 13727  014FB6  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 13728  014FB8  6F66               	movwf	??__write_value_to_offset& (0+255),b
 13729  014FBA  0E00               	movlw	0
 13730  014FBC  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 13731  014FBE  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 13732  014FC0  5166               	movf	??__write_value_to_offset& (0+255),w,b
 13733  014FC2  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 13734  014FC4  6ED9               	movwf	fsr2l,c
 13735  014FC6  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 13736  014FC8  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 13737  014FCA  6EDA               	movwf	fsr2h,c
 13738  014FCC  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 13739                           
 13740                           ; BSR set to: 0
 13741  014FD0  0012               	return		;funcret
 13742  014FD2                     __end_of__write_value_to_offset:
 13743                           	opt stack 0
 13744                           tblptru	equ	0xFF8
 13745                           tblptrh	equ	0xFF7
 13746                           tblptrl	equ	0xFF6
 13747                           tablat	equ	0xFF5
 13748                           prodh	equ	0xFF4
 13749                           prodl	equ	0xFF3
 13750                           postinc0	equ	0xFEE
 13751                           wreg	equ	0xFE8
 13752                           postdec1	equ	0xFE5
 13753                           plusw1	equ	0xFE3
 13754                           fsr1h	equ	0xFE2
 13755                           fsr1l	equ	0xFE1
 13756                           indf2	equ	0xFDF
 13757                           postinc2	equ	0xFDE
 13758                           plusw2	equ	0xFDB
 13759                           fsr2h	equ	0xFDA
 13760                           fsr2l	equ	0xFD9
 13761                           status	equ	0xFD8
 13762                           
 13763 ;; *************** function __get_available_cluster *****************
 13764 ;; Defined at:
 13765 ;;		line 131 in file "fat16.c"
 13766 ;; Parameters:    Size  Location     Type
 13767 ;;  first_sector    2   43[BANK0 ] unsigned int 
 13768 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 13769 ;; Auto vars:     Size  Location     Type
 13770 ;;  sector          2   51[BANK0 ] unsigned int 
 13771 ;;  offset          2   49[BANK0 ] unsigned int 
 13772 ;;  cluster         2   47[BANK0 ] unsigned int 
 13773 ;; Return value:  Size  Location     Type
 13774 ;;                  2   43[BANK0 ] unsigned int 
 13775 ;; Registers used:
 13776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13777 ;; Tracked objects:
 13778 ;;		On entry : 0/0
 13779 ;;		On exit  : 0/0
 13780 ;;		Unchanged: 0/0
 13781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13782 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13783 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13785 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13786 ;;Total ram usage:       10 bytes
 13787 ;; Hardware stack levels used:    1
 13788 ;; Hardware stack levels required when called:   15
 13789 ;; This function calls:
 13790 ;;		__cluster_from_sector_and_offset
 13791 ;;		__get_available_offset_from_buffer
 13792 ;;		_flash_sector_read
 13793 ;; This function is called by:
 13794 ;;		__make_cluster_chain
 13795 ;; This function uses a non-reentrant model
 13796 ;;
 13797                           
 13798                           	psect	text45
 13799  0123AA                     __ptext45:
 13800                           	opt stack 0
 13801  0123AA                     __get_available_cluster:
 13802                           	opt stack 11
 13803                           
 13804                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t sector;;fat16.c: 135: uint16_t o
      +                          ffset;;fat16.c: 138: for (sector=first_sector; sector<=33; ++sector)
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;incstack = 0
 13808  0123AA  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 13809  0123AE  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 13810  0123B2  0100               	movlb	0	; () banked
 13811  0123B4  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 13812  0123B6  E15B               	bnz	l13814
 13813  0123B8  0E22               	movlw	34
 13814  0123BA  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 13815  0123BC  B0D8               	btfsc	status,0,c
 13816  0123BE  D057               	goto	u12680
 13817                           
 13818                           ; BSR set to: 0
 13819                           ;fat16.c: 139: {;fat16.c: 141: if(sector == skip_sector)
 13820                           
 13821                           ; BSR set to: 0
 13822                           
 13823                           ; BSR set to: 0
 13824  0123C0  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 13825  0123C2  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 13826  0123C4  E104               	bnz	l13790
 13827  0123C6  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 13828  0123C8  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 13829  0123CA  B4D8               	btfsc	status,2,c
 13830  0123CC  D04D               	goto	l1762
 13831  0123CE                     l13790:
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;fat16.c: 144: };fat16.c: 147: flash_sector_read(sector, buffer);
 13835  0123CE  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 13836  0123D2  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 13837  0123D6  0E00               	movlw	low _buffer
 13838  0123D8  6F89               	movwf	flash_sector_read@data& (0+255),b
 13839  0123DA  0E0A               	movlw	high _buffer
 13840  0123DC  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13841  0123DE  ECB5  F0A9         	call	_flash_sector_read	;wreg free
 13842                           
 13843                           ;fat16.c: 150: if(sector == 2)
 13844  0123E2  0E02               	movlw	2
 13845  0123E4  0100               	movlb	0	; () banked
 13846  0123E6  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 13847  0123E8  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 13848  0123EA  A4D8               	btfss	status,2,c
 13849  0123EC  D00B               	goto	l1757
 13850                           
 13851                           ; BSR set to: 0
 13852                           ;fat16.c: 151: {;fat16.c: 153: offset = _get_available_offset_from_buffer(4, buffer);
 13853  0123EE  0E00               	movlw	0
 13854  0123F0  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13855  0123F2  0E04               	movlw	4
 13856  0123F4  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13857  0123F6  0E00               	movlw	low _buffer
 13858  0123F8  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13859  0123FA  0E0A               	movlw	high _buffer
 13860  0123FC  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13861  0123FE  EC2F  F0A1         	call	__get_available_offset_from_buffer	;wreg free
 13862  012402  D00B               	goto	L1
 13863  012404                     l1757:
 13864                           
 13865                           ;fat16.c: 155: else;fat16.c: 156: {;fat16.c: 157: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 13866  012404  0E00               	movlw	0
 13867  012406  0100               	movlb	0	; () banked
 13868  012408  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13869  01240A  0E00               	movlw	0
 13870  01240C  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13871  01240E  0E00               	movlw	low _buffer
 13872  012410  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13873  012412  0E0A               	movlw	high _buffer
 13874  012414  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13875  012416  EC2F  F0A1         	call	__get_available_offset_from_buffer	;wreg free
 13876  01241A                     L1:
 13877  01241A  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 13878  01241E  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 13879                           
 13880                           ;fat16.c: 158: };fat16.c: 161: if(offset != 0xFFFF)
 13881  012422  0100               	movlb	0	; () banked
 13882  012424  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 13883  012426  E103               	bnz	u12660
 13884  012428  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 13885  01242A  B4D8               	btfsc	status,2,c
 13886  01242C  D01D               	goto	l1762
 13887  01242E                     u12660:
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;fat16.c: 162: {;fat16.c: 164: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 13891  01242E  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 13892  012432  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 13893  012436  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 13894  01243A  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 13895  01243E  EC8D  F0A9         	call	__cluster_from_sector_and_offset	;wreg free
 13896  012442  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 13897  012446  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 13898                           
 13899                           ;fat16.c: 166: if(cluster > 8191)
 13900  01244A  0E20               	movlw	32
 13901  01244C  0100               	movlb	0	; () banked
 13902  01244E  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 13903  012450  A0D8               	btfss	status,0,c
 13904  012452  D005               	goto	l1760
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;fat16.c: 167: {;fat16.c: 169: return 0x0000;
 13908  012454  0E00               	movlw	0
 13909  012456  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 13910  012458  0E00               	movlw	0
 13911  01245A  6F8B               	movwf	?__get_available_cluster& (0+255),b
 13912                           
 13913                           ; BSR set to: 0
 13914  01245C  0012               	return	
 13915  01245E                     l1760:
 13916                           
 13917                           ; BSR set to: 0
 13918                           ;fat16.c: 171: else;fat16.c: 172: {;fat16.c: 174: return cluster;
 13919  01245E  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 13920  012462  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 13921  012466  0012               	return	
 13922  012468                     l1762:
 13923                           
 13924                           ; BSR set to: 0
 13925                           
 13926                           ; BSR set to: 0
 13927                           
 13928                           ; BSR set to: 0
 13929                           
 13930                           ; BSR set to: 0
 13931  012468  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 13932  01246A  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 13933  01246C  D7A3               	goto	L2
 13934  01246E                     u12680:
 13935  01246E                     l13814:
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;fat16.c: 175: };fat16.c: 176: };fat16.c: 177: };fat16.c: 180: return 0x0000;
 13939  01246E  0E00               	movlw	0
 13940  012470  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 13941  012472  0E00               	movlw	0
 13942  012474  6F8B               	movwf	?__get_available_cluster& (0+255),b
 13943  012476  0012               	return	
 13944  012478                     __end_of__get_available_cluster:
 13945                           	opt stack 0
 13946                           tblptru	equ	0xFF8
 13947                           tblptrh	equ	0xFF7
 13948                           tblptrl	equ	0xFF6
 13949                           tablat	equ	0xFF5
 13950                           prodh	equ	0xFF4
 13951                           prodl	equ	0xFF3
 13952                           postinc0	equ	0xFEE
 13953                           wreg	equ	0xFE8
 13954                           postdec1	equ	0xFE5
 13955                           plusw1	equ	0xFE3
 13956                           fsr1h	equ	0xFE2
 13957                           fsr1l	equ	0xFE1
 13958                           indf2	equ	0xFDF
 13959                           postinc2	equ	0xFDE
 13960                           plusw2	equ	0xFDB
 13961                           fsr2h	equ	0xFDA
 13962                           fsr2l	equ	0xFD9
 13963                           status	equ	0xFD8
 13964                           
 13965 ;; *************** function __get_available_offset_from_buffer *****************
 13966 ;; Defined at:
 13967 ;;		line 99 in file "fat16.c"
 13968 ;; Parameters:    Size  Location     Type
 13969 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 13970 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 13971 ;;		 -> buffer(512), 
 13972 ;; Auto vars:     Size  Location     Type
 13973 ;;  offset          2    6[BANK0 ] unsigned int 
 13974 ;; Return value:  Size  Location     Type
 13975 ;;                  2    0[BANK0 ] unsigned int 
 13976 ;; Registers used:
 13977 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13978 ;; Tracked objects:
 13979 ;;		On entry : 0/0
 13980 ;;		On exit  : 0/0
 13981 ;;		Unchanged: 0/0
 13982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13983 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13984 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13985 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13986 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13987 ;;Total ram usage:        8 bytes
 13988 ;; Hardware stack levels used:    1
 13989 ;; Hardware stack levels required when called:   10
 13990 ;; This function calls:
 13991 ;;		Nothing
 13992 ;; This function is called by:
 13993 ;;		__get_available_cluster
 13994 ;;		__make_cluster_chain
 13995 ;; This function uses a non-reentrant model
 13996 ;;
 13997                           
 13998                           	psect	text46
 13999  01425E                     __ptext46:
 14000                           	opt stack 0
 14001  01425E                     __get_available_offset_from_buffer:
 14002                           	opt stack 16
 14003                           
 14004                           ;fat16.c: 101: uint16_t offset;;fat16.c: 103: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 14005                           
 14006                           ; BSR set to: 0
 14007                           ;incstack = 0
 14008  01425E  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 14009  014262  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 14010  014266  0E02               	movlw	2
 14011  014268  0100               	movlb	0	; () banked
 14012  01426A  D022               	goto	L3
 14013  01426C                     
 14014                           ; BSR set to: 0
 14015                           ;fat16.c: 104: {;fat16.c: 105: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 14016                           
 14017                           ; BSR set to: 0
 14018  01426C  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14019  01426E  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14020  014270  6ED9               	movwf	fsr2l,c
 14021  014272  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14022  014274  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14023  014276  6EDA               	movwf	fsr2h,c
 14024  014278  50DF               	movf	indf2,w,c
 14025  01427A  A4D8               	btfss	status,2,c
 14026  01427C  D014               	goto	l1743
 14027                           
 14028                           ; BSR set to: 0
 14029  01427E  0E01               	movlw	1
 14030  014280  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14031  014282  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 14032  014284  0E00               	movlw	0
 14033  014286  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14034  014288  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 14035  01428A  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 14036  01428C  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14037  01428E  6ED9               	movwf	fsr2l,c
 14038  014290  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 14039  014292  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14040  014294  6EDA               	movwf	fsr2h,c
 14041  014296  50DF               	movf	indf2,w,c
 14042  014298  A4D8               	btfss	status,2,c
 14043  01429A  D005               	goto	l1743
 14044                           
 14045                           ; BSR set to: 0
 14046                           ;fat16.c: 106: {;fat16.c: 107: return offset;
 14047  01429C  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 14048  0142A0  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 14049  0142A4  0012               	return	
 14050  0142A6                     l1743:
 14051                           
 14052                           ; BSR set to: 0
 14053                           
 14054                           ; BSR set to: 0
 14055  0142A6  0E02               	movlw	2
 14056  0142A8  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 14057  0142AA  0E00               	movlw	0
 14058  0142AC  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 14059  0142AE  0E02               	movlw	2
 14060  0142B0                     L3:
 14061  0142B0  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14062  0142B2  A0D8               	btfss	status,0,c
 14063  0142B4  D7DB               	goto	l1741
 14064                           
 14065                           ; BSR set to: 0
 14066                           ;fat16.c: 108: };fat16.c: 109: };fat16.c: 112: return 0xFFFF;
 14067  0142B6  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 14068  0142B8  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 14069                           
 14070                           ; BSR set to: 0
 14071  0142BA  0012               	return		;funcret
 14072  0142BC                     __end_of__get_available_offset_from_buffer:
 14073                           	opt stack 0
 14074                           tblptru	equ	0xFF8
 14075                           tblptrh	equ	0xFF7
 14076                           tblptrl	equ	0xFF6
 14077                           tablat	equ	0xFF5
 14078                           prodh	equ	0xFF4
 14079                           prodl	equ	0xFF3
 14080                           postinc0	equ	0xFEE
 14081                           wreg	equ	0xFE8
 14082                           postdec1	equ	0xFE5
 14083                           plusw1	equ	0xFE3
 14084                           fsr1h	equ	0xFE2
 14085                           fsr1l	equ	0xFE1
 14086                           indf2	equ	0xFDF
 14087                           postinc2	equ	0xFDE
 14088                           plusw2	equ	0xFDB
 14089                           fsr2h	equ	0xFDA
 14090                           fsr2l	equ	0xFD9
 14091                           status	equ	0xFD8
 14092                           
 14093 ;; *************** function __cluster_from_sector_and_offset *****************
 14094 ;; Defined at:
 14095 ;;		line 90 in file "fat16.c"
 14096 ;; Parameters:    Size  Location     Type
 14097 ;;  sector          2    0[BANK0 ] unsigned int 
 14098 ;;  offset          2    2[BANK0 ] unsigned int 
 14099 ;; Auto vars:     Size  Location     Type
 14100 ;;		None
 14101 ;; Return value:  Size  Location     Type
 14102 ;;                  2    0[BANK0 ] unsigned int 
 14103 ;; Registers used:
 14104 ;;		wreg, status,2, status,0
 14105 ;; Tracked objects:
 14106 ;;		On entry : 0/0
 14107 ;;		On exit  : 0/0
 14108 ;;		Unchanged: 0/0
 14109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14110 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14113 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14114 ;;Total ram usage:        4 bytes
 14115 ;; Hardware stack levels used:    1
 14116 ;; Hardware stack levels required when called:   10
 14117 ;; This function calls:
 14118 ;;		Nothing
 14119 ;; This function is called by:
 14120 ;;		__get_available_cluster
 14121 ;; This function uses a non-reentrant model
 14122 ;;
 14123                           
 14124                           	psect	text47
 14125  01531A                     __ptext47:
 14126                           	opt stack 0
 14127  01531A                     __cluster_from_sector_and_offset:
 14128                           	opt stack 15
 14129                           
 14130                           ;fat16.c: 92: offset >>= 1;
 14131                           
 14132                           ; BSR set to: 0
 14133                           ;incstack = 0
 14134  01531A  0100               	movlb	0	; () banked
 14135  01531C  90D8               	bcf	status,0,c
 14136  01531E  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 14137  015320  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 14138                           
 14139                           ; BSR set to: 0
 14140                           ;fat16.c: 93: sector -= 2;
 14141  015322  0E02               	movlw	2
 14142  015324  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14143  015326  0E00               	movlw	0
 14144  015328  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14145                           
 14146                           ; BSR set to: 0
 14147                           ;fat16.c: 94: sector <<= 8;
 14148  01532A  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 14149  01532C  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 14150  01532E  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 14151                           
 14152                           ; BSR set to: 0
 14153                           ;fat16.c: 95: sector |= offset;
 14154  015330  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 14155  015332  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14156  015334  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 14157  015336  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14158                           
 14159                           ; BSR set to: 0
 14160                           ;fat16.c: 96: return sector;
 14161  015338  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 14162  01533C  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 14163  015340  0012               	return	
 14164  015342                     __end_of__cluster_from_sector_and_offset:
 14165                           	opt stack 0
 14166                           tblptru	equ	0xFF8
 14167                           tblptrh	equ	0xFF7
 14168                           tblptrl	equ	0xFF6
 14169                           tablat	equ	0xFF5
 14170                           prodh	equ	0xFF4
 14171                           prodl	equ	0xFF3
 14172                           postinc0	equ	0xFEE
 14173                           wreg	equ	0xFE8
 14174                           postdec1	equ	0xFE5
 14175                           plusw1	equ	0xFE3
 14176                           fsr1h	equ	0xFE2
 14177                           fsr1l	equ	0xFE1
 14178                           indf2	equ	0xFDF
 14179                           postinc2	equ	0xFDE
 14180                           plusw2	equ	0xFDB
 14181                           fsr2h	equ	0xFDA
 14182                           fsr2l	equ	0xFD9
 14183                           status	equ	0xFD8
 14184                           
 14185 ;; *************** function __get_time *****************
 14186 ;; Defined at:
 14187 ;;		line 377 in file "fat16.c"
 14188 ;; Parameters:    Size  Location     Type
 14189 ;;		None
 14190 ;; Auto vars:     Size  Location     Type
 14191 ;;		None
 14192 ;; Return value:  Size  Location     Type
 14193 ;;                  2    0[BANK0 ] unsigned int 
 14194 ;; Registers used:
 14195 ;;		wreg, status,2
 14196 ;; Tracked objects:
 14197 ;;		On entry : 0/0
 14198 ;;		On exit  : 0/0
 14199 ;;		Unchanged: 0/0
 14200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14201 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14204 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14205 ;;Total ram usage:        2 bytes
 14206 ;; Hardware stack levels used:    1
 14207 ;; Hardware stack levels required when called:   10
 14208 ;; This function calls:
 14209 ;;		Nothing
 14210 ;; This function is called by:
 14211 ;;		_fat_create_file
 14212 ;; This function uses a non-reentrant model
 14213 ;;
 14214                           
 14215                           	psect	text48
 14216  015640                     __ptext48:
 14217                           	opt stack 0
 14218  015640                     __get_time:
 14219                           	opt stack 17
 14220                           
 14221                           ;fat16.c: 389: return 0x0000;
 14222                           
 14223                           ; BSR set to: 0
 14224                           ;incstack = 0
 14225  015640  0E00               	movlw	0
 14226  015642  0100               	movlb	0	; () banked
 14227  015644  6F61               	movwf	(?__get_time+1)& (0+255),b
 14228  015646  0E00               	movlw	0
 14229  015648  6F60               	movwf	?__get_time& (0+255),b
 14230  01564A  0012               	return	
 14231  01564C                     __end_of__get_time:
 14232                           	opt stack 0
 14233                           tblptru	equ	0xFF8
 14234                           tblptrh	equ	0xFF7
 14235                           tblptrl	equ	0xFF6
 14236                           tablat	equ	0xFF5
 14237                           prodh	equ	0xFF4
 14238                           prodl	equ	0xFF3
 14239                           postinc0	equ	0xFEE
 14240                           wreg	equ	0xFE8
 14241                           postdec1	equ	0xFE5
 14242                           plusw1	equ	0xFE3
 14243                           fsr1h	equ	0xFE2
 14244                           fsr1l	equ	0xFE1
 14245                           indf2	equ	0xFDF
 14246                           postinc2	equ	0xFDE
 14247                           plusw2	equ	0xFDB
 14248                           fsr2h	equ	0xFDA
 14249                           fsr2l	equ	0xFD9
 14250                           status	equ	0xFD8
 14251                           
 14252 ;; *************** function __get_date *****************
 14253 ;; Defined at:
 14254 ;;		line 393 in file "fat16.c"
 14255 ;; Parameters:    Size  Location     Type
 14256 ;;		None
 14257 ;; Auto vars:     Size  Location     Type
 14258 ;;		None
 14259 ;; Return value:  Size  Location     Type
 14260 ;;                  2    0[BANK0 ] unsigned int 
 14261 ;; Registers used:
 14262 ;;		wreg, status,2
 14263 ;; Tracked objects:
 14264 ;;		On entry : 0/0
 14265 ;;		On exit  : 0/0
 14266 ;;		Unchanged: 0/0
 14267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14268 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14271 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14272 ;;Total ram usage:        2 bytes
 14273 ;; Hardware stack levels used:    1
 14274 ;; Hardware stack levels required when called:   10
 14275 ;; This function calls:
 14276 ;;		Nothing
 14277 ;; This function is called by:
 14278 ;;		_fat_create_file
 14279 ;; This function uses a non-reentrant model
 14280 ;;
 14281                           
 14282                           	psect	text49
 14283  01564C                     __ptext49:
 14284                           	opt stack 0
 14285  01564C                     __get_date:
 14286                           	opt stack 17
 14287                           
 14288                           ;fat16.c: 405: return 0x0000;
 14289                           
 14290                           ; BSR set to: 0
 14291                           ;incstack = 0
 14292  01564C  0E00               	movlw	0
 14293  01564E  0100               	movlb	0	; () banked
 14294  015650  6F61               	movwf	(?__get_date+1)& (0+255),b
 14295  015652  0E00               	movlw	0
 14296  015654  6F60               	movwf	?__get_date& (0+255),b
 14297  015656  0012               	return	
 14298  015658                     __end_of__get_date:
 14299                           	opt stack 0
 14300                           tblptru	equ	0xFF8
 14301                           tblptrh	equ	0xFF7
 14302                           tblptrl	equ	0xFF6
 14303                           tablat	equ	0xFF5
 14304                           prodh	equ	0xFF4
 14305                           prodl	equ	0xFF3
 14306                           postinc0	equ	0xFEE
 14307                           wreg	equ	0xFE8
 14308                           postdec1	equ	0xFE5
 14309                           plusw1	equ	0xFE3
 14310                           fsr1h	equ	0xFE2
 14311                           fsr1l	equ	0xFE1
 14312                           indf2	equ	0xFDF
 14313                           postinc2	equ	0xFDE
 14314                           plusw2	equ	0xFDB
 14315                           fsr2h	equ	0xFDA
 14316                           fsr2l	equ	0xFD9
 14317                           status	equ	0xFD8
 14318                           
 14319 ;; *************** function __get_available_root_entry *****************
 14320 ;; Defined at:
 14321 ;;		line 443 in file "fat16.c"
 14322 ;; Parameters:    Size  Location     Type
 14323 ;;		None
 14324 ;; Auto vars:     Size  Location     Type
 14325 ;;  file_number     1   53[BANK0 ] unsigned char 
 14326 ;; Return value:  Size  Location     Type
 14327 ;;                  1    wreg      unsigned char 
 14328 ;; Registers used:
 14329 ;;		wreg, status,2, status,0, cstack
 14330 ;; Tracked objects:
 14331 ;;		On entry : 0/0
 14332 ;;		On exit  : 0/0
 14333 ;;		Unchanged: 0/0
 14334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14336 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14338 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14339 ;;Total ram usage:        1 bytes
 14340 ;; Hardware stack levels used:    1
 14341 ;; Hardware stack levels required when called:   16
 14342 ;; This function calls:
 14343 ;;		__root_is_available
 14344 ;; This function is called by:
 14345 ;;		_fat_create_file
 14346 ;; This function uses a non-reentrant model
 14347 ;;
 14348                           
 14349                           	psect	text50
 14350  01529E                     __ptext50:
 14351                           	opt stack 0
 14352  01529E                     __get_available_root_entry:
 14353                           	opt stack 11
 14354                           
 14355                           ;fat16.c: 445: uint8_t file_number;;fat16.c: 447: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 14356                           
 14357                           ; BSR set to: 0
 14358                           ;incstack = 0
 14359  01529E  0E00               	movlw	0
 14360  0152A0  0100               	movlb	0	; () banked
 14361  0152A2  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 14362  0152A4                     l14386:
 14363                           
 14364                           ; BSR set to: 0
 14365  0152A4  0E3F               	movlw	63
 14366  0152A6  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14367  0152A8  D001               	goto	l1814
 14368  0152AA  D00C               	goto	u13390
 14369  0152AC                     l1814:
 14370                           
 14371                           ; BSR set to: 0
 14372                           ;fat16.c: 448: {;fat16.c: 449: if(_root_is_available(file_number))
 14373                           
 14374                           ; BSR set to: 0
 14375  0152AC  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14376  0152AE  EC08  F09F         	call	__root_is_available
 14377  0152B2  0900               	iorlw	0
 14378  0152B4  B4D8               	btfsc	status,2,c
 14379  0152B6  D003               	goto	l1816
 14380                           
 14381                           ;fat16.c: 450: {;fat16.c: 451: return file_number;
 14382  0152B8  0100               	movlb	0	; () banked
 14383  0152BA  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14384                           
 14385                           ; BSR set to: 0
 14386  0152BC  0012               	return	
 14387  0152BE                     l1816:
 14388                           
 14389                           ; BSR set to: 0
 14390  0152BE  0100               	movlb	0	; () banked
 14391  0152C0  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14392  0152C2  D7F0               	goto	l14386
 14393  0152C4                     u13390:
 14394                           
 14395                           ; BSR set to: 0
 14396                           ;fat16.c: 452: };fat16.c: 453: };fat16.c: 454: return 0xFF;
 14397                           
 14398                           ; BSR set to: 0
 14399  0152C4  0EFF               	movlw	255
 14400  0152C6  0012               	return	
 14401  0152C8                     __end_of__get_available_root_entry:
 14402                           	opt stack 0
 14403                           tblptru	equ	0xFF8
 14404                           tblptrh	equ	0xFF7
 14405                           tblptrl	equ	0xFF6
 14406                           tablat	equ	0xFF5
 14407                           prodh	equ	0xFF4
 14408                           prodl	equ	0xFF3
 14409                           postinc0	equ	0xFEE
 14410                           wreg	equ	0xFE8
 14411                           postdec1	equ	0xFE5
 14412                           plusw1	equ	0xFE3
 14413                           fsr1h	equ	0xFE2
 14414                           fsr1l	equ	0xFE1
 14415                           indf2	equ	0xFDF
 14416                           postinc2	equ	0xFDE
 14417                           plusw2	equ	0xFDB
 14418                           fsr2h	equ	0xFDA
 14419                           fsr2l	equ	0xFD9
 14420                           status	equ	0xFD8
 14421                           
 14422 ;; *************** function __add_item *****************
 14423 ;; Defined at:
 14424 ;;		line 39 in file "config_file.c"
 14425 ;; Parameters:    Size  Location     Type
 14426 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 14427 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 14428 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 14429 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 14430 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 14431 ;;  value           4   38[BANK0 ] long 
 14432 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 14433 ;;		 -> ConfigFile_buffer(512), 
 14434 ;; Auto vars:     Size  Location     Type
 14435 ;;  length          1   46[BANK0 ] unsigned char 
 14436 ;; Return value:  Size  Location     Type
 14437 ;;                  1    wreg      unsigned char 
 14438 ;; Registers used:
 14439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14440 ;; Tracked objects:
 14441 ;;		On entry : 0/0
 14442 ;;		On exit  : 0/0
 14443 ;;		Unchanged: 0/0
 14444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14445 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14446 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14447 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14448 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14449 ;;Total ram usage:       11 bytes
 14450 ;; Hardware stack levels used:    1
 14451 ;; Hardware stack levels required when called:   13
 14452 ;; This function calls:
 14453 ;;		_ltoa
 14454 ;; This function is called by:
 14455 ;;		_configFile_write
 14456 ;; This function uses a non-reentrant model
 14457 ;;
 14458                           
 14459                           	psect	text51
 14460  0112C2                     __ptext51:
 14461                           	opt stack 0
 14462  0112C2                     __add_item:
 14463                           	opt stack 15
 14464                           
 14465                           ;config_file.c: 41: uint8_t length = 0;
 14466                           
 14467                           ; BSR set to: 0
 14468                           ;incstack = 0
 14469  0112C2  0E00               	movlw	0
 14470  0112C4  0100               	movlb	0	; () banked
 14471  0112C6  6F8E               	movwf	__add_item@length& (0+255),b
 14472                           
 14473                           ;config_file.c: 44: while(item_string[length])
 14474  0112C8  D01C               	goto	l2931
 14475  0112CA                     
 14476                           ; BSR set to: 0
 14477                           ;config_file.c: 45: {;config_file.c: 46: buffer[length] = item_string[length];
 14478                           
 14479                           ; BSR set to: 0
 14480  0112CA  518E               	movf	__add_item@length& (0+255),w,b
 14481  0112CC  0D01               	mullw	1
 14482  0112CE  C084  F08C         	movff	__add_item@item_string,??__add_item
 14483  0112D2  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14484  0112D6  50F3               	movf	prodl,w,c
 14485  0112D8  278C               	addwf	??__add_item& (0+255),f,b
 14486  0112DA  50F4               	movf	prodh,w,c
 14487  0112DC  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14488  0112DE  C08C  FFF6         	movff	??__add_item,tblptrl
 14489  0112E2  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14490  0112E6                     	if	0	;tblptru may be non-zero
 14491  0112E6                     	endif
 14492  0112E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14493  0112E6  0E00               	movlw	low (__mediumconst shr (0+16))
 14494  0112E8  6EF8               	movwf	tblptru,c
 14495  0112EA                     	endif
 14496  0112EA  518E               	movf	__add_item@length& (0+255),w,b
 14497  0112EC  0D01               	mullw	1
 14498  0112EE  50F3               	movf	prodl,w,c
 14499  0112F0  258A               	addwf	__add_item@buffer& (0+255),w,b
 14500  0112F2  6ED9               	movwf	fsr2l,c
 14501  0112F4  50F4               	movf	prodh,w,c
 14502  0112F6  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14503  0112F8  6EDA               	movwf	fsr2h,c
 14504  0112FA  0008               	tblrd		*
 14505  0112FC  CFF5 FFDF          	movff	tablat,indf2
 14506                           
 14507                           ; BSR set to: 0
 14508                           ;config_file.c: 47: ++length;
 14509  011300  2B8E               	incf	__add_item@length& (0+255),f,b
 14510  011302                     l2931:
 14511                           
 14512                           ; BSR set to: 0
 14513                           
 14514                           ; BSR set to: 0
 14515  011302  518E               	movf	__add_item@length& (0+255),w,b
 14516  011304  0D01               	mullw	1
 14517  011306  C084  F08C         	movff	__add_item@item_string,??__add_item
 14518  01130A  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14519  01130E  50F3               	movf	prodl,w,c
 14520  011310  278C               	addwf	??__add_item& (0+255),f,b
 14521  011312  50F4               	movf	prodh,w,c
 14522  011314  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14523  011316  C08C  FFF6         	movff	??__add_item,tblptrl
 14524  01131A  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14525  01131E                     	if	0	;tblptru may be non-zero
 14526  01131E                     	endif
 14527  01131E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14528  01131E  0E00               	movlw	low (__mediumconst shr (0+16))
 14529  011320  6EF8               	movwf	tblptru,c
 14530  011322                     	endif
 14531  011322  0008               	tblrd		*
 14532  011324  50F5               	movf	tablat,w,c
 14533  011326  0900               	iorlw	0
 14534  011328  A4D8               	btfss	status,2,c
 14535  01132A  D7CF               	goto	l2932
 14536                           
 14537                           ; BSR set to: 0
 14538                           ;config_file.c: 48: };config_file.c: 51: buffer[length++] = '=';
 14539                           
 14540                           ; BSR set to: 0
 14541  01132C  518E               	movf	__add_item@length& (0+255),w,b
 14542  01132E  0D01               	mullw	1
 14543  011330  50F3               	movf	prodl,w,c
 14544  011332  258A               	addwf	__add_item@buffer& (0+255),w,b
 14545  011334  6ED9               	movwf	fsr2l,c
 14546  011336  50F4               	movf	prodh,w,c
 14547  011338  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14548  01133A  6EDA               	movwf	fsr2h,c
 14549  01133C  0E3D               	movlw	61
 14550  01133E  6EDF               	movwf	indf2,c
 14551                           
 14552                           ; BSR set to: 0
 14553  011340  2B8E               	incf	__add_item@length& (0+255),f,b
 14554                           
 14555                           ; BSR set to: 0
 14556                           ;config_file.c: 54: ltoa(&buffer[length], value, 10);
 14557  011342  518E               	movf	__add_item@length& (0+255),w,b
 14558  011344  0D01               	mullw	1
 14559  011346  50F3               	movf	prodl,w,c
 14560  011348  258A               	addwf	__add_item@buffer& (0+255),w,b
 14561  01134A  6F7A               	movwf	ltoa@buf& (0+255),b
 14562  01134C  50F4               	movf	prodh,w,c
 14563  01134E  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14564  011350  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 14565  011352  C086  F07C         	movff	__add_item@value,ltoa@val
 14566  011356  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 14567  01135A  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 14568  01135E  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 14569  011362  0E00               	movlw	0
 14570  011364  6F81               	movwf	(ltoa@base+1)& (0+255),b
 14571  011366  0E0A               	movlw	10
 14572  011368  6F80               	movwf	ltoa@base& (0+255),b
 14573  01136A  ECC9  F0A3         	call	_ltoa	;wreg free
 14574                           
 14575                           ;config_file.c: 55: while(buffer[length])
 14576  01136E  D002               	goto	l2934
 14577  011370                     
 14578                           ;config_file.c: 56: {;config_file.c: 57: ++length;
 14579  011370  0100               	movlb	0	; () banked
 14580  011372  2B8E               	incf	__add_item@length& (0+255),f,b
 14581  011374                     l2934:
 14582                           
 14583                           ; BSR set to: 0
 14584  011374  0100               	movlb	0	; () banked
 14585  011376  518E               	movf	__add_item@length& (0+255),w,b
 14586  011378  0D01               	mullw	1
 14587  01137A  50F3               	movf	prodl,w,c
 14588  01137C  258A               	addwf	__add_item@buffer& (0+255),w,b
 14589  01137E  6ED9               	movwf	fsr2l,c
 14590  011380  50F4               	movf	prodh,w,c
 14591  011382  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14592  011384  6EDA               	movwf	fsr2h,c
 14593  011386  50DF               	movf	indf2,w,c
 14594  011388  A4D8               	btfss	status,2,c
 14595  01138A  D7F2               	goto	l2935
 14596                           
 14597                           ; BSR set to: 0
 14598                           ;config_file.c: 58: };config_file.c: 61: buffer[length++] = '\r';
 14599                           
 14600                           ; BSR set to: 0
 14601  01138C  518E               	movf	__add_item@length& (0+255),w,b
 14602  01138E  0D01               	mullw	1
 14603  011390  50F3               	movf	prodl,w,c
 14604  011392  258A               	addwf	__add_item@buffer& (0+255),w,b
 14605  011394  6ED9               	movwf	fsr2l,c
 14606  011396  50F4               	movf	prodh,w,c
 14607  011398  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14608  01139A  6EDA               	movwf	fsr2h,c
 14609  01139C  0E0D               	movlw	13
 14610  01139E  6EDF               	movwf	indf2,c
 14611                           
 14612                           ; BSR set to: 0
 14613  0113A0  2B8E               	incf	__add_item@length& (0+255),f,b
 14614                           
 14615                           ; BSR set to: 0
 14616                           ;config_file.c: 62: buffer[length++] = '\n';
 14617  0113A2  518E               	movf	__add_item@length& (0+255),w,b
 14618  0113A4  0D01               	mullw	1
 14619  0113A6  50F3               	movf	prodl,w,c
 14620  0113A8  258A               	addwf	__add_item@buffer& (0+255),w,b
 14621  0113AA  6ED9               	movwf	fsr2l,c
 14622  0113AC  50F4               	movf	prodh,w,c
 14623  0113AE  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14624  0113B0  6EDA               	movwf	fsr2h,c
 14625  0113B2  0E0A               	movlw	10
 14626  0113B4  6EDF               	movwf	indf2,c
 14627  0113B6  2B8E               	incf	__add_item@length& (0+255),f,b
 14628                           
 14629                           ; BSR set to: 0
 14630                           ;config_file.c: 65: return length;
 14631  0113B8  518E               	movf	__add_item@length& (0+255),w,b
 14632  0113BA  0012               	return	
 14633  0113BC                     __end_of__add_item:
 14634                           	opt stack 0
 14635                           tblptru	equ	0xFF8
 14636                           tblptrh	equ	0xFF7
 14637                           tblptrl	equ	0xFF6
 14638                           tablat	equ	0xFF5
 14639                           prodh	equ	0xFF4
 14640                           prodl	equ	0xFF3
 14641                           postinc0	equ	0xFEE
 14642                           wreg	equ	0xFE8
 14643                           postdec1	equ	0xFE5
 14644                           plusw1	equ	0xFE3
 14645                           fsr1h	equ	0xFE2
 14646                           fsr1l	equ	0xFE1
 14647                           indf2	equ	0xFDF
 14648                           postinc2	equ	0xFDE
 14649                           plusw2	equ	0xFDB
 14650                           fsr2h	equ	0xFDA
 14651                           fsr2l	equ	0xFD9
 14652                           status	equ	0xFD8
 14653                           
 14654 ;; *************** function _ltoa *****************
 14655 ;; Defined at:
 14656 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 14657 ;; Parameters:    Size  Location     Type
 14658 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 14659 ;;		 -> ConfigFile_buffer(512), 
 14660 ;;  val             4   28[BANK0 ] long 
 14661 ;;  base            2   32[BANK0 ] int 
 14662 ;; Auto vars:     Size  Location     Type
 14663 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 14664 ;;		 -> ConfigFile_buffer(512), 
 14665 ;; Return value:  Size  Location     Type
 14666 ;;                  2   26[BANK0 ] PTR unsigned char 
 14667 ;; Registers used:
 14668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14669 ;; Tracked objects:
 14670 ;;		On entry : 0/0
 14671 ;;		On exit  : 0/0
 14672 ;;		Unchanged: 0/0
 14673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14674 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14675 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14677 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14678 ;;Total ram usage:       10 bytes
 14679 ;; Hardware stack levels used:    1
 14680 ;; Hardware stack levels required when called:   12
 14681 ;; This function calls:
 14682 ;;		_ultoa
 14683 ;; This function is called by:
 14684 ;;		__add_item
 14685 ;; This function uses a non-reentrant model
 14686 ;;
 14687                           
 14688                           	psect	text52
 14689  014792                     __ptext52:
 14690                           	opt stack 0
 14691  014792                     _ltoa:
 14692                           	opt stack 15
 14693                           
 14694                           ; BSR set to: 0
 14695                           ;incstack = 0
 14696  014792  C07A  F082         	movff	ltoa@buf,ltoa@cp
 14697  014796  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 14698  01479A  0100               	movlb	0	; () banked
 14699  01479C  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 14700  01479E  D010               	goto	l3702
 14701                           
 14702                           ; BSR set to: 0
 14703  0147A0  C07A  FFD9         	movff	ltoa@buf,fsr2l
 14704  0147A4  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 14705  0147A8  0E2D               	movlw	45
 14706  0147AA  6EDF               	movwf	indf2,c
 14707                           
 14708                           ; BSR set to: 0
 14709  0147AC  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 14710  0147AE  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 14711                           
 14712                           ; BSR set to: 0
 14713  0147B0  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 14714  0147B2  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 14715  0147B4  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 14716  0147B6  6D7C               	negf	ltoa@val& (0+255),b
 14717  0147B8  0E00               	movlw	0
 14718  0147BA  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 14719  0147BC  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 14720  0147BE  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 14721  0147C0                     l3702:
 14722                           
 14723                           ; BSR set to: 0
 14724                           
 14725                           ; BSR set to: 0
 14726  0147C0  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 14727  0147C4  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 14728  0147C8  C07C  F06F         	movff	ltoa@val,ultoa@val
 14729  0147CC  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 14730  0147D0  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 14731  0147D4  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 14732  0147D8  C080  F073         	movff	ltoa@base,ultoa@base
 14733  0147DC  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 14734  0147E0  EC64  F088         	call	_ultoa	;wreg free
 14735  0147E4  0012               	return	
 14736  0147E6                     __end_of_ltoa:
 14737                           	opt stack 0
 14738                           tblptru	equ	0xFF8
 14739                           tblptrh	equ	0xFF7
 14740                           tblptrl	equ	0xFF6
 14741                           tablat	equ	0xFF5
 14742                           prodh	equ	0xFF4
 14743                           prodl	equ	0xFF3
 14744                           postinc0	equ	0xFEE
 14745                           wreg	equ	0xFE8
 14746                           postdec1	equ	0xFE5
 14747                           plusw1	equ	0xFE3
 14748                           fsr1h	equ	0xFE2
 14749                           fsr1l	equ	0xFE1
 14750                           indf2	equ	0xFDF
 14751                           postinc2	equ	0xFDE
 14752                           plusw2	equ	0xFDB
 14753                           fsr2h	equ	0xFDA
 14754                           fsr2l	equ	0xFD9
 14755                           status	equ	0xFD8
 14756                           
 14757 ;; *************** function _ultoa *****************
 14758 ;; Defined at:
 14759 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 14760 ;; Parameters:    Size  Location     Type
 14761 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 14762 ;;		 -> ConfigFile_buffer(512), 
 14763 ;;  val             4   15[BANK0 ] unsigned long 
 14764 ;;  base            2   19[BANK0 ] int 
 14765 ;; Auto vars:     Size  Location     Type
 14766 ;;  v               4   21[BANK0 ] unsigned long 
 14767 ;;  c               1   25[BANK0 ] unsigned char 
 14768 ;; Return value:  Size  Location     Type
 14769 ;;                  2   13[BANK0 ] PTR unsigned char 
 14770 ;; Registers used:
 14771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14772 ;; Tracked objects:
 14773 ;;		On entry : 0/0
 14774 ;;		On exit  : 0/0
 14775 ;;		Unchanged: 0/0
 14776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14777 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14778 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14780 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14781 ;;Total ram usage:       13 bytes
 14782 ;; Hardware stack levels used:    1
 14783 ;; Hardware stack levels required when called:   11
 14784 ;; This function calls:
 14785 ;;		___lldiv
 14786 ;;		___llmod
 14787 ;; This function is called by:
 14788 ;;		_ltoa
 14789 ;; This function uses a non-reentrant model
 14790 ;;
 14791                           
 14792                           	psect	text53
 14793  0110C8                     __ptext53:
 14794                           	opt stack 0
 14795  0110C8                     _ultoa:
 14796                           	opt stack 15
 14797                           
 14798                           ;incstack = 0
 14799  0110C8  C06F  F075         	movff	ultoa@val,ultoa@v
 14800  0110CC  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 14801  0110D0  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 14802  0110D4  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 14803  0110D8  C075  F060         	movff	ultoa@v,___lldiv@dividend
 14804  0110DC  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 14805  0110E0  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 14806  0110E4  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 14807  0110E8  C073  F064         	movff	ultoa@base,___lldiv@divisor
 14808  0110EC  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 14809  0110F0  0100               	movlb	0	; () banked
 14810  0110F2  0E00               	movlw	0
 14811  0110F4  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 14812  0110F6  0EFF               	movlw	-1
 14813  0110F8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14814  0110FA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14815  0110FC  ECBC  F09B         	call	___lldiv	;wreg free
 14816  011100  C060  F075         	movff	?___lldiv,ultoa@v
 14817  011104  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 14818  011108  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 14819  01110C  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 14820  011110  0100               	movlb	0	; () banked
 14821  011112  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 14822  011114  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 14823                           
 14824                           ; BSR set to: 0
 14825  011116  5175               	movf	ultoa@v& (0+255),w,b
 14826  011118  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 14827  01111A  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 14828  01111C  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 14829  01111E  A4D8               	btfss	status,2,c
 14830  011120  D7DB               	goto	l3706
 14831                           
 14832                           ; BSR set to: 0
 14833                           
 14834                           ; BSR set to: 0
 14835  011122  C06D  FFD9         	movff	ultoa@buf,fsr2l
 14836  011126  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 14837  01112A  0E00               	movlw	0
 14838  01112C  6EDF               	movwf	indf2,c
 14839                           
 14840                           ; BSR set to: 0
 14841  01112E  076D               	decf	ultoa@buf& (0+255),f,b
 14842  011130  A0D8               	btfss	status,0,c
 14843  011132  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 14844  011134                     
 14845                           ; BSR set to: 0
 14846                           
 14847                           ; BSR set to: 0
 14848  011134  C06F  F060         	movff	ultoa@val,___llmod@dividend
 14849  011138  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 14850  01113C  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 14851  011140  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 14852  011144  C073  F064         	movff	ultoa@base,___llmod@divisor
 14853  011148  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 14854  01114C  0E00               	movlw	0
 14855  01114E  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 14856  011150  0EFF               	movlw	-1
 14857  011152  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 14858  011154  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 14859  011156  EC73  F09F         	call	___llmod	;wreg free
 14860  01115A  0100               	movlb	0	; () banked
 14861  01115C  5160               	movf	?___llmod& (0+255),w,b
 14862  01115E  6F79               	movwf	ultoa@c& (0+255),b
 14863                           
 14864                           ; BSR set to: 0
 14865  011160  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 14866  011164  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 14867  011168  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 14868  01116C  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 14869  011170  C073  F064         	movff	ultoa@base,___lldiv@divisor
 14870  011174  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 14871  011178  0E00               	movlw	0
 14872  01117A  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 14873  01117C  0EFF               	movlw	-1
 14874  01117E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14875  011180  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14876  011182  ECBC  F09B         	call	___lldiv	;wreg free
 14877  011186  C060  F06F         	movff	?___lldiv,ultoa@val
 14878  01118A  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 14879  01118E  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 14880  011192  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 14881  011196  0E09               	movlw	9
 14882  011198  0100               	movlb	0	; () banked
 14883  01119A  6579               	cpfsgt	ultoa@c& (0+255),b
 14884  01119C  D002               	goto	l3709
 14885                           
 14886                           ; BSR set to: 0
 14887  01119E  0E07               	movlw	7
 14888  0111A0  2779               	addwf	ultoa@c& (0+255),f,b
 14889  0111A2                     l3709:
 14890                           
 14891                           ; BSR set to: 0
 14892  0111A2  0E30               	movlw	48
 14893  0111A4  2779               	addwf	ultoa@c& (0+255),f,b
 14894                           
 14895                           ; BSR set to: 0
 14896  0111A6  C06D  FFD9         	movff	ultoa@buf,fsr2l
 14897  0111AA  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 14898  0111AE  C079  FFDF         	movff	ultoa@c,indf2
 14899                           
 14900                           ; BSR set to: 0
 14901  0111B2  076D               	decf	ultoa@buf& (0+255),f,b
 14902  0111B4  A0D8               	btfss	status,0,c
 14903  0111B6  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 14904                           
 14905                           ; BSR set to: 0
 14906  0111B8  516F               	movf	ultoa@val& (0+255),w,b
 14907  0111BA  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 14908  0111BC  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 14909  0111BE  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 14910  0111C0  B4D8               	btfsc	status,2,c
 14911  0111C2  0012               	return	
 14912  0111C4  D7B7               	goto	l3708
 14913  0111C6                     __end_of_ultoa:
 14914                           	opt stack 0
 14915                           tblptru	equ	0xFF8
 14916                           tblptrh	equ	0xFF7
 14917                           tblptrl	equ	0xFF6
 14918                           tablat	equ	0xFF5
 14919                           prodh	equ	0xFF4
 14920                           prodl	equ	0xFF3
 14921                           postinc0	equ	0xFEE
 14922                           wreg	equ	0xFE8
 14923                           postdec1	equ	0xFE5
 14924                           plusw1	equ	0xFE3
 14925                           fsr1h	equ	0xFE2
 14926                           fsr1l	equ	0xFE1
 14927                           indf2	equ	0xFDF
 14928                           postinc2	equ	0xFDE
 14929                           plusw2	equ	0xFDB
 14930                           fsr2h	equ	0xFDA
 14931                           fsr2l	equ	0xFD9
 14932                           status	equ	0xFD8
 14933                           
 14934 ;; *************** function ___llmod *****************
 14935 ;; Defined at:
 14936 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 14937 ;; Parameters:    Size  Location     Type
 14938 ;;  dividend        4    0[BANK0 ] unsigned long 
 14939 ;;  divisor         4    4[BANK0 ] unsigned long 
 14940 ;; Auto vars:     Size  Location     Type
 14941 ;;  counter         1    8[BANK0 ] unsigned char 
 14942 ;; Return value:  Size  Location     Type
 14943 ;;                  4    0[BANK0 ] unsigned long 
 14944 ;; Registers used:
 14945 ;;		wreg, status,2, status,0
 14946 ;; Tracked objects:
 14947 ;;		On entry : 0/0
 14948 ;;		On exit  : 0/0
 14949 ;;		Unchanged: 0/0
 14950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14951 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14954 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14955 ;;Total ram usage:        9 bytes
 14956 ;; Hardware stack levels used:    1
 14957 ;; Hardware stack levels required when called:   10
 14958 ;; This function calls:
 14959 ;;		Nothing
 14960 ;; This function is called by:
 14961 ;;		_ultoa
 14962 ;; This function uses a non-reentrant model
 14963 ;;
 14964                           
 14965                           	psect	text54
 14966  013EE6                     __ptext54:
 14967                           	opt stack 0
 14968  013EE6                     ___llmod:
 14969                           	opt stack 15
 14970                           
 14971                           ; BSR set to: 0
 14972                           ;incstack = 0
 14973  013EE6  0100               	movlb	0	; () banked
 14974  013EE8  5164               	movf	___llmod@divisor& (0+255),w,b
 14975  013EEA  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14976  013EEC  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14977  013EEE  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14978  013EF0  B4D8               	btfsc	status,2,c
 14979  013EF2  D024               	goto	l3404
 14980                           
 14981                           ; BSR set to: 0
 14982  013EF4  0E01               	movlw	1
 14983  013EF6  6F68               	movwf	___llmod@counter& (0+255),b
 14984  013EF8  D006               	goto	l3399
 14985  013EFA                     
 14986                           ; BSR set to: 0
 14987                           
 14988                           ; BSR set to: 0
 14989  013EFA  90D8               	bcf	status,0,c
 14990  013EFC  3764               	rlcf	___llmod@divisor& (0+255),f,b
 14991  013EFE  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14992  013F00  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14993  013F02  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14994  013F04  2B68               	incf	___llmod@counter& (0+255),f,b
 14995  013F06                     l3399:
 14996                           
 14997                           ; BSR set to: 0
 14998                           
 14999                           ; BSR set to: 0
 15000  013F06  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15001  013F08  D7F8               	goto	l3400
 15002  013F0A                     u11910:
 15003                           
 15004                           ; BSR set to: 0
 15005                           
 15006                           ; BSR set to: 0
 15007                           
 15008                           ; BSR set to: 0
 15009  013F0A  5164               	movf	___llmod@divisor& (0+255),w,b
 15010  013F0C  5D60               	subwf	___llmod@dividend& (0+255),w,b
 15011  013F0E  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15012  013F10  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 15013  013F12  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15014  013F14  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 15015  013F16  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15016  013F18  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 15017  013F1A  A0D8               	btfss	status,0,c
 15018  013F1C  D008               	goto	l3403
 15019                           
 15020                           ; BSR set to: 0
 15021  013F1E  5164               	movf	___llmod@divisor& (0+255),w,b
 15022  013F20  5F60               	subwf	___llmod@dividend& (0+255),f,b
 15023  013F22  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15024  013F24  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 15025  013F26  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15026  013F28  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 15027  013F2A  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15028  013F2C  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 15029  013F2E                     l3403:
 15030                           
 15031                           ; BSR set to: 0
 15032                           
 15033                           ; BSR set to: 0
 15034  013F2E  90D8               	bcf	status,0,c
 15035  013F30  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 15036  013F32  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 15037  013F34  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 15038  013F36  3364               	rrcf	___llmod@divisor& (0+255),f,b
 15039                           
 15040                           ; BSR set to: 0
 15041  013F38  2F68               	decfsz	___llmod@counter& (0+255),f,b
 15042  013F3A  D7E7               	goto	u11910
 15043  013F3C                     l3404:
 15044                           
 15045                           ; BSR set to: 0
 15046                           
 15047                           ; BSR set to: 0
 15048  013F3C  C060  F060         	movff	___llmod@dividend,?___llmod
 15049  013F40  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 15050  013F44  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 15051  013F48  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 15052                           
 15053                           ; BSR set to: 0
 15054  013F4C  0012               	return		;funcret
 15055  013F4E                     __end_of___llmod:
 15056                           	opt stack 0
 15057                           tblptru	equ	0xFF8
 15058                           tblptrh	equ	0xFF7
 15059                           tblptrl	equ	0xFF6
 15060                           tablat	equ	0xFF5
 15061                           prodh	equ	0xFF4
 15062                           prodl	equ	0xFF3
 15063                           postinc0	equ	0xFEE
 15064                           wreg	equ	0xFE8
 15065                           postdec1	equ	0xFE5
 15066                           plusw1	equ	0xFE3
 15067                           fsr1h	equ	0xFE2
 15068                           fsr1l	equ	0xFE1
 15069                           indf2	equ	0xFDF
 15070                           postinc2	equ	0xFDE
 15071                           plusw2	equ	0xFDB
 15072                           fsr2h	equ	0xFDA
 15073                           fsr2l	equ	0xFD9
 15074                           status	equ	0xFD8
 15075                           
 15076 ;; *************** function ___lldiv *****************
 15077 ;; Defined at:
 15078 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 15079 ;; Parameters:    Size  Location     Type
 15080 ;;  dividend        4    0[BANK0 ] unsigned long 
 15081 ;;  divisor         4    4[BANK0 ] unsigned long 
 15082 ;; Auto vars:     Size  Location     Type
 15083 ;;  quotient        4    8[BANK0 ] unsigned long 
 15084 ;;  counter         1   12[BANK0 ] unsigned char 
 15085 ;; Return value:  Size  Location     Type
 15086 ;;                  4    0[BANK0 ] unsigned long 
 15087 ;; Registers used:
 15088 ;;		wreg, status,2, status,0
 15089 ;; Tracked objects:
 15090 ;;		On entry : 0/0
 15091 ;;		On exit  : 0/0
 15092 ;;		Unchanged: 0/0
 15093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15094 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15095 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15097 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15098 ;;Total ram usage:       13 bytes
 15099 ;; Hardware stack levels used:    1
 15100 ;; Hardware stack levels required when called:   10
 15101 ;; This function calls:
 15102 ;;		Nothing
 15103 ;; This function is called by:
 15104 ;;		_ultoa
 15105 ;; This function uses a non-reentrant model
 15106 ;;
 15107                           
 15108                           	psect	text55
 15109  013778                     __ptext55:
 15110                           	opt stack 0
 15111  013778                     ___lldiv:
 15112                           	opt stack 15
 15113                           
 15114                           ; BSR set to: 0
 15115                           ;incstack = 0
 15116  013778  0E00               	movlw	0
 15117  01377A  0100               	movlb	0	; () banked
 15118  01377C  6F68               	movwf	___lldiv@quotient& (0+255),b
 15119  01377E  0E00               	movlw	0
 15120  013780  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 15121  013782  0E00               	movlw	0
 15122  013784  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 15123  013786  0E00               	movlw	0
 15124  013788  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 15125                           
 15126                           ; BSR set to: 0
 15127  01378A  5164               	movf	___lldiv@divisor& (0+255),w,b
 15128  01378C  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15129  01378E  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15130  013790  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15131  013792  B4D8               	btfsc	status,2,c
 15132  013794  D02A               	goto	l3023
 15133                           
 15134                           ; BSR set to: 0
 15135  013796  0E01               	movlw	1
 15136  013798  6F6C               	movwf	___lldiv@counter& (0+255),b
 15137  01379A  D006               	goto	l3018
 15138  01379C                     
 15139                           ; BSR set to: 0
 15140                           
 15141                           ; BSR set to: 0
 15142  01379C  90D8               	bcf	status,0,c
 15143  01379E  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 15144  0137A0  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15145  0137A2  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15146  0137A4  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15147  0137A6  2B6C               	incf	___lldiv@counter& (0+255),f,b
 15148  0137A8                     l3018:
 15149                           
 15150                           ; BSR set to: 0
 15151                           
 15152                           ; BSR set to: 0
 15153  0137A8  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15154  0137AA  D7F8               	goto	l3019
 15155  0137AC                     u11880:
 15156                           
 15157                           ; BSR set to: 0
 15158                           
 15159                           ; BSR set to: 0
 15160                           
 15161                           ; BSR set to: 0
 15162  0137AC  90D8               	bcf	status,0,c
 15163  0137AE  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 15164  0137B0  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15165  0137B2  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15166  0137B4  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15167                           
 15168                           ; BSR set to: 0
 15169  0137B6  5164               	movf	___lldiv@divisor& (0+255),w,b
 15170  0137B8  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 15171  0137BA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15172  0137BC  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15173  0137BE  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15174  0137C0  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15175  0137C2  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15176  0137C4  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15177  0137C6  A0D8               	btfss	status,0,c
 15178  0137C8  D009               	goto	l3022
 15179                           
 15180                           ; BSR set to: 0
 15181  0137CA  5164               	movf	___lldiv@divisor& (0+255),w,b
 15182  0137CC  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 15183  0137CE  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15184  0137D0  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15185  0137D2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15186  0137D4  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15187  0137D6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15188  0137D8  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15189                           
 15190                           ; BSR set to: 0
 15191  0137DA  8168               	bsf	___lldiv@quotient& (0+255),0,b
 15192  0137DC                     l3022:
 15193                           
 15194                           ; BSR set to: 0
 15195                           
 15196                           ; BSR set to: 0
 15197  0137DC  90D8               	bcf	status,0,c
 15198  0137DE  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 15199  0137E0  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 15200  0137E2  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 15201  0137E4  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 15202                           
 15203                           ; BSR set to: 0
 15204  0137E6  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 15205  0137E8  D7E1               	goto	u11880
 15206  0137EA                     l3023:
 15207                           
 15208                           ; BSR set to: 0
 15209                           
 15210                           ; BSR set to: 0
 15211  0137EA  C068  F060         	movff	___lldiv@quotient,?___lldiv
 15212  0137EE  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 15213  0137F2  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 15214  0137F6  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 15215                           
 15216                           ; BSR set to: 0
 15217  0137FA  0012               	return		;funcret
 15218  0137FC                     __end_of___lldiv:
 15219                           	opt stack 0
 15220                           tblptru	equ	0xFF8
 15221                           tblptrh	equ	0xFF7
 15222                           tblptrl	equ	0xFF6
 15223                           tablat	equ	0xFF5
 15224                           prodh	equ	0xFF4
 15225                           prodl	equ	0xFF3
 15226                           postinc0	equ	0xFEE
 15227                           wreg	equ	0xFE8
 15228                           postdec1	equ	0xFE5
 15229                           plusw1	equ	0xFE3
 15230                           fsr1h	equ	0xFE2
 15231                           fsr1l	equ	0xFE1
 15232                           indf2	equ	0xFDF
 15233                           postinc2	equ	0xFDE
 15234                           plusw2	equ	0xFDB
 15235                           fsr2h	equ	0xFDA
 15236                           fsr2l	equ	0xFD9
 15237                           status	equ	0xFD8
 15238                           
 15239 ;; *************** function _configFile_readDefault *****************
 15240 ;; Defined at:
 15241 ;;		line 209 in file "config_file.c"
 15242 ;; Parameters:    Size  Location     Type
 15243 ;;		None
 15244 ;; Auto vars:     Size  Location     Type
 15245 ;;		None
 15246 ;; Return value:  Size  Location     Type
 15247 ;;                  1    wreg      void 
 15248 ;; Registers used:
 15249 ;;		wreg, status,2
 15250 ;; Tracked objects:
 15251 ;;		On entry : 0/0
 15252 ;;		On exit  : 0/0
 15253 ;;		Unchanged: 0/0
 15254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15259 ;;Total ram usage:        0 bytes
 15260 ;; Hardware stack levels used:    1
 15261 ;; Hardware stack levels required when called:   10
 15262 ;; This function calls:
 15263 ;;		Nothing
 15264 ;; This function is called by:
 15265 ;;		_system_init
 15266 ;; This function uses a non-reentrant model
 15267 ;;
 15268                           
 15269                           	psect	text56
 15270  013FB2                     __ptext56:
 15271                           	opt stack 0
 15272  013FB2                     _configFile_readDefault:
 15273                           	opt stack 19
 15274                           
 15275                           ;config_file.c: 211: config.full_circle_in_steps = 576000;
 15276                           
 15277                           ; BSR set to: 0
 15278                           ;incstack = 0
 15279  013FB2  0E00               	movlw	0
 15280  013FB4  0101               	movlb	1	; () banked
 15281  013FB6  6FA1               	movwf	_config& (0+255),b
 15282  013FB8  0ECA               	movlw	202
 15283  013FBA  6FA2               	movwf	(_config+1)& (0+255),b
 15284  013FBC  0E08               	movlw	8
 15285  013FBE  6FA3               	movwf	(_config+2)& (0+255),b
 15286  013FC0  0E00               	movlw	0
 15287  013FC2  6FA4               	movwf	(_config+3)& (0+255),b
 15288                           
 15289                           ;config_file.c: 212: config.inverse_direction = 1;
 15290  013FC4  0E01               	movlw	1
 15291  013FC6  6FA5               	movwf	(_config+4)& (0+255),b
 15292                           
 15293                           ;config_file.c: 213: config.overshoot_in_steps = 6400;
 15294  013FC8  0E19               	movlw	25
 15295  013FCA  6FA7               	movwf	(_config+6)& (0+255),b
 15296  013FCC  0E00               	movlw	0
 15297  013FCE  6FA6               	movwf	(_config+5)& (0+255),b
 15298                           
 15299                           ;config_file.c: 214: config.overshoot_cost_in_steps = 3000;
 15300  013FD0  0E0B               	movlw	11
 15301  013FD2  6FA9               	movwf	(_config+8)& (0+255),b
 15302  013FD4  0EB8               	movlw	184
 15303  013FD6  6FA8               	movwf	(_config+7)& (0+255),b
 15304                           
 15305                           ;config_file.c: 215: config.minimum_speed = 1;
 15306  013FD8  0E00               	movlw	0
 15307  013FDA  6FAB               	movwf	(_config+10)& (0+255),b
 15308  013FDC  0E01               	movlw	1
 15309  013FDE  6FAA               	movwf	(_config+9)& (0+255),b
 15310                           
 15311                           ;config_file.c: 216: config.maximum_speed = 380;
 15312  013FE0  0E01               	movlw	1
 15313  013FE2  6FAD               	movwf	(_config+12)& (0+255),b
 15314  013FE4  0E7C               	movlw	124
 15315  013FE6  6FAC               	movwf	(_config+11)& (0+255),b
 15316                           
 15317                           ;config_file.c: 217: config.maximum_speed_arc = 305;
 15318  013FE8  0E01               	movlw	1
 15319  013FEA  6FB1               	movwf	(_config+16)& (0+255),b
 15320  013FEC  0E31               	movlw	49
 15321  013FEE  6FB0               	movwf	(_config+15)& (0+255),b
 15322                           
 15323                           ;config_file.c: 218: config.maximum_speed_manual = 305;
 15324  013FF0  0E01               	movlw	1
 15325  013FF2  6FB5               	movwf	(_config+20)& (0+255),b
 15326  013FF4  0E31               	movlw	49
 15327  013FF6  6FB4               	movwf	(_config+19)& (0+255),b
 15328                           
 15329                           ;config_file.c: 219: config.use_ccw_limit = 0;
 15330  013FF8  0E00               	movlw	0
 15331  013FFA  6FBA               	movwf	(_config+25)& (0+255),b
 15332                           
 15333                           ;config_file.c: 220: config.ccw_limit = 35500;
 15334  013FFC  0E8A               	movlw	138
 15335  013FFE  6FBC               	movwf	(_config+27)& (0+255),b
 15336  014000  0EAC               	movlw	172
 15337  014002  6FBB               	movwf	(_config+26)& (0+255),b
 15338                           
 15339                           ;config_file.c: 221: config.use_cw_limit = 0;
 15340  014004  0E00               	movlw	0
 15341  014006  6FB7               	movwf	(_config+22)& (0+255),b
 15342                           
 15343                           ;config_file.c: 222: config.cw_limit = 500;
 15344  014008  0E01               	movlw	1
 15345  01400A  6FB9               	movwf	(_config+24)& (0+255),b
 15346  01400C  0EF4               	movlw	244
 15347  01400E  6FB8               	movwf	(_config+23)& (0+255),b
 15348                           
 15349                           ;config_file.c: 223: config.beep_duration = 10;
 15350  014010  0E0A               	movlw	10
 15351  014012  6FB6               	movwf	(_config+21)& (0+255),b
 15352                           
 15353                           ; BSR set to: 1
 15354  014014  0012               	return		;funcret
 15355  014016                     __end_of_configFile_readDefault:
 15356                           	opt stack 0
 15357                           tblptru	equ	0xFF8
 15358                           tblptrh	equ	0xFF7
 15359                           tblptrl	equ	0xFF6
 15360                           tablat	equ	0xFF5
 15361                           prodh	equ	0xFF4
 15362                           prodl	equ	0xFF3
 15363                           postinc0	equ	0xFEE
 15364                           wreg	equ	0xFE8
 15365                           postdec1	equ	0xFE5
 15366                           plusw1	equ	0xFE3
 15367                           fsr1h	equ	0xFE2
 15368                           fsr1l	equ	0xFE1
 15369                           indf2	equ	0xFDF
 15370                           postinc2	equ	0xFDE
 15371                           plusw2	equ	0xFDB
 15372                           fsr2h	equ	0xFDA
 15373                           fsr2l	equ	0xFD9
 15374                           status	equ	0xFD8
 15375                           
 15376 ;; *************** function _configFile_read *****************
 15377 ;; Defined at:
 15378 ;;		line 227 in file "config_file.c"
 15379 ;; Parameters:    Size  Location     Type
 15380 ;;		None
 15381 ;; Auto vars:     Size  Location     Type
 15382 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 15383 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 15384 ;;  position        4   56[BANK1 ] unsigned long 
 15385 ;;  file_size       4   51[BANK1 ] unsigned long 
 15386 ;;  file_number     1   55[BANK1 ] unsigned char 
 15387 ;; Return value:  Size  Location     Type
 15388 ;;                  1    wreg      void 
 15389 ;; Registers used:
 15390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15391 ;; Tracked objects:
 15392 ;;		On entry : 0/0
 15393 ;;		On exit  : 0/0
 15394 ;;		Unchanged: 0/0
 15395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15397 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15398 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15399 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15400 ;;Total ram usage:       60 bytes
 15401 ;; Hardware stack levels used:    1
 15402 ;; Hardware stack levels required when called:   19
 15403 ;; This function calls:
 15404 ;;		__get_item
 15405 ;;		__parse_item
 15406 ;;		_fat_find_file
 15407 ;;		_fat_get_file_size
 15408 ;;		_fat_read_from_file
 15409 ;; This function is called by:
 15410 ;;		_system_init
 15411 ;; This function uses a non-reentrant model
 15412 ;;
 15413                           
 15414                           	psect	text57
 15415  00F3F0                     __ptext57:
 15416                           	opt stack 0
 15417  00F3F0                     _configFile_read:
 15418                           	opt stack 10
 15419                           
 15420                           ;config_file.c: 229: uint8_t file_number;;config_file.c: 230: uint32_t file_size;;config
      +                          _file.c: 231: uint32_t position;;config_file.c: 232: char item_string[31];;config_file.c
      +                          : 233: char value_string[12];;config_file.c: 236: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 15421                           
 15422                           ; BSR set to: 1
 15423                           ;incstack = 0
 15424  00F3F0  0EC8               	movlw	low _configFile_name
 15425  00F3F2  0100               	movlb	0	; () banked
 15426  00F3F4  6F8B               	movwf	fat_find_file@name& (0+255),b
 15427  00F3F6  0E02               	movlw	high _configFile_name
 15428  00F3F8  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 15429  00F3FA  0ED3               	movlw	low _configFile_extention
 15430  00F3FC  6F8D               	movwf	fat_find_file@extension& (0+255),b
 15431  00F3FE  0E02               	movlw	high _configFile_extention
 15432  00F400  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 15433  00F402  EC3B  F08C         	call	_fat_find_file	;wreg free
 15434  00F406  0101               	movlb	1	; () banked
 15435  00F408  6FFA               	movwf	configFile_read@file_number& (0+255),b
 15436                           
 15437                           ; BSR set to: 1
 15438                           ;config_file.c: 237: if(file_number==0xFF)
 15439  00F40A  29FA               	incf	configFile_read@file_number& (0+255),w,b
 15440  00F40C  B4D8               	btfsc	status,2,c
 15441  00F40E  0012               	return	
 15442                           
 15443                           ; BSR set to: 1
 15444                           ;config_file.c: 241: };config_file.c: 244: file_size = fat_get_file_size(file_number);
 15445                           
 15446                           ; BSR set to: 1
 15447                           
 15448                           ; BSR set to: 1
 15449                           ;config_file.c: 238: {;config_file.c: 240: return;
 15450  00F410  51FA               	movf	configFile_read@file_number& (0+255),w,b
 15451  00F412  EC7A  F09D         	call	_fat_get_file_size
 15452  00F416  C095  F1F6         	movff	?_fat_get_file_size,configFile_read@file_size
 15453  00F41A  C096  F1F7         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 15454  00F41E  C097  F1F8         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 15455  00F422  C098  F1F9         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 15456                           
 15457                           ;config_file.c: 247: position = 0;
 15458  00F426  0E00               	movlw	0
 15459  00F428  0101               	movlb	1	; () banked
 15460  00F42A  6FFB               	movwf	configFile_read@position& (0+255),b
 15461  00F42C  0E00               	movlw	0
 15462  00F42E  6FFC               	movwf	(configFile_read@position+1)& (0+255),b
 15463  00F430  0E00               	movlw	0
 15464  00F432  6FFD               	movwf	(configFile_read@position+2)& (0+255),b
 15465  00F434  0E00               	movlw	0
 15466  00F436  6FFE               	movwf	(configFile_read@position+3)& (0+255),b
 15467                           
 15468                           ;config_file.c: 248: while((file_size-position)>3)
 15469  00F438  D086               	goto	l2978
 15470  00F43A                     
 15471                           ; BSR set to: 1
 15472                           ;config_file.c: 249: {;config_file.c: 250: if((position+45) > file_size)
 15473                           
 15474                           ; BSR set to: 1
 15475  00F43A  0E2D               	movlw	45
 15476  00F43C  25FB               	addwf	configFile_read@position& (0+255),w,b
 15477  00F43E  6FC3               	movwf	??_configFile_read& (0+255),b
 15478  00F440  0E00               	movlw	0
 15479  00F442  21FC               	addwfc	(configFile_read@position+1)& (0+255),w,b
 15480  00F444  6FC4               	movwf	(??_configFile_read+1)& (0+255),b
 15481  00F446  0E00               	movlw	0
 15482  00F448  21FD               	addwfc	(configFile_read@position+2)& (0+255),w,b
 15483  00F44A  6FC5               	movwf	(??_configFile_read+2)& (0+255),b
 15484  00F44C  0E00               	movlw	0
 15485  00F44E  21FE               	addwfc	(configFile_read@position+3)& (0+255),w,b
 15486  00F450  6FC6               	movwf	(??_configFile_read+3)& (0+255),b
 15487  00F452  51C3               	movf	??_configFile_read& (0+255),w,b
 15488  00F454  5DF6               	subwf	configFile_read@file_size& (0+255),w,b
 15489  00F456  51C4               	movf	(??_configFile_read+1)& (0+255),w,b
 15490  00F458  59F7               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 15491  00F45A  51C5               	movf	(??_configFile_read+2)& (0+255),w,b
 15492  00F45C  59F8               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 15493  00F45E  51C6               	movf	(??_configFile_read+3)& (0+255),w,b
 15494  00F460  59F9               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 15495  00F462  B0D8               	btfsc	status,0,c
 15496  00F464  D035               	goto	l2980
 15497                           
 15498                           ; BSR set to: 1
 15499                           ;config_file.c: 251: {;config_file.c: 253: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 15500  00F466  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15501  00F46A  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15502  00F46E  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15503  00F472  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15504  00F476  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 15505  00F47A  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 15506  00F47E  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 15507  00F482  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 15508  00F486  1FC3               	comf	??_configFile_read& (0+255),f,b
 15509  00F488  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 15510  00F48A  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 15511  00F48C  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 15512  00F48E  2BC3               	incf	??_configFile_read& (0+255),f,b
 15513  00F490  0E00               	movlw	0
 15514  00F492  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15515  00F494  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15516  00F496  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15517  00F498  51F6               	movf	configFile_read@file_size& (0+255),w,b
 15518  00F49A  25C3               	addwf	??_configFile_read& (0+255),w,b
 15519  00F49C  0100               	movlb	0	; () banked
 15520  00F49E  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15521  00F4A0  0101               	movlb	1	; () banked
 15522  00F4A2  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15523  00F4A4  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15524  00F4A6  0100               	movlb	0	; () banked
 15525  00F4A8  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15526  00F4AA  0101               	movlb	1	; () banked
 15527  00F4AC  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15528  00F4AE  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15529  00F4B0  0100               	movlb	0	; () banked
 15530  00F4B2  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15531  00F4B4  0101               	movlb	1	; () banked
 15532  00F4B6  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15533  00F4B8  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15534  00F4BA  0100               	movlb	0	; () banked
 15535  00F4BC  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15536  00F4BE  0E00               	movlw	low _ConfigFile_buffer
 15537  00F4C0  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15538  00F4C2  0E08               	movlw	high _ConfigFile_buffer
 15539  00F4C4  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15540  00F4C6  0101               	movlb	1	; () banked
 15541  00F4C8  51FA               	movf	configFile_read@file_number& (0+255),w,b
 15542  00F4CA  ECAF  F08C         	call	_fat_read_from_file
 15543                           
 15544                           ;config_file.c: 254: }
 15545  00F4CE  D019               	goto	l2981
 15546  00F4D0                     l2980:
 15547                           
 15548                           ;config_file.c: 255: else;config_file.c: 256: {;config_file.c: 258: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 15549  00F4D0  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15550  00F4D4  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15551  00F4D8  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15552  00F4DC  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15553  00F4E0  0E2D               	movlw	45
 15554  00F4E2  0100               	movlb	0	; () banked
 15555  00F4E4  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15556  00F4E6  0E00               	movlw	0
 15557  00F4E8  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15558  00F4EA  0E00               	movlw	0
 15559  00F4EC  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15560  00F4EE  0E00               	movlw	0
 15561  00F4F0  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15562  00F4F2  0E00               	movlw	low _ConfigFile_buffer
 15563  00F4F4  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15564  00F4F6  0E08               	movlw	high _ConfigFile_buffer
 15565  00F4F8  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15566  00F4FA  0101               	movlb	1	; () banked
 15567  00F4FC  51FA               	movf	configFile_read@file_number& (0+255),w,b
 15568  00F4FE  ECAF  F08C         	call	_fat_read_from_file
 15569  00F502                     l2981:
 15570                           
 15571                           ;config_file.c: 259: };config_file.c: 262: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 15572  00F502  0ECB               	movlw	low configFile_read@item_string
 15573  00F504  0100               	movlb	0	; () banked
 15574  00F506  6F60               	movwf	__get_item@item_string& (0+255),b
 15575  00F508  0E01               	movlw	high configFile_read@item_string
 15576  00F50A  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 15577  00F50C  0EEA               	movlw	low configFile_read@value_string
 15578  00F50E  6F62               	movwf	__get_item@value_string& (0+255),b
 15579  00F510  0E01               	movlw	high configFile_read@value_string
 15580  00F512  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 15581  00F514  0E00               	movlw	low _ConfigFile_buffer
 15582  00F516  6F64               	movwf	__get_item@buffer& (0+255),b
 15583  00F518  0E08               	movlw	high _ConfigFile_buffer
 15584  00F51A  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 15585  00F51C  ECCA  F07A         	call	__get_item	;wreg free
 15586  00F520  0101               	movlb	1	; () banked
 15587  00F522  6FC3               	movwf	??_configFile_read& (0+255),b
 15588  00F524  51C3               	movf	??_configFile_read& (0+255),w,b
 15589  00F526  27FB               	addwf	configFile_read@position& (0+255),f,b
 15590  00F528  0E00               	movlw	0
 15591  00F52A  23FC               	addwfc	(configFile_read@position+1)& (0+255),f,b
 15592  00F52C  23FD               	addwfc	(configFile_read@position+2)& (0+255),f,b
 15593  00F52E  23FE               	addwfc	(configFile_read@position+3)& (0+255),f,b
 15594                           
 15595                           ; BSR set to: 1
 15596                           ;config_file.c: 265: _parse_item(&item_string[0], &value_string[0]);
 15597  00F530  0ECB               	movlw	low configFile_read@item_string
 15598  00F532  0100               	movlb	0	; () banked
 15599  00F534  6F7A               	movwf	__parse_item@item_string& (0+255),b
 15600  00F536  0E01               	movlw	high configFile_read@item_string
 15601  00F538  6F7B               	movwf	(__parse_item@item_string+1)& (0+255),b
 15602  00F53A  0EEA               	movlw	low configFile_read@value_string
 15603  00F53C  6F7C               	movwf	__parse_item@value_string& (0+255),b
 15604  00F53E  0E01               	movlw	high configFile_read@value_string
 15605  00F540  6F7D               	movwf	(__parse_item@value_string+1)& (0+255),b
 15606  00F542  EC84  F064         	call	__parse_item	;wreg free
 15607  00F546                     l2978:
 15608  00F546  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 15609  00F54A  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 15610  00F54E  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 15611  00F552  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 15612  00F556  0101               	movlb	1	; () banked
 15613  00F558  1FC3               	comf	??_configFile_read& (0+255),f,b
 15614  00F55A  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 15615  00F55C  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 15616  00F55E  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 15617  00F560  2BC3               	incf	??_configFile_read& (0+255),f,b
 15618  00F562  0E00               	movlw	0
 15619  00F564  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15620  00F566  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15621  00F568  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15622  00F56A  51F6               	movf	configFile_read@file_size& (0+255),w,b
 15623  00F56C  25C3               	addwf	??_configFile_read& (0+255),w,b
 15624  00F56E  6FC7               	movwf	(??_configFile_read+4)& (0+255),b
 15625  00F570  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15626  00F572  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15627  00F574  6FC8               	movwf	(??_configFile_read+5)& (0+255),b
 15628  00F576  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15629  00F578  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15630  00F57A  6FC9               	movwf	(??_configFile_read+6)& (0+255),b
 15631  00F57C  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15632  00F57E  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15633  00F580  6FCA               	movwf	(??_configFile_read+7)& (0+255),b
 15634  00F582  51CA               	movf	(??_configFile_read+7)& (0+255),w,b
 15635  00F584  11C9               	iorwf	(??_configFile_read+6)& (0+255),w,b
 15636  00F586  11C8               	iorwf	(??_configFile_read+5)& (0+255),w,b
 15637  00F588  E104               	bnz	u16331
 15638  00F58A  0E04               	movlw	4
 15639  00F58C  5DC7               	subwf	(??_configFile_read+4)& (0+255),w,b
 15640  00F58E  A0D8               	btfss	status,0,c
 15641  00F590  0012               	return	
 15642  00F592                     u16331:
 15643  00F592  D753               	goto	l2979
 15644  00F594                     __end_of_configFile_read:
 15645                           	opt stack 0
 15646                           tblptru	equ	0xFF8
 15647                           tblptrh	equ	0xFF7
 15648                           tblptrl	equ	0xFF6
 15649                           tablat	equ	0xFF5
 15650                           prodh	equ	0xFF4
 15651                           prodl	equ	0xFF3
 15652                           postinc0	equ	0xFEE
 15653                           wreg	equ	0xFE8
 15654                           postdec1	equ	0xFE5
 15655                           plusw1	equ	0xFE3
 15656                           fsr1h	equ	0xFE2
 15657                           fsr1l	equ	0xFE1
 15658                           indf2	equ	0xFDF
 15659                           postinc2	equ	0xFDE
 15660                           plusw2	equ	0xFDB
 15661                           fsr2h	equ	0xFDA
 15662                           fsr2l	equ	0xFD9
 15663                           status	equ	0xFD8
 15664                           
 15665 ;; *************** function _fat_read_from_file *****************
 15666 ;; Defined at:
 15667 ;;		line 752 in file "fat16.c"
 15668 ;; Parameters:    Size  Location     Type
 15669 ;;  file_number     1    wreg     unsigned char 
 15670 ;;  start_byte      4  105[BANK0 ] unsigned long 
 15671 ;;  length          4  109[BANK0 ] unsigned long 
 15672 ;;  data            2  113[BANK0 ] PTR unsigned char 
 15673 ;;		 -> ConfigFile_buffer(512), 
 15674 ;; Auto vars:     Size  Location     Type
 15675 ;;  file_number     1  119[BANK0 ] unsigned char 
 15676 ;;  root           32  125[BANK0 ] struct .
 15677 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 15678 ;;  cluster         2  121[BANK0 ] unsigned int 
 15679 ;;  return_code     1  120[BANK0 ] unsigned char 
 15680 ;; Return value:  Size  Location     Type
 15681 ;;                  1    wreg      unsigned char 
 15682 ;; Registers used:
 15683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15684 ;; Tracked objects:
 15685 ;;		On entry : 0/0
 15686 ;;		On exit  : 0/0
 15687 ;;		Unchanged: 0/0
 15688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15689 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15690 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15691 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15692 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15693 ;;Total ram usage:       52 bytes
 15694 ;; Hardware stack levels used:    1
 15695 ;; Hardware stack levels required when called:   18
 15696 ;; This function calls:
 15697 ;;		_fat_get_file_information
 15698 ;;		_fat_read_from_file_fast
 15699 ;; This function is called by:
 15700 ;;		_configFile_read
 15701 ;; This function uses a non-reentrant model
 15702 ;;
 15703                           
 15704                           	psect	text58
 15705  01195E                     __ptext58:
 15706                           	opt stack 0
 15707  01195E                     _fat_read_from_file:
 15708                           	opt stack 10
 15709                           
 15710                           ; BSR set to: 1
 15711                           ;incstack = 0
 15712                           ;fat_read_from_file@file_number stored from wreg
 15713  01195E  0100               	movlb	0	; () banked
 15714  011960  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 15715                           
 15716                           ;fat16.c: 754: rootEntry_t root;;fat16.c: 755: uint16_t cluster;;fat16.c: 756: uint16_t 
      +                          cluster_number;;fat16.c: 757: uint8_t return_code;;fat16.c: 760: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 15717  011962  0EDD               	movlw	low fat_read_from_file@root
 15718  011964  0100               	movlb	0	; () banked
 15719  011966  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 15720  011968  0E00               	movlw	high fat_read_from_file@root
 15721  01196A  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 15722  01196C  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 15723  01196E  EC3D  F09D         	call	_fat_get_file_information
 15724  011972  0100               	movlb	0	; () banked
 15725  011974  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 15726                           
 15727                           ; BSR set to: 0
 15728                           ;fat16.c: 761: if(return_code!=0x00)
 15729  011976  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 15730  011978  A4D8               	btfss	status,2,c
 15731  01197A  0012               	return	
 15732                           
 15733                           ; BSR set to: 0
 15734                           ;fat16.c: 765: };fat16.c: 768: if(start_byte > root.fileSize)
 15735                           
 15736                           ; BSR set to: 0
 15737                           
 15738                           ; BSR set to: 0
 15739                           ;fat16.c: 762: {;fat16.c: 764: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 15740  01197C  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 15741  01197E  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 15742  011980  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 15743  011982  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 15744  011984  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 15745  011986  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 15746  011988  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 15747  01198A  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 15748  01198C  A0D8               	btfss	status,0,c
 15749  01198E  0012               	return	
 15750                           
 15751                           ; BSR set to: 0
 15752                           ;fat16.c: 772: };fat16.c: 774: if(start_byte+length > root.fileSize)
 15753                           
 15754                           ; BSR set to: 0
 15755                           
 15756                           ; BSR set to: 0
 15757                           ;fat16.c: 769: {;fat16.c: 771: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 15758  011990  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 15759  011992  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 15760  011994  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 15761  011996  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 15762  011998  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 15763  01199A  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 15764  01199C  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 15765  01199E  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 15766  0119A0  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 15767  0119A2  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 15768  0119A4  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 15769  0119A6  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 15770  0119A8  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 15771  0119AA  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 15772  0119AC  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 15773  0119AE  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 15774  0119B0  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 15775  0119B2  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 15776  0119B4  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 15777  0119B6  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 15778  0119B8  B0D8               	btfsc	status,0,c
 15779  0119BA  D01D               	goto	l1877
 15780                           
 15781                           ; BSR set to: 0
 15782                           ;fat16.c: 775: {;fat16.c: 777: length = root.fileSize - start_byte;
 15783  0119BC  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 15784  0119C0  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 15785  0119C4  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 15786  0119C8  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 15787  0119CC  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 15788  0119CE  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 15789  0119D0  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 15790  0119D2  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 15791  0119D4  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 15792  0119D6  0E00               	movlw	0
 15793  0119D8  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 15794  0119DA  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 15795  0119DC  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 15796  0119DE  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 15797  0119E0  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 15798  0119E2  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15799  0119E4  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 15800  0119E6  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 15801  0119E8  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15802  0119EA  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 15803  0119EC  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 15804  0119EE  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15805  0119F0  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 15806  0119F2  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 15807  0119F4  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15808  0119F6                     l1877:
 15809                           
 15810                           ; BSR set to: 0
 15811                           ;fat16.c: 778: };fat16.c: 781: cluster = root.firstCluster;
 15812                           
 15813                           ; BSR set to: 0
 15814  0119F6  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 15815  0119FA  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 15816                           
 15817                           ; BSR set to: 0
 15818                           ;fat16.c: 782: cluster_number = 0;
 15819  0119FE  0E00               	movlw	0
 15820  011A00  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 15821  011A02  0E00               	movlw	0
 15822  011A04  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 15823                           
 15824                           ; BSR set to: 0
 15825                           ;fat16.c: 785: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 15826  011A06  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 15827  011A0A  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 15828  011A0E  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 15829  011A12  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 15830  011A16  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 15831  011A1A  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 15832  011A1E  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 15833  011A22  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 15834  011A26  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 15835  011A2A  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 15836  011A2E  0ED9               	movlw	low fat_read_from_file@cluster
 15837  011A30  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 15838  011A32  0E00               	movlw	high fat_read_from_file@cluster
 15839  011A34  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 15840  011A36  0EDB               	movlw	low fat_read_from_file@cluster_number
 15841  011A38  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 15842  011A3A  0E00               	movlw	high fat_read_from_file@cluster_number
 15843  011A3C  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 15844  011A3E  EC20  F074         	call	_fat_read_from_file_fast	;wreg free
 15845  011A42  0012               	return	
 15846  011A44                     __end_of_fat_read_from_file:
 15847                           	opt stack 0
 15848                           tblptru	equ	0xFF8
 15849                           tblptrh	equ	0xFF7
 15850                           tblptrl	equ	0xFF6
 15851                           tablat	equ	0xFF5
 15852                           prodh	equ	0xFF4
 15853                           prodl	equ	0xFF3
 15854                           postinc0	equ	0xFEE
 15855                           wreg	equ	0xFE8
 15856                           postdec1	equ	0xFE5
 15857                           plusw1	equ	0xFE3
 15858                           fsr1h	equ	0xFE2
 15859                           fsr1l	equ	0xFE1
 15860                           indf2	equ	0xFDF
 15861                           postinc2	equ	0xFDE
 15862                           plusw2	equ	0xFDB
 15863                           fsr2h	equ	0xFDA
 15864                           fsr2l	equ	0xFD9
 15865                           status	equ	0xFD8
 15866                           
 15867 ;; *************** function _fat_read_from_file_fast *****************
 15868 ;; Defined at:
 15869 ;;		line 788 in file "fat16.c"
 15870 ;; Parameters:    Size  Location     Type
 15871 ;;  start_byte      4   65[BANK0 ] unsigned long 
 15872 ;;  length          4   69[BANK0 ] unsigned long 
 15873 ;;  data            2   73[BANK0 ] PTR unsigned char 
 15874 ;;		 -> ConfigFile_buffer(512), 
 15875 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 15876 ;;		 -> fat_read_from_file@cluster(2), 
 15877 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 15878 ;;		 -> fat_read_from_file@cluster_number(2), 
 15879 ;; Auto vars:     Size  Location     Type
 15880 ;;  position        4  101[BANK0 ] unsigned long 
 15881 ;;  read_length     2   99[BANK0 ] unsigned int 
 15882 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 15883 ;;  offset          2   95[BANK0 ] unsigned int 
 15884 ;;  working_clus    2   93[BANK0 ] unsigned int 
 15885 ;;  sector          2   91[BANK0 ] unsigned int 
 15886 ;; Return value:  Size  Location     Type
 15887 ;;                  1    wreg      unsigned char 
 15888 ;; Registers used:
 15889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15890 ;; Tracked objects:
 15891 ;;		On entry : 0/0
 15892 ;;		On exit  : 0/0
 15893 ;;		Unchanged: 0/0
 15894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15895 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15896 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15897 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15898 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15899 ;;Total ram usage:       40 bytes
 15900 ;; Hardware stack levels used:    1
 15901 ;; Hardware stack levels required when called:   17
 15902 ;; This function calls:
 15903 ;;		__data_sector_from_cluster
 15904 ;;		__find_nth_cluster
 15905 ;;		__read_fat
 15906 ;;		_flash_partial_read
 15907 ;; This function is called by:
 15908 ;;		_fat_read_from_file
 15909 ;; This function uses a non-reentrant model
 15910 ;;
 15911                           
 15912                           	psect	text59
 15913  00E840                     __ptext59:
 15914                           	opt stack 0
 15915  00E840                     _fat_read_from_file_fast:
 15916                           	opt stack 10
 15917                           
 15918                           ;fat16.c: 790: uint32_t position;;fat16.c: 791: uint16_t offset;;fat16.c: 792: uint16_t 
      +                          sector;;fat16.c: 793: uint16_t read_length;;fat16.c: 794: uint16_t working_cluster;;fat1
      +                          6.c: 795: uint16_t needed_cluster;;fat16.c: 798: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 15919                           
 15920                           ;incstack = 0
 15921  00E840  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 15922  00E844  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 15923  00E848  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 15924  00E84C  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 15925  00E850  0E0A               	movlw	10
 15926  00E852  D006               	goto	u13510
 15927  00E854                     u13515:
 15928  00E854  0100               	movlb	0	; () banked
 15929  00E856  90D8               	bcf	status,0,c
 15930  00E858  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 15931  00E85A  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 15932  00E85C  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 15933  00E85E  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 15934  00E860                     u13510:
 15935  00E860  2EE8               	decfsz	wreg,f,c
 15936  00E862  D7F8               	goto	u13515
 15937  00E864  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 15938  00E868  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 15939                           
 15940                           ; BSR set to: 0
 15941                           ;fat16.c: 801: if((*cluster_number) > needed_cluster)
 15942  00E86C  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 15943  00E870  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 15944  00E874  50DE               	movf	postinc2,w,c
 15945  00E876  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 15946  00E878  50DE               	movf	postinc2,w,c
 15947  00E87A  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 15948  00E87C  B0D8               	btfsc	status,0,c
 15949  00E87E  D002               	goto	l1880
 15950                           
 15951                           ; BSR set to: 0
 15952                           ;fat16.c: 802: {;fat16.c: 803: return 0xFF;
 15953  00E880  0EFF               	movlw	255
 15954                           
 15955                           ; BSR set to: 0
 15956  00E882  0012               	return	
 15957  00E884                     l1880:
 15958                           
 15959                           ; BSR set to: 0
 15960                           ;fat16.c: 804: };fat16.c: 807: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 15961                           
 15962                           ; BSR set to: 0
 15963  00E884  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 15964  00E888  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 15965  00E88C  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 15966  00E890  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 15967  00E894  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 15968  00E898  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 15969  00E89C  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 15970  00E8A0  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 15971  00E8A4  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 15972  00E8A6  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 15973  00E8A8  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 15974  00E8AA  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 15975  00E8AC  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 15976  00E8AE  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 15977  00E8B0  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 15978  00E8B2  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 15979  00E8B4  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 15980  00E8B6  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 15981  00E8B8  ECA3  F097         	call	__find_nth_cluster	;wreg free
 15982  00E8BC  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 15983  00E8C0  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 15984  00E8C4  0100               	movlb	0	; () banked
 15985  00E8C6  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 15986  00E8CA  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 15987                           
 15988                           ; BSR set to: 0
 15989                           ;fat16.c: 810: (*cluster_number) = needed_cluster;
 15990  00E8CE  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 15991  00E8D2  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 15992  00E8D6  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 15993  00E8DA  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 15994                           
 15995                           ; BSR set to: 0
 15996                           ;fat16.c: 814: working_cluster = (*cluster);
 15997  00E8DE  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 15998  00E8E2  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 15999  00E8E6  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 16000  00E8EA  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 16001                           
 16002                           ; BSR set to: 0
 16003                           ;fat16.c: 817: position = (needed_cluster << 9);
 16004  00E8EE  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 16005  00E8F2  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 16006  00E8F6  0E09               	movlw	9
 16007  00E8F8                     u13535:
 16008  00E8F8  90D8               	bcf	status,0,c
 16009  00E8FA  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 16010  00E8FC  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16011  00E8FE  2EE8               	decfsz	wreg,f,c
 16012  00E900  D7FB               	goto	u13535
 16013  00E902  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 16014  00E906  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 16015  00E90A  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 16016  00E90C  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 16017                           
 16018                           ; BSR set to: 0
 16019                           ;fat16.c: 818: offset = start_byte - position;
 16020  00E90E  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16021  00E912  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16022  00E916  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16023  00E918  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16024  00E91A  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16025  00E91C  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16026  00E91E  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 16027  00E920  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16028  00E922  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16029  00E924  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 16030  00E926  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16031  00E928  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16032                           
 16033                           ; BSR set to: 0
 16034                           ;fat16.c: 821: position = 0;
 16035  00E92A  0E00               	movlw	0
 16036  00E92C  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 16037  00E92E  0E00               	movlw	0
 16038  00E930  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 16039  00E932  0E00               	movlw	0
 16040  00E934  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 16041  00E936  0E00               	movlw	0
 16042  00E938  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 16043                           
 16044                           ;fat16.c: 822: while(position < length)
 16045  00E93A  D089               	goto	l1882
 16046  00E93C                     
 16047                           ; BSR set to: 0
 16048                           ;fat16.c: 823: {;fat16.c: 825: if(offset==512)
 16049                           
 16050                           ; BSR set to: 0
 16051  00E93C  0E02               	movlw	2
 16052  00E93E  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 16053  00E940  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 16054  00E942  A4D8               	btfss	status,2,c
 16055  00E944  D00F               	goto	l1884
 16056                           
 16057                           ; BSR set to: 0
 16058                           ;fat16.c: 826: {;fat16.c: 828: working_cluster = _read_fat(working_cluster);
 16059  00E946  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 16060  00E94A  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 16061  00E94E  EC6D  F0A2         	call	__read_fat	;wreg free
 16062  00E952  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 16063  00E956  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 16064                           
 16065                           ;fat16.c: 829: offset = 0;
 16066  00E95A  0E00               	movlw	0
 16067  00E95C  0100               	movlb	0	; () banked
 16068  00E95E  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16069  00E960  0E00               	movlw	0
 16070  00E962  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16071  00E964                     l1884:
 16072                           
 16073                           ; BSR set to: 0
 16074                           ;fat16.c: 830: };fat16.c: 833: sector = _data_sector_from_cluster(working_cluster);
 16075                           
 16076                           ; BSR set to: 0
 16077  00E964  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 16078  00E968  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 16079  00E96C  EC09  F0AB         	call	__data_sector_from_cluster	;wreg free
 16080  00E970  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 16081  00E974  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 16082                           
 16083                           ;fat16.c: 836: read_length = 512 - offset;
 16084  00E978  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 16085  00E97C  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 16086  00E980  0100               	movlb	0	; () banked
 16087  00E982  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16088  00E984  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16089  00E986  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16090  00E988  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16091  00E98A  0E00               	movlw	0
 16092  00E98C  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16093  00E98E  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16094  00E990  0E02               	movlw	2
 16095  00E992  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16096  00E994  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16097                           
 16098                           ; BSR set to: 0
 16099                           ;fat16.c: 837: if(read_length > (length-position))
 16100  00E996  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16101  00E998  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 16102  00E99A  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16103  00E99C  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 16104  00E99E  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 16105  00E9A0  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 16106  00E9A2  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 16107  00E9A6  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 16108  00E9AA  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 16109  00E9AE  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 16110  00E9B2  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16111  00E9B4  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16112  00E9B6  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16113  00E9B8  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16114  00E9BA  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16115  00E9BC  0E00               	movlw	0
 16116  00E9BE  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16117  00E9C0  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16118  00E9C2  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16119  00E9C4  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16120  00E9C6  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 16121  00E9C8  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 16122  00E9CA  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16123  00E9CC  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 16124  00E9CE  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 16125  00E9D0  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16126  00E9D2  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 16127  00E9D4  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 16128  00E9D6  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16129  00E9D8  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 16130  00E9DA  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 16131  00E9DC  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 16132  00E9DE  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 16133  00E9E0  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16134  00E9E2  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 16135  00E9E4  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 16136  00E9E6  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 16137  00E9E8  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 16138  00E9EA  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 16139  00E9EC  B0D8               	btfsc	status,0,c
 16140  00E9EE  D00E               	goto	l1885
 16141                           
 16142                           ; BSR set to: 0
 16143                           ;fat16.c: 838: {;fat16.c: 840: read_length = length - position;
 16144  00E9F0  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16145  00E9F4  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16146  00E9F8  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16147  00E9FA  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16148  00E9FC  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16149  00E9FE  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16150  00EA00  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16151  00EA02  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16152  00EA04  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16153  00EA06  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16154  00EA08  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16155  00EA0A  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16156  00EA0C                     l1885:
 16157                           
 16158                           ; BSR set to: 0
 16159                           ;fat16.c: 841: };fat16.c: 844: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 16160                           
 16161                           ; BSR set to: 0
 16162  00EA0C  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 16163  00EA10  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 16164  00EA14  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 16165  00EA18  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 16166  00EA1C  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 16167  00EA20  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 16168  00EA24  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 16169  00EA26  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 16170  00EA28  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16171  00EA2A  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16172  00EA2C  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 16173  00EA2E  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16174  00EA30  ECC9  F0A9         	call	_flash_partial_read	;wreg free
 16175                           
 16176                           ;fat16.c: 847: position += read_length;
 16177  00EA34  0100               	movlb	0	; () banked
 16178  00EA36  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16179  00EA38  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 16180  00EA3A  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16181  00EA3C  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 16182  00EA3E  0E00               	movlw	0
 16183  00EA40  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 16184  00EA42  0E00               	movlw	0
 16185  00EA44  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 16186                           
 16187                           ; BSR set to: 0
 16188                           ;fat16.c: 848: offset += read_length;
 16189  00EA46  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16190  00EA48  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 16191  00EA4A  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16192  00EA4C  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 16193  00EA4E                     l1882:
 16194                           
 16195                           ; BSR set to: 0
 16196                           
 16197                           ; BSR set to: 0
 16198  00EA4E  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16199  00EA50  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 16200  00EA52  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16201  00EA54  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16202  00EA56  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16203  00EA58  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 16204  00EA5A  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16205  00EA5C  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 16206  00EA5E  A0D8               	btfss	status,0,c
 16207  00EA60  D76D               	goto	l1883
 16208                           
 16209                           ; BSR set to: 0
 16210                           ;fat16.c: 849: };fat16.c: 852: return 0x00;
 16211                           
 16212                           ; BSR set to: 0
 16213  00EA62  0E00               	movlw	0
 16214  00EA64  0012               	return	
 16215  00EA66                     __end_of_fat_read_from_file_fast:
 16216                           	opt stack 0
 16217                           tblptru	equ	0xFF8
 16218                           tblptrh	equ	0xFF7
 16219                           tblptrl	equ	0xFF6
 16220                           tablat	equ	0xFF5
 16221                           prodh	equ	0xFF4
 16222                           prodl	equ	0xFF3
 16223                           postinc0	equ	0xFEE
 16224                           wreg	equ	0xFE8
 16225                           postdec1	equ	0xFE5
 16226                           plusw1	equ	0xFE3
 16227                           fsr1h	equ	0xFE2
 16228                           fsr1l	equ	0xFE1
 16229                           indf2	equ	0xFDF
 16230                           postinc2	equ	0xFDE
 16231                           postdec2	equ	0xFDD
 16232                           plusw2	equ	0xFDB
 16233                           fsr2h	equ	0xFDA
 16234                           fsr2l	equ	0xFD9
 16235                           status	equ	0xFD8
 16236                           
 16237 ;; *************** function __find_nth_cluster *****************
 16238 ;; Defined at:
 16239 ;;		line 183 in file "fat16.c"
 16240 ;; Parameters:    Size  Location     Type
 16241 ;;  cluster         2   55[BANK0 ] unsigned int 
 16242 ;;  n               2   57[BANK0 ] unsigned int 
 16243 ;; Auto vars:     Size  Location     Type
 16244 ;;  sector          2   63[BANK0 ] unsigned int 
 16245 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 16246 ;;  offset          2   59[BANK0 ] unsigned int 
 16247 ;; Return value:  Size  Location     Type
 16248 ;;                  2   55[BANK0 ] unsigned int 
 16249 ;; Registers used:
 16250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16251 ;; Tracked objects:
 16252 ;;		On entry : 0/0
 16253 ;;		On exit  : 0/0
 16254 ;;		Unchanged: 0/0
 16255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16256 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16257 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16259 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16260 ;;Total ram usage:       10 bytes
 16261 ;; Hardware stack levels used:    1
 16262 ;; Hardware stack levels required when called:   16
 16263 ;; This function calls:
 16264 ;;		__fat_offset_from_cluster
 16265 ;;		__fat_sector_from_cluster
 16266 ;;		__read_fat
 16267 ;;		__read_value_from_offset
 16268 ;;		_flash_sector_read
 16269 ;; This function is called by:
 16270 ;;		_fat_read_from_file_fast
 16271 ;;		_fat_modify_file
 16272 ;;		_fat_copy_sector_to_buffer
 16273 ;; This function uses a non-reentrant model
 16274 ;;
 16275                           
 16276                           	psect	text60
 16277  012F46                     __ptext60:
 16278                           	opt stack 0
 16279  012F46                     __find_nth_cluster:
 16280                           	opt stack 11
 16281                           
 16282                           ;fat16.c: 185: uint16_t sector;;fat16.c: 186: uint16_t offset;;fat16.c: 187: uint16_t se
      +                          ctor_in_buffer = 0;
 16283                           
 16284                           ; BSR set to: 0
 16285                           ;incstack = 0
 16286  012F46  0E00               	movlw	0
 16287  012F48  0100               	movlb	0	; () banked
 16288  012F4A  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 16289  012F4C  0E00               	movlw	0
 16290  012F4E  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 16291                           
 16292                           ; BSR set to: 0
 16293                           ;fat16.c: 190: if(n==1)
 16294  012F50  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 16295  012F52  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16296  012F54  A4D8               	btfss	status,2,c
 16297  012F56  D040               	goto	l1767
 16298                           
 16299                           ; BSR set to: 0
 16300                           ;fat16.c: 191: {;fat16.c: 192: return _read_fat(cluster);
 16301  012F58  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 16302  012F5C  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 16303  012F60  EC6D  F0A2         	call	__read_fat	;wreg free
 16304  012F64  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 16305  012F68  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 16306  012F6C  0012               	return	
 16307  012F6E                     
 16308                           ;fat16.c: 196: {;fat16.c: 198: sector = _fat_sector_from_cluster(cluster);
 16309  012F6E  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 16310  012F72  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 16311  012F76  EC96  F0AA         	call	__fat_sector_from_cluster	;wreg free
 16312  012F7A  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 16313  012F7E  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 16314                           
 16315                           ;fat16.c: 199: offset = _fat_offset_from_cluster(cluster);
 16316  012F82  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 16317  012F86  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 16318  012F8A  ECA3  F0AA         	call	__fat_offset_from_cluster	;wreg free
 16319  012F8E  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 16320  012F92  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 16321                           
 16322                           ;fat16.c: 202: if(sector != sector_in_buffer)
 16323  012F96  0100               	movlb	0	; () banked
 16324  012F98  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 16325  012F9A  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 16326  012F9C  E104               	bnz	u12700
 16327  012F9E  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 16328  012FA0  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 16329  012FA2  B4D8               	btfsc	status,2,c
 16330  012FA4  D00A               	goto	l1769
 16331  012FA6                     u12700:
 16332                           
 16333                           ; BSR set to: 0
 16334                           ;fat16.c: 203: {;fat16.c: 204: flash_sector_read(sector, buffer);
 16335  012FA6  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 16336  012FAA  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 16337  012FAE  0E00               	movlw	low _buffer
 16338  012FB0  6F89               	movwf	flash_sector_read@data& (0+255),b
 16339  012FB2  0E0A               	movlw	high _buffer
 16340  012FB4  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 16341  012FB6  ECB5  F0A9         	call	_flash_sector_read	;wreg free
 16342  012FBA                     l1769:
 16343                           
 16344                           ;fat16.c: 205: };fat16.c: 208: cluster = _read_value_from_offset(offset, buffer);
 16345  012FBA  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 16346  012FBE  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 16347  012FC2  0E00               	movlw	low _buffer
 16348  012FC4  0100               	movlb	0	; () banked
 16349  012FC6  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 16350  012FC8  0E0A               	movlw	high _buffer
 16351  012FCA  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 16352  012FCC  ECD0  F0A5         	call	__read_value_from_offset	;wreg free
 16353  012FD0  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 16354  012FD4  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 16355  012FD8                     l1767:
 16356  012FD8  0100               	movlb	0	; () banked
 16357  012FDA  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 16358  012FDC  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16359  012FDE  A4D8               	btfss	status,2,c
 16360  012FE0  D7C6               	goto	l1768
 16361                           
 16362                           ; BSR set to: 0
 16363                           ;fat16.c: 209: };fat16.c: 211: return cluster;
 16364  012FE2  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 16365  012FE6  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 16366  012FEA  0012               	return		;funcret
 16367  012FEC                     __end_of__find_nth_cluster:
 16368                           	opt stack 0
 16369                           tblptru	equ	0xFF8
 16370                           tblptrh	equ	0xFF7
 16371                           tblptrl	equ	0xFF6
 16372                           tablat	equ	0xFF5
 16373                           prodh	equ	0xFF4
 16374                           prodl	equ	0xFF3
 16375                           postinc0	equ	0xFEE
 16376                           wreg	equ	0xFE8
 16377                           postdec1	equ	0xFE5
 16378                           plusw1	equ	0xFE3
 16379                           fsr1h	equ	0xFE2
 16380                           fsr1l	equ	0xFE1
 16381                           indf2	equ	0xFDF
 16382                           postinc2	equ	0xFDE
 16383                           postdec2	equ	0xFDD
 16384                           plusw2	equ	0xFDB
 16385                           fsr2h	equ	0xFDA
 16386                           fsr2l	equ	0xFD9
 16387                           status	equ	0xFD8
 16388                           
 16389 ;; *************** function __read_value_from_offset *****************
 16390 ;; Defined at:
 16391 ;;		line 115 in file "fat16.c"
 16392 ;; Parameters:    Size  Location     Type
 16393 ;;  offset          2    0[BANK0 ] unsigned int 
 16394 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 16395 ;;		 -> buffer(512), 
 16396 ;; Auto vars:     Size  Location     Type
 16397 ;;  value           2    7[BANK0 ] unsigned int 
 16398 ;; Return value:  Size  Location     Type
 16399 ;;                  2    0[BANK0 ] unsigned int 
 16400 ;; Registers used:
 16401 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16402 ;; Tracked objects:
 16403 ;;		On entry : 0/0
 16404 ;;		On exit  : 0/0
 16405 ;;		Unchanged: 0/0
 16406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16407 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16408 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16409 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16410 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16411 ;;Total ram usage:        9 bytes
 16412 ;; Hardware stack levels used:    1
 16413 ;; Hardware stack levels required when called:   10
 16414 ;; This function calls:
 16415 ;;		Nothing
 16416 ;; This function is called by:
 16417 ;;		__find_nth_cluster
 16418 ;;		__make_cluster_chain
 16419 ;; This function uses a non-reentrant model
 16420 ;;
 16421                           
 16422                           	psect	text61
 16423  014BA0                     __ptext61:
 16424                           	opt stack 0
 16425  014BA0                     __read_value_from_offset:
 16426                           	opt stack 16
 16427                           
 16428                           ;fat16.c: 117: uint16_t value;;fat16.c: 118: value = buffer[offset+1];
 16429                           
 16430                           ;incstack = 0
 16431  014BA0  0E01               	movlw	1
 16432  014BA2  0100               	movlb	0	; () banked
 16433  014BA4  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 16434  014BA6  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16435  014BA8  0E00               	movlw	0
 16436  014BAA  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 16437  014BAC  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 16438  014BAE  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16439  014BB0  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16440  014BB2  6ED9               	movwf	fsr2l,c
 16441  014BB4  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 16442  014BB6  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16443  014BB8  6EDA               	movwf	fsr2h,c
 16444  014BBA  50DF               	movf	indf2,w,c
 16445  014BBC  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 16446  014BBE  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 16447  014BC0  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 16448  014BC2  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 16449                           
 16450                           ; BSR set to: 0
 16451                           ;fat16.c: 119: value <<= 8;
 16452  014BC4  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 16453  014BC6  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 16454  014BC8  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 16455                           
 16456                           ; BSR set to: 0
 16457                           ;fat16.c: 120: value |= buffer[offset];
 16458  014BCA  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 16459  014BCC  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16460  014BCE  6ED9               	movwf	fsr2l,c
 16461  014BD0  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 16462  014BD2  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16463  014BD4  6EDA               	movwf	fsr2h,c
 16464  014BD6  50DF               	movf	indf2,w,c
 16465  014BD8  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16466  014BDA  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16467  014BDC  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 16468                           
 16469                           ; BSR set to: 0
 16470                           ;fat16.c: 121: return value;
 16471  014BDE  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 16472  014BE2  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 16473  014BE6  0012               	return	
 16474  014BE8                     __end_of__read_value_from_offset:
 16475                           	opt stack 0
 16476                           tblptru	equ	0xFF8
 16477                           tblptrh	equ	0xFF7
 16478                           tblptrl	equ	0xFF6
 16479                           tablat	equ	0xFF5
 16480                           prodh	equ	0xFF4
 16481                           prodl	equ	0xFF3
 16482                           postinc0	equ	0xFEE
 16483                           wreg	equ	0xFE8
 16484                           postdec1	equ	0xFE5
 16485                           plusw1	equ	0xFE3
 16486                           fsr1h	equ	0xFE2
 16487                           fsr1l	equ	0xFE1
 16488                           indf2	equ	0xFDF
 16489                           postinc2	equ	0xFDE
 16490                           postdec2	equ	0xFDD
 16491                           plusw2	equ	0xFDB
 16492                           fsr2h	equ	0xFDA
 16493                           fsr2l	equ	0xFD9
 16494                           status	equ	0xFD8
 16495                           
 16496 ;; *************** function __read_fat *****************
 16497 ;; Defined at:
 16498 ;;		line 457 in file "fat16.c"
 16499 ;; Parameters:    Size  Location     Type
 16500 ;;  cluster         2   47[BANK0 ] unsigned int 
 16501 ;; Auto vars:     Size  Location     Type
 16502 ;;  value           2   53[BANK0 ] unsigned int 
 16503 ;;  offset          2   51[BANK0 ] unsigned int 
 16504 ;;  sector          2   49[BANK0 ] unsigned int 
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  2   47[BANK0 ] unsigned int 
 16507 ;; Registers used:
 16508 ;;		wreg, status,2, status,0, cstack
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16515 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16517 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16518 ;;Total ram usage:        8 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:   15
 16521 ;; This function calls:
 16522 ;;		__fat_offset_from_cluster
 16523 ;;		__fat_sector_from_cluster
 16524 ;;		_flash_partial_read
 16525 ;; This function is called by:
 16526 ;;		__find_nth_cluster
 16527 ;;		_fat_read_from_file_fast
 16528 ;;		_fat_modify_file
 16529 ;; This function uses a non-reentrant model
 16530 ;;
 16531                           
 16532                           	psect	text62
 16533  0144DA                     __ptext62:
 16534                           	opt stack 0
 16535  0144DA                     __read_fat:
 16536                           	opt stack 12
 16537                           
 16538                           ;fat16.c: 459: uint16_t sector;;fat16.c: 460: uint16_t offset;;fat16.c: 461: uint16_t va
      +                          lue;;fat16.c: 464: sector = _fat_sector_from_cluster(cluster);
 16539                           
 16540                           ; BSR set to: 0
 16541                           ;incstack = 0
 16542  0144DA  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 16543  0144DE  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 16544  0144E2  EC96  F0AA         	call	__fat_sector_from_cluster	;wreg free
 16545  0144E6  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 16546  0144EA  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 16547                           
 16548                           ;fat16.c: 465: offset = _fat_offset_from_cluster(cluster);
 16549  0144EE  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 16550  0144F2  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 16551  0144F6  ECA3  F0AA         	call	__fat_offset_from_cluster	;wreg free
 16552  0144FA  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 16553  0144FE  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 16554                           
 16555                           ;fat16.c: 468: flash_partial_read(sector, offset, 2, &value);
 16556  014502  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 16557  014506  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 16558  01450A  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 16559  01450E  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 16560  014512  0E00               	movlw	0
 16561  014514  0100               	movlb	0	; () banked
 16562  014516  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 16563  014518  0E02               	movlw	2
 16564  01451A  6F8B               	movwf	flash_partial_read@length& (0+255),b
 16565  01451C  0E95               	movlw	low __read_fat@value
 16566  01451E  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16567  014520  0E00               	movlw	high __read_fat@value
 16568  014522  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16569  014524  ECC9  F0A9         	call	_flash_partial_read	;wreg free
 16570                           
 16571                           ;fat16.c: 471: return value;
 16572  014528  C095  F08F         	movff	__read_fat@value,?__read_fat
 16573  01452C  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 16574  014530  0012               	return	
 16575  014532                     __end_of__read_fat:
 16576                           	opt stack 0
 16577                           tblptru	equ	0xFF8
 16578                           tblptrh	equ	0xFF7
 16579                           tblptrl	equ	0xFF6
 16580                           tablat	equ	0xFF5
 16581                           prodh	equ	0xFF4
 16582                           prodl	equ	0xFF3
 16583                           postinc0	equ	0xFEE
 16584                           wreg	equ	0xFE8
 16585                           postdec1	equ	0xFE5
 16586                           plusw1	equ	0xFE3
 16587                           fsr1h	equ	0xFE2
 16588                           fsr1l	equ	0xFE1
 16589                           indf2	equ	0xFDF
 16590                           postinc2	equ	0xFDE
 16591                           postdec2	equ	0xFDD
 16592                           plusw2	equ	0xFDB
 16593                           fsr2h	equ	0xFDA
 16594                           fsr2l	equ	0xFD9
 16595                           status	equ	0xFD8
 16596                           
 16597 ;; *************** function __fat_sector_from_cluster *****************
 16598 ;; Defined at:
 16599 ;;		line 76 in file "fat16.c"
 16600 ;; Parameters:    Size  Location     Type
 16601 ;;  cluster         2    0[BANK0 ] unsigned int 
 16602 ;; Auto vars:     Size  Location     Type
 16603 ;;		None
 16604 ;; Return value:  Size  Location     Type
 16605 ;;                  2    0[BANK0 ] unsigned int 
 16606 ;; Registers used:
 16607 ;;		wreg, status,2, status,0
 16608 ;; Tracked objects:
 16609 ;;		On entry : 0/0
 16610 ;;		On exit  : 0/0
 16611 ;;		Unchanged: 0/0
 16612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16613 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16616 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16617 ;;Total ram usage:        2 bytes
 16618 ;; Hardware stack levels used:    1
 16619 ;; Hardware stack levels required when called:   10
 16620 ;; This function calls:
 16621 ;;		Nothing
 16622 ;; This function is called by:
 16623 ;;		__find_nth_cluster
 16624 ;;		__make_cluster_chain
 16625 ;;		__read_fat
 16626 ;; This function uses a non-reentrant model
 16627 ;;
 16628                           
 16629                           	psect	text63
 16630  01552C                     __ptext63:
 16631                           	opt stack 0
 16632  01552C                     __fat_sector_from_cluster:
 16633                           	opt stack 16
 16634                           
 16635                           ;fat16.c: 78: cluster >>= 8;
 16636                           
 16637                           ;incstack = 0
 16638  01552C  0100               	movlb	0	; () banked
 16639  01552E  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 16640  015530  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 16641  015532  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 16642                           
 16643                           ; BSR set to: 0
 16644                           ;fat16.c: 79: cluster += 2;
 16645  015534  0E02               	movlw	2
 16646  015536  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 16647  015538  0E00               	movlw	0
 16648  01553A  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 16649                           
 16650                           ; BSR set to: 0
 16651                           ;fat16.c: 80: return cluster;
 16652  01553C  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 16653  015540  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 16654  015544  0012               	return	
 16655  015546                     __end_of__fat_sector_from_cluster:
 16656                           	opt stack 0
 16657                           tblptru	equ	0xFF8
 16658                           tblptrh	equ	0xFF7
 16659                           tblptrl	equ	0xFF6
 16660                           tablat	equ	0xFF5
 16661                           prodh	equ	0xFF4
 16662                           prodl	equ	0xFF3
 16663                           postinc0	equ	0xFEE
 16664                           wreg	equ	0xFE8
 16665                           postdec1	equ	0xFE5
 16666                           plusw1	equ	0xFE3
 16667                           fsr1h	equ	0xFE2
 16668                           fsr1l	equ	0xFE1
 16669                           indf2	equ	0xFDF
 16670                           postinc2	equ	0xFDE
 16671                           postdec2	equ	0xFDD
 16672                           plusw2	equ	0xFDB
 16673                           fsr2h	equ	0xFDA
 16674                           fsr2l	equ	0xFD9
 16675                           status	equ	0xFD8
 16676                           
 16677 ;; *************** function __fat_offset_from_cluster *****************
 16678 ;; Defined at:
 16679 ;;		line 83 in file "fat16.c"
 16680 ;; Parameters:    Size  Location     Type
 16681 ;;  cluster         2    0[BANK0 ] unsigned int 
 16682 ;; Auto vars:     Size  Location     Type
 16683 ;;		None
 16684 ;; Return value:  Size  Location     Type
 16685 ;;                  2    0[BANK0 ] unsigned int 
 16686 ;; Registers used:
 16687 ;;		wreg, status,2, status,0
 16688 ;; Tracked objects:
 16689 ;;		On entry : 0/0
 16690 ;;		On exit  : 0/0
 16691 ;;		Unchanged: 0/0
 16692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16693 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16696 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16697 ;;Total ram usage:        2 bytes
 16698 ;; Hardware stack levels used:    1
 16699 ;; Hardware stack levels required when called:   10
 16700 ;; This function calls:
 16701 ;;		Nothing
 16702 ;; This function is called by:
 16703 ;;		__find_nth_cluster
 16704 ;;		__make_cluster_chain
 16705 ;;		__read_fat
 16706 ;; This function uses a non-reentrant model
 16707 ;;
 16708                           
 16709                           	psect	text64
 16710  015546                     __ptext64:
 16711                           	opt stack 0
 16712  015546                     __fat_offset_from_cluster:
 16713                           	opt stack 16
 16714                           
 16715                           ;fat16.c: 85: cluster &= 0xFF;
 16716                           
 16717                           ; BSR set to: 0
 16718                           ;incstack = 0
 16719  015546  0EFF               	movlw	255
 16720  015548  0100               	movlb	0	; () banked
 16721  01554A  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 16722  01554C  0E00               	movlw	0
 16723  01554E  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 16724                           
 16725                           ; BSR set to: 0
 16726                           ;fat16.c: 86: cluster <<= 1;
 16727  015550  90D8               	bcf	status,0,c
 16728  015552  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 16729  015554  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 16730                           
 16731                           ; BSR set to: 0
 16732                           ;fat16.c: 87: return cluster;
 16733  015556  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 16734  01555A  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 16735  01555E  0012               	return	
 16736  015560                     __end_of__fat_offset_from_cluster:
 16737                           	opt stack 0
 16738                           tblptru	equ	0xFF8
 16739                           tblptrh	equ	0xFF7
 16740                           tblptrl	equ	0xFF6
 16741                           tablat	equ	0xFF5
 16742                           prodh	equ	0xFF4
 16743                           prodl	equ	0xFF3
 16744                           postinc0	equ	0xFEE
 16745                           wreg	equ	0xFE8
 16746                           postdec1	equ	0xFE5
 16747                           plusw1	equ	0xFE3
 16748                           fsr1h	equ	0xFE2
 16749                           fsr1l	equ	0xFE1
 16750                           indf2	equ	0xFDF
 16751                           postinc2	equ	0xFDE
 16752                           postdec2	equ	0xFDD
 16753                           plusw2	equ	0xFDB
 16754                           fsr2h	equ	0xFDA
 16755                           fsr2l	equ	0xFD9
 16756                           status	equ	0xFD8
 16757                           
 16758 ;; *************** function __data_sector_from_cluster *****************
 16759 ;; Defined at:
 16760 ;;		line 71 in file "fat16.c"
 16761 ;; Parameters:    Size  Location     Type
 16762 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 16763 ;; Auto vars:     Size  Location     Type
 16764 ;;		None
 16765 ;; Return value:  Size  Location     Type
 16766 ;;                  2    0[BANK0 ] unsigned int 
 16767 ;; Registers used:
 16768 ;;		wreg, status,2, status,0
 16769 ;; Tracked objects:
 16770 ;;		On entry : 0/0
 16771 ;;		On exit  : 0/0
 16772 ;;		Unchanged: 0/0
 16773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16774 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16777 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16778 ;;Total ram usage:        2 bytes
 16779 ;; Hardware stack levels used:    1
 16780 ;; Hardware stack levels required when called:   10
 16781 ;; This function calls:
 16782 ;;		Nothing
 16783 ;; This function is called by:
 16784 ;;		_fat_read_from_file_fast
 16785 ;;		_fat_modify_file
 16786 ;;		_fat_copy_sector_to_buffer
 16787 ;; This function uses a non-reentrant model
 16788 ;;
 16789                           
 16790                           	psect	text65
 16791  015612                     __ptext65:
 16792                           	opt stack 0
 16793  015612                     __data_sector_from_cluster:
 16794                           	opt stack 17
 16795                           
 16796                           ;fat16.c: 73: return fat_cluster + 38 - 2;
 16797                           
 16798                           ; BSR set to: 0
 16799                           ;incstack = 0
 16800  015612  0E24               	movlw	36
 16801  015614  0100               	movlb	0	; () banked
 16802  015616  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 16803  015618  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 16804  01561A  0E00               	movlw	0
 16805  01561C  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 16806  01561E  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 16807  015620  0012               	return	
 16808  015622                     __end_of__data_sector_from_cluster:
 16809                           	opt stack 0
 16810                           tblptru	equ	0xFF8
 16811                           tblptrh	equ	0xFF7
 16812                           tblptrl	equ	0xFF6
 16813                           tablat	equ	0xFF5
 16814                           prodh	equ	0xFF4
 16815                           prodl	equ	0xFF3
 16816                           postinc0	equ	0xFEE
 16817                           wreg	equ	0xFE8
 16818                           postdec1	equ	0xFE5
 16819                           plusw1	equ	0xFE3
 16820                           fsr1h	equ	0xFE2
 16821                           fsr1l	equ	0xFE1
 16822                           indf2	equ	0xFDF
 16823                           postinc2	equ	0xFDE
 16824                           postdec2	equ	0xFDD
 16825                           plusw2	equ	0xFDB
 16826                           fsr2h	equ	0xFDA
 16827                           fsr2l	equ	0xFD9
 16828                           status	equ	0xFD8
 16829                           
 16830 ;; *************** function _fat_get_file_information *****************
 16831 ;; Defined at:
 16832 ;;		line 1421 in file "fat16.c"
 16833 ;; Parameters:    Size  Location     Type
 16834 ;;  file_number     1    wreg     unsigned char 
 16835 ;;  data            2   47[BANK0 ] PTR struct .
 16836 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 16837 ;; Auto vars:     Size  Location     Type
 16838 ;;  file_number     1   54[BANK0 ] unsigned char 
 16839 ;;  offset          2   52[BANK0 ] unsigned int 
 16840 ;;  root_sector     2   50[BANK0 ] unsigned int 
 16841 ;; Return value:  Size  Location     Type
 16842 ;;                  1    wreg      unsigned char 
 16843 ;; Registers used:
 16844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16845 ;; Tracked objects:
 16846 ;;		On entry : 0/0
 16847 ;;		On exit  : 0/0
 16848 ;;		Unchanged: 0/0
 16849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16850 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16851 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16852 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16853 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16854 ;;Total ram usage:        8 bytes
 16855 ;; Hardware stack levels used:    1
 16856 ;; Hardware stack levels required when called:   15
 16857 ;; This function calls:
 16858 ;;		__offset_from_file_number
 16859 ;;		__sector_from_file_number
 16860 ;;		_flash_partial_read
 16861 ;; This function is called by:
 16862 ;;		_fat_read_from_file
 16863 ;;		_fat_resize_file
 16864 ;;		_fat_modify_file
 16865 ;;		_fat_rename_file
 16866 ;; This function uses a non-reentrant model
 16867 ;;
 16868                           
 16869                           	psect	text66
 16870  013A7A                     __ptext66:
 16871                           	opt stack 0
 16872  013A7A                     _fat_get_file_information:
 16873                           	opt stack 12
 16874                           
 16875                           ; BSR set to: 0
 16876                           ;incstack = 0
 16877                           ;fat_get_file_information@file_number stored from wreg
 16878  013A7A  0100               	movlb	0	; () banked
 16879  013A7C  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 16880                           
 16881                           ;fat16.c: 1423: uint16_t root_sector;;fat16.c: 1424: uint16_t offset;;fat16.c: 1426: if(
      +                          file_number>=64)
 16882  013A7E  0E3F               	movlw	63
 16883  013A80  0100               	movlb	0	; () banked
 16884  013A82  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 16885  013A84  D002               	goto	l2083
 16886                           
 16887                           ; BSR set to: 0
 16888                           ;fat16.c: 1427: {;fat16.c: 1429: return 0x01;
 16889  013A86  0E01               	movlw	1
 16890                           
 16891                           ; BSR set to: 0
 16892  013A88  0012               	return	
 16893  013A8A                     l2083:
 16894                           
 16895                           ; BSR set to: 0
 16896                           ;fat16.c: 1430: };fat16.c: 1433: root_sector = _sector_from_file_number(file_number);
 16897                           
 16898                           ; BSR set to: 0
 16899  013A8A  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 16900  013A8C  EC6A  F0A8         	call	__sector_from_file_number
 16901  013A90  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 16902  013A94  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 16903                           
 16904                           ;fat16.c: 1434: offset = _offset_from_file_number(file_number);
 16905  013A98  0100               	movlb	0	; () banked
 16906  013A9A  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 16907  013A9C  EC64  F0A9         	call	__offset_from_file_number
 16908  013AA0  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 16909  013AA4  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 16910                           
 16911                           ;fat16.c: 1437: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 16912  013AA8  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 16913  013AAC  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 16914  013AB0  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 16915  013AB4  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 16916  013AB8  0E00               	movlw	0
 16917  013ABA  0100               	movlb	0	; () banked
 16918  013ABC  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 16919  013ABE  0E20               	movlw	32
 16920  013AC0  6F8B               	movwf	flash_partial_read@length& (0+255),b
 16921  013AC2  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 16922  013AC6  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 16923  013ACA  ECC9  F0A9         	call	_flash_partial_read	;wreg free
 16924                           
 16925                           ;fat16.c: 1440: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 16926  013ACE  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 16927  013AD2  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 16928  013AD6  50DF               	movf	indf2,w,c
 16929  013AD8  B4D8               	btfsc	status,2,c
 16930  013ADA  D008               	goto	u13500
 16931  013ADC  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 16932  013AE0  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 16933  013AE4  0EE5               	movlw	229
 16934  013AE6  18DE               	xorwf	postinc2,w,c
 16935  013AE8  A4D8               	btfss	status,2,c
 16936  013AEA  D002               	goto	l2085
 16937  013AEC                     u13500:
 16938                           
 16939                           ;fat16.c: 1441: {;fat16.c: 1443: return 0x02;
 16940  013AEC  0E02               	movlw	2
 16941  013AEE  0012               	return	
 16942  013AF0                     l2085:
 16943                           
 16944                           ;fat16.c: 1444: };fat16.c: 1447: return 0x00;
 16945  013AF0  0E00               	movlw	0
 16946  013AF2  0012               	return	
 16947  013AF4                     __end_of_fat_get_file_information:
 16948                           	opt stack 0
 16949                           tblptru	equ	0xFF8
 16950                           tblptrh	equ	0xFF7
 16951                           tblptrl	equ	0xFF6
 16952                           tablat	equ	0xFF5
 16953                           prodh	equ	0xFF4
 16954                           prodl	equ	0xFF3
 16955                           postinc0	equ	0xFEE
 16956                           wreg	equ	0xFE8
 16957                           postdec1	equ	0xFE5
 16958                           plusw1	equ	0xFE3
 16959                           fsr1h	equ	0xFE2
 16960                           fsr1l	equ	0xFE1
 16961                           indf2	equ	0xFDF
 16962                           postinc2	equ	0xFDE
 16963                           postdec2	equ	0xFDD
 16964                           plusw2	equ	0xFDB
 16965                           fsr2h	equ	0xFDA
 16966                           fsr2l	equ	0xFD9
 16967                           status	equ	0xFD8
 16968                           
 16969 ;; *************** function _fat_get_file_size *****************
 16970 ;; Defined at:
 16971 ;;		line 563 in file "fat16.c"
 16972 ;; Parameters:    Size  Location     Type
 16973 ;;  file_number     1    wreg     unsigned char 
 16974 ;; Auto vars:     Size  Location     Type
 16975 ;;  file_number     1   65[BANK0 ] unsigned char 
 16976 ;;  file_size       4   61[BANK0 ] unsigned long 
 16977 ;;  offset          2   59[BANK0 ] unsigned int 
 16978 ;;  sector          2   57[BANK0 ] unsigned int 
 16979 ;; Return value:  Size  Location     Type
 16980 ;;                  4   53[BANK0 ] unsigned long 
 16981 ;; Registers used:
 16982 ;;		wreg, status,2, status,0, cstack
 16983 ;; Tracked objects:
 16984 ;;		On entry : 0/0
 16985 ;;		On exit  : 0/0
 16986 ;;		Unchanged: 0/0
 16987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16988 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16989 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16991 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16992 ;;Total ram usage:       13 bytes
 16993 ;; Hardware stack levels used:    1
 16994 ;; Hardware stack levels required when called:   16
 16995 ;; This function calls:
 16996 ;;		__offset_from_file_number
 16997 ;;		__root_is_available
 16998 ;;		__sector_from_file_number
 16999 ;;		_flash_partial_read
 17000 ;; This function is called by:
 17001 ;;		_configFile_read
 17002 ;;		_fat_append_to_file
 17003 ;;		_fat_copy_file
 17004 ;;		_fat_copy_sector_to_buffer
 17005 ;;		_fat_write_sector_from_buffer
 17006 ;; This function uses a non-reentrant model
 17007 ;;
 17008                           
 17009                           	psect	text67
 17010  013AF4                     __ptext67:
 17011                           	opt stack 0
 17012  013AF4                     _fat_get_file_size:
 17013                           	opt stack 12
 17014                           
 17015                           ;incstack = 0
 17016                           ;fat_get_file_size@file_number stored from wreg
 17017  013AF4  0100               	movlb	0	; () banked
 17018  013AF6  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 17019                           
 17020                           ;fat16.c: 565: uint32_t file_size;;fat16.c: 566: uint16_t sector;;fat16.c: 567: uint16_t
      +                           offset;;fat16.c: 570: if(_root_is_available(file_number))
 17021  013AF8  0100               	movlb	0	; () banked
 17022  013AFA  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17023  013AFC  EC08  F09F         	call	__root_is_available
 17024  013B00  0900               	iorlw	0
 17025  013B02  B4D8               	btfsc	status,2,c
 17026  013B04  D006               	goto	l1845
 17027                           
 17028                           ;fat16.c: 571: {;fat16.c: 573: return 0xFFFFFFFF;
 17029  013B06  0100               	movlb	0	; () banked
 17030  013B08  6995               	setf	?_fat_get_file_size& (0+255),b
 17031  013B0A  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 17032  013B0C  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 17033  013B0E  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 17034  013B10  0012               	return	
 17035  013B12                     l1845:
 17036                           
 17037                           ;fat16.c: 574: };fat16.c: 577: sector = _sector_from_file_number(file_number);
 17038                           
 17039                           ; BSR set to: 0
 17040  013B12  0100               	movlb	0	; () banked
 17041  013B14  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17042  013B16  EC6A  F0A8         	call	__sector_from_file_number
 17043  013B1A  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 17044  013B1E  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 17045                           
 17046                           ;fat16.c: 578: offset = _offset_from_file_number(file_number);
 17047  013B22  0100               	movlb	0	; () banked
 17048  013B24  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17049  013B26  EC64  F0A9         	call	__offset_from_file_number
 17050  013B2A  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 17051  013B2E  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 17052                           
 17053                           ;fat16.c: 581: flash_partial_read(sector, offset+28, 4, &file_size);
 17054  013B32  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 17055  013B36  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 17056  013B3A  0E1C               	movlw	28
 17057  013B3C  0100               	movlb	0	; () banked
 17058  013B3E  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 17059  013B40  6F89               	movwf	flash_partial_read@start& (0+255),b
 17060  013B42  0E00               	movlw	0
 17061  013B44  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 17062  013B46  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 17063  013B48  0E00               	movlw	0
 17064  013B4A  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17065  013B4C  0E04               	movlw	4
 17066  013B4E  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17067  013B50  0E9D               	movlw	low fat_get_file_size@file_size
 17068  013B52  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17069  013B54  0E00               	movlw	high fat_get_file_size@file_size
 17070  013B56  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17071  013B58  ECC9  F0A9         	call	_flash_partial_read	;wreg free
 17072                           
 17073                           ;fat16.c: 584: return file_size;
 17074  013B5C  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 17075  013B60  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 17076  013B64  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 17077  013B68  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 17078  013B6C  0012               	return	
 17079  013B6E                     __end_of_fat_get_file_size:
 17080                           	opt stack 0
 17081                           tblptru	equ	0xFF8
 17082                           tblptrh	equ	0xFF7
 17083                           tblptrl	equ	0xFF6
 17084                           tablat	equ	0xFF5
 17085                           prodh	equ	0xFF4
 17086                           prodl	equ	0xFF3
 17087                           postinc0	equ	0xFEE
 17088                           wreg	equ	0xFE8
 17089                           postdec1	equ	0xFE5
 17090                           plusw1	equ	0xFE3
 17091                           fsr1h	equ	0xFE2
 17092                           fsr1l	equ	0xFE1
 17093                           indf2	equ	0xFDF
 17094                           postinc2	equ	0xFDE
 17095                           postdec2	equ	0xFDD
 17096                           plusw2	equ	0xFDB
 17097                           fsr2h	equ	0xFDA
 17098                           fsr2l	equ	0xFD9
 17099                           status	equ	0xFD8
 17100                           
 17101 ;; *************** function __root_is_available *****************
 17102 ;; Defined at:
 17103 ;;		line 409 in file "fat16.c"
 17104 ;; Parameters:    Size  Location     Type
 17105 ;;  file_number     1    wreg     unsigned char 
 17106 ;; Auto vars:     Size  Location     Type
 17107 ;;  file_number     1   51[BANK0 ] unsigned char 
 17108 ;;  offset          2   49[BANK0 ] unsigned int 
 17109 ;;  root_sector     2   47[BANK0 ] unsigned int 
 17110 ;;  first_byte      1   52[BANK0 ] unsigned char 
 17111 ;; Return value:  Size  Location     Type
 17112 ;;                  1    wreg      unsigned char 
 17113 ;; Registers used:
 17114 ;;		wreg, status,2, status,0, cstack
 17115 ;; Tracked objects:
 17116 ;;		On entry : 0/0
 17117 ;;		On exit  : 0/0
 17118 ;;		Unchanged: 0/0
 17119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17121 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17123 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17124 ;;Total ram usage:        6 bytes
 17125 ;; Hardware stack levels used:    1
 17126 ;; Hardware stack levels required when called:   15
 17127 ;; This function calls:
 17128 ;;		__offset_from_file_number
 17129 ;;		__sector_from_file_number
 17130 ;;		_flash_partial_read
 17131 ;; This function is called by:
 17132 ;;		__get_available_root_entry
 17133 ;;		_fat_get_file_size
 17134 ;;		_fat_resize_file
 17135 ;;		_fat_delete_file
 17136 ;;		_fat_append_to_file
 17137 ;;		_fat_copy_file
 17138 ;;		_fat_copy_sector_to_buffer
 17139 ;;		_fat_write_sector_from_buffer
 17140 ;; This function uses a non-reentrant model
 17141 ;;
 17142                           
 17143                           	psect	text68
 17144  013E10                     __ptext68:
 17145                           	opt stack 0
 17146  013E10                     __root_is_available:
 17147                           	opt stack 12
 17148                           
 17149                           ;incstack = 0
 17150                           ;__root_is_available@file_number stored from wreg
 17151  013E10  0100               	movlb	0	; () banked
 17152  013E12  6F93               	movwf	__root_is_available@file_number& (0+255),b
 17153                           
 17154                           ;fat16.c: 411: uint16_t root_sector;;fat16.c: 412: uint16_t offset;;fat16.c: 413: uint8_
      +                          t first_byte;;fat16.c: 417: if(file_number>=64)
 17155  013E14  0E3F               	movlw	63
 17156  013E16  0100               	movlb	0	; () banked
 17157  013E18  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 17158  013E1A  D002               	goto	l1806
 17159                           
 17160                           ; BSR set to: 0
 17161                           ;fat16.c: 418: {;fat16.c: 420: return 0;
 17162  013E1C  0E00               	movlw	0
 17163                           
 17164                           ; BSR set to: 0
 17165  013E1E  0012               	return	
 17166  013E20                     l1806:
 17167                           
 17168                           ; BSR set to: 0
 17169                           ;fat16.c: 421: };fat16.c: 424: root_sector = _sector_from_file_number(file_number);
 17170                           
 17171                           ; BSR set to: 0
 17172  013E20  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17173  013E22  EC6A  F0A8         	call	__sector_from_file_number
 17174  013E26  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 17175  013E2A  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 17176                           
 17177                           ;fat16.c: 425: offset = _offset_from_file_number(file_number);
 17178  013E2E  0100               	movlb	0	; () banked
 17179  013E30  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17180  013E32  EC64  F0A9         	call	__offset_from_file_number
 17181  013E36  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 17182  013E3A  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 17183                           
 17184                           ;fat16.c: 428: flash_partial_read(root_sector, offset, 1, &first_byte);
 17185  013E3E  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 17186  013E42  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 17187  013E46  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 17188  013E4A  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 17189  013E4E  0E00               	movlw	0
 17190  013E50  0100               	movlb	0	; () banked
 17191  013E52  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17192  013E54  0E01               	movlw	1
 17193  013E56  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17194  013E58  0E94               	movlw	low __root_is_available@first_byte
 17195  013E5A  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17196  013E5C  0E00               	movlw	high __root_is_available@first_byte
 17197  013E5E  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17198  013E60  ECC9  F0A9         	call	_flash_partial_read	;wreg free
 17199                           
 17200                           ;fat16.c: 431: if((first_byte==0x00) || (first_byte==0xE5))
 17201  013E64  0100               	movlb	0	; () banked
 17202  013E66  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 17203  013E68  B4D8               	btfsc	status,2,c
 17204  013E6A  D004               	goto	u12740
 17205                           
 17206                           ; BSR set to: 0
 17207  013E6C  0EE5               	movlw	229
 17208  013E6E  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 17209  013E70  A4D8               	btfss	status,2,c
 17210  013E72  D002               	goto	l1808
 17211  013E74                     u12740:
 17212                           
 17213                           ; BSR set to: 0
 17214                           ;fat16.c: 432: {;fat16.c: 434: return 1;
 17215                           
 17216                           ; BSR set to: 0
 17217  013E74  0E01               	movlw	1
 17218                           
 17219                           ; BSR set to: 0
 17220                           ;fat16.c: 435: }
 17221                           
 17222                           ; BSR set to: 0
 17223  013E76  0012               	return	
 17224  013E78                     l1808:
 17225                           
 17226                           ; BSR set to: 0
 17227                           ;fat16.c: 436: else;fat16.c: 437: {;fat16.c: 439: return 0;
 17228                           
 17229                           ; BSR set to: 0
 17230  013E78  0E00               	movlw	0
 17231                           
 17232                           ; BSR set to: 0
 17233  013E7A  0012               	return	
 17234  013E7C                     __end_of__root_is_available:
 17235                           	opt stack 0
 17236                           tblptru	equ	0xFF8
 17237                           tblptrh	equ	0xFF7
 17238                           tblptrl	equ	0xFF6
 17239                           tablat	equ	0xFF5
 17240                           prodh	equ	0xFF4
 17241                           prodl	equ	0xFF3
 17242                           postinc0	equ	0xFEE
 17243                           wreg	equ	0xFE8
 17244                           postdec1	equ	0xFE5
 17245                           plusw1	equ	0xFE3
 17246                           fsr1h	equ	0xFE2
 17247                           fsr1l	equ	0xFE1
 17248                           indf2	equ	0xFDF
 17249                           postinc2	equ	0xFDE
 17250                           postdec2	equ	0xFDD
 17251                           plusw2	equ	0xFDB
 17252                           fsr2h	equ	0xFDA
 17253                           fsr2l	equ	0xFD9
 17254                           status	equ	0xFD8
 17255                           
 17256 ;; *************** function _flash_partial_read *****************
 17257 ;; Defined at:
 17258 ;;		line 452 in file "flash.c"
 17259 ;; Parameters:    Size  Location     Type
 17260 ;;  page            2   39[BANK0 ] unsigned int 
 17261 ;;  start           2   41[BANK0 ] unsigned int 
 17262 ;;  length          2   43[BANK0 ] unsigned int 
 17263 ;;  data            2   45[BANK0 ] PTR unsigned char 
 17264 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 17265 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 17266 ;;		 -> _root_is_available@first_byte(1), 
 17267 ;; Auto vars:     Size  Location     Type
 17268 ;;		None
 17269 ;; Return value:  Size  Location     Type
 17270 ;;                  1    wreg      void 
 17271 ;; Registers used:
 17272 ;;		wreg, status,2, status,0, cstack
 17273 ;; Tracked objects:
 17274 ;;		On entry : 0/0
 17275 ;;		On exit  : 0/0
 17276 ;;		Unchanged: 0/0
 17277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17278 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17281 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17282 ;;Total ram usage:        8 bytes
 17283 ;; Hardware stack levels used:    1
 17284 ;; Hardware stack levels required when called:   14
 17285 ;; This function calls:
 17286 ;;		__flash_partial_read
 17287 ;; This function is called by:
 17288 ;;		__root_is_available
 17289 ;;		__read_fat
 17290 ;;		_fat_get_file_size
 17291 ;;		_fat_read_from_file_fast
 17292 ;;		_fat_get_file_information
 17293 ;;		__get_first_cluster
 17294 ;; This function uses a non-reentrant model
 17295 ;;
 17296                           
 17297                           	psect	text69
 17298  015392                     __ptext69:
 17299                           	opt stack 0
 17300  015392                     _flash_partial_read:
 17301                           	opt stack 12
 17302                           
 17303                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 17304                           
 17305                           ; BSR set to: 0
 17306                           ;incstack = 0
 17307  015392  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 17308  015396  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 17309  01539A  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 17310  01539E  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 17311  0153A2  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 17312  0153A6  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 17313  0153AA  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 17314  0153AE  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 17315  0153B2  ECB7  F09D         	call	__flash_partial_read	;wreg free
 17316  0153B6  0012               	return		;funcret
 17317  0153B8                     __end_of_flash_partial_read:
 17318                           	opt stack 0
 17319                           tblptru	equ	0xFF8
 17320                           tblptrh	equ	0xFF7
 17321                           tblptrl	equ	0xFF6
 17322                           tablat	equ	0xFF5
 17323                           prodh	equ	0xFF4
 17324                           prodl	equ	0xFF3
 17325                           postinc0	equ	0xFEE
 17326                           wreg	equ	0xFE8
 17327                           postdec1	equ	0xFE5
 17328                           plusw1	equ	0xFE3
 17329                           fsr1h	equ	0xFE2
 17330                           fsr1l	equ	0xFE1
 17331                           indf2	equ	0xFDF
 17332                           postinc2	equ	0xFDE
 17333                           postdec2	equ	0xFDD
 17334                           plusw2	equ	0xFDB
 17335                           fsr2h	equ	0xFDA
 17336                           fsr2l	equ	0xFD9
 17337                           status	equ	0xFD8
 17338                           
 17339 ;; *************** function __sector_from_file_number *****************
 17340 ;; Defined at:
 17341 ;;		line 53 in file "fat16.c"
 17342 ;; Parameters:    Size  Location     Type
 17343 ;;  file_number     1    wreg     unsigned char 
 17344 ;; Auto vars:     Size  Location     Type
 17345 ;;  file_number     1    2[BANK0 ] unsigned char 
 17346 ;;  sector          2    3[BANK0 ] unsigned int 
 17347 ;; Return value:  Size  Location     Type
 17348 ;;                  2    0[BANK0 ] unsigned int 
 17349 ;; Registers used:
 17350 ;;		wreg, status,2, status,0
 17351 ;; Tracked objects:
 17352 ;;		On entry : 0/0
 17353 ;;		On exit  : 0/0
 17354 ;;		Unchanged: 0/0
 17355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17356 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17357 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17359 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17360 ;;Total ram usage:        5 bytes
 17361 ;; Hardware stack levels used:    1
 17362 ;; Hardware stack levels required when called:   10
 17363 ;; This function calls:
 17364 ;;		Nothing
 17365 ;; This function is called by:
 17366 ;;		__root_is_available
 17367 ;;		__write_root
 17368 ;;		_fat_get_file_size
 17369 ;;		_fat_get_file_information
 17370 ;;		__delete_root
 17371 ;;		__get_first_cluster
 17372 ;; This function uses a non-reentrant model
 17373 ;;
 17374                           
 17375                           	psect	text70
 17376  0150D4                     __ptext70:
 17377                           	opt stack 0
 17378  0150D4                     __sector_from_file_number:
 17379                           	opt stack 16
 17380                           
 17381                           ;incstack = 0
 17382                           ;__sector_from_file_number@file_number stored from wreg
 17383  0150D4  0100               	movlb	0	; () banked
 17384  0150D6  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 17385                           
 17386                           ;fat16.c: 55: uint16_t sector;;fat16.c: 56: sector = (uint16_t) file_number;
 17387  0150D8  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 17388  0150DC  0100               	movlb	0	; () banked
 17389  0150DE  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 17390                           
 17391                           ; BSR set to: 0
 17392                           ;fat16.c: 57: sector >>= 4;
 17393  0150E0  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 17394  0150E2  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17395  0150E4  0E0F               	movlw	15
 17396  0150E6  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 17397  0150E8  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 17398  0150EA  0BF0               	andlw	240
 17399  0150EC  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 17400  0150EE  0E0F               	movlw	15
 17401  0150F0  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17402                           
 17403                           ; BSR set to: 0
 17404                           ;fat16.c: 58: sector += 34;
 17405  0150F2  0E22               	movlw	34
 17406  0150F4  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 17407  0150F6  0E00               	movlw	0
 17408  0150F8  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 17409                           
 17410                           ; BSR set to: 0
 17411                           ;fat16.c: 59: return sector;
 17412  0150FA  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 17413  0150FE  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 17414  015102  0012               	return	
 17415  015104                     __end_of__sector_from_file_number:
 17416                           	opt stack 0
 17417                           tblptru	equ	0xFF8
 17418                           tblptrh	equ	0xFF7
 17419                           tblptrl	equ	0xFF6
 17420                           tablat	equ	0xFF5
 17421                           prodh	equ	0xFF4
 17422                           prodl	equ	0xFF3
 17423                           postinc0	equ	0xFEE
 17424                           wreg	equ	0xFE8
 17425                           postdec1	equ	0xFE5
 17426                           plusw1	equ	0xFE3
 17427                           fsr1h	equ	0xFE2
 17428                           fsr1l	equ	0xFE1
 17429                           indf2	equ	0xFDF
 17430                           postinc2	equ	0xFDE
 17431                           postdec2	equ	0xFDD
 17432                           plusw2	equ	0xFDB
 17433                           fsr2h	equ	0xFDA
 17434                           fsr2l	equ	0xFD9
 17435                           status	equ	0xFD8
 17436                           
 17437 ;; *************** function __offset_from_file_number *****************
 17438 ;; Defined at:
 17439 ;;		line 62 in file "fat16.c"
 17440 ;; Parameters:    Size  Location     Type
 17441 ;;  file_number     1    wreg     unsigned char 
 17442 ;; Auto vars:     Size  Location     Type
 17443 ;;  file_number     1    2[BANK0 ] unsigned char 
 17444 ;;  offset          2    3[BANK0 ] unsigned int 
 17445 ;; Return value:  Size  Location     Type
 17446 ;;                  2    0[BANK0 ] unsigned int 
 17447 ;; Registers used:
 17448 ;;		wreg, status,2, status,0
 17449 ;; Tracked objects:
 17450 ;;		On entry : 0/0
 17451 ;;		On exit  : 0/0
 17452 ;;		Unchanged: 0/0
 17453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17454 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17455 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17457 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17458 ;;Total ram usage:        5 bytes
 17459 ;; Hardware stack levels used:    1
 17460 ;; Hardware stack levels required when called:   10
 17461 ;; This function calls:
 17462 ;;		Nothing
 17463 ;; This function is called by:
 17464 ;;		__root_is_available
 17465 ;;		__write_root
 17466 ;;		_fat_get_file_size
 17467 ;;		_fat_get_file_information
 17468 ;;		__delete_root
 17469 ;;		__get_first_cluster
 17470 ;; This function uses a non-reentrant model
 17471 ;;
 17472                           
 17473                           	psect	text71
 17474  0152C8                     __ptext71:
 17475                           	opt stack 0
 17476  0152C8                     __offset_from_file_number:
 17477                           	opt stack 16
 17478                           
 17479                           ; BSR set to: 0
 17480                           ;incstack = 0
 17481                           ;__offset_from_file_number@file_number stored from wreg
 17482  0152C8  0100               	movlb	0	; () banked
 17483  0152CA  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 17484                           
 17485                           ;fat16.c: 64: uint16_t offset;;fat16.c: 65: offset = file_number;
 17486  0152CC  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 17487  0152D0  0100               	movlb	0	; () banked
 17488  0152D2  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 17489                           
 17490                           ; BSR set to: 0
 17491                           ;fat16.c: 66: offset &= 0b1111;
 17492  0152D4  0E0F               	movlw	15
 17493  0152D6  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 17494  0152D8  0E00               	movlw	0
 17495  0152DA  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17496                           
 17497                           ; BSR set to: 0
 17498                           ;fat16.c: 67: offset <<= 5;
 17499  0152DC  0E05               	movlw	5
 17500  0152DE                     u11655:
 17501  0152DE  90D8               	bcf	status,0,c
 17502  0152E0  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 17503  0152E2  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17504  0152E4  2EE8               	decfsz	wreg,f,c
 17505  0152E6  D7FB               	goto	u11655
 17506                           
 17507                           ; BSR set to: 0
 17508                           ;fat16.c: 68: return offset;
 17509  0152E8  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 17510  0152EC  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 17511  0152F0  0012               	return	
 17512  0152F2                     __end_of__offset_from_file_number:
 17513                           	opt stack 0
 17514                           tblptru	equ	0xFF8
 17515                           tblptrh	equ	0xFF7
 17516                           tblptrl	equ	0xFF6
 17517                           tablat	equ	0xFF5
 17518                           prodh	equ	0xFF4
 17519                           prodl	equ	0xFF3
 17520                           postinc0	equ	0xFEE
 17521                           wreg	equ	0xFE8
 17522                           postdec1	equ	0xFE5
 17523                           plusw1	equ	0xFE3
 17524                           fsr1h	equ	0xFE2
 17525                           fsr1l	equ	0xFE1
 17526                           indf2	equ	0xFDF
 17527                           postinc2	equ	0xFDE
 17528                           postdec2	equ	0xFDD
 17529                           plusw2	equ	0xFDB
 17530                           fsr2h	equ	0xFDA
 17531                           fsr2l	equ	0xFD9
 17532                           status	equ	0xFD8
 17533                           
 17534 ;; *************** function _fat_find_file *****************
 17535 ;; Defined at:
 17536 ;;		line 518 in file "fat16.c"
 17537 ;; Parameters:    Size  Location     Type
 17538 ;;  name            2   43[BANK0 ] PTR unsigned char 
 17539 ;;		 -> configFile_used_name(8), configFile_name(8), 
 17540 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 17541 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 17542 ;; Auto vars:     Size  Location     Type
 17543 ;;  offset          2   52[BANK0 ] unsigned int 
 17544 ;;  sector          2   50[BANK0 ] unsigned int 
 17545 ;;  file_number     1   49[BANK0 ] unsigned char 
 17546 ;; Return value:  Size  Location     Type
 17547 ;;                  1    wreg      unsigned char 
 17548 ;; Registers used:
 17549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17550 ;; Tracked objects:
 17551 ;;		On entry : 0/0
 17552 ;;		On exit  : 0/0
 17553 ;;		Unchanged: 0/0
 17554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17555 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17556 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17558 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17559 ;;Total ram usage:       11 bytes
 17560 ;; Hardware stack levels used:    1
 17561 ;; Hardware stack levels required when called:   15
 17562 ;; This function calls:
 17563 ;;		_flash_sector_read
 17564 ;;		_strncmp
 17565 ;; This function is called by:
 17566 ;;		_fat_create_file
 17567 ;;		_configFile_read
 17568 ;;		_configFile_write
 17569 ;; This function uses a non-reentrant model
 17570 ;;
 17571                           
 17572                           	psect	text72
 17573  011876                     __ptext72:
 17574                           	opt stack 0
 17575  011876                     _fat_find_file:
 17576                           	opt stack 13
 17577                           
 17578                           ;fat16.c: 520: uint8_t file_number = 0;
 17579                           
 17580                           ; BSR set to: 0
 17581                           ;incstack = 0
 17582  011876  0E00               	movlw	0
 17583  011878  0100               	movlb	0	; () banked
 17584  01187A  6F91               	movwf	fat_find_file@file_number& (0+255),b
 17585                           
 17586                           ;fat16.c: 521: uint16_t sector;;fat16.c: 522: uint16_t offset;;fat16.c: 524: for(sector 
      +                          = 34; sector <= 37; ++sector)
 17587  01187C  0E00               	movlw	0
 17588  01187E  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 17589  011880  0E22               	movlw	34
 17590  011882  6F92               	movwf	fat_find_file@sector& (0+255),b
 17591                           
 17592                           ; BSR set to: 0
 17593  011884  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 17594  011886  E169               	bnz	l1833
 17595  011888  0E26               	movlw	38
 17596  01188A  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 17597  01188C  B0D8               	btfsc	status,0,c
 17598  01188E  D065               	goto	u13470
 17599                           
 17600                           ; BSR set to: 0
 17601                           ;fat16.c: 525: {;fat16.c: 527: flash_sector_read(sector, buffer);
 17602                           
 17603                           ; BSR set to: 0
 17604                           
 17605                           ; BSR set to: 0
 17606  011890  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 17607  011894  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 17608  011898  0E00               	movlw	low _buffer
 17609  01189A  6F89               	movwf	flash_sector_read@data& (0+255),b
 17610  01189C  0E0A               	movlw	high _buffer
 17611  01189E  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 17612  0118A0  ECB5  F0A9         	call	_flash_sector_read	;wreg free
 17613                           
 17614                           ;fat16.c: 529: for(offset = 0; offset<512; offset += 32)
 17615  0118A4  0E00               	movlw	0
 17616  0118A6  0100               	movlb	0	; () banked
 17617  0118A8  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 17618  0118AA  0E00               	movlw	0
 17619  0118AC  6F94               	movwf	fat_find_file@offset& (0+255),b
 17620  0118AE                     l14416:
 17621                           
 17622                           ; BSR set to: 0
 17623  0118AE  0E02               	movlw	2
 17624  0118B0  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 17625  0118B2  B0D8               	btfsc	status,0,c
 17626  0118B4  D04D               	goto	u13460
 17627                           
 17628                           ; BSR set to: 0
 17629                           ;fat16.c: 530: {;fat16.c: 531: if(buffer[offset]==0x00)
 17630                           
 17631                           ; BSR set to: 0
 17632                           
 17633                           ; BSR set to: 0
 17634  0118B6  0E00               	movlw	low _buffer
 17635  0118B8  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17636  0118BA  6ED9               	movwf	fsr2l,c
 17637  0118BC  0E0A               	movlw	high _buffer
 17638  0118BE  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17639  0118C0  6EDA               	movwf	fsr2h,c
 17640  0118C2  50DF               	movf	indf2,w,c
 17641  0118C4  A4D8               	btfss	status,2,c
 17642  0118C6  D002               	goto	l1836
 17643                           
 17644                           ; BSR set to: 0
 17645                           ;fat16.c: 532: {;fat16.c: 535: return 0xFF;
 17646  0118C8  0EFF               	movlw	255
 17647                           
 17648                           ; BSR set to: 0
 17649  0118CA  0012               	return	
 17650  0118CC                     l1836:
 17651                           
 17652                           ; BSR set to: 0
 17653                           ;fat16.c: 537: else if(buffer[offset]==0xE5)
 17654                           
 17655                           ; BSR set to: 0
 17656  0118CC  0E00               	movlw	low _buffer
 17657  0118CE  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17658  0118D0  6ED9               	movwf	fsr2l,c
 17659  0118D2  0E0A               	movlw	high _buffer
 17660  0118D4  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17661  0118D6  6EDA               	movwf	fsr2h,c
 17662  0118D8  0EE5               	movlw	229
 17663  0118DA  18DE               	xorwf	postinc2,w,c
 17664  0118DC  B4D8               	btfsc	status,2,c
 17665  0118DE  D032               	goto	l1842
 17666                           
 17667                           ; BSR set to: 0
 17668                           ;fat16.c: 543: else;fat16.c: 544: {;fat16.c: 546: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 17669                           
 17670                           ; BSR set to: 0
 17671                           
 17672                           ; BSR set to: 0
 17673                           ;fat16.c: 538: {;fat16.c: 542: }
 17674  0118E0  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 17675  0118E4  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 17676  0118E8  0E00               	movlw	low _buffer
 17677  0118EA  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17678  0118EC  6F62               	movwf	strncmp@s2& (0+255),b
 17679  0118EE  0E0A               	movlw	high _buffer
 17680  0118F0  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17681  0118F2  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 17682  0118F4  0E00               	movlw	0
 17683  0118F6  6F65               	movwf	(strncmp@len+1)& (0+255),b
 17684  0118F8  0E08               	movlw	8
 17685  0118FA  6F64               	movwf	strncmp@len& (0+255),b
 17686  0118FC  EC81  F09C         	call	_strncmp	;wreg free
 17687  011900  0100               	movlb	0	; () banked
 17688  011902  5160               	movf	?_strncmp& (0+255),w,b
 17689  011904  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 17690  011906  A4D8               	btfss	status,2,c
 17691  011908  D01D               	goto	l1842
 17692                           
 17693                           ; BSR set to: 0
 17694                           ;fat16.c: 547: {;fat16.c: 549: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 17695  01190A  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 17696  01190E  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 17697  011912  0E08               	movlw	8
 17698  011914  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17699  011916  6F8F               	movwf	??_fat_find_file& (0+255),b
 17700  011918  0E00               	movlw	0
 17701  01191A  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17702  01191C  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 17703  01191E  0E00               	movlw	low _buffer
 17704  011920  258F               	addwf	??_fat_find_file& (0+255),w,b
 17705  011922  6F62               	movwf	strncmp@s2& (0+255),b
 17706  011924  0E0A               	movlw	high _buffer
 17707  011926  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 17708  011928  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 17709  01192A  0E00               	movlw	0
 17710  01192C  6F65               	movwf	(strncmp@len+1)& (0+255),b
 17711  01192E  0E03               	movlw	3
 17712  011930  6F64               	movwf	strncmp@len& (0+255),b
 17713  011932  EC81  F09C         	call	_strncmp	;wreg free
 17714  011936  0100               	movlb	0	; () banked
 17715  011938  5160               	movf	?_strncmp& (0+255),w,b
 17716  01193A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 17717  01193C  A4D8               	btfss	status,2,c
 17718  01193E  D002               	goto	l1842
 17719                           
 17720                           ; BSR set to: 0
 17721                           ;fat16.c: 550: {;fat16.c: 553: return file_number;
 17722  011940  5191               	movf	fat_find_file@file_number& (0+255),w,b
 17723                           
 17724                           ; BSR set to: 0
 17725  011942  0012               	return	
 17726  011944                     l1842:
 17727                           
 17728                           ; BSR set to: 0
 17729                           ;fat16.c: 554: };fat16.c: 555: };fat16.c: 556: };fat16.c: 557: ++file_number;
 17730                           
 17731                           ; BSR set to: 0
 17732                           
 17733                           ; BSR set to: 0
 17734                           
 17735                           ; BSR set to: 0
 17736                           
 17737                           ; BSR set to: 0
 17738  011944  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 17739                           
 17740                           ; BSR set to: 0
 17741  011946  0E20               	movlw	32
 17742  011948  2794               	addwf	fat_find_file@offset& (0+255),f,b
 17743  01194A  0E00               	movlw	0
 17744  01194C  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 17745  01194E  D7AF               	goto	l14416
 17746  011950                     u13460:
 17747                           
 17748                           ; BSR set to: 0
 17749                           
 17750                           ; BSR set to: 0
 17751  011950  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 17752  011952  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 17753                           
 17754                           ; BSR set to: 0
 17755  011954  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 17756  011956  E101               	bnz	l14450
 17757  011958  D797               	goto	L4
 17758  01195A                     u13470:
 17759  01195A                     l1833:
 17760  01195A                     l14450:
 17761                           
 17762                           ; BSR set to: 0
 17763                           ;fat16.c: 558: };fat16.c: 559: };fat16.c: 560: return 0xFF;
 17764  01195A  0EFF               	movlw	255
 17765  01195C  0012               	return	
 17766  01195E                     __end_of_fat_find_file:
 17767                           	opt stack 0
 17768                           tblptru	equ	0xFF8
 17769                           tblptrh	equ	0xFF7
 17770                           tblptrl	equ	0xFF6
 17771                           tablat	equ	0xFF5
 17772                           prodh	equ	0xFF4
 17773                           prodl	equ	0xFF3
 17774                           postinc0	equ	0xFEE
 17775                           wreg	equ	0xFE8
 17776                           postdec1	equ	0xFE5
 17777                           plusw1	equ	0xFE3
 17778                           fsr1h	equ	0xFE2
 17779                           fsr1l	equ	0xFE1
 17780                           indf2	equ	0xFDF
 17781                           postinc2	equ	0xFDE
 17782                           postdec2	equ	0xFDD
 17783                           plusw2	equ	0xFDB
 17784                           fsr2h	equ	0xFDA
 17785                           fsr2l	equ	0xFD9
 17786                           status	equ	0xFD8
 17787                           
 17788 ;; *************** function _strncmp *****************
 17789 ;; Defined at:
 17790 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 17791 ;; Parameters:    Size  Location     Type
 17792 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17793 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 17794 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17795 ;;		 -> buffer(512), 
 17796 ;;  len             2    4[BANK0 ] unsigned int 
 17797 ;; Auto vars:     Size  Location     Type
 17798 ;;		None
 17799 ;; Return value:  Size  Location     Type
 17800 ;;                  2    0[BANK0 ] int 
 17801 ;; Registers used:
 17802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17803 ;; Tracked objects:
 17804 ;;		On entry : 0/0
 17805 ;;		On exit  : 0/0
 17806 ;;		Unchanged: 0/0
 17807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17808 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17810 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17811 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17812 ;;Total ram usage:        9 bytes
 17813 ;; Hardware stack levels used:    1
 17814 ;; Hardware stack levels required when called:   10
 17815 ;; This function calls:
 17816 ;;		Nothing
 17817 ;; This function is called by:
 17818 ;;		_fat_find_file
 17819 ;; This function uses a non-reentrant model
 17820 ;;
 17821                           
 17822                           	psect	text73
 17823  013902                     __ptext73:
 17824                           	opt stack 0
 17825  013902                     _strncmp:
 17826                           	opt stack 17
 17827                           
 17828                           ; BSR set to: 0
 17829                           ;incstack = 0
 17830  013902  D031               	goto	l3742
 17831  013904                     l13860:
 17832  013904  C060  FFD9         	movff	strncmp@s1,fsr2l
 17833  013908  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17834  01390C  50DF               	movf	indf2,w,c
 17835  01390E  B4D8               	btfsc	status,2,c
 17836  013910  D00C               	goto	u12760
 17837  013912  C062  FFD9         	movff	strncmp@s2,fsr2l
 17838  013916  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 17839  01391A  C060  FFE1         	movff	strncmp@s1,fsr1l
 17840  01391E  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 17841  013922  50DE               	movf	postinc2,w,c
 17842  013924  18E6               	xorwf	postinc1,w,c
 17843  013926  B4D8               	btfsc	status,2,c
 17844  013928  D019               	goto	l3744
 17845  01392A                     u12760:
 17846  01392A  C062  FFD9         	movff	strncmp@s2,fsr2l
 17847  01392E  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 17848  013932  50DF               	movf	indf2,w,c
 17849  013934  0100               	movlb	0	; () banked
 17850  013936  6F66               	movwf	??_strncmp& (0+255),b
 17851  013938  6B67               	clrf	(??_strncmp+1)& (0+255),b
 17852  01393A  1F66               	comf	??_strncmp& (0+255),f,b
 17853  01393C  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 17854  01393E  4B66               	infsnz	??_strncmp& (0+255),f,b
 17855  013940  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 17856  013942  C060  FFD9         	movff	strncmp@s1,fsr2l
 17857  013946  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17858  01394A  50DF               	movf	indf2,w,c
 17859  01394C  6F68               	movwf	(??_strncmp+2)& (0+255),b
 17860  01394E  5168               	movf	(??_strncmp+2)& (0+255),w,b
 17861  013950  2566               	addwf	??_strncmp& (0+255),w,b
 17862  013952  6F60               	movwf	?_strncmp& (0+255),b
 17863  013954  0E00               	movlw	0
 17864  013956  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 17865  013958  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17866                           
 17867                           ; BSR set to: 0
 17868  01395A  0012               	return	
 17869  01395C                     l3744:
 17870                           
 17871                           ; BSR set to: 0
 17872  01395C  0100               	movlb	0	; () banked
 17873  01395E  4B60               	infsnz	strncmp@s1& (0+255),f,b
 17874  013960  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 17875  013962  4B62               	infsnz	strncmp@s2& (0+255),f,b
 17876  013964  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 17877  013966                     l3742:
 17878                           
 17879                           ; BSR set to: 0
 17880  013966  0100               	movlb	0	; () banked
 17881  013968  0764               	decf	strncmp@len& (0+255),f,b
 17882  01396A  A0D8               	btfss	status,0,c
 17883  01396C  0765               	decf	(strncmp@len+1)& (0+255),f,b
 17884  01396E  2964               	incf	strncmp@len& (0+255),w,b
 17885  013970  E1C9               	bnz	l13860
 17886  013972  2965               	incf	(strncmp@len+1)& (0+255),w,b
 17887  013974  A4D8               	btfss	status,2,c
 17888  013976  D7C6               	goto	l3743
 17889                           
 17890                           ; BSR set to: 0
 17891                           
 17892                           ; BSR set to: 0
 17893  013978  0E00               	movlw	0
 17894  01397A  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17895  01397C  0E00               	movlw	0
 17896  01397E  6F60               	movwf	?_strncmp& (0+255),b
 17897  013980  0012               	return	
 17898  013982                     __end_of_strncmp:
 17899                           	opt stack 0
 17900                           tblptru	equ	0xFF8
 17901                           tblptrh	equ	0xFF7
 17902                           tblptrl	equ	0xFF6
 17903                           tablat	equ	0xFF5
 17904                           prodh	equ	0xFF4
 17905                           prodl	equ	0xFF3
 17906                           postinc0	equ	0xFEE
 17907                           wreg	equ	0xFE8
 17908                           postinc1	equ	0xFE6
 17909                           postdec1	equ	0xFE5
 17910                           plusw1	equ	0xFE3
 17911                           fsr1h	equ	0xFE2
 17912                           fsr1l	equ	0xFE1
 17913                           indf2	equ	0xFDF
 17914                           postinc2	equ	0xFDE
 17915                           postdec2	equ	0xFDD
 17916                           plusw2	equ	0xFDB
 17917                           fsr2h	equ	0xFDA
 17918                           fsr2l	equ	0xFD9
 17919                           status	equ	0xFD8
 17920                           
 17921 ;; *************** function __parse_item *****************
 17922 ;; Defined at:
 17923 ;;		line 108 in file "config_file.c"
 17924 ;; Parameters:    Size  Location     Type
 17925 ;;  item_string     2   26[BANK0 ] PTR unsigned char 
 17926 ;;		 -> configFile_read@item_string(31), 
 17927 ;;  value_string    2   28[BANK0 ] PTR unsigned char 
 17928 ;;		 -> configFile_read@value_string(12), 
 17929 ;; Auto vars:     Size  Location     Type
 17930 ;;		None
 17931 ;; Return value:  Size  Location     Type
 17932 ;;                  1    wreg      unsigned char 
 17933 ;; Registers used:
 17934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17935 ;; Tracked objects:
 17936 ;;		On entry : 0/0
 17937 ;;		On exit  : 0/0
 17938 ;;		Unchanged: 0/0
 17939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17940 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17943 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17944 ;;Total ram usage:        4 bytes
 17945 ;; Hardware stack levels used:    1
 17946 ;; Hardware stack levels required when called:   12
 17947 ;; This function calls:
 17948 ;;		_atoi
 17949 ;;		_atol
 17950 ;;		_stricmp
 17951 ;; This function is called by:
 17952 ;;		_configFile_read
 17953 ;; This function uses a non-reentrant model
 17954 ;;
 17955                           
 17956                           	psect	text74
 17957  00C908                     __ptext74:
 17958                           	opt stack 0
 17959  00C908                     __parse_item:
 17960                           	opt stack 16
 17961                           
 17962                           ;config_file.c: 110: if(stricmp(item_string, full_circle_in_steps_string)==0)
 17963                           
 17964                           ; BSR set to: 0
 17965                           ;incstack = 0
 17966  00C908  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 17967  00C90C  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 17968  00C910  0EFD               	movlw	low _full_circle_in_steps_string
 17969  00C912  0100               	movlb	0	; () banked
 17970  00C914  6F63               	movwf	stricmp@s2& (0+255),b
 17971  00C916  0EA1               	movlw	high _full_circle_in_steps_string
 17972  00C918  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 17973  00C91A  ECB9  F0A1         	call	_stricmp	;wreg free
 17974  00C91E  0100               	movlb	0	; () banked
 17975  00C920  5161               	movf	?_stricmp& (0+255),w,b
 17976  00C922  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 17977  00C924  A4D8               	btfss	status,2,c
 17978  00C926  D00F               	goto	l2954
 17979                           
 17980                           ; BSR set to: 0
 17981                           ;config_file.c: 111: {;config_file.c: 112: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 17982  00C928  C07C  F06C         	movff	__parse_item@value_string,atol@s
 17983  00C92C  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 17984  00C930  ECE3  F088         	call	_atol	;wreg free
 17985  00C934  C06C  F1A1         	movff	?_atol,_config
 17986  00C938  C06D  F1A2         	movff	?_atol+1,_config+1
 17987  00C93C  C06E  F1A3         	movff	?_atol+2,_config+2
 17988  00C940  C06F  F1A4         	movff	?_atol+3,_config+3
 17989                           
 17990                           ;config_file.c: 113: return 1;;	Return value of __parse_item is never used
 17991  00C944  0012               	return	
 17992  00C946                     l2954:
 17993                           
 17994                           ;config_file.c: 114: };config_file.c: 116: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 17995  00C946  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 17996  00C94A  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 17997  00C94E  0E12               	movlw	low _overshoot_in_steps_string
 17998  00C950  0100               	movlb	0	; () banked
 17999  00C952  6F63               	movwf	stricmp@s2& (0+255),b
 18000  00C954  0EA2               	movlw	high _overshoot_in_steps_string
 18001  00C956  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18002  00C958  ECB9  F0A1         	call	_stricmp	;wreg free
 18003  00C95C  0100               	movlb	0	; () banked
 18004  00C95E  5161               	movf	?_stricmp& (0+255),w,b
 18005  00C960  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18006  00C962  A4D8               	btfss	status,2,c
 18007  00C964  D00B               	goto	l2956
 18008                           
 18009                           ; BSR set to: 0
 18010                           ;config_file.c: 117: {;config_file.c: 118: config.overshoot_in_steps = atoi(value_string
      +                          );
 18011  00C966  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18012  00C96A  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18013  00C96E  ECC1  F08F         	call	_atoi	;wreg free
 18014  00C972  C066  F1A6         	movff	?_atoi,_config+5
 18015  00C976  C067  F1A7         	movff	?_atoi+1,_config+6
 18016                           
 18017                           ;config_file.c: 119: return 2;;	Return value of __parse_item is never used
 18018  00C97A  0012               	return	
 18019  00C97C                     l2956:
 18020                           
 18021                           ;config_file.c: 120: };config_file.c: 122: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 18022  00C97C  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18023  00C980  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18024  00C984  0E49               	movlw	low _inverse_direction_string
 18025  00C986  0100               	movlb	0	; () banked
 18026  00C988  6F63               	movwf	stricmp@s2& (0+255),b
 18027  00C98A  0EA2               	movlw	high _inverse_direction_string
 18028  00C98C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18029  00C98E  ECB9  F0A1         	call	_stricmp	;wreg free
 18030  00C992  0100               	movlb	0	; () banked
 18031  00C994  5161               	movf	?_stricmp& (0+255),w,b
 18032  00C996  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18033  00C998  A4D8               	btfss	status,2,c
 18034  00C99A  D00B               	goto	l2957
 18035                           
 18036                           ; BSR set to: 0
 18037                           ;config_file.c: 123: {;config_file.c: 124: config.inverse_direction = atol(value_string)
      +                          ;
 18038  00C99C  C07C  F06C         	movff	__parse_item@value_string,atol@s
 18039  00C9A0  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18040  00C9A4  ECE3  F088         	call	_atol	;wreg free
 18041  00C9A8  0100               	movlb	0	; () banked
 18042  00C9AA  516C               	movf	?_atol& (0+255),w,b
 18043  00C9AC  0101               	movlb	1	; () banked
 18044  00C9AE  6FA5               	movwf	(_config+4)& (0+255),b
 18045                           
 18046                           ; BSR set to: 1
 18047                           ;config_file.c: 125: return 3;;	Return value of __parse_item is never used
 18048  00C9B0  0012               	return	
 18049  00C9B2                     l2957:
 18050                           
 18051                           ;config_file.c: 126: };config_file.c: 128: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18052                           
 18053                           ; BSR set to: 1
 18054  00C9B2  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18055  00C9B6  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18056  00C9BA  0E12               	movlw	low _overshoot_in_steps_string
 18057  00C9BC  0100               	movlb	0	; () banked
 18058  00C9BE  6F63               	movwf	stricmp@s2& (0+255),b
 18059  00C9C0  0EA2               	movlw	high _overshoot_in_steps_string
 18060  00C9C2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18061  00C9C4  ECB9  F0A1         	call	_stricmp	;wreg free
 18062  00C9C8  0100               	movlb	0	; () banked
 18063  00C9CA  5161               	movf	?_stricmp& (0+255),w,b
 18064  00C9CC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18065  00C9CE  A4D8               	btfss	status,2,c
 18066  00C9D0  D00B               	goto	l2958
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;config_file.c: 129: {;config_file.c: 130: config.overshoot_in_steps = atoi(value_string
      +                          );
 18070  00C9D2  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18071  00C9D6  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18072  00C9DA  ECC1  F08F         	call	_atoi	;wreg free
 18073  00C9DE  C066  F1A6         	movff	?_atoi,_config+5
 18074  00C9E2  C067  F1A7         	movff	?_atoi+1,_config+6
 18075                           
 18076                           ;config_file.c: 131: return 4;;	Return value of __parse_item is never used
 18077  00C9E6  0012               	return	
 18078  00C9E8                     l2958:
 18079                           
 18080                           ;config_file.c: 132: };config_file.c: 134: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 18081  00C9E8  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18082  00C9EC  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18083  00C9F0  0EBB               	movlw	low _overshoot_cost_in_steps_string
 18084  00C9F2  0100               	movlb	0	; () banked
 18085  00C9F4  6F63               	movwf	stricmp@s2& (0+255),b
 18086  00C9F6  0EA1               	movlw	high _overshoot_cost_in_steps_string
 18087  00C9F8  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18088  00C9FA  ECB9  F0A1         	call	_stricmp	;wreg free
 18089  00C9FE  0100               	movlb	0	; () banked
 18090  00CA00  5161               	movf	?_stricmp& (0+255),w,b
 18091  00CA02  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18092  00CA04  A4D8               	btfss	status,2,c
 18093  00CA06  D00B               	goto	l2959
 18094                           
 18095                           ; BSR set to: 0
 18096                           ;config_file.c: 135: {;config_file.c: 136: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 18097  00CA08  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18098  00CA0C  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18099  00CA10  ECC1  F08F         	call	_atoi	;wreg free
 18100  00CA14  C066  F1A8         	movff	?_atoi,_config+7
 18101  00CA18  C067  F1A9         	movff	?_atoi+1,_config+8
 18102                           
 18103                           ;config_file.c: 137: return 5;;	Return value of __parse_item is never used
 18104  00CA1C  0012               	return	
 18105  00CA1E                     l2959:
 18106                           
 18107                           ;config_file.c: 138: };config_file.c: 140: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 18108  00CA1E  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18109  00CA22  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18110  00CA26  0E97               	movlw	low _minimum_speed_string
 18111  00CA28  0100               	movlb	0	; () banked
 18112  00CA2A  6F63               	movwf	stricmp@s2& (0+255),b
 18113  00CA2C  0EA2               	movlw	high _minimum_speed_string
 18114  00CA2E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18115  00CA30  ECB9  F0A1         	call	_stricmp	;wreg free
 18116  00CA34  0100               	movlb	0	; () banked
 18117  00CA36  5161               	movf	?_stricmp& (0+255),w,b
 18118  00CA38  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18119  00CA3A  A4D8               	btfss	status,2,c
 18120  00CA3C  D00B               	goto	l2960
 18121                           
 18122                           ; BSR set to: 0
 18123                           ;config_file.c: 141: {;config_file.c: 142: config.minimum_speed = atoi(value_string);
 18124  00CA3E  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18125  00CA42  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18126  00CA46  ECC1  F08F         	call	_atoi	;wreg free
 18127  00CA4A  C066  F1AA         	movff	?_atoi,_config+9
 18128  00CA4E  C067  F1AB         	movff	?_atoi+1,_config+10
 18129                           
 18130                           ;config_file.c: 143: return 6;;	Return value of __parse_item is never used
 18131  00CA52  0012               	return	
 18132  00CA54                     l2960:
 18133                           
 18134                           ;config_file.c: 144: };config_file.c: 146: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 18135  00CA54  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18136  00CA58  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18137  00CA5C  0E89               	movlw	low _maximum_speed_string
 18138  00CA5E  0100               	movlb	0	; () banked
 18139  00CA60  6F63               	movwf	stricmp@s2& (0+255),b
 18140  00CA62  0EA2               	movlw	high _maximum_speed_string
 18141  00CA64  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18142  00CA66  ECB9  F0A1         	call	_stricmp	;wreg free
 18143  00CA6A  0100               	movlb	0	; () banked
 18144  00CA6C  5161               	movf	?_stricmp& (0+255),w,b
 18145  00CA6E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18146  00CA70  A4D8               	btfss	status,2,c
 18147  00CA72  D00B               	goto	l2961
 18148                           
 18149                           ; BSR set to: 0
 18150                           ;config_file.c: 147: {;config_file.c: 148: config.maximum_speed = atoi(value_string);
 18151  00CA74  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18152  00CA78  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18153  00CA7C  ECC1  F08F         	call	_atoi	;wreg free
 18154  00CA80  C066  F1AC         	movff	?_atoi,_config+11
 18155  00CA84  C067  F1AD         	movff	?_atoi+1,_config+12
 18156                           
 18157                           ;config_file.c: 149: return 7;;	Return value of __parse_item is never used
 18158  00CA88  0012               	return	
 18159  00CA8A                     l2961:
 18160                           
 18161                           ;config_file.c: 150: };config_file.c: 152: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 18162  00CA8A  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18163  00CA8E  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18164  00CA92  0E37               	movlw	low _initial_speed_arc_string
 18165  00CA94  0100               	movlb	0	; () banked
 18166  00CA96  6F63               	movwf	stricmp@s2& (0+255),b
 18167  00CA98  0EA2               	movlw	high _initial_speed_arc_string
 18168  00CA9A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18169  00CA9C  ECB9  F0A1         	call	_stricmp	;wreg free
 18170  00CAA0  0100               	movlb	0	; () banked
 18171  00CAA2  5161               	movf	?_stricmp& (0+255),w,b
 18172  00CAA4  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18173  00CAA6  A4D8               	btfss	status,2,c
 18174  00CAA8  D00B               	goto	l2962
 18175                           
 18176                           ; BSR set to: 0
 18177                           ;config_file.c: 153: {;config_file.c: 154: config.initial_speed_arc = atoi(value_string)
      +                          ;
 18178  00CAAA  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18179  00CAAE  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18180  00CAB2  ECC1  F08F         	call	_atoi	;wreg free
 18181  00CAB6  C066  F1AE         	movff	?_atoi,_config+13
 18182  00CABA  C067  F1AF         	movff	?_atoi+1,_config+14
 18183                           
 18184                           ;config_file.c: 155: return 8;;	Return value of __parse_item is never used
 18185  00CABE  0012               	return	
 18186  00CAC0                     l2962:
 18187                           
 18188                           ;config_file.c: 156: };config_file.c: 158: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 18189  00CAC0  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18190  00CAC4  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18191  00CAC8  0E25               	movlw	low _maximum_speed_arc_string
 18192  00CACA  0100               	movlb	0	; () banked
 18193  00CACC  6F63               	movwf	stricmp@s2& (0+255),b
 18194  00CACE  0EA2               	movlw	high _maximum_speed_arc_string
 18195  00CAD0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18196  00CAD2  ECB9  F0A1         	call	_stricmp	;wreg free
 18197  00CAD6  0100               	movlb	0	; () banked
 18198  00CAD8  5161               	movf	?_stricmp& (0+255),w,b
 18199  00CADA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18200  00CADC  A4D8               	btfss	status,2,c
 18201  00CADE  D00B               	goto	l2963
 18202                           
 18203                           ; BSR set to: 0
 18204                           ;config_file.c: 159: {;config_file.c: 160: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 18205  00CAE0  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18206  00CAE4  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18207  00CAE8  ECC1  F08F         	call	_atoi	;wreg free
 18208  00CAEC  C066  F1B0         	movff	?_atoi,_config+15
 18209  00CAF0  C067  F1B1         	movff	?_atoi+1,_config+16
 18210                           
 18211                           ;config_file.c: 161: return 9;;	Return value of __parse_item is never used
 18212  00CAF4  0012               	return	
 18213  00CAF6                     l2963:
 18214                           
 18215                           ;config_file.c: 162: };config_file.c: 164: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 18216  00CAF6  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18217  00CAFA  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18218  00CAFE  0EE8               	movlw	low _initial_speed_manual_string
 18219  00CB00  0100               	movlb	0	; () banked
 18220  00CB02  6F63               	movwf	stricmp@s2& (0+255),b
 18221  00CB04  0EA1               	movlw	high _initial_speed_manual_string
 18222  00CB06  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18223  00CB08  ECB9  F0A1         	call	_stricmp	;wreg free
 18224  00CB0C  0100               	movlb	0	; () banked
 18225  00CB0E  5161               	movf	?_stricmp& (0+255),w,b
 18226  00CB10  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18227  00CB12  A4D8               	btfss	status,2,c
 18228  00CB14  D00B               	goto	l2964
 18229                           
 18230                           ; BSR set to: 0
 18231                           ;config_file.c: 165: {;config_file.c: 166: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 18232  00CB16  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18233  00CB1A  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18234  00CB1E  ECC1  F08F         	call	_atoi	;wreg free
 18235  00CB22  C066  F1B2         	movff	?_atoi,_config+17
 18236  00CB26  C067  F1B3         	movff	?_atoi+1,_config+18
 18237                           
 18238                           ;config_file.c: 167: return 10;;	Return value of __parse_item is never used
 18239  00CB2A  0012               	return	
 18240  00CB2C                     l2964:
 18241                           
 18242                           ;config_file.c: 168: };config_file.c: 170: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 18243  00CB2C  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18244  00CB30  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18245  00CB34  0ED3               	movlw	low _maximum_speed_manual_string
 18246  00CB36  0100               	movlb	0	; () banked
 18247  00CB38  6F63               	movwf	stricmp@s2& (0+255),b
 18248  00CB3A  0EA1               	movlw	high _maximum_speed_manual_string
 18249  00CB3C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18250  00CB3E  ECB9  F0A1         	call	_stricmp	;wreg free
 18251  00CB42  0100               	movlb	0	; () banked
 18252  00CB44  5161               	movf	?_stricmp& (0+255),w,b
 18253  00CB46  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18254  00CB48  A4D8               	btfss	status,2,c
 18255  00CB4A  D00B               	goto	l2965
 18256                           
 18257                           ; BSR set to: 0
 18258                           ;config_file.c: 171: {;config_file.c: 172: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 18259  00CB4C  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18260  00CB50  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18261  00CB54  ECC1  F08F         	call	_atoi	;wreg free
 18262  00CB58  C066  F1B4         	movff	?_atoi,_config+19
 18263  00CB5C  C067  F1B5         	movff	?_atoi+1,_config+20
 18264                           
 18265                           ;config_file.c: 173: return 11;;	Return value of __parse_item is never used
 18266  00CB60  0012               	return	
 18267  00CB62                     l2965:
 18268                           
 18269                           ;config_file.c: 174: };config_file.c: 176: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 18270  00CB62  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18271  00CB66  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18272  00CB6A  0E7B               	movlw	low _beep_duration_string
 18273  00CB6C  0100               	movlb	0	; () banked
 18274  00CB6E  6F63               	movwf	stricmp@s2& (0+255),b
 18275  00CB70  0EA2               	movlw	high _beep_duration_string
 18276  00CB72  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18277  00CB74  ECB9  F0A1         	call	_stricmp	;wreg free
 18278  00CB78  0100               	movlb	0	; () banked
 18279  00CB7A  5161               	movf	?_stricmp& (0+255),w,b
 18280  00CB7C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18281  00CB7E  A4D8               	btfss	status,2,c
 18282  00CB80  D00B               	goto	l2966
 18283                           
 18284                           ; BSR set to: 0
 18285                           ;config_file.c: 177: {;config_file.c: 178: config.beep_duration = atoi(value_string);
 18286  00CB82  C07C  F066         	movff	__parse_item@value_string,atoi@s
 18287  00CB86  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18288  00CB8A  ECC1  F08F         	call	_atoi	;wreg free
 18289  00CB8E  0100               	movlb	0	; () banked
 18290  00CB90  5166               	movf	?_atoi& (0+255),w,b
 18291  00CB92  0101               	movlb	1	; () banked
 18292  00CB94  6FB6               	movwf	(_config+21)& (0+255),b
 18293                           
 18294                           ; BSR set to: 1
 18295                           ;config_file.c: 179: return 12;;	Return value of __parse_item is never used
 18296  00CB96  0012               	return	
 18297  00CB98                     l2966:
 18298                           
 18299                           ;config_file.c: 180: };config_file.c: 182: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 18300                           
 18301                           ; BSR set to: 1
 18302  00CB98  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18303  00CB9C  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18304  00CBA0  0EA5               	movlw	low _use_cw_limit_string
 18305  00CBA2  0100               	movlb	0	; () banked
 18306  00CBA4  6F63               	movwf	stricmp@s2& (0+255),b
 18307  00CBA6  0EA2               	movlw	high _use_cw_limit_string
 18308  00CBA8  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18309  00CBAA  ECB9  F0A1         	call	_stricmp	;wreg free
 18310  00CBAE  0100               	movlb	0	; () banked
 18311  00CBB0  5161               	movf	?_stricmp& (0+255),w,b
 18312  00CBB2  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18313  00CBB4  A4D8               	btfss	status,2,c
 18314  00CBB6  D00B               	goto	l2967
 18315                           
 18316                           ; BSR set to: 0
 18317                           ;config_file.c: 183: {;config_file.c: 184: config.use_cw_limit = atol(value_string);
 18318  00CBB8  C07C  F06C         	movff	__parse_item@value_string,atol@s
 18319  00CBBC  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18320  00CBC0  ECE3  F088         	call	_atol	;wreg free
 18321  00CBC4  0100               	movlb	0	; () banked
 18322  00CBC6  516C               	movf	?_atol& (0+255),w,b
 18323  00CBC8  0101               	movlb	1	; () banked
 18324  00CBCA  6FB7               	movwf	(_config+22)& (0+255),b
 18325                           
 18326                           ; BSR set to: 1
 18327                           ;config_file.c: 185: return 13;;	Return value of __parse_item is never used
 18328  00CBCC  0012               	return	
 18329  00CBCE                     l2967:
 18330                           
 18331                           ;config_file.c: 186: };config_file.c: 188: if(stricmp(item_string, cw_limit_string)==0)
 18332                           
 18333                           ; BSR set to: 1
 18334  00CBCE  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18335  00CBD2  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18336  00CBD6  0EBC               	movlw	low _cw_limit_string
 18337  00CBD8  0100               	movlb	0	; () banked
 18338  00CBDA  6F63               	movwf	stricmp@s2& (0+255),b
 18339  00CBDC  0EA2               	movlw	high _cw_limit_string
 18340  00CBDE  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18341  00CBE0  ECB9  F0A1         	call	_stricmp	;wreg free
 18342  00CBE4  0100               	movlb	0	; () banked
 18343  00CBE6  5161               	movf	?_stricmp& (0+255),w,b
 18344  00CBE8  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18345  00CBEA  A4D8               	btfss	status,2,c
 18346  00CBEC  D00B               	goto	l2968
 18347                           
 18348                           ; BSR set to: 0
 18349                           ;config_file.c: 189: {;config_file.c: 190: config.cw_limit = atol(value_string);
 18350  00CBEE  C07C  F06C         	movff	__parse_item@value_string,atol@s
 18351  00CBF2  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18352  00CBF6  ECE3  F088         	call	_atol	;wreg free
 18353  00CBFA  C06C  F1B8         	movff	?_atol,_config+23
 18354  00CBFE  C06D  F1B9         	movff	?_atol+1,_config+24
 18355                           
 18356                           ;config_file.c: 191: return 14;;	Return value of __parse_item is never used
 18357  00CC02  0012               	return	
 18358  00CC04                     l2968:
 18359                           
 18360                           ;config_file.c: 192: };config_file.c: 194: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 18361  00CC04  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18362  00CC08  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18363  00CC0C  0E6D               	movlw	low _use_ccw_limit_string
 18364  00CC0E  0100               	movlb	0	; () banked
 18365  00CC10  6F63               	movwf	stricmp@s2& (0+255),b
 18366  00CC12  0EA2               	movlw	high _use_ccw_limit_string
 18367  00CC14  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18368  00CC16  ECB9  F0A1         	call	_stricmp	;wreg free
 18369  00CC1A  0100               	movlb	0	; () banked
 18370  00CC1C  5161               	movf	?_stricmp& (0+255),w,b
 18371  00CC1E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18372  00CC20  A4D8               	btfss	status,2,c
 18373  00CC22  D00B               	goto	l2969
 18374                           
 18375                           ; BSR set to: 0
 18376                           ;config_file.c: 195: {;config_file.c: 196: config.use_ccw_limit = atol(value_string);
 18377  00CC24  C07C  F06C         	movff	__parse_item@value_string,atol@s
 18378  00CC28  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18379  00CC2C  ECE3  F088         	call	_atol	;wreg free
 18380  00CC30  0100               	movlb	0	; () banked
 18381  00CC32  516C               	movf	?_atol& (0+255),w,b
 18382  00CC34  0101               	movlb	1	; () banked
 18383  00CC36  6FBA               	movwf	(_config+25)& (0+255),b
 18384                           
 18385                           ; BSR set to: 1
 18386                           ;config_file.c: 197: return 15;;	Return value of __parse_item is never used
 18387  00CC38  0012               	return	
 18388  00CC3A                     l2969:
 18389                           
 18390                           ;config_file.c: 198: };config_file.c: 200: if(stricmp(item_string, ccw_limit_string)==0)
 18391                           
 18392                           ; BSR set to: 1
 18393  00CC3A  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18394  00CC3E  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18395  00CC42  0EB2               	movlw	low _ccw_limit_string
 18396  00CC44  0100               	movlb	0	; () banked
 18397  00CC46  6F63               	movwf	stricmp@s2& (0+255),b
 18398  00CC48  0EA2               	movlw	high _ccw_limit_string
 18399  00CC4A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18400  00CC4C  ECB9  F0A1         	call	_stricmp	;wreg free
 18401  00CC50  0100               	movlb	0	; () banked
 18402  00CC52  5161               	movf	?_stricmp& (0+255),w,b
 18403  00CC54  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18404  00CC56  A4D8               	btfss	status,2,c
 18405  00CC58  0012               	return	
 18406                           
 18407                           ; BSR set to: 0
 18408                           ;config_file.c: 201: {;config_file.c: 202: config.ccw_limit = atol(value_string);
 18409  00CC5A  C07C  F06C         	movff	__parse_item@value_string,atol@s
 18410  00CC5E  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18411  00CC62  ECE3  F088         	call	_atol	;wreg free
 18412  00CC66  C06C  F1BB         	movff	?_atol,_config+26
 18413  00CC6A  C06D  F1BC         	movff	?_atol+1,_config+27
 18414                           
 18415                           ;config_file.c: 203: return 16;;	Return value of __parse_item is never used
 18416  00CC6E  0012               	return	
 18417  00CC70                     __end_of__parse_item:
 18418                           	opt stack 0
 18419                           tblptru	equ	0xFF8
 18420                           tblptrh	equ	0xFF7
 18421                           tblptrl	equ	0xFF6
 18422                           tablat	equ	0xFF5
 18423                           prodh	equ	0xFF4
 18424                           prodl	equ	0xFF3
 18425                           postinc0	equ	0xFEE
 18426                           wreg	equ	0xFE8
 18427                           postinc1	equ	0xFE6
 18428                           postdec1	equ	0xFE5
 18429                           plusw1	equ	0xFE3
 18430                           fsr1h	equ	0xFE2
 18431                           fsr1l	equ	0xFE1
 18432                           indf2	equ	0xFDF
 18433                           postinc2	equ	0xFDE
 18434                           postdec2	equ	0xFDD
 18435                           plusw2	equ	0xFDB
 18436                           fsr2h	equ	0xFDA
 18437                           fsr2l	equ	0xFD9
 18438                           status	equ	0xFD8
 18439                           
 18440 ;; *************** function _stricmp *****************
 18441 ;; Defined at:
 18442 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 18443 ;; Parameters:    Size  Location     Type
 18444 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 18445 ;;		 -> configFile_read@item_string(31), 
 18446 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 18447 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 18448 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 18449 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 18450 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 18451 ;; Auto vars:     Size  Location     Type
 18452 ;;  r               1    6[BANK0 ] char 
 18453 ;; Return value:  Size  Location     Type
 18454 ;;                  2    1[BANK0 ] int 
 18455 ;; Registers used:
 18456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18457 ;; Tracked objects:
 18458 ;;		On entry : 0/0
 18459 ;;		On exit  : 0/0
 18460 ;;		Unchanged: 0/0
 18461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18462 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18464 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18465 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18466 ;;Total ram usage:        6 bytes
 18467 ;; Hardware stack levels used:    1
 18468 ;; Hardware stack levels required when called:   11
 18469 ;; This function calls:
 18470 ;;		_toupper
 18471 ;; This function is called by:
 18472 ;;		__parse_item
 18473 ;; This function uses a non-reentrant model
 18474 ;;
 18475                           
 18476                           	psect	text75
 18477  014372                     __ptext75:
 18478                           	opt stack 0
 18479  014372                     _stricmp:
 18480                           	opt stack 16
 18481                           
 18482                           ;incstack = 0
 18483  014372  D005               	goto	l3728
 18484  014374  0100               	movlb	0	; () banked
 18485  014376  4B61               	infsnz	stricmp@s1& (0+255),f,b
 18486  014378  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 18487  01437A  4B63               	infsnz	stricmp@s2& (0+255),f,b
 18488  01437C  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 18489  01437E                     l3728:
 18490                           
 18491                           ; BSR set to: 0
 18492  01437E  C063  FFF6         	movff	stricmp@s2,tblptrl
 18493  014382  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 18494  014386                     	if	0	;tblptru may be non-zero
 18495  014386                     	endif
 18496  014386                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18497  014386  0E00               	movlw	low (__mediumconst shr (0+16))
 18498  014388  6EF8               	movwf	tblptru,c
 18499  01438A                     	endif
 18500  01438A  0008               	tblrd		*
 18501  01438C  50F5               	movf	tablat,w,c
 18502  01438E  ECD7  F0AA         	call	_toupper
 18503  014392  0800               	sublw	0
 18504  014394  0100               	movlb	0	; () banked
 18505  014396  6F65               	movwf	??_stricmp& (0+255),b
 18506  014398  C061  FFD9         	movff	stricmp@s1,fsr2l
 18507  01439C  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18508  0143A0  50DF               	movf	indf2,w,c
 18509  0143A2  ECD7  F0AA         	call	_toupper
 18510  0143A6  0100               	movlb	0	; () banked
 18511  0143A8  2565               	addwf	??_stricmp& (0+255),w,b
 18512  0143AA  6F66               	movwf	stricmp@r& (0+255),b
 18513  0143AC  5166               	movf	stricmp@r& (0+255),w,b
 18514  0143AE  A4D8               	btfss	status,2,c
 18515  0143B0  D007               	goto	u13770
 18516                           
 18517                           ; BSR set to: 0
 18518  0143B2  C061  FFD9         	movff	stricmp@s1,fsr2l
 18519  0143B6  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18520  0143BA  50DF               	movf	indf2,w,c
 18521  0143BC  A4D8               	btfss	status,2,c
 18522  0143BE  D7DA               	goto	l3729
 18523  0143C0                     u13770:
 18524                           
 18525                           ; BSR set to: 0
 18526                           
 18527                           ; BSR set to: 0
 18528                           
 18529                           ; BSR set to: 0
 18530  0143C0  5166               	movf	stricmp@r& (0+255),w,b
 18531  0143C2  6F61               	movwf	?_stricmp& (0+255),b
 18532  0143C4  6B62               	clrf	(?_stricmp+1)& (0+255),b
 18533  0143C6  BF61               	btfsc	?_stricmp& (0+255),7,b
 18534  0143C8  0762               	decf	(?_stricmp+1)& (0+255),f,b
 18535  0143CA  0012               	return	
 18536  0143CC                     __end_of_stricmp:
 18537                           	opt stack 0
 18538                           tblptru	equ	0xFF8
 18539                           tblptrh	equ	0xFF7
 18540                           tblptrl	equ	0xFF6
 18541                           tablat	equ	0xFF5
 18542                           prodh	equ	0xFF4
 18543                           prodl	equ	0xFF3
 18544                           postinc0	equ	0xFEE
 18545                           wreg	equ	0xFE8
 18546                           postinc1	equ	0xFE6
 18547                           postdec1	equ	0xFE5
 18548                           plusw1	equ	0xFE3
 18549                           fsr1h	equ	0xFE2
 18550                           fsr1l	equ	0xFE1
 18551                           indf2	equ	0xFDF
 18552                           postinc2	equ	0xFDE
 18553                           postdec2	equ	0xFDD
 18554                           plusw2	equ	0xFDB
 18555                           fsr2h	equ	0xFDA
 18556                           fsr2l	equ	0xFD9
 18557                           status	equ	0xFD8
 18558                           
 18559 ;; *************** function _toupper *****************
 18560 ;; Defined at:
 18561 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 18562 ;; Parameters:    Size  Location     Type
 18563 ;;  c               1    wreg     unsigned char 
 18564 ;; Auto vars:     Size  Location     Type
 18565 ;;  c               1    0[BANK0 ] unsigned char 
 18566 ;; Return value:  Size  Location     Type
 18567 ;;                  1    wreg      unsigned char 
 18568 ;; Registers used:
 18569 ;;		wreg, status,2, status,0
 18570 ;; Tracked objects:
 18571 ;;		On entry : 0/0
 18572 ;;		On exit  : 0/0
 18573 ;;		Unchanged: 0/0
 18574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18576 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18578 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18579 ;;Total ram usage:        1 bytes
 18580 ;; Hardware stack levels used:    1
 18581 ;; Hardware stack levels required when called:   10
 18582 ;; This function calls:
 18583 ;;		Nothing
 18584 ;; This function is called by:
 18585 ;;		_stricmp
 18586 ;; This function uses a non-reentrant model
 18587 ;;
 18588                           
 18589                           	psect	text76
 18590  0155AE                     __ptext76:
 18591                           	opt stack 0
 18592  0155AE                     _toupper:
 18593                           	opt stack 16
 18594                           
 18595                           ; BSR set to: 0
 18596                           ;incstack = 0
 18597                           ;toupper@c stored from wreg
 18598  0155AE  0100               	movlb	0	; () banked
 18599  0155B0  6F60               	movwf	toupper@c& (0+255),b
 18600  0155B2  0E7B               	movlw	123
 18601  0155B4  0100               	movlb	0	; () banked
 18602  0155B6  6160               	cpfslt	toupper@c& (0+255),b
 18603  0155B8  D004               	goto	l3751
 18604                           
 18605                           ; BSR set to: 0
 18606  0155BA  0E60               	movlw	96
 18607  0155BC  6560               	cpfsgt	toupper@c& (0+255),b
 18608  0155BE  D001               	goto	l3751
 18609                           
 18610                           ; BSR set to: 0
 18611  0155C0  9B60               	bcf	toupper@c& (0+255),5,b
 18612  0155C2                     l3751:
 18613                           
 18614                           ; BSR set to: 0
 18615                           
 18616                           ; BSR set to: 0
 18617  0155C2  5160               	movf	toupper@c& (0+255),w,b
 18618  0155C4  0012               	return	
 18619  0155C6                     __end_of_toupper:
 18620                           	opt stack 0
 18621                           tblptru	equ	0xFF8
 18622                           tblptrh	equ	0xFF7
 18623                           tblptrl	equ	0xFF6
 18624                           tablat	equ	0xFF5
 18625                           prodh	equ	0xFF4
 18626                           prodl	equ	0xFF3
 18627                           postinc0	equ	0xFEE
 18628                           wreg	equ	0xFE8
 18629                           postinc1	equ	0xFE6
 18630                           postdec1	equ	0xFE5
 18631                           plusw1	equ	0xFE3
 18632                           fsr1h	equ	0xFE2
 18633                           fsr1l	equ	0xFE1
 18634                           indf2	equ	0xFDF
 18635                           postinc2	equ	0xFDE
 18636                           postdec2	equ	0xFDD
 18637                           plusw2	equ	0xFDB
 18638                           fsr2h	equ	0xFDA
 18639                           fsr2l	equ	0xFD9
 18640                           status	equ	0xFD8
 18641                           
 18642 ;; *************** function _atol *****************
 18643 ;; Defined at:
 18644 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 18645 ;; Parameters:    Size  Location     Type
 18646 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 18647 ;;		 -> configFile_read@value_string(12), 
 18648 ;; Auto vars:     Size  Location     Type
 18649 ;;  a               4   21[BANK0 ] long 
 18650 ;;  c               1   25[BANK0 ] unsigned char 
 18651 ;;  sign            1   20[BANK0 ] unsigned char 
 18652 ;; Return value:  Size  Location     Type
 18653 ;;                  4   12[BANK0 ] long 
 18654 ;; Registers used:
 18655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18656 ;; Tracked objects:
 18657 ;;		On entry : 0/0
 18658 ;;		On exit  : 0/0
 18659 ;;		Unchanged: 0/0
 18660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18661 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18662 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18663 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18664 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18665 ;;Total ram usage:       14 bytes
 18666 ;; Hardware stack levels used:    1
 18667 ;; Hardware stack levels required when called:   11
 18668 ;; This function calls:
 18669 ;;		___lmul
 18670 ;;		_isdigit
 18671 ;; This function is called by:
 18672 ;;		__parse_item
 18673 ;; This function uses a non-reentrant model
 18674 ;;
 18675                           
 18676                           	psect	text77
 18677  0111C6                     __ptext77:
 18678                           	opt stack 0
 18679  0111C6                     _atol:
 18680                           	opt stack 16
 18681                           
 18682                           ; BSR set to: 0
 18683                           ;incstack = 0
 18684  0111C6  C06C  FFD9         	movff	atol@s,fsr2l
 18685  0111CA  C06D  FFDA         	movff	atol@s+1,fsr2h
 18686  0111CE  50DF               	movf	indf2,w,c
 18687  0111D0  0100               	movlb	0	; () banked
 18688  0111D2  6F79               	movwf	atol@c& (0+255),b
 18689                           
 18690                           ; BSR set to: 0
 18691  0111D4  4B6C               	infsnz	atol@s& (0+255),f,b
 18692  0111D6  2B6D               	incf	(atol@s+1)& (0+255),f,b
 18693                           
 18694                           ; BSR set to: 0
 18695  0111D8  0E20               	movlw	32
 18696  0111DA  1979               	xorwf	atol@c& (0+255),w,b
 18697  0111DC  B4D8               	btfsc	status,2,c
 18698  0111DE  D7F3               	goto	_atol
 18699                           
 18700                           ; BSR set to: 0
 18701  0111E0  0E09               	movlw	9
 18702  0111E2  1979               	xorwf	atol@c& (0+255),w,b
 18703  0111E4  B4D8               	btfsc	status,2,c
 18704  0111E6  D7EF               	goto	_atol
 18705                           
 18706                           ; BSR set to: 0
 18707                           
 18708                           ; BSR set to: 0
 18709  0111E8  0E00               	movlw	0
 18710  0111EA  6F75               	movwf	atol@a& (0+255),b
 18711  0111EC  0E00               	movlw	0
 18712  0111EE  6F76               	movwf	(atol@a+1)& (0+255),b
 18713  0111F0  0E00               	movlw	0
 18714  0111F2  6F77               	movwf	(atol@a+2)& (0+255),b
 18715  0111F4  0E00               	movlw	0
 18716  0111F6  6F78               	movwf	(atol@a+3)& (0+255),b
 18717  0111F8  0E00               	movlw	0
 18718  0111FA  6F74               	movwf	atol@sign& (0+255),b
 18719                           
 18720                           ; BSR set to: 0
 18721  0111FC  0E2D               	movlw	45
 18722  0111FE  1979               	xorwf	atol@c& (0+255),w,b
 18723  011200  A4D8               	btfss	status,2,c
 18724  011202  D002               	goto	l3671
 18725                           
 18726                           ; BSR set to: 0
 18727  011204  2B74               	incf	atol@sign& (0+255),f,b
 18728  011206  D029               	goto	L91
 18729  011208                     l3671:
 18730                           
 18731                           ; BSR set to: 0
 18732                           
 18733                           ; BSR set to: 0
 18734  011208  0E2B               	movlw	43
 18735  01120A  1979               	xorwf	atol@c& (0+255),w,b
 18736  01120C  A4D8               	btfss	status,2,c
 18737  01120E  D02D               	goto	l3674
 18738  011210  D024               	goto	L91
 18739  011212                     
 18740                           ; BSR set to: 0
 18741  011212  C075  F060         	movff	atol@a,___lmul@multiplier
 18742  011216  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 18743  01121A  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 18744  01121E  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 18745  011222  0E0A               	movlw	10
 18746  011224  0100               	movlb	0	; () banked
 18747  011226  6F64               	movwf	___lmul@multiplicand& (0+255),b
 18748  011228  0E00               	movlw	0
 18749  01122A  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 18750  01122C  0E00               	movlw	0
 18751  01122E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18752  011230  0E00               	movlw	0
 18753  011232  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18754  011234  ECC5  F0A2         	call	___lmul	;wreg free
 18755  011238  C079  F070         	movff	atol@c,??_atol
 18756  01123C  0ED0               	movlw	208
 18757  01123E  0100               	movlb	0	; () banked
 18758  011240  2770               	addwf	??_atol& (0+255),f,b
 18759  011242  5170               	movf	??_atol& (0+255),w,b
 18760  011244  2560               	addwf	?___lmul& (0+255),w,b
 18761  011246  6F75               	movwf	atol@a& (0+255),b
 18762  011248  0E00               	movlw	0
 18763  01124A  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 18764  01124C  6F76               	movwf	(atol@a+1)& (0+255),b
 18765  01124E  0E00               	movlw	0
 18766  011250  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 18767  011252  6F77               	movwf	(atol@a+2)& (0+255),b
 18768  011254  0E00               	movlw	0
 18769  011256  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 18770  011258  6F78               	movwf	(atol@a+3)& (0+255),b
 18771  01125A                     L91:
 18772                           
 18773                           ; BSR set to: 0
 18774  01125A  C06C  FFD9         	movff	atol@s,fsr2l
 18775  01125E  C06D  FFDA         	movff	atol@s+1,fsr2h
 18776  011262  50DF               	movf	indf2,w,c
 18777  011264  6F79               	movwf	atol@c& (0+255),b
 18778                           
 18779                           ; BSR set to: 0
 18780  011266  4B6C               	infsnz	atol@s& (0+255),f,b
 18781  011268  2B6D               	incf	(atol@s+1)& (0+255),f,b
 18782  01126A                     l3674:
 18783                           
 18784                           ; BSR set to: 0
 18785                           
 18786                           ; BSR set to: 0
 18787  01126A  5179               	movf	atol@c& (0+255),w,b
 18788  01126C  EC36  F0AA         	call	_isdigit
 18789  011270  B0D8               	btfsc	status,0,c
 18790  011272  D7CF               	goto	l3675
 18791  011274  0100               	movlb	0	; () banked
 18792  011276  5174               	movf	atol@sign& (0+255),w,b
 18793  011278  B4D8               	btfsc	status,2,c
 18794  01127A  D01A               	goto	l3677
 18795                           
 18796                           ; BSR set to: 0
 18797  01127C  C075  F070         	movff	atol@a,??_atol
 18798  011280  C076  F071         	movff	atol@a+1,??_atol+1
 18799  011284  C077  F072         	movff	atol@a+2,??_atol+2
 18800  011288  C078  F073         	movff	atol@a+3,??_atol+3
 18801  01128C  1F70               	comf	??_atol& (0+255),f,b
 18802  01128E  1F71               	comf	(??_atol+1)& (0+255),f,b
 18803  011290  1F72               	comf	(??_atol+2)& (0+255),f,b
 18804  011292  1F73               	comf	(??_atol+3)& (0+255),f,b
 18805  011294  2B70               	incf	??_atol& (0+255),f,b
 18806  011296  0E00               	movlw	0
 18807  011298  2371               	addwfc	(??_atol+1)& (0+255),f,b
 18808  01129A  2372               	addwfc	(??_atol+2)& (0+255),f,b
 18809  01129C  2373               	addwfc	(??_atol+3)& (0+255),f,b
 18810  01129E  C070  F06C         	movff	??_atol,?_atol
 18811  0112A2  C071  F06D         	movff	??_atol+1,?_atol+1
 18812  0112A6  C072  F06E         	movff	??_atol+2,?_atol+2
 18813  0112AA  C073  F06F         	movff	??_atol+3,?_atol+3
 18814                           
 18815                           ; BSR set to: 0
 18816  0112AE  0012               	return	
 18817  0112B0                     l3677:
 18818                           
 18819                           ; BSR set to: 0
 18820  0112B0  C075  F06C         	movff	atol@a,?_atol
 18821  0112B4  C076  F06D         	movff	atol@a+1,?_atol+1
 18822  0112B8  C077  F06E         	movff	atol@a+2,?_atol+2
 18823  0112BC  C078  F06F         	movff	atol@a+3,?_atol+3
 18824                           
 18825                           ; BSR set to: 0
 18826  0112C0  0012               	return		;funcret
 18827  0112C2                     __end_of_atol:
 18828                           	opt stack 0
 18829                           tblptru	equ	0xFF8
 18830                           tblptrh	equ	0xFF7
 18831                           tblptrl	equ	0xFF6
 18832                           tablat	equ	0xFF5
 18833                           prodh	equ	0xFF4
 18834                           prodl	equ	0xFF3
 18835                           postinc0	equ	0xFEE
 18836                           wreg	equ	0xFE8
 18837                           postinc1	equ	0xFE6
 18838                           postdec1	equ	0xFE5
 18839                           plusw1	equ	0xFE3
 18840                           fsr1h	equ	0xFE2
 18841                           fsr1l	equ	0xFE1
 18842                           indf2	equ	0xFDF
 18843                           postinc2	equ	0xFDE
 18844                           postdec2	equ	0xFDD
 18845                           plusw2	equ	0xFDB
 18846                           fsr2h	equ	0xFDA
 18847                           fsr2l	equ	0xFD9
 18848                           status	equ	0xFD8
 18849                           
 18850 ;; *************** function _atoi *****************
 18851 ;; Defined at:
 18852 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 18853 ;; Parameters:    Size  Location     Type
 18854 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 18855 ;;		 -> configFile_read@value_string(12), 
 18856 ;; Auto vars:     Size  Location     Type
 18857 ;;  a               2   11[BANK0 ] int 
 18858 ;;  sign            1   10[BANK0 ] unsigned char 
 18859 ;; Return value:  Size  Location     Type
 18860 ;;                  2    6[BANK0 ] int 
 18861 ;; Registers used:
 18862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18863 ;; Tracked objects:
 18864 ;;		On entry : 0/0
 18865 ;;		On exit  : 0/0
 18866 ;;		Unchanged: 0/0
 18867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18868 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18869 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18870 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18871 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18872 ;;Total ram usage:        7 bytes
 18873 ;; Hardware stack levels used:    1
 18874 ;; Hardware stack levels required when called:   11
 18875 ;; This function calls:
 18876 ;;		___wmul
 18877 ;;		_isdigit
 18878 ;; This function is called by:
 18879 ;;		__parse_item
 18880 ;; This function uses a non-reentrant model
 18881 ;;
 18882                           
 18883                           	psect	text78
 18884  011F82                     __ptext78:
 18885                           	opt stack 0
 18886  011F82                     _atoi:
 18887                           	opt stack 16
 18888                           
 18889                           ; BSR set to: 0
 18890                           ;incstack = 0
 18891  011F82  D003               	goto	l3654
 18892  011F84  0100               	movlb	0	; () banked
 18893  011F86  4B66               	infsnz	atoi@s& (0+255),f,b
 18894  011F88  2B67               	incf	(atoi@s+1)& (0+255),f,b
 18895  011F8A                     l3654:
 18896                           
 18897                           ; BSR set to: 0
 18898  011F8A  C066  FFD9         	movff	atoi@s,fsr2l
 18899  011F8E  C067  FFDA         	movff	atoi@s+1,fsr2h
 18900  011F92  0E20               	movlw	32
 18901  011F94  18DE               	xorwf	postinc2,w,c
 18902  011F96  B4D8               	btfsc	status,2,c
 18903  011F98  D7F5               	goto	l3655
 18904  011F9A  C066  FFD9         	movff	atoi@s,fsr2l
 18905  011F9E  C067  FFDA         	movff	atoi@s+1,fsr2h
 18906  011FA2  0E09               	movlw	9
 18907  011FA4  18DE               	xorwf	postinc2,w,c
 18908  011FA6  B4D8               	btfsc	status,2,c
 18909  011FA8  D7ED               	goto	l3655
 18910  011FAA  0E00               	movlw	0
 18911  011FAC  0100               	movlb	0	; () banked
 18912  011FAE  6F6C               	movwf	(atoi@a+1)& (0+255),b
 18913  011FB0  0E00               	movlw	0
 18914  011FB2  6F6B               	movwf	atoi@a& (0+255),b
 18915  011FB4  0E00               	movlw	0
 18916  011FB6  6F6A               	movwf	atoi@sign& (0+255),b
 18917                           
 18918                           ; BSR set to: 0
 18919  011FB8  C066  FFD9         	movff	atoi@s,fsr2l
 18920  011FBC  C067  FFDA         	movff	atoi@s+1,fsr2h
 18921  011FC0  0E2D               	movlw	45
 18922  011FC2  18DE               	xorwf	postinc2,w,c
 18923  011FC4  A4D8               	btfss	status,2,c
 18924  011FC6  D002               	goto	l3657
 18925                           
 18926                           ; BSR set to: 0
 18927  011FC8  2B6A               	incf	atoi@sign& (0+255),f,b
 18928  011FCA  D026               	goto	l15026
 18929  011FCC                     l3657:
 18930                           
 18931                           ; BSR set to: 0
 18932                           
 18933                           ; BSR set to: 0
 18934  011FCC  C066  FFD9         	movff	atoi@s,fsr2l
 18935  011FD0  C067  FFDA         	movff	atoi@s+1,fsr2h
 18936  011FD4  0E2B               	movlw	43
 18937  011FD6  18DE               	xorwf	postinc2,w,c
 18938  011FD8  A4D8               	btfss	status,2,c
 18939  011FDA  D020               	goto	l3660
 18940  011FDC  D01D               	goto	l15026
 18941  011FDE                     
 18942                           ; BSR set to: 0
 18943  011FDE  C06B  F060         	movff	atoi@a,___wmul@multiplier
 18944  011FE2  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 18945  011FE6  0E00               	movlw	0
 18946  011FE8  0100               	movlb	0	; () banked
 18947  011FEA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18948  011FEC  0E0A               	movlw	10
 18949  011FEE  6F62               	movwf	___wmul@multiplicand& (0+255),b
 18950  011FF0  ECA1  F0A9         	call	___wmul	;wreg free
 18951  011FF4  C066  FFD9         	movff	atoi@s,fsr2l
 18952  011FF8  C067  FFDA         	movff	atoi@s+1,fsr2h
 18953  011FFC  50DF               	movf	indf2,w,c
 18954  011FFE  0100               	movlb	0	; () banked
 18955  012000  6F68               	movwf	??_atoi& (0+255),b
 18956  012002  6B69               	clrf	(??_atoi+1)& (0+255),b
 18957  012004  5160               	movf	?___wmul& (0+255),w,b
 18958  012006  2768               	addwf	??_atoi& (0+255),f,b
 18959  012008  5161               	movf	(?___wmul+1)& (0+255),w,b
 18960  01200A  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 18961  01200C  0ED0               	movlw	208
 18962  01200E  2568               	addwf	??_atoi& (0+255),w,b
 18963  012010  6F6B               	movwf	atoi@a& (0+255),b
 18964  012012  0EFF               	movlw	255
 18965  012014  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 18966  012016  6F6C               	movwf	(atoi@a+1)& (0+255),b
 18967  012018                     l15026:
 18968                           
 18969                           ; BSR set to: 0
 18970  012018  4B66               	infsnz	atoi@s& (0+255),f,b
 18971  01201A  2B67               	incf	(atoi@s+1)& (0+255),f,b
 18972  01201C                     l3660:
 18973                           
 18974                           ; BSR set to: 0
 18975                           
 18976                           ; BSR set to: 0
 18977  01201C  C066  FFD9         	movff	atoi@s,fsr2l
 18978  012020  C067  FFDA         	movff	atoi@s+1,fsr2h
 18979  012024  50DF               	movf	indf2,w,c
 18980  012026  EC36  F0AA         	call	_isdigit
 18981  01202A  B0D8               	btfsc	status,0,c
 18982  01202C  D7D8               	goto	l3661
 18983  01202E  0100               	movlb	0	; () banked
 18984  012030  516A               	movf	atoi@sign& (0+255),w,b
 18985  012032  B4D8               	btfsc	status,2,c
 18986  012034  D00D               	goto	l3663
 18987                           
 18988                           ; BSR set to: 0
 18989  012036  C06B  F068         	movff	atoi@a,??_atoi
 18990  01203A  C06C  F069         	movff	atoi@a+1,??_atoi+1
 18991  01203E  1F68               	comf	??_atoi& (0+255),f,b
 18992  012040  1F69               	comf	(??_atoi+1)& (0+255),f,b
 18993  012042  4B68               	infsnz	??_atoi& (0+255),f,b
 18994  012044  2B69               	incf	(??_atoi+1)& (0+255),f,b
 18995  012046  C068  F066         	movff	??_atoi,?_atoi
 18996  01204A  C069  F067         	movff	??_atoi+1,?_atoi+1
 18997  01204E  0012               	return	
 18998  012050                     l3663:
 18999                           
 19000                           ; BSR set to: 0
 19001  012050  C06B  F066         	movff	atoi@a,?_atoi
 19002  012054  C06C  F067         	movff	atoi@a+1,?_atoi+1
 19003                           
 19004                           ; BSR set to: 0
 19005  012058  0012               	return		;funcret
 19006  01205A                     __end_of_atoi:
 19007                           	opt stack 0
 19008                           tblptru	equ	0xFF8
 19009                           tblptrh	equ	0xFF7
 19010                           tblptrl	equ	0xFF6
 19011                           tablat	equ	0xFF5
 19012                           prodh	equ	0xFF4
 19013                           prodl	equ	0xFF3
 19014                           postinc0	equ	0xFEE
 19015                           wreg	equ	0xFE8
 19016                           postinc1	equ	0xFE6
 19017                           postdec1	equ	0xFE5
 19018                           plusw1	equ	0xFE3
 19019                           fsr1h	equ	0xFE2
 19020                           fsr1l	equ	0xFE1
 19021                           indf2	equ	0xFDF
 19022                           postinc2	equ	0xFDE
 19023                           postdec2	equ	0xFDD
 19024                           plusw2	equ	0xFDB
 19025                           fsr2h	equ	0xFDA
 19026                           fsr2l	equ	0xFD9
 19027                           status	equ	0xFD8
 19028                           
 19029 ;; *************** function _isdigit *****************
 19030 ;; Defined at:
 19031 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 19032 ;; Parameters:    Size  Location     Type
 19033 ;;  c               1    wreg     unsigned char 
 19034 ;; Auto vars:     Size  Location     Type
 19035 ;;  c               1    2[BANK0 ] unsigned char 
 19036 ;; Return value:  Size  Location     Type
 19037 ;;		None               void
 19038 ;; Registers used:
 19039 ;;		wreg, status,2, status,0
 19040 ;; Tracked objects:
 19041 ;;		On entry : 0/0
 19042 ;;		On exit  : 0/0
 19043 ;;		Unchanged: 0/0
 19044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19046 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19047 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19048 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19049 ;;Total ram usage:        3 bytes
 19050 ;; Hardware stack levels used:    1
 19051 ;; Hardware stack levels required when called:   10
 19052 ;; This function calls:
 19053 ;;		Nothing
 19054 ;; This function is called by:
 19055 ;;		_atoi
 19056 ;;		_atol
 19057 ;; This function uses a non-reentrant model
 19058 ;;
 19059                           
 19060                           	psect	text79
 19061  01546C                     __ptext79:
 19062                           	opt stack 0
 19063  01546C                     _isdigit:
 19064                           	opt stack 16
 19065                           
 19066                           ; BSR set to: 0
 19067                           ;incstack = 0
 19068                           ;isdigit@c stored from wreg
 19069  01546C  0100               	movlb	0	; () banked
 19070  01546E  6F62               	movwf	isdigit@c& (0+255),b
 19071  015470  0E00               	movlw	0
 19072  015472  0100               	movlb	0	; () banked
 19073  015474  6F61               	movwf	_isdigit$8211& (0+255),b
 19074                           
 19075                           ; BSR set to: 0
 19076  015476  0E3A               	movlw	58
 19077  015478  6162               	cpfslt	isdigit@c& (0+255),b
 19078  01547A  D005               	goto	l3682
 19079                           
 19080                           ; BSR set to: 0
 19081  01547C  0E2F               	movlw	47
 19082  01547E  6562               	cpfsgt	isdigit@c& (0+255),b
 19083  015480  D002               	goto	l3682
 19084                           
 19085                           ; BSR set to: 0
 19086  015482  0E01               	movlw	1
 19087  015484  6F61               	movwf	_isdigit$8211& (0+255),b
 19088  015486                     l3682:
 19089                           
 19090                           ; BSR set to: 0
 19091                           
 19092                           ; BSR set to: 0
 19093  015486  C061  F060         	movff	_isdigit$8211,??_isdigit
 19094  01548A  3160               	rrcf	??_isdigit& (0+255),w,b
 19095  01548C  0012               	return	
 19096  01548E                     __end_of_isdigit:
 19097                           	opt stack 0
 19098                           tblptru	equ	0xFF8
 19099                           tblptrh	equ	0xFF7
 19100                           tblptrl	equ	0xFF6
 19101                           tablat	equ	0xFF5
 19102                           prodh	equ	0xFF4
 19103                           prodl	equ	0xFF3
 19104                           postinc0	equ	0xFEE
 19105                           wreg	equ	0xFE8
 19106                           postinc1	equ	0xFE6
 19107                           postdec1	equ	0xFE5
 19108                           plusw1	equ	0xFE3
 19109                           fsr1h	equ	0xFE2
 19110                           fsr1l	equ	0xFE1
 19111                           indf2	equ	0xFDF
 19112                           postinc2	equ	0xFDE
 19113                           postdec2	equ	0xFDD
 19114                           plusw2	equ	0xFDB
 19115                           fsr2h	equ	0xFDA
 19116                           fsr2l	equ	0xFD9
 19117                           status	equ	0xFD8
 19118                           
 19119 ;; *************** function ___wmul *****************
 19120 ;; Defined at:
 19121 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 19122 ;; Parameters:    Size  Location     Type
 19123 ;;  multiplier      2    0[BANK0 ] unsigned int 
 19124 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 19125 ;; Auto vars:     Size  Location     Type
 19126 ;;  product         2    4[BANK0 ] unsigned int 
 19127 ;; Return value:  Size  Location     Type
 19128 ;;                  2    0[BANK0 ] unsigned int 
 19129 ;; Registers used:
 19130 ;;		wreg, status,2, status,0, prodl, prodh
 19131 ;; Tracked objects:
 19132 ;;		On entry : 0/0
 19133 ;;		On exit  : 0/0
 19134 ;;		Unchanged: 0/0
 19135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19136 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19137 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19139 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19140 ;;Total ram usage:        6 bytes
 19141 ;; Hardware stack levels used:    1
 19142 ;; Hardware stack levels required when called:   10
 19143 ;; This function calls:
 19144 ;;		Nothing
 19145 ;; This function is called by:
 19146 ;;		_atoi
 19147 ;; This function uses a non-reentrant model
 19148 ;;
 19149                           
 19150                           	psect	text80
 19151  015342                     __ptext80:
 19152                           	opt stack 0
 19153  015342                     ___wmul:
 19154                           	opt stack 16
 19155                           
 19156                           ; BSR set to: 0
 19157                           ;incstack = 0
 19158  015342  0100               	movlb	0	; () banked
 19159  015344  5160               	movf	___wmul@multiplier& (0+255),w,b
 19160  015346  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19161  015348  CFF3 F064          	movff	prodl,___wmul@product
 19162  01534C  CFF4 F065          	movff	prodh,___wmul@product+1
 19163  015350  5160               	movf	___wmul@multiplier& (0+255),w,b
 19164  015352  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 19165  015354  50F3               	movf	prodl,w,c
 19166  015356  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19167  015358  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 19168  01535A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19169  01535C  50F3               	movf	prodl,w,c
 19170  01535E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19171                           
 19172                           ; BSR set to: 0
 19173  015360  C064  F060         	movff	___wmul@product,?___wmul
 19174  015364  C065  F061         	movff	___wmul@product+1,?___wmul+1
 19175  015368  0012               	return	
 19176  01536A                     __end_of___wmul:
 19177                           	opt stack 0
 19178                           tblptru	equ	0xFF8
 19179                           tblptrh	equ	0xFF7
 19180                           tblptrl	equ	0xFF6
 19181                           tablat	equ	0xFF5
 19182                           prodh	equ	0xFF4
 19183                           prodl	equ	0xFF3
 19184                           postinc0	equ	0xFEE
 19185                           wreg	equ	0xFE8
 19186                           postinc1	equ	0xFE6
 19187                           postdec1	equ	0xFE5
 19188                           plusw1	equ	0xFE3
 19189                           fsr1h	equ	0xFE2
 19190                           fsr1l	equ	0xFE1
 19191                           indf2	equ	0xFDF
 19192                           postinc2	equ	0xFDE
 19193                           postdec2	equ	0xFDD
 19194                           plusw2	equ	0xFDB
 19195                           fsr2h	equ	0xFDA
 19196                           fsr2l	equ	0xFD9
 19197                           status	equ	0xFD8
 19198                           
 19199 ;; *************** function __get_item *****************
 19200 ;; Defined at:
 19201 ;;		line 68 in file "config_file.c"
 19202 ;; Parameters:    Size  Location     Type
 19203 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 19204 ;;		 -> configFile_read@item_string(31), 
 19205 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 19206 ;;		 -> configFile_read@value_string(12), 
 19207 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 19208 ;;		 -> ConfigFile_buffer(512), 
 19209 ;; Auto vars:     Size  Location     Type
 19210 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 19211 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 19212 ;; Return value:  Size  Location     Type
 19213 ;;                  1    wreg      unsigned char 
 19214 ;; Registers used:
 19215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19216 ;; Tracked objects:
 19217 ;;		On entry : 0/0
 19218 ;;		On exit  : 0/0
 19219 ;;		Unchanged: 0/0
 19220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19221 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19222 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19223 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19224 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19225 ;;Total ram usage:       11 bytes
 19226 ;; Hardware stack levels used:    1
 19227 ;; Hardware stack levels required when called:   10
 19228 ;; This function calls:
 19229 ;;		Nothing
 19230 ;; This function is called by:
 19231 ;;		_configFile_read
 19232 ;; This function uses a non-reentrant model
 19233 ;;
 19234                           
 19235                           	psect	text81
 19236  00F594                     __ptext81:
 19237                           	opt stack 0
 19238  00F594                     __get_item:
 19239                           	opt stack 18
 19240                           
 19241                           ;config_file.c: 70: uint8_t item_ctr;;config_file.c: 71: uint8_t value_ctr;;config_file.
      +                          c: 74: for(item_ctr=0;item_ctr<30;++item_ctr)
 19242                           
 19243                           ; BSR set to: 0
 19244                           ;incstack = 0
 19245  00F594  0E00               	movlw	0
 19246  00F596  0100               	movlb	0	; () banked
 19247  00F598  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 19248  00F59A                     l15878:
 19249                           
 19250                           ; BSR set to: 0
 19251  00F59A  0E1D               	movlw	29
 19252  00F59C  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 19253  00F59E  D001               	goto	l2940
 19254  00F5A0  D020               	goto	u14780
 19255  00F5A2                     l2940:
 19256                           
 19257                           ; BSR set to: 0
 19258                           ;config_file.c: 75: {;config_file.c: 77: if(buffer[item_ctr] == '=')
 19259                           
 19260                           ; BSR set to: 0
 19261  00F5A2  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19262  00F5A4  0D01               	mullw	1
 19263  00F5A6  50F3               	movf	prodl,w,c
 19264  00F5A8  2564               	addwf	__get_item@buffer& (0+255),w,b
 19265  00F5AA  6ED9               	movwf	fsr2l,c
 19266  00F5AC  50F4               	movf	prodh,w,c
 19267  00F5AE  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19268  00F5B0  6EDA               	movwf	fsr2h,c
 19269  00F5B2  0E3D               	movlw	61
 19270  00F5B4  18DE               	xorwf	postinc2,w,c
 19271  00F5B6  B4D8               	btfsc	status,2,c
 19272  00F5B8  D014               	goto	u14780
 19273                           
 19274                           ; BSR set to: 0
 19275                           ;config_file.c: 80: };config_file.c: 81: item_string[item_ctr] = buffer[item_ctr];
 19276                           
 19277                           ; BSR set to: 0
 19278                           
 19279                           ; BSR set to: 0
 19280                           ;config_file.c: 78: {;config_file.c: 79: break;
 19281  00F5BA  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19282  00F5BC  0D01               	mullw	1
 19283  00F5BE  50F3               	movf	prodl,w,c
 19284  00F5C0  2564               	addwf	__get_item@buffer& (0+255),w,b
 19285  00F5C2  6ED9               	movwf	fsr2l,c
 19286  00F5C4  50F4               	movf	prodh,w,c
 19287  00F5C6  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19288  00F5C8  6EDA               	movwf	fsr2h,c
 19289  00F5CA  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19290  00F5CC  0D01               	mullw	1
 19291  00F5CE  50F3               	movf	prodl,w,c
 19292  00F5D0  2560               	addwf	__get_item@item_string& (0+255),w,b
 19293  00F5D2  6EE1               	movwf	fsr1l,c
 19294  00F5D4  50F4               	movf	prodh,w,c
 19295  00F5D6  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 19296  00F5D8  6EE2               	movwf	fsr1h,c
 19297  00F5DA  CFDF FFE7          	movff	indf2,indf1
 19298                           
 19299                           ; BSR set to: 0
 19300  00F5DE  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 19301  00F5E0  D7DC               	goto	l15878
 19302  00F5E2                     u14780:
 19303                           
 19304                           ; BSR set to: 0
 19305                           ;config_file.c: 82: };config_file.c: 83: item_string[item_ctr++] = 0;
 19306                           
 19307                           ; BSR set to: 0
 19308  00F5E2  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19309  00F5E4  0D01               	mullw	1
 19310  00F5E6  50F3               	movf	prodl,w,c
 19311  00F5E8  2560               	addwf	__get_item@item_string& (0+255),w,b
 19312  00F5EA  6ED9               	movwf	fsr2l,c
 19313  00F5EC  50F4               	movf	prodh,w,c
 19314  00F5EE  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 19315  00F5F0  6EDA               	movwf	fsr2h,c
 19316  00F5F2  0E00               	movlw	0
 19317  00F5F4  6EDF               	movwf	indf2,c
 19318                           
 19319                           ; BSR set to: 0
 19320  00F5F6  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 19321                           
 19322                           ; BSR set to: 0
 19323                           ;config_file.c: 86: for(value_ctr=0;value_ctr<11;++value_ctr)
 19324  00F5F8  0E00               	movlw	0
 19325  00F5FA  6F69               	movwf	__get_item@value_ctr& (0+255),b
 19326  00F5FC                     l15898:
 19327                           
 19328                           ; BSR set to: 0
 19329  00F5FC  0E0A               	movlw	10
 19330  00F5FE  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 19331  00F600  D001               	goto	l2943
 19332  00F602  D03B               	goto	u14820
 19333  00F604                     l2943:
 19334                           
 19335                           ; BSR set to: 0
 19336                           ;config_file.c: 87: {;config_file.c: 89: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 19337                           
 19338                           ; BSR set to: 0
 19339  00F604  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19340  00F606  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19341  00F60A  6B67               	clrf	(??__get_item+1)& (0+255),b
 19342  00F60C  2766               	addwf	??__get_item& (0+255),f,b
 19343  00F60E  0E00               	movlw	0
 19344  00F610  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19345  00F612  5166               	movf	??__get_item& (0+255),w,b
 19346  00F614  2564               	addwf	__get_item@buffer& (0+255),w,b
 19347  00F616  6ED9               	movwf	fsr2l,c
 19348  00F618  5167               	movf	(??__get_item+1)& (0+255),w,b
 19349  00F61A  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19350  00F61C  6EDA               	movwf	fsr2h,c
 19351  00F61E  0E0D               	movlw	13
 19352  00F620  18DE               	xorwf	postinc2,w,c
 19353  00F622  B4D8               	btfsc	status,2,c
 19354  00F624  D02A               	goto	u14820
 19355                           
 19356                           ; BSR set to: 0
 19357  00F626  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19358  00F628  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19359  00F62C  6B67               	clrf	(??__get_item+1)& (0+255),b
 19360  00F62E  2766               	addwf	??__get_item& (0+255),f,b
 19361  00F630  0E00               	movlw	0
 19362  00F632  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19363  00F634  5166               	movf	??__get_item& (0+255),w,b
 19364  00F636  2564               	addwf	__get_item@buffer& (0+255),w,b
 19365  00F638  6ED9               	movwf	fsr2l,c
 19366  00F63A  5167               	movf	(??__get_item+1)& (0+255),w,b
 19367  00F63C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19368  00F63E  6EDA               	movwf	fsr2h,c
 19369  00F640  0E0A               	movlw	10
 19370  00F642  18DE               	xorwf	postinc2,w,c
 19371  00F644  B4D8               	btfsc	status,2,c
 19372  00F646  D019               	goto	u14820
 19373                           
 19374                           ; BSR set to: 0
 19375                           ;config_file.c: 92: };config_file.c: 93: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 19376                           
 19377                           ; BSR set to: 0
 19378                           
 19379                           ; BSR set to: 0
 19380                           ;config_file.c: 90: {;config_file.c: 91: break;
 19381  00F648  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19382  00F64A  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19383  00F64E  6B67               	clrf	(??__get_item+1)& (0+255),b
 19384  00F650  2766               	addwf	??__get_item& (0+255),f,b
 19385  00F652  0E00               	movlw	0
 19386  00F654  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19387  00F656  5166               	movf	??__get_item& (0+255),w,b
 19388  00F658  2564               	addwf	__get_item@buffer& (0+255),w,b
 19389  00F65A  6ED9               	movwf	fsr2l,c
 19390  00F65C  5167               	movf	(??__get_item+1)& (0+255),w,b
 19391  00F65E  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19392  00F660  6EDA               	movwf	fsr2h,c
 19393  00F662  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19394  00F664  0D01               	mullw	1
 19395  00F666  50F3               	movf	prodl,w,c
 19396  00F668  2562               	addwf	__get_item@value_string& (0+255),w,b
 19397  00F66A  6EE1               	movwf	fsr1l,c
 19398  00F66C  50F4               	movf	prodh,w,c
 19399  00F66E  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 19400  00F670  6EE2               	movwf	fsr1h,c
 19401  00F672  CFDF FFE7          	movff	indf2,indf1
 19402                           
 19403                           ; BSR set to: 0
 19404  00F676  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 19405  00F678  D7C1               	goto	l15898
 19406  00F67A                     u14820:
 19407                           
 19408                           ; BSR set to: 0
 19409                           ;config_file.c: 94: };config_file.c: 95: value_string[value_ctr++] = 0;
 19410                           
 19411                           ; BSR set to: 0
 19412  00F67A  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19413  00F67C  0D01               	mullw	1
 19414  00F67E  50F3               	movf	prodl,w,c
 19415  00F680  2562               	addwf	__get_item@value_string& (0+255),w,b
 19416  00F682  6ED9               	movwf	fsr2l,c
 19417  00F684  50F4               	movf	prodh,w,c
 19418  00F686  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 19419  00F688  6EDA               	movwf	fsr2h,c
 19420  00F68A  0E00               	movlw	0
 19421  00F68C  6EDF               	movwf	indf2,c
 19422  00F68E                     
 19423                           ; BSR set to: 0
 19424                           ;config_file.c: 99: {;config_file.c: 100: ++value_ctr;
 19425                           
 19426                           ; BSR set to: 0
 19427                           
 19428                           ;config_file.c: 98: while((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_c
      +                          tr]=='\n') || (buffer[item_ctr+value_ctr]=='\t') || (buffer[item_ctr+value_ctr]==' '))
 19429                           
 19430                           ; BSR set to: 0
 19431  00F68E  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 19432                           
 19433                           ; BSR set to: 0
 19434                           
 19435                           ; BSR set to: 0
 19436  00F690  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19437  00F692  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19438  00F696  6B67               	clrf	(??__get_item+1)& (0+255),b
 19439  00F698  2766               	addwf	??__get_item& (0+255),f,b
 19440  00F69A  0E00               	movlw	0
 19441  00F69C  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19442  00F69E  5166               	movf	??__get_item& (0+255),w,b
 19443  00F6A0  2564               	addwf	__get_item@buffer& (0+255),w,b
 19444  00F6A2  6ED9               	movwf	fsr2l,c
 19445  00F6A4  5167               	movf	(??__get_item+1)& (0+255),w,b
 19446  00F6A6  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19447  00F6A8  6EDA               	movwf	fsr2h,c
 19448  00F6AA  0E0D               	movlw	13
 19449  00F6AC  18DE               	xorwf	postinc2,w,c
 19450  00F6AE  B4D8               	btfsc	status,2,c
 19451  00F6B0  D7EE               	goto	l15914
 19452                           
 19453                           ; BSR set to: 0
 19454  00F6B2  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19455  00F6B4  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19456  00F6B8  6B67               	clrf	(??__get_item+1)& (0+255),b
 19457  00F6BA  2766               	addwf	??__get_item& (0+255),f,b
 19458  00F6BC  0E00               	movlw	0
 19459  00F6BE  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19460  00F6C0  5166               	movf	??__get_item& (0+255),w,b
 19461  00F6C2  2564               	addwf	__get_item@buffer& (0+255),w,b
 19462  00F6C4  6ED9               	movwf	fsr2l,c
 19463  00F6C6  5167               	movf	(??__get_item+1)& (0+255),w,b
 19464  00F6C8  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19465  00F6CA  6EDA               	movwf	fsr2h,c
 19466  00F6CC  0E0A               	movlw	10
 19467  00F6CE  18DE               	xorwf	postinc2,w,c
 19468  00F6D0  B4D8               	btfsc	status,2,c
 19469  00F6D2  D7DD               	goto	l15914
 19470                           
 19471                           ; BSR set to: 0
 19472  00F6D4  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19473  00F6D6  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19474  00F6DA  6B67               	clrf	(??__get_item+1)& (0+255),b
 19475  00F6DC  2766               	addwf	??__get_item& (0+255),f,b
 19476  00F6DE  0E00               	movlw	0
 19477  00F6E0  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19478  00F6E2  5166               	movf	??__get_item& (0+255),w,b
 19479  00F6E4  2564               	addwf	__get_item@buffer& (0+255),w,b
 19480  00F6E6  6ED9               	movwf	fsr2l,c
 19481  00F6E8  5167               	movf	(??__get_item+1)& (0+255),w,b
 19482  00F6EA  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19483  00F6EC  6EDA               	movwf	fsr2h,c
 19484  00F6EE  0E09               	movlw	9
 19485  00F6F0  18DE               	xorwf	postinc2,w,c
 19486  00F6F2  B4D8               	btfsc	status,2,c
 19487  00F6F4  D7CC               	goto	l15914
 19488                           
 19489                           ; BSR set to: 0
 19490  00F6F6  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19491  00F6F8  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19492  00F6FC  6B67               	clrf	(??__get_item+1)& (0+255),b
 19493  00F6FE  2766               	addwf	??__get_item& (0+255),f,b
 19494  00F700  0E00               	movlw	0
 19495  00F702  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19496  00F704  5166               	movf	??__get_item& (0+255),w,b
 19497  00F706  2564               	addwf	__get_item@buffer& (0+255),w,b
 19498  00F708  6ED9               	movwf	fsr2l,c
 19499  00F70A  5167               	movf	(??__get_item+1)& (0+255),w,b
 19500  00F70C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19501  00F70E  6EDA               	movwf	fsr2h,c
 19502  00F710  0E20               	movlw	32
 19503  00F712  18DE               	xorwf	postinc2,w,c
 19504  00F714  B4D8               	btfsc	status,2,c
 19505  00F716  D7BB               	goto	l15914
 19506                           
 19507                           ; BSR set to: 0
 19508                           ;config_file.c: 101: };config_file.c: 104: return (item_ctr+value_ctr);
 19509                           
 19510                           ; BSR set to: 0
 19511  00F718  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19512  00F71A  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 19513  00F71C  0012               	return	
 19514  00F71E                     __end_of__get_item:
 19515                           	opt stack 0
 19516                           tblptru	equ	0xFF8
 19517                           tblptrh	equ	0xFF7
 19518                           tblptrl	equ	0xFF6
 19519                           tablat	equ	0xFF5
 19520                           prodh	equ	0xFF4
 19521                           prodl	equ	0xFF3
 19522                           postinc0	equ	0xFEE
 19523                           wreg	equ	0xFE8
 19524                           indf1	equ	0xFE7
 19525                           postinc1	equ	0xFE6
 19526                           postdec1	equ	0xFE5
 19527                           plusw1	equ	0xFE3
 19528                           fsr1h	equ	0xFE2
 19529                           fsr1l	equ	0xFE1
 19530                           indf2	equ	0xFDF
 19531                           postinc2	equ	0xFDE
 19532                           postdec2	equ	0xFDD
 19533                           plusw2	equ	0xFDB
 19534                           fsr2h	equ	0xFDA
 19535                           fsr2l	equ	0xFD9
 19536                           status	equ	0xFD8
 19537                           
 19538 ;; *************** function _adc_init *****************
 19539 ;; Defined at:
 19540 ;;		line 19 in file "adc.c"
 19541 ;; Parameters:    Size  Location     Type
 19542 ;;		None
 19543 ;; Auto vars:     Size  Location     Type
 19544 ;;		None
 19545 ;; Return value:  Size  Location     Type
 19546 ;;                  1    wreg      void 
 19547 ;; Registers used:
 19548 ;;		wreg, status,2
 19549 ;; Tracked objects:
 19550 ;;		On entry : 0/0
 19551 ;;		On exit  : 0/0
 19552 ;;		Unchanged: 0/0
 19553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19558 ;;Total ram usage:        0 bytes
 19559 ;; Hardware stack levels used:    1
 19560 ;; Hardware stack levels required when called:   10
 19561 ;; This function calls:
 19562 ;;		Nothing
 19563 ;; This function is called by:
 19564 ;;		_system_init
 19565 ;; This function uses a non-reentrant model
 19566 ;;
 19567                           
 19568                           	psect	text82
 19569  014532                     __ptext82:
 19570                           	opt stack 0
 19571  014532                     _adc_init:
 19572                           	opt stack 19
 19573                           
 19574                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 19575                           
 19576                           ; BSR set to: 0
 19577                           ;incstack = 0
 19578  014532  0E00               	movlw	0
 19579  014534  0101               	movlb	1	; () banked
 19580  014536  6F99               	movwf	(_os+40)& (0+255),b	;volatile
 19581  014538  0E00               	movlw	0
 19582  01453A  6F98               	movwf	(_os+39)& (0+255),b	;volatile
 19583                           
 19584                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 19585  01453C  0E00               	movlw	0
 19586  01453E  6F9B               	movwf	(_os+42)& (0+255),b	;volatile
 19587  014540  0E00               	movlw	0
 19588  014542  6F9A               	movwf	(_os+41)& (0+255),b	;volatile
 19589                           
 19590                           ;adc.c: 24: os.fan_on = 0;
 19591  014544  0E00               	movlw	0
 19592  014546  6F9F               	movwf	(_os+46)& (0+255),b	;volatile
 19593                           
 19594                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 19595  014548  0E00               	movlw	0
 19596  01454A  0102               	movlb	2	; () banked
 19597  01454C  6F1F               	movwf	_params& (0+255),b
 19598                           
 19599                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 19600  01454E  0E00               	movlw	0
 19601  014550  6F21               	movwf	(_params+2)& (0+255),b
 19602  014552  0E00               	movlw	0
 19603  014554  6F20               	movwf	(_params+1)& (0+255),b
 19604                           
 19605                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 19606  014556  0E00               	movlw	0
 19607  014558  6F24               	movwf	(_params+5)& (0+255),b
 19608                           
 19609                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 19610  01455A  0E00               	movlw	0
 19611  01455C  6F23               	movwf	(_params+4)& (0+255),b
 19612  01455E  0E00               	movlw	0
 19613  014560  6F22               	movwf	(_params+3)& (0+255),b
 19614                           
 19615                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 19616  014562  0E00               	movlw	0
 19617  014564  6F25               	movwf	(_params+6)& (0+255),b
 19618                           
 19619                           ; BSR set to: 2
 19620                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 19621  014566  9EC2               	bcf	4034,7,c	;volatile
 19622                           
 19623                           ; BSR set to: 2
 19624                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 19625  014568  9CC2               	bcf	4034,6,c	;volatile
 19626                           
 19627                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 19628  01456A  50C2               	movf	4034,w,c	;volatile
 19629  01456C  0BC3               	andlw	-61
 19630  01456E  0924               	iorlw	36
 19631  014570  6EC2               	movwf	4034,c	;volatile
 19632                           
 19633                           ; BSR set to: 2
 19634                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 19635  014572  8EC1               	bsf	4033,7,c	;volatile
 19636                           
 19637                           ; BSR set to: 2
 19638                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 19639  014574  9CC1               	bcf	4033,6,c	;volatile
 19640                           
 19641                           ; BSR set to: 2
 19642                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 19643  014576  86C1               	bsf	4033,3,c	;volatile
 19644  014578  88C1               	bsf	4033,4,c	;volatile
 19645  01457A  8AC1               	bsf	4033,5,c	;volatile
 19646                           
 19647                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 19648  01457C  50C1               	movf	4033,w,c	;volatile
 19649  01457E  0BF8               	andlw	-8
 19650  014580  0906               	iorlw	6
 19651  014582  6EC1               	movwf	4033,c	;volatile
 19652                           
 19653                           ; BSR set to: 2
 19654                           ;adc.c: 40: ADCON0bits.ADON = 1;
 19655  014584  80C2               	bsf	4034,0,c	;volatile
 19656                           
 19657                           ; BSR set to: 2
 19658                           ;adc.c: 41: ADCON0bits.GO = 1;
 19659  014586  82C2               	bsf	4034,1,c	;volatile
 19660                           
 19661                           ; BSR set to: 2
 19662  014588  0012               	return		;funcret
 19663  01458A                     __end_of_adc_init:
 19664                           	opt stack 0
 19665                           tblptru	equ	0xFF8
 19666                           tblptrh	equ	0xFF7
 19667                           tblptrl	equ	0xFF6
 19668                           tablat	equ	0xFF5
 19669                           prodh	equ	0xFF4
 19670                           prodl	equ	0xFF3
 19671                           postinc0	equ	0xFEE
 19672                           wreg	equ	0xFE8
 19673                           indf1	equ	0xFE7
 19674                           postinc1	equ	0xFE6
 19675                           postdec1	equ	0xFE5
 19676                           plusw1	equ	0xFE3
 19677                           fsr1h	equ	0xFE2
 19678                           fsr1l	equ	0xFE1
 19679                           indf2	equ	0xFDF
 19680                           postinc2	equ	0xFDE
 19681                           postdec2	equ	0xFDD
 19682                           plusw2	equ	0xFDB
 19683                           fsr2h	equ	0xFDA
 19684                           fsr2l	equ	0xFD9
 19685                           status	equ	0xFD8
 19686                           
 19687 ;; *************** function __system_timer0_init *****************
 19688 ;; Defined at:
 19689 ;;		line 125 in file "os.c"
 19690 ;; Parameters:    Size  Location     Type
 19691 ;;		None
 19692 ;; Auto vars:     Size  Location     Type
 19693 ;;		None
 19694 ;; Return value:  Size  Location     Type
 19695 ;;                  1    wreg      void 
 19696 ;; Registers used:
 19697 ;;		wreg, status,2
 19698 ;; Tracked objects:
 19699 ;;		On entry : 0/0
 19700 ;;		On exit  : 0/0
 19701 ;;		Unchanged: 0/0
 19702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19707 ;;Total ram usage:        0 bytes
 19708 ;; Hardware stack levels used:    1
 19709 ;; Hardware stack levels required when called:   10
 19710 ;; This function calls:
 19711 ;;		Nothing
 19712 ;; This function is called by:
 19713 ;;		_system_init
 19714 ;; This function uses a non-reentrant model
 19715 ;;
 19716                           
 19717                           	psect	text83
 19718  01521C                     __ptext83:
 19719                           	opt stack 0
 19720  01521C                     __system_timer0_init:
 19721                           	opt stack 19
 19722                           
 19723                           ;os.c: 130: T0CONbits.T0CS = 0;
 19724                           
 19725                           ; BSR set to: 2
 19726                           ;incstack = 0
 19727  01521C  9AD5               	bcf	4053,5,c	;volatile
 19728                           
 19729                           ;os.c: 132: T0CONbits.T08BIT = 0;
 19730  01521E  9CD5               	bcf	4053,6,c	;volatile
 19731                           
 19732                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 19733  015220  94D5               	bcf	4053,2,c	;volatile
 19734                           
 19735                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 19736  015222  82D5               	bsf	4053,1,c	;volatile
 19737                           
 19738                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 19739  015224  90D5               	bcf	4053,0,c	;volatile
 19740                           
 19741                           ;os.c: 138: T0CONbits.PSA = 0;
 19742  015226  96D5               	bcf	4053,3,c	;volatile
 19743                           
 19744                           ;os.c: 140: TMR0H = 0xFA;
 19745  015228  0EFA               	movlw	250
 19746  01522A  6ED7               	movwf	4055,c	;volatile
 19747                           
 19748                           ;os.c: 141: TMR0L = 0x24;
 19749  01522C  0E24               	movlw	36
 19750  01522E  6ED6               	movwf	4054,c	;volatile
 19751                           
 19752                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 19753  015230  8ED5               	bsf	4053,7,c	;volatile
 19754                           
 19755                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 19756  015232  94F2               	bcf	intcon,2,c	;volatile
 19757                           
 19758                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 19759  015234  8AF2               	bsf	intcon,5,c	;volatile
 19760                           
 19761                           ;os.c: 148: INTCONbits.GIE = 1;
 19762  015236  8EF2               	bsf	intcon,7,c	;volatile
 19763                           
 19764                           ;os.c: 151: os.subTimeSlot = 0;
 19765  015238  0E00               	movlw	0
 19766  01523A  0101               	movlb	1	; () banked
 19767  01523C  6F71               	movwf	_os& (0+255),b	;volatile
 19768                           
 19769                           ;os.c: 152: os.timeSlot = 0;
 19770  01523E  0E00               	movlw	0
 19771  015240  6F72               	movwf	(_os+1)& (0+255),b	;volatile
 19772                           
 19773                           ;os.c: 153: os.done = 0;
 19774  015242  0E00               	movlw	0
 19775  015244  6F73               	movwf	(_os+2)& (0+255),b	;volatile
 19776                           
 19777                           ; BSR set to: 1
 19778  015246  0012               	return		;funcret
 19779  015248                     __end_of__system_timer0_init:
 19780                           	opt stack 0
 19781                           tblptru	equ	0xFF8
 19782                           tblptrh	equ	0xFF7
 19783                           tblptrl	equ	0xFF6
 19784                           tablat	equ	0xFF5
 19785                           prodh	equ	0xFF4
 19786                           prodl	equ	0xFF3
 19787                           intcon	equ	0xFF2
 19788                           postinc0	equ	0xFEE
 19789                           wreg	equ	0xFE8
 19790                           indf1	equ	0xFE7
 19791                           postinc1	equ	0xFE6
 19792                           postdec1	equ	0xFE5
 19793                           plusw1	equ	0xFE3
 19794                           fsr1h	equ	0xFE2
 19795                           fsr1l	equ	0xFE1
 19796                           indf2	equ	0xFDF
 19797                           postinc2	equ	0xFDE
 19798                           postdec2	equ	0xFDD
 19799                           plusw2	equ	0xFDB
 19800                           fsr2h	equ	0xFDA
 19801                           fsr2l	equ	0xFD9
 19802                           status	equ	0xFD8
 19803                           
 19804 ;; *************** function __system_pin_setup *****************
 19805 ;; Defined at:
 19806 ;;		line 59 in file "os.c"
 19807 ;; Parameters:    Size  Location     Type
 19808 ;;		None
 19809 ;; Auto vars:     Size  Location     Type
 19810 ;;		None
 19811 ;; Return value:  Size  Location     Type
 19812 ;;                  1    wreg      void 
 19813 ;; Registers used:
 19814 ;;		wreg, status,2
 19815 ;; Tracked objects:
 19816 ;;		On entry : 0/0
 19817 ;;		On exit  : 0/0
 19818 ;;		Unchanged: 0/0
 19819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19824 ;;Total ram usage:        0 bytes
 19825 ;; Hardware stack levels used:    1
 19826 ;; Hardware stack levels required when called:   10
 19827 ;; This function calls:
 19828 ;;		Nothing
 19829 ;; This function is called by:
 19830 ;;		_system_init
 19831 ;; This function uses a non-reentrant model
 19832 ;;
 19833                           
 19834                           	psect	text84
 19835  013E7C                     __ptext84:
 19836                           	opt stack 0
 19837  013E7C                     __system_pin_setup:
 19838                           	opt stack 19
 19839                           
 19840                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 19841                           
 19842                           ; BSR set to: 1
 19843                           ;incstack = 0
 19844  013E7C  8A95               	bsf	3989,5,c	;volatile
 19845                           
 19846                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 19847  013E7E  9895               	bcf	3989,4,c	;volatile
 19848                           
 19849                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 19850  013E80  9C95               	bcf	3989,6,c	;volatile
 19851                           
 19852                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 19853  013E82  9E95               	bcf	3989,7,c	;volatile
 19854                           
 19855                           ;os.c: 66: LATDbits.LD7 = 1;
 19856  013E84  8E8C               	bsf	3980,7,c	;volatile
 19857                           
 19858                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 19859  013E86  8693               	bsf	3987,3,c	;volatile
 19860                           
 19861                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 19862  013E88  010F               	movlb	15	; () banked
 19863  013E8A  9349               	bcf	73,1,b	;volatile
 19864                           
 19865                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 19866  013E8C  9E94               	bcf	3988,7,c	;volatile
 19867                           
 19868                           ;os.c: 72: LATCbits.LC7 = 0;
 19869  013E8E  9E8B               	bcf	3979,7,c	;volatile
 19870                           
 19871                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 19872  013E90  9C94               	bcf	3988,6,c	;volatile
 19873                           
 19874                           ;os.c: 75: LATCbits.LC6 = 0;
 19875  013E92  9C8B               	bcf	3979,6,c	;volatile
 19876                           
 19877                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 19878  013E94  9692               	bcf	3986,3,c	;volatile
 19879                           
 19880                           ;os.c: 78: LATAbits.LA3 = 0;
 19881  013E96  9689               	bcf	3977,3,c	;volatile
 19882                           
 19883                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 19884  013E98  9294               	bcf	3988,1,c	;volatile
 19885                           
 19886                           ;os.c: 81: LATCbits.LC1 = 0;
 19887  013E9A  928B               	bcf	3979,1,c	;volatile
 19888                           
 19889                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 19890  013E9C  8A93               	bsf	3987,5,c	;volatile
 19891                           
 19892                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 19893  013E9E  8893               	bsf	3987,4,c	;volatile
 19894                           
 19895                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 19896  013EA0  9093               	bcf	3987,0,c	;volatile
 19897                           
 19898                           ;os.c: 90: LATBbits.LB0 = 1;
 19899  013EA2  808A               	bsf	3978,0,c	;volatile
 19900                           
 19901                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 19902  013EA4  9493               	bcf	3987,2,c	;volatile
 19903                           
 19904                           ;os.c: 93: LATBbits.LB2 = 0;
 19905  013EA6  948A               	bcf	3978,2,c	;volatile
 19906                           
 19907                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 19908  013EA8  9293               	bcf	3987,1,c	;volatile
 19909                           
 19910                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 19911  013EAA  8549               	bsf	73,2,b	;volatile
 19912                           
 19913                           ;os.c: 97: LATBbits.LB1 = 0;
 19914  013EAC  928A               	bcf	3978,1,c	;volatile
 19915                           
 19916                           ; BSR set to: 15
 19917                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 19918  013EAE  0E55               	movlw	85
 19919  013EB0  6EA7               	movwf	4007,c	;volsfr
 19920  013EB2  0EAA               	movlw	170
 19921  013EB4  6EA7               	movwf	4007,c	;volsfr
 19922                           
 19923                           ; BSR set to: 15
 19924  013EB6  010E               	movlb	14	; () banked
 19925  013EB8  91BF               	bcf	191,0,b	;volatile
 19926                           
 19927                           ;os.c: 99: RPOR4 = 14;
 19928  013EBA  0E0E               	movlw	14
 19929  013EBC  6FC4               	movwf	196,b	;volatile
 19930                           
 19931                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 19932  013EBE  0E55               	movlw	85
 19933  013EC0  6EA7               	movwf	4007,c	;volsfr
 19934  013EC2  0EAA               	movlw	170
 19935  013EC4  6EA7               	movwf	4007,c	;volsfr
 19936                           
 19937                           ; BSR set to: 14
 19938  013EC6  81BF               	bsf	191,0,b	;volatile
 19939                           
 19940                           ; BSR set to: 14
 19941                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 19942  013EC8  8495               	bsf	3989,2,c	;volatile
 19943                           
 19944                           ; BSR set to: 14
 19945                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 19946  013ECA  8496               	bsf	3990,2,c	;volatile
 19947                           
 19948                           ; BSR set to: 14
 19949                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 19950  013ECC  010F               	movlb	15	; () banked
 19951  013ECE  8F48               	bsf	72,7,b	;volatile
 19952                           
 19953                           ; BSR set to: 15
 19954                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 19955  013ED0  8096               	bsf	3990,0,c	;volatile
 19956                           
 19957                           ; BSR set to: 15
 19958                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 19959  013ED2  8B48               	bsf	72,5,b	;volatile
 19960                           
 19961                           ; BSR set to: 15
 19962                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 19963  013ED4  8296               	bsf	3990,1,c	;volatile
 19964                           
 19965                           ; BSR set to: 15
 19966                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 19967  013ED6  8D48               	bsf	72,6,b	;volatile
 19968                           
 19969                           ; BSR set to: 15
 19970                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 19971  013ED8  8092               	bsf	3986,0,c	;volatile
 19972                           
 19973                           ; BSR set to: 15
 19974                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 19975  013EDA  8148               	bsf	72,0,b	;volatile
 19976                           
 19977                           ; BSR set to: 15
 19978                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 19979  013EDC  8492               	bsf	3986,2,c	;volatile
 19980                           
 19981                           ; BSR set to: 15
 19982                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 19983  013EDE  8548               	bsf	72,2,b	;volatile
 19984                           
 19985                           ; BSR set to: 15
 19986                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 19987  013EE0  8292               	bsf	3986,1,c	;volatile
 19988                           
 19989                           ; BSR set to: 15
 19990                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 19991  013EE2  8348               	bsf	72,1,b	;volatile
 19992                           
 19993                           ; BSR set to: 15
 19994  013EE4  0012               	return		;funcret
 19995  013EE6                     __end_of__system_pin_setup:
 19996                           	opt stack 0
 19997                           tblptru	equ	0xFF8
 19998                           tblptrh	equ	0xFF7
 19999                           tblptrl	equ	0xFF6
 20000                           tablat	equ	0xFF5
 20001                           prodh	equ	0xFF4
 20002                           prodl	equ	0xFF3
 20003                           intcon	equ	0xFF2
 20004                           postinc0	equ	0xFEE
 20005                           wreg	equ	0xFE8
 20006                           indf1	equ	0xFE7
 20007                           postinc1	equ	0xFE6
 20008                           postdec1	equ	0xFE5
 20009                           plusw1	equ	0xFE3
 20010                           fsr1h	equ	0xFE2
 20011                           fsr1l	equ	0xFE1
 20012                           indf2	equ	0xFDF
 20013                           postinc2	equ	0xFDE
 20014                           postdec2	equ	0xFDD
 20015                           plusw2	equ	0xFDB
 20016                           fsr2h	equ	0xFDA
 20017                           fsr2l	equ	0xFD9
 20018                           status	equ	0xFD8
 20019                           
 20020 ;; *************** function __backlight_init *****************
 20021 ;; Defined at:
 20022 ;;		line 158 in file "os.c"
 20023 ;; Parameters:    Size  Location     Type
 20024 ;;		None
 20025 ;; Auto vars:     Size  Location     Type
 20026 ;;		None
 20027 ;; Return value:  Size  Location     Type
 20028 ;;                  1    wreg      void 
 20029 ;; Registers used:
 20030 ;;		None
 20031 ;; Tracked objects:
 20032 ;;		On entry : 0/0
 20033 ;;		On exit  : 0/0
 20034 ;;		Unchanged: 0/0
 20035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20040 ;;Total ram usage:        0 bytes
 20041 ;; Hardware stack levels used:    1
 20042 ;; Hardware stack levels required when called:   10
 20043 ;; This function calls:
 20044 ;;		Nothing
 20045 ;; This function is called by:
 20046 ;;		_system_init
 20047 ;; This function uses a non-reentrant model
 20048 ;;
 20049                           
 20050                           	psect	text85
 20051  0156DA                     __ptext85:
 20052                           	opt stack 0
 20053  0156DA                     __backlight_init:
 20054                           	opt stack 19
 20055                           
 20056                           ;os.c: 160: LATCbits.LC1 = 1;
 20057                           
 20058                           ; BSR set to: 15
 20059                           ;incstack = 0
 20060  0156DA  828B               	bsf	3979,1,c	;volatile
 20061  0156DC  0012               	return		;funcret
 20062  0156DE                     __end_of__backlight_init:
 20063                           	opt stack 0
 20064                           tblptru	equ	0xFF8
 20065                           tblptrh	equ	0xFF7
 20066                           tblptrl	equ	0xFF6
 20067                           tablat	equ	0xFF5
 20068                           prodh	equ	0xFF4
 20069                           prodl	equ	0xFF3
 20070                           intcon	equ	0xFF2
 20071                           postinc0	equ	0xFEE
 20072                           wreg	equ	0xFE8
 20073                           indf1	equ	0xFE7
 20074                           postinc1	equ	0xFE6
 20075                           postdec1	equ	0xFE5
 20076                           plusw1	equ	0xFE3
 20077                           fsr1h	equ	0xFE2
 20078                           fsr1l	equ	0xFE1
 20079                           indf2	equ	0xFDF
 20080                           postinc2	equ	0xFDE
 20081                           postdec2	equ	0xFDD
 20082                           plusw2	equ	0xFDB
 20083                           fsr2h	equ	0xFDA
 20084                           fsr2l	equ	0xFD9
 20085                           status	equ	0xFD8
 20086                           
 20087 ;; *************** function _motor_process_cue *****************
 20088 ;; Defined at:
 20089 ;;		line 160 in file "motor.c"
 20090 ;; Parameters:    Size  Location     Type
 20091 ;;		None
 20092 ;; Auto vars:     Size  Location     Type
 20093 ;;		None
 20094 ;; Return value:  Size  Location     Type
 20095 ;;                  1    wreg      void 
 20096 ;; Registers used:
 20097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20098 ;; Tracked objects:
 20099 ;;		On entry : 0/0
 20100 ;;		On exit  : 0/0
 20101 ;;		Unchanged: 0/0
 20102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20107 ;;Total ram usage:        0 bytes
 20108 ;; Hardware stack levels used:    1
 20109 ;; Hardware stack levels required when called:   13
 20110 ;; This function calls:
 20111 ;;		__motor_run
 20112 ;;		_motor_items_in_cue
 20113 ;; This function is called by:
 20114 ;;		_main
 20115 ;; This function uses a non-reentrant model
 20116 ;;
 20117                           
 20118                           	psect	text86
 20119  0132EE                     __ptext86:
 20120                           	opt stack 0
 20121  0132EE                     _motor_process_cue:
 20122                           	opt stack 17
 20123                           
 20124                           ;motor.c: 162: if(motor_items_in_cue()==0)
 20125                           
 20126                           ;incstack = 0
 20127  0132EE  EC32  F0AB         	call	_motor_items_in_cue	;wreg free
 20128  0132F2  0900               	iorlw	0
 20129  0132F4  B4D8               	btfsc	status,2,c
 20130  0132F6  0012               	return	
 20131                           
 20132                           ;motor.c: 167: else if(os.busy)
 20133                           
 20134                           ;motor.c: 166: }
 20135                           
 20136                           ;motor.c: 163: {;motor.c: 165: return;
 20137  0132F8  0101               	movlb	1	; () banked
 20138  0132FA  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 20139  0132FC  A4D8               	btfss	status,2,c
 20140  0132FE  0012               	return	
 20141                           
 20142                           ; BSR set to: 1
 20143                           ;motor.c: 172: else;motor.c: 173: {;motor.c: 175: _motor_run(;motor.c: 176: motor_comman
      +                          d_cue[motor_cue_read_index].direction,;motor.c: 177: motor_command_cue[motor_cue_read_in
      +                          dex].distance,;motor.c: 178: motor_command_cue[motor_cue_read_index].speed,;motor.c: 179
      +                          : motor_command_cue[motor_cue_read_index].type;motor.c: 180: );
 20144                           
 20145                           ; BSR set to: 1
 20146                           
 20147                           ; BSR set to: 1
 20148                           ;motor.c: 171: }
 20149                           
 20150                           ; BSR set to: 1
 20151                           ;motor.c: 168: {;motor.c: 170: return;
 20152  013300  5158               	movf	_motor_cue_read_index& (0+255),w,b
 20153  013302  0D08               	mullw	8
 20154  013304  0E01               	movlw	1
 20155  013306  26F3               	addwf	prodl,f,c
 20156  013308  0E00               	movlw	0
 20157  01330A  22F4               	addwfc	prodh,f,c
 20158  01330C  0E00               	movlw	low _motor_command_cue
 20159  01330E  24F3               	addwf	prodl,w,c
 20160  013310  6ED9               	movwf	fsr2l,c
 20161  013312  0E03               	movlw	high _motor_command_cue
 20162  013314  20F4               	addwfc	prodh,w,c
 20163  013316  6EDA               	movwf	fsr2h,c
 20164  013318  CFDE F08F          	movff	postinc2,__motor_run@distance_in_steps
 20165  01331C  CFDE F090          	movff	postinc2,__motor_run@distance_in_steps+1
 20166  013320  CFDE F091          	movff	postinc2,__motor_run@distance_in_steps+2
 20167  013324  CFDE F092          	movff	postinc2,__motor_run@distance_in_steps+3
 20168  013328  5158               	movf	_motor_cue_read_index& (0+255),w,b
 20169  01332A  0D08               	mullw	8
 20170  01332C  0E05               	movlw	5
 20171  01332E  26F3               	addwf	prodl,f,c
 20172  013330  0E00               	movlw	0
 20173  013332  22F4               	addwfc	prodh,f,c
 20174  013334  0E00               	movlw	low _motor_command_cue
 20175  013336  24F3               	addwf	prodl,w,c
 20176  013338  6ED9               	movwf	fsr2l,c
 20177  01333A  0E03               	movlw	high _motor_command_cue
 20178  01333C  20F4               	addwfc	prodh,w,c
 20179  01333E  6EDA               	movwf	fsr2h,c
 20180  013340  CFDE F093          	movff	postinc2,__motor_run@speed
 20181  013344  CFDD F094          	movff	postdec2,__motor_run@speed+1
 20182  013348  5158               	movf	_motor_cue_read_index& (0+255),w,b
 20183  01334A  0D08               	mullw	8
 20184  01334C  0E07               	movlw	7
 20185  01334E  26F3               	addwf	prodl,f,c
 20186  013350  0E00               	movlw	0
 20187  013352  22F4               	addwfc	prodh,f,c
 20188  013354  0E00               	movlw	low _motor_command_cue
 20189  013356  24F3               	addwf	prodl,w,c
 20190  013358  6ED9               	movwf	fsr2l,c
 20191  01335A  0E03               	movlw	high _motor_command_cue
 20192  01335C  20F4               	addwfc	prodh,w,c
 20193  01335E  6EDA               	movwf	fsr2h,c
 20194  013360  50DF               	movf	indf2,w,c
 20195  013362  0100               	movlb	0	; () banked
 20196  013364  6F95               	movwf	__motor_run@type& (0+255),b
 20197  013366  0101               	movlb	1	; () banked
 20198  013368  5158               	movf	_motor_cue_read_index& (0+255),w,b
 20199  01336A  0D08               	mullw	8
 20200  01336C  0E00               	movlw	low _motor_command_cue
 20201  01336E  24F3               	addwf	prodl,w,c
 20202  013370  6ED9               	movwf	fsr2l,c
 20203  013372  0E03               	movlw	high _motor_command_cue
 20204  013374  20F4               	addwfc	prodh,w,c
 20205  013376  6EDA               	movwf	fsr2h,c
 20206  013378  50DF               	movf	indf2,w,c
 20207  01337A  ECAD  F062         	call	__motor_run
 20208                           
 20209                           ;motor.c: 182: ++motor_cue_read_index;
 20210  01337E  0101               	movlb	1	; () banked
 20211  013380  2B58               	incf	_motor_cue_read_index& (0+255),f,b
 20212                           
 20213                           ; BSR set to: 1
 20214  013382  0012               	return	
 20215  013384                     __end_of_motor_process_cue:
 20216                           	opt stack 0
 20217                           tblptru	equ	0xFF8
 20218                           tblptrh	equ	0xFF7
 20219                           tblptrl	equ	0xFF6
 20220                           tablat	equ	0xFF5
 20221                           prodh	equ	0xFF4
 20222                           prodl	equ	0xFF3
 20223                           intcon	equ	0xFF2
 20224                           postinc0	equ	0xFEE
 20225                           wreg	equ	0xFE8
 20226                           indf1	equ	0xFE7
 20227                           postinc1	equ	0xFE6
 20228                           postdec1	equ	0xFE5
 20229                           plusw1	equ	0xFE3
 20230                           fsr1h	equ	0xFE2
 20231                           fsr1l	equ	0xFE1
 20232                           indf2	equ	0xFDF
 20233                           postinc2	equ	0xFDE
 20234                           postdec2	equ	0xFDD
 20235                           plusw2	equ	0xFDB
 20236                           fsr2h	equ	0xFDA
 20237                           fsr2l	equ	0xFD9
 20238                           status	equ	0xFD8
 20239                           
 20240 ;; *************** function _encoder_statemachine *****************
 20241 ;; Defined at:
 20242 ;;		line 210 in file "encoder.c"
 20243 ;; Parameters:    Size  Location     Type
 20244 ;;		None
 20245 ;; Auto vars:     Size  Location     Type
 20246 ;;		None
 20247 ;; Return value:  Size  Location     Type
 20248 ;;                  1    wreg      void 
 20249 ;; Registers used:
 20250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20251 ;; Tracked objects:
 20252 ;;		On entry : 0/0
 20253 ;;		On exit  : 0/0
 20254 ;;		Unchanged: 0/0
 20255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20258 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20259 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20260 ;;Total ram usage:        4 bytes
 20261 ;; Hardware stack levels used:    1
 20262 ;; Hardware stack levels required when called:   16
 20263 ;; This function calls:
 20264 ;;		__divide_jump_size_decrement
 20265 ;;		__divide_jump_size_increment
 20266 ;;		__encoder_next_arc_step_size
 20267 ;;		__encoder_next_divide_step_size
 20268 ;;		__encoder_next_setup_stepsize
 20269 ;;		_motor_arc_move
 20270 ;;		_motor_change_speed
 20271 ;;		_motor_decrease_manual_speed
 20272 ;;		_motor_divide_jump
 20273 ;;		_motor_divide_jump_to_nearest
 20274 ;;		_motor_go_to_steps_position
 20275 ;;		_motor_increase_manual_speed
 20276 ;;		_motor_nonzero_steps_from_degrees
 20277 ;;		_motor_schedule_command
 20278 ;;		_motor_set_zero
 20279 ;;		_motor_stop
 20280 ;; This function is called by:
 20281 ;;		_main
 20282 ;; This function uses a non-reentrant model
 20283 ;;
 20284                           
 20285                           	psect	text87
 20286  00AF94                     __ptext87:
 20287                           	opt stack 0
 20288  00AF94                     _encoder_statemachine:
 20289                           	opt stack 14
 20290                           
 20291                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 20292                           
 20293                           ;incstack = 0
 20294  00AF94  0101               	movlb	1	; () banked
 20295  00AF96  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 20296  00AF98  A4D8               	btfss	status,2,c
 20297  00AF9A  EFD9  F05B         	goto	l2690
 20298                           
 20299                           ; BSR set to: 1
 20300  00AF9E  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 20301  00AFA0  A4D8               	btfss	status,2,c
 20302  00AFA2  EFD9  F05B         	goto	l2690
 20303                           
 20304                           ; BSR set to: 1
 20305  00AFA6  5175               	movf	(_os+4)& (0+255),w,b	;volatile
 20306  00AFA8  A4D8               	btfss	status,2,c
 20307  00AFAA  EFD9  F05B         	goto	l2690
 20308                           
 20309                           ; BSR set to: 1
 20310  00AFAE  5177               	movf	(_os+6)& (0+255),w,b	;volatile
 20311  00AFB0  B4D8               	btfsc	status,2,c
 20312  00AFB2  0012               	return	
 20313  00AFB4  D3FE               	goto	l2690
 20314  00AFB6                     
 20315                           ; BSR set to: 1
 20316                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 20317                           
 20318                           ; BSR set to: 1
 20319  00AFB6  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20320  00AFB8  B4D8               	btfsc	status,2,c
 20321  00AFBA  D003               	goto	u17070
 20322                           
 20323                           ; BSR set to: 1
 20324  00AFBC  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 20325  00AFBE  A4D8               	btfss	status,2,c
 20326  00AFC0  D002               	goto	l2694
 20327  00AFC2                     u17070:
 20328                           
 20329                           ; BSR set to: 1
 20330                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 20331                           
 20332                           ; BSR set to: 1
 20333  00AFC2  0E11               	movlw	17
 20334  00AFC4  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20335  00AFC6                     l2694:
 20336                           
 20337                           ; BSR set to: 1
 20338                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 20339                           
 20340                           ; BSR set to: 1
 20341  00AFC6  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20342  00AFCA  0100               	movlb	0	; () banked
 20343  00AFCC  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20344  00AFCE  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20345  00AFD0  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20346  00AFD2  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20347  00AFD6  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20348  00AFD8  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20349  00AFDA  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20350  00AFDC  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20351  00AFDE  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20352  00AFE0  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20353  00AFE2  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20354  00AFE4  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 20355  00AFE6  D008               	goto	l2697
 20356  00AFE8  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 20357  00AFEA  E103               	bnz	u17080
 20358  00AFEC  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 20359  00AFEE  A0D8               	btfss	status,0,c
 20360  00AFF0  D003               	goto	l2697
 20361  00AFF2                     u17080:
 20362                           
 20363                           ; BSR set to: 0
 20364                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 20365  00AFF2  0E02               	movlw	2
 20366  00AFF4  0101               	movlb	1	; () banked
 20367  00AFF6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20368  00AFF8                     l2697:
 20369                           
 20370                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 20371                           
 20372                           ; BSR set to: 1
 20373  00AFF8  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20374  00AFFC  0100               	movlb	0	; () banked
 20375  00AFFE  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20376  00B000  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20377  00B002  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20378  00B004  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20379  00B008  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20380  00B00A  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20381  00B00C  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20382  00B00E  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20383  00B010  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20384  00B012  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20385  00B014  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20386  00B016  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 20387  00B018  D3F1               	goto	l2725
 20388                           
 20389                           ; BSR set to: 0
 20390                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 20391  00B01A  0E05               	movlw	5
 20392  00B01C  D3B8               	goto	L22
 20393  00B01E                     
 20394                           ; BSR set to: 1
 20395                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 20396                           
 20397                           ; BSR set to: 1
 20398  00B01E  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20399  00B020  B4D8               	btfsc	status,2,c
 20400  00B022  D003               	goto	u17110
 20401                           
 20402                           ; BSR set to: 1
 20403  00B024  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 20404  00B026  A4D8               	btfss	status,2,c
 20405  00B028  D002               	goto	l2701
 20406  00B02A                     u17110:
 20407                           
 20408                           ; BSR set to: 1
 20409                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 20410                           
 20411                           ; BSR set to: 1
 20412  00B02A  0E31               	movlw	49
 20413  00B02C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20414  00B02E                     l2701:
 20415                           
 20416                           ; BSR set to: 1
 20417                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 20418                           
 20419                           ; BSR set to: 1
 20420  00B02E  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20421  00B032  0100               	movlb	0	; () banked
 20422  00B034  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20423  00B036  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20424  00B038  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20425  00B03A  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20426  00B03E  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20427  00B040  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20428  00B042  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20429  00B044  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20430  00B046  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20431  00B048  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20432  00B04A  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20433  00B04C  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 20434  00B04E  D008               	goto	l2704
 20435  00B050  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 20436  00B052  E103               	bnz	u17120
 20437  00B054  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 20438  00B056  A0D8               	btfss	status,0,c
 20439  00B058  D003               	goto	l2704
 20440  00B05A                     u17120:
 20441                           
 20442                           ; BSR set to: 0
 20443                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 20444  00B05A  0E03               	movlw	3
 20445  00B05C  0101               	movlb	1	; () banked
 20446  00B05E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20447  00B060                     l2704:
 20448                           
 20449                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 20450                           
 20451                           ; BSR set to: 1
 20452  00B060  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20453  00B064  0100               	movlb	0	; () banked
 20454  00B066  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20455  00B068  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20456  00B06A  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20457  00B06C  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20458  00B070  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20459  00B072  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20460  00B074  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20461  00B076  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20462  00B078  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20463  00B07A  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20464  00B07C  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20465  00B07E  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 20466  00B080  D3BD               	goto	l2725
 20467                           
 20468                           ; BSR set to: 0
 20469                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 20470  00B082  0E01               	movlw	1
 20471  00B084  D384               	goto	L22
 20472  00B086                     
 20473                           ; BSR set to: 1
 20474                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 20475                           
 20476                           ; BSR set to: 1
 20477  00B086  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20478  00B088  B4D8               	btfsc	status,2,c
 20479  00B08A  D003               	goto	u17150
 20480                           
 20481                           ; BSR set to: 1
 20482  00B08C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 20483  00B08E  A4D8               	btfss	status,2,c
 20484  00B090  D002               	goto	l2707
 20485  00B092                     u17150:
 20486                           
 20487                           ; BSR set to: 1
 20488                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 20489                           
 20490                           ; BSR set to: 1
 20491  00B092  0E51               	movlw	81
 20492  00B094  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20493  00B096                     l2707:
 20494                           
 20495                           ; BSR set to: 1
 20496                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 20497                           
 20498                           ; BSR set to: 1
 20499  00B096  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20500  00B09A  0100               	movlb	0	; () banked
 20501  00B09C  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20502  00B09E  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20503  00B0A0  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20504  00B0A2  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20505  00B0A6  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20506  00B0A8  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20507  00B0AA  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20508  00B0AC  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20509  00B0AE  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20510  00B0B0  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20511  00B0B2  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20512  00B0B4  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 20513  00B0B6  D008               	goto	l2710
 20514  00B0B8  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 20515  00B0BA  E103               	bnz	u17160
 20516  00B0BC  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 20517  00B0BE  A0D8               	btfss	status,0,c
 20518  00B0C0  D003               	goto	l2710
 20519  00B0C2                     u17160:
 20520                           
 20521                           ; BSR set to: 0
 20522                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 20523  00B0C2  0E04               	movlw	4
 20524  00B0C4  0101               	movlb	1	; () banked
 20525  00B0C6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20526  00B0C8                     l2710:
 20527                           
 20528                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 20529                           
 20530                           ; BSR set to: 1
 20531  00B0C8  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20532  00B0CC  0100               	movlb	0	; () banked
 20533  00B0CE  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20534  00B0D0  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20535  00B0D2  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20536  00B0D4  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20537  00B0D8  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20538  00B0DA  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20539  00B0DC  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20540  00B0DE  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20541  00B0E0  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20542  00B0E2  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20543  00B0E4  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20544  00B0E6  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 20545  00B0E8  D389               	goto	l2725
 20546                           
 20547                           ; BSR set to: 0
 20548                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 20549  00B0EA  0E02               	movlw	2
 20550  00B0EC  D350               	goto	L22
 20551  00B0EE                     
 20552                           ; BSR set to: 1
 20553                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 20554                           
 20555                           ; BSR set to: 1
 20556  00B0EE  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20557  00B0F0  B4D8               	btfsc	status,2,c
 20558  00B0F2  D003               	goto	u17190
 20559                           
 20560                           ; BSR set to: 1
 20561  00B0F4  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 20562  00B0F6  A4D8               	btfss	status,2,c
 20563  00B0F8  D002               	goto	l2713
 20564  00B0FA                     u17190:
 20565                           
 20566                           ; BSR set to: 1
 20567                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 20568                           
 20569                           ; BSR set to: 1
 20570  00B0FA  0E82               	movlw	130
 20571  00B0FC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20572  00B0FE                     l2713:
 20573                           
 20574                           ; BSR set to: 1
 20575                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 20576                           
 20577                           ; BSR set to: 1
 20578  00B0FE  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20579  00B102  0100               	movlb	0	; () banked
 20580  00B104  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20581  00B106  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20582  00B108  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20583  00B10A  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20584  00B10E  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20585  00B110  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20586  00B112  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20587  00B114  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20588  00B116  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20589  00B118  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20590  00B11A  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20591  00B11C  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 20592  00B11E  D008               	goto	l2716
 20593  00B120  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 20594  00B122  E103               	bnz	u17200
 20595  00B124  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 20596  00B126  A0D8               	btfss	status,0,c
 20597  00B128  D003               	goto	l2716
 20598  00B12A                     u17200:
 20599                           
 20600                           ; BSR set to: 0
 20601                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 20602  00B12A  0E05               	movlw	5
 20603  00B12C  0101               	movlb	1	; () banked
 20604  00B12E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20605  00B130                     l2716:
 20606                           
 20607                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 20608                           
 20609                           ; BSR set to: 1
 20610  00B130  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20611  00B134  0100               	movlb	0	; () banked
 20612  00B136  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20613  00B138  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20614  00B13A  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20615  00B13C  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20616  00B140  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20617  00B142  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20618  00B144  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20619  00B146  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20620  00B148  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20621  00B14A  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20622  00B14C  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20623  00B14E  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 20624  00B150  D355               	goto	l2725
 20625                           
 20626                           ; BSR set to: 0
 20627                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 20628  00B152  0E03               	movlw	3
 20629  00B154  D31C               	goto	L22
 20630  00B156                     
 20631                           ; BSR set to: 1
 20632                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 20633                           
 20634                           ; BSR set to: 1
 20635  00B156  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20636  00B158  B4D8               	btfsc	status,2,c
 20637  00B15A  D003               	goto	u17230
 20638                           
 20639                           ; BSR set to: 1
 20640  00B15C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 20641  00B15E  A4D8               	btfss	status,2,c
 20642  00B160  D002               	goto	l2719
 20643  00B162                     u17230:
 20644                           
 20645                           ; BSR set to: 1
 20646                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 20647                           
 20648                           ; BSR set to: 1
 20649  00B162  0E71               	movlw	113
 20650  00B164  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20651  00B166                     l2719:
 20652                           
 20653                           ; BSR set to: 1
 20654                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 20655                           
 20656                           ; BSR set to: 1
 20657  00B166  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20658  00B16A  0100               	movlb	0	; () banked
 20659  00B16C  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20660  00B16E  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20661  00B170  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20662  00B172  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20663  00B176  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20664  00B178  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20665  00B17A  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20666  00B17C  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20667  00B17E  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20668  00B180  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20669  00B182  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20670  00B184  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 20671  00B186  D008               	goto	l2722
 20672  00B188  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 20673  00B18A  E103               	bnz	u17240
 20674  00B18C  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 20675  00B18E  A0D8               	btfss	status,0,c
 20676  00B190  D003               	goto	l2722
 20677  00B192                     u17240:
 20678                           
 20679                           ; BSR set to: 0
 20680                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 20681  00B192  0E01               	movlw	1
 20682  00B194  0101               	movlb	1	; () banked
 20683  00B196  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20684  00B198                     l2722:
 20685                           
 20686                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 20687                           
 20688                           ; BSR set to: 1
 20689  00B198  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20690  00B19C  0100               	movlb	0	; () banked
 20691  00B19E  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20692  00B1A0  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20693  00B1A2  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20694  00B1A4  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20695  00B1A8  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20696  00B1AA  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20697  00B1AC  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20698  00B1AE  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20699  00B1B0  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20700  00B1B2  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20701  00B1B4  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20702  00B1B6  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 20703  00B1B8  D321               	goto	l2725
 20704                           
 20705                           ; BSR set to: 0
 20706                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 20707  00B1BA  0E04               	movlw	4
 20708  00B1BC  D2E8               	goto	L22
 20709  00B1BE                     
 20710                           ; BSR set to: 1
 20711  00B1BE  0101               	movlb	1	; () banked
 20712  00B1C0  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 20713                           
 20714                           ; Switch size 1, requested type "space"
 20715                           ; Number of cases is 6, Range of values is 1 to 240
 20716                           ; switch strategies available:
 20717                           ; Name         Instructions Cycles
 20718                           ; simple_byte           19    10 (average)
 20719                           ;	Chosen strategy is simple_byte
 20720  00B1C2  0A01               	xorlw	1	; case 1
 20721  00B1C4  B4D8               	btfsc	status,2,c
 20722  00B1C6  D6F7               	goto	l2693
 20723  00B1C8  0A03               	xorlw	3	; case 2
 20724  00B1CA  B4D8               	btfsc	status,2,c
 20725  00B1CC  D728               	goto	l2700
 20726  00B1CE  0A01               	xorlw	1	; case 3
 20727  00B1D0  B4D8               	btfsc	status,2,c
 20728  00B1D2  D759               	goto	l2706
 20729  00B1D4  0A07               	xorlw	7	; case 4
 20730  00B1D6  B4D8               	btfsc	status,2,c
 20731  00B1D8  D78A               	goto	l2712
 20732  00B1DA  0A01               	xorlw	1	; case 5
 20733  00B1DC  B4D8               	btfsc	status,2,c
 20734  00B1DE  D7BB               	goto	l2718
 20735  00B1E0  0AF5               	xorlw	245	; case 240
 20736                           
 20737                           ; BSR set to: 1
 20738                           ;encoder.c: 268: break;
 20739  00B1E2  D30C               	goto	l2725
 20740  00B1E4                     
 20741                           ; BSR set to: 1
 20742                           ;encoder.c: 274: if(os.button1==1)
 20743                           
 20744                           ; BSR set to: 1
 20745  00B1E4  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20746  00B1E6  A4D8               	btfss	status,2,c
 20747  00B1E8  D00E               	goto	l2729
 20748                           
 20749                           ; BSR set to: 1
 20750                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 20751  00B1EA  0E00               	movlw	0
 20752  00B1EC  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 20753  00B1EE  0E00               	movlw	0
 20754  00B1F0  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 20755  00B1F2  0E00               	movlw	0
 20756  00B1F4  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 20757  00B1F6  0E00               	movlw	0
 20758  00B1F8  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 20759                           
 20760                           ;encoder.c: 277: os.divide_position = 0;
 20761  00B1FA  0E00               	movlw	0
 20762  00B1FC  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 20763  00B1FE  0E00               	movlw	0
 20764  00B200  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 20765                           
 20766                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 20767  00B202  0E21               	movlw	33
 20768  00B204  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20769  00B206                     l2729:
 20770                           
 20771                           ; BSR set to: 1
 20772                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 20773                           
 20774                           ; BSR set to: 1
 20775  00B206  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 20776  00B208  0A80               	xorlw	128
 20777  00B20A  0F7F               	addlw	-129
 20778  00B20C  A0D8               	btfss	status,0,c
 20779  00B20E  D002               	goto	l2730
 20780                           
 20781                           ; BSR set to: 1
 20782                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 20783  00B210  0E12               	movlw	18
 20784  00B212  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20785  00B214                     l2730:
 20786                           
 20787                           ; BSR set to: 1
 20788                           ;encoder.c: 282: if(os.encoder1Count<0)
 20789                           
 20790                           ; BSR set to: 1
 20791  00B214  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 20792  00B216  D01B               	goto	l2732
 20793                           
 20794                           ; BSR set to: 1
 20795                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 20796  00B218  0E12               	movlw	18
 20797  00B21A  D00F               	goto	L10
 20798  00B21C                     
 20799                           ; BSR set to: 1
 20800                           ;encoder.c: 286: if(os.button1==1)
 20801                           
 20802                           ; BSR set to: 1
 20803  00B21C  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20804  00B21E  A4D8               	btfss	status,2,c
 20805  00B220  D002               	goto	l2734
 20806                           
 20807                           ; BSR set to: 1
 20808                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 20809  00B222  0E01               	movlw	1
 20810  00B224  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20811  00B226                     l2734:
 20812                           
 20813                           ; BSR set to: 1
 20814                           ;encoder.c: 288: if(os.encoder1Count>0)
 20815                           
 20816                           ; BSR set to: 1
 20817  00B226  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 20818  00B228  0A80               	xorlw	128
 20819  00B22A  0F7F               	addlw	-129
 20820  00B22C  A0D8               	btfss	status,0,c
 20821  00B22E  D002               	goto	l2735
 20822                           
 20823                           ; BSR set to: 1
 20824                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 20825  00B230  0E11               	movlw	17
 20826  00B232  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20827  00B234                     l2735:
 20828                           
 20829                           ; BSR set to: 1
 20830                           ;encoder.c: 290: if(os.encoder1Count<0)
 20831                           
 20832                           ; BSR set to: 1
 20833  00B234  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 20834  00B236  D00B               	goto	l2732
 20835                           
 20836                           ; BSR set to: 1
 20837                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 20838  00B238  0E11               	movlw	17
 20839  00B23A                     L10:
 20840  00B23A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20841                           
 20842                           ; BSR set to: 1
 20843                           ;encoder.c: 293: }
 20844                           
 20845                           ; BSR set to: 1
 20846                           ;encoder.c: 292: break;
 20847  00B23C  D008               	goto	l2732
 20848  00B23E                     
 20849                           ; BSR set to: 1
 20850  00B23E  0101               	movlb	1	; () banked
 20851  00B240  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 20852                           
 20853                           ; Switch size 1, requested type "space"
 20854                           ; Number of cases is 2, Range of values is 17 to 18
 20855                           ; switch strategies available:
 20856                           ; Name         Instructions Cycles
 20857                           ; simple_byte            7     4 (average)
 20858                           ;	Chosen strategy is simple_byte
 20859  00B242  0A11               	xorlw	17	; case 17
 20860  00B244  B4D8               	btfsc	status,2,c
 20861  00B246  D7CE               	goto	l2728
 20862  00B248  0A03               	xorlw	3	; case 18
 20863  00B24A  B4D8               	btfsc	status,2,c
 20864  00B24C  D7E7               	goto	l2733
 20865  00B24E                     l2732:
 20866                           
 20867                           ; BSR set to: 1
 20868                           ;encoder.c: 294: if(os.button2==1)
 20869                           
 20870                           ; BSR set to: 1
 20871  00B24E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 20872  00B250  A4D8               	btfss	status,2,c
 20873  00B252  D00A               	goto	l2737
 20874                           
 20875                           ; BSR set to: 1
 20876                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 20877  00B254  C181  F060         	movff	_os+16,__encoder_next_setup_stepsize@old_stepsize	;volatile
 20878  00B258  C182  F061         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 20879  00B25C  ECF4  F09D         	call	__encoder_next_setup_stepsize	;wreg free
 20880  00B260  C060  F181         	movff	?__encoder_next_setup_stepsize,_os+16	;volatile
 20881  00B264  C061  F182         	movff	?__encoder_next_setup_stepsize+1,_os+17	;volatile
 20882  00B268                     l2737:
 20883                           
 20884                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 20885  00B268  0101               	movlb	1	; () banked
 20886  00B26A  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 20887  00B26C  0A80               	xorlw	128
 20888  00B26E  0F7F               	addlw	-129
 20889  00B270  A0D8               	btfss	status,0,c
 20890  00B272  D01B               	goto	l2739
 20891                           
 20892                           ; BSR set to: 1
 20893                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 20894  00B274  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 20895  00B276  A4D8               	btfss	status,2,c
 20896  00B278  D018               	goto	l2739
 20897                           
 20898                           ; BSR set to: 1
 20899                           ;encoder.c: 302: motor_schedule_command(MOTOR_DIRECTION_CW, motor_nonzero_steps_from_deg
      +                          rees(os.setup_step_size), 0, MOTOR_MOVE_TYPE_NORMAL);
 20900  00B27A  C181  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 20901  00B27E  C182  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 20902  00B282  EC85  F0A5         	call	_motor_nonzero_steps_from_degrees	;wreg free
 20903  00B286  C08F  F0A1         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 20904  00B28A  C090  F0A2         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 20905  00B28E  C091  F0A3         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 20906  00B292  C092  F0A4         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 20907  00B296  0E00               	movlw	0
 20908  00B298  0100               	movlb	0	; () banked
 20909  00B29A  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 20910  00B29C  0E00               	movlw	0
 20911  00B29E  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 20912  00B2A0  0E00               	movlw	0
 20913  00B2A2  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 20914  00B2A4  0E01               	movlw	1
 20915  00B2A6  ECA3  F092         	call	_motor_schedule_command
 20916  00B2AA                     l2739:
 20917                           
 20918                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 20919  00B2AA  0101               	movlb	1	; () banked
 20920  00B2AC  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 20921  00B2AE  D2A6               	goto	l2725
 20922                           
 20923                           ; BSR set to: 1
 20924                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 20925  00B2B0  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 20926  00B2B2  A4D8               	btfss	status,2,c
 20927  00B2B4  D2A3               	goto	l2725
 20928                           
 20929                           ; BSR set to: 1
 20930                           ;encoder.c: 308: motor_schedule_command(MOTOR_DIRECTION_CCW, motor_nonzero_steps_from_de
      +                          grees(os.setup_step_size), 0, MOTOR_MOVE_TYPE_NORMAL);
 20931  00B2B6  C181  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 20932  00B2BA  C182  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 20933  00B2BE  EC85  F0A5         	call	_motor_nonzero_steps_from_degrees	;wreg free
 20934  00B2C2  C08F  F0A1         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 20935  00B2C6  C090  F0A2         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 20936  00B2CA  C091  F0A3         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 20937  00B2CE  C092  F0A4         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 20938  00B2D2  0E00               	movlw	0
 20939  00B2D4  0100               	movlb	0	; () banked
 20940  00B2D6  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 20941  00B2D8  0E00               	movlw	0
 20942  00B2DA  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 20943  00B2DC  0E00               	movlw	0
 20944  00B2DE  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 20945  00B2E0  0EFF               	movlw	255
 20946  00B2E2  ECA3  F092         	call	_motor_schedule_command
 20947                           
 20948                           ;encoder.c: 309: };encoder.c: 310: break;
 20949  00B2E6  D28A               	goto	l2725
 20950  00B2E8                     
 20951                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 20952  00B2E8  0101               	movlb	1	; () banked
 20953  00B2EA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 20954  00B2EC  B4D8               	btfsc	status,2,c
 20955  00B2EE  D003               	goto	u17380
 20956                           
 20957                           ; BSR set to: 1
 20958  00B2F0  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 20959  00B2F2  A4D8               	btfss	status,2,c
 20960  00B2F4  D003               	goto	l2745
 20961  00B2F6                     u17380:
 20962                           
 20963                           ; BSR set to: 1
 20964                           ;encoder.c: 317: {;encoder.c: 318: motor_set_zero(MOTOR_DIRECTION_CCW);
 20965                           
 20966                           ; BSR set to: 1
 20967  00B2F6  0EFF               	movlw	255
 20968  00B2F8  EC8B  F094         	call	_motor_set_zero
 20969  00B2FC                     l2745:
 20970                           
 20971                           ;encoder.c: 319: };encoder.c: 320: if(os.encoder1Count+os.encoder2Count>0)
 20972  00B2FC  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 20973  00B300  0100               	movlb	0	; () banked
 20974  00B302  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 20975  00B304  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 20976  00B306  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 20977  00B308  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 20978  00B30C  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 20979  00B30E  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 20980  00B310  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 20981  00B312  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 20982  00B314  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 20983  00B316  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 20984  00B318  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 20985  00B31A  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 20986  00B31C  D008               	goto	l2748
 20987  00B31E  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 20988  00B320  E103               	bnz	u17390
 20989  00B322  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 20990  00B324  A0D8               	btfss	status,0,c
 20991  00B326  D003               	goto	l2748
 20992  00B328                     u17390:
 20993                           
 20994                           ; BSR set to: 0
 20995                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_SETUP2_CW;
 20996  00B328  0E22               	movlw	34
 20997  00B32A  0101               	movlb	1	; () banked
 20998  00B32C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 20999  00B32E                     l2748:
 21000                           
 21001                           ;encoder.c: 322: if(os.encoder1Count+os.encoder2Count<0)
 21002                           
 21003                           ; BSR set to: 1
 21004  00B32E  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21005  00B332  0100               	movlb	0	; () banked
 21006  00B334  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21007  00B336  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21008  00B338  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21009  00B33A  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21010  00B33E  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21011  00B340  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21012  00B342  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21013  00B344  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21014  00B346  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21015  00B348  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21016  00B34A  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21017  00B34C  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21018  00B34E  D256               	goto	l2725
 21019                           
 21020                           ; BSR set to: 0
 21021                           ;encoder.c: 323: os.displayState = DISPLAY_STATE_SETUP2_CW;
 21022  00B350  0E22               	movlw	34
 21023  00B352  D21D               	goto	L22
 21024  00B354                     
 21025                           ; BSR set to: 1
 21026                           ;encoder.c: 326: if(os.button1==1 || os.button2==1)
 21027                           
 21028                           ; BSR set to: 1
 21029  00B354  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21030  00B356  B4D8               	btfsc	status,2,c
 21031  00B358  D003               	goto	u17420
 21032                           
 21033                           ; BSR set to: 1
 21034  00B35A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21035  00B35C  A4D8               	btfss	status,2,c
 21036  00B35E  D003               	goto	l2752
 21037  00B360                     u17420:
 21038                           
 21039                           ; BSR set to: 1
 21040                           ;encoder.c: 327: {;encoder.c: 328: motor_set_zero(MOTOR_DIRECTION_CW);
 21041                           
 21042                           ; BSR set to: 1
 21043  00B360  0E01               	movlw	1
 21044  00B362  EC8B  F094         	call	_motor_set_zero
 21045  00B366                     l2752:
 21046                           
 21047                           ;encoder.c: 329: };encoder.c: 330: if(os.encoder1Count+os.encoder2Count>0)
 21048  00B366  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21049  00B36A  0100               	movlb	0	; () banked
 21050  00B36C  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21051  00B36E  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21052  00B370  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21053  00B372  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21054  00B376  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21055  00B378  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21056  00B37A  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21057  00B37C  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21058  00B37E  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21059  00B380  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21060  00B382  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21061  00B384  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21062  00B386  D008               	goto	l2755
 21063  00B388  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21064  00B38A  E103               	bnz	u17430
 21065  00B38C  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21066  00B38E  A0D8               	btfss	status,0,c
 21067  00B390  D003               	goto	l2755
 21068  00B392                     u17430:
 21069                           
 21070                           ; BSR set to: 0
 21071                           ;encoder.c: 331: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 21072  00B392  0E21               	movlw	33
 21073  00B394  0101               	movlb	1	; () banked
 21074  00B396  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21075  00B398                     l2755:
 21076                           
 21077                           ;encoder.c: 332: if(os.encoder1Count+os.encoder2Count<0)
 21078                           
 21079                           ; BSR set to: 1
 21080  00B398  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21081  00B39C  0100               	movlb	0	; () banked
 21082  00B39E  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21083  00B3A0  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21084  00B3A2  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21085  00B3A4  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21086  00B3A8  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21087  00B3AA  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21088  00B3AC  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21089  00B3AE  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21090  00B3B0  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21091  00B3B2  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21092  00B3B4  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21093  00B3B6  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21094  00B3B8  D221               	goto	l2725
 21095                           
 21096                           ; BSR set to: 0
 21097                           ;encoder.c: 333: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 21098  00B3BA  0E21               	movlw	33
 21099  00B3BC  D1E8               	goto	L22
 21100  00B3BE                     
 21101                           ; BSR set to: 1
 21102  00B3BE  0101               	movlb	1	; () banked
 21103  00B3C0  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21104                           
 21105                           ; Switch size 1, requested type "space"
 21106                           ; Number of cases is 2, Range of values is 33 to 34
 21107                           ; switch strategies available:
 21108                           ; Name         Instructions Cycles
 21109                           ; simple_byte            7     4 (average)
 21110                           ;	Chosen strategy is simple_byte
 21111  00B3C2  0A21               	xorlw	33	; case 33
 21112  00B3C4  B4D8               	btfsc	status,2,c
 21113  00B3C6  D790               	goto	l2744
 21114  00B3C8  0A03               	xorlw	3	; case 34
 21115  00B3CA  B4D8               	btfsc	status,2,c
 21116  00B3CC  D7C3               	goto	l2751
 21117                           
 21118                           ; BSR set to: 1
 21119                           ;encoder.c: 336: break;
 21120  00B3CE  D216               	goto	l2725
 21121  00B3D0                     
 21122                           ; BSR set to: 1
 21123                           ;encoder.c: 342: if(os.button1==1)
 21124                           
 21125                           ; BSR set to: 1
 21126  00B3D0  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21127  00B3D2  A4D8               	btfss	status,2,c
 21128  00B3D4  D005               	goto	l2760
 21129                           
 21130                           ; BSR set to: 1
 21131                           ;encoder.c: 343: {;encoder.c: 345: motor_divide_jump_to_nearest();
 21132  00B3D6  ECF8  F07C         	call	_motor_divide_jump_to_nearest	;wreg free
 21133                           
 21134                           ;encoder.c: 346: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 21135  00B3DA  0E41               	movlw	65
 21136  00B3DC  0101               	movlb	1	; () banked
 21137  00B3DE  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21138  00B3E0                     l2760:
 21139                           
 21140                           ; BSR set to: 1
 21141                           ;encoder.c: 347: };encoder.c: 348: if(os.encoder1Count>0)
 21142                           
 21143                           ; BSR set to: 1
 21144  00B3E0  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21145  00B3E2  0A80               	xorlw	128
 21146  00B3E4  0F7F               	addlw	-129
 21147  00B3E6  A0D8               	btfss	status,0,c
 21148  00B3E8  D002               	goto	l2761
 21149                           
 21150                           ; BSR set to: 1
 21151                           ;encoder.c: 349: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 21152  00B3EA  0E32               	movlw	50
 21153  00B3EC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21154  00B3EE                     l2761:
 21155                           
 21156                           ; BSR set to: 1
 21157                           ;encoder.c: 350: if(os.encoder1Count<0)
 21158                           
 21159                           ; BSR set to: 1
 21160  00B3EE  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21161  00B3F0  D01B               	goto	l2763
 21162                           
 21163                           ; BSR set to: 1
 21164                           ;encoder.c: 351: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 21165  00B3F2  0E32               	movlw	50
 21166  00B3F4  D00F               	goto	L13
 21167  00B3F6                     
 21168                           ; BSR set to: 1
 21169                           ;encoder.c: 354: if(os.button1==1)
 21170                           
 21171                           ; BSR set to: 1
 21172  00B3F6  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21173  00B3F8  A4D8               	btfss	status,2,c
 21174  00B3FA  D002               	goto	l2765
 21175                           
 21176                           ; BSR set to: 1
 21177                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21178  00B3FC  0E02               	movlw	2
 21179  00B3FE  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21180  00B400                     l2765:
 21181                           
 21182                           ; BSR set to: 1
 21183                           ;encoder.c: 356: if(os.encoder1Count>0)
 21184                           
 21185                           ; BSR set to: 1
 21186  00B400  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21187  00B402  0A80               	xorlw	128
 21188  00B404  0F7F               	addlw	-129
 21189  00B406  A0D8               	btfss	status,0,c
 21190  00B408  D002               	goto	l2766
 21191                           
 21192                           ; BSR set to: 1
 21193                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21194  00B40A  0E31               	movlw	49
 21195  00B40C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21196  00B40E                     l2766:
 21197                           
 21198                           ; BSR set to: 1
 21199                           ;encoder.c: 358: if(os.encoder1Count<0)
 21200                           
 21201                           ; BSR set to: 1
 21202  00B40E  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21203  00B410  D00B               	goto	l2763
 21204                           
 21205                           ; BSR set to: 1
 21206                           ;encoder.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21207  00B412  0E31               	movlw	49
 21208  00B414                     L13:
 21209  00B414  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21210                           
 21211                           ; BSR set to: 1
 21212                           ;encoder.c: 361: }
 21213                           
 21214                           ; BSR set to: 1
 21215                           ;encoder.c: 360: break;
 21216  00B416  D008               	goto	l2763
 21217  00B418                     
 21218                           ; BSR set to: 1
 21219  00B418  0101               	movlb	1	; () banked
 21220  00B41A  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21221                           
 21222                           ; Switch size 1, requested type "space"
 21223                           ; Number of cases is 2, Range of values is 49 to 50
 21224                           ; switch strategies available:
 21225                           ; Name         Instructions Cycles
 21226                           ; simple_byte            7     4 (average)
 21227                           ;	Chosen strategy is simple_byte
 21228  00B41C  0A31               	xorlw	49	; case 49
 21229  00B41E  B4D8               	btfsc	status,2,c
 21230  00B420  D7D7               	goto	l2759
 21231  00B422  0A03               	xorlw	3	; case 50
 21232  00B424  B4D8               	btfsc	status,2,c
 21233  00B426  D7E7               	goto	l2764
 21234  00B428                     l2763:
 21235                           
 21236                           ; BSR set to: 1
 21237                           ;encoder.c: 362: if(os.button2==1)
 21238                           
 21239                           ; BSR set to: 1
 21240  00B428  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21241  00B42A  A4D8               	btfss	status,2,c
 21242  00B42C  D005               	goto	l2768
 21243                           
 21244                           ; BSR set to: 1
 21245                           ;encoder.c: 363: {;encoder.c: 364: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 21246  00B42E  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 21247  00B430  ECCA  F0A8         	call	__encoder_next_divide_step_size
 21248  00B434  0101               	movlb	1	; () banked
 21249  00B436  6F86               	movwf	(_os+21)& (0+255),b	;volatile
 21250  00B438                     l2768:
 21251                           
 21252                           ; BSR set to: 1
 21253                           ;encoder.c: 365: };encoder.c: 366: if(os.encoder2Count>0)
 21254                           
 21255                           ; BSR set to: 1
 21256  00B438  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21257  00B43A  0A80               	xorlw	128
 21258  00B43C  0F7F               	addlw	-129
 21259  00B43E  A0D8               	btfss	status,0,c
 21260  00B440  D004               	goto	l2769
 21261                           
 21262                           ; BSR set to: 1
 21263                           ;encoder.c: 367: {;encoder.c: 368: os.division += os.divide_step_size;
 21264  00B442  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 21265  00B444  2784               	addwf	(_os+19)& (0+255),f,b	;volatile
 21266  00B446  0E00               	movlw	0
 21267  00B448  2385               	addwfc	(_os+20)& (0+255),f,b	;volatile
 21268  00B44A                     l2769:
 21269                           
 21270                           ; BSR set to: 1
 21271                           ;encoder.c: 369: };encoder.c: 370: if(os.encoder2Count<0)
 21272  00B44A  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21273  00B44C  D1D7               	goto	l2725
 21274                           
 21275                           ; BSR set to: 1
 21276                           ;encoder.c: 371: {;encoder.c: 372: if(os.division>os.divide_step_size)
 21277  00B44E  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 21278  00B450  0100               	movlb	0	; () banked
 21279  00B452  6FCF               	movwf	??_encoder_statemachine& (0+255),b
 21280  00B454  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21281  00B456  0101               	movlb	1	; () banked
 21282  00B458  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 21283  00B45A  0100               	movlb	0	; () banked
 21284  00B45C  5DCF               	subwf	??_encoder_statemachine& (0+255),w,b
 21285  00B45E  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21286  00B460  0A80               	xorlw	128
 21287  00B462  6FD1               	movwf	(??_encoder_statemachine+2)& (0+255),b
 21288  00B464  0101               	movlb	1	; () banked
 21289  00B466  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 21290  00B468  0A80               	xorlw	128
 21291  00B46A  0100               	movlb	0	; () banked
 21292  00B46C  59D1               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 21293  00B46E  B0D8               	btfsc	status,0,c
 21294  00B470  D006               	goto	l2771
 21295                           
 21296                           ; BSR set to: 0
 21297                           ;encoder.c: 373: {;encoder.c: 374: os.division -= os.divide_step_size;
 21298  00B472  0101               	movlb	1	; () banked
 21299  00B474  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 21300  00B476  5F84               	subwf	(_os+19)& (0+255),f,b	;volatile
 21301  00B478  0E00               	movlw	0
 21302  00B47A  5B85               	subwfb	(_os+20)& (0+255),f,b	;volatile
 21303                           
 21304                           ;encoder.c: 375: }
 21305  00B47C  D1BF               	goto	l2725
 21306  00B47E                     l2771:
 21307                           
 21308                           ;encoder.c: 376: else;encoder.c: 377: {;encoder.c: 378: os.division = 1;
 21309                           
 21310                           ; BSR set to: 1
 21311  00B47E  0E00               	movlw	0
 21312  00B480  0101               	movlb	1	; () banked
 21313  00B482  6F85               	movwf	(_os+20)& (0+255),b	;volatile
 21314  00B484  0E01               	movlw	1
 21315  00B486  6F84               	movwf	(_os+19)& (0+255),b	;volatile
 21316                           
 21317                           ; BSR set to: 1
 21318                           ;encoder.c: 379: };encoder.c: 380: };encoder.c: 381: break;
 21319                           
 21320                           ; BSR set to: 1
 21321  00B488  D1B9               	goto	l2725
 21322  00B48A                     
 21323                           ;encoder.c: 384: if(os.button1==1)
 21324                           
 21325                           ; BSR set to: 1
 21326  00B48A  0101               	movlb	1	; () banked
 21327  00B48C  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21328  00B48E  A4D8               	btfss	status,2,c
 21329  00B490  D002               	goto	l2774
 21330                           
 21331                           ; BSR set to: 1
 21332                           ;encoder.c: 385: {;encoder.c: 386: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21333  00B492  0E02               	movlw	2
 21334  00B494  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21335  00B496                     l2774:
 21336                           
 21337                           ; BSR set to: 1
 21338                           ;encoder.c: 387: };encoder.c: 388: if(os.button2==1)
 21339                           
 21340                           ; BSR set to: 1
 21341  00B496  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21342  00B498  B4D8               	btfsc	status,2,c
 21343                           
 21344                           ; BSR set to: 1
 21345                           ;encoder.c: 389: {;encoder.c: 390: motor_divide_jump();
 21346  00B49A  ECA5  F096         	call	_motor_divide_jump	;wreg free
 21347                           
 21348                           ;encoder.c: 391: };encoder.c: 392: if(os.encoder2Count>0)
 21349  00B49E  0101               	movlb	1	; () banked
 21350  00B4A0  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21351  00B4A2  0A80               	xorlw	128
 21352  00B4A4  0F7F               	addlw	-129
 21353  00B4A6  B0D8               	btfsc	status,0,c
 21354                           
 21355                           ; BSR set to: 1
 21356                           ;encoder.c: 393: {;encoder.c: 394: _divide_jump_size_increment();
 21357  00B4A8  ECE3  F0A6         	call	__divide_jump_size_increment	;wreg free
 21358                           
 21359                           ;encoder.c: 395: };encoder.c: 396: if(os.encoder2Count<0)
 21360  00B4AC  0101               	movlb	1	; () banked
 21361  00B4AE  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21362  00B4B0  D1A5               	goto	l2725
 21363                           
 21364                           ; BSR set to: 1
 21365                           ;encoder.c: 397: {;encoder.c: 398: _divide_jump_size_decrement();
 21366  00B4B2  EC9B  F09E         	call	__divide_jump_size_decrement	;wreg free
 21367                           
 21368                           ;encoder.c: 399: };encoder.c: 400: break;
 21369  00B4B6  D1A2               	goto	l2725
 21370  00B4B8                     
 21371                           ;encoder.c: 406: if(os.button1==1)
 21372  00B4B8  0101               	movlb	1	; () banked
 21373  00B4BA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21374  00B4BC  A4D8               	btfss	status,2,c
 21375  00B4BE  D002               	goto	l2781
 21376                           
 21377                           ; BSR set to: 1
 21378                           ;encoder.c: 407: {;encoder.c: 408: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 21379  00B4C0  0E62               	movlw	98
 21380  00B4C2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21381  00B4C4                     l2781:
 21382                           
 21383                           ; BSR set to: 1
 21384                           ;encoder.c: 409: };encoder.c: 410: if(os.encoder1Count>0)
 21385                           
 21386                           ; BSR set to: 1
 21387  00B4C4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21388  00B4C6  0A80               	xorlw	128
 21389  00B4C8  0F7F               	addlw	-129
 21390  00B4CA  A0D8               	btfss	status,0,c
 21391  00B4CC  D002               	goto	l2782
 21392                           
 21393                           ; BSR set to: 1
 21394                           ;encoder.c: 411: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 21395  00B4CE  0E52               	movlw	82
 21396  00B4D0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21397  00B4D2                     l2782:
 21398                           
 21399                           ; BSR set to: 1
 21400                           ;encoder.c: 412: if(os.encoder1Count<0)
 21401                           
 21402                           ; BSR set to: 1
 21403  00B4D2  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21404  00B4D4  D01B               	goto	l2784
 21405                           
 21406                           ; BSR set to: 1
 21407                           ;encoder.c: 413: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 21408  00B4D6  0E52               	movlw	82
 21409  00B4D8  D00F               	goto	L14
 21410  00B4DA                     
 21411                           ; BSR set to: 1
 21412                           ;encoder.c: 416: if(os.button1==1)
 21413                           
 21414                           ; BSR set to: 1
 21415  00B4DA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21416  00B4DC  A4D8               	btfss	status,2,c
 21417  00B4DE  D002               	goto	l2786
 21418                           
 21419                           ; BSR set to: 1
 21420                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21421  00B4E0  0E03               	movlw	3
 21422  00B4E2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21423  00B4E4                     l2786:
 21424                           
 21425                           ; BSR set to: 1
 21426                           ;encoder.c: 418: if(os.encoder1Count>0)
 21427                           
 21428                           ; BSR set to: 1
 21429  00B4E4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21430  00B4E6  0A80               	xorlw	128
 21431  00B4E8  0F7F               	addlw	-129
 21432  00B4EA  A0D8               	btfss	status,0,c
 21433  00B4EC  D002               	goto	l2787
 21434                           
 21435                           ; BSR set to: 1
 21436                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21437  00B4EE  0E51               	movlw	81
 21438  00B4F0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21439  00B4F2                     l2787:
 21440                           
 21441                           ; BSR set to: 1
 21442                           ;encoder.c: 420: if(os.encoder1Count<0)
 21443                           
 21444                           ; BSR set to: 1
 21445  00B4F2  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21446  00B4F4  D00B               	goto	l2784
 21447                           
 21448                           ; BSR set to: 1
 21449                           ;encoder.c: 421: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21450  00B4F6  0E51               	movlw	81
 21451  00B4F8                     L14:
 21452  00B4F8  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21453                           
 21454                           ; BSR set to: 1
 21455                           ;encoder.c: 423: }
 21456                           
 21457                           ; BSR set to: 1
 21458                           ;encoder.c: 422: break;
 21459  00B4FA  D008               	goto	l2784
 21460  00B4FC                     
 21461                           ; BSR set to: 1
 21462  00B4FC  0101               	movlb	1	; () banked
 21463  00B4FE  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21464                           
 21465                           ; Switch size 1, requested type "space"
 21466                           ; Number of cases is 2, Range of values is 81 to 82
 21467                           ; switch strategies available:
 21468                           ; Name         Instructions Cycles
 21469                           ; simple_byte            7     4 (average)
 21470                           ;	Chosen strategy is simple_byte
 21471  00B500  0A51               	xorlw	81	; case 81
 21472  00B502  B4D8               	btfsc	status,2,c
 21473  00B504  D7D9               	goto	l2780
 21474  00B506  0A03               	xorlw	3	; case 82
 21475  00B508  B4D8               	btfsc	status,2,c
 21476  00B50A  D7E7               	goto	l2785
 21477  00B50C                     l2784:
 21478                           
 21479                           ; BSR set to: 1
 21480                           ;encoder.c: 424: if(os.button2==1)
 21481                           
 21482                           ; BSR set to: 1
 21483  00B50C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21484  00B50E  A4D8               	btfss	status,2,c
 21485  00B510  D00A               	goto	l2789
 21486                           
 21487                           ; BSR set to: 1
 21488                           ;encoder.c: 425: {;encoder.c: 426: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 21489  00B512  C18B  F060         	movff	_os+26,__encoder_next_arc_step_size@old_stepsize	;volatile
 21490  00B516  C18C  F061         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 21491  00B51A  EC2C  F09E         	call	__encoder_next_arc_step_size	;wreg free
 21492  00B51E  C060  F18B         	movff	?__encoder_next_arc_step_size,_os+26	;volatile
 21493  00B522  C061  F18C         	movff	?__encoder_next_arc_step_size+1,_os+27	;volatile
 21494  00B526                     l2789:
 21495                           
 21496                           ;encoder.c: 427: };encoder.c: 428: if(os.encoder2Count>0)
 21497  00B526  0101               	movlb	1	; () banked
 21498  00B528  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21499  00B52A  0A80               	xorlw	128
 21500  00B52C  0F7F               	addlw	-129
 21501  00B52E  A0D8               	btfss	status,0,c
 21502  00B530  D01C               	goto	l2791
 21503                           
 21504                           ; BSR set to: 1
 21505                           ;encoder.c: 429: {;encoder.c: 430: os.arc_size += os.arc_step_size;
 21506  00B532  518B               	movf	(_os+26)& (0+255),w,b	;volatile
 21507  00B534  278D               	addwf	(_os+28)& (0+255),f,b	;volatile
 21508  00B536  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 21509  00B538  238E               	addwfc	(_os+29)& (0+255),f,b	;volatile
 21510  00B53A  0E00               	movlw	0
 21511  00B53C  238F               	addwfc	(_os+30)& (0+255),f,b	;volatile
 21512  00B53E  0E00               	movlw	0
 21513  00B540  2390               	addwfc	(_os+31)& (0+255),f,b	;volatile
 21514                           
 21515                           ; BSR set to: 1
 21516                           ;encoder.c: 431: if(os.arc_size>100000)
 21517  00B542  BF90               	btfsc	(_os+31)& (0+255),7,b	;volatile
 21518  00B544  D012               	goto	l2791
 21519  00B546  5190               	movf	(_os+31)& (0+255),w,b	;volatile
 21520  00B548  E108               	bnz	u17670
 21521  00B54A  0EA1               	movlw	161
 21522  00B54C  5D8D               	subwf	(_os+28)& (0+255),w,b	;volatile
 21523  00B54E  0E86               	movlw	134
 21524  00B550  598E               	subwfb	(_os+29)& (0+255),w,b	;volatile
 21525  00B552  0E01               	movlw	1
 21526  00B554  598F               	subwfb	(_os+30)& (0+255),w,b	;volatile
 21527  00B556  A0D8               	btfss	status,0,c
 21528  00B558  D008               	goto	l2791
 21529  00B55A                     u17670:
 21530                           
 21531                           ; BSR set to: 1
 21532                           ;encoder.c: 432: os.arc_size = 100000;
 21533  00B55A  0EA0               	movlw	160
 21534  00B55C  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
 21535  00B55E  0E86               	movlw	134
 21536  00B560  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
 21537  00B562  0E01               	movlw	1
 21538  00B564  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
 21539  00B566  0E00               	movlw	0
 21540  00B568  6F90               	movwf	(_os+31)& (0+255),b	;volatile
 21541  00B56A                     l2791:
 21542                           
 21543                           ; BSR set to: 1
 21544                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count<0)
 21545                           
 21546                           ; BSR set to: 1
 21547                           
 21548                           ; BSR set to: 1
 21549  00B56A  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21550  00B56C  D147               	goto	l2725
 21551                           
 21552                           ; BSR set to: 1
 21553                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size -= os.arc_step_size;
 21554  00B56E  518B               	movf	(_os+26)& (0+255),w,b	;volatile
 21555  00B570  0100               	movlb	0	; () banked
 21556  00B572  6FCF               	movwf	??_encoder_statemachine& (0+255),b
 21557  00B574  0101               	movlb	1	; () banked
 21558  00B576  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 21559  00B578  0100               	movlb	0	; () banked
 21560  00B57A  6FD0               	movwf	(??_encoder_statemachine+1)& (0+255),b
 21561  00B57C  6BD1               	clrf	(??_encoder_statemachine+2)& (0+255),b
 21562  00B57E  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21563  00B580  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21564  00B582  0101               	movlb	1	; () banked
 21565  00B584  5F8D               	subwf	(_os+28)& (0+255),f,b	;volatile
 21566  00B586  0100               	movlb	0	; () banked
 21567  00B588  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21568  00B58A  0101               	movlb	1	; () banked
 21569  00B58C  5B8E               	subwfb	(_os+29)& (0+255),f,b	;volatile
 21570  00B58E  0100               	movlb	0	; () banked
 21571  00B590  51D1               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 21572  00B592  0101               	movlb	1	; () banked
 21573  00B594  5B8F               	subwfb	(_os+30)& (0+255),f,b	;volatile
 21574  00B596  0100               	movlb	0	; () banked
 21575  00B598  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21576  00B59A  0101               	movlb	1	; () banked
 21577  00B59C  5B90               	subwfb	(_os+31)& (0+255),f,b	;volatile
 21578                           
 21579                           ;encoder.c: 437: if(os.arc_size<1)
 21580  00B59E  BF90               	btfsc	(_os+31)& (0+255),7,b	;volatile
 21581  00B5A0  D007               	goto	u17690
 21582  00B5A2  5190               	movf	(_os+31)& (0+255),w,b	;volatile
 21583  00B5A4  118F               	iorwf	(_os+30)& (0+255),w,b	;volatile
 21584  00B5A6  118E               	iorwf	(_os+29)& (0+255),w,b	;volatile
 21585  00B5A8  E102               	bnz	u17691
 21586  00B5AA  058D               	decf	(_os+28)& (0+255),w,b	;volatile
 21587  00B5AC  B0D8               	btfsc	status,0,c
 21588  00B5AE                     u17691:
 21589  00B5AE  D126               	goto	l2725
 21590  00B5B0                     u17690:
 21591                           
 21592                           ; BSR set to: 1
 21593                           ;encoder.c: 438: os.arc_size = 1;
 21594  00B5B0  0E01               	movlw	1
 21595  00B5B2  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
 21596  00B5B4  0E00               	movlw	0
 21597  00B5B6  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
 21598  00B5B8  0E00               	movlw	0
 21599  00B5BA  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
 21600  00B5BC  0E00               	movlw	0
 21601  00B5BE  6F90               	movwf	(_os+31)& (0+255),b	;volatile
 21602                           
 21603                           ; BSR set to: 1
 21604                           ;encoder.c: 439: };encoder.c: 440: break;
 21605                           
 21606                           ; BSR set to: 1
 21607  00B5C0  D11D               	goto	l2725
 21608  00B5C2                     
 21609                           ;encoder.c: 443: if(os.encoder1Count>0)
 21610                           
 21611                           ; BSR set to: 1
 21612  00B5C2  0101               	movlb	1	; () banked
 21613  00B5C4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21614  00B5C6  0A80               	xorlw	128
 21615  00B5C8  0F7F               	addlw	-129
 21616  00B5CA  A0D8               	btfss	status,0,c
 21617  00B5CC  D011               	goto	l2797
 21618                           
 21619                           ; BSR set to: 1
 21620                           ;encoder.c: 444: {;encoder.c: 445: if(os.arc_speed<config.maximum_speed_arc)
 21621  00B5CE  51B0               	movf	(_config+15)& (0+255),w,b
 21622  00B5D0  5D91               	subwf	(_os+32)& (0+255),w,b	;volatile
 21623  00B5D2  51B1               	movf	(_config+16)& (0+255),w,b
 21624  00B5D4  5992               	subwfb	(_os+33)& (0+255),w,b	;volatile
 21625  00B5D6  B0D8               	btfsc	status,0,c
 21626  00B5D8  D002               	goto	l2796
 21627                           
 21628                           ; BSR set to: 1
 21629                           ;encoder.c: 446: ++os.arc_speed;
 21630  00B5DA  4B91               	infsnz	(_os+32)& (0+255),f,b	;volatile
 21631  00B5DC  2B92               	incf	(_os+33)& (0+255),f,b	;volatile
 21632  00B5DE                     l2796:
 21633                           
 21634                           ; BSR set to: 1
 21635                           ;encoder.c: 447: if(os.busy)
 21636                           
 21637                           ; BSR set to: 1
 21638  00B5DE  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21639  00B5E0  B4D8               	btfsc	status,2,c
 21640  00B5E2  D006               	goto	l2797
 21641                           
 21642                           ; BSR set to: 1
 21643                           ;encoder.c: 448: motor_change_speed(os.arc_speed);
 21644  00B5E4  C191  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 21645  00B5E8  C192  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 21646  00B5EC  EC51  F0AB         	call	_motor_change_speed	;wreg free
 21647  00B5F0                     l2797:
 21648                           
 21649                           ;encoder.c: 449: };encoder.c: 450: if(os.encoder1Count<0)
 21650  00B5F0  0101               	movlb	1	; () banked
 21651  00B5F2  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21652  00B5F4  D046               	goto	l2801
 21653                           
 21654                           ; BSR set to: 1
 21655                           ;encoder.c: 451: {;encoder.c: 452: if(os.arc_speed>config.minimum_speed)
 21656  00B5F6  5191               	movf	(_os+32)& (0+255),w,b	;volatile
 21657  00B5F8  5DAA               	subwf	(_config+9)& (0+255),w,b
 21658  00B5FA  5192               	movf	(_os+33)& (0+255),w,b	;volatile
 21659  00B5FC  59AB               	subwfb	(_config+10)& (0+255),w,b
 21660  00B5FE  B0D8               	btfsc	status,0,c
 21661  00B600  D003               	goto	l2799
 21662                           
 21663                           ; BSR set to: 1
 21664                           ;encoder.c: 453: --os.arc_speed;
 21665  00B602  0791               	decf	(_os+32)& (0+255),f,b	;volatile
 21666  00B604  A0D8               	btfss	status,0,c
 21667  00B606  0792               	decf	(_os+33)& (0+255),f,b	;volatile
 21668  00B608                     l2799:
 21669                           
 21670                           ; BSR set to: 1
 21671                           ;encoder.c: 454: if(os.busy)
 21672                           
 21673                           ; BSR set to: 1
 21674  00B608  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21675  00B60A  B4D8               	btfsc	status,2,c
 21676  00B60C  D03A               	goto	l2801
 21677                           
 21678                           ; BSR set to: 1
 21679                           ;encoder.c: 455: motor_change_speed(os.arc_speed);
 21680  00B60E  C191  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 21681  00B612  C192  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 21682  00B616  EC51  F0AB         	call	_motor_change_speed	;wreg free
 21683                           
 21684                           ;encoder.c: 456: };encoder.c: 457: switch(os.displayState)
 21685  00B61A  D033               	goto	l2801
 21686  00B61C                     
 21687                           ;encoder.c: 460: if(os.button2==1)
 21688  00B61C  0101               	movlb	1	; () banked
 21689  00B61E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21690  00B620  A4D8               	btfss	status,2,c
 21691  00B622  D006               	goto	l2803
 21692                           
 21693                           ; BSR set to: 1
 21694                           ;encoder.c: 461: {;encoder.c: 462: motor_arc_move(MOTOR_DIRECTION_CCW);
 21695  00B624  0EFF               	movlw	255
 21696  00B626  EC5B  F08A         	call	_motor_arc_move
 21697                           
 21698                           ;encoder.c: 463: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 21699  00B62A  0E62               	movlw	98
 21700  00B62C  0101               	movlb	1	; () banked
 21701  00B62E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21702  00B630                     l2803:
 21703                           
 21704                           ; BSR set to: 1
 21705                           ;encoder.c: 464: };encoder.c: 465: if(os.encoder2Count>0)
 21706                           
 21707                           ; BSR set to: 1
 21708  00B630  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21709  00B632  0A80               	xorlw	128
 21710  00B634  0F7F               	addlw	-129
 21711  00B636  A0D8               	btfss	status,0,c
 21712  00B638  D0E1               	goto	l2725
 21713                           
 21714                           ; BSR set to: 1
 21715                           ;encoder.c: 466: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 21716  00B63A  0E62               	movlw	98
 21717  00B63C  D0A9               	goto	L21
 21718  00B63E                     
 21719                           ; BSR set to: 1
 21720                           ;encoder.c: 469: if(os.button2==1)
 21721                           
 21722                           ; BSR set to: 1
 21723  00B63E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21724  00B640  A4D8               	btfss	status,2,c
 21725  00B642  D007               	goto	l2807
 21726                           
 21727                           ; BSR set to: 1
 21728                           ;encoder.c: 470: {;encoder.c: 471: if(os.busy)
 21729  00B644  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21730  00B646  A4D8               	btfss	status,2,c
 21731                           
 21732                           ; BSR set to: 1
 21733                           ;encoder.c: 472: motor_stop();
 21734  00B648  EC18  F0A6         	call	_motor_stop	;wreg free
 21735                           
 21736                           ;encoder.c: 473: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21737  00B64C  0E03               	movlw	3
 21738  00B64E  0101               	movlb	1	; () banked
 21739  00B650  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21740  00B652                     l2807:
 21741                           
 21742                           ; BSR set to: 1
 21743                           ;encoder.c: 474: };encoder.c: 475: if(os.encoder2Count>0)
 21744                           
 21745                           ; BSR set to: 1
 21746  00B652  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21747  00B654  0A80               	xorlw	128
 21748  00B656  0F7F               	addlw	-129
 21749  00B658  A0D8               	btfss	status,0,c
 21750  00B65A  D002               	goto	l2809
 21751                           
 21752                           ; BSR set to: 1
 21753                           ;encoder.c: 476: os.displayState = DISPLAY_STATE_ARC2_CW;
 21754  00B65C  0E63               	movlw	99
 21755  00B65E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21756  00B660                     l2809:
 21757                           
 21758                           ; BSR set to: 1
 21759                           ;encoder.c: 477: if(os.encoder2Count<0)
 21760                           
 21761                           ; BSR set to: 1
 21762  00B660  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21763  00B662  D0CC               	goto	l2725
 21764                           
 21765                           ; BSR set to: 1
 21766                           ;encoder.c: 478: os.displayState = DISPLAY_STATE_ARC2_CCW;
 21767  00B664  0E61               	movlw	97
 21768  00B666  D094               	goto	L21
 21769  00B668                     
 21770                           ; BSR set to: 1
 21771                           ;encoder.c: 481: if(os.button2==1)
 21772                           
 21773                           ; BSR set to: 1
 21774  00B668  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21775  00B66A  A4D8               	btfss	status,2,c
 21776  00B66C  D006               	goto	l2812
 21777                           
 21778                           ; BSR set to: 1
 21779                           ;encoder.c: 482: {;encoder.c: 483: motor_arc_move(MOTOR_DIRECTION_CW);
 21780  00B66E  0E01               	movlw	1
 21781  00B670  EC5B  F08A         	call	_motor_arc_move
 21782                           
 21783                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 21784  00B674  0E62               	movlw	98
 21785  00B676  0101               	movlb	1	; () banked
 21786  00B678  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21787  00B67A                     l2812:
 21788                           
 21789                           ; BSR set to: 1
 21790                           ;encoder.c: 485: };encoder.c: 486: if(os.encoder2Count<0)
 21791                           
 21792                           ; BSR set to: 1
 21793  00B67A  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21794  00B67C  D0BF               	goto	l2725
 21795                           
 21796                           ; BSR set to: 1
 21797                           ;encoder.c: 487: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 21798  00B67E  0E62               	movlw	98
 21799  00B680  D087               	goto	L21
 21800  00B682                     l2801:
 21801                           
 21802                           ; BSR set to: 1
 21803  00B682  0101               	movlb	1	; () banked
 21804  00B684  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21805                           
 21806                           ; Switch size 1, requested type "space"
 21807                           ; Number of cases is 3, Range of values is 97 to 99
 21808                           ; switch strategies available:
 21809                           ; Name         Instructions Cycles
 21810                           ; simple_byte           10     6 (average)
 21811                           ;	Chosen strategy is simple_byte
 21812  00B686  0A61               	xorlw	97	; case 97
 21813  00B688  B4D8               	btfsc	status,2,c
 21814  00B68A  D7C8               	goto	l2802
 21815  00B68C  0A03               	xorlw	3	; case 98
 21816  00B68E  B4D8               	btfsc	status,2,c
 21817  00B690  D7D6               	goto	l2806
 21818  00B692  0A01               	xorlw	1	; case 99
 21819  00B694  B4D8               	btfsc	status,2,c
 21820  00B696  D7E8               	goto	l2811
 21821                           
 21822                           ; BSR set to: 1
 21823                           ;encoder.c: 490: break;
 21824  00B698  D0B1               	goto	l2725
 21825  00B69A                     
 21826                           ;encoder.c: 493: if(os.button2==1)
 21827                           
 21828                           ; BSR set to: 1
 21829  00B69A  0101               	movlb	1	; () banked
 21830  00B69C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21831  00B69E  A4D8               	btfss	status,2,c
 21832  00B6A0  D012               	goto	l2815
 21833                           
 21834                           ; BSR set to: 1
 21835                           ;encoder.c: 494: {;encoder.c: 496: motor_go_to_steps_position(0);
 21836  00B6A2  0E00               	movlw	0
 21837  00B6A4  0100               	movlb	0	; () banked
 21838  00B6A6  6FA9               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 21839  00B6A8  0E00               	movlw	0
 21840  00B6AA  6FAA               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 21841  00B6AC  0E00               	movlw	0
 21842  00B6AE  6FAB               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 21843  00B6B0  0E00               	movlw	0
 21844  00B6B2  6FAC               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 21845  00B6B4  EC7F  F069         	call	_motor_go_to_steps_position	;wreg free
 21846                           
 21847                           ;encoder.c: 498: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21848  00B6B8  0E05               	movlw	5
 21849  00B6BA  0101               	movlb	1	; () banked
 21850  00B6BC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21851                           
 21852                           ; BSR set to: 1
 21853                           ;encoder.c: 499: os.divide_position = 0;
 21854  00B6BE  0E00               	movlw	0
 21855  00B6C0  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 21856  00B6C2  0E00               	movlw	0
 21857  00B6C4  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 21858  00B6C6                     l2815:
 21859                           
 21860                           ; BSR set to: 1
 21861                           ;encoder.c: 500: };encoder.c: 501: if(os.button1==1)
 21862                           
 21863                           ; BSR set to: 1
 21864  00B6C6  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21865  00B6C8  A4D8               	btfss	status,2,c
 21866  00B6CA  D098               	goto	l2725
 21867                           
 21868                           ; BSR set to: 1
 21869                           ;encoder.c: 502: {;encoder.c: 503: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21870  00B6CC  0E05               	movlw	5
 21871  00B6CE  D060               	goto	L21
 21872  00B6D0                     
 21873                           ;encoder.c: 508: if(os.encoder1Count>0)
 21874                           
 21875                           ; BSR set to: 1
 21876  00B6D0  0101               	movlb	1	; () banked
 21877  00B6D2  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21878  00B6D4  0A80               	xorlw	128
 21879  00B6D6  0F7F               	addlw	-129
 21880  00B6D8  B0D8               	btfsc	status,0,c
 21881                           
 21882                           ; BSR set to: 1
 21883                           ;encoder.c: 509: {;encoder.c: 510: motor_increase_manual_speed();
 21884  00B6DA  ECB0  F0AA         	call	_motor_increase_manual_speed	;wreg free
 21885                           
 21886                           ;encoder.c: 511: };encoder.c: 512: if(os.encoder1Count<0)
 21887  00B6DE  0101               	movlb	1	; () banked
 21888  00B6E0  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21889  00B6E2  D058               	goto	l2820
 21890                           
 21891                           ; BSR set to: 1
 21892                           ;encoder.c: 513: {;encoder.c: 514: motor_decrease_manual_speed();
 21893  00B6E4  EC47  F0AA         	call	_motor_decrease_manual_speed	;wreg free
 21894                           
 21895                           ;encoder.c: 515: };encoder.c: 516: switch(os.displayState)
 21896  00B6E8  D055               	goto	l2820
 21897  00B6EA                     
 21898                           ;encoder.c: 519: if(os.button2==1)
 21899  00B6EA  0101               	movlb	1	; () banked
 21900  00B6EC  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21901  00B6EE  A4D8               	btfss	status,2,c
 21902  00B6F0  D015               	goto	l2822
 21903                           
 21904                           ; BSR set to: 1
 21905                           ;encoder.c: 520: {;encoder.c: 521: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.man
      +                          ual_speed, MOTOR_MOVE_TYPE_NORMAL);
 21906  00B6F2  0E00               	movlw	0
 21907  00B6F4  0100               	movlb	0	; () banked
 21908  00B6F6  6FA1               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 21909  00B6F8  0E00               	movlw	0
 21910  00B6FA  6FA2               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 21911  00B6FC  0E00               	movlw	0
 21912  00B6FE  6FA3               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 21913  00B700  0E00               	movlw	0
 21914  00B702  6FA4               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 21915  00B704  C194  F0A5         	movff	_os+35,motor_schedule_command@speed	;volatile
 21916  00B708  C195  F0A6         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 21917  00B70C  0E00               	movlw	0
 21918  00B70E  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 21919  00B710  0EFF               	movlw	255
 21920  00B712  ECA3  F092         	call	_motor_schedule_command
 21921                           
 21922                           ;encoder.c: 522: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 21923  00B716  0E84               	movlw	132
 21924  00B718  0101               	movlb	1	; () banked
 21925  00B71A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21926  00B71C                     l2822:
 21927                           
 21928                           ; BSR set to: 1
 21929                           ;encoder.c: 523: };encoder.c: 524: if(os.encoder2Count>0)
 21930                           
 21931                           ; BSR set to: 1
 21932  00B71C  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21933  00B71E  0A80               	xorlw	128
 21934  00B720  0F7F               	addlw	-129
 21935  00B722  A0D8               	btfss	status,0,c
 21936  00B724  D06B               	goto	l2725
 21937                           
 21938                           ; BSR set to: 1
 21939                           ;encoder.c: 525: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 21940  00B726  0E82               	movlw	130
 21941  00B728  D033               	goto	L21
 21942  00B72A                     
 21943                           ; BSR set to: 1
 21944                           ;encoder.c: 528: if(os.button2==1)
 21945                           
 21946                           ; BSR set to: 1
 21947  00B72A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21948  00B72C  A4D8               	btfss	status,2,c
 21949  00B72E  D002               	goto	l2826
 21950                           
 21951                           ; BSR set to: 1
 21952                           ;encoder.c: 529: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21953  00B730  0E04               	movlw	4
 21954  00B732  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21955  00B734                     l2826:
 21956                           
 21957                           ; BSR set to: 1
 21958                           ;encoder.c: 530: if(os.encoder2Count>0)
 21959                           
 21960                           ; BSR set to: 1
 21961  00B734  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21962  00B736  0A80               	xorlw	128
 21963  00B738  0F7F               	addlw	-129
 21964  00B73A  A0D8               	btfss	status,0,c
 21965  00B73C  D002               	goto	l2827
 21966                           
 21967                           ; BSR set to: 1
 21968                           ;encoder.c: 531: os.displayState = DISPLAY_STATE_MANUAL_CW;
 21969  00B73E  0E83               	movlw	131
 21970  00B740  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21971  00B742                     l2827:
 21972                           
 21973                           ; BSR set to: 1
 21974                           ;encoder.c: 532: if(os.encoder2Count<0)
 21975                           
 21976                           ; BSR set to: 1
 21977  00B742  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21978  00B744  D05B               	goto	l2725
 21979                           
 21980                           ; BSR set to: 1
 21981                           ;encoder.c: 533: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 21982  00B746  0E81               	movlw	129
 21983  00B748  D023               	goto	L21
 21984  00B74A                     
 21985                           ; BSR set to: 1
 21986                           ;encoder.c: 536: if(os.button2==1)
 21987                           
 21988                           ; BSR set to: 1
 21989  00B74A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21990  00B74C  A4D8               	btfss	status,2,c
 21991  00B74E  D014               	goto	l2830
 21992                           
 21993                           ; BSR set to: 1
 21994                           ;encoder.c: 537: {;encoder.c: 538: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 21995  00B750  0E84               	movlw	132
 21996  00B752  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21997                           
 21998                           ; BSR set to: 1
 21999                           ;encoder.c: 539: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed, MOTOR_MO
      +                          VE_TYPE_NORMAL);
 22000  00B754  0E00               	movlw	0
 22001  00B756  0100               	movlb	0	; () banked
 22002  00B758  6FA1               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 22003  00B75A  0E00               	movlw	0
 22004  00B75C  6FA2               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 22005  00B75E  0E00               	movlw	0
 22006  00B760  6FA3               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 22007  00B762  0E00               	movlw	0
 22008  00B764  6FA4               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 22009  00B766  C194  F0A5         	movff	_os+35,motor_schedule_command@speed	;volatile
 22010  00B76A  C195  F0A6         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 22011  00B76E  0E00               	movlw	0
 22012  00B770  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 22013  00B772  0E01               	movlw	1
 22014  00B774  ECA3  F092         	call	_motor_schedule_command
 22015  00B778                     l2830:
 22016                           
 22017                           ;encoder.c: 540: };encoder.c: 541: if(os.encoder2Count<0)
 22018  00B778  0101               	movlb	1	; () banked
 22019  00B77A  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22020  00B77C  D03F               	goto	l2725
 22021                           
 22022                           ; BSR set to: 1
 22023                           ;encoder.c: 542: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22024  00B77E  0E82               	movlw	130
 22025  00B780  D007               	goto	L21
 22026  00B782                     
 22027                           ; BSR set to: 1
 22028                           ;encoder.c: 545: if(os.button2==1)
 22029                           
 22030                           ; BSR set to: 1
 22031  00B782  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22032  00B784  A4D8               	btfss	status,2,c
 22033  00B786  D03A               	goto	l2725
 22034                           
 22035                           ; BSR set to: 1
 22036                           ;encoder.c: 546: {;encoder.c: 547: motor_stop();
 22037  00B788  EC18  F0A6         	call	_motor_stop	;wreg free
 22038                           
 22039                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22040  00B78C  0E82               	movlw	130
 22041  00B78E                     L22:
 22042  00B78E  0101               	movlb	1	; () banked
 22043  00B790                     L21:
 22044  00B790  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22045                           
 22046                           ; BSR set to: 1
 22047                           ;encoder.c: 551: }
 22048                           
 22049                           ; BSR set to: 1
 22050                           ;encoder.c: 549: };encoder.c: 550: break;
 22051  00B792  D034               	goto	l2725
 22052  00B794                     l2820:
 22053                           
 22054                           ; BSR set to: 1
 22055  00B794  0101               	movlb	1	; () banked
 22056  00B796  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22057                           
 22058                           ; Switch size 1, requested type "space"
 22059                           ; Number of cases is 4, Range of values is 129 to 132
 22060                           ; switch strategies available:
 22061                           ; Name         Instructions Cycles
 22062                           ; simple_byte           13     7 (average)
 22063                           ;	Chosen strategy is simple_byte
 22064  00B798  0A81               	xorlw	129	; case 129
 22065  00B79A  B4D8               	btfsc	status,2,c
 22066  00B79C  D7A6               	goto	l2821
 22067  00B79E  0A03               	xorlw	3	; case 130
 22068  00B7A0  B4D8               	btfsc	status,2,c
 22069  00B7A2  D7C3               	goto	l2825
 22070  00B7A4  0A01               	xorlw	1	; case 131
 22071  00B7A6  B4D8               	btfsc	status,2,c
 22072  00B7A8  D7D0               	goto	l2829
 22073  00B7AA  0A07               	xorlw	7	; case 132
 22074  00B7AC  B4D8               	btfsc	status,2,c
 22075  00B7AE  D7E9               	goto	l2832
 22076                           
 22077                           ; BSR set to: 1
 22078                           ;encoder.c: 553: }
 22079                           
 22080                           ; BSR set to: 1
 22081                           ;encoder.c: 552: break;
 22082  00B7B0  D025               	goto	l2725
 22083  00B7B2                     l2690:
 22084                           
 22085                           ; BSR set to: 1
 22086                           
 22087                           ; BSR set to: 1
 22088  00B7B2  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22089  00B7B4  0BF0               	andlw	240
 22090  00B7B6  0100               	movlb	0	; () banked
 22091  00B7B8  6FCF               	movwf	??_encoder_statemachine& (0+255),b
 22092  00B7BA  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22093                           
 22094                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22095                           ; Switch size 1, requested type "space"
 22096                           ; Number of cases is 1, Range of values is 0 to 0
 22097                           ; switch strategies available:
 22098                           ; Name         Instructions Cycles
 22099                           ; simple_byte            4     3 (average)
 22100                           ;	Chosen strategy is simple_byte
 22101  00B7BC  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22102  00B7BE  0A00               	xorlw	0	; case 0
 22103  00B7C0  A4D8               	btfss	status,2,c
 22104  00B7C2  D01C               	goto	l2725
 22105                           
 22106                           ; BSR set to: 0
 22107                           ; Switch size 1, requested type "space"
 22108                           ; Number of cases is 9, Range of values is 0 to 128
 22109                           ; switch strategies available:
 22110                           ; Name         Instructions Cycles
 22111                           ; simple_byte           28    15 (average)
 22112                           ;	Chosen strategy is simple_byte
 22113  00B7C4  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 22114  00B7C6  0A00               	xorlw	0	; case 0
 22115  00B7C8  B4D8               	btfsc	status,2,c
 22116  00B7CA  D4F9               	goto	l2692
 22117  00B7CC  0A10               	xorlw	16	; case 16
 22118  00B7CE  B4D8               	btfsc	status,2,c
 22119  00B7D0  D536               	goto	l2727
 22120  00B7D2  0A30               	xorlw	48	; case 32
 22121  00B7D4  B4D8               	btfsc	status,2,c
 22122  00B7D6  D5F3               	goto	l2743
 22123  00B7D8  0A10               	xorlw	16	; case 48
 22124  00B7DA  B4D8               	btfsc	status,2,c
 22125  00B7DC  D61D               	goto	l2758
 22126  00B7DE  0A70               	xorlw	112	; case 64
 22127  00B7E0  B4D8               	btfsc	status,2,c
 22128  00B7E2  D653               	goto	l2773
 22129  00B7E4  0A10               	xorlw	16	; case 80
 22130  00B7E6  B4D8               	btfsc	status,2,c
 22131  00B7E8  D689               	goto	l2779
 22132  00B7EA  0A30               	xorlw	48	; case 96
 22133  00B7EC  B4D8               	btfsc	status,2,c
 22134  00B7EE  D6E9               	goto	l2794
 22135  00B7F0  0A10               	xorlw	16	; case 112
 22136  00B7F2  B4D8               	btfsc	status,2,c
 22137  00B7F4  D752               	goto	l2814
 22138  00B7F6  0AF0               	xorlw	240	; case 128
 22139  00B7F8  B4D8               	btfsc	status,2,c
 22140  00B7FA  D76A               	goto	l2817
 22141  00B7FC                     l2725:
 22142                           
 22143                           ;encoder.c: 556: os.encoder1Count = 0;
 22144                           
 22145                           ; BSR set to: 0
 22146  00B7FC  0E00               	movlw	0
 22147  00B7FE  0101               	movlb	1	; () banked
 22148  00B800  6F74               	movwf	(_os+3)& (0+255),b	;volatile
 22149                           
 22150                           ;encoder.c: 557: os.encoder2Count = 0;
 22151  00B802  0E00               	movlw	0
 22152  00B804  6F76               	movwf	(_os+5)& (0+255),b	;volatile
 22153                           
 22154                           ;encoder.c: 558: os.button1 = 0;
 22155  00B806  0E00               	movlw	0
 22156  00B808  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 22157                           
 22158                           ;encoder.c: 559: os.button2 = 0;
 22159  00B80A  0E00               	movlw	0
 22160  00B80C  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 22161                           
 22162                           ; BSR set to: 1
 22163  00B80E  0012               	return		;funcret
 22164  00B810                     __end_of_encoder_statemachine:
 22165                           	opt stack 0
 22166                           tblptru	equ	0xFF8
 22167                           tblptrh	equ	0xFF7
 22168                           tblptrl	equ	0xFF6
 22169                           tablat	equ	0xFF5
 22170                           prodh	equ	0xFF4
 22171                           prodl	equ	0xFF3
 22172                           intcon	equ	0xFF2
 22173                           postinc0	equ	0xFEE
 22174                           wreg	equ	0xFE8
 22175                           indf1	equ	0xFE7
 22176                           postinc1	equ	0xFE6
 22177                           postdec1	equ	0xFE5
 22178                           plusw1	equ	0xFE3
 22179                           fsr1h	equ	0xFE2
 22180                           fsr1l	equ	0xFE1
 22181                           indf2	equ	0xFDF
 22182                           postinc2	equ	0xFDE
 22183                           postdec2	equ	0xFDD
 22184                           plusw2	equ	0xFDB
 22185                           fsr2h	equ	0xFDA
 22186                           fsr2l	equ	0xFD9
 22187                           status	equ	0xFD8
 22188                           
 22189 ;; *************** function _motor_nonzero_steps_from_degrees *****************
 22190 ;; Defined at:
 22191 ;;		line 50 in file "motor.c"
 22192 ;; Parameters:    Size  Location     Type
 22193 ;;  degrees         2   47[BANK0 ] unsigned int 
 22194 ;; Auto vars:     Size  Location     Type
 22195 ;;  steps           4   51[BANK0 ] unsigned long 
 22196 ;; Return value:  Size  Location     Type
 22197 ;;                  4   47[BANK0 ] unsigned long 
 22198 ;; Registers used:
 22199 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 22200 ;; Tracked objects:
 22201 ;;		On entry : 0/0
 22202 ;;		On exit  : 0/0
 22203 ;;		Unchanged: 0/0
 22204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22205 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22206 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22208 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22209 ;;Total ram usage:        8 bytes
 22210 ;; Hardware stack levels used:    1
 22211 ;; Hardware stack levels required when called:   12
 22212 ;; This function calls:
 22213 ;;		_motor_steps_from_degrees
 22214 ;; This function is called by:
 22215 ;;		_encoder_statemachine
 22216 ;; This function uses a non-reentrant model
 22217 ;;
 22218                           
 22219                           	psect	text88
 22220  014B0A                     __ptext88:
 22221                           	opt stack 0
 22222  014B0A                     _motor_nonzero_steps_from_degrees:
 22223                           	opt stack 17
 22224                           
 22225                           ;motor.c: 52: uint32_t steps;;motor.c: 53: steps = motor_steps_from_degrees(degrees);
 22226                           
 22227                           ; BSR set to: 1
 22228                           ;incstack = 0
 22229  014B0A  C08F  F087         	movff	motor_nonzero_steps_from_degrees@degrees,motor_steps_from_degrees@degrees
 22230  014B0E  C090  F088         	movff	motor_nonzero_steps_from_degrees@degrees+1,motor_steps_from_degrees@degrees+1
 22231  014B12  EC22  F08D         	call	_motor_steps_from_degrees	;wreg free
 22232  014B16  C087  F093         	movff	?_motor_steps_from_degrees,motor_nonzero_steps_from_degrees@steps
 22233  014B1A  C088  F094         	movff	?_motor_steps_from_degrees+1,motor_nonzero_steps_from_degrees@steps+1
 22234  014B1E  C089  F095         	movff	?_motor_steps_from_degrees+2,motor_nonzero_steps_from_degrees@steps+2
 22235  014B22  C08A  F096         	movff	?_motor_steps_from_degrees+3,motor_nonzero_steps_from_degrees@steps+3
 22236                           
 22237                           ;motor.c: 54: if(steps==0)
 22238  014B26  0100               	movlb	0	; () banked
 22239  014B28  5193               	movf	motor_nonzero_steps_from_degrees@steps& (0+255),w,b
 22240  014B2A  1194               	iorwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),w,b
 22241  014B2C  1195               	iorwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),w,b
 22242  014B2E  1196               	iorwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),w,b
 22243  014B30  A4D8               	btfss	status,2,c
 22244  014B32  D008               	goto	l2420
 22245                           
 22246                           ; BSR set to: 0
 22247                           ;motor.c: 55: steps = 1;
 22248  014B34  0E01               	movlw	1
 22249  014B36  6F93               	movwf	motor_nonzero_steps_from_degrees@steps& (0+255),b
 22250  014B38  0E00               	movlw	0
 22251  014B3A  6F94               	movwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),b
 22252  014B3C  0E00               	movlw	0
 22253  014B3E  6F95               	movwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),b
 22254  014B40  0E00               	movlw	0
 22255  014B42  6F96               	movwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),b
 22256  014B44                     l2420:
 22257                           
 22258                           ; BSR set to: 0
 22259                           ;motor.c: 56: return steps;
 22260                           
 22261                           ; BSR set to: 0
 22262  014B44  C093  F08F         	movff	motor_nonzero_steps_from_degrees@steps,?_motor_nonzero_steps_from_degrees
 22263  014B48  C094  F090         	movff	motor_nonzero_steps_from_degrees@steps+1,?_motor_nonzero_steps_from_degrees+1
 22264  014B4C  C095  F091         	movff	motor_nonzero_steps_from_degrees@steps+2,?_motor_nonzero_steps_from_degrees+2
 22265  014B50  C096  F092         	movff	motor_nonzero_steps_from_degrees@steps+3,?_motor_nonzero_steps_from_degrees+3
 22266  014B54  0012               	return	
 22267  014B56                     __end_of_motor_nonzero_steps_from_degrees:
 22268                           	opt stack 0
 22269                           tblptru	equ	0xFF8
 22270                           tblptrh	equ	0xFF7
 22271                           tblptrl	equ	0xFF6
 22272                           tablat	equ	0xFF5
 22273                           prodh	equ	0xFF4
 22274                           prodl	equ	0xFF3
 22275                           intcon	equ	0xFF2
 22276                           postinc0	equ	0xFEE
 22277                           wreg	equ	0xFE8
 22278                           indf1	equ	0xFE7
 22279                           postinc1	equ	0xFE6
 22280                           postdec1	equ	0xFE5
 22281                           plusw1	equ	0xFE3
 22282                           fsr1h	equ	0xFE2
 22283                           fsr1l	equ	0xFE1
 22284                           indf2	equ	0xFDF
 22285                           postinc2	equ	0xFDE
 22286                           postdec2	equ	0xFDD
 22287                           plusw2	equ	0xFDB
 22288                           fsr2h	equ	0xFDA
 22289                           fsr2l	equ	0xFD9
 22290                           status	equ	0xFD8
 22291                           
 22292 ;; *************** function _motor_increase_manual_speed *****************
 22293 ;; Defined at:
 22294 ;;		line 539 in file "motor.c"
 22295 ;; Parameters:    Size  Location     Type
 22296 ;;		None
 22297 ;; Auto vars:     Size  Location     Type
 22298 ;;		None
 22299 ;; Return value:  Size  Location     Type
 22300 ;;                  1    wreg      void 
 22301 ;; Registers used:
 22302 ;;		wreg, status,2, status,0, cstack
 22303 ;; Tracked objects:
 22304 ;;		On entry : 0/0
 22305 ;;		On exit  : 0/0
 22306 ;;		Unchanged: 0/0
 22307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22312 ;;Total ram usage:        0 bytes
 22313 ;; Hardware stack levels used:    1
 22314 ;; Hardware stack levels required when called:   12
 22315 ;; This function calls:
 22316 ;;		_motor_set_manual_speed
 22317 ;; This function is called by:
 22318 ;;		_encoder_statemachine
 22319 ;; This function uses a non-reentrant model
 22320 ;;
 22321                           
 22322                           	psect	text89
 22323  015560                     __ptext89:
 22324                           	opt stack 0
 22325  015560                     _motor_increase_manual_speed:
 22326                           	opt stack 17
 22327                           
 22328                           ;motor.c: 542: {;motor.c: 543: motor_set_manual_speed(os.manual_speed+1);
 22329                           
 22330                           ; BSR set to: 0
 22331                           ;incstack = 0
 22332  015560  0E01               	movlw	1
 22333  015562  0101               	movlb	1	; () banked
 22334  015564  2594               	addwf	(_os+35)& (0+255),w,b	;volatile
 22335  015566  0100               	movlb	0	; () banked
 22336  015568  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 22337  01556A  0E00               	movlw	0
 22338  01556C  0101               	movlb	1	; () banked
 22339  01556E  2195               	addwfc	(_os+36)& (0+255),w,b	;volatile
 22340  015570  0100               	movlb	0	; () banked
 22341  015572  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 22342  015574  EC10  F0A5         	call	_motor_set_manual_speed	;wreg free
 22343  015578  0012               	return	
 22344  01557A                     __end_of_motor_increase_manual_speed:
 22345                           	opt stack 0
 22346                           tblptru	equ	0xFF8
 22347                           tblptrh	equ	0xFF7
 22348                           tblptrl	equ	0xFF6
 22349                           tablat	equ	0xFF5
 22350                           prodh	equ	0xFF4
 22351                           prodl	equ	0xFF3
 22352                           intcon	equ	0xFF2
 22353                           postinc0	equ	0xFEE
 22354                           wreg	equ	0xFE8
 22355                           indf1	equ	0xFE7
 22356                           postinc1	equ	0xFE6
 22357                           postdec1	equ	0xFE5
 22358                           plusw1	equ	0xFE3
 22359                           fsr1h	equ	0xFE2
 22360                           fsr1l	equ	0xFE1
 22361                           indf2	equ	0xFDF
 22362                           postinc2	equ	0xFDE
 22363                           postdec2	equ	0xFDD
 22364                           plusw2	equ	0xFDB
 22365                           fsr2h	equ	0xFDA
 22366                           fsr2l	equ	0xFD9
 22367                           status	equ	0xFD8
 22368                           
 22369 ;; *************** function _motor_divide_jump_to_nearest *****************
 22370 ;; Defined at:
 22371 ;;		line 699 in file "motor.c"
 22372 ;; Parameters:    Size  Location     Type
 22373 ;;		None
 22374 ;; Auto vars:     Size  Location     Type
 22375 ;;  divide_posit    4  107[BANK0 ] float 
 22376 ;;  nearest_posi    4  101[BANK0 ] unsigned long 
 22377 ;;  nearest_divi    2  105[BANK0 ] int 
 22378 ;; Return value:  Size  Location     Type
 22379 ;;                  1    wreg      void 
 22380 ;; Registers used:
 22381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22382 ;; Tracked objects:
 22383 ;;		On entry : 0/0
 22384 ;;		On exit  : 0/0
 22385 ;;		Unchanged: 0/0
 22386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22388 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22390 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22391 ;;Total ram usage:       10 bytes
 22392 ;; Hardware stack levels used:    1
 22393 ;; Hardware stack levels required when called:   15
 22394 ;; This function calls:
 22395 ;;		___fladd
 22396 ;;		___fldiv
 22397 ;;		___flmul
 22398 ;;		___fltol
 22399 ;;		___xxtofl
 22400 ;;		__step_position_from_divide_position
 22401 ;;		_motor_go_to_steps_position
 22402 ;; This function is called by:
 22403 ;;		_encoder_statemachine
 22404 ;; This function uses a non-reentrant model
 22405 ;;
 22406                           
 22407                           	psect	text90
 22408  00F9F0                     __ptext90:
 22409                           	opt stack 0
 22410  00F9F0                     _motor_divide_jump_to_nearest:
 22411                           	opt stack 14
 22412                           
 22413                           ;motor.c: 701: float divide_position_float;;motor.c: 702: int16_t nearest_divide_positio
      +                          n;;motor.c: 703: uint32_t nearest_position_in_steps;;motor.c: 705: divide_position_float
      +                           = (float) os.current_position_in_steps;
 22414                           
 22415                           ;incstack = 0
 22416  00F9F0  C178  F060         	movff	_os+7,___xxtofl@val	;volatile
 22417  00F9F4  C179  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 22418  00F9F8  C17A  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 22419  00F9FC  C17B  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 22420  00FA00  0E00               	movlw	0
 22421  00FA02  EC8B  F07F         	call	___xxtofl
 22422  00FA06  C060  F0CB         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 22423  00FA0A  C061  F0CC         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 22424  00FA0E  C062  F0CD         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 22425  00FA12  C063  F0CE         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 22426                           
 22427                           ;motor.c: 706: divide_position_float *= (float) os.division;
 22428  00FA16  C0CB  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 22429  00FA1A  C0CC  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 22430  00FA1E  C0CD  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 22431  00FA22  C0CE  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 22432  00FA26  EE21  F084         	lfsr	2,_os+19	;volatile
 22433  00FA2A  CFDE F060          	movff	postinc2,___xxtofl@val
 22434  00FA2E  CFDD F061          	movff	postdec2,___xxtofl@val+1
 22435  00FA32  0100               	movlb	0	; () banked
 22436  00FA34  0E00               	movlw	0
 22437  00FA36  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22438  00FA38  0EFF               	movlw	-1
 22439  00FA3A  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 22440  00FA3C  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 22441  00FA3E  0E01               	movlw	1
 22442  00FA40  EC8B  F07F         	call	___xxtofl
 22443  00FA44  C060  F072         	movff	?___xxtofl,___flmul@a
 22444  00FA48  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 22445  00FA4C  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 22446  00FA50  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 22447  00FA54  EC38  F066         	call	___flmul	;wreg free
 22448  00FA58  C06E  F0CB         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 22449  00FA5C  C06F  F0CC         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 22450  00FA60  C070  F0CD         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 22451  00FA64  C071  F0CE         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 22452                           
 22453                           ;motor.c: 707: divide_position_float /= (float) config.full_circle_in_steps;
 22454  00FA68  C0CB  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 22455  00FA6C  C0CC  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 22456  00FA70  C0CD  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 22457  00FA74  C0CE  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 22458  00FA78  C1A1  F060         	movff	_config,___xxtofl@val
 22459  00FA7C  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 22460  00FA80  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 22461  00FA84  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 22462  00FA88  0E00               	movlw	0
 22463  00FA8A  EC8B  F07F         	call	___xxtofl
 22464  00FA8E  C060  F072         	movff	?___xxtofl,___fldiv@a
 22465  00FA92  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 22466  00FA96  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 22467  00FA9A  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 22468  00FA9E  ECFC  F06D         	call	___fldiv	;wreg free
 22469  00FAA2  C06E  F0CB         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 22470  00FAA6  C06F  F0CC         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 22471  00FAAA  C070  F0CD         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 22472  00FAAE  C071  F0CE         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 22473                           
 22474                           ;motor.c: 708: divide_position_float += 0.5;
 22475  00FAB2  C0CB  F072         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 22476  00FAB6  C0CC  F073         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 22477  00FABA  C0CD  F074         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 22478  00FABE  C0CE  F075         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 22479  00FAC2  0E00               	movlw	0
 22480  00FAC4  0100               	movlb	0	; () banked
 22481  00FAC6  6F76               	movwf	___fladd@a& (0+255),b
 22482  00FAC8  0E00               	movlw	0
 22483  00FACA  6F77               	movwf	(___fladd@a+1)& (0+255),b
 22484  00FACC  0E00               	movlw	0
 22485  00FACE  6F78               	movwf	(___fladd@a+2)& (0+255),b
 22486  00FAD0  0E3F               	movlw	63
 22487  00FAD2  6F79               	movwf	(___fladd@a+3)& (0+255),b
 22488  00FAD4  ECE1  F067         	call	___fladd	;wreg free
 22489  00FAD8  C072  F0CB         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 22490  00FADC  C073  F0CC         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 22491  00FAE0  C074  F0CD         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 22492  00FAE4  C075  F0CE         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 22493                           
 22494                           ;motor.c: 709: nearest_divide_position = (int16_t) divide_position_float;
 22495  00FAE8  C0CB  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 22496  00FAEC  C0CC  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 22497  00FAF0  C0CD  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 22498  00FAF4  C0CE  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 22499  00FAF8  ECE3  F08E         	call	___fltol	;wreg free
 22500  00FAFC  C060  F0C9         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 22501  00FB00  C061  F0CA         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 22502                           
 22503                           ;motor.c: 712: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 22504  00FB04  C0C9  F087         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 22505  00FB08  C0CA  F088         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 22506  00FB0C  ECC5  F08B         	call	__step_position_from_divide_position	;wreg free
 22507  00FB10  C087  F0C5         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 22508  00FB14  C088  F0C6         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 22509  00FB18  C089  F0C7         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 22510  00FB1C  C08A  F0C8         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 22511                           
 22512                           ;motor.c: 715: os.divide_position = nearest_divide_position;
 22513  00FB20  C0C9  F187         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+22	;volatile
 22514  00FB24  C0CA  F188         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+23	;volatile
 22515                           
 22516                           ;motor.c: 716: motor_go_to_steps_position(nearest_position_in_steps);
 22517  00FB28  C0C5  F0A9         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_go_to_steps_position
      +                          @target_position
 22518  00FB2C  C0C6  F0AA         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_go_to_steps_positi
      +                          on@target_position+1
 22519  00FB30  C0C7  F0AB         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_go_to_steps_positi
      +                          on@target_position+2
 22520  00FB34  C0C8  F0AC         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_go_to_steps_positi
      +                          on@target_position+3
 22521  00FB38  EC7F  F069         	call	_motor_go_to_steps_position	;wreg free
 22522  00FB3C  0012               	return		;funcret
 22523  00FB3E                     __end_of_motor_divide_jump_to_nearest:
 22524                           	opt stack 0
 22525                           tblptru	equ	0xFF8
 22526                           tblptrh	equ	0xFF7
 22527                           tblptrl	equ	0xFF6
 22528                           tablat	equ	0xFF5
 22529                           prodh	equ	0xFF4
 22530                           prodl	equ	0xFF3
 22531                           intcon	equ	0xFF2
 22532                           postinc0	equ	0xFEE
 22533                           wreg	equ	0xFE8
 22534                           indf1	equ	0xFE7
 22535                           postinc1	equ	0xFE6
 22536                           postdec1	equ	0xFE5
 22537                           plusw1	equ	0xFE3
 22538                           fsr1h	equ	0xFE2
 22539                           fsr1l	equ	0xFE1
 22540                           indf2	equ	0xFDF
 22541                           postinc2	equ	0xFDE
 22542                           postdec2	equ	0xFDD
 22543                           plusw2	equ	0xFDB
 22544                           fsr2h	equ	0xFDA
 22545                           fsr2l	equ	0xFD9
 22546                           status	equ	0xFD8
 22547                           
 22548 ;; *************** function _motor_divide_jump *****************
 22549 ;; Defined at:
 22550 ;;		line 668 in file "motor.c"
 22551 ;; Parameters:    Size  Location     Type
 22552 ;;		None
 22553 ;; Auto vars:     Size  Location     Type
 22554 ;;  target_posit    4  102[BANK0 ] unsigned long 
 22555 ;;  target_divid    2  106[BANK0 ] int 
 22556 ;; Return value:  Size  Location     Type
 22557 ;;                  1    wreg      void 
 22558 ;; Registers used:
 22559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22560 ;; Tracked objects:
 22561 ;;		On entry : 0/0
 22562 ;;		On exit  : 0/0
 22563 ;;		Unchanged: 0/0
 22564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22566 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22568 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22569 ;;Total ram usage:        7 bytes
 22570 ;; Hardware stack levels used:    1
 22571 ;; Hardware stack levels required when called:   15
 22572 ;; This function calls:
 22573 ;;		__step_position_from_divide_position
 22574 ;;		_motor_go_to_steps_position
 22575 ;; This function is called by:
 22576 ;;		_encoder_statemachine
 22577 ;; This function uses a non-reentrant model
 22578 ;;
 22579                           
 22580                           	psect	text91
 22581  012D4A                     __ptext91:
 22582                           	opt stack 0
 22583  012D4A                     _motor_divide_jump:
 22584                           	opt stack 14
 22585                           
 22586                           ;motor.c: 670: int16_t target_divide_position;;motor.c: 671: uint32_t target_position_in
      +                          _steps;;motor.c: 674: if(os.divide_jump_size>0)
 22587                           
 22588                           ;incstack = 0
 22589  012D4A  0101               	movlb	1	; () banked
 22590  012D4C  BF8A               	btfsc	(_os+25)& (0+255),7,b	;volatile
 22591  012D4E  D023               	goto	l2557
 22592  012D50  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 22593  012D52  E103               	bnz	u16470
 22594  012D54  0589               	decf	(_os+24)& (0+255),w,b	;volatile
 22595  012D56  A0D8               	btfss	status,0,c
 22596  012D58  D01E               	goto	l2557
 22597  012D5A                     u16470:
 22598                           
 22599                           ; BSR set to: 1
 22600                           ;motor.c: 675: {;motor.c: 676: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 22601  012D5A  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 22602  012D5C  2587               	addwf	(_os+22)& (0+255),w,b	;volatile
 22603  012D5E  0100               	movlb	0	; () banked
 22604  012D60  6FCA               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 22605  012D62  0101               	movlb	1	; () banked
 22606  012D64  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 22607  012D66  2188               	addwfc	(_os+23)& (0+255),w,b	;volatile
 22608  012D68  0100               	movlb	0	; () banked
 22609  012D6A  6FCB               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 22610                           
 22611                           ;motor.c: 677: if(target_divide_position>=os.division)
 22612  012D6C  0101               	movlb	1	; () banked
 22613  012D6E  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 22614  012D70  0100               	movlb	0	; () banked
 22615  012D72  5DCA               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 22616  012D74  51CB               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 22617  012D76  0A80               	xorlw	128
 22618  012D78  6FC5               	movwf	??_motor_divide_jump& (0+255),b
 22619  012D7A  0101               	movlb	1	; () banked
 22620  012D7C  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 22621  012D7E  0A80               	xorlw	128
 22622  012D80  0100               	movlb	0	; () banked
 22623  012D82  59C5               	subwfb	??_motor_divide_jump& (0+255),w,b
 22624  012D84  A0D8               	btfss	status,0,c
 22625  012D86  D019               	goto	l2560
 22626                           
 22627                           ; BSR set to: 0
 22628                           ;motor.c: 678: {;motor.c: 679: target_divide_position -= os.division;
 22629  012D88  EE21  F084         	lfsr	2,_os+19	;volatile
 22630  012D8C  50DE               	movf	postinc2,w,c
 22631  012D8E  5FCA               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 22632  012D90  50DD               	movf	postdec2,w,c
 22633  012D92  5BCB               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 22634                           
 22635                           ; BSR set to: 0
 22636                           ;motor.c: 680: };motor.c: 681: }
 22637  012D94  D012               	goto	l2560
 22638  012D96                     l2557:
 22639                           
 22640                           ;motor.c: 682: else;motor.c: 683: {;motor.c: 684: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 22641                           
 22642                           ; BSR set to: 0
 22643  012D96  0101               	movlb	1	; () banked
 22644  012D98  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 22645  012D9A  2587               	addwf	(_os+22)& (0+255),w,b	;volatile
 22646  012D9C  0100               	movlb	0	; () banked
 22647  012D9E  6FCA               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 22648  012DA0  0101               	movlb	1	; () banked
 22649  012DA2  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 22650  012DA4  2188               	addwfc	(_os+23)& (0+255),w,b	;volatile
 22651  012DA6  0100               	movlb	0	; () banked
 22652  012DA8  6FCB               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 22653                           
 22654                           ;motor.c: 685: if(target_divide_position<0)
 22655  012DAA  AFCB               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 22656  012DAC  D006               	goto	l2560
 22657                           
 22658                           ; BSR set to: 0
 22659                           ;motor.c: 686: {;motor.c: 687: target_divide_position += os.division;
 22660  012DAE  EE21  F084         	lfsr	2,_os+19	;volatile
 22661  012DB2  50DE               	movf	postinc2,w,c
 22662  012DB4  27CA               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 22663  012DB6  50DD               	movf	postdec2,w,c
 22664  012DB8  23CB               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 22665  012DBA                     l2560:
 22666                           
 22667                           ; BSR set to: 0
 22668                           ;motor.c: 688: };motor.c: 689: };motor.c: 692: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 22669                           
 22670                           ; BSR set to: 0
 22671                           
 22672                           ; BSR set to: 0
 22673  012DBA  C0CA  F087         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 22674  012DBE  C0CB  F088         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 22675  012DC2  ECC5  F08B         	call	__step_position_from_divide_position	;wreg free
 22676  012DC6  C087  F0C6         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 22677  012DCA  C088  F0C7         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 22678  012DCE  C089  F0C8         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 22679  012DD2  C08A  F0C9         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 22680                           
 22681                           ;motor.c: 695: os.divide_position = target_divide_position;
 22682  012DD6  C0CA  F187         	movff	motor_divide_jump@target_divide_position,_os+22	;volatile
 22683  012DDA  C0CB  F188         	movff	motor_divide_jump@target_divide_position+1,_os+23	;volatile
 22684                           
 22685                           ;motor.c: 696: motor_go_to_steps_position(target_position_in_steps);
 22686  012DDE  C0C6  F0A9         	movff	motor_divide_jump@target_position_in_steps,motor_go_to_steps_position@target_posi
      +                          tion
 22687  012DE2  C0C7  F0AA         	movff	motor_divide_jump@target_position_in_steps+1,motor_go_to_steps_position@target_po
      +                          sition+1
 22688  012DE6  C0C8  F0AB         	movff	motor_divide_jump@target_position_in_steps+2,motor_go_to_steps_position@target_po
      +                          sition+2
 22689  012DEA  C0C9  F0AC         	movff	motor_divide_jump@target_position_in_steps+3,motor_go_to_steps_position@target_po
      +                          sition+3
 22690  012DEE  EC7F  F069         	call	_motor_go_to_steps_position	;wreg free
 22691  012DF2  0012               	return		;funcret
 22692  012DF4                     __end_of_motor_divide_jump:
 22693                           	opt stack 0
 22694                           tblptru	equ	0xFF8
 22695                           tblptrh	equ	0xFF7
 22696                           tblptrl	equ	0xFF6
 22697                           tablat	equ	0xFF5
 22698                           prodh	equ	0xFF4
 22699                           prodl	equ	0xFF3
 22700                           intcon	equ	0xFF2
 22701                           postinc0	equ	0xFEE
 22702                           wreg	equ	0xFE8
 22703                           indf1	equ	0xFE7
 22704                           postinc1	equ	0xFE6
 22705                           postdec1	equ	0xFE5
 22706                           plusw1	equ	0xFE3
 22707                           fsr1h	equ	0xFE2
 22708                           fsr1l	equ	0xFE1
 22709                           indf2	equ	0xFDF
 22710                           postinc2	equ	0xFDE
 22711                           postdec2	equ	0xFDD
 22712                           plusw2	equ	0xFDB
 22713                           fsr2h	equ	0xFDA
 22714                           fsr2l	equ	0xFD9
 22715                           status	equ	0xFD8
 22716                           
 22717 ;; *************** function __step_position_from_divide_position *****************
 22718 ;; Defined at:
 22719 ;;		line 92 in file "motor.c"
 22720 ;; Parameters:    Size  Location     Type
 22721 ;;  divide_posit    2   39[BANK0 ] int 
 22722 ;; Auto vars:     Size  Location     Type
 22723 ;;  target_posit    4   43[BANK0 ] float 
 22724 ;; Return value:  Size  Location     Type
 22725 ;;                  4   39[BANK0 ] unsigned long 
 22726 ;; Registers used:
 22727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22728 ;; Tracked objects:
 22729 ;;		On entry : 0/0
 22730 ;;		On exit  : 0/0
 22731 ;;		Unchanged: 0/0
 22732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22733 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22734 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22736 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22737 ;;Total ram usage:        8 bytes
 22738 ;; Hardware stack levels used:    1
 22739 ;; Hardware stack levels required when called:   11
 22740 ;; This function calls:
 22741 ;;		___fldiv
 22742 ;;		___flmul
 22743 ;;		___fltol
 22744 ;;		___xxtofl
 22745 ;; This function is called by:
 22746 ;;		_motor_divide_jump
 22747 ;;		_motor_divide_jump_to_nearest
 22748 ;; This function uses a non-reentrant model
 22749 ;;
 22750                           
 22751                           	psect	text92
 22752  01178A                     __ptext92:
 22753                           	opt stack 0
 22754  01178A                     __step_position_from_divide_position:
 22755                           	opt stack 17
 22756                           
 22757                           ;motor.c: 94: float target_position;;motor.c: 97: target_position = (float) config.full_
      +                          circle_in_steps;
 22758                           
 22759                           ;incstack = 0
 22760  01178A  C1A1  F060         	movff	_config,___xxtofl@val
 22761  01178E  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 22762  011792  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 22763  011796  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 22764  01179A  0E00               	movlw	0
 22765  01179C  EC8B  F07F         	call	___xxtofl
 22766  0117A0  C060  F08B         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 22767  0117A4  C061  F08C         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 22768  0117A8  C062  F08D         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 22769  0117AC  C063  F08E         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 22770                           
 22771                           ;motor.c: 98: target_position *= (float) divide_position;
 22772  0117B0  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___flmul@b
 22773  0117B4  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 22774  0117B8  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 22775  0117BC  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 22776  0117C0  C087  F060         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 22777  0117C4  C088  F061         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 22778  0117C8  0100               	movlb	0	; () banked
 22779  0117CA  0E00               	movlw	0
 22780  0117CC  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22781  0117CE  0EFF               	movlw	-1
 22782  0117D0  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 22783  0117D2  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 22784  0117D4  0E01               	movlw	1
 22785  0117D6  EC8B  F07F         	call	___xxtofl
 22786  0117DA  C060  F072         	movff	?___xxtofl,___flmul@a
 22787  0117DE  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 22788  0117E2  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 22789  0117E6  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 22790  0117EA  EC38  F066         	call	___flmul	;wreg free
 22791  0117EE  C06E  F08B         	movff	?___flmul,__step_position_from_divide_position@target_position
 22792  0117F2  C06F  F08C         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 22793  0117F6  C070  F08D         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 22794  0117FA  C071  F08E         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 22795                           
 22796                           ;motor.c: 99: target_position /= (float) os.division;
 22797  0117FE  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 22798  011802  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 22799  011806  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 22800  01180A  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 22801  01180E  EE21  F084         	lfsr	2,_os+19	;volatile
 22802  011812  CFDE F060          	movff	postinc2,___xxtofl@val
 22803  011816  CFDD F061          	movff	postdec2,___xxtofl@val+1
 22804  01181A  0100               	movlb	0	; () banked
 22805  01181C  0E00               	movlw	0
 22806  01181E  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 22807  011820  0EFF               	movlw	-1
 22808  011822  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 22809  011824  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 22810  011826  0E01               	movlw	1
 22811  011828  EC8B  F07F         	call	___xxtofl
 22812  01182C  C060  F072         	movff	?___xxtofl,___fldiv@a
 22813  011830  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 22814  011834  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 22815  011838  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 22816  01183C  ECFC  F06D         	call	___fldiv	;wreg free
 22817  011840  C06E  F08B         	movff	?___fldiv,__step_position_from_divide_position@target_position
 22818  011844  C06F  F08C         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 22819  011848  C070  F08D         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 22820  01184C  C071  F08E         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 22821                           
 22822                           ;motor.c: 101: return (uint32_t) target_position;
 22823  011850  C08B  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 22824  011854  C08C  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 22825  011858  C08D  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 22826  01185C  C08E  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 22827  011860  ECE3  F08E         	call	___fltol	;wreg free
 22828  011864  C060  F087         	movff	?___fltol,?__step_position_from_divide_position
 22829  011868  C061  F088         	movff	?___fltol+1,?__step_position_from_divide_position+1
 22830  01186C  C062  F089         	movff	?___fltol+2,?__step_position_from_divide_position+2
 22831  011870  C063  F08A         	movff	?___fltol+3,?__step_position_from_divide_position+3
 22832  011874  0012               	return	
 22833  011876                     __end_of__step_position_from_divide_position:
 22834                           	opt stack 0
 22835                           tblptru	equ	0xFF8
 22836                           tblptrh	equ	0xFF7
 22837                           tblptrl	equ	0xFF6
 22838                           tablat	equ	0xFF5
 22839                           prodh	equ	0xFF4
 22840                           prodl	equ	0xFF3
 22841                           intcon	equ	0xFF2
 22842                           postinc0	equ	0xFEE
 22843                           wreg	equ	0xFE8
 22844                           indf1	equ	0xFE7
 22845                           postinc1	equ	0xFE6
 22846                           postdec1	equ	0xFE5
 22847                           plusw1	equ	0xFE3
 22848                           fsr1h	equ	0xFE2
 22849                           fsr1l	equ	0xFE1
 22850                           indf2	equ	0xFDF
 22851                           postinc2	equ	0xFDE
 22852                           postdec2	equ	0xFDD
 22853                           plusw2	equ	0xFDB
 22854                           fsr2h	equ	0xFDA
 22855                           fsr2l	equ	0xFD9
 22856                           status	equ	0xFD8
 22857                           
 22858 ;; *************** function _motor_decrease_manual_speed *****************
 22859 ;; Defined at:
 22860 ;;		line 547 in file "motor.c"
 22861 ;; Parameters:    Size  Location     Type
 22862 ;;		None
 22863 ;; Auto vars:     Size  Location     Type
 22864 ;;		None
 22865 ;; Return value:  Size  Location     Type
 22866 ;;                  1    wreg      void 
 22867 ;; Registers used:
 22868 ;;		wreg, status,2, status,0, cstack
 22869 ;; Tracked objects:
 22870 ;;		On entry : 0/0
 22871 ;;		On exit  : 0/0
 22872 ;;		Unchanged: 0/0
 22873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22878 ;;Total ram usage:        0 bytes
 22879 ;; Hardware stack levels used:    1
 22880 ;; Hardware stack levels required when called:   12
 22881 ;; This function calls:
 22882 ;;		_motor_set_manual_speed
 22883 ;; This function is called by:
 22884 ;;		_encoder_statemachine
 22885 ;; This function uses a non-reentrant model
 22886 ;;
 22887                           
 22888                           	psect	text93
 22889  01548E                     __ptext93:
 22890                           	opt stack 0
 22891  01548E                     _motor_decrease_manual_speed:
 22892                           	opt stack 17
 22893                           
 22894                           ;motor.c: 549: if(os.manual_speed>0)
 22895                           
 22896                           ;incstack = 0
 22897  01548E  0101               	movlb	1	; () banked
 22898  015490  5194               	movf	(_os+35)& (0+255),w,b	;volatile
 22899  015492  1195               	iorwf	(_os+36)& (0+255),w,b	;volatile
 22900  015494  B4D8               	btfsc	status,2,c
 22901  015496  0012               	return	
 22902                           
 22903                           ; BSR set to: 1
 22904                           ;motor.c: 550: {;motor.c: 551: motor_set_manual_speed(os.manual_speed-1);
 22905  015498  0EFF               	movlw	255
 22906  01549A  2594               	addwf	(_os+35)& (0+255),w,b	;volatile
 22907  01549C  0100               	movlb	0	; () banked
 22908  01549E  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 22909  0154A0  0EFF               	movlw	255
 22910  0154A2  0101               	movlb	1	; () banked
 22911  0154A4  2195               	addwfc	(_os+36)& (0+255),w,b	;volatile
 22912  0154A6  0100               	movlb	0	; () banked
 22913  0154A8  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 22914  0154AA  EC10  F0A5         	call	_motor_set_manual_speed	;wreg free
 22915  0154AE  0012               	return	
 22916  0154B0                     __end_of_motor_decrease_manual_speed:
 22917                           	opt stack 0
 22918                           tblptru	equ	0xFF8
 22919                           tblptrh	equ	0xFF7
 22920                           tblptrl	equ	0xFF6
 22921                           tablat	equ	0xFF5
 22922                           prodh	equ	0xFF4
 22923                           prodl	equ	0xFF3
 22924                           intcon	equ	0xFF2
 22925                           postinc0	equ	0xFEE
 22926                           wreg	equ	0xFE8
 22927                           indf1	equ	0xFE7
 22928                           postinc1	equ	0xFE6
 22929                           postdec1	equ	0xFE5
 22930                           plusw1	equ	0xFE3
 22931                           fsr1h	equ	0xFE2
 22932                           fsr1l	equ	0xFE1
 22933                           indf2	equ	0xFDF
 22934                           postinc2	equ	0xFDE
 22935                           postdec2	equ	0xFDD
 22936                           plusw2	equ	0xFDB
 22937                           fsr2h	equ	0xFDA
 22938                           fsr2l	equ	0xFD9
 22939                           status	equ	0xFD8
 22940                           
 22941 ;; *************** function _motor_arc_move *****************
 22942 ;; Defined at:
 22943 ;;		line 719 in file "motor.c"
 22944 ;; Parameters:    Size  Location     Type
 22945 ;;  direction       1    wreg     enum E6622
 22946 ;; Auto vars:     Size  Location     Type
 22947 ;;  direction       1   77[BANK0 ] enum E6622
 22948 ;;  arc_in_steps    4   78[BANK0 ] float 
 22949 ;; Return value:  Size  Location     Type
 22950 ;;                  1    wreg      void 
 22951 ;; Registers used:
 22952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22953 ;; Tracked objects:
 22954 ;;		On entry : 0/0
 22955 ;;		On exit  : 0/0
 22956 ;;		Unchanged: 0/0
 22957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22959 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22961 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22962 ;;Total ram usage:        9 bytes
 22963 ;; Hardware stack levels used:    1
 22964 ;; Hardware stack levels required when called:   14
 22965 ;; This function calls:
 22966 ;;		___fldiv
 22967 ;;		___flmul
 22968 ;;		___fltol
 22969 ;;		___xxtofl
 22970 ;;		_motor_schedule_command
 22971 ;; This function is called by:
 22972 ;;		_encoder_statemachine
 22973 ;; This function uses a non-reentrant model
 22974 ;;
 22975                           
 22976                           	psect	text94
 22977  0114B6                     __ptext94:
 22978                           	opt stack 0
 22979  0114B6                     _motor_arc_move:
 22980                           	opt stack 15
 22981                           
 22982                           ;incstack = 0
 22983                           ;motor_arc_move@direction stored from wreg
 22984  0114B6  0100               	movlb	0	; () banked
 22985  0114B8  6FAD               	movwf	motor_arc_move@direction& (0+255),b
 22986                           
 22987                           ;motor.c: 721: float arc_in_steps;;motor.c: 723: arc_in_steps = (float) os.arc_size;
 22988  0114BA  C18D  F060         	movff	_os+28,___xxtofl@val	;volatile
 22989  0114BE  C18E  F061         	movff	_os+29,___xxtofl@val+1	;volatile
 22990  0114C2  C18F  F062         	movff	_os+30,___xxtofl@val+2	;volatile
 22991  0114C6  C190  F063         	movff	_os+31,___xxtofl@val+3	;volatile
 22992  0114CA  0E01               	movlw	1
 22993  0114CC  EC8B  F07F         	call	___xxtofl
 22994  0114D0  C060  F0AE         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 22995  0114D4  C061  F0AF         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 22996  0114D8  C062  F0B0         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 22997  0114DC  C063  F0B1         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 22998                           
 22999                           ;motor.c: 724: arc_in_steps *= (float) config.full_circle_in_steps;
 23000  0114E0  C0AE  F06E         	movff	motor_arc_move@arc_in_steps,___flmul@b
 23001  0114E4  C0AF  F06F         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 23002  0114E8  C0B0  F070         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 23003  0114EC  C0B1  F071         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 23004  0114F0  C1A1  F060         	movff	_config,___xxtofl@val
 23005  0114F4  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 23006  0114F8  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 23007  0114FC  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 23008  011500  0E00               	movlw	0
 23009  011502  EC8B  F07F         	call	___xxtofl
 23010  011506  C060  F072         	movff	?___xxtofl,___flmul@a
 23011  01150A  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 23012  01150E  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 23013  011512  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 23014  011516  EC38  F066         	call	___flmul	;wreg free
 23015  01151A  C06E  F0AE         	movff	?___flmul,motor_arc_move@arc_in_steps
 23016  01151E  C06F  F0AF         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 23017  011522  C070  F0B0         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 23018  011526  C071  F0B1         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 23019                           
 23020                           ;motor.c: 725: arc_in_steps /= (float) 36000;
 23021  01152A  C0AE  F06E         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 23022  01152E  C0AF  F06F         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 23023  011532  C0B0  F070         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 23024  011536  C0B1  F071         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 23025  01153A  0E00               	movlw	0
 23026  01153C  0100               	movlb	0	; () banked
 23027  01153E  6F72               	movwf	___fldiv@a& (0+255),b
 23028  011540  0EA0               	movlw	160
 23029  011542  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 23030  011544  0E0C               	movlw	12
 23031  011546  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 23032  011548  0E47               	movlw	71
 23033  01154A  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 23034  01154C  ECFC  F06D         	call	___fldiv	;wreg free
 23035  011550  C06E  F0AE         	movff	?___fldiv,motor_arc_move@arc_in_steps
 23036  011554  C06F  F0AF         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 23037  011558  C070  F0B0         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 23038  01155C  C071  F0B1         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 23039                           
 23040                           ;motor.c: 726: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed,
      +                           MOTOR_MOVE_TYPE_NORMAL);
 23041  011560  C0AE  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 23042  011564  C0AF  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 23043  011568  C0B0  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 23044  01156C  C0B1  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 23045  011570  ECE3  F08E         	call	___fltol	;wreg free
 23046  011574  C060  F0A9         	movff	?___fltol,_motor_arc_move$8822
 23047  011578  C061  F0AA         	movff	?___fltol+1,_motor_arc_move$8822+1
 23048  01157C  C062  F0AB         	movff	?___fltol+2,_motor_arc_move$8822+2
 23049  011580  C063  F0AC         	movff	?___fltol+3,_motor_arc_move$8822+3
 23050                           
 23051                           ;motor.c: 726: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed,
      +                           MOTOR_MOVE_TYPE_NORMAL);
 23052  011584  C0A9  F0A1         	movff	_motor_arc_move$8822,motor_schedule_command@distance_in_steps
 23053  011588  C0AA  F0A2         	movff	_motor_arc_move$8822+1,motor_schedule_command@distance_in_steps+1
 23054  01158C  C0AB  F0A3         	movff	_motor_arc_move$8822+2,motor_schedule_command@distance_in_steps+2
 23055  011590  C0AC  F0A4         	movff	_motor_arc_move$8822+3,motor_schedule_command@distance_in_steps+3
 23056  011594  C191  F0A5         	movff	_os+32,motor_schedule_command@speed	;volatile
 23057  011598  C192  F0A6         	movff	_os+33,motor_schedule_command@speed+1	;volatile
 23058  01159C  0E00               	movlw	0
 23059  01159E  0100               	movlb	0	; () banked
 23060  0115A0  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 23061  0115A2  51AD               	movf	motor_arc_move@direction& (0+255),w,b
 23062  0115A4  ECA3  F092         	call	_motor_schedule_command
 23063  0115A8  0012               	return		;funcret
 23064  0115AA                     __end_of_motor_arc_move:
 23065                           	opt stack 0
 23066                           tblptru	equ	0xFF8
 23067                           tblptrh	equ	0xFF7
 23068                           tblptrl	equ	0xFF6
 23069                           tablat	equ	0xFF5
 23070                           prodh	equ	0xFF4
 23071                           prodl	equ	0xFF3
 23072                           intcon	equ	0xFF2
 23073                           postinc0	equ	0xFEE
 23074                           wreg	equ	0xFE8
 23075                           indf1	equ	0xFE7
 23076                           postinc1	equ	0xFE6
 23077                           postdec1	equ	0xFE5
 23078                           plusw1	equ	0xFE3
 23079                           fsr1h	equ	0xFE2
 23080                           fsr1l	equ	0xFE1
 23081                           indf2	equ	0xFDF
 23082                           postinc2	equ	0xFDE
 23083                           postdec2	equ	0xFDD
 23084                           plusw2	equ	0xFDB
 23085                           fsr2h	equ	0xFDA
 23086                           fsr2l	equ	0xFD9
 23087                           status	equ	0xFD8
 23088                           
 23089 ;; *************** function __encoder_next_setup_stepsize *****************
 23090 ;; Defined at:
 23091 ;;		line 24 in file "encoder.c"
 23092 ;; Parameters:    Size  Location     Type
 23093 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 23094 ;; Auto vars:     Size  Location     Type
 23095 ;;		None
 23096 ;; Return value:  Size  Location     Type
 23097 ;;                  2    0[BANK0 ] unsigned int 
 23098 ;; Registers used:
 23099 ;;		wreg, status,2, status,0
 23100 ;; Tracked objects:
 23101 ;;		On entry : 0/0
 23102 ;;		On exit  : 0/0
 23103 ;;		Unchanged: 0/0
 23104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23105 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23107 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23108 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23109 ;;Total ram usage:        4 bytes
 23110 ;; Hardware stack levels used:    1
 23111 ;; Hardware stack levels required when called:   10
 23112 ;; This function calls:
 23113 ;;		Nothing
 23114 ;; This function is called by:
 23115 ;;		_encoder_statemachine
 23116 ;; This function uses a non-reentrant model
 23117 ;;
 23118                           
 23119                           	psect	text95
 23120  013BE8                     __ptext95:
 23121                           	opt stack 0
 23122  013BE8                     __encoder_next_setup_stepsize:
 23123                           	opt stack 19
 23124                           
 23125                           ;encoder.c: 26: switch(old_stepsize)
 23126                           
 23127                           ;incstack = 0
 23128  013BE8  D01A               	goto	l2621
 23129  013BEA                     
 23130                           ;encoder.c: 29: return 100;
 23131  013BEA  0E00               	movlw	0
 23132  013BEC  0100               	movlb	0	; () banked
 23133  013BEE  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 23134  013BF0  0E64               	movlw	100
 23135  013BF2  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 23136                           
 23137                           ; BSR set to: 0
 23138  013BF4  0012               	return	
 23139  013BF6                     
 23140                           ; BSR set to: 0
 23141                           ;encoder.c: 31: return 10;
 23142                           
 23143                           ; BSR set to: 0
 23144  013BF6  0E00               	movlw	0
 23145  013BF8  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 23146  013BFA  0E0A               	movlw	10
 23147  013BFC  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 23148                           
 23149                           ; BSR set to: 0
 23150  013BFE  0012               	return	
 23151  013C00                     
 23152                           ; BSR set to: 0
 23153                           ;encoder.c: 33: return 1;
 23154                           
 23155                           ; BSR set to: 0
 23156  013C00  0E00               	movlw	0
 23157  013C02  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 23158  013C04  0E01               	movlw	1
 23159  013C06  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 23160                           
 23161                           ; BSR set to: 0
 23162  013C08  0012               	return	
 23163  013C0A                     
 23164                           ; BSR set to: 0
 23165                           ;encoder.c: 35: return 1000;
 23166                           
 23167                           ; BSR set to: 0
 23168  013C0A  0E03               	movlw	3
 23169  013C0C  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 23170  013C0E  0EE8               	movlw	232
 23171  013C10  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 23172                           
 23173                           ; BSR set to: 0
 23174  013C12  0012               	return	
 23175  013C14                     
 23176                           ; BSR set to: 0
 23177                           ;encoder.c: 37: return 100;
 23178                           
 23179                           ; BSR set to: 0
 23180  013C14  0E00               	movlw	0
 23181  013C16  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 23182  013C18  0E64               	movlw	100
 23183  013C1A  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 23184                           
 23185                           ; BSR set to: 0
 23186                           ;encoder.c: 38: }
 23187                           
 23188                           ; BSR set to: 0
 23189  013C1C  0012               	return	
 23190  013C1E                     l2621:
 23191                           
 23192                           ; BSR set to: 0
 23193  013C1E  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 23194  013C22  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 23195                           
 23196                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 23197                           ; Switch size 1, requested type "space"
 23198                           ; Number of cases is 2, Range of values is 0 to 3
 23199                           ; switch strategies available:
 23200                           ; Name         Instructions Cycles
 23201                           ; simple_byte            7     4 (average)
 23202                           ;	Chosen strategy is simple_byte
 23203  013C26  0100               	movlb	0	; () banked
 23204  013C28  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 23205  013C2A  0A00               	xorlw	0	; case 0
 23206  013C2C  B4D8               	btfsc	status,2,c
 23207  013C2E  D004               	goto	l19208
 23208  013C30  0A03               	xorlw	3	; case 3
 23209  013C32  B4D8               	btfsc	status,2,c
 23210  013C34  D00C               	goto	l19210
 23211  013C36  D7EE               	goto	l2627
 23212  013C38                     l19208:
 23213                           
 23214                           ; BSR set to: 0
 23215                           ; Switch size 1, requested type "space"
 23216                           ; Number of cases is 3, Range of values is 1 to 100
 23217                           ; switch strategies available:
 23218                           ; Name         Instructions Cycles
 23219                           ; simple_byte           10     6 (average)
 23220                           ;	Chosen strategy is simple_byte
 23221  013C38  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 23222  013C3A  0A01               	xorlw	1	; case 1
 23223  013C3C  B4D8               	btfsc	status,2,c
 23224  013C3E  D7E5               	goto	l2626
 23225  013C40  0A0B               	xorlw	11	; case 10
 23226  013C42  B4D8               	btfsc	status,2,c
 23227  013C44  D7DD               	goto	l2625
 23228  013C46  0A6E               	xorlw	110	; case 100
 23229  013C48  B4D8               	btfsc	status,2,c
 23230  013C4A  D7D5               	goto	l2624
 23231  013C4C  D7E3               	goto	l2627
 23232  013C4E                     l19210:
 23233                           
 23234                           ; BSR set to: 0
 23235                           ; Switch size 1, requested type "space"
 23236                           ; Number of cases is 1, Range of values is 232 to 232
 23237                           ; switch strategies available:
 23238                           ; Name         Instructions Cycles
 23239                           ; simple_byte            4     3 (average)
 23240                           ;	Chosen strategy is simple_byte
 23241  013C4E  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 23242  013C50  0AE8               	xorlw	232	; case 232
 23243  013C52  B4D8               	btfsc	status,2,c
 23244  013C54  D7CA               	goto	l2622
 23245  013C56  D7DE               	goto	l2627
 23246  013C58                     __end_of__encoder_next_setup_stepsize:
 23247                           	opt stack 0
 23248                           tblptru	equ	0xFF8
 23249                           tblptrh	equ	0xFF7
 23250                           tblptrl	equ	0xFF6
 23251                           tablat	equ	0xFF5
 23252                           prodh	equ	0xFF4
 23253                           prodl	equ	0xFF3
 23254                           intcon	equ	0xFF2
 23255                           postinc0	equ	0xFEE
 23256                           wreg	equ	0xFE8
 23257                           indf1	equ	0xFE7
 23258                           postinc1	equ	0xFE6
 23259                           postdec1	equ	0xFE5
 23260                           plusw1	equ	0xFE3
 23261                           fsr1h	equ	0xFE2
 23262                           fsr1l	equ	0xFE1
 23263                           indf2	equ	0xFDF
 23264                           postinc2	equ	0xFDE
 23265                           postdec2	equ	0xFDD
 23266                           plusw2	equ	0xFDB
 23267                           fsr2h	equ	0xFDA
 23268                           fsr2l	equ	0xFD9
 23269                           status	equ	0xFD8
 23270                           
 23271 ;; *************** function __encoder_next_divide_step_size *****************
 23272 ;; Defined at:
 23273 ;;		line 41 in file "encoder.c"
 23274 ;; Parameters:    Size  Location     Type
 23275 ;;  old_stepsize    1    wreg     unsigned char 
 23276 ;; Auto vars:     Size  Location     Type
 23277 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 23278 ;; Return value:  Size  Location     Type
 23279 ;;                  1    wreg      unsigned char 
 23280 ;; Registers used:
 23281 ;;		wreg, status,2, status,0
 23282 ;; Tracked objects:
 23283 ;;		On entry : 0/0
 23284 ;;		On exit  : 0/0
 23285 ;;		Unchanged: 0/0
 23286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23290 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23291 ;;Total ram usage:        1 bytes
 23292 ;; Hardware stack levels used:    1
 23293 ;; Hardware stack levels required when called:   10
 23294 ;; This function calls:
 23295 ;;		Nothing
 23296 ;; This function is called by:
 23297 ;;		_encoder_statemachine
 23298 ;; This function uses a non-reentrant model
 23299 ;;
 23300                           
 23301                           	psect	text96
 23302  015194                     __ptext96:
 23303                           	opt stack 0
 23304  015194                     __encoder_next_divide_step_size:
 23305                           	opt stack 19
 23306                           
 23307                           ; BSR set to: 0
 23308                           ;incstack = 0
 23309                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 23310  015194  0100               	movlb	0	; () banked
 23311  015196  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 23312                           
 23313                           ;encoder.c: 43: switch(old_stepsize)
 23314  015198  D008               	goto	l2631
 23315  01519A                     
 23316                           ;encoder.c: 46: return 10;
 23317  01519A  0E0A               	movlw	10
 23318  01519C  0012               	return	
 23319  01519E                     
 23320                           ;encoder.c: 48: return 1;
 23321  01519E  0E01               	movlw	1
 23322  0151A0  0012               	return	
 23323  0151A2                     
 23324                           ;encoder.c: 50: return 100;
 23325  0151A2  0E64               	movlw	100
 23326  0151A4  0012               	return	
 23327  0151A6                     
 23328                           ;encoder.c: 52: return 1;
 23329  0151A6  0E01               	movlw	1
 23330                           
 23331                           ;encoder.c: 53: }
 23332  0151A8  0012               	return	
 23333  0151AA                     l2631:
 23334  0151AA  0100               	movlb	0	; () banked
 23335  0151AC  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 23336                           
 23337                           ; Switch size 1, requested type "space"
 23338                           ; Number of cases is 3, Range of values is 1 to 100
 23339                           ; switch strategies available:
 23340                           ; Name         Instructions Cycles
 23341                           ; simple_byte           10     6 (average)
 23342                           ;	Chosen strategy is simple_byte
 23343  0151AE  0A01               	xorlw	1	; case 1
 23344  0151B0  B4D8               	btfsc	status,2,c
 23345  0151B2  D7F7               	goto	l2635
 23346  0151B4  0A0B               	xorlw	11	; case 10
 23347  0151B6  B4D8               	btfsc	status,2,c
 23348  0151B8  D7F2               	goto	l2634
 23349  0151BA  0A6E               	xorlw	110	; case 100
 23350  0151BC  B4D8               	btfsc	status,2,c
 23351  0151BE  D7ED               	goto	l2632
 23352  0151C0  D7F2               	goto	l2636
 23353  0151C2                     __end_of__encoder_next_divide_step_size:
 23354                           	opt stack 0
 23355                           tblptru	equ	0xFF8
 23356                           tblptrh	equ	0xFF7
 23357                           tblptrl	equ	0xFF6
 23358                           tablat	equ	0xFF5
 23359                           prodh	equ	0xFF4
 23360                           prodl	equ	0xFF3
 23361                           intcon	equ	0xFF2
 23362                           postinc0	equ	0xFEE
 23363                           wreg	equ	0xFE8
 23364                           indf1	equ	0xFE7
 23365                           postinc1	equ	0xFE6
 23366                           postdec1	equ	0xFE5
 23367                           plusw1	equ	0xFE3
 23368                           fsr1h	equ	0xFE2
 23369                           fsr1l	equ	0xFE1
 23370                           indf2	equ	0xFDF
 23371                           postinc2	equ	0xFDE
 23372                           postdec2	equ	0xFDD
 23373                           plusw2	equ	0xFDB
 23374                           fsr2h	equ	0xFDA
 23375                           fsr2l	equ	0xFD9
 23376                           status	equ	0xFD8
 23377                           
 23378 ;; *************** function __encoder_next_arc_step_size *****************
 23379 ;; Defined at:
 23380 ;;		line 56 in file "encoder.c"
 23381 ;; Parameters:    Size  Location     Type
 23382 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 23383 ;; Auto vars:     Size  Location     Type
 23384 ;;		None
 23385 ;; Return value:  Size  Location     Type
 23386 ;;                  2    0[BANK0 ] unsigned int 
 23387 ;; Registers used:
 23388 ;;		wreg, status,2, status,0
 23389 ;; Tracked objects:
 23390 ;;		On entry : 0/0
 23391 ;;		On exit  : 0/0
 23392 ;;		Unchanged: 0/0
 23393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23394 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23396 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23397 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23398 ;;Total ram usage:        4 bytes
 23399 ;; Hardware stack levels used:    1
 23400 ;; Hardware stack levels required when called:   10
 23401 ;; This function calls:
 23402 ;;		Nothing
 23403 ;; This function is called by:
 23404 ;;		_encoder_statemachine
 23405 ;; This function uses a non-reentrant model
 23406 ;;
 23407                           
 23408                           	psect	text97
 23409  013C58                     __ptext97:
 23410                           	opt stack 0
 23411  013C58                     __encoder_next_arc_step_size:
 23412                           	opt stack 19
 23413                           
 23414                           ;encoder.c: 58: switch(old_stepsize)
 23415                           
 23416                           ;incstack = 0
 23417  013C58  D01A               	goto	l2640
 23418  013C5A                     
 23419                           ;encoder.c: 61: return 100;
 23420  013C5A  0E00               	movlw	0
 23421  013C5C  0100               	movlb	0	; () banked
 23422  013C5E  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 23423  013C60  0E64               	movlw	100
 23424  013C62  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 23425                           
 23426                           ; BSR set to: 0
 23427  013C64  0012               	return	
 23428  013C66                     
 23429                           ; BSR set to: 0
 23430                           ;encoder.c: 63: return 10;
 23431                           
 23432                           ; BSR set to: 0
 23433  013C66  0E00               	movlw	0
 23434  013C68  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 23435  013C6A  0E0A               	movlw	10
 23436  013C6C  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 23437                           
 23438                           ; BSR set to: 0
 23439  013C6E  0012               	return	
 23440  013C70                     
 23441                           ; BSR set to: 0
 23442                           ;encoder.c: 65: return 1;
 23443                           
 23444                           ; BSR set to: 0
 23445  013C70  0E00               	movlw	0
 23446  013C72  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 23447  013C74  0E01               	movlw	1
 23448  013C76  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 23449                           
 23450                           ; BSR set to: 0
 23451  013C78  0012               	return	
 23452  013C7A                     
 23453                           ; BSR set to: 0
 23454                           ;encoder.c: 67: return 1000;
 23455                           
 23456                           ; BSR set to: 0
 23457  013C7A  0E03               	movlw	3
 23458  013C7C  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 23459  013C7E  0EE8               	movlw	232
 23460  013C80  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 23461                           
 23462                           ; BSR set to: 0
 23463  013C82  0012               	return	
 23464  013C84                     
 23465                           ; BSR set to: 0
 23466                           ;encoder.c: 69: return 100;
 23467                           
 23468                           ; BSR set to: 0
 23469  013C84  0E00               	movlw	0
 23470  013C86  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 23471  013C88  0E64               	movlw	100
 23472  013C8A  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 23473                           
 23474                           ; BSR set to: 0
 23475                           ;encoder.c: 70: }
 23476                           
 23477                           ; BSR set to: 0
 23478  013C8C  0012               	return	
 23479  013C8E                     l2640:
 23480                           
 23481                           ; BSR set to: 0
 23482  013C8E  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 23483  013C92  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 23484                           
 23485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 23486                           ; Switch size 1, requested type "space"
 23487                           ; Number of cases is 2, Range of values is 0 to 3
 23488                           ; switch strategies available:
 23489                           ; Name         Instructions Cycles
 23490                           ; simple_byte            7     4 (average)
 23491                           ;	Chosen strategy is simple_byte
 23492  013C96  0100               	movlb	0	; () banked
 23493  013C98  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 23494  013C9A  0A00               	xorlw	0	; case 0
 23495  013C9C  B4D8               	btfsc	status,2,c
 23496  013C9E  D004               	goto	l19212
 23497  013CA0  0A03               	xorlw	3	; case 3
 23498  013CA2  B4D8               	btfsc	status,2,c
 23499  013CA4  D00C               	goto	l19214
 23500  013CA6  D7EE               	goto	l2646
 23501  013CA8                     l19212:
 23502                           
 23503                           ; BSR set to: 0
 23504                           ; Switch size 1, requested type "space"
 23505                           ; Number of cases is 3, Range of values is 1 to 100
 23506                           ; switch strategies available:
 23507                           ; Name         Instructions Cycles
 23508                           ; simple_byte           10     6 (average)
 23509                           ;	Chosen strategy is simple_byte
 23510  013CA8  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 23511  013CAA  0A01               	xorlw	1	; case 1
 23512  013CAC  B4D8               	btfsc	status,2,c
 23513  013CAE  D7E5               	goto	l2645
 23514  013CB0  0A0B               	xorlw	11	; case 10
 23515  013CB2  B4D8               	btfsc	status,2,c
 23516  013CB4  D7DD               	goto	l2644
 23517  013CB6  0A6E               	xorlw	110	; case 100
 23518  013CB8  B4D8               	btfsc	status,2,c
 23519  013CBA  D7D5               	goto	l2643
 23520  013CBC  D7E3               	goto	l2646
 23521  013CBE                     l19214:
 23522                           
 23523                           ; BSR set to: 0
 23524                           ; Switch size 1, requested type "space"
 23525                           ; Number of cases is 1, Range of values is 232 to 232
 23526                           ; switch strategies available:
 23527                           ; Name         Instructions Cycles
 23528                           ; simple_byte            4     3 (average)
 23529                           ;	Chosen strategy is simple_byte
 23530  013CBE  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 23531  013CC0  0AE8               	xorlw	232	; case 232
 23532  013CC2  B4D8               	btfsc	status,2,c
 23533  013CC4  D7CA               	goto	l2641
 23534  013CC6  D7DE               	goto	l2646
 23535  013CC8                     __end_of__encoder_next_arc_step_size:
 23536                           	opt stack 0
 23537                           tblptru	equ	0xFF8
 23538                           tblptrh	equ	0xFF7
 23539                           tblptrl	equ	0xFF6
 23540                           tablat	equ	0xFF5
 23541                           prodh	equ	0xFF4
 23542                           prodl	equ	0xFF3
 23543                           intcon	equ	0xFF2
 23544                           postinc0	equ	0xFEE
 23545                           wreg	equ	0xFE8
 23546                           indf1	equ	0xFE7
 23547                           postinc1	equ	0xFE6
 23548                           postdec1	equ	0xFE5
 23549                           plusw1	equ	0xFE3
 23550                           fsr1h	equ	0xFE2
 23551                           fsr1l	equ	0xFE1
 23552                           indf2	equ	0xFDF
 23553                           postinc2	equ	0xFDE
 23554                           postdec2	equ	0xFDD
 23555                           plusw2	equ	0xFDB
 23556                           fsr2h	equ	0xFDA
 23557                           fsr2l	equ	0xFD9
 23558                           status	equ	0xFD8
 23559                           
 23560 ;; *************** function __divide_jump_size_increment *****************
 23561 ;; Defined at:
 23562 ;;		line 73 in file "encoder.c"
 23563 ;; Parameters:    Size  Location     Type
 23564 ;;		None
 23565 ;; Auto vars:     Size  Location     Type
 23566 ;;		None
 23567 ;; Return value:  Size  Location     Type
 23568 ;;                  1    wreg      void 
 23569 ;; Registers used:
 23570 ;;		wreg, status,2, status,0
 23571 ;; Tracked objects:
 23572 ;;		On entry : 0/0
 23573 ;;		On exit  : 0/0
 23574 ;;		Unchanged: 0/0
 23575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23578 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23579 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23580 ;;Total ram usage:        1 bytes
 23581 ;; Hardware stack levels used:    1
 23582 ;; Hardware stack levels required when called:   10
 23583 ;; This function calls:
 23584 ;;		Nothing
 23585 ;; This function is called by:
 23586 ;;		_encoder_statemachine
 23587 ;; This function uses a non-reentrant model
 23588 ;;
 23589                           
 23590                           	psect	text98
 23591  014DC6                     __ptext98:
 23592                           	opt stack 0
 23593  014DC6                     __divide_jump_size_increment:
 23594                           	opt stack 19
 23595                           
 23596                           ;encoder.c: 75: ++os.divide_jump_size;
 23597                           
 23598                           ; BSR set to: 0
 23599                           ;incstack = 0
 23600  014DC6  0101               	movlb	1	; () banked
 23601  014DC8  4B89               	infsnz	(_os+24)& (0+255),f,b	;volatile
 23602  014DCA  2B8A               	incf	(_os+25)& (0+255),f,b	;volatile
 23603                           
 23604                           ; BSR set to: 1
 23605                           ;encoder.c: 76: if(os.divide_jump_size==0)
 23606  014DCC  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23607  014DCE  118A               	iorwf	(_os+25)& (0+255),w,b	;volatile
 23608  014DD0  A4D8               	btfss	status,2,c
 23609  014DD2  D004               	goto	l2650
 23610                           
 23611                           ; BSR set to: 1
 23612                           ;encoder.c: 77: os.divide_jump_size = 1;
 23613  014DD4  0E00               	movlw	0
 23614  014DD6  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 23615  014DD8  0E01               	movlw	1
 23616  014DDA  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 23617  014DDC                     l2650:
 23618                           
 23619                           ; BSR set to: 1
 23620                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 23621                           
 23622                           ; BSR set to: 1
 23623  014DDC  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 23624  014DDE  5D89               	subwf	(_os+24)& (0+255),w,b	;volatile
 23625  014DE0  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23626  014DE2  0A80               	xorlw	128
 23627  014DE4  0100               	movlb	0	; () banked
 23628  014DE6  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 23629  014DE8  0101               	movlb	1	; () banked
 23630  014DEA  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 23631  014DEC  0A80               	xorlw	128
 23632  014DEE  0100               	movlb	0	; () banked
 23633  014DF0  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 23634  014DF2  A0D8               	btfss	status,0,c
 23635  014DF4  0012               	return	
 23636                           
 23637                           ; BSR set to: 0
 23638                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 23639  014DF6  0EFF               	movlw	255
 23640  014DF8  0101               	movlb	1	; () banked
 23641  014DFA  2584               	addwf	(_os+19)& (0+255),w,b	;volatile
 23642  014DFC  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 23643  014DFE  0EFF               	movlw	255
 23644  014E00  2185               	addwfc	(_os+20)& (0+255),w,b	;volatile
 23645  014E02  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 23646  014E04  0012               	return	
 23647  014E06                     __end_of__divide_jump_size_increment:
 23648                           	opt stack 0
 23649                           tblptru	equ	0xFF8
 23650                           tblptrh	equ	0xFF7
 23651                           tblptrl	equ	0xFF6
 23652                           tablat	equ	0xFF5
 23653                           prodh	equ	0xFF4
 23654                           prodl	equ	0xFF3
 23655                           intcon	equ	0xFF2
 23656                           postinc0	equ	0xFEE
 23657                           wreg	equ	0xFE8
 23658                           indf1	equ	0xFE7
 23659                           postinc1	equ	0xFE6
 23660                           postdec1	equ	0xFE5
 23661                           plusw1	equ	0xFE3
 23662                           fsr1h	equ	0xFE2
 23663                           fsr1l	equ	0xFE1
 23664                           indf2	equ	0xFDF
 23665                           postinc2	equ	0xFDE
 23666                           postdec2	equ	0xFDD
 23667                           plusw2	equ	0xFDB
 23668                           fsr2h	equ	0xFDA
 23669                           fsr2l	equ	0xFD9
 23670                           status	equ	0xFD8
 23671                           
 23672 ;; *************** function __divide_jump_size_decrement *****************
 23673 ;; Defined at:
 23674 ;;		line 82 in file "encoder.c"
 23675 ;; Parameters:    Size  Location     Type
 23676 ;;		None
 23677 ;; Auto vars:     Size  Location     Type
 23678 ;;		None
 23679 ;; Return value:  Size  Location     Type
 23680 ;;                  1    wreg      void 
 23681 ;; Registers used:
 23682 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23683 ;; Tracked objects:
 23684 ;;		On entry : 0/0
 23685 ;;		On exit  : 0/0
 23686 ;;		Unchanged: 0/0
 23687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23690 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23691 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23692 ;;Total ram usage:        3 bytes
 23693 ;; Hardware stack levels used:    1
 23694 ;; Hardware stack levels required when called:   10
 23695 ;; This function calls:
 23696 ;;		Nothing
 23697 ;; This function is called by:
 23698 ;;		_encoder_statemachine
 23699 ;; This function uses a non-reentrant model
 23700 ;;
 23701                           
 23702                           	psect	text99
 23703  013D36                     __ptext99:
 23704                           	opt stack 0
 23705  013D36                     __divide_jump_size_decrement:
 23706                           	opt stack 19
 23707                           
 23708                           ;encoder.c: 84: --os.divide_jump_size;
 23709                           
 23710                           ;incstack = 0
 23711  013D36  0101               	movlb	1	; () banked
 23712  013D38  0789               	decf	(_os+24)& (0+255),f,b	;volatile
 23713  013D3A  A0D8               	btfss	status,0,c
 23714  013D3C  078A               	decf	(_os+25)& (0+255),f,b	;volatile
 23715                           
 23716                           ; BSR set to: 1
 23717                           ;encoder.c: 85: if(os.divide_jump_size==0)
 23718  013D3E  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23719  013D40  118A               	iorwf	(_os+25)& (0+255),w,b	;volatile
 23720  013D42  A4D8               	btfss	status,2,c
 23721  013D44  D002               	goto	l2655
 23722                           
 23723                           ; BSR set to: 1
 23724                           ;encoder.c: 86: os.divide_jump_size = -1;
 23725  013D46  6989               	setf	(_os+24)& (0+255),b	;volatile
 23726  013D48  698A               	setf	(_os+25)& (0+255),b	;volatile
 23727  013D4A                     l2655:
 23728                           
 23729                           ; BSR set to: 1
 23730                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 23731                           
 23732                           ; BSR set to: 1
 23733  013D4A  EE21  F084         	lfsr	2,_os+19	;volatile
 23734  013D4E  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 23735  013D52  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 23736  013D56  0100               	movlb	0	; () banked
 23737  013D58  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 23738  013D5A  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 23739  013D5C  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 23740  013D5E  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 23741  013D60  0101               	movlb	1	; () banked
 23742  013D62  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23743  013D64  0100               	movlb	0	; () banked
 23744  013D66  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 23745  013D68  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 23746  013D6A  0A80               	xorlw	128
 23747  013D6C  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 23748  013D6E  0101               	movlb	1	; () banked
 23749  013D70  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23750  013D72  0A80               	xorlw	128
 23751  013D74  0100               	movlb	0	; () banked
 23752  013D76  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 23753  013D78  A0D8               	btfss	status,0,c
 23754  013D7A  0012               	return	
 23755                           
 23756                           ; BSR set to: 0
 23757                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 23758  013D7C  EE21  F084         	lfsr	2,_os+19	;volatile
 23759  013D80  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 23760  013D84  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 23761  013D88  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 23762  013D8A  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 23763  013D8C  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 23764  013D8E  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 23765  013D90  0E01               	movlw	1
 23766  013D92  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 23767  013D94  0101               	movlb	1	; () banked
 23768  013D96  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 23769  013D98  0E00               	movlw	0
 23770  013D9A  0100               	movlb	0	; () banked
 23771  013D9C  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 23772  013D9E  0101               	movlb	1	; () banked
 23773  013DA0  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 23774  013DA2  0012               	return	
 23775  013DA4                     __end_of__divide_jump_size_decrement:
 23776                           	opt stack 0
 23777                           tblptru	equ	0xFF8
 23778                           tblptrh	equ	0xFF7
 23779                           tblptrl	equ	0xFF6
 23780                           tablat	equ	0xFF5
 23781                           prodh	equ	0xFF4
 23782                           prodl	equ	0xFF3
 23783                           intcon	equ	0xFF2
 23784                           postinc0	equ	0xFEE
 23785                           wreg	equ	0xFE8
 23786                           indf1	equ	0xFE7
 23787                           postinc1	equ	0xFE6
 23788                           postdec1	equ	0xFE5
 23789                           plusw1	equ	0xFE3
 23790                           fsr1h	equ	0xFE2
 23791                           fsr1l	equ	0xFE1
 23792                           indf2	equ	0xFDF
 23793                           postinc2	equ	0xFDE
 23794                           postdec2	equ	0xFDD
 23795                           plusw2	equ	0xFDB
 23796                           fsr2h	equ	0xFDA
 23797                           fsr2l	equ	0xFD9
 23798                           status	equ	0xFD8
 23799                           
 23800 ;; *************** function _display_prepare *****************
 23801 ;; Defined at:
 23802 ;;		line 278 in file "display.c"
 23803 ;; Parameters:    Size  Location     Type
 23804 ;;		None
 23805 ;; Auto vars:     Size  Location     Type
 23806 ;;  temp           10   94[BANK0 ] unsigned char [10]
 23807 ;;  cntr            1  105[BANK0 ] unsigned char 
 23808 ;;  space           1  104[BANK0 ] unsigned char 
 23809 ;; Return value:  Size  Location     Type
 23810 ;;                  1    wreg      void 
 23811 ;; Registers used:
 23812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23813 ;; Tracked objects:
 23814 ;;		On entry : 0/0
 23815 ;;		On exit  : 0/0
 23816 ;;		Unchanged: 0/0
 23817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23819 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23820 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23821 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23822 ;;Total ram usage:       14 bytes
 23823 ;; Hardware stack levels used:    1
 23824 ;; Hardware stack levels required when called:   15
 23825 ;; This function calls:
 23826 ;;		__display_clear
 23827 ;;		__display_itoa
 23828 ;;		__display_itoa_long
 23829 ;;		__display_padded_itoa
 23830 ;;		__display_signed_itoa
 23831 ;;		_memcpy
 23832 ;;		_motor_speed_from_index
 23833 ;;		_strlen
 23834 ;; This function is called by:
 23835 ;;		_main
 23836 ;; This function uses a non-reentrant model
 23837 ;;
 23838                           
 23839                           	psect	text100
 23840  00A330                     __ptext100:
 23841                           	opt stack 0
 23842  00A330                     _display_prepare:
 23843                           	opt stack 15
 23844                           
 23845                           ;display.c: 280: uint8_t cntr;;display.c: 281: uint8_t space;;display.c: 282: char temp[
      +                          10];;display.c: 284: switch(os.displayState & 0xF0)
 23846                           
 23847                           ;incstack = 0
 23848  00A330  EF8E  F057         	goto	l1376
 23849  00A334                     
 23850                           ;display.c: 288: memcpy(display_content, dc_main, sizeof display_content);
 23851  00A334  0E34               	movlw	low _display_content
 23852  00A336  0100               	movlb	0	; () banked
 23853  00A338  6F60               	movwf	memcpy@d1& (0+255),b
 23854  00A33A  0E02               	movlw	high _display_content
 23855  00A33C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 23856  00A33E  0E6E               	movlw	low _dc_main
 23857  00A340  6F62               	movwf	memcpy@s1& (0+255),b
 23858  00A342  0EA0               	movlw	high _dc_main
 23859  00A344  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 23860  00A346  0E00               	movlw	0
 23861  00A348  6F65               	movwf	(memcpy@n+1)& (0+255),b
 23862  00A34A  0E50               	movlw	80
 23863  00A34C  6F64               	movwf	memcpy@n& (0+255),b
 23864  00A34E  ECCF  F0A0         	call	_memcpy	;wreg free
 23865                           
 23866                           ;display.c: 289: switch(os.displayState)
 23867  00A352  D00F               	goto	l1378
 23868  00A354                     
 23869                           ;display.c: 292: display_content[1][0] = '>';
 23870  00A354  0E3E               	movlw	62
 23871  00A356  0102               	movlb	2	; () banked
 23872  00A358  6F48               	movwf	(_display_content+20)& (0+255),b
 23873                           
 23874                           ;display.c: 293: break;
 23875  00A35A  EFBC  F057         	goto	l1385
 23876  00A35E                     
 23877                           ;display.c: 295: display_content[1][9] = '>';
 23878                           
 23879                           ; BSR set to: 2
 23880  00A35E  0E3E               	movlw	62
 23881  00A360  0102               	movlb	2	; () banked
 23882  00A362  6F51               	movwf	(_display_content+29)& (0+255),b
 23883                           
 23884                           ;display.c: 296: break;
 23885  00A364  EFBC  F057         	goto	l1385
 23886  00A368                     
 23887                           ;display.c: 301: display_content[2][9] = '>';
 23888                           
 23889                           ; BSR set to: 2
 23890  00A368  0E3E               	movlw	62
 23891  00A36A  0102               	movlb	2	; () banked
 23892  00A36C  6F65               	movwf	(_display_content+49)& (0+255),b
 23893                           
 23894                           ;display.c: 302: break;
 23895  00A36E  EFBC  F057         	goto	l1385
 23896  00A372                     l1378:
 23897                           
 23898                           ; BSR set to: 2
 23899  00A372  0101               	movlb	1	; () banked
 23900  00A374  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 23901                           
 23902                           ; Switch size 1, requested type "space"
 23903                           ; Number of cases is 5, Range of values is 1 to 5
 23904                           ; switch strategies available:
 23905                           ; Name         Instructions Cycles
 23906                           ; simple_byte           16     9 (average)
 23907                           ;	Chosen strategy is simple_byte
 23908  00A376  0A01               	xorlw	1	; case 1
 23909  00A378  B4D8               	btfsc	status,2,c
 23910  00A37A  D7EC               	goto	l1379
 23911  00A37C  0A03               	xorlw	3	; case 2
 23912  00A37E  B4D8               	btfsc	status,2,c
 23913  00A380  D7EE               	goto	l1381
 23914  00A382  0A01               	xorlw	1	; case 3
 23915  00A384  B4D8               	btfsc	status,2,c
 23916  00A386  D067               	goto	l1398
 23917  00A388  0A07               	xorlw	7	; case 4
 23918  00A38A  B4D8               	btfsc	status,2,c
 23919  00A38C  D7ED               	goto	l1383
 23920  00A38E  0A01               	xorlw	1	; case 5
 23921  00A390  D072               	goto	L92
 23922  00A392                     
 23923                           ;display.c: 310: memcpy(display_content, dc_setup1, sizeof display_content);
 23924                           
 23925                           ; BSR set to: 1
 23926  00A392  0E34               	movlw	low _display_content
 23927  00A394  0100               	movlb	0	; () banked
 23928  00A396  6F60               	movwf	memcpy@d1& (0+255),b
 23929  00A398  0E02               	movlw	high _display_content
 23930  00A39A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 23931  00A39C  0E1E               	movlw	low _dc_setup1
 23932  00A39E  6F62               	movwf	memcpy@s1& (0+255),b
 23933  00A3A0  0EA0               	movlw	high _dc_setup1
 23934  00A3A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 23935  00A3A4  0E00               	movlw	0
 23936  00A3A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 23937  00A3A8  0E50               	movlw	80
 23938  00A3AA  6F64               	movwf	memcpy@n& (0+255),b
 23939  00A3AC  ECCF  F0A0         	call	_memcpy	;wreg free
 23940                           
 23941                           ;display.c: 311: _display_itoa(os.setup_step_size, 2, temp);
 23942  00A3B0  C181  F095         	movff	_os+16,__display_itoa@value	;volatile
 23943  00A3B4  C182  F096         	movff	_os+17,__display_itoa@value+1	;volatile
 23944  00A3B8  0E02               	movlw	2
 23945  00A3BA  0100               	movlb	0	; () banked
 23946  00A3BC  6F97               	movwf	__display_itoa@decimals& (0+255),b
 23947  00A3BE  0EBE               	movlw	low display_prepare@temp
 23948  00A3C0  6F98               	movwf	__display_itoa@text& (0+255),b
 23949  00A3C2  0E00               	movlw	high display_prepare@temp
 23950  00A3C4  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 23951  00A3C6  EC33  F075         	call	__display_itoa	;wreg free
 23952                           
 23953                           ;display.c: 312: if(os.setup_step_size>999)
 23954  00A3CA  0EE8               	movlw	232
 23955  00A3CC  0101               	movlb	1	; () banked
 23956  00A3CE  5D81               	subwf	(_os+16)& (0+255),w,b	;volatile
 23957  00A3D0  0E03               	movlw	3
 23958  00A3D2  5982               	subwfb	(_os+17)& (0+255),w,b	;volatile
 23959  00A3D4  A0D8               	btfss	status,0,c
 23960  00A3D6  D002               	goto	l1387
 23961                           
 23962                           ; BSR set to: 1
 23963                           ;display.c: 313: space = 0;
 23964  00A3D8  0E00               	movlw	0
 23965  00A3DA  D001               	goto	L23
 23966  00A3DC                     l1387:
 23967                           
 23968                           ;display.c: 314: else;display.c: 315: space = 1;
 23969                           
 23970                           ; BSR set to: 0
 23971  00A3DC  0E01               	movlw	1
 23972  00A3DE                     L23:
 23973  00A3DE  0100               	movlb	0	; () banked
 23974  00A3E0  6FC8               	movwf	display_prepare@space& (0+255),b
 23975                           
 23976                           ; BSR set to: 0
 23977                           ;display.c: 316: for(cntr=0; temp[cntr]; ++cntr)
 23978  00A3E2  0E00               	movlw	0
 23979  00A3E4  6FC9               	movwf	display_prepare@cntr& (0+255),b
 23980  00A3E6  D018               	goto	l1389
 23981  00A3E8                     
 23982                           ; BSR set to: 0
 23983                           ;display.c: 317: {;display.c: 318: display_content[3][space+cntr] = temp[cntr];
 23984                           
 23985                           ; BSR set to: 0
 23986  00A3E8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 23987  00A3EA  0D01               	mullw	1
 23988  00A3EC  0EBE               	movlw	low display_prepare@temp
 23989  00A3EE  24F3               	addwf	prodl,w,c
 23990  00A3F0  6ED9               	movwf	fsr2l,c
 23991  00A3F2  0E00               	movlw	high display_prepare@temp
 23992  00A3F4  20F4               	addwfc	prodh,w,c
 23993  00A3F6  6EDA               	movwf	fsr2h,c
 23994  00A3F8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 23995  00A3FA  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 23996  00A3FE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 23997  00A400  27BC               	addwf	??_display_prepare& (0+255),f,b
 23998  00A402  0E00               	movlw	0
 23999  00A404  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24000  00A406  0E70               	movlw	low (_display_content+60)
 24001  00A408  25BC               	addwf	??_display_prepare& (0+255),w,b
 24002  00A40A  6EE1               	movwf	fsr1l,c
 24003  00A40C  0E02               	movlw	high (_display_content+60)
 24004  00A40E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24005  00A410  6EE2               	movwf	fsr1h,c
 24006  00A412  CFDF FFE7          	movff	indf2,indf1
 24007                           
 24008                           ; BSR set to: 0
 24009  00A416  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24010  00A418                     l1389:
 24011                           
 24012                           ; BSR set to: 0
 24013                           
 24014                           ; BSR set to: 0
 24015  00A418  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24016  00A41A  0D01               	mullw	1
 24017  00A41C  0EBE               	movlw	low display_prepare@temp
 24018  00A41E  24F3               	addwf	prodl,w,c
 24019  00A420  6ED9               	movwf	fsr2l,c
 24020  00A422  0E00               	movlw	high display_prepare@temp
 24021  00A424  20F4               	addwfc	prodh,w,c
 24022  00A426  6EDA               	movwf	fsr2h,c
 24023  00A428  50DF               	movf	indf2,w,c
 24024  00A42A  A4D8               	btfss	status,2,c
 24025  00A42C  D7DD               	goto	l1390
 24026                           
 24027                           ; BSR set to: 2
 24028                           
 24029                           ; BSR set to: 2
 24030                           ;display.c: 328: }
 24031                           
 24032                           ;display.c: 327: break;
 24033                           
 24034                           ;display.c: 326: display_content[3][12] = '>';
 24035                           
 24036                           ; BSR set to: 2
 24037                           
 24038                           ;display.c: 325: case DISPLAY_STATE_SETUP1_CANCEL:
 24039                           
 24040                           ;display.c: 324: break;
 24041                           
 24042                           ;display.c: 323: display_content[2][12] = '>';
 24043                           
 24044                           ; BSR set to: 0
 24045                           
 24046                           ;display.c: 321: {;display.c: 322: case DISPLAY_STATE_SETUP1_CONFIRM:
 24047                           
 24048                           ; BSR set to: 0
 24049                           ;display.c: 319: };display.c: 320: switch(os.displayState)
 24050  00A42E  0101               	movlb	1	; () banked
 24051  00A430  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 24052                           
 24053                           ; Switch size 1, requested type "space"
 24054                           ; Number of cases is 2, Range of values is 17 to 18
 24055                           ; switch strategies available:
 24056                           ; Name         Instructions Cycles
 24057                           ; simple_byte            7     4 (average)
 24058                           ;	Chosen strategy is simple_byte
 24059  00A432  0A11               	xorlw	17	; case 17
 24060  00A434  D08E               	goto	L29
 24061  00A436                     
 24062                           ;display.c: 332: memcpy(display_content, dc_setup2, sizeof display_content);
 24063                           
 24064                           ; BSR set to: 1
 24065  00A436  0E34               	movlw	low _display_content
 24066  00A438  0100               	movlb	0	; () banked
 24067  00A43A  6F60               	movwf	memcpy@d1& (0+255),b
 24068  00A43C  0E02               	movlw	high _display_content
 24069  00A43E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24070  00A440  0ECE               	movlw	low _dc_setup2
 24071  00A442  6F62               	movwf	memcpy@s1& (0+255),b
 24072  00A444  0E9F               	movlw	high _dc_setup2
 24073  00A446  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24074  00A448  0E00               	movlw	0
 24075  00A44A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24076  00A44C  0E50               	movlw	80
 24077  00A44E  6F64               	movwf	memcpy@n& (0+255),b
 24078  00A450  ECCF  F0A0         	call	_memcpy	;wreg free
 24079                           
 24080                           ;display.c: 333: switch(os.displayState)
 24081  00A454  D00A               	goto	l1397
 24082  00A456                     l1398:
 24083                           
 24084                           ;display.c: 336: display_content[2][0] = '>';
 24085  00A456  0E3E               	movlw	62
 24086  00A458  0102               	movlb	2	; () banked
 24087  00A45A  6F5C               	movwf	(_display_content+40)& (0+255),b
 24088                           
 24089                           ;display.c: 337: break;
 24090  00A45C  EFBC  F057         	goto	l1385
 24091  00A460                     l1400:
 24092                           
 24093                           ;display.c: 339: display_content[3][0] = '>';
 24094                           
 24095                           ; BSR set to: 2
 24096  00A460  0E3E               	movlw	62
 24097  00A462  0102               	movlb	2	; () banked
 24098  00A464  6F70               	movwf	(_display_content+60)& (0+255),b
 24099                           
 24100                           ; BSR set to: 2
 24101                           ;display.c: 341: }
 24102                           
 24103                           ;display.c: 340: break;
 24104  00A466  EFBC  F057         	goto	l1385
 24105  00A46A                     l1397:
 24106                           
 24107                           ; BSR set to: 2
 24108  00A46A  0101               	movlb	1	; () banked
 24109  00A46C  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 24110                           
 24111                           ; Switch size 1, requested type "space"
 24112                           ; Number of cases is 2, Range of values is 33 to 34
 24113                           ; switch strategies available:
 24114                           ; Name         Instructions Cycles
 24115                           ; simple_byte            7     4 (average)
 24116                           ;	Chosen strategy is simple_byte
 24117  00A46E  0A21               	xorlw	33	; case 33
 24118  00A470  B4D8               	btfsc	status,2,c
 24119  00A472  D7F1               	goto	l1398
 24120  00A474  0A03               	xorlw	3	; case 34
 24121  00A476                     L92:
 24122  00A476  B4D8               	btfsc	status,2,c
 24123  00A478  D7F3               	goto	l1400
 24124                           
 24125                           ; BSR set to: 1
 24126                           ;display.c: 342: break;
 24127  00A47A  EFBC  F057         	goto	l1385
 24128  00A47E                     
 24129                           ;display.c: 345: memcpy(display_content, dc_divide1, sizeof display_content);
 24130                           
 24131                           ; BSR set to: 1
 24132  00A47E  0E34               	movlw	low _display_content
 24133  00A480  0100               	movlb	0	; () banked
 24134  00A482  6F60               	movwf	memcpy@d1& (0+255),b
 24135  00A484  0E02               	movlw	high _display_content
 24136  00A486  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24137  00A488  0E7E               	movlw	low _dc_divide1
 24138  00A48A  6F62               	movwf	memcpy@s1& (0+255),b
 24139  00A48C  0E9F               	movlw	high _dc_divide1
 24140  00A48E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24141  00A490  0E00               	movlw	0
 24142  00A492  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24143  00A494  0E50               	movlw	80
 24144  00A496  6F64               	movwf	memcpy@n& (0+255),b
 24145  00A498  ECCF  F0A0         	call	_memcpy	;wreg free
 24146                           
 24147                           ;display.c: 347: _display_padded_itoa(os.divide_step_size, 3, temp);
 24148  00A49C  C186  F078         	movff	_os+21,__display_padded_itoa@value	;volatile
 24149  00A4A0  0100               	movlb	0	; () banked
 24150  00A4A2  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 24151  00A4A4  0E03               	movlw	3
 24152  00A4A6  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 24153  00A4A8  0EBE               	movlw	low display_prepare@temp
 24154  00A4AA  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 24155  00A4AC  0E00               	movlw	high display_prepare@temp
 24156  00A4AE  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 24157  00A4B0  EC94  F08D         	call	__display_padded_itoa	;wreg free
 24158                           
 24159                           ;display.c: 348: for(cntr=0; cntr<3; ++cntr)
 24160  00A4B4  0E00               	movlw	0
 24161  00A4B6  0100               	movlb	0	; () banked
 24162  00A4B8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24163  00A4BA                     l17992:
 24164                           
 24165                           ; BSR set to: 0
 24166  00A4BA  0E02               	movlw	2
 24167  00A4BC  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 24168  00A4BE  D001               	goto	l1402
 24169  00A4C0  D014               	goto	u18080
 24170  00A4C2                     l1402:
 24171                           
 24172                           ; BSR set to: 0
 24173                           ;display.c: 349: {;display.c: 350: display_content[2][cntr] = temp[cntr];
 24174                           
 24175                           ; BSR set to: 0
 24176  00A4C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24177  00A4C4  0D01               	mullw	1
 24178  00A4C6  0EBE               	movlw	low display_prepare@temp
 24179  00A4C8  24F3               	addwf	prodl,w,c
 24180  00A4CA  6ED9               	movwf	fsr2l,c
 24181  00A4CC  0E00               	movlw	high display_prepare@temp
 24182  00A4CE  20F4               	addwfc	prodh,w,c
 24183  00A4D0  6EDA               	movwf	fsr2h,c
 24184  00A4D2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24185  00A4D4  0D01               	mullw	1
 24186  00A4D6  0E5C               	movlw	low (_display_content+40)
 24187  00A4D8  24F3               	addwf	prodl,w,c
 24188  00A4DA  6EE1               	movwf	fsr1l,c
 24189  00A4DC  0E02               	movlw	high (_display_content+40)
 24190  00A4DE  20F4               	addwfc	prodh,w,c
 24191  00A4E0  6EE2               	movwf	fsr1h,c
 24192  00A4E2  CFDF FFE7          	movff	indf2,indf1
 24193                           
 24194                           ; BSR set to: 0
 24195  00A4E6  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24196  00A4E8  D7E8               	goto	l17992
 24197  00A4EA                     u18080:
 24198                           
 24199                           ; BSR set to: 0
 24200                           ;display.c: 351: };display.c: 353: _display_padded_itoa(os.division, 4, temp);
 24201                           
 24202                           ; BSR set to: 0
 24203  00A4EA  C184  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 24204  00A4EE  C185  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 24205  00A4F2  0E04               	movlw	4
 24206  00A4F4  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 24207  00A4F6  0EBE               	movlw	low display_prepare@temp
 24208  00A4F8  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 24209  00A4FA  0E00               	movlw	high display_prepare@temp
 24210  00A4FC  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 24211  00A4FE  EC94  F08D         	call	__display_padded_itoa	;wreg free
 24212                           
 24213                           ;display.c: 354: for(cntr=0; cntr<4; ++cntr)
 24214  00A502  0E00               	movlw	0
 24215  00A504  0100               	movlb	0	; () banked
 24216  00A506  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24217  00A508                     l18006:
 24218                           
 24219                           ; BSR set to: 0
 24220  00A508  0E03               	movlw	3
 24221  00A50A  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 24222  00A50C  D001               	goto	l1404
 24223  00A50E  D01E               	goto	l1406
 24224  00A510                     l1404:
 24225                           
 24226                           ; BSR set to: 0
 24227                           ;display.c: 355: {;display.c: 356: display_content[3][cntr] = temp[cntr];
 24228                           
 24229                           ; BSR set to: 0
 24230  00A510  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24231  00A512  0D01               	mullw	1
 24232  00A514  0EBE               	movlw	low display_prepare@temp
 24233  00A516  24F3               	addwf	prodl,w,c
 24234  00A518  6ED9               	movwf	fsr2l,c
 24235  00A51A  0E00               	movlw	high display_prepare@temp
 24236  00A51C  20F4               	addwfc	prodh,w,c
 24237  00A51E  6EDA               	movwf	fsr2h,c
 24238  00A520  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24239  00A522  0D01               	mullw	1
 24240  00A524  0E70               	movlw	low (_display_content+60)
 24241  00A526  24F3               	addwf	prodl,w,c
 24242  00A528  6EE1               	movwf	fsr1l,c
 24243  00A52A  0E02               	movlw	high (_display_content+60)
 24244  00A52C  20F4               	addwfc	prodh,w,c
 24245  00A52E  6EE2               	movwf	fsr1h,c
 24246  00A530  CFDF FFE7          	movff	indf2,indf1
 24247                           
 24248                           ; BSR set to: 0
 24249  00A534  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24250  00A536  D7E8               	goto	l18006
 24251  00A538                     
 24252                           ;display.c: 361: display_content[2][12] = '>';
 24253                           
 24254                           ; BSR set to: 0
 24255  00A538  0E3E               	movlw	62
 24256  00A53A  0102               	movlb	2	; () banked
 24257  00A53C  6F68               	movwf	(_display_content+52)& (0+255),b
 24258                           
 24259                           ;display.c: 362: break;
 24260  00A53E  EFBC  F057         	goto	l1385
 24261  00A542                     
 24262                           ;display.c: 364: display_content[3][12] = '>';
 24263                           
 24264                           ; BSR set to: 2
 24265  00A542  0E3E               	movlw	62
 24266  00A544  0102               	movlb	2	; () banked
 24267  00A546  6F7C               	movwf	(_display_content+72)& (0+255),b
 24268                           
 24269                           ; BSR set to: 2
 24270                           ;display.c: 366: }
 24271                           
 24272                           ;display.c: 365: break;
 24273  00A548  EFBC  F057         	goto	l1385
 24274  00A54C                     l1406:
 24275                           
 24276                           ; BSR set to: 2
 24277  00A54C  0101               	movlb	1	; () banked
 24278  00A54E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 24279                           
 24280                           ; Switch size 1, requested type "space"
 24281                           ; Number of cases is 2, Range of values is 49 to 50
 24282                           ; switch strategies available:
 24283                           ; Name         Instructions Cycles
 24284                           ; simple_byte            7     4 (average)
 24285                           ;	Chosen strategy is simple_byte
 24286  00A550  0A31               	xorlw	49	; case 49
 24287  00A552                     L29:
 24288  00A552  B4D8               	btfsc	status,2,c
 24289  00A554  D7F1               	goto	l1407
 24290  00A556  0A03               	xorlw	3	; case 50
 24291  00A558  B4D8               	btfsc	status,2,c
 24292  00A55A  D7F3               	goto	l1409
 24293                           
 24294                           ; BSR set to: 1
 24295                           ;display.c: 367: break;
 24296  00A55C  EFBC  F057         	goto	l1385
 24297  00A560                     
 24298                           ;display.c: 370: memcpy(display_content, dc_divide2, sizeof display_content);
 24299                           
 24300                           ; BSR set to: 1
 24301  00A560  0E34               	movlw	low _display_content
 24302  00A562  0100               	movlb	0	; () banked
 24303  00A564  6F60               	movwf	memcpy@d1& (0+255),b
 24304  00A566  0E02               	movlw	high _display_content
 24305  00A568  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24306  00A56A  0E2E               	movlw	low _dc_divide2
 24307  00A56C  6F62               	movwf	memcpy@s1& (0+255),b
 24308  00A56E  0E9F               	movlw	high _dc_divide2
 24309  00A570  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24310  00A572  0E00               	movlw	0
 24311  00A574  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24312  00A576  0E50               	movlw	80
 24313  00A578  6F64               	movwf	memcpy@n& (0+255),b
 24314  00A57A  ECCF  F0A0         	call	_memcpy	;wreg free
 24315                           
 24316                           ;display.c: 372: _display_padded_itoa(os.division, 0, temp);
 24317  00A57E  C184  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 24318  00A582  C185  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 24319  00A586  0E00               	movlw	0
 24320  00A588  0100               	movlb	0	; () banked
 24321  00A58A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 24322  00A58C  0EBE               	movlw	low display_prepare@temp
 24323  00A58E  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 24324  00A590  0E00               	movlw	high display_prepare@temp
 24325  00A592  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 24326  00A594  EC94  F08D         	call	__display_padded_itoa	;wreg free
 24327                           
 24328                           ;display.c: 373: for(cntr=0; temp[cntr]; ++cntr)
 24329  00A598  0E00               	movlw	0
 24330  00A59A  0100               	movlb	0	; () banked
 24331  00A59C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24332  00A59E  D018               	goto	l1411
 24333  00A5A0                     
 24334                           ; BSR set to: 0
 24335                           ;display.c: 374: {;display.c: 375: display_content[0][cntr+8] = temp[cntr];
 24336                           
 24337                           ; BSR set to: 0
 24338  00A5A0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24339  00A5A2  0D01               	mullw	1
 24340  00A5A4  0EBE               	movlw	low display_prepare@temp
 24341  00A5A6  24F3               	addwf	prodl,w,c
 24342  00A5A8  6ED9               	movwf	fsr2l,c
 24343  00A5AA  0E00               	movlw	high display_prepare@temp
 24344  00A5AC  20F4               	addwfc	prodh,w,c
 24345  00A5AE  6EDA               	movwf	fsr2h,c
 24346  00A5B0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24347  00A5B2  6FBC               	movwf	??_display_prepare& (0+255),b
 24348  00A5B4  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24349  00A5B6  0E08               	movlw	8
 24350  00A5B8  27BC               	addwf	??_display_prepare& (0+255),f,b
 24351  00A5BA  0E00               	movlw	0
 24352  00A5BC  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24353  00A5BE  0E34               	movlw	low _display_content
 24354  00A5C0  25BC               	addwf	??_display_prepare& (0+255),w,b
 24355  00A5C2  6EE1               	movwf	fsr1l,c
 24356  00A5C4  0E02               	movlw	high _display_content
 24357  00A5C6  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24358  00A5C8  6EE2               	movwf	fsr1h,c
 24359  00A5CA  CFDF FFE7          	movff	indf2,indf1
 24360                           
 24361                           ; BSR set to: 0
 24362  00A5CE  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24363  00A5D0                     l1411:
 24364                           
 24365                           ; BSR set to: 0
 24366                           
 24367                           ; BSR set to: 0
 24368  00A5D0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24369  00A5D2  0D01               	mullw	1
 24370  00A5D4  0EBE               	movlw	low display_prepare@temp
 24371  00A5D6  24F3               	addwf	prodl,w,c
 24372  00A5D8  6ED9               	movwf	fsr2l,c
 24373  00A5DA  0E00               	movlw	high display_prepare@temp
 24374  00A5DC  20F4               	addwfc	prodh,w,c
 24375  00A5DE  6EDA               	movwf	fsr2h,c
 24376  00A5E0  50DF               	movf	indf2,w,c
 24377  00A5E2  A4D8               	btfss	status,2,c
 24378  00A5E4  D7DD               	goto	l1412
 24379                           
 24380                           ; BSR set to: 0
 24381                           ;display.c: 376: };display.c: 378: display_content[0][cntr+8] = ',';
 24382                           
 24383                           ; BSR set to: 0
 24384  00A5E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24385  00A5E8  6FBC               	movwf	??_display_prepare& (0+255),b
 24386  00A5EA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24387  00A5EC  0E08               	movlw	8
 24388  00A5EE  27BC               	addwf	??_display_prepare& (0+255),f,b
 24389  00A5F0  0E00               	movlw	0
 24390  00A5F2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24391  00A5F4  0E34               	movlw	low _display_content
 24392  00A5F6  25BC               	addwf	??_display_prepare& (0+255),w,b
 24393  00A5F8  6ED9               	movwf	fsr2l,c
 24394  00A5FA  0E02               	movlw	high _display_content
 24395  00A5FC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24396  00A5FE  6EDA               	movwf	fsr2h,c
 24397  00A600  0E2C               	movlw	44
 24398  00A602  6EDF               	movwf	indf2,c
 24399                           
 24400                           ; BSR set to: 0
 24401                           ;display.c: 379: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 24402  00A604  0101               	movlb	1	; () banked
 24403  00A606  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 24404  00A608  A4D8               	btfss	status,2,c
 24405  00A60A  D024               	goto	l1414
 24406                           
 24407                           ; BSR set to: 1
 24408                           ;display.c: 380: {;display.c: 381: display_content[0][cntr+10] = 'C';
 24409  00A60C  0100               	movlb	0	; () banked
 24410  00A60E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24411  00A610  6FBC               	movwf	??_display_prepare& (0+255),b
 24412  00A612  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24413  00A614  0E0A               	movlw	10
 24414  00A616  27BC               	addwf	??_display_prepare& (0+255),f,b
 24415  00A618  0E00               	movlw	0
 24416  00A61A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24417  00A61C  0E34               	movlw	low _display_content
 24418  00A61E  25BC               	addwf	??_display_prepare& (0+255),w,b
 24419  00A620  6ED9               	movwf	fsr2l,c
 24420  00A622  0E02               	movlw	high _display_content
 24421  00A624  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24422  00A626  6EDA               	movwf	fsr2h,c
 24423  00A628  0E43               	movlw	67
 24424  00A62A  6EDF               	movwf	indf2,c
 24425                           
 24426                           ;display.c: 382: display_content[0][cntr+11] = 'C';
 24427  00A62C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24428  00A62E  6FBC               	movwf	??_display_prepare& (0+255),b
 24429  00A630  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24430  00A632  0E0B               	movlw	11
 24431  00A634  27BC               	addwf	??_display_prepare& (0+255),f,b
 24432  00A636  0E00               	movlw	0
 24433  00A638  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24434  00A63A  0E34               	movlw	low _display_content
 24435  00A63C  25BC               	addwf	??_display_prepare& (0+255),w,b
 24436  00A63E  6ED9               	movwf	fsr2l,c
 24437  00A640  0E02               	movlw	high _display_content
 24438  00A642  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24439  00A644  6EDA               	movwf	fsr2h,c
 24440  00A646  0E43               	movlw	67
 24441  00A648  6EDF               	movwf	indf2,c
 24442                           
 24443                           ;display.c: 383: display_content[0][cntr+12] = 'W';
 24444  00A64A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24445  00A64C  6FBC               	movwf	??_display_prepare& (0+255),b
 24446  00A64E  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24447  00A650  0E0C               	movlw	12
 24448  00A652  D014               	goto	L30
 24449  00A654                     l1414:
 24450                           
 24451                           ;display.c: 385: else;display.c: 386: {;display.c: 387: display_content[0][cntr+10] = 'C
      +                          ';
 24452                           
 24453                           ; BSR set to: 0
 24454  00A654  0100               	movlb	0	; () banked
 24455  00A656  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24456  00A658  6FBC               	movwf	??_display_prepare& (0+255),b
 24457  00A65A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24458  00A65C  0E0A               	movlw	10
 24459  00A65E  27BC               	addwf	??_display_prepare& (0+255),f,b
 24460  00A660  0E00               	movlw	0
 24461  00A662  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24462  00A664  0E34               	movlw	low _display_content
 24463  00A666  25BC               	addwf	??_display_prepare& (0+255),w,b
 24464  00A668  6ED9               	movwf	fsr2l,c
 24465  00A66A  0E02               	movlw	high _display_content
 24466  00A66C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24467  00A66E  6EDA               	movwf	fsr2h,c
 24468  00A670  0E43               	movlw	67
 24469  00A672  6EDF               	movwf	indf2,c
 24470                           
 24471                           ;display.c: 388: display_content[0][cntr+11] = 'W';
 24472  00A674  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24473  00A676  6FBC               	movwf	??_display_prepare& (0+255),b
 24474  00A678  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24475  00A67A  0E0B               	movlw	11
 24476  00A67C                     L30:
 24477  00A67C  27BC               	addwf	??_display_prepare& (0+255),f,b
 24478  00A67E  0E00               	movlw	0
 24479  00A680  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24480  00A682  0E34               	movlw	low _display_content
 24481  00A684  25BC               	addwf	??_display_prepare& (0+255),w,b
 24482  00A686  6ED9               	movwf	fsr2l,c
 24483  00A688  0E02               	movlw	high _display_content
 24484  00A68A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24485  00A68C  6EDA               	movwf	fsr2h,c
 24486  00A68E  0E57               	movlw	87
 24487  00A690  6EDF               	movwf	indf2,c
 24488                           
 24489                           ; BSR set to: 0
 24490                           ;display.c: 389: };display.c: 391: _display_padded_itoa(os.divide_position, 0, temp);
 24491                           
 24492                           ; BSR set to: 0
 24493  00A692  C187  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 24494  00A696  C188  F079         	movff	_os+23,__display_padded_itoa@value+1	;volatile
 24495  00A69A  0E00               	movlw	0
 24496  00A69C  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 24497  00A69E  0EBE               	movlw	low display_prepare@temp
 24498  00A6A0  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 24499  00A6A2  0E00               	movlw	high display_prepare@temp
 24500  00A6A4  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 24501  00A6A6  EC94  F08D         	call	__display_padded_itoa	;wreg free
 24502                           
 24503                           ;display.c: 392: for(cntr=0; temp[cntr]; ++cntr)
 24504  00A6AA  0E00               	movlw	0
 24505  00A6AC  0100               	movlb	0	; () banked
 24506  00A6AE  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24507  00A6B0  D018               	goto	l1416
 24508  00A6B2                     
 24509                           ; BSR set to: 0
 24510                           ;display.c: 393: {;display.c: 394: display_content[1][cntr+5] = temp[cntr];
 24511                           
 24512                           ; BSR set to: 0
 24513  00A6B2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24514  00A6B4  0D01               	mullw	1
 24515  00A6B6  0EBE               	movlw	low display_prepare@temp
 24516  00A6B8  24F3               	addwf	prodl,w,c
 24517  00A6BA  6ED9               	movwf	fsr2l,c
 24518  00A6BC  0E00               	movlw	high display_prepare@temp
 24519  00A6BE  20F4               	addwfc	prodh,w,c
 24520  00A6C0  6EDA               	movwf	fsr2h,c
 24521  00A6C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24522  00A6C4  6FBC               	movwf	??_display_prepare& (0+255),b
 24523  00A6C6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24524  00A6C8  0E05               	movlw	5
 24525  00A6CA  27BC               	addwf	??_display_prepare& (0+255),f,b
 24526  00A6CC  0E00               	movlw	0
 24527  00A6CE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24528  00A6D0  0E48               	movlw	low (_display_content+20)
 24529  00A6D2  25BC               	addwf	??_display_prepare& (0+255),w,b
 24530  00A6D4  6EE1               	movwf	fsr1l,c
 24531  00A6D6  0E02               	movlw	high (_display_content+20)
 24532  00A6D8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24533  00A6DA  6EE2               	movwf	fsr1h,c
 24534  00A6DC  CFDF FFE7          	movff	indf2,indf1
 24535                           
 24536                           ; BSR set to: 0
 24537  00A6E0  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24538  00A6E2                     l1416:
 24539                           
 24540                           ; BSR set to: 0
 24541                           
 24542                           ; BSR set to: 0
 24543  00A6E2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24544  00A6E4  0D01               	mullw	1
 24545  00A6E6  0EBE               	movlw	low display_prepare@temp
 24546  00A6E8  24F3               	addwf	prodl,w,c
 24547  00A6EA  6ED9               	movwf	fsr2l,c
 24548  00A6EC  0E00               	movlw	high display_prepare@temp
 24549  00A6EE  20F4               	addwfc	prodh,w,c
 24550  00A6F0  6EDA               	movwf	fsr2h,c
 24551  00A6F2  50DF               	movf	indf2,w,c
 24552  00A6F4  A4D8               	btfss	status,2,c
 24553  00A6F6  D7DD               	goto	l1417
 24554                           
 24555                           ; BSR set to: 0
 24556                           ;display.c: 395: };display.c: 397: display_content[1][cntr+6] = '(';
 24557                           
 24558                           ; BSR set to: 0
 24559  00A6F8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24560  00A6FA  6FBC               	movwf	??_display_prepare& (0+255),b
 24561  00A6FC  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24562  00A6FE  0E06               	movlw	6
 24563  00A700  27BC               	addwf	??_display_prepare& (0+255),f,b
 24564  00A702  0E00               	movlw	0
 24565  00A704  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24566  00A706  0E48               	movlw	low (_display_content+20)
 24567  00A708  25BC               	addwf	??_display_prepare& (0+255),w,b
 24568  00A70A  6ED9               	movwf	fsr2l,c
 24569  00A70C  0E02               	movlw	high (_display_content+20)
 24570  00A70E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24571  00A710  6EDA               	movwf	fsr2h,c
 24572  00A712  0E28               	movlw	40
 24573  00A714  6EDF               	movwf	indf2,c
 24574                           
 24575                           ; BSR set to: 0
 24576                           ;display.c: 398: space = cntr + 7;
 24577  00A716  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24578  00A718  0F07               	addlw	7
 24579  00A71A  6FC8               	movwf	display_prepare@space& (0+255),b
 24580                           
 24581                           ; BSR set to: 0
 24582                           ;display.c: 399: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 24583  00A71C  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 24584  00A720  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 24585  00A724  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 24586  00A726  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 24587  00A728  0E02               	movlw	2
 24588  00A72A  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 24589  00A72C  0EBE               	movlw	low display_prepare@temp
 24590  00A72E  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 24591  00A730  0E00               	movlw	high display_prepare@temp
 24592  00A732  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 24593  00A734  EC44  F084         	call	__display_itoa_long	;wreg free
 24594                           
 24595                           ;display.c: 400: for(cntr=0; temp[cntr]; ++cntr)
 24596  00A738  0E00               	movlw	0
 24597  00A73A  0100               	movlb	0	; () banked
 24598  00A73C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24599  00A73E  D018               	goto	l1419
 24600  00A740                     
 24601                           ; BSR set to: 0
 24602                           ;display.c: 401: {;display.c: 402: display_content[1][cntr+space] = temp[cntr];
 24603                           
 24604                           ; BSR set to: 0
 24605  00A740  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24606  00A742  0D01               	mullw	1
 24607  00A744  0EBE               	movlw	low display_prepare@temp
 24608  00A746  24F3               	addwf	prodl,w,c
 24609  00A748  6ED9               	movwf	fsr2l,c
 24610  00A74A  0E00               	movlw	high display_prepare@temp
 24611  00A74C  20F4               	addwfc	prodh,w,c
 24612  00A74E  6EDA               	movwf	fsr2h,c
 24613  00A750  51C8               	movf	display_prepare@space& (0+255),w,b
 24614  00A752  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 24615  00A756  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24616  00A758  27BC               	addwf	??_display_prepare& (0+255),f,b
 24617  00A75A  0E00               	movlw	0
 24618  00A75C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24619  00A75E  0E48               	movlw	low (_display_content+20)
 24620  00A760  25BC               	addwf	??_display_prepare& (0+255),w,b
 24621  00A762  6EE1               	movwf	fsr1l,c
 24622  00A764  0E02               	movlw	high (_display_content+20)
 24623  00A766  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24624  00A768  6EE2               	movwf	fsr1h,c
 24625  00A76A  CFDF FFE7          	movff	indf2,indf1
 24626                           
 24627                           ; BSR set to: 0
 24628  00A76E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24629  00A770                     l1419:
 24630                           
 24631                           ; BSR set to: 0
 24632                           
 24633                           ; BSR set to: 0
 24634  00A770  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24635  00A772  0D01               	mullw	1
 24636  00A774  0EBE               	movlw	low display_prepare@temp
 24637  00A776  24F3               	addwf	prodl,w,c
 24638  00A778  6ED9               	movwf	fsr2l,c
 24639  00A77A  0E00               	movlw	high display_prepare@temp
 24640  00A77C  20F4               	addwfc	prodh,w,c
 24641  00A77E  6EDA               	movwf	fsr2h,c
 24642  00A780  50DF               	movf	indf2,w,c
 24643  00A782  A4D8               	btfss	status,2,c
 24644  00A784  D7DD               	goto	l1420
 24645                           
 24646                           ; BSR set to: 0
 24647                           ;display.c: 403: };display.c: 404: display_content[1][cntr+space] = 0x01;
 24648                           
 24649                           ; BSR set to: 0
 24650  00A786  51C8               	movf	display_prepare@space& (0+255),w,b
 24651  00A788  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 24652  00A78C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24653  00A78E  27BC               	addwf	??_display_prepare& (0+255),f,b
 24654  00A790  0E00               	movlw	0
 24655  00A792  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24656  00A794  0E48               	movlw	low (_display_content+20)
 24657  00A796  25BC               	addwf	??_display_prepare& (0+255),w,b
 24658  00A798  6ED9               	movwf	fsr2l,c
 24659  00A79A  0E02               	movlw	high (_display_content+20)
 24660  00A79C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24661  00A79E  6EDA               	movwf	fsr2h,c
 24662  00A7A0  0E01               	movlw	1
 24663  00A7A2  6EDF               	movwf	indf2,c
 24664                           
 24665                           ;display.c: 405: display_content[1][cntr+space+1] = ')';
 24666  00A7A4  51C8               	movf	display_prepare@space& (0+255),w,b
 24667  00A7A6  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 24668  00A7AA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24669  00A7AC  27BC               	addwf	??_display_prepare& (0+255),f,b
 24670  00A7AE  0E00               	movlw	0
 24671  00A7B0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24672  00A7B2  0E01               	movlw	1
 24673  00A7B4  27BC               	addwf	??_display_prepare& (0+255),f,b
 24674  00A7B6  0E00               	movlw	0
 24675  00A7B8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24676  00A7BA  0E48               	movlw	low (_display_content+20)
 24677  00A7BC  25BC               	addwf	??_display_prepare& (0+255),w,b
 24678  00A7BE  6ED9               	movwf	fsr2l,c
 24679  00A7C0  0E02               	movlw	high (_display_content+20)
 24680  00A7C2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24681  00A7C4  6EDA               	movwf	fsr2h,c
 24682  00A7C6  0E29               	movlw	41
 24683  00A7C8  6EDF               	movwf	indf2,c
 24684                           
 24685                           ; BSR set to: 0
 24686                           ;display.c: 407: _display_signed_itoa(os.divide_jump_size, temp);
 24687  00A7CA  C189  F08F         	movff	_os+24,__display_signed_itoa@value	;volatile
 24688  00A7CE  C18A  F090         	movff	_os+25,__display_signed_itoa@value+1	;volatile
 24689  00A7D2  0EBE               	movlw	low display_prepare@temp
 24690  00A7D4  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 24691  00A7D6  0E00               	movlw	high display_prepare@temp
 24692  00A7D8  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 24693  00A7DA  EC3B  F0A6         	call	__display_signed_itoa	;wreg free
 24694                           
 24695                           ;display.c: 408: for(cntr=0; temp[cntr]; ++cntr)
 24696  00A7DE  0E00               	movlw	0
 24697  00A7E0  0100               	movlb	0	; () banked
 24698  00A7E2  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24699  00A7E4  D018               	goto	l1422
 24700  00A7E6                     
 24701                           ; BSR set to: 0
 24702                           ;display.c: 409: {;display.c: 410: display_content[2][cntr+11] = temp[cntr];
 24703                           
 24704                           ; BSR set to: 0
 24705  00A7E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24706  00A7E8  0D01               	mullw	1
 24707  00A7EA  0EBE               	movlw	low display_prepare@temp
 24708  00A7EC  24F3               	addwf	prodl,w,c
 24709  00A7EE  6ED9               	movwf	fsr2l,c
 24710  00A7F0  0E00               	movlw	high display_prepare@temp
 24711  00A7F2  20F4               	addwfc	prodh,w,c
 24712  00A7F4  6EDA               	movwf	fsr2h,c
 24713  00A7F6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24714  00A7F8  6FBC               	movwf	??_display_prepare& (0+255),b
 24715  00A7FA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24716  00A7FC  0E0B               	movlw	11
 24717  00A7FE  27BC               	addwf	??_display_prepare& (0+255),f,b
 24718  00A800  0E00               	movlw	0
 24719  00A802  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24720  00A804  0E5C               	movlw	low (_display_content+40)
 24721  00A806  25BC               	addwf	??_display_prepare& (0+255),w,b
 24722  00A808  6EE1               	movwf	fsr1l,c
 24723  00A80A  0E02               	movlw	high (_display_content+40)
 24724  00A80C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24725  00A80E  6EE2               	movwf	fsr1h,c
 24726  00A810  CFDF FFE7          	movff	indf2,indf1
 24727                           
 24728                           ; BSR set to: 0
 24729  00A814  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24730  00A816                     l1422:
 24731                           
 24732                           ; BSR set to: 0
 24733                           
 24734                           ; BSR set to: 0
 24735  00A816  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24736  00A818  0D01               	mullw	1
 24737  00A81A  0EBE               	movlw	low display_prepare@temp
 24738  00A81C  24F3               	addwf	prodl,w,c
 24739  00A81E  6ED9               	movwf	fsr2l,c
 24740  00A820  0E00               	movlw	high display_prepare@temp
 24741  00A822  20F4               	addwfc	prodh,w,c
 24742  00A824  6EDA               	movwf	fsr2h,c
 24743  00A826  50DF               	movf	indf2,w,c
 24744  00A828  B4D8               	btfsc	status,2,c
 24745  00A82A  D3A6               	goto	l1385
 24746  00A82C  D7DC               	goto	l1423
 24747  00A82E                     
 24748                           ; BSR set to: 0
 24749                           ;display.c: 415: memcpy(display_content, dc_arc1, sizeof display_content);
 24750                           
 24751                           ; BSR set to: 0
 24752  00A82E  0E34               	movlw	low _display_content
 24753  00A830  6F60               	movwf	memcpy@d1& (0+255),b
 24754  00A832  0E02               	movlw	high _display_content
 24755  00A834  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24756  00A836  0EDE               	movlw	low _dc_arc1
 24757  00A838  6F62               	movwf	memcpy@s1& (0+255),b
 24758  00A83A  0E9E               	movlw	high _dc_arc1
 24759  00A83C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24760  00A83E  0E00               	movlw	0
 24761  00A840  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24762  00A842  0E50               	movlw	80
 24763  00A844  6F64               	movwf	memcpy@n& (0+255),b
 24764  00A846  ECCF  F0A0         	call	_memcpy	;wreg free
 24765                           
 24766                           ;display.c: 416: switch(os.displayState)
 24767  00A84A  D008               	goto	l1426
 24768  00A84C                     
 24769                           ;display.c: 419: display_content[2][12] = '>';
 24770  00A84C  0E3E               	movlw	62
 24771  00A84E  0102               	movlb	2	; () banked
 24772  00A850  6F68               	movwf	(_display_content+52)& (0+255),b
 24773                           
 24774                           ;display.c: 420: break;
 24775  00A852  D00C               	goto	l1428
 24776  00A854                     
 24777                           ;display.c: 422: display_content[3][12] = '>';
 24778                           
 24779                           ; BSR set to: 2
 24780  00A854  0E3E               	movlw	62
 24781  00A856  0102               	movlb	2	; () banked
 24782  00A858  6F7C               	movwf	(_display_content+72)& (0+255),b
 24783                           
 24784                           ; BSR set to: 2
 24785                           ;display.c: 424: }
 24786                           
 24787                           ;display.c: 423: break;
 24788  00A85A  D008               	goto	l1428
 24789  00A85C                     l1426:
 24790                           
 24791                           ; BSR set to: 2
 24792  00A85C  0101               	movlb	1	; () banked
 24793  00A85E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 24794                           
 24795                           ; Switch size 1, requested type "space"
 24796                           ; Number of cases is 2, Range of values is 81 to 82
 24797                           ; switch strategies available:
 24798                           ; Name         Instructions Cycles
 24799                           ; simple_byte            7     4 (average)
 24800                           ;	Chosen strategy is simple_byte
 24801  00A860  0A51               	xorlw	81	; case 81
 24802  00A862  B4D8               	btfsc	status,2,c
 24803  00A864  D7F3               	goto	l1427
 24804  00A866  0A03               	xorlw	3	; case 82
 24805  00A868  B4D8               	btfsc	status,2,c
 24806  00A86A  D7F4               	goto	l1429
 24807  00A86C                     l1428:
 24808                           
 24809                           ;display.c: 427: _display_itoa_long(os.arc_size, 2, temp);
 24810                           
 24811                           ; BSR set to: 1
 24812  00A86C  C18D  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 24813  00A870  C18E  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 24814  00A874  C18F  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 24815  00A878  C190  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 24816  00A87C  0E02               	movlw	2
 24817  00A87E  0100               	movlb	0	; () banked
 24818  00A880  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 24819  00A882  0EBE               	movlw	low display_prepare@temp
 24820  00A884  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 24821  00A886  0E00               	movlw	high display_prepare@temp
 24822  00A888  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 24823  00A88A  EC44  F084         	call	__display_itoa_long	;wreg free
 24824                           
 24825                           ;display.c: 428: for(cntr=0; temp[cntr]; ++cntr)
 24826  00A88E  0E00               	movlw	0
 24827  00A890  0100               	movlb	0	; () banked
 24828  00A892  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24829  00A894  D018               	goto	l1430
 24830  00A896                     
 24831                           ; BSR set to: 0
 24832                           ;display.c: 429: {;display.c: 430: display_content[1][10+cntr] = temp[cntr];
 24833                           
 24834                           ; BSR set to: 0
 24835  00A896  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24836  00A898  0D01               	mullw	1
 24837  00A89A  0EBE               	movlw	low display_prepare@temp
 24838  00A89C  24F3               	addwf	prodl,w,c
 24839  00A89E  6ED9               	movwf	fsr2l,c
 24840  00A8A0  0E00               	movlw	high display_prepare@temp
 24841  00A8A2  20F4               	addwfc	prodh,w,c
 24842  00A8A4  6EDA               	movwf	fsr2h,c
 24843  00A8A6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24844  00A8A8  6FBC               	movwf	??_display_prepare& (0+255),b
 24845  00A8AA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24846  00A8AC  0E0A               	movlw	10
 24847  00A8AE  27BC               	addwf	??_display_prepare& (0+255),f,b
 24848  00A8B0  0E00               	movlw	0
 24849  00A8B2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24850  00A8B4  0E48               	movlw	low (_display_content+20)
 24851  00A8B6  25BC               	addwf	??_display_prepare& (0+255),w,b
 24852  00A8B8  6EE1               	movwf	fsr1l,c
 24853  00A8BA  0E02               	movlw	high (_display_content+20)
 24854  00A8BC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24855  00A8BE  6EE2               	movwf	fsr1h,c
 24856  00A8C0  CFDF FFE7          	movff	indf2,indf1
 24857                           
 24858                           ; BSR set to: 0
 24859  00A8C4  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24860  00A8C6                     l1430:
 24861                           
 24862                           ; BSR set to: 0
 24863                           
 24864                           ; BSR set to: 0
 24865  00A8C6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24866  00A8C8  0D01               	mullw	1
 24867  00A8CA  0EBE               	movlw	low display_prepare@temp
 24868  00A8CC  24F3               	addwf	prodl,w,c
 24869  00A8CE  6ED9               	movwf	fsr2l,c
 24870  00A8D0  0E00               	movlw	high display_prepare@temp
 24871  00A8D2  20F4               	addwfc	prodh,w,c
 24872  00A8D4  6EDA               	movwf	fsr2h,c
 24873  00A8D6  50DF               	movf	indf2,w,c
 24874  00A8D8  A4D8               	btfss	status,2,c
 24875  00A8DA  D7DD               	goto	l1431
 24876                           
 24877                           ; BSR set to: 0
 24878                           ;display.c: 431: };display.c: 432: display_content[1][10+cntr] = 0x01;
 24879                           
 24880                           ; BSR set to: 0
 24881  00A8DC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24882  00A8DE  6FBC               	movwf	??_display_prepare& (0+255),b
 24883  00A8E0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24884  00A8E2  0E0A               	movlw	10
 24885  00A8E4  27BC               	addwf	??_display_prepare& (0+255),f,b
 24886  00A8E6  0E00               	movlw	0
 24887  00A8E8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24888  00A8EA  0E48               	movlw	low (_display_content+20)
 24889  00A8EC  25BC               	addwf	??_display_prepare& (0+255),w,b
 24890  00A8EE  6ED9               	movwf	fsr2l,c
 24891  00A8F0  0E02               	movlw	high (_display_content+20)
 24892  00A8F2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24893  00A8F4  6EDA               	movwf	fsr2h,c
 24894  00A8F6  0E01               	movlw	1
 24895  00A8F8  6EDF               	movwf	indf2,c
 24896                           
 24897                           ; BSR set to: 0
 24898                           ;display.c: 435: _display_itoa(os.arc_step_size, 2, temp);
 24899  00A8FA  C18B  F095         	movff	_os+26,__display_itoa@value	;volatile
 24900  00A8FE  C18C  F096         	movff	_os+27,__display_itoa@value+1	;volatile
 24901  00A902  0E02               	movlw	2
 24902  00A904  6F97               	movwf	__display_itoa@decimals& (0+255),b
 24903  00A906  0EBE               	movlw	low display_prepare@temp
 24904  00A908  6F98               	movwf	__display_itoa@text& (0+255),b
 24905  00A90A  0E00               	movlw	high display_prepare@temp
 24906  00A90C  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 24907  00A90E  EC33  F075         	call	__display_itoa	;wreg free
 24908                           
 24909                           ;display.c: 436: if(os.arc_step_size>999)
 24910  00A912  0EE8               	movlw	232
 24911  00A914  0101               	movlb	1	; () banked
 24912  00A916  5D8B               	subwf	(_os+26)& (0+255),w,b	;volatile
 24913  00A918  0E03               	movlw	3
 24914  00A91A  598C               	subwfb	(_os+27)& (0+255),w,b	;volatile
 24915  00A91C  A0D8               	btfss	status,0,c
 24916  00A91E  D002               	goto	l1433
 24917                           
 24918                           ; BSR set to: 1
 24919                           ;display.c: 437: space = 0;
 24920  00A920  0E00               	movlw	0
 24921  00A922  D001               	goto	L24
 24922  00A924                     l1433:
 24923                           
 24924                           ;display.c: 438: else;display.c: 439: space = 1;
 24925                           
 24926                           ; BSR set to: 0
 24927  00A924  0E01               	movlw	1
 24928  00A926                     L24:
 24929  00A926  0100               	movlb	0	; () banked
 24930  00A928  6FC8               	movwf	display_prepare@space& (0+255),b
 24931                           
 24932                           ; BSR set to: 0
 24933                           ;display.c: 440: for(cntr=0; temp[cntr]; ++cntr)
 24934  00A92A  0E00               	movlw	0
 24935  00A92C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24936  00A92E  D018               	goto	l1435
 24937  00A930                     
 24938                           ; BSR set to: 0
 24939                           ;display.c: 441: {;display.c: 442: display_content[3][space+cntr] = temp[cntr];
 24940                           
 24941                           ; BSR set to: 0
 24942  00A930  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24943  00A932  0D01               	mullw	1
 24944  00A934  0EBE               	movlw	low display_prepare@temp
 24945  00A936  24F3               	addwf	prodl,w,c
 24946  00A938  6ED9               	movwf	fsr2l,c
 24947  00A93A  0E00               	movlw	high display_prepare@temp
 24948  00A93C  20F4               	addwfc	prodh,w,c
 24949  00A93E  6EDA               	movwf	fsr2h,c
 24950  00A940  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24951  00A942  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 24952  00A946  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24953  00A948  27BC               	addwf	??_display_prepare& (0+255),f,b
 24954  00A94A  0E00               	movlw	0
 24955  00A94C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24956  00A94E  0E70               	movlw	low (_display_content+60)
 24957  00A950  25BC               	addwf	??_display_prepare& (0+255),w,b
 24958  00A952  6EE1               	movwf	fsr1l,c
 24959  00A954  0E02               	movlw	high (_display_content+60)
 24960  00A956  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24961  00A958  6EE2               	movwf	fsr1h,c
 24962  00A95A  CFDF FFE7          	movff	indf2,indf1
 24963                           
 24964                           ; BSR set to: 0
 24965  00A95E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24966  00A960                     l1435:
 24967                           
 24968                           ; BSR set to: 0
 24969                           
 24970                           ; BSR set to: 0
 24971  00A960  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24972  00A962  0D01               	mullw	1
 24973  00A964  0EBE               	movlw	low display_prepare@temp
 24974  00A966  24F3               	addwf	prodl,w,c
 24975  00A968  6ED9               	movwf	fsr2l,c
 24976  00A96A  0E00               	movlw	high display_prepare@temp
 24977  00A96C  20F4               	addwfc	prodh,w,c
 24978  00A96E  6EDA               	movwf	fsr2h,c
 24979  00A970  50DF               	movf	indf2,w,c
 24980  00A972  A4D8               	btfss	status,2,c
 24981  00A974  D7DD               	goto	l1436
 24982                           
 24983                           ; BSR set to: 0
 24984                           ;display.c: 443: };display.c: 444: display_content[3][space+cntr] = 0x01 ;
 24985                           
 24986                           ; BSR set to: 0
 24987  00A976  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24988  00A978  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 24989  00A97C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24990  00A97E  27BC               	addwf	??_display_prepare& (0+255),f,b
 24991  00A980  0E00               	movlw	0
 24992  00A982  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24993  00A984  0E70               	movlw	low (_display_content+60)
 24994  00A986  25BC               	addwf	??_display_prepare& (0+255),w,b
 24995  00A988  6ED9               	movwf	fsr2l,c
 24996  00A98A  0E02               	movlw	high (_display_content+60)
 24997  00A98C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24998  00A98E  6EDA               	movwf	fsr2h,c
 24999  00A990  0E01               	movlw	1
 25000  00A992  D25B               	goto	L27
 25001  00A994                     
 25002                           ; BSR set to: 0
 25003                           ;display.c: 449: memcpy(display_content, dc_arc2, sizeof display_content);
 25004                           
 25005                           ; BSR set to: 0
 25006  00A994  0E34               	movlw	low _display_content
 25007  00A996  6F60               	movwf	memcpy@d1& (0+255),b
 25008  00A998  0E02               	movlw	high _display_content
 25009  00A99A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25010  00A99C  0E8E               	movlw	low _dc_arc2
 25011  00A99E  6F62               	movwf	memcpy@s1& (0+255),b
 25012  00A9A0  0E9E               	movlw	high _dc_arc2
 25013  00A9A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25014  00A9A4  0E00               	movlw	0
 25015  00A9A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25016  00A9A8  0E50               	movlw	80
 25017  00A9AA  6F64               	movwf	memcpy@n& (0+255),b
 25018  00A9AC  ECCF  F0A0         	call	_memcpy	;wreg free
 25019                           
 25020                           ;display.c: 450: switch(os.displayState)
 25021  00A9B0  D025               	goto	l1439
 25022  00A9B2                     
 25023                           ;display.c: 453: display_content[2][6] = 'W';
 25024  00A9B2  0E57               	movlw	87
 25025  00A9B4  0102               	movlb	2	; () banked
 25026  00A9B6  6F62               	movwf	(_display_content+46)& (0+255),b
 25027                           
 25028                           ;display.c: 454: display_content[2][7] = ' ';
 25029  00A9B8  0E20               	movlw	32
 25030  00A9BA  6F63               	movwf	(_display_content+47)& (0+255),b
 25031                           
 25032                           ;display.c: 455: break;
 25033  00A9BC  D027               	goto	l1441
 25034  00A9BE                     
 25035                           ;display.c: 457: memcpy(display_content[2], "        ", 8);
 25036                           
 25037                           ; BSR set to: 2
 25038  00A9BE  0E5C               	movlw	low (_display_content+40)
 25039  00A9C0  0100               	movlb	0	; () banked
 25040  00A9C2  6F60               	movwf	memcpy@d1& (0+255),b
 25041  00A9C4  0E02               	movlw	high (_display_content+40)
 25042  00A9C6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25043  00A9C8  0E14               	movlw	low STR_1
 25044  00A9CA  6F62               	movwf	memcpy@s1& (0+255),b
 25045  00A9CC  0EA3               	movlw	high STR_1
 25046  00A9CE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25047  00A9D0  0E00               	movlw	0
 25048  00A9D2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25049  00A9D4  0E08               	movlw	8
 25050  00A9D6  6F64               	movwf	memcpy@n& (0+255),b
 25051  00A9D8  ECCF  F0A0         	call	_memcpy	;wreg free
 25052                           
 25053                           ;display.c: 458: memcpy(display_content[3], "Cancel", 6);
 25054  00A9DC  0E70               	movlw	low (_display_content+60)
 25055  00A9DE  0100               	movlb	0	; () banked
 25056  00A9E0  6F60               	movwf	memcpy@d1& (0+255),b
 25057  00A9E2  0E02               	movlw	high (_display_content+60)
 25058  00A9E4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25059  00A9E6  0E1D               	movlw	low STR_2
 25060  00A9E8  6F62               	movwf	memcpy@s1& (0+255),b
 25061  00A9EA  0EA3               	movlw	high STR_2
 25062  00A9EC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25063  00A9EE  0E00               	movlw	0
 25064  00A9F0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25065  00A9F2  0E06               	movlw	6
 25066  00A9F4  6F64               	movwf	memcpy@n& (0+255),b
 25067  00A9F6  ECCF  F0A0         	call	_memcpy	;wreg free
 25068                           
 25069                           ;display.c: 460: }
 25070                           
 25071                           ;display.c: 459: break;
 25072  00A9FA  D008               	goto	l1441
 25073  00A9FC                     l1439:
 25074  00A9FC  0101               	movlb	1	; () banked
 25075  00A9FE  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25076                           
 25077                           ; Switch size 1, requested type "space"
 25078                           ; Number of cases is 2, Range of values is 98 to 99
 25079                           ; switch strategies available:
 25080                           ; Name         Instructions Cycles
 25081                           ; simple_byte            7     4 (average)
 25082                           ;	Chosen strategy is simple_byte
 25083  00AA00  0A62               	xorlw	98	; case 98
 25084  00AA02  B4D8               	btfsc	status,2,c
 25085  00AA04  D7DC               	goto	l1442
 25086  00AA06  0A01               	xorlw	1	; case 99
 25087  00AA08  B4D8               	btfsc	status,2,c
 25088  00AA0A  D7D3               	goto	l1440
 25089  00AA0C                     l1441:
 25090                           
 25091                           ;display.c: 463: _display_itoa_long(os.arc_size, 2, temp);
 25092                           
 25093                           ; BSR set to: 1
 25094  00AA0C  C18D  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 25095  00AA10  C18E  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 25096  00AA14  C18F  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 25097  00AA18  C190  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 25098  00AA1C  0E02               	movlw	2
 25099  00AA1E  0100               	movlb	0	; () banked
 25100  00AA20  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25101  00AA22  0EBE               	movlw	low display_prepare@temp
 25102  00AA24  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25103  00AA26  0E00               	movlw	high display_prepare@temp
 25104  00AA28  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25105  00AA2A  EC44  F084         	call	__display_itoa_long	;wreg free
 25106                           
 25107                           ;display.c: 464: for(cntr=0; temp[cntr]; ++cntr)
 25108  00AA2E  0E00               	movlw	0
 25109  00AA30  0100               	movlb	0	; () banked
 25110  00AA32  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25111  00AA34  D018               	goto	l1443
 25112  00AA36                     
 25113                           ; BSR set to: 0
 25114                           ;display.c: 465: {;display.c: 466: display_content[0][10+cntr] = temp[cntr];
 25115                           
 25116                           ; BSR set to: 0
 25117  00AA36  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25118  00AA38  0D01               	mullw	1
 25119  00AA3A  0EBE               	movlw	low display_prepare@temp
 25120  00AA3C  24F3               	addwf	prodl,w,c
 25121  00AA3E  6ED9               	movwf	fsr2l,c
 25122  00AA40  0E00               	movlw	high display_prepare@temp
 25123  00AA42  20F4               	addwfc	prodh,w,c
 25124  00AA44  6EDA               	movwf	fsr2h,c
 25125  00AA46  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25126  00AA48  6FBC               	movwf	??_display_prepare& (0+255),b
 25127  00AA4A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25128  00AA4C  0E0A               	movlw	10
 25129  00AA4E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25130  00AA50  0E00               	movlw	0
 25131  00AA52  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25132  00AA54  0E34               	movlw	low _display_content
 25133  00AA56  25BC               	addwf	??_display_prepare& (0+255),w,b
 25134  00AA58  6EE1               	movwf	fsr1l,c
 25135  00AA5A  0E02               	movlw	high _display_content
 25136  00AA5C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25137  00AA5E  6EE2               	movwf	fsr1h,c
 25138  00AA60  CFDF FFE7          	movff	indf2,indf1
 25139                           
 25140                           ; BSR set to: 0
 25141  00AA64  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25142  00AA66                     l1443:
 25143                           
 25144                           ; BSR set to: 0
 25145                           
 25146                           ; BSR set to: 0
 25147  00AA66  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25148  00AA68  0D01               	mullw	1
 25149  00AA6A  0EBE               	movlw	low display_prepare@temp
 25150  00AA6C  24F3               	addwf	prodl,w,c
 25151  00AA6E  6ED9               	movwf	fsr2l,c
 25152  00AA70  0E00               	movlw	high display_prepare@temp
 25153  00AA72  20F4               	addwfc	prodh,w,c
 25154  00AA74  6EDA               	movwf	fsr2h,c
 25155  00AA76  50DF               	movf	indf2,w,c
 25156  00AA78  A4D8               	btfss	status,2,c
 25157  00AA7A  D7DD               	goto	l1444
 25158                           
 25159                           ; BSR set to: 0
 25160                           ;display.c: 467: };display.c: 468: display_content[0][10+cntr] = 0x01;
 25161                           
 25162                           ; BSR set to: 0
 25163  00AA7C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25164  00AA7E  6FBC               	movwf	??_display_prepare& (0+255),b
 25165  00AA80  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25166  00AA82  0E0A               	movlw	10
 25167  00AA84  27BC               	addwf	??_display_prepare& (0+255),f,b
 25168  00AA86  0E00               	movlw	0
 25169  00AA88  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25170  00AA8A  0E34               	movlw	low _display_content
 25171  00AA8C  25BC               	addwf	??_display_prepare& (0+255),w,b
 25172  00AA8E  6ED9               	movwf	fsr2l,c
 25173  00AA90  0E02               	movlw	high _display_content
 25174  00AA92  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25175  00AA94  6EDA               	movwf	fsr2h,c
 25176  00AA96  0E01               	movlw	1
 25177  00AA98  6EDF               	movwf	indf2,c
 25178                           
 25179                           ; BSR set to: 0
 25180                           ;display.c: 471: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 25181  00AA9A  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 25182  00AA9E  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 25183  00AAA2  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 25184  00AAA4  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 25185  00AAA6  0E02               	movlw	2
 25186  00AAA8  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25187  00AAAA  0EBE               	movlw	low display_prepare@temp
 25188  00AAAC  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25189  00AAAE  0E00               	movlw	high display_prepare@temp
 25190  00AAB0  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25191  00AAB2  EC44  F084         	call	__display_itoa_long	;wreg free
 25192                           
 25193                           ;display.c: 472: space = 6-strlen(temp);
 25194  00AAB6  0EBE               	movlw	low display_prepare@temp
 25195  00AAB8  0100               	movlb	0	; () banked
 25196  00AABA  6F60               	movwf	strlen@s& (0+255),b
 25197  00AABC  0E00               	movlw	high display_prepare@temp
 25198  00AABE  6F61               	movwf	(strlen@s+1)& (0+255),b
 25199  00AAC0  EC03  F0A7         	call	_strlen	;wreg free
 25200  00AAC4  0100               	movlb	0	; () banked
 25201  00AAC6  5160               	movf	?_strlen& (0+255),w,b
 25202  00AAC8  0800               	sublw	0
 25203  00AACA  0F06               	addlw	6
 25204  00AACC  6FC8               	movwf	display_prepare@space& (0+255),b
 25205                           
 25206                           ; BSR set to: 0
 25207                           ;display.c: 473: for(cntr=0; temp[cntr]; ++cntr)
 25208  00AACE  0E00               	movlw	0
 25209  00AAD0  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25210  00AAD2  D01C               	goto	l1446
 25211  00AAD4                     
 25212                           ; BSR set to: 0
 25213                           ;display.c: 474: {;display.c: 475: display_content[1][13+space+cntr] = temp[cntr];
 25214                           
 25215                           ; BSR set to: 0
 25216  00AAD4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25217  00AAD6  0D01               	mullw	1
 25218  00AAD8  0EBE               	movlw	low display_prepare@temp
 25219  00AADA  24F3               	addwf	prodl,w,c
 25220  00AADC  6ED9               	movwf	fsr2l,c
 25221  00AADE  0E00               	movlw	high display_prepare@temp
 25222  00AAE0  20F4               	addwfc	prodh,w,c
 25223  00AAE2  6EDA               	movwf	fsr2h,c
 25224  00AAE4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25225  00AAE6  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 25226  00AAEA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25227  00AAEC  27BC               	addwf	??_display_prepare& (0+255),f,b
 25228  00AAEE  0E00               	movlw	0
 25229  00AAF0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25230  00AAF2  0E0D               	movlw	13
 25231  00AAF4  27BC               	addwf	??_display_prepare& (0+255),f,b
 25232  00AAF6  0E00               	movlw	0
 25233  00AAF8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25234  00AAFA  0E48               	movlw	low (_display_content+20)
 25235  00AAFC  25BC               	addwf	??_display_prepare& (0+255),w,b
 25236  00AAFE  6EE1               	movwf	fsr1l,c
 25237  00AB00  0E02               	movlw	high (_display_content+20)
 25238  00AB02  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25239  00AB04  6EE2               	movwf	fsr1h,c
 25240  00AB06  CFDF FFE7          	movff	indf2,indf1
 25241                           
 25242                           ; BSR set to: 0
 25243  00AB0A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25244  00AB0C                     l1446:
 25245                           
 25246                           ; BSR set to: 0
 25247                           
 25248                           ; BSR set to: 0
 25249  00AB0C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25250  00AB0E  0D01               	mullw	1
 25251  00AB10  0EBE               	movlw	low display_prepare@temp
 25252  00AB12  24F3               	addwf	prodl,w,c
 25253  00AB14  6ED9               	movwf	fsr2l,c
 25254  00AB16  0E00               	movlw	high display_prepare@temp
 25255  00AB18  20F4               	addwfc	prodh,w,c
 25256  00AB1A  6EDA               	movwf	fsr2h,c
 25257  00AB1C  50DF               	movf	indf2,w,c
 25258  00AB1E  A4D8               	btfss	status,2,c
 25259  00AB20  D7D9               	goto	l1447
 25260                           
 25261                           ; BSR set to: 0
 25262                           ;display.c: 476: };display.c: 479: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 25263                           
 25264                           ; BSR set to: 0
 25265  00AB22  C191  F093         	movff	_os+32,motor_speed_from_index@speed_index	;volatile
 25266  00AB26  C192  F094         	movff	_os+33,motor_speed_from_index@speed_index+1	;volatile
 25267  00AB2A  ECE3  F0AA         	call	_motor_speed_from_index	;wreg free
 25268  00AB2E  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 25269  00AB32  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 25270  00AB36  0E02               	movlw	2
 25271  00AB38  0100               	movlb	0	; () banked
 25272  00AB3A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25273  00AB3C  0EBE               	movlw	low display_prepare@temp
 25274  00AB3E  6F98               	movwf	__display_itoa@text& (0+255),b
 25275  00AB40  0E00               	movlw	high display_prepare@temp
 25276  00AB42  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25277  00AB44  EC33  F075         	call	__display_itoa	;wreg free
 25278                           
 25279                           ;display.c: 480: for(cntr=0; temp[cntr]; ++cntr)
 25280  00AB48  0E00               	movlw	0
 25281  00AB4A  0100               	movlb	0	; () banked
 25282  00AB4C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25283  00AB4E  D018               	goto	l1449
 25284  00AB50                     
 25285                           ; BSR set to: 0
 25286                           ;display.c: 481: {;display.c: 482: display_content[3][11+cntr] = temp[cntr];
 25287                           
 25288                           ; BSR set to: 0
 25289  00AB50  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25290  00AB52  0D01               	mullw	1
 25291  00AB54  0EBE               	movlw	low display_prepare@temp
 25292  00AB56  24F3               	addwf	prodl,w,c
 25293  00AB58  6ED9               	movwf	fsr2l,c
 25294  00AB5A  0E00               	movlw	high display_prepare@temp
 25295  00AB5C  20F4               	addwfc	prodh,w,c
 25296  00AB5E  6EDA               	movwf	fsr2h,c
 25297  00AB60  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25298  00AB62  6FBC               	movwf	??_display_prepare& (0+255),b
 25299  00AB64  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25300  00AB66  0E0B               	movlw	11
 25301  00AB68  27BC               	addwf	??_display_prepare& (0+255),f,b
 25302  00AB6A  0E00               	movlw	0
 25303  00AB6C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25304  00AB6E  0E70               	movlw	low (_display_content+60)
 25305  00AB70  25BC               	addwf	??_display_prepare& (0+255),w,b
 25306  00AB72  6EE1               	movwf	fsr1l,c
 25307  00AB74  0E02               	movlw	high (_display_content+60)
 25308  00AB76  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25309  00AB78  6EE2               	movwf	fsr1h,c
 25310  00AB7A  CFDF FFE7          	movff	indf2,indf1
 25311                           
 25312                           ; BSR set to: 0
 25313  00AB7E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25314  00AB80                     l1449:
 25315                           
 25316                           ; BSR set to: 0
 25317                           
 25318                           ; BSR set to: 0
 25319  00AB80  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25320  00AB82  0D01               	mullw	1
 25321  00AB84  0EBE               	movlw	low display_prepare@temp
 25322  00AB86  24F3               	addwf	prodl,w,c
 25323  00AB88  6ED9               	movwf	fsr2l,c
 25324  00AB8A  0E00               	movlw	high display_prepare@temp
 25325  00AB8C  20F4               	addwfc	prodh,w,c
 25326  00AB8E  6EDA               	movwf	fsr2h,c
 25327  00AB90  50DF               	movf	indf2,w,c
 25328  00AB92  A4D8               	btfss	status,2,c
 25329  00AB94  D7DD               	goto	l1450
 25330  00AB96  D12D               	goto	L93
 25331  00AB98                     
 25332                           ; BSR set to: 0
 25333                           ;display.c: 495: memcpy(display_content, dc_zero, sizeof display_content);
 25334                           
 25335                           ; BSR set to: 0
 25336  00AB98  0E34               	movlw	low _display_content
 25337  00AB9A  6F60               	movwf	memcpy@d1& (0+255),b
 25338  00AB9C  0E02               	movlw	high _display_content
 25339  00AB9E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25340  00ABA0  0E3E               	movlw	low _dc_zero
 25341  00ABA2  6F62               	movwf	memcpy@s1& (0+255),b
 25342  00ABA4  0E9E               	movlw	high _dc_zero
 25343  00ABA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25344  00ABA8  0E00               	movlw	0
 25345  00ABAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25346  00ABAC  0E50               	movlw	80
 25347  00ABAE  6F64               	movwf	memcpy@n& (0+255),b
 25348  00ABB0  ECCF  F0A0         	call	_memcpy	;wreg free
 25349                           
 25350                           ;display.c: 498: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 25351  00ABB4  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 25352  00ABB8  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 25353  00ABBC  0100               	movlb	0	; () banked
 25354  00ABBE  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 25355  00ABC0  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 25356  00ABC2  0E02               	movlw	2
 25357  00ABC4  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25358  00ABC6  0EBE               	movlw	low display_prepare@temp
 25359  00ABC8  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25360  00ABCA  0E00               	movlw	high display_prepare@temp
 25361  00ABCC  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25362  00ABCE  EC44  F084         	call	__display_itoa_long	;wreg free
 25363                           
 25364                           ;display.c: 499: for(cntr=0; temp[cntr]; ++cntr)
 25365  00ABD2  0E00               	movlw	0
 25366  00ABD4  0100               	movlb	0	; () banked
 25367  00ABD6  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25368  00ABD8  D018               	goto	l1453
 25369  00ABDA                     
 25370                           ; BSR set to: 0
 25371                           ;display.c: 500: {;display.c: 501: display_content[1][13+cntr] = temp[cntr];
 25372                           
 25373                           ; BSR set to: 0
 25374  00ABDA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25375  00ABDC  0D01               	mullw	1
 25376  00ABDE  0EBE               	movlw	low display_prepare@temp
 25377  00ABE0  24F3               	addwf	prodl,w,c
 25378  00ABE2  6ED9               	movwf	fsr2l,c
 25379  00ABE4  0E00               	movlw	high display_prepare@temp
 25380  00ABE6  20F4               	addwfc	prodh,w,c
 25381  00ABE8  6EDA               	movwf	fsr2h,c
 25382  00ABEA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25383  00ABEC  6FBC               	movwf	??_display_prepare& (0+255),b
 25384  00ABEE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25385  00ABF0  0E0D               	movlw	13
 25386  00ABF2  27BC               	addwf	??_display_prepare& (0+255),f,b
 25387  00ABF4  0E00               	movlw	0
 25388  00ABF6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25389  00ABF8  0E48               	movlw	low (_display_content+20)
 25390  00ABFA  25BC               	addwf	??_display_prepare& (0+255),w,b
 25391  00ABFC  6EE1               	movwf	fsr1l,c
 25392  00ABFE  0E02               	movlw	high (_display_content+20)
 25393  00AC00  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25394  00AC02  6EE2               	movwf	fsr1h,c
 25395  00AC04  CFDF FFE7          	movff	indf2,indf1
 25396                           
 25397                           ; BSR set to: 0
 25398  00AC08  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25399  00AC0A                     l1453:
 25400                           
 25401                           ; BSR set to: 0
 25402                           
 25403                           ; BSR set to: 0
 25404  00AC0A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25405  00AC0C  0D01               	mullw	1
 25406  00AC0E  0EBE               	movlw	low display_prepare@temp
 25407  00AC10  24F3               	addwf	prodl,w,c
 25408  00AC12  6ED9               	movwf	fsr2l,c
 25409  00AC14  0E00               	movlw	high display_prepare@temp
 25410  00AC16  20F4               	addwfc	prodh,w,c
 25411  00AC18  6EDA               	movwf	fsr2h,c
 25412  00AC1A  50DF               	movf	indf2,w,c
 25413  00AC1C  A4D8               	btfss	status,2,c
 25414  00AC1E  D7DD               	goto	l1454
 25415                           
 25416                           ; BSR set to: 0
 25417                           ;display.c: 502: };display.c: 503: display_content[1][13+cntr] = 0x01;
 25418                           
 25419                           ; BSR set to: 0
 25420  00AC20  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25421  00AC22  6FBC               	movwf	??_display_prepare& (0+255),b
 25422  00AC24  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25423  00AC26  0E0D               	movlw	13
 25424  00AC28  27BC               	addwf	??_display_prepare& (0+255),f,b
 25425  00AC2A  0E00               	movlw	0
 25426  00AC2C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25427  00AC2E  0E48               	movlw	low (_display_content+20)
 25428  00AC30  25BC               	addwf	??_display_prepare& (0+255),w,b
 25429  00AC32  6ED9               	movwf	fsr2l,c
 25430  00AC34  0E02               	movlw	high (_display_content+20)
 25431  00AC36  D6AA               	goto	L36
 25432  00AC38                     
 25433                           ; BSR set to: 0
 25434                           ;display.c: 508: memcpy(display_content, dc_manual, sizeof display_content);
 25435                           
 25436                           ; BSR set to: 0
 25437  00AC38  0E34               	movlw	low _display_content
 25438  00AC3A  6F60               	movwf	memcpy@d1& (0+255),b
 25439  00AC3C  0E02               	movlw	high _display_content
 25440  00AC3E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25441  00AC40  0EEE               	movlw	low _dc_manual
 25442  00AC42  6F62               	movwf	memcpy@s1& (0+255),b
 25443  00AC44  0E9D               	movlw	high _dc_manual
 25444  00AC46  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25445  00AC48  0E00               	movlw	0
 25446  00AC4A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25447  00AC4C  0E50               	movlw	80
 25448  00AC4E  6F64               	movwf	memcpy@n& (0+255),b
 25449  00AC50  ECCF  F0A0         	call	_memcpy	;wreg free
 25450                           
 25451                           ;display.c: 509: switch(os.displayState)
 25452  00AC54  D044               	goto	l1457
 25453  00AC56                     
 25454                           ;display.c: 512: display_content[2][6] = 'W';
 25455  00AC56  0E57               	movlw	87
 25456  00AC58  0102               	movlb	2	; () banked
 25457  00AC5A  6F62               	movwf	(_display_content+46)& (0+255),b
 25458                           
 25459                           ;display.c: 513: display_content[2][7] = ' ';
 25460  00AC5C  0E20               	movlw	32
 25461  00AC5E  6F63               	movwf	(_display_content+47)& (0+255),b
 25462                           
 25463                           ;display.c: 514: break;
 25464  00AC60  D049               	goto	l1459
 25465  00AC62                     
 25466                           ;display.c: 516: memcpy(display_content[2], "        ", 8);
 25467                           
 25468                           ; BSR set to: 2
 25469  00AC62  0E5C               	movlw	low (_display_content+40)
 25470  00AC64  0100               	movlb	0	; () banked
 25471  00AC66  6F60               	movwf	memcpy@d1& (0+255),b
 25472  00AC68  0E02               	movlw	high (_display_content+40)
 25473  00AC6A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25474  00AC6C  0E14               	movlw	low STR_1
 25475  00AC6E  6F62               	movwf	memcpy@s1& (0+255),b
 25476  00AC70  0EA3               	movlw	high STR_1
 25477  00AC72  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25478  00AC74  0E00               	movlw	0
 25479  00AC76  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25480  00AC78  0E08               	movlw	8
 25481  00AC7A  6F64               	movwf	memcpy@n& (0+255),b
 25482  00AC7C  ECCF  F0A0         	call	_memcpy	;wreg free
 25483                           
 25484                           ;display.c: 517: memcpy(display_content[3], "Cancel", 6);
 25485  00AC80  0E70               	movlw	low (_display_content+60)
 25486  00AC82  0100               	movlb	0	; () banked
 25487  00AC84  6F60               	movwf	memcpy@d1& (0+255),b
 25488  00AC86  0E02               	movlw	high (_display_content+60)
 25489  00AC88  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25490  00AC8A  0E1D               	movlw	low STR_2
 25491  00AC8C  6F62               	movwf	memcpy@s1& (0+255),b
 25492  00AC8E  0EA3               	movlw	high STR_2
 25493  00AC90  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25494  00AC92  0E00               	movlw	0
 25495  00AC94  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25496  00AC96  0E06               	movlw	6
 25497  00AC98  6F64               	movwf	memcpy@n& (0+255),b
 25498  00AC9A  ECCF  F0A0         	call	_memcpy	;wreg free
 25499                           
 25500                           ;display.c: 518: break;
 25501  00AC9E  D02A               	goto	l1459
 25502  00ACA0                     
 25503                           ;display.c: 520: memcpy(&display_content[2][0], "        ", 8);
 25504  00ACA0  0E5C               	movlw	low (_display_content+40)
 25505  00ACA2  0100               	movlb	0	; () banked
 25506  00ACA4  6F60               	movwf	memcpy@d1& (0+255),b
 25507  00ACA6  0E02               	movlw	high (_display_content+40)
 25508  00ACA8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25509  00ACAA  0E14               	movlw	low STR_1
 25510  00ACAC  6F62               	movwf	memcpy@s1& (0+255),b
 25511  00ACAE  0EA3               	movlw	high STR_1
 25512  00ACB0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25513  00ACB2  0E00               	movlw	0
 25514  00ACB4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25515  00ACB6  0E08               	movlw	8
 25516  00ACB8  6F64               	movwf	memcpy@n& (0+255),b
 25517  00ACBA  ECCF  F0A0         	call	_memcpy	;wreg free
 25518                           
 25519                           ;display.c: 521: memcpy(&display_content[3][0], "Stop ", 5);
 25520  00ACBE  0E70               	movlw	low (_display_content+60)
 25521  00ACC0  0100               	movlb	0	; () banked
 25522  00ACC2  6F60               	movwf	memcpy@d1& (0+255),b
 25523  00ACC4  0E02               	movlw	high (_display_content+60)
 25524  00ACC6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25525  00ACC8  0E24               	movlw	low STR_6
 25526  00ACCA  6F62               	movwf	memcpy@s1& (0+255),b
 25527  00ACCC  0EA3               	movlw	high STR_6
 25528  00ACCE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25529  00ACD0  0E00               	movlw	0
 25530  00ACD2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25531  00ACD4  0E05               	movlw	5
 25532  00ACD6  6F64               	movwf	memcpy@n& (0+255),b
 25533  00ACD8  ECCF  F0A0         	call	_memcpy	;wreg free
 25534                           
 25535                           ;display.c: 523: }
 25536                           
 25537                           ;display.c: 522: break;
 25538  00ACDC  D00B               	goto	l1459
 25539  00ACDE                     l1457:
 25540  00ACDE  0101               	movlb	1	; () banked
 25541  00ACE0  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25542                           
 25543                           ; Switch size 1, requested type "space"
 25544                           ; Number of cases is 3, Range of values is 130 to 132
 25545                           ; switch strategies available:
 25546                           ; Name         Instructions Cycles
 25547                           ; simple_byte           10     6 (average)
 25548                           ;	Chosen strategy is simple_byte
 25549  00ACE2  0A82               	xorlw	130	; case 130
 25550  00ACE4  B4D8               	btfsc	status,2,c
 25551  00ACE6  D7BD               	goto	l1460
 25552  00ACE8  0A01               	xorlw	1	; case 131
 25553  00ACEA  B4D8               	btfsc	status,2,c
 25554  00ACEC  D7B4               	goto	l1458
 25555  00ACEE  0A07               	xorlw	7	; case 132
 25556  00ACF0  B4D8               	btfsc	status,2,c
 25557  00ACF2  D7D6               	goto	l1461
 25558  00ACF4                     l1459:
 25559                           
 25560                           ;display.c: 526: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 25561                           
 25562                           ; BSR set to: 1
 25563  00ACF4  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 25564  00ACF8  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 25565  00ACFC  0100               	movlb	0	; () banked
 25566  00ACFE  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 25567  00AD00  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 25568  00AD02  0E02               	movlw	2
 25569  00AD04  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25570  00AD06  0EBE               	movlw	low display_prepare@temp
 25571  00AD08  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25572  00AD0A  0E00               	movlw	high display_prepare@temp
 25573  00AD0C  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25574  00AD0E  EC44  F084         	call	__display_itoa_long	;wreg free
 25575                           
 25576                           ;display.c: 527: space = 7-strlen(temp);
 25577  00AD12  0EBE               	movlw	low display_prepare@temp
 25578  00AD14  0100               	movlb	0	; () banked
 25579  00AD16  6F60               	movwf	strlen@s& (0+255),b
 25580  00AD18  0E00               	movlw	high display_prepare@temp
 25581  00AD1A  6F61               	movwf	(strlen@s+1)& (0+255),b
 25582  00AD1C  EC03  F0A7         	call	_strlen	;wreg free
 25583  00AD20  0100               	movlb	0	; () banked
 25584  00AD22  5160               	movf	?_strlen& (0+255),w,b
 25585  00AD24  0800               	sublw	0
 25586  00AD26  0F07               	addlw	7
 25587  00AD28  6FC8               	movwf	display_prepare@space& (0+255),b
 25588                           
 25589                           ; BSR set to: 0
 25590                           ;display.c: 528: for(cntr=0; temp[cntr]; ++cntr)
 25591  00AD2A  0E00               	movlw	0
 25592  00AD2C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25593  00AD2E  D01C               	goto	l1462
 25594  00AD30                     
 25595                           ; BSR set to: 0
 25596                           ;display.c: 529: {;display.c: 530: display_content[1][12+space+cntr] = temp[cntr];
 25597                           
 25598                           ; BSR set to: 0
 25599  00AD30  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25600  00AD32  0D01               	mullw	1
 25601  00AD34  0EBE               	movlw	low display_prepare@temp
 25602  00AD36  24F3               	addwf	prodl,w,c
 25603  00AD38  6ED9               	movwf	fsr2l,c
 25604  00AD3A  0E00               	movlw	high display_prepare@temp
 25605  00AD3C  20F4               	addwfc	prodh,w,c
 25606  00AD3E  6EDA               	movwf	fsr2h,c
 25607  00AD40  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25608  00AD42  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 25609  00AD46  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25610  00AD48  27BC               	addwf	??_display_prepare& (0+255),f,b
 25611  00AD4A  0E00               	movlw	0
 25612  00AD4C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25613  00AD4E  0E0C               	movlw	12
 25614  00AD50  27BC               	addwf	??_display_prepare& (0+255),f,b
 25615  00AD52  0E00               	movlw	0
 25616  00AD54  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25617  00AD56  0E48               	movlw	low (_display_content+20)
 25618  00AD58  25BC               	addwf	??_display_prepare& (0+255),w,b
 25619  00AD5A  6EE1               	movwf	fsr1l,c
 25620  00AD5C  0E02               	movlw	high (_display_content+20)
 25621  00AD5E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25622  00AD60  6EE2               	movwf	fsr1h,c
 25623  00AD62  CFDF FFE7          	movff	indf2,indf1
 25624                           
 25625                           ; BSR set to: 0
 25626  00AD66  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25627  00AD68                     l1462:
 25628                           
 25629                           ; BSR set to: 0
 25630                           
 25631                           ; BSR set to: 0
 25632  00AD68  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25633  00AD6A  0D01               	mullw	1
 25634  00AD6C  0EBE               	movlw	low display_prepare@temp
 25635  00AD6E  24F3               	addwf	prodl,w,c
 25636  00AD70  6ED9               	movwf	fsr2l,c
 25637  00AD72  0E00               	movlw	high display_prepare@temp
 25638  00AD74  20F4               	addwfc	prodh,w,c
 25639  00AD76  6EDA               	movwf	fsr2h,c
 25640  00AD78  50DF               	movf	indf2,w,c
 25641  00AD7A  A4D8               	btfss	status,2,c
 25642  00AD7C  D7D9               	goto	l1463
 25643                           
 25644                           ; BSR set to: 0
 25645                           ;display.c: 531: };display.c: 534: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 25646                           
 25647                           ; BSR set to: 0
 25648  00AD7E  C194  F093         	movff	_os+35,motor_speed_from_index@speed_index	;volatile
 25649  00AD82  C195  F094         	movff	_os+36,motor_speed_from_index@speed_index+1	;volatile
 25650  00AD86  ECE3  F0AA         	call	_motor_speed_from_index	;wreg free
 25651  00AD8A  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 25652  00AD8E  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 25653  00AD92  0E02               	movlw	2
 25654  00AD94  0100               	movlb	0	; () banked
 25655  00AD96  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25656  00AD98  0EBE               	movlw	low display_prepare@temp
 25657  00AD9A  6F98               	movwf	__display_itoa@text& (0+255),b
 25658  00AD9C  0E00               	movlw	high display_prepare@temp
 25659  00AD9E  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25660  00ADA0  EC33  F075         	call	__display_itoa	;wreg free
 25661                           
 25662                           ;display.c: 535: for(cntr=0; temp[cntr]; ++cntr)
 25663  00ADA4  0E00               	movlw	0
 25664  00ADA6  0100               	movlb	0	; () banked
 25665  00ADA8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25666  00ADAA  D018               	goto	l1465
 25667  00ADAC                     
 25668                           ; BSR set to: 0
 25669                           ;display.c: 536: {;display.c: 537: display_content[3][11+cntr] = temp[cntr];
 25670                           
 25671                           ; BSR set to: 0
 25672  00ADAC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25673  00ADAE  0D01               	mullw	1
 25674  00ADB0  0EBE               	movlw	low display_prepare@temp
 25675  00ADB2  24F3               	addwf	prodl,w,c
 25676  00ADB4  6ED9               	movwf	fsr2l,c
 25677  00ADB6  0E00               	movlw	high display_prepare@temp
 25678  00ADB8  20F4               	addwfc	prodh,w,c
 25679  00ADBA  6EDA               	movwf	fsr2h,c
 25680  00ADBC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25681  00ADBE  6FBC               	movwf	??_display_prepare& (0+255),b
 25682  00ADC0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25683  00ADC2  0E0B               	movlw	11
 25684  00ADC4  27BC               	addwf	??_display_prepare& (0+255),f,b
 25685  00ADC6  0E00               	movlw	0
 25686  00ADC8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25687  00ADCA  0E70               	movlw	low (_display_content+60)
 25688  00ADCC  25BC               	addwf	??_display_prepare& (0+255),w,b
 25689  00ADCE  6EE1               	movwf	fsr1l,c
 25690  00ADD0  0E02               	movlw	high (_display_content+60)
 25691  00ADD2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25692  00ADD4  6EE2               	movwf	fsr1h,c
 25693  00ADD6  CFDF FFE7          	movff	indf2,indf1
 25694                           
 25695                           ; BSR set to: 0
 25696  00ADDA  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25697  00ADDC                     l1465:
 25698                           
 25699                           ; BSR set to: 0
 25700                           
 25701                           ; BSR set to: 0
 25702  00ADDC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25703  00ADDE  0D01               	mullw	1
 25704  00ADE0  0EBE               	movlw	low display_prepare@temp
 25705  00ADE2  24F3               	addwf	prodl,w,c
 25706  00ADE4  6ED9               	movwf	fsr2l,c
 25707  00ADE6  0E00               	movlw	high display_prepare@temp
 25708  00ADE8  20F4               	addwfc	prodh,w,c
 25709  00ADEA  6EDA               	movwf	fsr2h,c
 25710  00ADEC  50DF               	movf	indf2,w,c
 25711  00ADEE  A4D8               	btfss	status,2,c
 25712  00ADF0  D7DD               	goto	l1466
 25713  00ADF2                     L93:
 25714                           
 25715                           ; BSR set to: 0
 25716                           ;display.c: 538: };display.c: 539: display_content[3][11+cntr] = 0x01;
 25717                           
 25718                           ; BSR set to: 0
 25719  00ADF2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25720  00ADF4  6FBC               	movwf	??_display_prepare& (0+255),b
 25721  00ADF6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25722  00ADF8  0E0B               	movlw	11
 25723  00ADFA  27BC               	addwf	??_display_prepare& (0+255),f,b
 25724  00ADFC  0E00               	movlw	0
 25725  00ADFE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25726  00AE00  0E70               	movlw	low (_display_content+60)
 25727  00AE02  25BC               	addwf	??_display_prepare& (0+255),w,b
 25728  00AE04  6ED9               	movwf	fsr2l,c
 25729  00AE06  0E02               	movlw	high (_display_content+60)
 25730  00AE08  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25731  00AE0A  6EDA               	movwf	fsr2h,c
 25732  00AE0C  0E01               	movlw	1
 25733  00AE0E  6EDF               	movwf	indf2,c
 25734                           
 25735                           ;display.c: 540: display_content[3][12+cntr] = '/';
 25736  00AE10  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25737  00AE12  6FBC               	movwf	??_display_prepare& (0+255),b
 25738  00AE14  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25739  00AE16  0E0C               	movlw	12
 25740  00AE18  27BC               	addwf	??_display_prepare& (0+255),f,b
 25741  00AE1A  0E00               	movlw	0
 25742  00AE1C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25743  00AE1E  0E70               	movlw	low (_display_content+60)
 25744  00AE20  25BC               	addwf	??_display_prepare& (0+255),w,b
 25745  00AE22  6ED9               	movwf	fsr2l,c
 25746  00AE24  0E02               	movlw	high (_display_content+60)
 25747  00AE26  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25748  00AE28  6EDA               	movwf	fsr2h,c
 25749  00AE2A  0E2F               	movlw	47
 25750  00AE2C  6EDF               	movwf	indf2,c
 25751                           
 25752                           ;display.c: 541: display_content[3][13+cntr] = 's';
 25753  00AE2E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25754  00AE30  6FBC               	movwf	??_display_prepare& (0+255),b
 25755  00AE32  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25756  00AE34  0E0D               	movlw	13
 25757  00AE36  27BC               	addwf	??_display_prepare& (0+255),f,b
 25758  00AE38  0E00               	movlw	0
 25759  00AE3A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25760  00AE3C  0E70               	movlw	low (_display_content+60)
 25761  00AE3E  25BC               	addwf	??_display_prepare& (0+255),w,b
 25762  00AE40  6ED9               	movwf	fsr2l,c
 25763  00AE42  0E02               	movlw	high (_display_content+60)
 25764  00AE44  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25765  00AE46  6EDA               	movwf	fsr2h,c
 25766  00AE48  0E73               	movlw	115
 25767  00AE4A                     L27:
 25768  00AE4A  6EDF               	movwf	indf2,c
 25769                           
 25770                           ;display.c: 542: break;
 25771  00AE4C  D095               	goto	l1385
 25772  00AE4E                     
 25773                           ; BSR set to: 0
 25774                           ;display.c: 545: _display_clear();
 25775                           
 25776                           ; BSR set to: 0
 25777  00AE4E  ECAB  F0A5         	call	__display_clear	;wreg free
 25778                           
 25779                           ;display.c: 546: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 25780  00AE52  0101               	movlb	1	; () banked
 25781  00AE54  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 25782  00AE56  0100               	movlb	0	; () banked
 25783  00AE58  6F95               	movwf	__display_itoa@value& (0+255),b
 25784  00AE5A  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 25785  00AE5C  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 25786  00AE5E  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 25787  00AE60  0E00               	movlw	0
 25788  00AE62  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25789  00AE64  0E34               	movlw	low _display_content
 25790  00AE66  6F98               	movwf	__display_itoa@text& (0+255),b
 25791  00AE68  0E02               	movlw	high _display_content
 25792  00AE6A  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25793  00AE6C  EC33  F075         	call	__display_itoa	;wreg free
 25794                           
 25795                           ;display.c: 547: if(PORTEbits.RE2)
 25796  00AE70  A484               	btfss	3972,2,c	;volatile
 25797  00AE72  D002               	goto	l1469
 25798                           
 25799                           ;display.c: 548: display_content[0][8] = 'H';
 25800  00AE74  0E48               	movlw	72
 25801  00AE76  D001               	goto	L31
 25802  00AE78                     l1469:
 25803                           
 25804                           ;display.c: 549: else;display.c: 550: display_content[0][8] = 'L';
 25805                           
 25806                           ; BSR set to: 2
 25807  00AE78  0E4C               	movlw	76
 25808  00AE7A                     L31:
 25809  00AE7A  0102               	movlb	2	; () banked
 25810  00AE7C  6F3C               	movwf	(_display_content+8)& (0+255),b
 25811                           
 25812                           ; BSR set to: 2
 25813                           ;display.c: 551: if(PORTEbits.RE0)
 25814                           
 25815                           ; BSR set to: 2
 25816  00AE7E  A084               	btfss	3972,0,c	;volatile
 25817  00AE80  D002               	goto	l1471
 25818                           
 25819                           ; BSR set to: 2
 25820                           ;display.c: 552: display_content[0][9] = 'H';
 25821  00AE82  0E48               	movlw	72
 25822  00AE84  D001               	goto	L32
 25823  00AE86                     l1471:
 25824                           
 25825                           ; BSR set to: 2
 25826                           ;display.c: 553: else;display.c: 554: display_content[0][9] = 'L';
 25827                           
 25828                           ; BSR set to: 2
 25829  00AE86  0E4C               	movlw	76
 25830  00AE88                     L32:
 25831  00AE88  6F3D               	movwf	(_display_content+9)& (0+255),b
 25832                           
 25833                           ; BSR set to: 2
 25834                           ;display.c: 555: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 25835                           
 25836                           ; BSR set to: 2
 25837  00AE8A  0101               	movlb	1	; () banked
 25838  00AE8C  5175               	movf	(_os+4)& (0+255),w,b	;volatile
 25839  00AE8E  0100               	movlb	0	; () banked
 25840  00AE90  6F95               	movwf	__display_itoa@value& (0+255),b
 25841  00AE92  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 25842  00AE94  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 25843  00AE96  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 25844  00AE98  0E00               	movlw	0
 25845  00AE9A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25846  00AE9C  0E48               	movlw	low (_display_content+20)
 25847  00AE9E  6F98               	movwf	__display_itoa@text& (0+255),b
 25848  00AEA0  0E02               	movlw	high (_display_content+20)
 25849  00AEA2  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25850  00AEA4  EC33  F075         	call	__display_itoa	;wreg free
 25851                           
 25852                           ;display.c: 556: if(PORTEbits.RE1)
 25853  00AEA8  A284               	btfss	3972,1,c	;volatile
 25854  00AEAA  D002               	goto	l1473
 25855                           
 25856                           ;display.c: 557: display_content[1][8] = 'H';
 25857  00AEAC  0E48               	movlw	72
 25858  00AEAE  D001               	goto	L33
 25859  00AEB0                     l1473:
 25860                           
 25861                           ;display.c: 558: else;display.c: 559: display_content[1][8] = 'L';
 25862                           
 25863                           ; BSR set to: 2
 25864  00AEB0  0E4C               	movlw	76
 25865  00AEB2                     L33:
 25866  00AEB2  0102               	movlb	2	; () banked
 25867  00AEB4  6F50               	movwf	(_display_content+28)& (0+255),b
 25868                           
 25869                           ; BSR set to: 2
 25870                           ;display.c: 560: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 25871                           
 25872                           ; BSR set to: 2
 25873  00AEB6  0101               	movlb	1	; () banked
 25874  00AEB8  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 25875  00AEBA  0100               	movlb	0	; () banked
 25876  00AEBC  6F95               	movwf	__display_itoa@value& (0+255),b
 25877  00AEBE  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 25878  00AEC0  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 25879  00AEC2  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 25880  00AEC4  0E00               	movlw	0
 25881  00AEC6  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25882  00AEC8  0E5C               	movlw	low (_display_content+40)
 25883  00AECA  6F98               	movwf	__display_itoa@text& (0+255),b
 25884  00AECC  0E02               	movlw	high (_display_content+40)
 25885  00AECE  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25886  00AED0  EC33  F075         	call	__display_itoa	;wreg free
 25887                           
 25888                           ;display.c: 561: if(PORTAbits.RA0)
 25889  00AED4  A080               	btfss	3968,0,c	;volatile
 25890  00AED6  D002               	goto	l1475
 25891                           
 25892                           ;display.c: 562: display_content[2][8] = 'H';
 25893  00AED8  0E48               	movlw	72
 25894  00AEDA  D001               	goto	L34
 25895  00AEDC                     l1475:
 25896                           
 25897                           ;display.c: 563: else;display.c: 564: display_content[2][8] = 'L';
 25898                           
 25899                           ; BSR set to: 2
 25900  00AEDC  0E4C               	movlw	76
 25901  00AEDE                     L34:
 25902  00AEDE  0102               	movlb	2	; () banked
 25903  00AEE0  6F64               	movwf	(_display_content+48)& (0+255),b
 25904                           
 25905                           ; BSR set to: 2
 25906                           ;display.c: 565: if(PORTAbits.RA2)
 25907                           
 25908                           ; BSR set to: 2
 25909  00AEE2  A480               	btfss	3968,2,c	;volatile
 25910  00AEE4  D002               	goto	l1477
 25911                           
 25912                           ; BSR set to: 2
 25913                           ;display.c: 566: display_content[2][9] = 'H';
 25914  00AEE6  0E48               	movlw	72
 25915  00AEE8  D001               	goto	L35
 25916  00AEEA                     l1477:
 25917                           
 25918                           ; BSR set to: 2
 25919                           ;display.c: 567: else;display.c: 568: display_content[2][9] = 'L';
 25920                           
 25921                           ; BSR set to: 2
 25922  00AEEA  0E4C               	movlw	76
 25923  00AEEC                     L35:
 25924  00AEEC  6F65               	movwf	(_display_content+49)& (0+255),b
 25925                           
 25926                           ; BSR set to: 2
 25927                           ;display.c: 569: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 25928                           
 25929                           ; BSR set to: 2
 25930  00AEEE  0101               	movlb	1	; () banked
 25931  00AEF0  5177               	movf	(_os+6)& (0+255),w,b	;volatile
 25932  00AEF2  0100               	movlb	0	; () banked
 25933  00AEF4  6F95               	movwf	__display_itoa@value& (0+255),b
 25934  00AEF6  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 25935  00AEF8  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 25936  00AEFA  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 25937  00AEFC  0E00               	movlw	0
 25938  00AEFE  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25939  00AF00  0E70               	movlw	low (_display_content+60)
 25940  00AF02  6F98               	movwf	__display_itoa@text& (0+255),b
 25941  00AF04  0E02               	movlw	high (_display_content+60)
 25942  00AF06  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25943  00AF08  EC33  F075         	call	__display_itoa	;wreg free
 25944                           
 25945                           ;display.c: 570: if(PORTAbits.RA1)
 25946  00AF0C  A280               	btfss	3968,1,c	;volatile
 25947  00AF0E  D002               	goto	l1479
 25948                           
 25949                           ;display.c: 571: display_content[3][8] = 'H';
 25950  00AF10  0E48               	movlw	72
 25951  00AF12  D001               	goto	L28
 25952  00AF14                     l1479:
 25953                           
 25954                           ;display.c: 572: else;display.c: 573: display_content[3][8] = 'L';
 25955                           
 25956                           ; BSR set to: 2
 25957  00AF14  0E4C               	movlw	76
 25958  00AF16                     L28:
 25959  00AF16  0102               	movlb	2	; () banked
 25960  00AF18  6F78               	movwf	(_display_content+68)& (0+255),b
 25961                           
 25962                           ; BSR set to: 2
 25963                           ;display.c: 575: }
 25964                           
 25965                           ; BSR set to: 2
 25966                           ;display.c: 574: break;
 25967  00AF1A  D02E               	goto	l1385
 25968  00AF1C                     l1376:
 25969                           
 25970                           ; BSR set to: 2
 25971  00AF1C  0101               	movlb	1	; () banked
 25972  00AF1E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25973  00AF20  0BF0               	andlw	240
 25974  00AF22  0100               	movlb	0	; () banked
 25975  00AF24  6FBC               	movwf	??_display_prepare& (0+255),b
 25976  00AF26  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25977                           
 25978                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25979                           ; Switch size 1, requested type "space"
 25980                           ; Number of cases is 1, Range of values is 0 to 0
 25981                           ; switch strategies available:
 25982                           ; Name         Instructions Cycles
 25983                           ; simple_byte            4     3 (average)
 25984                           ;	Chosen strategy is simple_byte
 25985  00AF28  51BD               	movf	(??_display_prepare+1)& (0+255),w,b
 25986  00AF2A  0A00               	xorlw	0	; case 0
 25987  00AF2C  A4D8               	btfss	status,2,c
 25988  00AF2E  D024               	goto	l1385
 25989                           
 25990                           ; BSR set to: 0
 25991                           ; Switch size 1, requested type "space"
 25992                           ; Number of cases is 10, Range of values is 0 to 240
 25993                           ; switch strategies available:
 25994                           ; Name         Instructions Cycles
 25995                           ; simple_byte           31    16 (average)
 25996                           ;	Chosen strategy is simple_byte
 25997  00AF30  51BC               	movf	??_display_prepare& (0+255),w,b
 25998  00AF32  0A00               	xorlw	0	; case 0
 25999  00AF34  B4D8               	btfsc	status,2,c
 26000  00AF36  EF9A  F051         	goto	l1377
 26001  00AF3A  0A10               	xorlw	16	; case 16
 26002  00AF3C  B4D8               	btfsc	status,2,c
 26003  00AF3E  EFC9  F051         	goto	l1386
 26004  00AF42  0A30               	xorlw	48	; case 32
 26005  00AF44  B4D8               	btfsc	status,2,c
 26006  00AF46  EF1B  F052         	goto	l1396
 26007  00AF4A  0A10               	xorlw	16	; case 48
 26008  00AF4C  B4D8               	btfsc	status,2,c
 26009  00AF4E  EF3F  F052         	goto	l1401
 26010  00AF52  0A70               	xorlw	112	; case 64
 26011  00AF54  B4D8               	btfsc	status,2,c
 26012  00AF56  EFB0  F052         	goto	l1410
 26013  00AF5A  0A10               	xorlw	16	; case 80
 26014  00AF5C  B4D8               	btfsc	status,2,c
 26015  00AF5E  D467               	goto	l1425
 26016  00AF60  0A30               	xorlw	48	; case 96
 26017  00AF62  B4D8               	btfsc	status,2,c
 26018  00AF64  D517               	goto	l1438
 26019  00AF66  0A10               	xorlw	16	; case 112
 26020  00AF68  B4D8               	btfsc	status,2,c
 26021  00AF6A  D616               	goto	l1452
 26022  00AF6C  0AF0               	xorlw	240	; case 128
 26023  00AF6E  B4D8               	btfsc	status,2,c
 26024  00AF70  D663               	goto	l1456
 26025  00AF72  0A70               	xorlw	112	; case 240
 26026  00AF74  B4D8               	btfsc	status,2,c
 26027  00AF76  D76B               	goto	l1468
 26028  00AF78                     l1385:
 26029                           
 26030                           ;display.c: 577: if(!PORTDbits.RD2)
 26031  00AF78  B483               	btfsc	3971,2,c	;volatile
 26032  00AF7A  0012               	return	
 26033                           
 26034                           ;display.c: 578: {;display.c: 579: display_content[0][0] = 'E';
 26035  00AF7C  0E45               	movlw	69
 26036  00AF7E  0102               	movlb	2	; () banked
 26037  00AF80  6F34               	movwf	_display_content& (0+255),b
 26038                           
 26039                           ;display.c: 580: display_content[0][1] = 'R';
 26040  00AF82  0E52               	movlw	82
 26041  00AF84  6F35               	movwf	(_display_content+1)& (0+255),b
 26042                           
 26043                           ;display.c: 581: display_content[0][2] = 'R';
 26044  00AF86  0E52               	movlw	82
 26045  00AF88  6F36               	movwf	(_display_content+2)& (0+255),b
 26046                           
 26047                           ;display.c: 582: display_content[0][3] = 'O';
 26048  00AF8A  0E4F               	movlw	79
 26049  00AF8C  6F37               	movwf	(_display_content+3)& (0+255),b
 26050                           
 26051                           ;display.c: 583: display_content[0][4] = 'R';
 26052  00AF8E  0E52               	movlw	82
 26053  00AF90  6F38               	movwf	(_display_content+4)& (0+255),b
 26054  00AF92  0012               	return	
 26055  00AF94                     __end_of_display_prepare:
 26056                           	opt stack 0
 26057                           tblptru	equ	0xFF8
 26058                           tblptrh	equ	0xFF7
 26059                           tblptrl	equ	0xFF6
 26060                           tablat	equ	0xFF5
 26061                           prodh	equ	0xFF4
 26062                           prodl	equ	0xFF3
 26063                           intcon	equ	0xFF2
 26064                           postinc0	equ	0xFEE
 26065                           wreg	equ	0xFE8
 26066                           indf1	equ	0xFE7
 26067                           postinc1	equ	0xFE6
 26068                           postdec1	equ	0xFE5
 26069                           plusw1	equ	0xFE3
 26070                           fsr1h	equ	0xFE2
 26071                           fsr1l	equ	0xFE1
 26072                           indf2	equ	0xFDF
 26073                           postinc2	equ	0xFDE
 26074                           postdec2	equ	0xFDD
 26075                           plusw2	equ	0xFDB
 26076                           fsr2h	equ	0xFDA
 26077                           fsr2l	equ	0xFD9
 26078                           status	equ	0xFD8
 26079                           
 26080 ;; *************** function _motor_speed_from_index *****************
 26081 ;; Defined at:
 26082 ;;		line 114 in file "motor.c"
 26083 ;; Parameters:    Size  Location     Type
 26084 ;;  speed_index     2   51[BANK0 ] unsigned int 
 26085 ;; Auto vars:     Size  Location     Type
 26086 ;;		None
 26087 ;; Return value:  Size  Location     Type
 26088 ;;                  2   51[BANK0 ] unsigned int 
 26089 ;; Registers used:
 26090 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26091 ;; Tracked objects:
 26092 ;;		On entry : 0/0
 26093 ;;		On exit  : 0/0
 26094 ;;		Unchanged: 0/0
 26095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26096 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26099 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26100 ;;Total ram usage:        2 bytes
 26101 ;; Hardware stack levels used:    1
 26102 ;; Hardware stack levels required when called:   12
 26103 ;; This function calls:
 26104 ;;		__motor_get_speed_in_degrees
 26105 ;; This function is called by:
 26106 ;;		_display_prepare
 26107 ;; This function uses a non-reentrant model
 26108 ;;
 26109                           
 26110                           	psect	text101
 26111  0155C6                     __ptext101:
 26112                           	opt stack 0
 26113  0155C6                     _motor_speed_from_index:
 26114                           	opt stack 17
 26115                           
 26116                           ;motor.c: 116: return _motor_get_speed_in_degrees(speed_index);
 26117                           
 26118                           ;incstack = 0
 26119  0155C6  C093  F087         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 26120  0155CA  C094  F088         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 26121  0155CE  ECCB  F080         	call	__motor_get_speed_in_degrees	;wreg free
 26122  0155D2  C087  F093         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 26123  0155D6  C088  F094         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 26124  0155DA  0012               	return	
 26125  0155DC                     __end_of_motor_speed_from_index:
 26126                           	opt stack 0
 26127                           tblptru	equ	0xFF8
 26128                           tblptrh	equ	0xFF7
 26129                           tblptrl	equ	0xFF6
 26130                           tablat	equ	0xFF5
 26131                           prodh	equ	0xFF4
 26132                           prodl	equ	0xFF3
 26133                           intcon	equ	0xFF2
 26134                           postinc0	equ	0xFEE
 26135                           wreg	equ	0xFE8
 26136                           indf1	equ	0xFE7
 26137                           postinc1	equ	0xFE6
 26138                           postdec1	equ	0xFE5
 26139                           plusw1	equ	0xFE3
 26140                           fsr1h	equ	0xFE2
 26141                           fsr1l	equ	0xFE1
 26142                           indf2	equ	0xFDF
 26143                           postinc2	equ	0xFDE
 26144                           postdec2	equ	0xFDD
 26145                           plusw2	equ	0xFDB
 26146                           fsr2h	equ	0xFDA
 26147                           fsr2l	equ	0xFD9
 26148                           status	equ	0xFD8
 26149                           
 26150 ;; *************** function __motor_get_speed_in_degrees *****************
 26151 ;; Defined at:
 26152 ;;		line 75 in file "motor.c"
 26153 ;; Parameters:    Size  Location     Type
 26154 ;;  speed_index     2   39[BANK0 ] unsigned int 
 26155 ;; Auto vars:     Size  Location     Type
 26156 ;;  lookup          4   47[BANK0 ] unsigned long 
 26157 ;;  speed           4   43[BANK0 ] float 
 26158 ;; Return value:  Size  Location     Type
 26159 ;;                  2   39[BANK0 ] unsigned int 
 26160 ;; Registers used:
 26161 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26162 ;; Tracked objects:
 26163 ;;		On entry : 0/0
 26164 ;;		On exit  : 0/0
 26165 ;;		Unchanged: 0/0
 26166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26167 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26168 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26169 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26170 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26171 ;;Total ram usage:       12 bytes
 26172 ;; Hardware stack levels used:    1
 26173 ;; Hardware stack levels required when called:   11
 26174 ;; This function calls:
 26175 ;;		___fldiv
 26176 ;;		___fltol
 26177 ;;		___lmul
 26178 ;;		___xxtofl
 26179 ;; This function is called by:
 26180 ;;		_motor_speed_from_index
 26181 ;;		_motor_get_maximum_speed
 26182 ;;		_motor_get_current_speed
 26183 ;; This function uses a non-reentrant model
 26184 ;;
 26185                           
 26186                           	psect	text102
 26187  010196                     __ptext102:
 26188                           	opt stack 0
 26189  010196                     __motor_get_speed_in_degrees:
 26190                           	opt stack 17
 26191                           
 26192                           ;motor.c: 77: uint32_t lookup;;motor.c: 78: float speed;;motor.c: 80: lookup = motor_spe
      +                          ed_lookup[speed_index];
 26193                           
 26194                           ;incstack = 0
 26195  010196  90D8               	bcf	status,0,c
 26196  010198  0100               	movlb	0	; () banked
 26197  01019A  3587               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 26198  01019C  6EF6               	movwf	tblptrl,c
 26199  01019E  3588               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 26200  0101A0  6EF7               	movwf	tblptrh,c
 26201  0101A2  0E93               	movlw	low _motor_speed_lookup
 26202  0101A4  26F6               	addwf	tblptrl,f,c
 26203  0101A6  0E90               	movlw	high _motor_speed_lookup
 26204  0101A8  22F7               	addwfc	tblptrh,f,c
 26205  0101AA                     	if	1	;There are 3 active tblptr bytes
 26206  0101AA  6AF8               	clrf	tblptru,c
 26207  0101AC  0E00               	movlw	low (__mediumconst shr (0+16))
 26208  0101AE  22F8               	addwfc	tblptru,f,c
 26209  0101B0                     	endif
 26210  0101B0  0009               	tblrd		*+
 26211  0101B2  CFF5 F089          	movff	tablat,??__motor_get_speed_in_degrees
 26212  0101B6  0009               	tblrd		*+
 26213  0101B8  CFF5 F08A          	movff	tablat,??__motor_get_speed_in_degrees+1
 26214  0101BC  C089  F08F         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 26215  0101C0  C08A  F090         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 26216  0101C4  6B91               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 26217  0101C6  6B92               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 26218                           
 26219                           ; BSR set to: 0
 26220                           ;motor.c: 81: lookup *= 16;
 26221  0101C8  0E04               	movlw	4
 26222  0101CA                     u14735:
 26223  0101CA  90D8               	bcf	status,0,c
 26224  0101CC  378F               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 26225  0101CE  3790               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 26226  0101D0  3791               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 26227  0101D2  3792               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 26228  0101D4  2EE8               	decfsz	wreg,f,c
 26229  0101D6  D7F9               	goto	u14735
 26230                           
 26231                           ; BSR set to: 0
 26232                           ;motor.c: 82: lookup *= 360;
 26233  0101D8  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 26234  0101DC  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 26235  0101E0  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 26236  0101E4  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 26237  0101E8  0E68               	movlw	104
 26238  0101EA  6F64               	movwf	___lmul@multiplicand& (0+255),b
 26239  0101EC  0E01               	movlw	1
 26240  0101EE  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26241  0101F0  0E00               	movlw	0
 26242  0101F2  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26243  0101F4  0E00               	movlw	0
 26244  0101F6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26245  0101F8  ECC5  F0A2         	call	___lmul	;wreg free
 26246  0101FC  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 26247  010200  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 26248  010204  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 26249  010208  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 26250                           
 26251                           ;motor.c: 83: lookup *= 100;
 26252  01020C  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 26253  010210  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 26254  010214  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 26255  010218  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 26256  01021C  0E64               	movlw	100
 26257  01021E  0100               	movlb	0	; () banked
 26258  010220  6F64               	movwf	___lmul@multiplicand& (0+255),b
 26259  010222  0E00               	movlw	0
 26260  010224  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26261  010226  0E00               	movlw	0
 26262  010228  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 26263  01022A  0E00               	movlw	0
 26264  01022C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 26265  01022E  ECC5  F0A2         	call	___lmul	;wreg free
 26266  010232  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 26267  010236  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 26268  01023A  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 26269  01023E  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 26270                           
 26271                           ;motor.c: 85: speed = (float) lookup;
 26272  010242  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 26273  010246  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 26274  01024A  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 26275  01024E  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 26276  010252  0E00               	movlw	0
 26277  010254  EC8B  F07F         	call	___xxtofl
 26278  010258  C060  F08B         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 26279  01025C  C061  F08C         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 26280  010260  C062  F08D         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 26281  010264  C063  F08E         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 26282                           
 26283                           ;motor.c: 86: speed /= config.full_circle_in_steps;
 26284  010268  C08B  F06E         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 26285  01026C  C08C  F06F         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 26286  010270  C08D  F070         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 26287  010274  C08E  F071         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 26288  010278  C1A1  F060         	movff	_config,___xxtofl@val
 26289  01027C  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 26290  010280  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 26291  010284  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 26292  010288  0E00               	movlw	0
 26293  01028A  EC8B  F07F         	call	___xxtofl
 26294  01028E  C060  F072         	movff	?___xxtofl,___fldiv@a
 26295  010292  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 26296  010296  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 26297  01029A  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 26298  01029E  ECFC  F06D         	call	___fldiv	;wreg free
 26299  0102A2  C06E  F08B         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 26300  0102A6  C06F  F08C         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 26301  0102AA  C070  F08D         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 26302  0102AE  C071  F08E         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 26303                           
 26304                           ;motor.c: 89: return (uint16_t) speed;
 26305  0102B2  C08B  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 26306  0102B6  C08C  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 26307  0102BA  C08D  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 26308  0102BE  C08E  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 26309  0102C2  ECE3  F08E         	call	___fltol	;wreg free
 26310  0102C6  C060  F087         	movff	?___fltol,?__motor_get_speed_in_degrees
 26311  0102CA  C061  F088         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 26312  0102CE  0012               	return	
 26313  0102D0                     __end_of__motor_get_speed_in_degrees:
 26314                           	opt stack 0
 26315                           tblptru	equ	0xFF8
 26316                           tblptrh	equ	0xFF7
 26317                           tblptrl	equ	0xFF6
 26318                           tablat	equ	0xFF5
 26319                           prodh	equ	0xFF4
 26320                           prodl	equ	0xFF3
 26321                           intcon	equ	0xFF2
 26322                           postinc0	equ	0xFEE
 26323                           wreg	equ	0xFE8
 26324                           indf1	equ	0xFE7
 26325                           postinc1	equ	0xFE6
 26326                           postdec1	equ	0xFE5
 26327                           plusw1	equ	0xFE3
 26328                           fsr1h	equ	0xFE2
 26329                           fsr1l	equ	0xFE1
 26330                           indf2	equ	0xFDF
 26331                           postinc2	equ	0xFDE
 26332                           postdec2	equ	0xFDD
 26333                           plusw2	equ	0xFDB
 26334                           fsr2h	equ	0xFDA
 26335                           fsr2l	equ	0xFD9
 26336                           status	equ	0xFD8
 26337                           
 26338 ;; *************** function ___lmul *****************
 26339 ;; Defined at:
 26340 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 26341 ;; Parameters:    Size  Location     Type
 26342 ;;  multiplier      4    0[BANK0 ] unsigned long 
 26343 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 26344 ;; Auto vars:     Size  Location     Type
 26345 ;;  product         4    8[BANK0 ] unsigned long 
 26346 ;; Return value:  Size  Location     Type
 26347 ;;                  4    0[BANK0 ] unsigned long 
 26348 ;; Registers used:
 26349 ;;		wreg, status,2, status,0
 26350 ;; Tracked objects:
 26351 ;;		On entry : 0/0
 26352 ;;		On exit  : 0/0
 26353 ;;		Unchanged: 0/0
 26354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26355 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26356 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26358 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26359 ;;Total ram usage:       12 bytes
 26360 ;; Hardware stack levels used:    1
 26361 ;; Hardware stack levels required when called:   10
 26362 ;; This function calls:
 26363 ;;		Nothing
 26364 ;; This function is called by:
 26365 ;;		__motor_get_speed_in_degrees
 26366 ;;		_atol
 26367 ;; This function uses a non-reentrant model
 26368 ;;
 26369                           
 26370                           	psect	text103
 26371  01458A                     __ptext103:
 26372                           	opt stack 0
 26373  01458A                     ___lmul:
 26374                           	opt stack 16
 26375                           
 26376                           ;incstack = 0
 26377  01458A  0E00               	movlw	0
 26378  01458C  0100               	movlb	0	; () banked
 26379  01458E  6F68               	movwf	___lmul@product& (0+255),b
 26380  014590  0E00               	movlw	0
 26381  014592  6F69               	movwf	(___lmul@product+1)& (0+255),b
 26382  014594  0E00               	movlw	0
 26383  014596  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 26384  014598  0E00               	movlw	0
 26385  01459A  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 26386  01459C                     
 26387                           ; BSR set to: 0
 26388                           
 26389                           ; BSR set to: 0
 26390  01459C  A160               	btfss	___lmul@multiplier& (0+255),0,b
 26391  01459E  D008               	goto	l3000
 26392                           
 26393                           ; BSR set to: 0
 26394  0145A0  5164               	movf	___lmul@multiplicand& (0+255),w,b
 26395  0145A2  2768               	addwf	___lmul@product& (0+255),f,b
 26396  0145A4  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 26397  0145A6  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 26398  0145A8  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 26399  0145AA  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 26400  0145AC  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 26401  0145AE  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 26402  0145B0                     l3000:
 26403                           
 26404                           ; BSR set to: 0
 26405                           
 26406                           ; BSR set to: 0
 26407  0145B0  90D8               	bcf	status,0,c
 26408  0145B2  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 26409  0145B4  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 26410  0145B6  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 26411  0145B8  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 26412                           
 26413                           ; BSR set to: 0
 26414  0145BA  90D8               	bcf	status,0,c
 26415  0145BC  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 26416  0145BE  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 26417  0145C0  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 26418  0145C2  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 26419  0145C4  5160               	movf	___lmul@multiplier& (0+255),w,b
 26420  0145C6  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 26421  0145C8  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 26422  0145CA  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 26423  0145CC  A4D8               	btfss	status,2,c
 26424  0145CE  D7E6               	goto	l2999
 26425                           
 26426                           ; BSR set to: 0
 26427  0145D0  C068  F060         	movff	___lmul@product,?___lmul
 26428  0145D4  C069  F061         	movff	___lmul@product+1,?___lmul+1
 26429  0145D8  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 26430  0145DC  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 26431                           
 26432                           ; BSR set to: 0
 26433  0145E0  0012               	return		;funcret
 26434  0145E2                     __end_of___lmul:
 26435                           	opt stack 0
 26436                           tblptru	equ	0xFF8
 26437                           tblptrh	equ	0xFF7
 26438                           tblptrl	equ	0xFF6
 26439                           tablat	equ	0xFF5
 26440                           prodh	equ	0xFF4
 26441                           prodl	equ	0xFF3
 26442                           intcon	equ	0xFF2
 26443                           postinc0	equ	0xFEE
 26444                           wreg	equ	0xFE8
 26445                           indf1	equ	0xFE7
 26446                           postinc1	equ	0xFE6
 26447                           postdec1	equ	0xFE5
 26448                           plusw1	equ	0xFE3
 26449                           fsr1h	equ	0xFE2
 26450                           fsr1l	equ	0xFE1
 26451                           indf2	equ	0xFDF
 26452                           postinc2	equ	0xFDE
 26453                           postdec2	equ	0xFDD
 26454                           plusw2	equ	0xFDB
 26455                           fsr2h	equ	0xFDA
 26456                           fsr2l	equ	0xFD9
 26457                           status	equ	0xFD8
 26458                           
 26459 ;; *************** function __display_signed_itoa *****************
 26460 ;; Defined at:
 26461 ;;		line 120 in file "display.c"
 26462 ;; Parameters:    Size  Location     Type
 26463 ;;  value           2   47[BANK0 ] int 
 26464 ;;  text            2   49[BANK0 ] PTR unsigned char 
 26465 ;;		 -> display_prepare@temp(10), 
 26466 ;; Auto vars:     Size  Location     Type
 26467 ;;		None
 26468 ;; Return value:  Size  Location     Type
 26469 ;;                  1    wreg      void 
 26470 ;; Registers used:
 26471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26472 ;; Tracked objects:
 26473 ;;		On entry : 0/0
 26474 ;;		On exit  : 0/0
 26475 ;;		Unchanged: 0/0
 26476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26477 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26480 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26481 ;;Total ram usage:        4 bytes
 26482 ;; Hardware stack levels used:    1
 26483 ;; Hardware stack levels required when called:   14
 26484 ;; This function calls:
 26485 ;;		__display_padded_itoa
 26486 ;; This function is called by:
 26487 ;;		_display_prepare
 26488 ;; This function uses a non-reentrant model
 26489 ;;
 26490                           
 26491                           	psect	text104
 26492  014C76                     __ptext104:
 26493                           	opt stack 0
 26494  014C76                     __display_signed_itoa:
 26495                           	opt stack 15
 26496                           
 26497                           ;display.c: 122: if(value<0)
 26498                           
 26499                           ; BSR set to: 0
 26500                           ;incstack = 0
 26501  014C76  0100               	movlb	0	; () banked
 26502  014C78  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 26503  014C7A  D00A               	goto	l1326
 26504                           
 26505                           ; BSR set to: 0
 26506                           ;display.c: 123: {;display.c: 124: value = -value;
 26507  014C7C  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 26508  014C7E  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 26509  014C80  B0D8               	btfsc	status,0,c
 26510  014C82  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 26511                           
 26512                           ; BSR set to: 0
 26513                           ;display.c: 125: text[0] = '-';
 26514  014C84  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 26515  014C88  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 26516  014C8C  0E2D               	movlw	45
 26517  014C8E  D005               	goto	L37
 26518  014C90                     l1326:
 26519                           
 26520                           ; BSR set to: 0
 26521                           ;display.c: 127: else;display.c: 128: {;display.c: 129: text[0] = '+';
 26522                           
 26523                           ; BSR set to: 0
 26524  014C90  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 26525  014C94  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 26526  014C98  0E2B               	movlw	43
 26527  014C9A                     L37:
 26528  014C9A  6EDF               	movwf	indf2,c
 26529                           
 26530                           ; BSR set to: 0
 26531                           ;display.c: 130: };display.c: 131: _display_padded_itoa(value, 0, &text[1]);
 26532                           
 26533                           ; BSR set to: 0
 26534  014C9C  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 26535  014CA0  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 26536  014CA4  0E00               	movlw	0
 26537  014CA6  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 26538  014CA8  0E01               	movlw	1
 26539  014CAA  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 26540  014CAC  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 26541  014CAE  0E00               	movlw	0
 26542  014CB0  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 26543  014CB2  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 26544  014CB4  EC94  F08D         	call	__display_padded_itoa	;wreg free
 26545  014CB8  0012               	return		;funcret
 26546  014CBA                     __end_of__display_signed_itoa:
 26547                           	opt stack 0
 26548                           tblptru	equ	0xFF8
 26549                           tblptrh	equ	0xFF7
 26550                           tblptrl	equ	0xFF6
 26551                           tablat	equ	0xFF5
 26552                           prodh	equ	0xFF4
 26553                           prodl	equ	0xFF3
 26554                           intcon	equ	0xFF2
 26555                           postinc0	equ	0xFEE
 26556                           wreg	equ	0xFE8
 26557                           indf1	equ	0xFE7
 26558                           postinc1	equ	0xFE6
 26559                           postdec1	equ	0xFE5
 26560                           plusw1	equ	0xFE3
 26561                           fsr1h	equ	0xFE2
 26562                           fsr1l	equ	0xFE1
 26563                           indf2	equ	0xFDF
 26564                           postinc2	equ	0xFDE
 26565                           postdec2	equ	0xFDD
 26566                           plusw2	equ	0xFDB
 26567                           fsr2h	equ	0xFDA
 26568                           fsr2l	equ	0xFD9
 26569                           status	equ	0xFD8
 26570                           
 26571 ;; *************** function __display_padded_itoa *****************
 26572 ;; Defined at:
 26573 ;;		line 98 in file "display.c"
 26574 ;; Parameters:    Size  Location     Type
 26575 ;;  value           2   24[BANK0 ] int 
 26576 ;;  length          1   26[BANK0 ] unsigned char 
 26577 ;;  text            2   27[BANK0 ] PTR unsigned char 
 26578 ;;		 -> display_prepare@temp(10), 
 26579 ;; Auto vars:     Size  Location     Type
 26580 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 26581 ;;  padding         1   46[BANK0 ] unsigned char 
 26582 ;;  pos             1   45[BANK0 ] unsigned char 
 26583 ;;  len             1   44[BANK0 ] unsigned char 
 26584 ;; Return value:  Size  Location     Type
 26585 ;;                  1    wreg      void 
 26586 ;; Registers used:
 26587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26588 ;; Tracked objects:
 26589 ;;		On entry : 0/0
 26590 ;;		On exit  : 0/0
 26591 ;;		Unchanged: 0/0
 26592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26593 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26594 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26595 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26596 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26597 ;;Total ram usage:       23 bytes
 26598 ;; Hardware stack levels used:    1
 26599 ;; Hardware stack levels required when called:   13
 26600 ;; This function calls:
 26601 ;;		_itoa
 26602 ;;		_strlen
 26603 ;; This function is called by:
 26604 ;;		__display_signed_itoa
 26605 ;;		_display_prepare
 26606 ;; This function uses a non-reentrant model
 26607 ;;
 26608                           
 26609                           	psect	text105
 26610  011B28                     __ptext105:
 26611                           	opt stack 0
 26612  011B28                     __display_padded_itoa:
 26613                           	opt stack 15
 26614                           
 26615                           ;display.c: 100: uint8_t pos;;display.c: 101: uint8_t padding;;display.c: 103: uint8_t l
      +                          en;;display.c: 104: char tmp[10];;display.c: 105: itoa(tmp, value, 10);
 26616                           
 26617                           ;incstack = 0
 26618  011B28  0E82               	movlw	low __display_padded_itoa@tmp
 26619  011B2A  0100               	movlb	0	; () banked
 26620  011B2C  6F70               	movwf	itoa@buf& (0+255),b
 26621  011B2E  0E00               	movlw	high __display_padded_itoa@tmp
 26622  011B30  6F71               	movwf	(itoa@buf+1)& (0+255),b
 26623  011B32  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 26624  011B36  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 26625  011B3A  0E00               	movlw	0
 26626  011B3C  6F75               	movwf	(itoa@base+1)& (0+255),b
 26627  011B3E  0E0A               	movlw	10
 26628  011B40  6F74               	movwf	itoa@base& (0+255),b
 26629  011B42  EC5D  F0A6         	call	_itoa	;wreg free
 26630                           
 26631                           ;display.c: 106: len = strlen(tmp);
 26632  011B46  0E82               	movlw	low __display_padded_itoa@tmp
 26633  011B48  0100               	movlb	0	; () banked
 26634  011B4A  6F60               	movwf	strlen@s& (0+255),b
 26635  011B4C  0E00               	movlw	high __display_padded_itoa@tmp
 26636  011B4E  6F61               	movwf	(strlen@s+1)& (0+255),b
 26637  011B50  EC03  F0A7         	call	_strlen	;wreg free
 26638  011B54  0100               	movlb	0	; () banked
 26639  011B56  5160               	movf	?_strlen& (0+255),w,b
 26640  011B58  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 26641                           
 26642                           ; BSR set to: 0
 26643                           ;display.c: 107: padding = 0;
 26644  011B5A  0E00               	movlw	0
 26645  011B5C  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 26646                           
 26647                           ;display.c: 108: while((padding+len)<length)
 26648  011B5E  D00B               	goto	l1317
 26649  011B60                     
 26650                           ; BSR set to: 0
 26651                           ;display.c: 109: {;display.c: 110: text[padding] = ' ';
 26652                           
 26653                           ; BSR set to: 0
 26654  011B60  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 26655  011B62  0D01               	mullw	1
 26656  011B64  50F3               	movf	prodl,w,c
 26657  011B66  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 26658  011B68  6ED9               	movwf	fsr2l,c
 26659  011B6A  50F4               	movf	prodh,w,c
 26660  011B6C  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 26661  011B6E  6EDA               	movwf	fsr2h,c
 26662  011B70  0E20               	movlw	32
 26663  011B72  6EDF               	movwf	indf2,c
 26664                           
 26665                           ; BSR set to: 0
 26666                           ;display.c: 111: ++padding;
 26667  011B74  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 26668  011B76                     l1317:
 26669                           
 26670                           ; BSR set to: 0
 26671                           
 26672                           ; BSR set to: 0
 26673  011B76  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 26674  011B78  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 26675  011B7A  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 26676  011B7C  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 26677  011B7E  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 26678  011B82  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 26679  011B84  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 26680  011B86  0E00               	movlw	0
 26681  011B88  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 26682  011B8A  517D               	movf	??__display_padded_itoa& (0+255),w,b
 26683  011B8C  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 26684  011B8E  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 26685  011B90  0A80               	xorlw	128
 26686  011B92  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 26687  011B94  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 26688  011B96  0A80               	xorlw	128
 26689  011B98  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 26690  011B9A  A0D8               	btfss	status,0,c
 26691  011B9C  D7E1               	goto	l1318
 26692                           
 26693                           ; BSR set to: 0
 26694                           ;display.c: 112: };display.c: 113: for(pos=0; tmp[pos]; ++pos)
 26695                           
 26696                           ; BSR set to: 0
 26697  011B9E  0E00               	movlw	0
 26698  011BA0  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 26699  011BA2  D018               	goto	l1320
 26700  011BA4                     
 26701                           ; BSR set to: 0
 26702                           ;display.c: 114: {;display.c: 115: text[pos+padding] = tmp[pos];
 26703                           
 26704                           ; BSR set to: 0
 26705  011BA4  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 26706  011BA6  0D01               	mullw	1
 26707  011BA8  0E82               	movlw	low __display_padded_itoa@tmp
 26708  011BAA  24F3               	addwf	prodl,w,c
 26709  011BAC  6ED9               	movwf	fsr2l,c
 26710  011BAE  0E00               	movlw	high __display_padded_itoa@tmp
 26711  011BB0  20F4               	addwfc	prodh,w,c
 26712  011BB2  6EDA               	movwf	fsr2h,c
 26713  011BB4  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 26714  011BB6  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 26715  011BBA  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 26716  011BBC  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 26717  011BBE  0E00               	movlw	0
 26718  011BC0  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 26719  011BC2  517D               	movf	??__display_padded_itoa& (0+255),w,b
 26720  011BC4  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 26721  011BC6  6EE1               	movwf	fsr1l,c
 26722  011BC8  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 26723  011BCA  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 26724  011BCC  6EE2               	movwf	fsr1h,c
 26725  011BCE  CFDF FFE7          	movff	indf2,indf1
 26726                           
 26727                           ; BSR set to: 0
 26728  011BD2  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 26729  011BD4                     l1320:
 26730                           
 26731                           ; BSR set to: 0
 26732                           
 26733                           ; BSR set to: 0
 26734  011BD4  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 26735  011BD6  0D01               	mullw	1
 26736  011BD8  0E82               	movlw	low __display_padded_itoa@tmp
 26737  011BDA  24F3               	addwf	prodl,w,c
 26738  011BDC  6ED9               	movwf	fsr2l,c
 26739  011BDE  0E00               	movlw	high __display_padded_itoa@tmp
 26740  011BE0  20F4               	addwfc	prodh,w,c
 26741  011BE2  6EDA               	movwf	fsr2h,c
 26742  011BE4  50DF               	movf	indf2,w,c
 26743  011BE6  A4D8               	btfss	status,2,c
 26744  011BE8  D7DD               	goto	l1321
 26745                           
 26746                           ; BSR set to: 0
 26747                           ;display.c: 116: };display.c: 117: text[pos+padding] = 0x00;
 26748                           
 26749                           ; BSR set to: 0
 26750  011BEA  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 26751  011BEC  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 26752  011BF0  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 26753  011BF2  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 26754  011BF4  0E00               	movlw	0
 26755  011BF6  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 26756  011BF8  517D               	movf	??__display_padded_itoa& (0+255),w,b
 26757  011BFA  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 26758  011BFC  6ED9               	movwf	fsr2l,c
 26759  011BFE  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 26760  011C00  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 26761  011C02  6EDA               	movwf	fsr2h,c
 26762  011C04  0E00               	movlw	0
 26763  011C06  6EDF               	movwf	indf2,c
 26764                           
 26765                           ; BSR set to: 0
 26766  011C08  0012               	return		;funcret
 26767  011C0A                     __end_of__display_padded_itoa:
 26768                           	opt stack 0
 26769                           tblptru	equ	0xFF8
 26770                           tblptrh	equ	0xFF7
 26771                           tblptrl	equ	0xFF6
 26772                           tablat	equ	0xFF5
 26773                           prodh	equ	0xFF4
 26774                           prodl	equ	0xFF3
 26775                           intcon	equ	0xFF2
 26776                           postinc0	equ	0xFEE
 26777                           wreg	equ	0xFE8
 26778                           indf1	equ	0xFE7
 26779                           postinc1	equ	0xFE6
 26780                           postdec1	equ	0xFE5
 26781                           plusw1	equ	0xFE3
 26782                           fsr1h	equ	0xFE2
 26783                           fsr1l	equ	0xFE1
 26784                           indf2	equ	0xFDF
 26785                           postinc2	equ	0xFDE
 26786                           postdec2	equ	0xFDD
 26787                           plusw2	equ	0xFDB
 26788                           fsr2h	equ	0xFDA
 26789                           fsr2l	equ	0xFD9
 26790                           status	equ	0xFD8
 26791                           
 26792 ;; *************** function __display_itoa_long *****************
 26793 ;; Defined at:
 26794 ;;		line 202 in file "display.c"
 26795 ;; Parameters:    Size  Location     Type
 26796 ;;  value           4   77[BANK0 ] long 
 26797 ;;  decimals        1   81[BANK0 ] unsigned char 
 26798 ;;  text            2   82[BANK0 ] PTR unsigned char 
 26799 ;;		 -> display_prepare@temp(10), 
 26800 ;; Auto vars:     Size  Location     Type
 26801 ;;  short_value     2   89[BANK0 ] int 
 26802 ;;  last_digit      1   91[BANK0 ] char 
 26803 ;;  length          1   88[BANK0 ] unsigned char 
 26804 ;; Return value:  Size  Location     Type
 26805 ;;                  1    wreg      void 
 26806 ;; Registers used:
 26807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26808 ;; Tracked objects:
 26809 ;;		On entry : 0/0
 26810 ;;		On exit  : 0/0
 26811 ;;		Unchanged: 0/0
 26812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26813 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26814 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26815 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26816 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26817 ;;Total ram usage:       15 bytes
 26818 ;; Hardware stack levels used:    1
 26819 ;; Hardware stack levels required when called:   14
 26820 ;; This function calls:
 26821 ;;		___aldiv
 26822 ;;		___almod
 26823 ;;		__display_itoa
 26824 ;;		_strlen
 26825 ;; This function is called by:
 26826 ;;		_display_prepare
 26827 ;; This function uses a non-reentrant model
 26828 ;;
 26829                           
 26830                           	psect	text106
 26831  010888                     __ptext106:
 26832                           	opt stack 0
 26833  010888                     __display_itoa_long:
 26834                           	opt stack 15
 26835                           
 26836                           ;display.c: 204: int16_t short_value;;display.c: 205: int8_t last_digit;;display.c: 206:
      +                           uint8_t length;;display.c: 208: short_value = (int16_t) value;
 26837                           
 26838                           ; BSR set to: 0
 26839                           ;incstack = 0
 26840  010888  C0AD  F0B9         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 26841  01088C  C0AE  F0BA         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 26842                           
 26843                           ;display.c: 209: if(short_value==value)
 26844  010890  C0B9  F0B4         	movff	__display_itoa_long@short_value,??__display_itoa_long
 26845  010894  C0BA  F0B5         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 26846  010898  0E00               	movlw	0
 26847  01089A  0100               	movlb	0	; () banked
 26848  01089C  BFB5               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 26849  01089E  0EFF               	movlw	255
 26850  0108A0  6FB6               	movwf	(??__display_itoa_long+2)& (0+255),b
 26851  0108A2  6FB7               	movwf	(??__display_itoa_long+3)& (0+255),b
 26852  0108A4  51AD               	movf	__display_itoa_long@value& (0+255),w,b
 26853  0108A6  19B4               	xorwf	??__display_itoa_long& (0+255),w,b
 26854  0108A8  E117               	bnz	l16894
 26855  0108AA  51AE               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 26856  0108AC  19B5               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 26857  0108AE  E114               	bnz	l16894
 26858  0108B0  51AF               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 26859  0108B2  19B6               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 26860  0108B4  E111               	bnz	l16894
 26861  0108B6  51B0               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 26862  0108B8  19B7               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 26863  0108BA  A4D8               	btfss	status,2,c
 26864  0108BC  D00D               	goto	l1353
 26865                           
 26866                           ; BSR set to: 0
 26867                           ;display.c: 210: {;display.c: 211: _display_itoa(short_value, decimals, text);
 26868  0108BE  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 26869  0108C2  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 26870  0108C6  C0B1  F097         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 26871  0108CA  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 26872  0108CE  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 26873  0108D2  EC33  F075         	call	__display_itoa	;wreg free
 26874                           
 26875                           ;display.c: 212: }
 26876  0108D6  0012               	return	
 26877  0108D8                     l1353:
 26878  0108D8                     l16894:
 26879                           
 26880                           ;display.c: 213: else;display.c: 214: {;display.c: 215: short_value = value / 10;
 26881  0108D8  C0AD  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 26882  0108DC  C0AE  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 26883  0108E0  C0AF  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 26884  0108E4  C0B0  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 26885  0108E8  0E0A               	movlw	10
 26886  0108EA  0100               	movlb	0	; () banked
 26887  0108EC  6F64               	movwf	___aldiv@divisor& (0+255),b
 26888  0108EE  0E00               	movlw	0
 26889  0108F0  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 26890  0108F2  0E00               	movlw	0
 26891  0108F4  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 26892  0108F6  0E00               	movlw	0
 26893  0108F8  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 26894  0108FA  EC3C  F092         	call	___aldiv	;wreg free
 26895  0108FE  C060  F0B9         	movff	?___aldiv,__display_itoa_long@short_value
 26896  010902  C061  F0BA         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 26897                           
 26898                           ;display.c: 216: _display_itoa(short_value, decimals-1, text);
 26899  010906  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 26900  01090A  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 26901  01090E  0100               	movlb	0	; () banked
 26902  010910  05B1               	decf	__display_itoa_long@decimals& (0+255),w,b
 26903  010912  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26904  010914  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 26905  010918  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 26906  01091C  EC33  F075         	call	__display_itoa	;wreg free
 26907                           
 26908                           ;display.c: 217: length = strlen(text);
 26909  010920  C0B2  F060         	movff	__display_itoa_long@text,strlen@s
 26910  010924  C0B3  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 26911  010928  EC03  F0A7         	call	_strlen	;wreg free
 26912  01092C  0100               	movlb	0	; () banked
 26913  01092E  5160               	movf	?_strlen& (0+255),w,b
 26914  010930  6FB8               	movwf	__display_itoa_long@length& (0+255),b
 26915                           
 26916                           ; BSR set to: 0
 26917                           ;display.c: 218: last_digit = value % 10;
 26918  010932  C0AD  F060         	movff	__display_itoa_long@value,___almod@dividend
 26919  010936  C0AE  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 26920  01093A  C0AF  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 26921  01093E  C0B0  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 26922  010942  0E0A               	movlw	10
 26923  010944  6F64               	movwf	___almod@divisor& (0+255),b
 26924  010946  0E00               	movlw	0
 26925  010948  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 26926  01094A  0E00               	movlw	0
 26927  01094C  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 26928  01094E  0E00               	movlw	0
 26929  010950  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 26930  010952  EC4E  F096         	call	___almod	;wreg free
 26931  010956  0100               	movlb	0	; () banked
 26932  010958  5160               	movf	?___almod& (0+255),w,b
 26933  01095A  6FBB               	movwf	__display_itoa_long@last_digit& (0+255),b
 26934                           
 26935                           ; BSR set to: 0
 26936                           ;display.c: 219: if(last_digit<0)
 26937  01095C  BFBB               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 26938                           
 26939                           ; BSR set to: 0
 26940                           ;display.c: 220: last_digit = -last_digit;
 26941  01095E  6DBB               	negf	__display_itoa_long@last_digit& (0+255),b
 26942                           
 26943                           ; BSR set to: 0
 26944                           ;display.c: 221: text[length] = last_digit + 0x30;
 26945                           
 26946                           ; BSR set to: 0
 26947  010960  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 26948  010962  0D01               	mullw	1
 26949  010964  50F3               	movf	prodl,w,c
 26950  010966  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 26951  010968  6ED9               	movwf	fsr2l,c
 26952  01096A  50F4               	movf	prodh,w,c
 26953  01096C  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 26954  01096E  6EDA               	movwf	fsr2h,c
 26955  010970  51BB               	movf	__display_itoa_long@last_digit& (0+255),w,b
 26956  010972  0F30               	addlw	48
 26957  010974  6EDF               	movwf	indf2,c
 26958                           
 26959                           ; BSR set to: 0
 26960                           ;display.c: 222: text[length+1] = 0x00;
 26961  010976  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 26962  010978  6FB4               	movwf	??__display_itoa_long& (0+255),b
 26963  01097A  6BB5               	clrf	(??__display_itoa_long+1)& (0+255),b
 26964  01097C  0E01               	movlw	1
 26965  01097E  27B4               	addwf	??__display_itoa_long& (0+255),f,b
 26966  010980  0E00               	movlw	0
 26967  010982  23B5               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 26968  010984  51B4               	movf	??__display_itoa_long& (0+255),w,b
 26969  010986  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 26970  010988  6ED9               	movwf	fsr2l,c
 26971  01098A  51B5               	movf	(??__display_itoa_long+1)& (0+255),w,b
 26972  01098C  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 26973  01098E  6EDA               	movwf	fsr2h,c
 26974  010990  0E00               	movlw	0
 26975  010992  6EDF               	movwf	indf2,c
 26976  010994  0012               	return	
 26977  010996                     __end_of__display_itoa_long:
 26978                           	opt stack 0
 26979                           tblptru	equ	0xFF8
 26980                           tblptrh	equ	0xFF7
 26981                           tblptrl	equ	0xFF6
 26982                           tablat	equ	0xFF5
 26983                           prodh	equ	0xFF4
 26984                           prodl	equ	0xFF3
 26985                           intcon	equ	0xFF2
 26986                           postinc0	equ	0xFEE
 26987                           wreg	equ	0xFE8
 26988                           indf1	equ	0xFE7
 26989                           postinc1	equ	0xFE6
 26990                           postdec1	equ	0xFE5
 26991                           plusw1	equ	0xFE3
 26992                           fsr1h	equ	0xFE2
 26993                           fsr1l	equ	0xFE1
 26994                           indf2	equ	0xFDF
 26995                           postinc2	equ	0xFDE
 26996                           postdec2	equ	0xFDD
 26997                           plusw2	equ	0xFDB
 26998                           fsr2h	equ	0xFDA
 26999                           fsr2l	equ	0xFD9
 27000                           status	equ	0xFD8
 27001                           
 27002 ;; *************** function __display_itoa *****************
 27003 ;; Defined at:
 27004 ;;		line 134 in file "display.c"
 27005 ;; Parameters:    Size  Location     Type
 27006 ;;  value           2   53[BANK0 ] int 
 27007 ;;  decimals        1   55[BANK0 ] unsigned char 
 27008 ;;  text            2   56[BANK0 ] PTR unsigned char 
 27009 ;;		 -> display_prepare@temp(10), display_content(80), 
 27010 ;; Auto vars:     Size  Location     Type
 27011 ;;  tmp            10   64[BANK0 ] unsigned char [10]
 27012 ;;  pos             1   76[BANK0 ] unsigned char 
 27013 ;;  missing         1   75[BANK0 ] char 
 27014 ;;  len             1   74[BANK0 ] unsigned char 
 27015 ;; Return value:  Size  Location     Type
 27016 ;;                  1    wreg      void 
 27017 ;; Registers used:
 27018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27019 ;; Tracked objects:
 27020 ;;		On entry : 0/0
 27021 ;;		On exit  : 0/0
 27022 ;;		Unchanged: 0/0
 27023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27024 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27025 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27026 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27027 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27028 ;;Total ram usage:       24 bytes
 27029 ;; Hardware stack levels used:    1
 27030 ;; Hardware stack levels required when called:   13
 27031 ;; This function calls:
 27032 ;;		_itoa
 27033 ;;		_strlen
 27034 ;; This function is called by:
 27035 ;;		__display_itoa_long
 27036 ;;		_display_prepare
 27037 ;; This function uses a non-reentrant model
 27038 ;;
 27039                           
 27040                           	psect	text107
 27041  00EA66                     __ptext107:
 27042                           	opt stack 0
 27043  00EA66                     __display_itoa:
 27044                           	opt stack 15
 27045                           
 27046                           ;display.c: 136: uint8_t pos;;display.c: 137: uint8_t len;;display.c: 138: int8_t missin
      +                          g;;display.c: 139: char tmp[10];;display.c: 140: itoa(tmp, value, 10);
 27047                           
 27048                           ;incstack = 0
 27049  00EA66  0EA0               	movlw	low __display_itoa@tmp
 27050  00EA68  0100               	movlb	0	; () banked
 27051  00EA6A  6F70               	movwf	itoa@buf& (0+255),b
 27052  00EA6C  0E00               	movlw	high __display_itoa@tmp
 27053  00EA6E  6F71               	movwf	(itoa@buf+1)& (0+255),b
 27054  00EA70  C095  F072         	movff	__display_itoa@value,itoa@val
 27055  00EA74  C096  F073         	movff	__display_itoa@value+1,itoa@val+1
 27056  00EA78  0E00               	movlw	0
 27057  00EA7A  6F75               	movwf	(itoa@base+1)& (0+255),b
 27058  00EA7C  0E0A               	movlw	10
 27059  00EA7E  6F74               	movwf	itoa@base& (0+255),b
 27060  00EA80  EC5D  F0A6         	call	_itoa	;wreg free
 27061                           
 27062                           ;display.c: 141: len = strlen(tmp);
 27063  00EA84  0EA0               	movlw	low __display_itoa@tmp
 27064  00EA86  0100               	movlb	0	; () banked
 27065  00EA88  6F60               	movwf	strlen@s& (0+255),b
 27066  00EA8A  0E00               	movlw	high __display_itoa@tmp
 27067  00EA8C  6F61               	movwf	(strlen@s+1)& (0+255),b
 27068  00EA8E  EC03  F0A7         	call	_strlen	;wreg free
 27069  00EA92  0100               	movlb	0	; () banked
 27070  00EA94  5160               	movf	?_strlen& (0+255),w,b
 27071  00EA96  6FAA               	movwf	__display_itoa@len& (0+255),b
 27072                           
 27073                           ; BSR set to: 0
 27074                           ;display.c: 143: if(value<0)
 27075  00EA98  AF96               	btfss	(__display_itoa@value+1)& (0+255),7,b
 27076  00EA9A  D054               	goto	l1331
 27077                           
 27078                           ; BSR set to: 0
 27079                           ;display.c: 144: {;display.c: 145: missing = decimals + 2 - len;
 27080  00EA9C  51AA               	movf	__display_itoa@len& (0+255),w,b
 27081  00EA9E  0800               	sublw	0
 27082  00EAA0  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 27083  00EAA2  0F02               	addlw	2
 27084  00EAA4  6FAB               	movwf	__display_itoa@missing& (0+255),b
 27085                           
 27086                           ;display.c: 146: if(missing>0)
 27087  00EAA6  51AB               	movf	__display_itoa@missing& (0+255),w,b
 27088  00EAA8  0A80               	xorlw	128
 27089  00EAAA  0F7F               	addlw	-129
 27090  00EAAC  A0D8               	btfss	status,0,c
 27091  00EAAE  D090               	goto	l1338
 27092                           
 27093                           ; BSR set to: 0
 27094                           ;display.c: 147: {;display.c: 148: for(pos=decimals;pos!=0xFF;--pos)
 27095  00EAB0  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 27096  00EAB4                     l15298:
 27097                           
 27098                           ; BSR set to: 0
 27099  00EAB4  29AC               	incf	__display_itoa@pos& (0+255),w,b
 27100  00EAB6  B4D8               	btfsc	status,2,c
 27101  00EAB8  D042               	goto	u14230
 27102                           
 27103                           ; BSR set to: 0
 27104                           ;display.c: 149: {;display.c: 150: if(pos>=missing)
 27105                           
 27106                           ; BSR set to: 0
 27107                           
 27108                           ; BSR set to: 0
 27109  00EABA  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27110  00EABC  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 27111  00EABE  D004               	goto	u14220
 27112  00EAC0  0AFF               	xorlw	255
 27113  00EAC2  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 27114  00EAC4  B0D8               	btfsc	status,0,c
 27115  00EAC6  D02A               	goto	l1335
 27116  00EAC8                     u14220:
 27117                           
 27118                           ; BSR set to: 0
 27119                           ;display.c: 151: {;display.c: 152: tmp[pos+1] = tmp[pos+1-missing];
 27120  00EAC8  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 27121  00EACC  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 27122  00EACE  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 27123  00EAD0  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 27124  00EAD2  1F9A               	comf	??__display_itoa& (0+255),f,b
 27125  00EAD4  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 27126  00EAD6  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 27127  00EAD8  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 27128  00EADA  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27129  00EADC  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 27130  00EADE  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 27131  00EAE0  519A               	movf	??__display_itoa& (0+255),w,b
 27132  00EAE2  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 27133  00EAE4  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 27134  00EAE6  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 27135  00EAE8  0E01               	movlw	1
 27136  00EAEA  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 27137  00EAEC  0E00               	movlw	0
 27138  00EAEE  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 27139  00EAF0  0EA0               	movlw	low __display_itoa@tmp
 27140  00EAF2  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 27141  00EAF4  6ED9               	movwf	fsr2l,c
 27142  00EAF6  0E00               	movlw	high __display_itoa@tmp
 27143  00EAF8  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 27144  00EAFA  6EDA               	movwf	fsr2h,c
 27145  00EAFC  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27146  00EAFE  6F9E               	movwf	(??__display_itoa+4)& (0+255),b
 27147  00EB00  6B9F               	clrf	(??__display_itoa+5)& (0+255),b
 27148  00EB02  0E01               	movlw	1
 27149  00EB04  279E               	addwf	(??__display_itoa+4)& (0+255),f,b
 27150  00EB06  0E00               	movlw	0
 27151  00EB08  239F               	addwfc	(??__display_itoa+5)& (0+255),f,b
 27152  00EB0A  0EA0               	movlw	low __display_itoa@tmp
 27153  00EB0C  259E               	addwf	(??__display_itoa+4)& (0+255),w,b
 27154  00EB0E  6EE1               	movwf	fsr1l,c
 27155  00EB10  0E00               	movlw	high __display_itoa@tmp
 27156  00EB12  219F               	addwfc	(??__display_itoa+5)& (0+255),w,b
 27157  00EB14  6EE2               	movwf	fsr1h,c
 27158  00EB16  CFDF FFE7          	movff	indf2,indf1
 27159                           
 27160                           ;display.c: 153: }
 27161  00EB1A  D00F               	goto	l1336
 27162  00EB1C                     l1335:
 27163                           
 27164                           ; BSR set to: 0
 27165                           ;display.c: 154: else;display.c: 155: {;display.c: 156: tmp[pos+1] = '0';
 27166                           
 27167                           ; BSR set to: 0
 27168  00EB1C  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27169  00EB1E  6F9A               	movwf	??__display_itoa& (0+255),b
 27170  00EB20  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 27171  00EB22  0E01               	movlw	1
 27172  00EB24  279A               	addwf	??__display_itoa& (0+255),f,b
 27173  00EB26  0E00               	movlw	0
 27174  00EB28  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 27175  00EB2A  0EA0               	movlw	low __display_itoa@tmp
 27176  00EB2C  259A               	addwf	??__display_itoa& (0+255),w,b
 27177  00EB2E  6ED9               	movwf	fsr2l,c
 27178  00EB30  0E00               	movlw	high __display_itoa@tmp
 27179  00EB32  219B               	addwfc	(??__display_itoa+1)& (0+255),w,b
 27180  00EB34  6EDA               	movwf	fsr2h,c
 27181  00EB36  0E30               	movlw	48
 27182  00EB38  6EDF               	movwf	indf2,c
 27183  00EB3A                     l1336:
 27184                           
 27185                           ; BSR set to: 0
 27186                           
 27187                           ; BSR set to: 0
 27188  00EB3A  07AC               	decf	__display_itoa@pos& (0+255),f,b
 27189  00EB3C  D7BB               	goto	l15298
 27190  00EB3E                     u14230:
 27191                           
 27192                           ; BSR set to: 0
 27193                           ;display.c: 157: };display.c: 158: };display.c: 159: len = decimals + 2;
 27194                           
 27195                           ; BSR set to: 0
 27196  00EB3E  5197               	movf	__display_itoa@decimals& (0+255),w,b
 27197  00EB40  0F02               	addlw	2
 27198  00EB42  D045               	goto	L38
 27199  00EB44                     l1331:
 27200                           
 27201                           ; BSR set to: 0
 27202                           ;display.c: 162: else;display.c: 163: {;display.c: 164: missing = decimals + 1 - len;
 27203                           
 27204                           ; BSR set to: 0
 27205  00EB44  51AA               	movf	__display_itoa@len& (0+255),w,b
 27206  00EB46  0800               	sublw	0
 27207  00EB48  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 27208  00EB4A  6F9A               	movwf	??__display_itoa& (0+255),b
 27209  00EB4C  299A               	incf	??__display_itoa& (0+255),w,b
 27210  00EB4E  6FAB               	movwf	__display_itoa@missing& (0+255),b
 27211                           
 27212                           ;display.c: 165: if(missing>0)
 27213  00EB50  51AB               	movf	__display_itoa@missing& (0+255),w,b
 27214  00EB52  0A80               	xorlw	128
 27215  00EB54  0F7F               	addlw	-129
 27216  00EB56  A0D8               	btfss	status,0,c
 27217  00EB58  D03B               	goto	l1338
 27218                           
 27219                           ; BSR set to: 0
 27220                           ;display.c: 166: {;display.c: 167: for(pos=decimals;pos!=0xFF;--pos)
 27221  00EB5A  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 27222  00EB5E                     l15318:
 27223                           
 27224                           ; BSR set to: 0
 27225  00EB5E  29AC               	incf	__display_itoa@pos& (0+255),w,b
 27226  00EB60  B4D8               	btfsc	status,2,c
 27227  00EB62  D034               	goto	u14270
 27228                           
 27229                           ; BSR set to: 0
 27230                           ;display.c: 168: {;display.c: 169: if(pos>=missing)
 27231                           
 27232                           ; BSR set to: 0
 27233                           
 27234                           ; BSR set to: 0
 27235  00EB64  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27236  00EB66  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 27237  00EB68  D004               	goto	u14260
 27238  00EB6A  0AFF               	xorlw	255
 27239  00EB6C  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 27240  00EB6E  B0D8               	btfsc	status,0,c
 27241  00EB70  D021               	goto	l1341
 27242  00EB72                     u14260:
 27243                           
 27244                           ; BSR set to: 0
 27245                           ;display.c: 170: {;display.c: 171: tmp[pos] = tmp[pos-missing];
 27246  00EB72  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 27247  00EB76  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 27248  00EB78  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 27249  00EB7A  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 27250  00EB7C  1F9A               	comf	??__display_itoa& (0+255),f,b
 27251  00EB7E  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 27252  00EB80  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 27253  00EB82  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 27254  00EB84  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27255  00EB86  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 27256  00EB88  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 27257  00EB8A  519A               	movf	??__display_itoa& (0+255),w,b
 27258  00EB8C  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 27259  00EB8E  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 27260  00EB90  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 27261  00EB92  0EA0               	movlw	low __display_itoa@tmp
 27262  00EB94  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 27263  00EB96  6ED9               	movwf	fsr2l,c
 27264  00EB98  0E00               	movlw	high __display_itoa@tmp
 27265  00EB9A  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 27266  00EB9C  6EDA               	movwf	fsr2h,c
 27267  00EB9E  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27268  00EBA0  0D01               	mullw	1
 27269  00EBA2  0EA0               	movlw	low __display_itoa@tmp
 27270  00EBA4  24F3               	addwf	prodl,w,c
 27271  00EBA6  6EE1               	movwf	fsr1l,c
 27272  00EBA8  0E00               	movlw	high __display_itoa@tmp
 27273  00EBAA  20F4               	addwfc	prodh,w,c
 27274  00EBAC  6EE2               	movwf	fsr1h,c
 27275  00EBAE  CFDF FFE7          	movff	indf2,indf1
 27276                           
 27277                           ;display.c: 172: }
 27278  00EBB2  D00A               	goto	l1342
 27279  00EBB4                     l1341:
 27280                           
 27281                           ; BSR set to: 0
 27282                           ;display.c: 173: else;display.c: 174: {;display.c: 175: tmp[pos] = '0';
 27283                           
 27284                           ; BSR set to: 0
 27285  00EBB4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27286  00EBB6  0D01               	mullw	1
 27287  00EBB8  0EA0               	movlw	low __display_itoa@tmp
 27288  00EBBA  24F3               	addwf	prodl,w,c
 27289  00EBBC  6ED9               	movwf	fsr2l,c
 27290  00EBBE  0E00               	movlw	high __display_itoa@tmp
 27291  00EBC0  20F4               	addwfc	prodh,w,c
 27292  00EBC2  6EDA               	movwf	fsr2h,c
 27293  00EBC4  0E30               	movlw	48
 27294  00EBC6  6EDF               	movwf	indf2,c
 27295  00EBC8                     l1342:
 27296                           
 27297                           ; BSR set to: 0
 27298                           
 27299                           ; BSR set to: 0
 27300  00EBC8  07AC               	decf	__display_itoa@pos& (0+255),f,b
 27301  00EBCA  D7C9               	goto	l15318
 27302  00EBCC                     u14270:
 27303                           
 27304                           ; BSR set to: 0
 27305                           ;display.c: 176: };display.c: 177: };display.c: 178: len = decimals + 1;
 27306                           
 27307                           ; BSR set to: 0
 27308  00EBCC  2997               	incf	__display_itoa@decimals& (0+255),w,b
 27309  00EBCE                     L38:
 27310  00EBCE  6FAA               	movwf	__display_itoa@len& (0+255),b
 27311  00EBD0                     l1338:
 27312                           
 27313                           ; BSR set to: 0
 27314                           ;display.c: 179: };display.c: 180: };display.c: 182: decimals = len - decimals - 1;
 27315                           
 27316                           ; BSR set to: 0
 27317  00EBD0  5197               	movf	__display_itoa@decimals& (0+255),w,b
 27318  00EBD2  0800               	sublw	0
 27319  00EBD4  25AA               	addwf	__display_itoa@len& (0+255),w,b
 27320  00EBD6  6F9A               	movwf	??__display_itoa& (0+255),b
 27321  00EBD8  059A               	decf	??__display_itoa& (0+255),w,b
 27322  00EBDA  6F97               	movwf	__display_itoa@decimals& (0+255),b
 27323                           
 27324                           ; BSR set to: 0
 27325                           ;display.c: 184: for(pos=0;pos<len;++pos)
 27326  00EBDC  0E00               	movlw	0
 27327  00EBDE  6FAC               	movwf	__display_itoa@pos& (0+255),b
 27328  00EBE0  D023               	goto	l1343
 27329  00EBE2                     
 27330                           ; BSR set to: 0
 27331                           ;display.c: 185: {;display.c: 186: text[pos] = tmp[pos];
 27332                           
 27333                           ; BSR set to: 0
 27334  00EBE2  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27335  00EBE4  0D01               	mullw	1
 27336  00EBE6  0EA0               	movlw	low __display_itoa@tmp
 27337  00EBE8  24F3               	addwf	prodl,w,c
 27338  00EBEA  6ED9               	movwf	fsr2l,c
 27339  00EBEC  0E00               	movlw	high __display_itoa@tmp
 27340  00EBEE  20F4               	addwfc	prodh,w,c
 27341  00EBF0  6EDA               	movwf	fsr2h,c
 27342  00EBF2  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27343  00EBF4  0D01               	mullw	1
 27344  00EBF6  50F3               	movf	prodl,w,c
 27345  00EBF8  2598               	addwf	__display_itoa@text& (0+255),w,b
 27346  00EBFA  6EE1               	movwf	fsr1l,c
 27347  00EBFC  50F4               	movf	prodh,w,c
 27348  00EBFE  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 27349  00EC00  6EE2               	movwf	fsr1h,c
 27350  00EC02  CFDF FFE7          	movff	indf2,indf1
 27351                           
 27352                           ; BSR set to: 0
 27353                           ;display.c: 187: if(pos==decimals)
 27354  00EC06  5197               	movf	__display_itoa@decimals& (0+255),w,b
 27355  00EC08  19AC               	xorwf	__display_itoa@pos& (0+255),w,b
 27356  00EC0A  A4D8               	btfss	status,2,c
 27357  00EC0C  D00C               	goto	l1345
 27358                           
 27359                           ; BSR set to: 0
 27360                           ;display.c: 188: {;display.c: 190: ++pos;
 27361  00EC0E  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 27362                           
 27363                           ; BSR set to: 0
 27364                           ;display.c: 191: text[pos] = '.';
 27365  00EC10  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27366  00EC12  0D01               	mullw	1
 27367  00EC14  50F3               	movf	prodl,w,c
 27368  00EC16  2598               	addwf	__display_itoa@text& (0+255),w,b
 27369  00EC18  6ED9               	movwf	fsr2l,c
 27370  00EC1A  50F4               	movf	prodh,w,c
 27371  00EC1C  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 27372  00EC1E  6EDA               	movwf	fsr2h,c
 27373  00EC20  0E2E               	movlw	46
 27374  00EC22  6EDF               	movwf	indf2,c
 27375                           
 27376                           ;display.c: 192: break;
 27377  00EC24  D01E               	goto	l1347
 27378  00EC26                     l1345:
 27379                           
 27380                           ; BSR set to: 0
 27381                           
 27382                           ; BSR set to: 0
 27383  00EC26  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 27384  00EC28                     l1343:
 27385                           
 27386                           ; BSR set to: 0
 27387                           
 27388                           ; BSR set to: 0
 27389  00EC28  51AA               	movf	__display_itoa@len& (0+255),w,b
 27390  00EC2A  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 27391  00EC2C  B0D8               	btfsc	status,0,c
 27392  00EC2E  D019               	goto	l1347
 27393  00EC30  D7D8               	goto	l1344
 27394  00EC32                     
 27395                           ; BSR set to: 0
 27396                           ;display.c: 196: {;display.c: 197: text[pos+1] = tmp[pos];
 27397                           
 27398                           ; BSR set to: 0
 27399  00EC32  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27400  00EC34  0D01               	mullw	1
 27401  00EC36  0EA0               	movlw	low __display_itoa@tmp
 27402  00EC38  24F3               	addwf	prodl,w,c
 27403  00EC3A  6ED9               	movwf	fsr2l,c
 27404  00EC3C  0E00               	movlw	high __display_itoa@tmp
 27405  00EC3E  20F4               	addwfc	prodh,w,c
 27406  00EC40  6EDA               	movwf	fsr2h,c
 27407  00EC42  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27408  00EC44  6F9A               	movwf	??__display_itoa& (0+255),b
 27409  00EC46  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 27410  00EC48  0E01               	movlw	1
 27411  00EC4A  279A               	addwf	??__display_itoa& (0+255),f,b
 27412  00EC4C  0E00               	movlw	0
 27413  00EC4E  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 27414  00EC50  519A               	movf	??__display_itoa& (0+255),w,b
 27415  00EC52  2598               	addwf	__display_itoa@text& (0+255),w,b
 27416  00EC54  6EE1               	movwf	fsr1l,c
 27417  00EC56  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 27418  00EC58  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 27419  00EC5A  6EE2               	movwf	fsr1h,c
 27420  00EC5C  CFDF FFE7          	movff	indf2,indf1
 27421                           
 27422                           ; BSR set to: 0
 27423  00EC60  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 27424  00EC62                     l1347:
 27425                           
 27426                           ; BSR set to: 0
 27427                           
 27428                           ; BSR set to: 0
 27429  00EC62  51AA               	movf	__display_itoa@len& (0+255),w,b
 27430  00EC64  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 27431  00EC66  A0D8               	btfss	status,0,c
 27432  00EC68  D7E4               	goto	l1348
 27433                           
 27434                           ; BSR set to: 0
 27435                           ;display.c: 198: };display.c: 199: text[pos+1] = 0;
 27436                           
 27437                           ; BSR set to: 0
 27438  00EC6A  51AC               	movf	__display_itoa@pos& (0+255),w,b
 27439  00EC6C  6F9A               	movwf	??__display_itoa& (0+255),b
 27440  00EC6E  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 27441  00EC70  0E01               	movlw	1
 27442  00EC72  279A               	addwf	??__display_itoa& (0+255),f,b
 27443  00EC74  0E00               	movlw	0
 27444  00EC76  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 27445  00EC78  519A               	movf	??__display_itoa& (0+255),w,b
 27446  00EC7A  2598               	addwf	__display_itoa@text& (0+255),w,b
 27447  00EC7C  6ED9               	movwf	fsr2l,c
 27448  00EC7E  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 27449  00EC80  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 27450  00EC82  6EDA               	movwf	fsr2h,c
 27451  00EC84  0E00               	movlw	0
 27452  00EC86  6EDF               	movwf	indf2,c
 27453                           
 27454                           ; BSR set to: 0
 27455  00EC88  0012               	return		;funcret
 27456  00EC8A                     __end_of__display_itoa:
 27457                           	opt stack 0
 27458                           tblptru	equ	0xFF8
 27459                           tblptrh	equ	0xFF7
 27460                           tblptrl	equ	0xFF6
 27461                           tablat	equ	0xFF5
 27462                           prodh	equ	0xFF4
 27463                           prodl	equ	0xFF3
 27464                           intcon	equ	0xFF2
 27465                           postinc0	equ	0xFEE
 27466                           wreg	equ	0xFE8
 27467                           indf1	equ	0xFE7
 27468                           postinc1	equ	0xFE6
 27469                           postdec1	equ	0xFE5
 27470                           plusw1	equ	0xFE3
 27471                           fsr1h	equ	0xFE2
 27472                           fsr1l	equ	0xFE1
 27473                           indf2	equ	0xFDF
 27474                           postinc2	equ	0xFDE
 27475                           postdec2	equ	0xFDD
 27476                           plusw2	equ	0xFDB
 27477                           fsr2h	equ	0xFDA
 27478                           fsr2l	equ	0xFD9
 27479                           status	equ	0xFD8
 27480                           
 27481 ;; *************** function _strlen *****************
 27482 ;; Defined at:
 27483 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 27484 ;; Parameters:    Size  Location     Type
 27485 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 27486 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 27487 ;; Auto vars:     Size  Location     Type
 27488 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 27489 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 27490 ;; Return value:  Size  Location     Type
 27491 ;;                  2    0[BANK0 ] unsigned int 
 27492 ;; Registers used:
 27493 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27494 ;; Tracked objects:
 27495 ;;		On entry : 0/0
 27496 ;;		On exit  : 0/0
 27497 ;;		Unchanged: 0/0
 27498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27499 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27500 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27501 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27502 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27503 ;;Total ram usage:        6 bytes
 27504 ;; Hardware stack levels used:    1
 27505 ;; Hardware stack levels required when called:   10
 27506 ;; This function calls:
 27507 ;;		Nothing
 27508 ;; This function is called by:
 27509 ;;		__display_padded_itoa
 27510 ;;		__display_itoa
 27511 ;;		__display_itoa_long
 27512 ;;		_display_prepare
 27513 ;; This function uses a non-reentrant model
 27514 ;;
 27515                           
 27516                           	psect	text108
 27517  014E06                     __ptext108:
 27518                           	opt stack 0
 27519  014E06                     _strlen:
 27520                           	opt stack 19
 27521                           
 27522                           ; BSR set to: 0
 27523                           ;incstack = 0
 27524  014E06  C060  F064         	movff	strlen@s,strlen@cp
 27525  014E0A  C061  F065         	movff	strlen@s+1,strlen@cp+1
 27526  014E0E  D003               	goto	l3736
 27527  014E10  0100               	movlb	0	; () banked
 27528  014E12  4B64               	infsnz	strlen@cp& (0+255),f,b
 27529  014E14  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 27530  014E16                     l3736:
 27531                           
 27532                           ; BSR set to: 0
 27533  014E16  C064  FFD9         	movff	strlen@cp,fsr2l
 27534  014E1A  C065  FFDA         	movff	strlen@cp+1,fsr2h
 27535  014E1E  50DF               	movf	indf2,w,c
 27536  014E20  A4D8               	btfss	status,2,c
 27537  014E22  D7F6               	goto	l3737
 27538  014E24  C060  F062         	movff	strlen@s,??_strlen
 27539  014E28  C061  F063         	movff	strlen@s+1,??_strlen+1
 27540  014E2C  0100               	movlb	0	; () banked
 27541  014E2E  1F62               	comf	??_strlen& (0+255),f,b
 27542  014E30  1F63               	comf	(??_strlen+1)& (0+255),f,b
 27543  014E32  4B62               	infsnz	??_strlen& (0+255),f,b
 27544  014E34  2B63               	incf	(??_strlen+1)& (0+255),f,b
 27545  014E36  5164               	movf	strlen@cp& (0+255),w,b
 27546  014E38  2562               	addwf	??_strlen& (0+255),w,b
 27547  014E3A  6F60               	movwf	?_strlen& (0+255),b
 27548  014E3C  5165               	movf	(strlen@cp+1)& (0+255),w,b
 27549  014E3E  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 27550  014E40  6F61               	movwf	(?_strlen+1)& (0+255),b
 27551  014E42  0012               	return	
 27552  014E44                     __end_of_strlen:
 27553                           	opt stack 0
 27554                           tblptru	equ	0xFF8
 27555                           tblptrh	equ	0xFF7
 27556                           tblptrl	equ	0xFF6
 27557                           tablat	equ	0xFF5
 27558                           prodh	equ	0xFF4
 27559                           prodl	equ	0xFF3
 27560                           intcon	equ	0xFF2
 27561                           postinc0	equ	0xFEE
 27562                           wreg	equ	0xFE8
 27563                           indf1	equ	0xFE7
 27564                           postinc1	equ	0xFE6
 27565                           postdec1	equ	0xFE5
 27566                           plusw1	equ	0xFE3
 27567                           fsr1h	equ	0xFE2
 27568                           fsr1l	equ	0xFE1
 27569                           indf2	equ	0xFDF
 27570                           postinc2	equ	0xFDE
 27571                           postdec2	equ	0xFDD
 27572                           plusw2	equ	0xFDB
 27573                           fsr2h	equ	0xFDA
 27574                           fsr2l	equ	0xFD9
 27575                           status	equ	0xFD8
 27576                           
 27577 ;; *************** function _itoa *****************
 27578 ;; Defined at:
 27579 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 27580 ;; Parameters:    Size  Location     Type
 27581 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 27582 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 27583 ;;  val             2   18[BANK0 ] int 
 27584 ;;  base            2   20[BANK0 ] int 
 27585 ;; Auto vars:     Size  Location     Type
 27586 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 27587 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 27588 ;; Return value:  Size  Location     Type
 27589 ;;                  2   16[BANK0 ] PTR unsigned char 
 27590 ;; Registers used:
 27591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27592 ;; Tracked objects:
 27593 ;;		On entry : 0/0
 27594 ;;		On exit  : 0/0
 27595 ;;		Unchanged: 0/0
 27596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27597 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27598 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27600 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27601 ;;Total ram usage:        8 bytes
 27602 ;; Hardware stack levels used:    1
 27603 ;; Hardware stack levels required when called:   12
 27604 ;; This function calls:
 27605 ;;		_utoa
 27606 ;; This function is called by:
 27607 ;;		__display_padded_itoa
 27608 ;;		__display_itoa
 27609 ;;		__display_itoa_u16
 27610 ;; This function uses a non-reentrant model
 27611 ;;
 27612                           
 27613                           	psect	text109
 27614  014CBA                     __ptext109:
 27615                           	opt stack 0
 27616  014CBA                     _itoa:
 27617                           	opt stack 14
 27618                           
 27619                           ; BSR set to: 0
 27620                           ;incstack = 0
 27621  014CBA  C070  F076         	movff	itoa@buf,itoa@cp
 27622  014CBE  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 27623  014CC2  0100               	movlb	0	; () banked
 27624  014CC4  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 27625  014CC6  D00C               	goto	l3688
 27626                           
 27627                           ; BSR set to: 0
 27628  014CC8  C070  FFD9         	movff	itoa@buf,fsr2l
 27629  014CCC  C071  FFDA         	movff	itoa@buf+1,fsr2h
 27630  014CD0  0E2D               	movlw	45
 27631  014CD2  6EDF               	movwf	indf2,c
 27632                           
 27633                           ; BSR set to: 0
 27634  014CD4  4B70               	infsnz	itoa@buf& (0+255),f,b
 27635  014CD6  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 27636                           
 27637                           ; BSR set to: 0
 27638  014CD8  6D72               	negf	itoa@val& (0+255),b
 27639  014CDA  1F73               	comf	(itoa@val+1)& (0+255),f,b
 27640  014CDC  B0D8               	btfsc	status,0,c
 27641  014CDE  2B73               	incf	(itoa@val+1)& (0+255),f,b
 27642  014CE0                     l3688:
 27643                           
 27644                           ; BSR set to: 0
 27645                           
 27646                           ; BSR set to: 0
 27647  014CE0  C070  F067         	movff	itoa@buf,utoa@buf
 27648  014CE4  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 27649  014CE8  C072  F069         	movff	itoa@val,utoa@val
 27650  014CEC  C073  F06A         	movff	itoa@val+1,utoa@val+1
 27651  014CF0  C074  F06B         	movff	itoa@base,utoa@base
 27652  014CF4  C075  F06C         	movff	itoa@base+1,utoa@base+1
 27653  014CF8  ECFA  F096         	call	_utoa	;wreg free
 27654  014CFC  0012               	return	
 27655  014CFE                     __end_of_itoa:
 27656                           	opt stack 0
 27657                           tblptru	equ	0xFF8
 27658                           tblptrh	equ	0xFF7
 27659                           tblptrl	equ	0xFF6
 27660                           tablat	equ	0xFF5
 27661                           prodh	equ	0xFF4
 27662                           prodl	equ	0xFF3
 27663                           intcon	equ	0xFF2
 27664                           postinc0	equ	0xFEE
 27665                           wreg	equ	0xFE8
 27666                           indf1	equ	0xFE7
 27667                           postinc1	equ	0xFE6
 27668                           postdec1	equ	0xFE5
 27669                           plusw1	equ	0xFE3
 27670                           fsr1h	equ	0xFE2
 27671                           fsr1l	equ	0xFE1
 27672                           indf2	equ	0xFDF
 27673                           postinc2	equ	0xFDE
 27674                           postdec2	equ	0xFDD
 27675                           plusw2	equ	0xFDB
 27676                           fsr2h	equ	0xFDA
 27677                           fsr2l	equ	0xFD9
 27678                           status	equ	0xFD8
 27679                           
 27680 ;; *************** function _utoa *****************
 27681 ;; Defined at:
 27682 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 27683 ;; Parameters:    Size  Location     Type
 27684 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 27685 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 27686 ;;  val             2    9[BANK0 ] unsigned int 
 27687 ;;  base            2   11[BANK0 ] int 
 27688 ;; Auto vars:     Size  Location     Type
 27689 ;;  v               2   13[BANK0 ] unsigned int 
 27690 ;;  c               1   15[BANK0 ] unsigned char 
 27691 ;; Return value:  Size  Location     Type
 27692 ;;                  2    7[BANK0 ] PTR unsigned char 
 27693 ;; Registers used:
 27694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27695 ;; Tracked objects:
 27696 ;;		On entry : 0/0
 27697 ;;		On exit  : 0/0
 27698 ;;		Unchanged: 0/0
 27699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27700 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27701 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27703 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27704 ;;Total ram usage:        9 bytes
 27705 ;; Hardware stack levels used:    1
 27706 ;; Hardware stack levels required when called:   11
 27707 ;; This function calls:
 27708 ;;		___lwdiv
 27709 ;;		___lwmod
 27710 ;; This function is called by:
 27711 ;;		_itoa
 27712 ;; This function uses a non-reentrant model
 27713 ;;
 27714                           
 27715                           	psect	text110
 27716  012DF4                     __ptext110:
 27717                           	opt stack 0
 27718  012DF4                     _utoa:
 27719                           	opt stack 14
 27720                           
 27721                           ;incstack = 0
 27722  012DF4  C069  F06D         	movff	utoa@val,utoa@v
 27723  012DF8  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 27724  012DFC  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 27725  012E00  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 27726  012E04  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 27727  012E08  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 27728  012E0C  ECF3  F0A3         	call	___lwdiv	;wreg free
 27729  012E10  C060  F06D         	movff	?___lwdiv,utoa@v
 27730  012E14  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 27731  012E18  0100               	movlb	0	; () banked
 27732  012E1A  4B67               	infsnz	utoa@buf& (0+255),f,b
 27733  012E1C  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 27734                           
 27735                           ; BSR set to: 0
 27736  012E1E  516D               	movf	utoa@v& (0+255),w,b
 27737  012E20  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 27738  012E22  A4D8               	btfss	status,2,c
 27739  012E24  D7EB               	goto	l3692
 27740                           
 27741                           ; BSR set to: 0
 27742                           
 27743                           ; BSR set to: 0
 27744  012E26  C067  FFD9         	movff	utoa@buf,fsr2l
 27745  012E2A  C068  FFDA         	movff	utoa@buf+1,fsr2h
 27746  012E2E  0E00               	movlw	0
 27747  012E30  6EDF               	movwf	indf2,c
 27748                           
 27749                           ; BSR set to: 0
 27750  012E32  0767               	decf	utoa@buf& (0+255),f,b
 27751  012E34  A0D8               	btfss	status,0,c
 27752  012E36  0768               	decf	(utoa@buf+1)& (0+255),f,b
 27753  012E38                     
 27754                           ; BSR set to: 0
 27755                           
 27756                           ; BSR set to: 0
 27757  012E38  C069  F060         	movff	utoa@val,___lwmod@dividend
 27758  012E3C  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 27759  012E40  C06B  F062         	movff	utoa@base,___lwmod@divisor
 27760  012E44  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 27761  012E48  EC7F  F0A6         	call	___lwmod	;wreg free
 27762  012E4C  0100               	movlb	0	; () banked
 27763  012E4E  5160               	movf	?___lwmod& (0+255),w,b
 27764  012E50  6F6F               	movwf	utoa@c& (0+255),b
 27765                           
 27766                           ; BSR set to: 0
 27767  012E52  C069  F060         	movff	utoa@val,___lwdiv@dividend
 27768  012E56  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 27769  012E5A  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 27770  012E5E  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 27771  012E62  ECF3  F0A3         	call	___lwdiv	;wreg free
 27772  012E66  C060  F069         	movff	?___lwdiv,utoa@val
 27773  012E6A  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 27774  012E6E  0E09               	movlw	9
 27775  012E70  0100               	movlb	0	; () banked
 27776  012E72  656F               	cpfsgt	utoa@c& (0+255),b
 27777  012E74  D002               	goto	l3695
 27778                           
 27779                           ; BSR set to: 0
 27780  012E76  0E07               	movlw	7
 27781  012E78  276F               	addwf	utoa@c& (0+255),f,b
 27782  012E7A                     l3695:
 27783                           
 27784                           ; BSR set to: 0
 27785  012E7A  0E30               	movlw	48
 27786  012E7C  276F               	addwf	utoa@c& (0+255),f,b
 27787                           
 27788                           ; BSR set to: 0
 27789  012E7E  C067  FFD9         	movff	utoa@buf,fsr2l
 27790  012E82  C068  FFDA         	movff	utoa@buf+1,fsr2h
 27791  012E86  C06F  FFDF         	movff	utoa@c,indf2
 27792                           
 27793                           ; BSR set to: 0
 27794  012E8A  0767               	decf	utoa@buf& (0+255),f,b
 27795  012E8C  A0D8               	btfss	status,0,c
 27796  012E8E  0768               	decf	(utoa@buf+1)& (0+255),f,b
 27797                           
 27798                           ; BSR set to: 0
 27799  012E90  5169               	movf	utoa@val& (0+255),w,b
 27800  012E92  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 27801  012E94  A4D8               	btfss	status,2,c
 27802  012E96  D7D0               	goto	l3694
 27803                           
 27804                           ; BSR set to: 0
 27805                           ;	Return value of _utoa is never used
 27806                           
 27807                           ; BSR set to: 0
 27808  012E98  4B67               	infsnz	utoa@buf& (0+255),f,b
 27809  012E9A  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 27810  012E9C  0012               	return	
 27811  012E9E                     __end_of_utoa:
 27812                           	opt stack 0
 27813                           tblptru	equ	0xFF8
 27814                           tblptrh	equ	0xFF7
 27815                           tblptrl	equ	0xFF6
 27816                           tablat	equ	0xFF5
 27817                           prodh	equ	0xFF4
 27818                           prodl	equ	0xFF3
 27819                           intcon	equ	0xFF2
 27820                           postinc0	equ	0xFEE
 27821                           wreg	equ	0xFE8
 27822                           indf1	equ	0xFE7
 27823                           postinc1	equ	0xFE6
 27824                           postdec1	equ	0xFE5
 27825                           plusw1	equ	0xFE3
 27826                           fsr1h	equ	0xFE2
 27827                           fsr1l	equ	0xFE1
 27828                           indf2	equ	0xFDF
 27829                           postinc2	equ	0xFDE
 27830                           postdec2	equ	0xFDD
 27831                           plusw2	equ	0xFDB
 27832                           fsr2h	equ	0xFDA
 27833                           fsr2l	equ	0xFD9
 27834                           status	equ	0xFD8
 27835                           
 27836 ;; *************** function ___lwmod *****************
 27837 ;; Defined at:
 27838 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 27839 ;; Parameters:    Size  Location     Type
 27840 ;;  dividend        2    0[BANK0 ] unsigned int 
 27841 ;;  divisor         2    2[BANK0 ] unsigned int 
 27842 ;; Auto vars:     Size  Location     Type
 27843 ;;  counter         1    4[BANK0 ] unsigned char 
 27844 ;; Return value:  Size  Location     Type
 27845 ;;                  2    0[BANK0 ] unsigned int 
 27846 ;; Registers used:
 27847 ;;		wreg, status,2, status,0
 27848 ;; Tracked objects:
 27849 ;;		On entry : 0/0
 27850 ;;		On exit  : 0/0
 27851 ;;		Unchanged: 0/0
 27852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27853 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27854 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27856 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27857 ;;Total ram usage:        5 bytes
 27858 ;; Hardware stack levels used:    1
 27859 ;; Hardware stack levels required when called:   10
 27860 ;; This function calls:
 27861 ;;		Nothing
 27862 ;; This function is called by:
 27863 ;;		_utoa
 27864 ;; This function uses a non-reentrant model
 27865 ;;
 27866                           
 27867                           	psect	text111
 27868  014CFE                     __ptext111:
 27869                           	opt stack 0
 27870  014CFE                     ___lwmod:
 27871                           	opt stack 14
 27872                           
 27873                           ; BSR set to: 0
 27874                           ;incstack = 0
 27875  014CFE  0100               	movlb	0	; () banked
 27876  014D00  5162               	movf	___lwmod@divisor& (0+255),w,b
 27877  014D02  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 27878  014D04  B4D8               	btfsc	status,2,c
 27879  014D06  D018               	goto	l3485
 27880                           
 27881                           ; BSR set to: 0
 27882  014D08  0E01               	movlw	1
 27883  014D0A  6F64               	movwf	___lwmod@counter& (0+255),b
 27884  014D0C  D004               	goto	l3480
 27885  014D0E                     
 27886                           ; BSR set to: 0
 27887                           
 27888                           ; BSR set to: 0
 27889  014D0E  90D8               	bcf	status,0,c
 27890  014D10  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 27891  014D12  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 27892  014D14  2B64               	incf	___lwmod@counter& (0+255),f,b
 27893  014D16                     l3480:
 27894                           
 27895                           ; BSR set to: 0
 27896                           
 27897                           ; BSR set to: 0
 27898  014D16  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 27899  014D18  D7FA               	goto	l3481
 27900  014D1A                     u11070:
 27901                           
 27902                           ; BSR set to: 0
 27903                           
 27904                           ; BSR set to: 0
 27905                           
 27906                           ; BSR set to: 0
 27907  014D1A  5162               	movf	___lwmod@divisor& (0+255),w,b
 27908  014D1C  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 27909  014D1E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 27910  014D20  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 27911  014D22  A0D8               	btfss	status,0,c
 27912  014D24  D004               	goto	l3484
 27913                           
 27914                           ; BSR set to: 0
 27915  014D26  5162               	movf	___lwmod@divisor& (0+255),w,b
 27916  014D28  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 27917  014D2A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 27918  014D2C  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 27919  014D2E                     l3484:
 27920                           
 27921                           ; BSR set to: 0
 27922                           
 27923                           ; BSR set to: 0
 27924  014D2E  90D8               	bcf	status,0,c
 27925  014D30  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 27926  014D32  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 27927                           
 27928                           ; BSR set to: 0
 27929  014D34  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 27930  014D36  D7F1               	goto	u11070
 27931  014D38                     l3485:
 27932                           
 27933                           ; BSR set to: 0
 27934                           
 27935                           ; BSR set to: 0
 27936  014D38  C060  F060         	movff	___lwmod@dividend,?___lwmod
 27937  014D3C  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 27938                           
 27939                           ; BSR set to: 0
 27940  014D40  0012               	return		;funcret
 27941  014D42                     __end_of___lwmod:
 27942                           	opt stack 0
 27943                           tblptru	equ	0xFF8
 27944                           tblptrh	equ	0xFF7
 27945                           tblptrl	equ	0xFF6
 27946                           tablat	equ	0xFF5
 27947                           prodh	equ	0xFF4
 27948                           prodl	equ	0xFF3
 27949                           intcon	equ	0xFF2
 27950                           postinc0	equ	0xFEE
 27951                           wreg	equ	0xFE8
 27952                           indf1	equ	0xFE7
 27953                           postinc1	equ	0xFE6
 27954                           postdec1	equ	0xFE5
 27955                           plusw1	equ	0xFE3
 27956                           fsr1h	equ	0xFE2
 27957                           fsr1l	equ	0xFE1
 27958                           indf2	equ	0xFDF
 27959                           postinc2	equ	0xFDE
 27960                           postdec2	equ	0xFDD
 27961                           plusw2	equ	0xFDB
 27962                           fsr2h	equ	0xFDA
 27963                           fsr2l	equ	0xFD9
 27964                           status	equ	0xFD8
 27965                           
 27966 ;; *************** function ___lwdiv *****************
 27967 ;; Defined at:
 27968 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 27969 ;; Parameters:    Size  Location     Type
 27970 ;;  dividend        2    0[BANK0 ] unsigned int 
 27971 ;;  divisor         2    2[BANK0 ] unsigned int 
 27972 ;; Auto vars:     Size  Location     Type
 27973 ;;  quotient        2    4[BANK0 ] unsigned int 
 27974 ;;  counter         1    6[BANK0 ] unsigned char 
 27975 ;; Return value:  Size  Location     Type
 27976 ;;                  2    0[BANK0 ] unsigned int 
 27977 ;; Registers used:
 27978 ;;		wreg, status,2, status,0
 27979 ;; Tracked objects:
 27980 ;;		On entry : 0/0
 27981 ;;		On exit  : 0/0
 27982 ;;		Unchanged: 0/0
 27983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27984 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27985 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27987 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27988 ;;Total ram usage:        7 bytes
 27989 ;; Hardware stack levels used:    1
 27990 ;; Hardware stack levels required when called:   10
 27991 ;; This function calls:
 27992 ;;		Nothing
 27993 ;; This function is called by:
 27994 ;;		_utoa
 27995 ;; This function uses a non-reentrant model
 27996 ;;
 27997                           
 27998                           	psect	text112
 27999  0147E6                     __ptext112:
 28000                           	opt stack 0
 28001  0147E6                     ___lwdiv:
 28002                           	opt stack 14
 28003                           
 28004                           ; BSR set to: 0
 28005                           ;incstack = 0
 28006  0147E6  0E00               	movlw	0
 28007  0147E8  0100               	movlb	0	; () banked
 28008  0147EA  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 28009  0147EC  0E00               	movlw	0
 28010  0147EE  6F64               	movwf	___lwdiv@quotient& (0+255),b
 28011                           
 28012                           ; BSR set to: 0
 28013  0147F0  5162               	movf	___lwdiv@divisor& (0+255),w,b
 28014  0147F2  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 28015  0147F4  B4D8               	btfsc	status,2,c
 28016  0147F6  D01C               	goto	l3475
 28017                           
 28018                           ; BSR set to: 0
 28019  0147F8  0E01               	movlw	1
 28020  0147FA  6F66               	movwf	___lwdiv@counter& (0+255),b
 28021  0147FC  D004               	goto	l3470
 28022  0147FE                     
 28023                           ; BSR set to: 0
 28024                           
 28025                           ; BSR set to: 0
 28026  0147FE  90D8               	bcf	status,0,c
 28027  014800  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 28028  014802  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 28029  014804  2B66               	incf	___lwdiv@counter& (0+255),f,b
 28030  014806                     l3470:
 28031                           
 28032                           ; BSR set to: 0
 28033                           
 28034                           ; BSR set to: 0
 28035  014806  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 28036  014808  D7FA               	goto	l3471
 28037  01480A                     u11040:
 28038                           
 28039                           ; BSR set to: 0
 28040                           
 28041                           ; BSR set to: 0
 28042                           
 28043                           ; BSR set to: 0
 28044  01480A  90D8               	bcf	status,0,c
 28045  01480C  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 28046  01480E  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 28047                           
 28048                           ; BSR set to: 0
 28049  014810  5162               	movf	___lwdiv@divisor& (0+255),w,b
 28050  014812  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 28051  014814  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 28052  014816  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 28053  014818  A0D8               	btfss	status,0,c
 28054  01481A  D005               	goto	l3474
 28055                           
 28056                           ; BSR set to: 0
 28057  01481C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 28058  01481E  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 28059  014820  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 28060  014822  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 28061                           
 28062                           ; BSR set to: 0
 28063  014824  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 28064  014826                     l3474:
 28065                           
 28066                           ; BSR set to: 0
 28067                           
 28068                           ; BSR set to: 0
 28069  014826  90D8               	bcf	status,0,c
 28070  014828  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 28071  01482A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 28072                           
 28073                           ; BSR set to: 0
 28074  01482C  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 28075  01482E  D7ED               	goto	u11040
 28076  014830                     l3475:
 28077                           
 28078                           ; BSR set to: 0
 28079                           
 28080                           ; BSR set to: 0
 28081  014830  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 28082  014834  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 28083                           
 28084                           ; BSR set to: 0
 28085  014838  0012               	return		;funcret
 28086  01483A                     __end_of___lwdiv:
 28087                           	opt stack 0
 28088                           tblptru	equ	0xFF8
 28089                           tblptrh	equ	0xFF7
 28090                           tblptrl	equ	0xFF6
 28091                           tablat	equ	0xFF5
 28092                           prodh	equ	0xFF4
 28093                           prodl	equ	0xFF3
 28094                           intcon	equ	0xFF2
 28095                           postinc0	equ	0xFEE
 28096                           wreg	equ	0xFE8
 28097                           indf1	equ	0xFE7
 28098                           postinc1	equ	0xFE6
 28099                           postdec1	equ	0xFE5
 28100                           plusw1	equ	0xFE3
 28101                           fsr1h	equ	0xFE2
 28102                           fsr1l	equ	0xFE1
 28103                           indf2	equ	0xFDF
 28104                           postinc2	equ	0xFDE
 28105                           postdec2	equ	0xFDD
 28106                           plusw2	equ	0xFDB
 28107                           fsr2h	equ	0xFDA
 28108                           fsr2l	equ	0xFD9
 28109                           status	equ	0xFD8
 28110                           
 28111 ;; *************** function ___almod *****************
 28112 ;; Defined at:
 28113 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 28114 ;; Parameters:    Size  Location     Type
 28115 ;;  dividend        4    0[BANK0 ] long 
 28116 ;;  divisor         4    4[BANK0 ] long 
 28117 ;; Auto vars:     Size  Location     Type
 28118 ;;  sign            1    9[BANK0 ] unsigned char 
 28119 ;;  counter         1    8[BANK0 ] unsigned char 
 28120 ;; Return value:  Size  Location     Type
 28121 ;;                  4    0[BANK0 ] long 
 28122 ;; Registers used:
 28123 ;;		wreg, status,2, status,0
 28124 ;; Tracked objects:
 28125 ;;		On entry : 0/0
 28126 ;;		On exit  : 0/0
 28127 ;;		Unchanged: 0/0
 28128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28129 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28130 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28132 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28133 ;;Total ram usage:       10 bytes
 28134 ;; Hardware stack levels used:    1
 28135 ;; Hardware stack levels required when called:   10
 28136 ;; This function calls:
 28137 ;;		Nothing
 28138 ;; This function is called by:
 28139 ;;		__display_itoa_long
 28140 ;; This function uses a non-reentrant model
 28141 ;;
 28142                           
 28143                           	psect	text113
 28144  012C9C                     __ptext113:
 28145                           	opt stack 0
 28146  012C9C                     ___almod:
 28147                           	opt stack 18
 28148                           
 28149                           ; BSR set to: 0
 28150                           ;incstack = 0
 28151  012C9C  0E00               	movlw	0
 28152  012C9E  0100               	movlb	0	; () banked
 28153  012CA0  6F69               	movwf	___almod@sign& (0+255),b
 28154                           
 28155                           ; BSR set to: 0
 28156  012CA2  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 28157  012CA4  D00A               	goto	l3072
 28158                           
 28159                           ; BSR set to: 0
 28160  012CA6  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 28161  012CA8  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 28162  012CAA  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 28163  012CAC  6D60               	negf	___almod@dividend& (0+255),b
 28164  012CAE  0E00               	movlw	0
 28165  012CB0  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 28166  012CB2  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 28167  012CB4  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 28168                           
 28169                           ; BSR set to: 0
 28170  012CB6  0E01               	movlw	1
 28171  012CB8  6F69               	movwf	___almod@sign& (0+255),b
 28172  012CBA                     l3072:
 28173                           
 28174                           ; BSR set to: 0
 28175                           
 28176                           ; BSR set to: 0
 28177  012CBA  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 28178  012CBC  D008               	goto	l3073
 28179                           
 28180                           ; BSR set to: 0
 28181  012CBE  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 28182  012CC0  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 28183  012CC2  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 28184  012CC4  6D64               	negf	___almod@divisor& (0+255),b
 28185  012CC6  0E00               	movlw	0
 28186  012CC8  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 28187  012CCA  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 28188  012CCC  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 28189  012CCE                     l3073:
 28190                           
 28191                           ; BSR set to: 0
 28192                           
 28193                           ; BSR set to: 0
 28194  012CCE  5164               	movf	___almod@divisor& (0+255),w,b
 28195  012CD0  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 28196  012CD2  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 28197  012CD4  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 28198  012CD6  B4D8               	btfsc	status,2,c
 28199  012CD8  D024               	goto	l3080
 28200                           
 28201                           ; BSR set to: 0
 28202  012CDA  0E01               	movlw	1
 28203  012CDC  6F68               	movwf	___almod@counter& (0+255),b
 28204  012CDE  D006               	goto	l3075
 28205  012CE0                     
 28206                           ; BSR set to: 0
 28207                           
 28208                           ; BSR set to: 0
 28209  012CE0  90D8               	bcf	status,0,c
 28210  012CE2  3764               	rlcf	___almod@divisor& (0+255),f,b
 28211  012CE4  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 28212  012CE6  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 28213  012CE8  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 28214  012CEA  2B68               	incf	___almod@counter& (0+255),f,b
 28215  012CEC                     l3075:
 28216                           
 28217                           ; BSR set to: 0
 28218                           
 28219                           ; BSR set to: 0
 28220  012CEC  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 28221  012CEE  D7F8               	goto	l3076
 28222  012CF0                     u15120:
 28223                           
 28224                           ; BSR set to: 0
 28225                           
 28226                           ; BSR set to: 0
 28227                           
 28228                           ; BSR set to: 0
 28229  012CF0  5164               	movf	___almod@divisor& (0+255),w,b
 28230  012CF2  5D60               	subwf	___almod@dividend& (0+255),w,b
 28231  012CF4  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 28232  012CF6  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 28233  012CF8  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 28234  012CFA  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 28235  012CFC  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 28236  012CFE  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 28237  012D00  A0D8               	btfss	status,0,c
 28238  012D02  D008               	goto	l3079
 28239                           
 28240                           ; BSR set to: 0
 28241  012D04  5164               	movf	___almod@divisor& (0+255),w,b
 28242  012D06  5F60               	subwf	___almod@dividend& (0+255),f,b
 28243  012D08  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 28244  012D0A  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 28245  012D0C  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 28246  012D0E  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 28247  012D10  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 28248  012D12  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 28249  012D14                     l3079:
 28250                           
 28251                           ; BSR set to: 0
 28252                           
 28253                           ; BSR set to: 0
 28254  012D14  90D8               	bcf	status,0,c
 28255  012D16  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 28256  012D18  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 28257  012D1A  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 28258  012D1C  3364               	rrcf	___almod@divisor& (0+255),f,b
 28259                           
 28260                           ; BSR set to: 0
 28261  012D1E  2F68               	decfsz	___almod@counter& (0+255),f,b
 28262  012D20  D7E7               	goto	u15120
 28263  012D22                     l3080:
 28264                           
 28265                           ; BSR set to: 0
 28266                           
 28267                           ; BSR set to: 0
 28268                           
 28269                           ; BSR set to: 0
 28270  012D22  5169               	movf	___almod@sign& (0+255),w,b
 28271  012D24  B4D8               	btfsc	status,2,c
 28272  012D26  D008               	goto	l3081
 28273                           
 28274                           ; BSR set to: 0
 28275  012D28  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 28276  012D2A  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 28277  012D2C  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 28278  012D2E  6D60               	negf	___almod@dividend& (0+255),b
 28279  012D30  0E00               	movlw	0
 28280  012D32  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 28281  012D34  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 28282  012D36  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 28283  012D38                     l3081:
 28284                           
 28285                           ; BSR set to: 0
 28286                           
 28287                           ; BSR set to: 0
 28288  012D38  C060  F060         	movff	___almod@dividend,?___almod
 28289  012D3C  C061  F061         	movff	___almod@dividend+1,?___almod+1
 28290  012D40  C062  F062         	movff	___almod@dividend+2,?___almod+2
 28291  012D44  C063  F063         	movff	___almod@dividend+3,?___almod+3
 28292  012D48  0012               	return	
 28293  012D4A                     __end_of___almod:
 28294                           	opt stack 0
 28295                           tblptru	equ	0xFF8
 28296                           tblptrh	equ	0xFF7
 28297                           tblptrl	equ	0xFF6
 28298                           tablat	equ	0xFF5
 28299                           prodh	equ	0xFF4
 28300                           prodl	equ	0xFF3
 28301                           intcon	equ	0xFF2
 28302                           postinc0	equ	0xFEE
 28303                           wreg	equ	0xFE8
 28304                           indf1	equ	0xFE7
 28305                           postinc1	equ	0xFE6
 28306                           postdec1	equ	0xFE5
 28307                           plusw1	equ	0xFE3
 28308                           fsr1h	equ	0xFE2
 28309                           fsr1l	equ	0xFE1
 28310                           indf2	equ	0xFDF
 28311                           postinc2	equ	0xFDE
 28312                           postdec2	equ	0xFDD
 28313                           plusw2	equ	0xFDB
 28314                           fsr2h	equ	0xFDA
 28315                           fsr2l	equ	0xFD9
 28316                           status	equ	0xFD8
 28317                           
 28318 ;; *************** function ___aldiv *****************
 28319 ;; Defined at:
 28320 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 28321 ;; Parameters:    Size  Location     Type
 28322 ;;  dividend        4    0[BANK0 ] long 
 28323 ;;  divisor         4    4[BANK0 ] long 
 28324 ;; Auto vars:     Size  Location     Type
 28325 ;;  quotient        4   10[BANK0 ] long 
 28326 ;;  sign            1    9[BANK0 ] unsigned char 
 28327 ;;  counter         1    8[BANK0 ] unsigned char 
 28328 ;; Return value:  Size  Location     Type
 28329 ;;                  4    0[BANK0 ] long 
 28330 ;; Registers used:
 28331 ;;		wreg, status,2, status,0
 28332 ;; Tracked objects:
 28333 ;;		On entry : 0/0
 28334 ;;		On exit  : 0/0
 28335 ;;		Unchanged: 0/0
 28336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28337 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28338 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28340 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28341 ;;Total ram usage:       14 bytes
 28342 ;; Hardware stack levels used:    1
 28343 ;; Hardware stack levels required when called:   10
 28344 ;; This function calls:
 28345 ;;		Nothing
 28346 ;; This function is called by:
 28347 ;;		__display_itoa_long
 28348 ;; This function uses a non-reentrant model
 28349 ;;
 28350                           
 28351                           	psect	text114
 28352  012478                     __ptext114:
 28353                           	opt stack 0
 28354  012478                     ___aldiv:
 28355                           	opt stack 18
 28356                           
 28357                           ; BSR set to: 0
 28358                           ;incstack = 0
 28359  012478  0E00               	movlw	0
 28360  01247A  0100               	movlb	0	; () banked
 28361  01247C  6F69               	movwf	___aldiv@sign& (0+255),b
 28362                           
 28363                           ; BSR set to: 0
 28364  01247E  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 28365  012480  D00A               	goto	l3059
 28366                           
 28367                           ; BSR set to: 0
 28368  012482  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 28369  012484  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 28370  012486  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 28371  012488  6D64               	negf	___aldiv@divisor& (0+255),b
 28372  01248A  0E00               	movlw	0
 28373  01248C  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 28374  01248E  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 28375  012490  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 28376                           
 28377                           ; BSR set to: 0
 28378  012492  0E01               	movlw	1
 28379  012494  6F69               	movwf	___aldiv@sign& (0+255),b
 28380  012496                     l3059:
 28381                           
 28382                           ; BSR set to: 0
 28383                           
 28384                           ; BSR set to: 0
 28385  012496  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 28386  012498  D00A               	goto	l3060
 28387                           
 28388                           ; BSR set to: 0
 28389  01249A  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 28390  01249C  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 28391  01249E  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 28392  0124A0  6D60               	negf	___aldiv@dividend& (0+255),b
 28393  0124A2  0E00               	movlw	0
 28394  0124A4  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 28395  0124A6  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 28396  0124A8  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 28397                           
 28398                           ; BSR set to: 0
 28399  0124AA  0E01               	movlw	1
 28400  0124AC  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 28401  0124AE                     l3060:
 28402                           
 28403                           ; BSR set to: 0
 28404                           
 28405                           ; BSR set to: 0
 28406  0124AE  0E00               	movlw	0
 28407  0124B0  6F6A               	movwf	___aldiv@quotient& (0+255),b
 28408  0124B2  0E00               	movlw	0
 28409  0124B4  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 28410  0124B6  0E00               	movlw	0
 28411  0124B8  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 28412  0124BA  0E00               	movlw	0
 28413  0124BC  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 28414                           
 28415                           ; BSR set to: 0
 28416  0124BE  5164               	movf	___aldiv@divisor& (0+255),w,b
 28417  0124C0  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 28418  0124C2  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 28419  0124C4  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 28420  0124C6  B4D8               	btfsc	status,2,c
 28421  0124C8  D02A               	goto	l3067
 28422                           
 28423                           ; BSR set to: 0
 28424  0124CA  0E01               	movlw	1
 28425  0124CC  6F68               	movwf	___aldiv@counter& (0+255),b
 28426  0124CE  D006               	goto	l3062
 28427  0124D0                     
 28428                           ; BSR set to: 0
 28429                           
 28430                           ; BSR set to: 0
 28431  0124D0  90D8               	bcf	status,0,c
 28432  0124D2  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 28433  0124D4  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 28434  0124D6  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 28435  0124D8  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 28436  0124DA  2B68               	incf	___aldiv@counter& (0+255),f,b
 28437  0124DC                     l3062:
 28438                           
 28439                           ; BSR set to: 0
 28440                           
 28441                           ; BSR set to: 0
 28442  0124DC  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 28443  0124DE  D7F8               	goto	l3063
 28444  0124E0                     u15060:
 28445                           
 28446                           ; BSR set to: 0
 28447                           
 28448                           ; BSR set to: 0
 28449                           
 28450                           ; BSR set to: 0
 28451  0124E0  90D8               	bcf	status,0,c
 28452  0124E2  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 28453  0124E4  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 28454  0124E6  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 28455  0124E8  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 28456                           
 28457                           ; BSR set to: 0
 28458  0124EA  5164               	movf	___aldiv@divisor& (0+255),w,b
 28459  0124EC  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 28460  0124EE  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 28461  0124F0  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 28462  0124F2  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 28463  0124F4  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 28464  0124F6  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 28465  0124F8  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 28466  0124FA  A0D8               	btfss	status,0,c
 28467  0124FC  D009               	goto	l3066
 28468                           
 28469                           ; BSR set to: 0
 28470  0124FE  5164               	movf	___aldiv@divisor& (0+255),w,b
 28471  012500  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 28472  012502  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 28473  012504  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 28474  012506  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 28475  012508  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 28476  01250A  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 28477  01250C  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 28478                           
 28479                           ; BSR set to: 0
 28480  01250E  816A               	bsf	___aldiv@quotient& (0+255),0,b
 28481  012510                     l3066:
 28482                           
 28483                           ; BSR set to: 0
 28484                           
 28485                           ; BSR set to: 0
 28486  012510  90D8               	bcf	status,0,c
 28487  012512  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 28488  012514  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 28489  012516  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 28490  012518  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 28491                           
 28492                           ; BSR set to: 0
 28493  01251A  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 28494  01251C  D7E1               	goto	u15060
 28495  01251E                     l3067:
 28496                           
 28497                           ; BSR set to: 0
 28498                           
 28499                           ; BSR set to: 0
 28500                           
 28501                           ; BSR set to: 0
 28502  01251E  5169               	movf	___aldiv@sign& (0+255),w,b
 28503  012520  B4D8               	btfsc	status,2,c
 28504  012522  D008               	goto	l3068
 28505                           
 28506                           ; BSR set to: 0
 28507  012524  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 28508  012526  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 28509  012528  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 28510  01252A  6D6A               	negf	___aldiv@quotient& (0+255),b
 28511  01252C  0E00               	movlw	0
 28512  01252E  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 28513  012530  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 28514  012532  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 28515  012534                     l3068:
 28516                           
 28517                           ; BSR set to: 0
 28518                           
 28519                           ; BSR set to: 0
 28520  012534  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 28521  012538  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 28522  01253C  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 28523  012540  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 28524  012544  0012               	return	
 28525  012546                     __end_of___aldiv:
 28526                           	opt stack 0
 28527                           tblptru	equ	0xFF8
 28528                           tblptrh	equ	0xFF7
 28529                           tblptrl	equ	0xFF6
 28530                           tablat	equ	0xFF5
 28531                           prodh	equ	0xFF4
 28532                           prodl	equ	0xFF3
 28533                           intcon	equ	0xFF2
 28534                           postinc0	equ	0xFEE
 28535                           wreg	equ	0xFE8
 28536                           indf1	equ	0xFE7
 28537                           postinc1	equ	0xFE6
 28538                           postdec1	equ	0xFE5
 28539                           plusw1	equ	0xFE3
 28540                           fsr1h	equ	0xFE2
 28541                           fsr1l	equ	0xFE1
 28542                           indf2	equ	0xFDF
 28543                           postinc2	equ	0xFDE
 28544                           postdec2	equ	0xFDD
 28545                           plusw2	equ	0xFDB
 28546                           fsr2h	equ	0xFDA
 28547                           fsr2l	equ	0xFD9
 28548                           status	equ	0xFD8
 28549                           
 28550 ;; *************** function __display_clear *****************
 28551 ;; Defined at:
 28552 ;;		line 85 in file "display.c"
 28553 ;; Parameters:    Size  Location     Type
 28554 ;;		None
 28555 ;; Auto vars:     Size  Location     Type
 28556 ;;  col             1    3[BANK0 ] unsigned char 
 28557 ;;  row             1    2[BANK0 ] unsigned char 
 28558 ;; Return value:  Size  Location     Type
 28559 ;;                  1    wreg      void 
 28560 ;; Registers used:
 28561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28562 ;; Tracked objects:
 28563 ;;		On entry : 0/0
 28564 ;;		On exit  : 0/0
 28565 ;;		Unchanged: 0/0
 28566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28568 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28569 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28570 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28571 ;;Total ram usage:        4 bytes
 28572 ;; Hardware stack levels used:    1
 28573 ;; Hardware stack levels required when called:   10
 28574 ;; This function calls:
 28575 ;;		Nothing
 28576 ;; This function is called by:
 28577 ;;		_display_prepare
 28578 ;; This function uses a non-reentrant model
 28579 ;;
 28580                           
 28581                           	psect	text115
 28582  014B56                     __ptext115:
 28583                           	opt stack 0
 28584  014B56                     __display_clear:
 28585                           	opt stack 19
 28586                           
 28587                           ;display.c: 87: uint8_t row;;display.c: 88: uint8_t col;;display.c: 89: for(row=0;row<4;
      +                          ++row)
 28588                           
 28589                           ; BSR set to: 0
 28590                           ;incstack = 0
 28591  014B56  0E00               	movlw	0
 28592  014B58  0100               	movlb	0	; () banked
 28593  014B5A  6F62               	movwf	__display_clear@row& (0+255),b
 28594  014B5C                     l16858:
 28595                           
 28596                           ; BSR set to: 0
 28597  014B5C  0E03               	movlw	3
 28598  014B5E  6562               	cpfsgt	__display_clear@row& (0+255),b
 28599  014B60  D001               	goto	l1310
 28600  014B62  0012               	return	
 28601  014B64                     l1310:
 28602                           
 28603                           ; BSR set to: 0
 28604                           ;display.c: 90: {;display.c: 91: for(col=0;col<20;++col)
 28605                           
 28606                           ; BSR set to: 0
 28607  014B64  0E00               	movlw	0
 28608  014B66  6F63               	movwf	__display_clear@col& (0+255),b
 28609  014B68                     l16864:
 28610                           
 28611                           ; BSR set to: 0
 28612  014B68  0E13               	movlw	19
 28613  014B6A  6563               	cpfsgt	__display_clear@col& (0+255),b
 28614  014B6C  D001               	goto	l1312
 28615  014B6E  D016               	goto	u16370
 28616  014B70                     l1312:
 28617                           
 28618                           ; BSR set to: 0
 28619                           ;display.c: 92: {;display.c: 93: display_content[row][col] = ' ';
 28620                           
 28621                           ; BSR set to: 0
 28622  014B70  5162               	movf	__display_clear@row& (0+255),w,b
 28623  014B72  0D14               	mullw	20
 28624  014B74  0E34               	movlw	low _display_content
 28625  014B76  6F60               	movwf	??__display_clear& (0+255),b
 28626  014B78  0E02               	movlw	high _display_content
 28627  014B7A  6F61               	movwf	(??__display_clear+1)& (0+255),b
 28628  014B7C  50F3               	movf	prodl,w,c
 28629  014B7E  2760               	addwf	??__display_clear& (0+255),f,b
 28630  014B80  50F4               	movf	prodh,w,c
 28631  014B82  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 28632  014B84  5163               	movf	__display_clear@col& (0+255),w,b
 28633  014B86  0D01               	mullw	1
 28634  014B88  50F3               	movf	prodl,w,c
 28635  014B8A  2560               	addwf	??__display_clear& (0+255),w,b
 28636  014B8C  6ED9               	movwf	fsr2l,c
 28637  014B8E  50F4               	movf	prodh,w,c
 28638  014B90  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 28639  014B92  6EDA               	movwf	fsr2h,c
 28640  014B94  0E20               	movlw	32
 28641  014B96  6EDF               	movwf	indf2,c
 28642                           
 28643                           ; BSR set to: 0
 28644  014B98  2B63               	incf	__display_clear@col& (0+255),f,b
 28645  014B9A  D7E6               	goto	l16864
 28646  014B9C                     u16370:
 28647                           
 28648                           ; BSR set to: 0
 28649                           
 28650                           ; BSR set to: 0
 28651  014B9C  2B62               	incf	__display_clear@row& (0+255),f,b
 28652  014B9E  D7DE               	goto	l16858
 28653  014BA0                     __end_of__display_clear:
 28654                           	opt stack 0
 28655                           tblptru	equ	0xFF8
 28656                           tblptrh	equ	0xFF7
 28657                           tblptrl	equ	0xFF6
 28658                           tablat	equ	0xFF5
 28659                           prodh	equ	0xFF4
 28660                           prodl	equ	0xFF3
 28661                           intcon	equ	0xFF2
 28662                           postinc0	equ	0xFEE
 28663                           wreg	equ	0xFE8
 28664                           indf1	equ	0xFE7
 28665                           postinc1	equ	0xFE6
 28666                           postdec1	equ	0xFE5
 28667                           plusw1	equ	0xFE3
 28668                           fsr1h	equ	0xFE2
 28669                           fsr1l	equ	0xFE1
 28670                           indf2	equ	0xFDF
 28671                           postinc2	equ	0xFDE
 28672                           postdec2	equ	0xFDD
 28673                           plusw2	equ	0xFDB
 28674                           fsr2h	equ	0xFDA
 28675                           fsr2l	equ	0xFD9
 28676                           status	equ	0xFD8
 28677                           
 28678 ;; *************** function _adc_read_temperature *****************
 28679 ;; Defined at:
 28680 ;;		line 44 in file "adc.c"
 28681 ;; Parameters:    Size  Location     Type
 28682 ;;		None
 28683 ;; Auto vars:     Size  Location     Type
 28684 ;;  temperature     4   43[BANK0 ] float 
 28685 ;;  adc_result      2   41[BANK0 ] unsigned int 
 28686 ;; Return value:  Size  Location     Type
 28687 ;;                  1    wreg      void 
 28688 ;; Registers used:
 28689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28690 ;; Tracked objects:
 28691 ;;		On entry : 0/0
 28692 ;;		On exit  : 0/0
 28693 ;;		Unchanged: 0/0
 28694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28696 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28697 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28698 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28699 ;;Total ram usage:        8 bytes
 28700 ;; Hardware stack levels used:    1
 28701 ;; Hardware stack levels required when called:   11
 28702 ;; This function calls:
 28703 ;;		___fladd
 28704 ;;		___flmul
 28705 ;;		___flneg
 28706 ;;		___fltol
 28707 ;;		___xxtofl
 28708 ;; This function is called by:
 28709 ;;		_main
 28710 ;; This function uses a non-reentrant model
 28711 ;;
 28712                           
 28713                           	psect	text116
 28714  00F064                     __ptext116:
 28715                           	opt stack 0
 28716  00F064                     _adc_read_temperature:
 28717                           	opt stack 19
 28718                           
 28719                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 28720                           
 28721                           ; BSR set to: 0
 28722                           ;incstack = 0
 28723  00F064  CFC4 F089          	movff	4036,adc_read_temperature@adc_result	;volatile
 28724  00F068  0100               	movlb	0	; () banked
 28725  00F06A  6B8A               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 28726                           
 28727                           ; BSR set to: 0
 28728                           ;adc.c: 51: adc_result <<= 8;
 28729  00F06C  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 28730  00F06E  6F8A               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 28731  00F070  6B89               	clrf	adc_read_temperature@adc_result& (0+255),b
 28732                           
 28733                           ; BSR set to: 0
 28734                           ;adc.c: 52: adc_result |= ADRESL;
 28735  00F072  50C3               	movf	4035,w,c	;volatile
 28736  00F074  1389               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 28737                           
 28738                           ; BSR set to: 0
 28739                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 28740  00F076  0102               	movlb	2	; () banked
 28741  00F078  511F               	movf	_params& (0+255),w,b
 28742  00F07A  0D02               	mullw	2
 28743  00F07C  0E20               	movlw	low (_params+1)
 28744  00F07E  24F3               	addwf	prodl,w,c
 28745  00F080  6ED9               	movwf	fsr2l,c
 28746  00F082  0E02               	movlw	high (_params+1)
 28747  00F084  20F4               	addwfc	prodh,w,c
 28748  00F086  6EDA               	movwf	fsr2h,c
 28749  00F088  0100               	movlb	0	; () banked
 28750  00F08A  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 28751  00F08C  26DE               	addwf	postinc2,f,c
 28752  00F08E  518A               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 28753  00F090  22DD               	addwfc	postdec2,f,c
 28754                           
 28755                           ; BSR set to: 0
 28756                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 28757  00F092  0102               	movlb	2	; () banked
 28758  00F094  511F               	movf	_params& (0+255),w,b
 28759  00F096  0D01               	mullw	1
 28760  00F098  0E24               	movlw	low (_params+5)
 28761  00F09A  24F3               	addwf	prodl,w,c
 28762  00F09C  6ED9               	movwf	fsr2l,c
 28763  00F09E  0E02               	movlw	high (_params+5)
 28764  00F0A0  20F4               	addwfc	prodh,w,c
 28765  00F0A2  6EDA               	movwf	fsr2h,c
 28766  00F0A4  2ADF               	incf	indf2,f,c
 28767                           
 28768                           ; BSR set to: 2
 28769                           ;adc.c: 59: ADCON0bits.GO = 1;
 28770  00F0A6  82C2               	bsf	4034,1,c	;volatile
 28771                           
 28772                           ; BSR set to: 2
 28773                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 28774  00F0A8  511F               	movf	_params& (0+255),w,b
 28775  00F0AA  0D01               	mullw	1
 28776  00F0AC  0E24               	movlw	low (_params+5)
 28777  00F0AE  24F3               	addwf	prodl,w,c
 28778  00F0B0  6ED9               	movwf	fsr2l,c
 28779  00F0B2  0E02               	movlw	high (_params+5)
 28780  00F0B4  20F4               	addwfc	prodh,w,c
 28781  00F0B6  6EDA               	movwf	fsr2h,c
 28782  00F0B8  0E08               	movlw	8
 28783  00F0BA  18DE               	xorwf	postinc2,w,c
 28784  00F0BC  A4D8               	btfss	status,2,c
 28785  00F0BE  D0AF               	goto	l2859
 28786                           
 28787                           ; BSR set to: 2
 28788                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 28789  00F0C0  511F               	movf	_params& (0+255),w,b
 28790  00F0C2  0D02               	mullw	2
 28791  00F0C4  0E20               	movlw	low (_params+1)
 28792  00F0C6  24F3               	addwf	prodl,w,c
 28793  00F0C8  6ED9               	movwf	fsr2l,c
 28794  00F0CA  0E02               	movlw	high (_params+1)
 28795  00F0CC  20F4               	addwfc	prodh,w,c
 28796  00F0CE  6EDA               	movwf	fsr2h,c
 28797  00F0D0  CFDE F087          	movff	postinc2,??_adc_read_temperature
 28798  00F0D4  CFDD F088          	movff	postdec2,??_adc_read_temperature+1
 28799  00F0D8  C087  F060         	movff	??_adc_read_temperature,___xxtofl@val
 28800  00F0DC  C088  F061         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 28801  00F0E0  0100               	movlb	0	; () banked
 28802  00F0E2  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 28803  00F0E4  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 28804  00F0E6  0E00               	movlw	0
 28805  00F0E8  EC8B  F07F         	call	___xxtofl
 28806  00F0EC  C060  F06E         	movff	?___xxtofl,___flneg@f1
 28807  00F0F0  C061  F06F         	movff	?___xxtofl+1,___flneg@f1+1
 28808  00F0F4  C062  F070         	movff	?___xxtofl+2,___flneg@f1+2
 28809  00F0F8  C063  F071         	movff	?___xxtofl+3,___flneg@f1+3
 28810  00F0FC  EC82  F0A8         	call	___flneg	;wreg free
 28811  00F100  C06E  F072         	movff	?___flneg,___fladd@b
 28812  00F104  C06F  F073         	movff	?___flneg+1,___fladd@b+1
 28813  00F108  C070  F074         	movff	?___flneg+2,___fladd@b+2
 28814  00F10C  C071  F075         	movff	?___flneg+3,___fladd@b+3
 28815  00F110  0E00               	movlw	0
 28816  00F112  0100               	movlb	0	; () banked
 28817  00F114  6F76               	movwf	___fladd@a& (0+255),b
 28818  00F116  0E90               	movlw	144
 28819  00F118  6F77               	movwf	(___fladd@a+1)& (0+255),b
 28820  00F11A  0EA4               	movlw	164
 28821  00F11C  6F78               	movwf	(___fladd@a+2)& (0+255),b
 28822  00F11E  0E46               	movlw	70
 28823  00F120  6F79               	movwf	(___fladd@a+3)& (0+255),b
 28824  00F122  ECE1  F067         	call	___fladd	;wreg free
 28825  00F126  C072  F08B         	movff	?___fladd,adc_read_temperature@temperature
 28826  00F12A  C073  F08C         	movff	?___fladd+1,adc_read_temperature@temperature+1
 28827  00F12E  C074  F08D         	movff	?___fladd+2,adc_read_temperature@temperature+2
 28828  00F132  C075  F08E         	movff	?___fladd+3,adc_read_temperature@temperature+3
 28829                           
 28830                           ;adc.c: 68: temperature *= 0.7405;
 28831  00F136  C08B  F06E         	movff	adc_read_temperature@temperature,___flmul@b
 28832  00F13A  C08C  F06F         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 28833  00F13E  C08D  F070         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 28834  00F142  C08E  F071         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 28835  00F146  0E68               	movlw	104
 28836  00F148  0100               	movlb	0	; () banked
 28837  00F14A  6F72               	movwf	___flmul@a& (0+255),b
 28838  00F14C  0E91               	movlw	145
 28839  00F14E  6F73               	movwf	(___flmul@a+1)& (0+255),b
 28840  00F150  0E3D               	movlw	61
 28841  00F152  6F74               	movwf	(___flmul@a+2)& (0+255),b
 28842  00F154  0E3F               	movlw	63
 28843  00F156  6F75               	movwf	(___flmul@a+3)& (0+255),b
 28844  00F158  EC38  F066         	call	___flmul	;wreg free
 28845  00F15C  C06E  F08B         	movff	?___flmul,adc_read_temperature@temperature
 28846  00F160  C06F  F08C         	movff	?___flmul+1,adc_read_temperature@temperature+1
 28847  00F164  C070  F08D         	movff	?___flmul+2,adc_read_temperature@temperature+2
 28848  00F168  C071  F08E         	movff	?___flmul+3,adc_read_temperature@temperature+3
 28849                           
 28850                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 28851  00F16C  C08B  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 28852  00F170  C08C  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 28853  00F174  C08D  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 28854  00F178  C08E  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 28855  00F17C  ECE3  F08E         	call	___fltol	;wreg free
 28856  00F180  0102               	movlb	2	; () banked
 28857  00F182  511F               	movf	_params& (0+255),w,b
 28858  00F184  0D02               	mullw	2
 28859  00F186  0E98               	movlw	low (_os+39)
 28860  00F188  24F3               	addwf	prodl,w,c
 28861  00F18A  6ED9               	movwf	fsr2l,c
 28862  00F18C  0E01               	movlw	high (_os+39)
 28863  00F18E  20F4               	addwfc	prodh,w,c
 28864  00F190  6EDA               	movwf	fsr2h,c
 28865  00F192  0100               	movlb	0	; () banked
 28866  00F194  C060  FFDE         	movff	?___fltol,postinc2
 28867  00F198  C061  FFDD         	movff	?___fltol+1,postdec2
 28868                           
 28869                           ; BSR set to: 0
 28870                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 28871  00F19C  0102               	movlb	2	; () banked
 28872  00F19E  511F               	movf	_params& (0+255),w,b
 28873  00F1A0  0D02               	mullw	2
 28874  00F1A2  0E20               	movlw	low (_params+1)
 28875  00F1A4  24F3               	addwf	prodl,w,c
 28876  00F1A6  6ED9               	movwf	fsr2l,c
 28877  00F1A8  0E02               	movlw	high (_params+1)
 28878  00F1AA  20F4               	addwfc	prodh,w,c
 28879  00F1AC  6EDA               	movwf	fsr2h,c
 28880  00F1AE  0E00               	movlw	0
 28881  00F1B0  6EDE               	movwf	postinc2,c
 28882  00F1B2  0E00               	movlw	0
 28883  00F1B4  6EDD               	movwf	postdec2,c
 28884                           
 28885                           ; BSR set to: 2
 28886                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 28887  00F1B6  511F               	movf	_params& (0+255),w,b
 28888  00F1B8  0D01               	mullw	1
 28889  00F1BA  0E24               	movlw	low (_params+5)
 28890  00F1BC  24F3               	addwf	prodl,w,c
 28891  00F1BE  6ED9               	movwf	fsr2l,c
 28892  00F1C0  0E02               	movlw	high (_params+5)
 28893  00F1C2  20F4               	addwfc	prodh,w,c
 28894  00F1C4  6EDA               	movwf	fsr2h,c
 28895  00F1C6  0E00               	movlw	0
 28896  00F1C8  6EDF               	movwf	indf2,c
 28897                           
 28898                           ; BSR set to: 2
 28899                           ;adc.c: 78: if(os.fan_on)
 28900  00F1CA  0101               	movlb	1	; () banked
 28901  00F1CC  519F               	movf	(_os+46)& (0+255),w,b	;volatile
 28902  00F1CE  B4D8               	btfsc	status,2,c
 28903  00F1D0  D013               	goto	l2856
 28904                           
 28905                           ; BSR set to: 1
 28906                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 28907  00F1D2  BF99               	btfsc	(_os+40)& (0+255),7,b	;volatile
 28908  00F1D4  D006               	goto	u18000
 28909  00F1D6  0E60               	movlw	96
 28910  00F1D8  5D98               	subwf	(_os+39)& (0+255),w,b	;volatile
 28911  00F1DA  0E09               	movlw	9
 28912  00F1DC  5999               	subwfb	(_os+40)& (0+255),w,b	;volatile
 28913  00F1DE  B0D8               	btfsc	status,0,c
 28914  00F1E0  D01E               	goto	l2859
 28915  00F1E2                     u18000:
 28916                           
 28917                           ; BSR set to: 1
 28918  00F1E2  BF9B               	btfsc	(_os+42)& (0+255),7,b	;volatile
 28919  00F1E4  D006               	goto	u18010
 28920  00F1E6  0E60               	movlw	96
 28921  00F1E8  5D9A               	subwf	(_os+41)& (0+255),w,b	;volatile
 28922  00F1EA  0E09               	movlw	9
 28923  00F1EC  599B               	subwfb	(_os+42)& (0+255),w,b	;volatile
 28924  00F1EE  B0D8               	btfsc	status,0,c
 28925  00F1F0  D016               	goto	l2859
 28926  00F1F2                     u18010:
 28927                           
 28928                           ; BSR set to: 1
 28929                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 28930  00F1F2  9C8B               	bcf	3979,6,c	;volatile
 28931                           
 28932                           ; BSR set to: 1
 28933                           ;adc.c: 83: os.fan_on = 0;
 28934  00F1F4  0E00               	movlw	0
 28935  00F1F6  D012               	goto	L39
 28936  00F1F8                     l2856:
 28937                           
 28938                           ; BSR set to: 1
 28939                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 28940                           
 28941                           ; BSR set to: 1
 28942  00F1F8  BF99               	btfsc	(_os+40)& (0+255),7,b	;volatile
 28943  00F1FA  D006               	goto	u18020
 28944  00F1FC  0EC5               	movlw	197
 28945  00F1FE  5D98               	subwf	(_os+39)& (0+255),w,b	;volatile
 28946  00F200  0E09               	movlw	9
 28947  00F202  5999               	subwfb	(_os+40)& (0+255),w,b	;volatile
 28948  00F204  B0D8               	btfsc	status,0,c
 28949  00F206  D008               	goto	u18030
 28950  00F208                     u18020:
 28951                           
 28952                           ; BSR set to: 1
 28953  00F208  BF9B               	btfsc	(_os+42)& (0+255),7,b	;volatile
 28954  00F20A  D009               	goto	l2859
 28955  00F20C  0EC5               	movlw	197
 28956  00F20E  5D9A               	subwf	(_os+41)& (0+255),w,b	;volatile
 28957  00F210  0E09               	movlw	9
 28958  00F212  599B               	subwfb	(_os+42)& (0+255),w,b	;volatile
 28959  00F214  A0D8               	btfss	status,0,c
 28960  00F216  D003               	goto	l2859
 28961  00F218                     u18030:
 28962                           
 28963                           ; BSR set to: 1
 28964                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 28965  00F218  8C8B               	bsf	3979,6,c	;volatile
 28966                           
 28967                           ; BSR set to: 1
 28968                           ;adc.c: 91: os.fan_on = 1;
 28969  00F21A  0E01               	movlw	1
 28970  00F21C                     L39:
 28971  00F21C  6F9F               	movwf	(_os+46)& (0+255),b	;volatile
 28972  00F21E                     l2859:
 28973                           
 28974                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 28975                           
 28976                           ; BSR set to: 1
 28977                           
 28978                           ; BSR set to: 1
 28979  00F21E  0102               	movlb	2	; () banked
 28980  00F220  511F               	movf	_params& (0+255),w,b
 28981  00F222  A4D8               	btfss	status,2,c
 28982  00F224  D007               	goto	l2862
 28983                           
 28984                           ; BSR set to: 2
 28985                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 28986  00F226  50C2               	movf	4034,w,c	;volatile
 28987  00F228  0BC3               	andlw	-61
 28988  00F22A  092C               	iorlw	44
 28989  00F22C  6EC2               	movwf	4034,c	;volatile
 28990                           
 28991                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 28992  00F22E  0E01               	movlw	1
 28993  00F230  6F1F               	movwf	_params& (0+255),b
 28994                           
 28995                           ;adc.c: 101: }
 28996  00F232  0012               	return	
 28997  00F234                     l2862:
 28998                           
 28999                           ; BSR set to: 2
 29000                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 29001                           
 29002                           ; BSR set to: 2
 29003  00F234  50C2               	movf	4034,w,c	;volatile
 29004  00F236  0BC3               	andlw	-61
 29005  00F238  0924               	iorlw	36
 29006  00F23A  6EC2               	movwf	4034,c	;volatile
 29007                           
 29008                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 29009  00F23C  0E00               	movlw	0
 29010  00F23E  6F1F               	movwf	_params& (0+255),b
 29011  00F240  0012               	return	
 29012  00F242                     __end_of_adc_read_temperature:
 29013                           	opt stack 0
 29014                           tblptru	equ	0xFF8
 29015                           tblptrh	equ	0xFF7
 29016                           tblptrl	equ	0xFF6
 29017                           tablat	equ	0xFF5
 29018                           prodh	equ	0xFF4
 29019                           prodl	equ	0xFF3
 29020                           intcon	equ	0xFF2
 29021                           postinc0	equ	0xFEE
 29022                           wreg	equ	0xFE8
 29023                           indf1	equ	0xFE7
 29024                           postinc1	equ	0xFE6
 29025                           postdec1	equ	0xFE5
 29026                           plusw1	equ	0xFE3
 29027                           fsr1h	equ	0xFE2
 29028                           fsr1l	equ	0xFE1
 29029                           indf2	equ	0xFDF
 29030                           postinc2	equ	0xFDE
 29031                           postdec2	equ	0xFDD
 29032                           plusw2	equ	0xFDB
 29033                           fsr2h	equ	0xFDA
 29034                           fsr2l	equ	0xFD9
 29035                           status	equ	0xFD8
 29036                           
 29037 ;; *************** function ___flneg *****************
 29038 ;; Defined at:
 29039 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 29040 ;; Parameters:    Size  Location     Type
 29041 ;;  f1              4   14[BANK0 ] void 
 29042 ;; Auto vars:     Size  Location     Type
 29043 ;;		None
 29044 ;; Return value:  Size  Location     Type
 29045 ;;                  4   14[BANK0 ] void 
 29046 ;; Registers used:
 29047 ;;		wreg, status,2, status,0
 29048 ;; Tracked objects:
 29049 ;;		On entry : 0/0
 29050 ;;		On exit  : 0/0
 29051 ;;		Unchanged: 0/0
 29052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29053 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29056 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29057 ;;Total ram usage:        4 bytes
 29058 ;; Hardware stack levels used:    1
 29059 ;; Hardware stack levels required when called:   10
 29060 ;; This function calls:
 29061 ;;		Nothing
 29062 ;; This function is called by:
 29063 ;;		_adc_read_temperature
 29064 ;; This function uses a non-reentrant model
 29065 ;;
 29066                           
 29067                           	psect	text117
 29068  015104                     __ptext117:
 29069                           	opt stack 0
 29070  015104                     ___flneg:
 29071                           	opt stack 19
 29072                           
 29073                           ; BSR set to: 2
 29074                           ;incstack = 0
 29075  015104  0100               	movlb	0	; () banked
 29076  015106  516E               	movf	___flneg@f1& (0+255),w,b
 29077  015108  116F               	iorwf	(___flneg@f1+1)& (0+255),w,b
 29078  01510A  1170               	iorwf	(___flneg@f1+2)& (0+255),w,b
 29079  01510C  1171               	iorwf	(___flneg@f1+3)& (0+255),w,b
 29080  01510E  B4D8               	btfsc	status,2,c
 29081  015110  D008               	goto	l3255
 29082                           
 29083                           ; BSR set to: 0
 29084  015112  0E00               	movlw	0
 29085  015114  1B6E               	xorwf	___flneg@f1& (0+255),f,b
 29086  015116  0E00               	movlw	0
 29087  015118  1B6F               	xorwf	(___flneg@f1+1)& (0+255),f,b
 29088  01511A  0E00               	movlw	0
 29089  01511C  1B70               	xorwf	(___flneg@f1+2)& (0+255),f,b
 29090  01511E  0E80               	movlw	128
 29091  015120  1B71               	xorwf	(___flneg@f1+3)& (0+255),f,b
 29092  015122                     l3255:
 29093                           
 29094                           ; BSR set to: 0
 29095                           
 29096                           ; BSR set to: 0
 29097  015122  C06E  F06E         	movff	___flneg@f1,?___flneg
 29098  015126  C06F  F06F         	movff	___flneg@f1+1,?___flneg+1
 29099  01512A  C070  F070         	movff	___flneg@f1+2,?___flneg+2
 29100  01512E  C071  F071         	movff	___flneg@f1+3,?___flneg+3
 29101  015132  0012               	return	
 29102  015134                     __end_of___flneg:
 29103                           	opt stack 0
 29104                           tblptru	equ	0xFF8
 29105                           tblptrh	equ	0xFF7
 29106                           tblptrl	equ	0xFF6
 29107                           tablat	equ	0xFF5
 29108                           prodh	equ	0xFF4
 29109                           prodl	equ	0xFF3
 29110                           intcon	equ	0xFF2
 29111                           postinc0	equ	0xFEE
 29112                           wreg	equ	0xFE8
 29113                           indf1	equ	0xFE7
 29114                           postinc1	equ	0xFE6
 29115                           postdec1	equ	0xFE5
 29116                           plusw1	equ	0xFE3
 29117                           fsr1h	equ	0xFE2
 29118                           fsr1l	equ	0xFE1
 29119                           indf2	equ	0xFDF
 29120                           postinc2	equ	0xFDE
 29121                           postdec2	equ	0xFDD
 29122                           plusw2	equ	0xFDB
 29123                           fsr2h	equ	0xFDA
 29124                           fsr2l	equ	0xFD9
 29125                           status	equ	0xFD8
 29126                           
 29127 ;; *************** function ___fladd *****************
 29128 ;; Defined at:
 29129 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 29130 ;; Parameters:    Size  Location     Type
 29131 ;;  b               4   18[BANK0 ] void 
 29132 ;;  a               4   22[BANK0 ] void 
 29133 ;; Auto vars:     Size  Location     Type
 29134 ;;  grs             1   37[BANK0 ] unsigned char 
 29135 ;;  bexp            1   36[BANK0 ] unsigned char 
 29136 ;;  aexp            1   35[BANK0 ] unsigned char 
 29137 ;;  signs           1   34[BANK0 ] unsigned char 
 29138 ;; Return value:  Size  Location     Type
 29139 ;;                  4   18[BANK0 ] unsigned char 
 29140 ;; Registers used:
 29141 ;;		wreg, status,2, status,0
 29142 ;; Tracked objects:
 29143 ;;		On entry : 0/0
 29144 ;;		On exit  : 0/0
 29145 ;;		Unchanged: 0/0
 29146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29147 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29148 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29149 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29150 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29151 ;;Total ram usage:       20 bytes
 29152 ;; Hardware stack levels used:    1
 29153 ;; Hardware stack levels required when called:   10
 29154 ;; This function calls:
 29155 ;;		Nothing
 29156 ;; This function is called by:
 29157 ;;		_motor_divide_jump_to_nearest
 29158 ;;		_adc_read_temperature
 29159 ;; This function uses a non-reentrant model
 29160 ;;
 29161                           
 29162                           	psect	text118
 29163  00CFC2                     __ptext118:
 29164                           	opt stack 0
 29165  00CFC2                     ___fladd:
 29166                           	opt stack 18
 29167                           
 29168                           ; BSR set to: 0
 29169                           ;incstack = 0
 29170  00CFC2  0100               	movlb	0	; () banked
 29171  00CFC4  5175               	movf	(___fladd@b+3)& (0+255),w,b
 29172  00CFC6  0B80               	andlw	128
 29173  00CFC8  6F82               	movwf	___fladd@signs& (0+255),b
 29174  00CFCA  5175               	movf	(___fladd@b+3)& (0+255),w,b
 29175  00CFCC  2575               	addwf	(___fladd@b+3)& (0+255),w,b
 29176  00CFCE  6F84               	movwf	___fladd@bexp& (0+255),b
 29177                           
 29178                           ; BSR set to: 0
 29179  00CFD0  BF74               	btfsc	(___fladd@b+2)& (0+255),7,b
 29180                           
 29181                           ; BSR set to: 0
 29182  00CFD2  8184               	bsf	___fladd@bexp& (0+255),0,b
 29183                           
 29184                           ; BSR set to: 0
 29185                           
 29186                           ; BSR set to: 0
 29187  00CFD4  5184               	movf	___fladd@bexp& (0+255),w,b
 29188  00CFD6  B4D8               	btfsc	status,2,c
 29189  00CFD8  D00D               	goto	l3495
 29190                           
 29191                           ; BSR set to: 0
 29192  00CFDA  2984               	incf	___fladd@bexp& (0+255),w,b
 29193  00CFDC  A4D8               	btfss	status,2,c
 29194  00CFDE  D008               	goto	l3496
 29195                           
 29196                           ; BSR set to: 0
 29197  00CFE0  0E00               	movlw	0
 29198  00CFE2  6F72               	movwf	___fladd@b& (0+255),b
 29199  00CFE4  0E00               	movlw	0
 29200  00CFE6  6F73               	movwf	(___fladd@b+1)& (0+255),b
 29201  00CFE8  0E00               	movlw	0
 29202  00CFEA  6F74               	movwf	(___fladd@b+2)& (0+255),b
 29203  00CFEC  0E00               	movlw	0
 29204  00CFEE  6F75               	movwf	(___fladd@b+3)& (0+255),b
 29205  00CFF0                     l3496:
 29206                           
 29207                           ; BSR set to: 0
 29208                           
 29209                           ; BSR set to: 0
 29210  00CFF0  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 29211  00CFF2  D006               	goto	L40
 29212  00CFF4                     l3495:
 29213                           
 29214                           ; BSR set to: 0
 29215                           
 29216                           ; BSR set to: 0
 29217  00CFF4  0E00               	movlw	0
 29218  00CFF6  6F72               	movwf	___fladd@b& (0+255),b
 29219  00CFF8  0E00               	movlw	0
 29220  00CFFA  6F73               	movwf	(___fladd@b+1)& (0+255),b
 29221  00CFFC  0E00               	movlw	0
 29222  00CFFE  6F74               	movwf	(___fladd@b+2)& (0+255),b
 29223  00D000                     L40:
 29224  00D000  0E00               	movlw	0
 29225  00D002  6F75               	movwf	(___fladd@b+3)& (0+255),b
 29226                           
 29227                           ; BSR set to: 0
 29228                           
 29229                           ; BSR set to: 0
 29230  00D004  5179               	movf	(___fladd@a+3)& (0+255),w,b
 29231  00D006  0B80               	andlw	128
 29232  00D008  6F83               	movwf	___fladd@aexp& (0+255),b
 29233                           
 29234                           ; BSR set to: 0
 29235  00D00A  5182               	movf	___fladd@signs& (0+255),w,b
 29236  00D00C  1983               	xorwf	___fladd@aexp& (0+255),w,b
 29237  00D00E  A4D8               	btfss	status,2,c
 29238                           
 29239                           ; BSR set to: 0
 29240  00D010  8D82               	bsf	___fladd@signs& (0+255),6,b
 29241                           
 29242                           ; BSR set to: 0
 29243                           
 29244                           ; BSR set to: 0
 29245  00D012  5179               	movf	(___fladd@a+3)& (0+255),w,b
 29246  00D014  2579               	addwf	(___fladd@a+3)& (0+255),w,b
 29247  00D016  6F83               	movwf	___fladd@aexp& (0+255),b
 29248                           
 29249                           ; BSR set to: 0
 29250  00D018  BF78               	btfsc	(___fladd@a+2)& (0+255),7,b
 29251                           
 29252                           ; BSR set to: 0
 29253  00D01A  8183               	bsf	___fladd@aexp& (0+255),0,b
 29254                           
 29255                           ; BSR set to: 0
 29256                           
 29257                           ; BSR set to: 0
 29258  00D01C  5183               	movf	___fladd@aexp& (0+255),w,b
 29259  00D01E  B4D8               	btfsc	status,2,c
 29260  00D020  D00D               	goto	l3500
 29261                           
 29262                           ; BSR set to: 0
 29263  00D022  2983               	incf	___fladd@aexp& (0+255),w,b
 29264  00D024  A4D8               	btfss	status,2,c
 29265  00D026  D008               	goto	l3501
 29266                           
 29267                           ; BSR set to: 0
 29268  00D028  0E00               	movlw	0
 29269  00D02A  6F76               	movwf	___fladd@a& (0+255),b
 29270  00D02C  0E00               	movlw	0
 29271  00D02E  6F77               	movwf	(___fladd@a+1)& (0+255),b
 29272  00D030  0E00               	movlw	0
 29273  00D032  6F78               	movwf	(___fladd@a+2)& (0+255),b
 29274  00D034  0E00               	movlw	0
 29275  00D036  6F79               	movwf	(___fladd@a+3)& (0+255),b
 29276  00D038                     l3501:
 29277                           
 29278                           ; BSR set to: 0
 29279                           
 29280                           ; BSR set to: 0
 29281  00D038  8F78               	bsf	(___fladd@a+2)& (0+255),7,b
 29282  00D03A  D006               	goto	L41
 29283  00D03C                     l3500:
 29284                           
 29285                           ; BSR set to: 0
 29286                           
 29287                           ; BSR set to: 0
 29288  00D03C  0E00               	movlw	0
 29289  00D03E  6F76               	movwf	___fladd@a& (0+255),b
 29290  00D040  0E00               	movlw	0
 29291  00D042  6F77               	movwf	(___fladd@a+1)& (0+255),b
 29292  00D044  0E00               	movlw	0
 29293  00D046  6F78               	movwf	(___fladd@a+2)& (0+255),b
 29294  00D048                     L41:
 29295  00D048  0E00               	movlw	0
 29296  00D04A  6F79               	movwf	(___fladd@a+3)& (0+255),b
 29297                           
 29298                           ; BSR set to: 0
 29299                           
 29300                           ; BSR set to: 0
 29301  00D04C  5184               	movf	___fladd@bexp& (0+255),w,b
 29302  00D04E  5D83               	subwf	___fladd@aexp& (0+255),w,b
 29303  00D050  B0D8               	btfsc	status,0,c
 29304  00D052  D022               	goto	l3503
 29305                           
 29306                           ; BSR set to: 0
 29307  00D054  AD82               	btfss	___fladd@signs& (0+255),6,b
 29308  00D056  D002               	goto	l3504
 29309                           
 29310                           ; BSR set to: 0
 29311  00D058  0E80               	movlw	128
 29312  00D05A  1B82               	xorwf	___fladd@signs& (0+255),f,b
 29313  00D05C                     l3504:
 29314                           
 29315                           ; BSR set to: 0
 29316                           
 29317                           ; BSR set to: 0
 29318  00D05C  C084  F085         	movff	___fladd@bexp,___fladd@grs
 29319                           
 29320                           ; BSR set to: 0
 29321  00D060  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 29322                           
 29323                           ; BSR set to: 0
 29324  00D064  C085  F083         	movff	___fladd@grs,___fladd@aexp
 29325                           
 29326                           ; BSR set to: 0
 29327  00D068  C072  F085         	movff	___fladd@b,___fladd@grs
 29328                           
 29329                           ; BSR set to: 0
 29330  00D06C  C076  F072         	movff	___fladd@a,___fladd@b
 29331                           
 29332                           ; BSR set to: 0
 29333  00D070  C085  F076         	movff	___fladd@grs,___fladd@a
 29334                           
 29335                           ; BSR set to: 0
 29336  00D074  C073  F085         	movff	___fladd@b+1,___fladd@grs
 29337                           
 29338                           ; BSR set to: 0
 29339  00D078  C077  F073         	movff	___fladd@a+1,___fladd@b+1
 29340                           
 29341                           ; BSR set to: 0
 29342  00D07C  C085  F077         	movff	___fladd@grs,___fladd@a+1
 29343                           
 29344                           ; BSR set to: 0
 29345  00D080  C074  F085         	movff	___fladd@b+2,___fladd@grs
 29346                           
 29347                           ; BSR set to: 0
 29348  00D084  C078  F074         	movff	___fladd@a+2,___fladd@b+2
 29349                           
 29350                           ; BSR set to: 0
 29351  00D088  C085  F078         	movff	___fladd@grs,___fladd@a+2
 29352                           
 29353                           ; BSR set to: 0
 29354  00D08C  C075  F085         	movff	___fladd@b+3,___fladd@grs
 29355                           
 29356                           ; BSR set to: 0
 29357  00D090  C079  F075         	movff	___fladd@a+3,___fladd@b+3
 29358                           
 29359                           ; BSR set to: 0
 29360  00D094  C085  F079         	movff	___fladd@grs,___fladd@a+3
 29361  00D098                     l3503:
 29362                           
 29363                           ; BSR set to: 0
 29364                           
 29365                           ; BSR set to: 0
 29366  00D098  0E00               	movlw	0
 29367  00D09A  6F85               	movwf	___fladd@grs& (0+255),b
 29368                           
 29369                           ; BSR set to: 0
 29370  00D09C  5184               	movf	___fladd@bexp& (0+255),w,b
 29371  00D09E  6F7A               	movwf	??___fladd& (0+255),b
 29372  00D0A0  6B7B               	clrf	(??___fladd+1)& (0+255),b
 29373  00D0A2  1F7A               	comf	??___fladd& (0+255),f,b
 29374  00D0A4  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 29375  00D0A6  4B7A               	infsnz	??___fladd& (0+255),f,b
 29376  00D0A8  2B7B               	incf	(??___fladd+1)& (0+255),f,b
 29377  00D0AA  5183               	movf	___fladd@aexp& (0+255),w,b
 29378  00D0AC  6F7C               	movwf	(??___fladd+2)& (0+255),b
 29379  00D0AE  6B7D               	clrf	(??___fladd+3)& (0+255),b
 29380  00D0B0  517A               	movf	??___fladd& (0+255),w,b
 29381  00D0B2  277C               	addwf	(??___fladd+2)& (0+255),f,b
 29382  00D0B4  517B               	movf	(??___fladd+1)& (0+255),w,b
 29383  00D0B6  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 29384  00D0B8  BF7D               	btfsc	(??___fladd+3)& (0+255),7,b
 29385  00D0BA  D02C               	goto	l3507
 29386  00D0BC  517D               	movf	(??___fladd+3)& (0+255),w,b
 29387  00D0BE  E104               	bnz	u15240
 29388  00D0C0  0E1A               	movlw	26
 29389  00D0C2  5D7C               	subwf	(??___fladd+2)& (0+255),w,b
 29390  00D0C4  A0D8               	btfss	status,0,c
 29391  00D0C6  D026               	goto	l3507
 29392  00D0C8                     u15240:
 29393                           
 29394                           ; BSR set to: 0
 29395  00D0C8  5172               	movf	___fladd@b& (0+255),w,b
 29396  00D0CA  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 29397  00D0CC  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 29398  00D0CE  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 29399  00D0D0  B4D8               	btfsc	status,2,c
 29400  00D0D2  D002               	goto	u15250
 29401  00D0D4  0E01               	movlw	1
 29402  00D0D6  D001               	goto	u15260
 29403  00D0D8                     u15250:
 29404  00D0D8  0E00               	movlw	0
 29405  00D0DA                     u15260:
 29406  00D0DA  6F85               	movwf	___fladd@grs& (0+255),b
 29407                           
 29408                           ; BSR set to: 0
 29409  00D0DC  0E00               	movlw	0
 29410  00D0DE  6F72               	movwf	___fladd@b& (0+255),b
 29411  00D0E0  0E00               	movlw	0
 29412  00D0E2  6F73               	movwf	(___fladd@b+1)& (0+255),b
 29413  00D0E4  0E00               	movlw	0
 29414  00D0E6  6F74               	movwf	(___fladd@b+2)& (0+255),b
 29415  00D0E8  0E00               	movlw	0
 29416  00D0EA  6F75               	movwf	(___fladd@b+3)& (0+255),b
 29417                           
 29418                           ; BSR set to: 0
 29419  00D0EC  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 29420  00D0F0  D015               	goto	u15290
 29421  00D0F2                     l3508:
 29422                           
 29423                           ; BSR set to: 0
 29424  00D0F2  A185               	btfss	___fladd@grs& (0+255),0,b
 29425  00D0F4  D005               	goto	l3509
 29426                           
 29427                           ; BSR set to: 0
 29428  00D0F6  90D8               	bcf	status,0,c
 29429  00D0F8  3185               	rrcf	___fladd@grs& (0+255),w,b
 29430  00D0FA  0901               	iorlw	1
 29431  00D0FC  6F85               	movwf	___fladd@grs& (0+255),b
 29432  00D0FE  D002               	goto	l3510
 29433  00D100                     l3509:
 29434                           
 29435                           ; BSR set to: 0
 29436                           
 29437                           ; BSR set to: 0
 29438  00D100  90D8               	bcf	status,0,c
 29439  00D102  3385               	rrcf	___fladd@grs& (0+255),f,b
 29440  00D104                     l3510:
 29441                           
 29442                           ; BSR set to: 0
 29443                           
 29444                           ; BSR set to: 0
 29445  00D104  B172               	btfsc	___fladd@b& (0+255),0,b
 29446                           
 29447                           ; BSR set to: 0
 29448  00D106  8F85               	bsf	___fladd@grs& (0+255),7,b
 29449                           
 29450                           ; BSR set to: 0
 29451                           
 29452                           ; BSR set to: 0
 29453  00D108  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 29454  00D10A  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 29455  00D10C  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 29456  00D10E  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 29457  00D110  3372               	rrcf	___fladd@b& (0+255),f,b
 29458                           
 29459                           ; BSR set to: 0
 29460  00D112  2B84               	incf	___fladd@bexp& (0+255),f,b
 29461  00D114                     l3507:
 29462                           
 29463                           ; BSR set to: 0
 29464  00D114  5183               	movf	___fladd@aexp& (0+255),w,b
 29465  00D116  5D84               	subwf	___fladd@bexp& (0+255),w,b
 29466  00D118  A0D8               	btfss	status,0,c
 29467  00D11A  D7EB               	goto	l3508
 29468  00D11C                     u15290:
 29469                           
 29470                           ; BSR set to: 0
 29471                           
 29472                           ; BSR set to: 0
 29473  00D11C  BD82               	btfsc	___fladd@signs& (0+255),6,b
 29474  00D11E  D028               	goto	l3513
 29475                           
 29476                           ; BSR set to: 0
 29477  00D120  5184               	movf	___fladd@bexp& (0+255),w,b
 29478  00D122  A4D8               	btfss	status,2,c
 29479  00D124  D009               	goto	l3514
 29480                           
 29481                           ; BSR set to: 0
 29482  00D126  0E00               	movlw	0
 29483  00D128  6F72               	movwf	?___fladd& (0+255),b
 29484  00D12A  0E00               	movlw	0
 29485  00D12C  6F73               	movwf	(?___fladd+1)& (0+255),b
 29486  00D12E  0E00               	movlw	0
 29487  00D130  6F74               	movwf	(?___fladd+2)& (0+255),b
 29488  00D132  0E00               	movlw	0
 29489  00D134  6F75               	movwf	(?___fladd+3)& (0+255),b
 29490                           
 29491                           ; BSR set to: 0
 29492  00D136  0012               	return	
 29493  00D138                     l3514:
 29494                           
 29495                           ; BSR set to: 0
 29496                           
 29497                           ; BSR set to: 0
 29498  00D138  5176               	movf	___fladd@a& (0+255),w,b
 29499  00D13A  2772               	addwf	___fladd@b& (0+255),f,b
 29500  00D13C  5177               	movf	(___fladd@a+1)& (0+255),w,b
 29501  00D13E  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 29502  00D140  5178               	movf	(___fladd@a+2)& (0+255),w,b
 29503  00D142  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 29504  00D144  5179               	movf	(___fladd@a+3)& (0+255),w,b
 29505  00D146  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 29506                           
 29507                           ; BSR set to: 0
 29508  00D148  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 29509  00D14A  D082               	goto	u15420
 29510                           
 29511                           ; BSR set to: 0
 29512  00D14C  A185               	btfss	___fladd@grs& (0+255),0,b
 29513  00D14E  D005               	goto	l3517
 29514                           
 29515                           ; BSR set to: 0
 29516  00D150  90D8               	bcf	status,0,c
 29517  00D152  3185               	rrcf	___fladd@grs& (0+255),w,b
 29518  00D154  0901               	iorlw	1
 29519  00D156  6F85               	movwf	___fladd@grs& (0+255),b
 29520  00D158  D002               	goto	l3518
 29521  00D15A                     l3517:
 29522                           
 29523                           ; BSR set to: 0
 29524                           
 29525                           ; BSR set to: 0
 29526  00D15A  90D8               	bcf	status,0,c
 29527  00D15C  3385               	rrcf	___fladd@grs& (0+255),f,b
 29528  00D15E                     l3518:
 29529                           
 29530                           ; BSR set to: 0
 29531                           
 29532                           ; BSR set to: 0
 29533  00D15E  B172               	btfsc	___fladd@b& (0+255),0,b
 29534                           
 29535                           ; BSR set to: 0
 29536  00D160  8F85               	bsf	___fladd@grs& (0+255),7,b
 29537                           
 29538                           ; BSR set to: 0
 29539                           
 29540                           ; BSR set to: 0
 29541  00D162  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 29542  00D164  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 29543  00D166  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 29544  00D168  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 29545  00D16A  3372               	rrcf	___fladd@b& (0+255),f,b
 29546                           
 29547                           ; BSR set to: 0
 29548  00D16C  2B84               	incf	___fladd@bexp& (0+255),f,b
 29549                           
 29550                           ; BSR set to: 0
 29551  00D16E  D070               	goto	u15420
 29552  00D170                     l3513:
 29553                           
 29554                           ; BSR set to: 0
 29555                           
 29556                           ; BSR set to: 0
 29557  00D170  5176               	movf	___fladd@a& (0+255),w,b
 29558  00D172  5D72               	subwf	___fladd@b& (0+255),w,b
 29559  00D174  5177               	movf	(___fladd@a+1)& (0+255),w,b
 29560  00D176  5973               	subwfb	(___fladd@b+1)& (0+255),w,b
 29561  00D178  5178               	movf	(___fladd@a+2)& (0+255),w,b
 29562  00D17A  5974               	subwfb	(___fladd@b+2)& (0+255),w,b
 29563  00D17C  5175               	movf	(___fladd@b+3)& (0+255),w,b
 29564  00D17E  0A80               	xorlw	128
 29565  00D180  6F7A               	movwf	??___fladd& (0+255),b
 29566  00D182  5179               	movf	(___fladd@a+3)& (0+255),w,b
 29567  00D184  0A80               	xorlw	128
 29568  00D186  597A               	subwfb	??___fladd& (0+255),w,b
 29569  00D188  B0D8               	btfsc	status,0,c
 29570  00D18A  D036               	goto	l3521
 29571                           
 29572                           ; BSR set to: 0
 29573  00D18C  C072  F07A         	movff	___fladd@b,??___fladd
 29574  00D190  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 29575  00D194  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 29576  00D198  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 29577  00D19C  1F7A               	comf	??___fladd& (0+255),f,b
 29578  00D19E  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 29579  00D1A0  1F7C               	comf	(??___fladd+2)& (0+255),f,b
 29580  00D1A2  1F7D               	comf	(??___fladd+3)& (0+255),f,b
 29581  00D1A4  2B7A               	incf	??___fladd& (0+255),f,b
 29582  00D1A6  0E00               	movlw	0
 29583  00D1A8  237B               	addwfc	(??___fladd+1)& (0+255),f,b
 29584  00D1AA  237C               	addwfc	(??___fladd+2)& (0+255),f,b
 29585  00D1AC  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 29586  00D1AE  5176               	movf	___fladd@a& (0+255),w,b
 29587  00D1B0  257A               	addwf	??___fladd& (0+255),w,b
 29588  00D1B2  6F7E               	movwf	(??___fladd+4)& (0+255),b
 29589  00D1B4  5177               	movf	(___fladd@a+1)& (0+255),w,b
 29590  00D1B6  217B               	addwfc	(??___fladd+1)& (0+255),w,b
 29591  00D1B8  6F7F               	movwf	(??___fladd+5)& (0+255),b
 29592  00D1BA  5178               	movf	(___fladd@a+2)& (0+255),w,b
 29593  00D1BC  217C               	addwfc	(??___fladd+2)& (0+255),w,b
 29594  00D1BE  6F80               	movwf	(??___fladd+6)& (0+255),b
 29595  00D1C0  5179               	movf	(___fladd@a+3)& (0+255),w,b
 29596  00D1C2  217D               	addwfc	(??___fladd+3)& (0+255),w,b
 29597  00D1C4  6F81               	movwf	(??___fladd+7)& (0+255),b
 29598  00D1C6  0EFF               	movlw	255
 29599  00D1C8  257E               	addwf	(??___fladd+4)& (0+255),w,b
 29600  00D1CA  6F72               	movwf	___fladd@b& (0+255),b
 29601  00D1CC  0EFF               	movlw	255
 29602  00D1CE  217F               	addwfc	(??___fladd+5)& (0+255),w,b
 29603  00D1D0  6F73               	movwf	(___fladd@b+1)& (0+255),b
 29604  00D1D2  0EFF               	movlw	255
 29605  00D1D4  2180               	addwfc	(??___fladd+6)& (0+255),w,b
 29606  00D1D6  6F74               	movwf	(___fladd@b+2)& (0+255),b
 29607  00D1D8  0EFF               	movlw	255
 29608  00D1DA  2181               	addwfc	(??___fladd+7)& (0+255),w,b
 29609  00D1DC  6F75               	movwf	(___fladd@b+3)& (0+255),b
 29610  00D1DE  0E80               	movlw	128
 29611  00D1E0  1B82               	xorwf	___fladd@signs& (0+255),f,b
 29612                           
 29613                           ; BSR set to: 0
 29614  00D1E2  6D85               	negf	___fladd@grs& (0+255),b
 29615                           
 29616                           ; BSR set to: 0
 29617  00D1E4  5185               	movf	___fladd@grs& (0+255),w,b
 29618  00D1E6  A4D8               	btfss	status,2,c
 29619  00D1E8  D00F               	goto	l3523
 29620                           
 29621                           ; BSR set to: 0
 29622  00D1EA  0E01               	movlw	1
 29623  00D1EC  2772               	addwf	___fladd@b& (0+255),f,b
 29624  00D1EE  0E00               	movlw	0
 29625  00D1F0  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 29626  00D1F2  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 29627  00D1F4  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 29628                           
 29629                           ; BSR set to: 0
 29630  00D1F6  D008               	goto	l3523
 29631  00D1F8                     l3521:
 29632                           
 29633                           ; BSR set to: 0
 29634                           
 29635                           ; BSR set to: 0
 29636  00D1F8  5176               	movf	___fladd@a& (0+255),w,b
 29637  00D1FA  5F72               	subwf	___fladd@b& (0+255),f,b
 29638  00D1FC  5177               	movf	(___fladd@a+1)& (0+255),w,b
 29639  00D1FE  5B73               	subwfb	(___fladd@b+1)& (0+255),f,b
 29640  00D200  5178               	movf	(___fladd@a+2)& (0+255),w,b
 29641  00D202  5B74               	subwfb	(___fladd@b+2)& (0+255),f,b
 29642  00D204  5179               	movf	(___fladd@a+3)& (0+255),w,b
 29643  00D206  5B75               	subwfb	(___fladd@b+3)& (0+255),f,b
 29644  00D208                     l3523:
 29645                           
 29646                           ; BSR set to: 0
 29647  00D208  5172               	movf	___fladd@b& (0+255),w,b
 29648  00D20A  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 29649  00D20C  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 29650  00D20E  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 29651  00D210  A4D8               	btfss	status,2,c
 29652  00D212  D01C               	goto	l3530
 29653                           
 29654                           ; BSR set to: 0
 29655  00D214  5185               	movf	___fladd@grs& (0+255),w,b
 29656  00D216  A4D8               	btfss	status,2,c
 29657  00D218  D019               	goto	l3530
 29658                           
 29659                           ; BSR set to: 0
 29660  00D21A  0E00               	movlw	0
 29661  00D21C  6F72               	movwf	?___fladd& (0+255),b
 29662  00D21E  0E00               	movlw	0
 29663  00D220  6F73               	movwf	(?___fladd+1)& (0+255),b
 29664  00D222  0E00               	movlw	0
 29665  00D224  6F74               	movwf	(?___fladd+2)& (0+255),b
 29666  00D226  0E00               	movlw	0
 29667  00D228  6F75               	movwf	(?___fladd+3)& (0+255),b
 29668                           
 29669                           ; BSR set to: 0
 29670  00D22A  0012               	return	
 29671  00D22C                     
 29672                           ; BSR set to: 0
 29673                           
 29674                           ; BSR set to: 0
 29675  00D22C  90D8               	bcf	status,0,c
 29676  00D22E  3772               	rlcf	___fladd@b& (0+255),f,b
 29677  00D230  3773               	rlcf	(___fladd@b+1)& (0+255),f,b
 29678  00D232  3774               	rlcf	(___fladd@b+2)& (0+255),f,b
 29679  00D234  3775               	rlcf	(___fladd@b+3)& (0+255),f,b
 29680                           
 29681                           ; BSR set to: 0
 29682  00D236  BF85               	btfsc	___fladd@grs& (0+255),7,b
 29683                           
 29684                           ; BSR set to: 0
 29685  00D238  8172               	bsf	___fladd@b& (0+255),0,b
 29686                           
 29687                           ; BSR set to: 0
 29688                           
 29689                           ; BSR set to: 0
 29690  00D23A  A185               	btfss	___fladd@grs& (0+255),0,b
 29691  00D23C  D002               	goto	l3528
 29692                           
 29693                           ; BSR set to: 0
 29694  00D23E  80D8               	bsf	status,0,c
 29695  00D240  D001               	goto	L42
 29696  00D242                     l3528:
 29697                           
 29698                           ; BSR set to: 0
 29699                           
 29700                           ; BSR set to: 0
 29701  00D242  90D8               	bcf	status,0,c
 29702  00D244                     L42:
 29703  00D244  3785               	rlcf	___fladd@grs& (0+255),f,b
 29704                           
 29705                           ; BSR set to: 0
 29706                           
 29707                           ; BSR set to: 0
 29708  00D246  5184               	movf	___fladd@bexp& (0+255),w,b
 29709  00D248  A4D8               	btfss	status,2,c
 29710                           
 29711                           ; BSR set to: 0
 29712  00D24A  0784               	decf	___fladd@bexp& (0+255),f,b
 29713  00D24C                     l3530:
 29714                           
 29715                           ; BSR set to: 0
 29716                           
 29717                           ; BSR set to: 0
 29718                           
 29719                           ; BSR set to: 0
 29720  00D24C  AF74               	btfss	(___fladd@b+2)& (0+255),7,b
 29721  00D24E  D7EE               	goto	l3526
 29722  00D250                     u15420:
 29723                           
 29724                           ; BSR set to: 0
 29725                           
 29726                           ; BSR set to: 0
 29727                           
 29728                           ; BSR set to: 0
 29729  00D250  0E00               	movlw	0
 29730  00D252  6F83               	movwf	___fladd@aexp& (0+255),b
 29731                           
 29732                           ; BSR set to: 0
 29733  00D254  AF85               	btfss	___fladd@grs& (0+255),7,b
 29734  00D256  D00A               	goto	l3535
 29735                           
 29736                           ; BSR set to: 0
 29737  00D258  C085  F07A         	movff	___fladd@grs,??___fladd
 29738  00D25C  0E7F               	movlw	127
 29739  00D25E  177A               	andwf	??___fladd& (0+255),f,b
 29740  00D260  A4D8               	btfss	status,2,c
 29741  00D262  D002               	goto	u15450
 29742                           
 29743                           ; BSR set to: 0
 29744                           
 29745                           ; BSR set to: 0
 29746  00D264  A172               	btfss	___fladd@b& (0+255),0,b
 29747  00D266  D002               	goto	l3535
 29748  00D268                     u15450:
 29749                           
 29750                           ; BSR set to: 0
 29751  00D268  0E01               	movlw	1
 29752  00D26A  6F83               	movwf	___fladd@aexp& (0+255),b
 29753  00D26C                     l3535:
 29754                           
 29755                           ; BSR set to: 0
 29756                           
 29757                           ; BSR set to: 0
 29758                           
 29759                           ; BSR set to: 0
 29760  00D26C  5183               	movf	___fladd@aexp& (0+255),w,b
 29761  00D26E  B4D8               	btfsc	status,2,c
 29762  00D270  D020               	goto	l3538
 29763                           
 29764                           ; BSR set to: 0
 29765  00D272  0E01               	movlw	1
 29766  00D274  2772               	addwf	___fladd@b& (0+255),f,b
 29767  00D276  0E00               	movlw	0
 29768  00D278  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 29769  00D27A  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 29770  00D27C  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 29771                           
 29772                           ; BSR set to: 0
 29773  00D27E  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 29774  00D280  D018               	goto	l3538
 29775                           
 29776                           ; BSR set to: 0
 29777  00D282  C072  F07A         	movff	___fladd@b,??___fladd
 29778  00D286  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 29779  00D28A  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 29780  00D28E  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 29781  00D292  357D               	rlcf	(??___fladd+3)& (0+255),w,b
 29782  00D294  337D               	rrcf	(??___fladd+3)& (0+255),f,b
 29783  00D296  337C               	rrcf	(??___fladd+2)& (0+255),f,b
 29784  00D298  337B               	rrcf	(??___fladd+1)& (0+255),f,b
 29785  00D29A  337A               	rrcf	??___fladd& (0+255),f,b
 29786  00D29C  C07A  F072         	movff	??___fladd,___fladd@b
 29787  00D2A0  C07B  F073         	movff	??___fladd+1,___fladd@b+1
 29788  00D2A4  C07C  F074         	movff	??___fladd+2,___fladd@b+2
 29789  00D2A8  C07D  F075         	movff	??___fladd+3,___fladd@b+3
 29790  00D2AC  2984               	incf	___fladd@bexp& (0+255),w,b
 29791  00D2AE  A4D8               	btfss	status,2,c
 29792                           
 29793                           ; BSR set to: 0
 29794  00D2B0  2B84               	incf	___fladd@bexp& (0+255),f,b
 29795  00D2B2                     l3538:
 29796                           
 29797                           ; BSR set to: 0
 29798                           
 29799                           ; BSR set to: 0
 29800                           
 29801                           ; BSR set to: 0
 29802                           
 29803                           ; BSR set to: 0
 29804  00D2B2  2984               	incf	___fladd@bexp& (0+255),w,b
 29805  00D2B4  B4D8               	btfsc	status,2,c
 29806  00D2B6  D003               	goto	u15500
 29807                           
 29808                           ; BSR set to: 0
 29809  00D2B8  5184               	movf	___fladd@bexp& (0+255),w,b
 29810  00D2BA  A4D8               	btfss	status,2,c
 29811  00D2BC  D00D               	goto	l3542
 29812  00D2BE                     u15500:
 29813                           
 29814                           ; BSR set to: 0
 29815                           
 29816                           ; BSR set to: 0
 29817  00D2BE  0E00               	movlw	0
 29818  00D2C0  6F72               	movwf	___fladd@b& (0+255),b
 29819  00D2C2  0E00               	movlw	0
 29820  00D2C4  6F73               	movwf	(___fladd@b+1)& (0+255),b
 29821  00D2C6  0E00               	movlw	0
 29822  00D2C8  6F74               	movwf	(___fladd@b+2)& (0+255),b
 29823  00D2CA  0E00               	movlw	0
 29824  00D2CC  6F75               	movwf	(___fladd@b+3)& (0+255),b
 29825  00D2CE  5184               	movf	___fladd@bexp& (0+255),w,b
 29826  00D2D0  A4D8               	btfss	status,2,c
 29827  00D2D2  D002               	goto	l3542
 29828                           
 29829                           ; BSR set to: 0
 29830  00D2D4  0E00               	movlw	0
 29831  00D2D6  6F82               	movwf	___fladd@signs& (0+255),b
 29832  00D2D8                     l3542:
 29833                           
 29834                           ; BSR set to: 0
 29835                           
 29836                           ; BSR set to: 0
 29837                           
 29838                           ; BSR set to: 0
 29839  00D2D8  A184               	btfss	___fladd@bexp& (0+255),0,b
 29840  00D2DA  D002               	goto	l3543
 29841                           
 29842                           ; BSR set to: 0
 29843  00D2DC  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 29844  00D2DE  D001               	goto	l3544
 29845  00D2E0                     l3543:
 29846                           
 29847                           ; BSR set to: 0
 29848                           
 29849                           ; BSR set to: 0
 29850  00D2E0  9F74               	bcf	(___fladd@b+2)& (0+255),7,b
 29851  00D2E2                     l3544:
 29852                           
 29853                           ; BSR set to: 0
 29854                           
 29855                           ; BSR set to: 0
 29856  00D2E2  90D8               	bcf	status,0,c
 29857  00D2E4  3184               	rrcf	___fladd@bexp& (0+255),w,b
 29858  00D2E6  6F75               	movwf	(___fladd@b+3)& (0+255),b
 29859                           
 29860                           ; BSR set to: 0
 29861  00D2E8  BF82               	btfsc	___fladd@signs& (0+255),7,b
 29862                           
 29863                           ; BSR set to: 0
 29864  00D2EA  8F75               	bsf	(___fladd@b+3)& (0+255),7,b
 29865                           
 29866                           ; BSR set to: 0
 29867                           
 29868                           ; BSR set to: 0
 29869  00D2EC  C072  F072         	movff	___fladd@b,?___fladd
 29870  00D2F0  C073  F073         	movff	___fladd@b+1,?___fladd+1
 29871  00D2F4  C074  F074         	movff	___fladd@b+2,?___fladd+2
 29872  00D2F8  C075  F075         	movff	___fladd@b+3,?___fladd+3
 29873  00D2FC  0012               	return	
 29874  00D2FE                     __end_of___fladd:
 29875                           	opt stack 0
 29876                           tblptru	equ	0xFF8
 29877                           tblptrh	equ	0xFF7
 29878                           tblptrl	equ	0xFF6
 29879                           tablat	equ	0xFF5
 29880                           prodh	equ	0xFF4
 29881                           prodl	equ	0xFF3
 29882                           intcon	equ	0xFF2
 29883                           postinc0	equ	0xFEE
 29884                           wreg	equ	0xFE8
 29885                           indf1	equ	0xFE7
 29886                           postinc1	equ	0xFE6
 29887                           postdec1	equ	0xFE5
 29888                           plusw1	equ	0xFE3
 29889                           fsr1h	equ	0xFE2
 29890                           fsr1l	equ	0xFE1
 29891                           indf2	equ	0xFDF
 29892                           postinc2	equ	0xFDE
 29893                           postdec2	equ	0xFDD
 29894                           plusw2	equ	0xFDB
 29895                           fsr2h	equ	0xFDA
 29896                           fsr2l	equ	0xFD9
 29897                           status	equ	0xFD8
 29898                           
 29899 ;; *************** function _USBDeviceInit *****************
 29900 ;; Defined at:
 29901 ;;		line 277 in file "usb_device.c"
 29902 ;; Parameters:    Size  Location     Type
 29903 ;;		None
 29904 ;; Auto vars:     Size  Location     Type
 29905 ;;  i               1    8[BANK0 ] unsigned char 
 29906 ;; Return value:  Size  Location     Type
 29907 ;;                  1    wreg      void 
 29908 ;; Registers used:
 29909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29910 ;; Tracked objects:
 29911 ;;		On entry : 0/0
 29912 ;;		On exit  : 0/0
 29913 ;;		Unchanged: 0/0
 29914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29918 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29919 ;;Total ram usage:        1 bytes
 29920 ;; Hardware stack levels used:    1
 29921 ;; Hardware stack levels required when called:   11
 29922 ;; This function calls:
 29923 ;;		_memset
 29924 ;; This function is called by:
 29925 ;;		_main
 29926 ;; This function uses a non-reentrant model
 29927 ;;
 29928                           
 29929                           	psect	text119
 29930  00FB3E                     __ptext119:
 29931                           	opt stack 0
 29932  00FB3E                     _USBDeviceInit:
 29933                           	opt stack 19
 29934                           
 29935                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 29936                           
 29937                           ; BSR set to: 0
 29938                           ;incstack = 0
 29939  00FB3E  98A0               	bcf	4000,4,c	;volatile
 29940                           
 29941                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 29942  00FB40  0E00               	movlw	0
 29943  00FB42  6E63               	movwf	3939,c	;volatile
 29944                           
 29945                           ;usb_device.c: 291: {UIR = 0;};
 29946  00FB44  0E00               	movlw	0
 29947  00FB46  6E62               	movwf	3938,c	;volatile
 29948                           
 29949                           ;usb_device.c: 294: UEP0 = 0;
 29950  00FB48  0E00               	movlw	0
 29951  00FB4A  010F               	movlb	15	; () banked
 29952  00FB4C  6F26               	movwf	38,b	;volatile
 29953                           
 29954                           ; BSR set to: 15
 29955                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 29956  00FB4E  0E27               	movlw	39
 29957  00FB50  0100               	movlb	0	; () banked
 29958  00FB52  6F60               	movwf	memset@p1& (0+255),b
 29959  00FB54  0E0F               	movlw	15
 29960  00FB56  6F61               	movwf	(memset@p1+1)& (0+255),b
 29961  00FB58  0E00               	movlw	0
 29962  00FB5A  6F63               	movwf	(memset@c+1)& (0+255),b
 29963  00FB5C  0E00               	movlw	0
 29964  00FB5E  6F62               	movwf	memset@c& (0+255),b
 29965  00FB60  0E00               	movlw	0
 29966  00FB62  6F65               	movwf	(memset@n+1)& (0+255),b
 29967  00FB64  0E02               	movlw	2
 29968  00FB66  6F64               	movwf	memset@n& (0+255),b
 29969  00FB68  EC9A  F0A8         	call	_memset	;wreg free
 29970                           
 29971                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 29972  00FB6C  0E16               	movlw	22
 29973  00FB6E  010F               	movlb	15	; () banked
 29974  00FB70  6F39               	movwf	57,b	;volatile
 29975                           
 29976                           ; BSR set to: 15
 29977  00FB72  0E9F               	movlw	159
 29978  00FB74  6F37               	movwf	55,b	;volatile
 29979                           
 29980                           ; BSR set to: 15
 29981  00FB76  0E7B               	movlw	123
 29982  00FB78  6F36               	movwf	54,b	;volatile
 29983                           
 29984                           ; BSR set to: 15
 29985                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 29986  00FB7A  0E00               	movlw	0
 29987  00FB7C  0100               	movlb	0	; () banked
 29988  00FB7E  6F68               	movwf	USBDeviceInit@i& (0+255),b
 29989  00FB80                     l17190:
 29990                           
 29991                           ; BSR set to: 0
 29992  00FB80  0E0B               	movlw	11
 29993  00FB82  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 29994  00FB84  D001               	goto	l145
 29995  00FB86  D00E               	goto	u16610
 29996  00FB88                     l145:
 29997                           
 29998                           ; BSR set to: 0
 29999                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 30000                           
 30001                           ; BSR set to: 0
 30002  00FB88  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30003  00FB8A  0D04               	mullw	4
 30004  00FB8C  0E00               	movlw	0
 30005  00FB8E  24F3               	addwf	prodl,w,c
 30006  00FB90  6ED9               	movwf	fsr2l,c
 30007  00FB92  0E0D               	movlw	13
 30008  00FB94  20F4               	addwfc	prodh,w,c
 30009  00FB96  6EDA               	movwf	fsr2h,c
 30010  00FB98  6ADE               	clrf	postinc2,c
 30011  00FB9A  6ADE               	clrf	postinc2,c
 30012  00FB9C  6ADE               	clrf	postinc2,c
 30013  00FB9E  6ADD               	clrf	postdec2,c
 30014                           
 30015                           ; BSR set to: 0
 30016  00FBA0  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 30017  00FBA2  D7EE               	goto	l17190
 30018  00FBA4                     u16610:
 30019                           
 30020                           ; BSR set to: 0
 30021                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 30022  00FBA4  8C65               	bsf	3941,6,c	;volatile
 30023                           
 30024                           ; BSR set to: 0
 30025                           ;usb_device.c: 316: UADDR = 0x00;
 30026  00FBA6  0E00               	movlw	0
 30027  00FBA8  010F               	movlb	15	; () banked
 30028  00FBAA  6F38               	movwf	56,b	;volatile
 30029                           
 30030                           ; BSR set to: 15
 30031                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 30032  00FBAC  9865               	bcf	3941,4,c	;volatile
 30033                           
 30034                           ; BSR set to: 15
 30035                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 30036  00FBAE  9C65               	bcf	3941,6,c	;volatile
 30037  00FBB0                     
 30038                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 30039                           
 30040                           ; BSR set to: 15
 30041  00FBB0  9662               	bcf	3938,3,c	;volatile
 30042                           
 30043                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 30044  00FBB2  0E00               	movlw	0
 30045  00FBB4  6E55               	movwf	_inPipes+3,c	;volatile
 30046                           
 30047                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 30048  00FBB6  0E00               	movlw	0
 30049  00FBB8  0101               	movlb	1	; () banked
 30050  00FBBA  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 30051                           
 30052                           ; BSR set to: 1
 30053                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 30054  00FBBC  0E00               	movlw	0
 30055  00FBBE  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 30056  00FBC0  0E00               	movlw	0
 30057  00FBC2  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 30058                           
 30059                           ; BSR set to: 1
 30060                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 30061  00FBC4  B662               	btfsc	3938,3,c	;volatile
 30062  00FBC6  D7F4               	goto	l147
 30063                           
 30064                           ; BSR set to: 1
 30065                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 30066                           
 30067                           ; BSR set to: 1
 30068  00FBC8  0E01               	movlw	1
 30069  00FBCA  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 30070                           
 30071                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 30072  00FBCC  0E01               	movlw	1
 30073  00FBCE  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 30074                           
 30075                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 30076  00FBD0  0E00               	movlw	0
 30077  00FBD2  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 30078                           
 30079                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 30080  00FBD4  0E00               	movlw	0
 30081  00FBD6  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 30082                           
 30083                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 30084  00FBD8  0E00               	movlw	0
 30085  00FBDA  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 30086                           
 30087                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 30088  00FBDC  0E00               	movlw	0
 30089  00FBDE  0100               	movlb	0	; () banked
 30090  00FBE0  6F68               	movwf	USBDeviceInit@i& (0+255),b
 30091  00FBE2                     l17218:
 30092                           
 30093                           ; BSR set to: 0
 30094  00FBE2  0E02               	movlw	2
 30095  00FBE4  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 30096  00FBE6  D001               	goto	l149
 30097  00FBE8  D02E               	goto	u16640
 30098  00FBEA                     l149:
 30099                           
 30100                           ; BSR set to: 0
 30101                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 30102                           
 30103                           ; BSR set to: 0
 30104  00FBEA  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30105  00FBEC  0D02               	mullw	2
 30106  00FBEE  0E1B               	movlw	low _pBDTEntryIn
 30107  00FBF0  24F3               	addwf	prodl,w,c
 30108  00FBF2  6ED9               	movwf	fsr2l,c
 30109  00FBF4  0E01               	movlw	high _pBDTEntryIn
 30110  00FBF6  20F4               	addwfc	prodh,w,c
 30111  00FBF8  6EDA               	movwf	fsr2h,c
 30112  00FBFA  0E00               	movlw	0
 30113  00FBFC  6EDE               	movwf	postinc2,c
 30114  00FBFE  0E00               	movlw	0
 30115  00FC00  6EDD               	movwf	postdec2,c
 30116                           
 30117                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 30118  00FC02  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30119  00FC04  0D02               	mullw	2
 30120  00FC06  0E21               	movlw	low _pBDTEntryOut
 30121  00FC08  24F3               	addwf	prodl,w,c
 30122  00FC0A  6ED9               	movwf	fsr2l,c
 30123  00FC0C  0E01               	movlw	high _pBDTEntryOut
 30124  00FC0E  20F4               	addwfc	prodh,w,c
 30125  00FC10  6EDA               	movwf	fsr2h,c
 30126  00FC12  0E00               	movlw	0
 30127  00FC14  6EDE               	movwf	postinc2,c
 30128  00FC16  0E00               	movlw	0
 30129  00FC18  6EDD               	movwf	postdec2,c
 30130                           
 30131                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 30132  00FC1A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30133  00FC1C  0D01               	mullw	1
 30134  00FC1E  0E3C               	movlw	low _ep_data_in
 30135  00FC20  24F3               	addwf	prodl,w,c
 30136  00FC22  6ED9               	movwf	fsr2l,c
 30137  00FC24  0E01               	movlw	high _ep_data_in
 30138  00FC26  20F4               	addwfc	prodh,w,c
 30139  00FC28  6EDA               	movwf	fsr2h,c
 30140  00FC2A  0E00               	movlw	0
 30141  00FC2C  6EDF               	movwf	indf2,c
 30142                           
 30143                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 30144  00FC2E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30145  00FC30  0D01               	mullw	1
 30146  00FC32  0E39               	movlw	low _ep_data_out
 30147  00FC34  24F3               	addwf	prodl,w,c
 30148  00FC36  6ED9               	movwf	fsr2l,c
 30149  00FC38  0E01               	movlw	high _ep_data_out
 30150  00FC3A  20F4               	addwfc	prodh,w,c
 30151  00FC3C  6EDA               	movwf	fsr2h,c
 30152  00FC3E  0E00               	movlw	0
 30153  00FC40  6EDF               	movwf	indf2,c
 30154                           
 30155                           ; BSR set to: 0
 30156  00FC42  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 30157  00FC44  D7CE               	goto	l17218
 30158  00FC46                     u16640:
 30159                           
 30160                           ; BSR set to: 0
 30161                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 30162                           
 30163                           ; BSR set to: 0
 30164  00FC46  0E08               	movlw	8
 30165  00FC48  0101               	movlb	1	; () banked
 30166  00FC4A  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 30167  00FC4C  0E0D               	movlw	13
 30168  00FC4E  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 30169                           
 30170                           ; BSR set to: 1
 30171                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 30172  00FC50  0E16               	movlw	22
 30173  00FC52  010F               	movlb	15	; () banked
 30174  00FC54  6F26               	movwf	38,b	;volatile
 30175                           
 30176                           ; BSR set to: 15
 30177                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 30178  00FC56  0E0D               	movlw	13
 30179  00FC58  010D               	movlb	13	; () banked
 30180  00FC5A  6F03               	movwf	3,b	;volatile
 30181  00FC5C  0E30               	movlw	48
 30182  00FC5E  6F02               	movwf	2,b	;volatile
 30183                           
 30184                           ; BSR set to: 13
 30185                           ;usb_device.c: 359: BDT[0].CNT = 8;
 30186  00FC60  0E08               	movlw	8
 30187  00FC62  6F01               	movwf	1,b	;volatile
 30188                           
 30189                           ; BSR set to: 13
 30190                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 30191  00FC64  0E04               	movlw	4
 30192  00FC66  6F00               	movwf	0,b	;volatile
 30193                           
 30194                           ; BSR set to: 13
 30195                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 30196  00FC68  8F00               	bsf	0,7,b	;volatile
 30197                           
 30198                           ; BSR set to: 13
 30199                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 30200  00FC6A  0E00               	movlw	0
 30201  00FC6C  0101               	movlb	1	; () banked
 30202  00FC6E  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 30203                           
 30204                           ; BSR set to: 1
 30205                           ;usb_device.c: 366: USB1msTickCount = 0;
 30206  00FC70  0E00               	movlw	0
 30207  00FC72  6F2F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 30208  00FC74  0E00               	movlw	0
 30209  00FC76  6F30               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 30210  00FC78  0E00               	movlw	0
 30211  00FC7A  6F31               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 30212  00FC7C  0E00               	movlw	0
 30213  00FC7E  6F32               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 30214                           
 30215                           ; BSR set to: 1
 30216                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 30217  00FC80  0E00               	movlw	0
 30218  00FC82  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 30219                           
 30220                           ; BSR set to: 1
 30221                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 30222  00FC84  0E00               	movlw	0
 30223  00FC86  6E5E               	movwf	_USBDeviceState,c	;volatile
 30224                           
 30225                           ; BSR set to: 1
 30226  00FC88  0012               	return		;funcret
 30227  00FC8A                     __end_of_USBDeviceInit:
 30228                           	opt stack 0
 30229                           tblptru	equ	0xFF8
 30230                           tblptrh	equ	0xFF7
 30231                           tblptrl	equ	0xFF6
 30232                           tablat	equ	0xFF5
 30233                           prodh	equ	0xFF4
 30234                           prodl	equ	0xFF3
 30235                           intcon	equ	0xFF2
 30236                           postinc0	equ	0xFEE
 30237                           wreg	equ	0xFE8
 30238                           indf1	equ	0xFE7
 30239                           postinc1	equ	0xFE6
 30240                           postdec1	equ	0xFE5
 30241                           plusw1	equ	0xFE3
 30242                           fsr1h	equ	0xFE2
 30243                           fsr1l	equ	0xFE1
 30244                           indf2	equ	0xFDF
 30245                           postinc2	equ	0xFDE
 30246                           postdec2	equ	0xFDD
 30247                           plusw2	equ	0xFDB
 30248                           fsr2h	equ	0xFDA
 30249                           fsr2l	equ	0xFD9
 30250                           status	equ	0xFD8
 30251                           
 30252 ;; *************** function _memset *****************
 30253 ;; Defined at:
 30254 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 30255 ;; Parameters:    Size  Location     Type
 30256 ;;  p1              2    0[BANK0 ] PTR void 
 30257 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 30258 ;;  c               2    2[BANK0 ] int 
 30259 ;;  n               2    4[BANK0 ] unsigned int 
 30260 ;; Auto vars:     Size  Location     Type
 30261 ;;  p               2    6[BANK0 ] PTR unsigned char 
 30262 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 30263 ;; Return value:  Size  Location     Type
 30264 ;;                  2    0[BANK0 ] PTR void 
 30265 ;; Registers used:
 30266 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30267 ;; Tracked objects:
 30268 ;;		On entry : 0/0
 30269 ;;		On exit  : 0/0
 30270 ;;		Unchanged: 0/0
 30271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30272 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30273 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30275 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30276 ;;Total ram usage:        8 bytes
 30277 ;; Hardware stack levels used:    1
 30278 ;; Hardware stack levels required when called:   10
 30279 ;; This function calls:
 30280 ;;		Nothing
 30281 ;; This function is called by:
 30282 ;;		_USBDeviceInit
 30283 ;; This function uses a non-reentrant model
 30284 ;;
 30285                           
 30286                           	psect	text120
 30287  015134                     __ptext120:
 30288                           	opt stack 0
 30289  015134                     _memset:
 30290                           	opt stack 19
 30291                           
 30292                           ; BSR set to: 1
 30293                           ;incstack = 0
 30294  015134  C060  F066         	movff	memset@p1,memset@p
 30295  015138  C061  F067         	movff	memset@p1+1,memset@p+1
 30296  01513C  D009               	goto	l3720
 30297  01513E                     l16322:
 30298  01513E  C066  FFD9         	movff	memset@p,fsr2l
 30299  015142  C067  FFDA         	movff	memset@p+1,fsr2h
 30300  015146  C062  FFDF         	movff	memset@c,indf2
 30301  01514A  0100               	movlb	0	; () banked
 30302  01514C  4B66               	infsnz	memset@p& (0+255),f,b
 30303  01514E  2B67               	incf	(memset@p+1)& (0+255),f,b
 30304  015150                     l3720:
 30305                           
 30306                           ; BSR set to: 0
 30307  015150  0100               	movlb	0	; () banked
 30308  015152  0764               	decf	memset@n& (0+255),f,b
 30309  015154  A0D8               	btfss	status,0,c
 30310  015156  0765               	decf	(memset@n+1)& (0+255),f,b
 30311  015158  2964               	incf	memset@n& (0+255),w,b
 30312  01515A  E1F1               	bnz	l16322
 30313  01515C  2965               	incf	(memset@n+1)& (0+255),w,b
 30314  01515E  B4D8               	btfsc	status,2,c
 30315  015160  0012               	return	
 30316  015162  D7ED               	goto	l3721
 30317  015164                     __end_of_memset:
 30318                           	opt stack 0
 30319                           tblptru	equ	0xFF8
 30320                           tblptrh	equ	0xFF7
 30321                           tblptrl	equ	0xFF6
 30322                           tablat	equ	0xFF5
 30323                           prodh	equ	0xFF4
 30324                           prodl	equ	0xFF3
 30325                           intcon	equ	0xFF2
 30326                           postinc0	equ	0xFEE
 30327                           wreg	equ	0xFE8
 30328                           indf1	equ	0xFE7
 30329                           postinc1	equ	0xFE6
 30330                           postdec1	equ	0xFE5
 30331                           plusw1	equ	0xFE3
 30332                           fsr1h	equ	0xFE2
 30333                           fsr1l	equ	0xFE1
 30334                           indf2	equ	0xFDF
 30335                           postinc2	equ	0xFDE
 30336                           postdec2	equ	0xFDD
 30337                           plusw2	equ	0xFDB
 30338                           fsr2h	equ	0xFDA
 30339                           fsr2l	equ	0xFD9
 30340                           status	equ	0xFD8
 30341                           
 30342 ;; *************** function _USBDeviceAttach *****************
 30343 ;; Defined at:
 30344 ;;		line 1354 in file "usb_device.c"
 30345 ;; Parameters:    Size  Location     Type
 30346 ;;		None
 30347 ;; Auto vars:     Size  Location     Type
 30348 ;;		None
 30349 ;; Return value:  Size  Location     Type
 30350 ;;                  1    wreg      void 
 30351 ;; Registers used:
 30352 ;;		wreg, status,2
 30353 ;; Tracked objects:
 30354 ;;		On entry : 0/0
 30355 ;;		On exit  : 0/0
 30356 ;;		Unchanged: 0/0
 30357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30362 ;;Total ram usage:        0 bytes
 30363 ;; Hardware stack levels used:    1
 30364 ;; Hardware stack levels required when called:   10
 30365 ;; This function calls:
 30366 ;;		Nothing
 30367 ;; This function is called by:
 30368 ;;		_main
 30369 ;; This function uses a non-reentrant model
 30370 ;;
 30371                           
 30372                           	psect	text121
 30373  0150A2                     __ptext121:
 30374                           	opt stack 0
 30375  0150A2                     _USBDeviceAttach:
 30376                           	opt stack 20
 30377                           
 30378                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 30379                           
 30380                           ; BSR set to: 0
 30381                           ;incstack = 0
 30382  0150A2  505E               	movf	_USBDeviceState,w,c	;volatile
 30383  0150A4  A4D8               	btfss	status,2,c
 30384  0150A6  0012               	return	
 30385                           
 30386                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 30387  0150A8  0E00               	movlw	0
 30388  0150AA  6E65               	movwf	3941,c	;volatile
 30389                           
 30390                           ;usb_device.c: 1365: UIE = 0;
 30391  0150AC  0E00               	movlw	0
 30392  0150AE  010F               	movlb	15	; () banked
 30393  0150B0  6F36               	movwf	54,b	;volatile
 30394                           
 30395                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 30396  0150B2  0E16               	movlw	22
 30397  0150B4  6F39               	movwf	57,b	;volatile
 30398  0150B6  0E9F               	movlw	159
 30399  0150B8  6F37               	movwf	55,b	;volatile
 30400  0150BA  0E7B               	movlw	123
 30401  0150BC  6F36               	movwf	54,b	;volatile
 30402                           
 30403                           ; BSR set to: 15
 30404                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 30405  0150BE  8ED0               	bsf	4048,7,c	;volatile
 30406                           
 30407                           ; BSR set to: 15
 30408  0150C0  88A2               	bsf	4002,4,c	;volatile
 30409                           
 30410                           ; BSR set to: 15
 30411  0150C2  88A0               	bsf	4000,4,c	;volatile
 30412                           
 30413                           ; BSR set to: 15
 30414  0150C4  8EF2               	bsf	intcon,7,c	;volatile
 30415                           
 30416                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 30417  0150C6  D001               	goto	l206
 30418  0150C8                     l207:
 30419  0150C8  8665               	bsf	3941,3,c	;volatile
 30420  0150CA                     l206:
 30421  0150CA  A665               	btfss	3941,3,c	;volatile
 30422  0150CC  D7FD               	goto	l207
 30423                           
 30424                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 30425  0150CE  0E01               	movlw	1
 30426  0150D0  6E5E               	movwf	_USBDeviceState,c	;volatile
 30427  0150D2  0012               	return	
 30428  0150D4                     __end_of_USBDeviceAttach:
 30429                           	opt stack 0
 30430                           tblptru	equ	0xFF8
 30431                           tblptrh	equ	0xFF7
 30432                           tblptrl	equ	0xFF6
 30433                           tablat	equ	0xFF5
 30434                           prodh	equ	0xFF4
 30435                           prodl	equ	0xFF3
 30436                           intcon	equ	0xFF2
 30437                           postinc0	equ	0xFEE
 30438                           wreg	equ	0xFE8
 30439                           indf1	equ	0xFE7
 30440                           postinc1	equ	0xFE6
 30441                           postdec1	equ	0xFE5
 30442                           plusw1	equ	0xFE3
 30443                           fsr1h	equ	0xFE2
 30444                           fsr1l	equ	0xFE1
 30445                           indf2	equ	0xFDF
 30446                           postinc2	equ	0xFDE
 30447                           postdec2	equ	0xFDD
 30448                           plusw2	equ	0xFDB
 30449                           fsr2h	equ	0xFDA
 30450                           fsr2l	equ	0xFD9
 30451                           status	equ	0xFD8
 30452                           
 30453 ;; *************** function _SYSTEM_Initialize *****************
 30454 ;; Defined at:
 30455 ;;		line 39 in file "system.c"
 30456 ;; Parameters:    Size  Location     Type
 30457 ;;  state           1    wreg     enum E6623
 30458 ;; Auto vars:     Size  Location     Type
 30459 ;;  state           1    4[BANK0 ] enum E6623
 30460 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 30461 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 30462 ;; Return value:  Size  Location     Type
 30463 ;;                  1    wreg      void 
 30464 ;; Registers used:
 30465 ;;		wreg, status,2, status,0
 30466 ;; Tracked objects:
 30467 ;;		On entry : 0/0
 30468 ;;		On exit  : 0/0
 30469 ;;		Unchanged: 0/0
 30470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30472 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30474 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30475 ;;Total ram usage:        5 bytes
 30476 ;; Hardware stack levels used:    1
 30477 ;; Hardware stack levels required when called:   10
 30478 ;; This function calls:
 30479 ;;		Nothing
 30480 ;; This function is called by:
 30481 ;;		_main
 30482 ;; This function uses a non-reentrant model
 30483 ;;
 30484                           
 30485                           	psect	text122
 30486  0143CC                     __ptext122:
 30487                           	opt stack 0
 30488  0143CC                     _SYSTEM_Initialize:
 30489                           	opt stack 20
 30490                           
 30491                           ;incstack = 0
 30492                           ;SYSTEM_Initialize@state stored from wreg
 30493  0143CC  0100               	movlb	0	; () banked
 30494  0143CE  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 30495                           
 30496                           ;system.c: 41: switch(state)
 30497  0143D0  D01E               	goto	l897
 30498  0143D2                     
 30499                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 30500  0143D2  0E02               	movlw	2
 30501  0143D4  0100               	movlb	0	; () banked
 30502  0143D6  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 30503  0143D8  0E58               	movlw	88
 30504  0143DA  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 30505                           
 30506                           ; BSR set to: 0
 30507                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 30508  0143DC  8C9B               	bsf	3995,6,c	;volatile
 30509  0143DE                     l17370:
 30510                           
 30511                           ; BSR set to: 0
 30512  0143DE  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 30513  0143E0  A0D8               	btfss	status,0,c
 30514  0143E2  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 30515  0143E4  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 30516  0143E6  E1FB               	bnz	l17370
 30517  0143E8  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 30518  0143EA  B4D8               	btfsc	status,2,c
 30519  0143EC  0012               	return	
 30520  0143EE  D7F7               	goto	l900
 30521  0143F0                     
 30522                           ; BSR set to: 0
 30523                           ;system.c: 78: OSCCON = 0x70;
 30524                           
 30525                           ; BSR set to: 0
 30526  0143F0  0E70               	movlw	112
 30527  0143F2  6ED3               	movwf	4051,c	;volatile
 30528                           
 30529                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 30530  0143F4  0E03               	movlw	3
 30531  0143F6  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),b
 30532  0143F8  0E20               	movlw	32
 30533  0143FA  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),b
 30534  0143FC                     l17374:
 30535                           
 30536                           ; BSR set to: 0
 30537  0143FC  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),f,b
 30538  0143FE  A0D8               	btfss	status,0,c
 30539  014400  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),f,b
 30540  014402  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),w,b
 30541  014404  E1FB               	bnz	l17374
 30542  014406  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),w,b
 30543  014408  B4D8               	btfsc	status,2,c
 30544  01440A  0012               	return	
 30545  01440C  D7F7               	goto	l906
 30546  01440E                     l897:
 30547                           
 30548                           ; BSR set to: 0
 30549  01440E  0100               	movlb	0	; () banked
 30550  014410  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 30551                           
 30552                           ; Switch size 1, requested type "space"
 30553                           ; Number of cases is 3, Range of values is 0 to 2
 30554                           ; switch strategies available:
 30555                           ; Name         Instructions Cycles
 30556                           ; simple_byte           10     6 (average)
 30557                           ;	Chosen strategy is simple_byte
 30558  014412  0A00               	xorlw	0	; case 0
 30559  014414  B4D8               	btfsc	status,2,c
 30560  014416  D7DD               	goto	l898
 30561  014418  0A01               	xorlw	1	; case 1
 30562  01441A  B4D8               	btfsc	status,2,c
 30563  01441C  0012               	return	
 30564  01441E  0A03               	xorlw	3	; case 2
 30565  014420  A4D8               	btfss	status,2,c
 30566  014422  0012               	return	
 30567  014424  D7E5               	goto	l904
 30568  014426                     __end_of_SYSTEM_Initialize:
 30569                           	opt stack 0
 30570                           tblptru	equ	0xFF8
 30571                           tblptrh	equ	0xFF7
 30572                           tblptrl	equ	0xFF6
 30573                           tablat	equ	0xFF5
 30574                           prodh	equ	0xFF4
 30575                           prodl	equ	0xFF3
 30576                           intcon	equ	0xFF2
 30577                           postinc0	equ	0xFEE
 30578                           wreg	equ	0xFE8
 30579                           indf1	equ	0xFE7
 30580                           postinc1	equ	0xFE6
 30581                           postdec1	equ	0xFE5
 30582                           plusw1	equ	0xFE3
 30583                           fsr1h	equ	0xFE2
 30584                           fsr1l	equ	0xFE1
 30585                           indf2	equ	0xFDF
 30586                           postinc2	equ	0xFDE
 30587                           postdec2	equ	0xFDD
 30588                           plusw2	equ	0xFDB
 30589                           fsr2h	equ	0xFDA
 30590                           fsr2l	equ	0xFD9
 30591                           status	equ	0xFD8
 30592                           
 30593 ;; *************** function _APP_DeviceMSDTasks *****************
 30594 ;; Defined at:
 30595 ;;		line 110 in file "app_device_msd.c"
 30596 ;; Parameters:    Size  Location     Type
 30597 ;;		None
 30598 ;; Auto vars:     Size  Location     Type
 30599 ;;		None
 30600 ;; Return value:  Size  Location     Type
 30601 ;;                  1    wreg      void 
 30602 ;; Registers used:
 30603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30604 ;; Tracked objects:
 30605 ;;		On entry : 0/0
 30606 ;;		On exit  : 0/0
 30607 ;;		Unchanged: 0/0
 30608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30613 ;;Total ram usage:        0 bytes
 30614 ;; Hardware stack levels used:    1
 30615 ;; Hardware stack levels required when called:   21
 30616 ;; This function calls:
 30617 ;;		_MSDTasks
 30618 ;; This function is called by:
 30619 ;;		_main
 30620 ;; This function uses a non-reentrant model
 30621 ;;
 30622                           
 30623                           	psect	text123
 30624  0155F0                     __ptext123:
 30625                           	opt stack 0
 30626  0155F0                     _APP_DeviceMSDTasks:
 30627                           	opt stack 9
 30628                           
 30629                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 30630                           
 30631                           ; BSR set to: 0
 30632                           ;incstack = 0
 30633  0155F0  0E20               	movlw	32
 30634  0155F2  605E               	cpfslt	_USBDeviceState,c	;volatile
 30635  0155F4  D001               	goto	l986
 30636  0155F6  0012               	return	
 30637  0155F8                     l986:
 30638                           
 30639                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 30640  0155F8  B265               	btfsc	3941,1,c	;volatile
 30641  0155FA  0012               	return	
 30642                           
 30643                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 30644                           
 30645                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 30646  0155FC  ECD1  F071         	call	_MSDTasks	;wreg free
 30647  015600  0012               	return		;funcret
 30648  015602                     __end_of_APP_DeviceMSDTasks:
 30649                           	opt stack 0
 30650                           tblptru	equ	0xFF8
 30651                           tblptrh	equ	0xFF7
 30652                           tblptrl	equ	0xFF6
 30653                           tablat	equ	0xFF5
 30654                           prodh	equ	0xFF4
 30655                           prodl	equ	0xFF3
 30656                           intcon	equ	0xFF2
 30657                           postinc0	equ	0xFEE
 30658                           wreg	equ	0xFE8
 30659                           indf1	equ	0xFE7
 30660                           postinc1	equ	0xFE6
 30661                           postdec1	equ	0xFE5
 30662                           plusw1	equ	0xFE3
 30663                           fsr1h	equ	0xFE2
 30664                           fsr1l	equ	0xFE1
 30665                           indf2	equ	0xFDF
 30666                           postinc2	equ	0xFDE
 30667                           postdec2	equ	0xFDD
 30668                           plusw2	equ	0xFDB
 30669                           fsr2h	equ	0xFDA
 30670                           fsr2l	equ	0xFD9
 30671                           status	equ	0xFD8
 30672                           
 30673 ;; *************** function _MSDTasks *****************
 30674 ;; Defined at:
 30675 ;;		line 335 in file "usb_device_msd.c"
 30676 ;; Parameters:    Size  Location     Type
 30677 ;;		None
 30678 ;; Auto vars:     Size  Location     Type
 30679 ;;  i               1   81[BANK0 ] unsigned char 
 30680 ;; Return value:  Size  Location     Type
 30681 ;;                  1    wreg      unsigned char 
 30682 ;; Registers used:
 30683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30684 ;; Tracked objects:
 30685 ;;		On entry : 0/0
 30686 ;;		On exit  : 0/0
 30687 ;;		Unchanged: 0/0
 30688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30690 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30691 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30692 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30693 ;;Total ram usage:        6 bytes
 30694 ;; Hardware stack levels used:    1
 30695 ;; Hardware stack levels required when called:   20
 30696 ;; This function calls:
 30697 ;;		_MSDProcessCommand
 30698 ;;		_USBStallEndpoint
 30699 ;;		_USBTransferOnePacket
 30700 ;; This function is called by:
 30701 ;;		_APP_DeviceMSDTasks
 30702 ;; This function uses a non-reentrant model
 30703 ;;
 30704                           
 30705                           	psect	text124
 30706  00E3A2                     __ptext124:
 30707                           	opt stack 0
 30708  00E3A2                     _MSDTasks:
 30709                           	opt stack 9
 30710                           
 30711                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 30712                           
 30713                           ;incstack = 0
 30714  00E3A2  0E20               	movlw	32
 30715  00E3A4  185E               	xorwf	_USBDeviceState,w,c	;volatile
 30716  00E3A6  A4D8               	btfss	status,2,c
 30717  00E3A8  0012               	return	
 30718                           
 30719                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 30720                           
 30721                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 30722  00E3AA  98A0               	bcf	4000,4,c	;volatile
 30723                           
 30724                           ;usb_device_msd.c: 357: switch(MSD_State)
 30725  00E3AC  D11E               	goto	l570
 30726  00E3AE                     
 30727                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 30728  00E3AE  0101               	movlb	1	; () banked
 30729  00E3B0  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 30730  00E3B2  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 30731  00E3B4  B4D8               	btfsc	status,2,c
 30732  00E3B6  D006               	goto	u15680
 30733                           
 30734                           ; BSR set to: 1
 30735  00E3B8  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 30736  00E3BC  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 30737  00E3C0  BEDF               	btfsc	indf2,7,c
 30738  00E3C2  D122               	goto	l586
 30739  00E3C4                     u15680:
 30740                           
 30741                           ; BSR set to: 1
 30742                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 30743                           
 30744                           ; BSR set to: 1
 30745  00E3C4  0E00               	movlw	0
 30746  00E3C6  0100               	movlb	0	; () banked
 30747  00E3C8  6FB1               	movwf	MSDTasks@i& (0+255),b
 30748  00E3CA                     l16408:
 30749                           
 30750                           ; BSR set to: 0
 30751  00E3CA  0E1E               	movlw	30
 30752  00E3CC  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 30753  00E3CE  D001               	goto	l575
 30754  00E3D0  D014               	goto	u15700
 30755  00E3D2                     l575:
 30756                           
 30757                           ; BSR set to: 0
 30758                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 30759                           
 30760                           ; BSR set to: 0
 30761  00E3D2  51B1               	movf	MSDTasks@i& (0+255),w,b
 30762  00E3D4  0D01               	mullw	1
 30763  00E3D6  0E40               	movlw	64
 30764  00E3D8  24F3               	addwf	prodl,w,c
 30765  00E3DA  6ED9               	movwf	fsr2l,c
 30766  00E3DC  0E0D               	movlw	13
 30767  00E3DE  20F4               	addwfc	prodh,w,c
 30768  00E3E0  6EDA               	movwf	fsr2h,c
 30769  00E3E2  51B1               	movf	MSDTasks@i& (0+255),w,b
 30770  00E3E4  0D01               	mullw	1
 30771  00E3E6  0E00               	movlw	low _gblCBW
 30772  00E3E8  24F3               	addwf	prodl,w,c
 30773  00E3EA  6EE1               	movwf	fsr1l,c
 30774  00E3EC  0E02               	movlw	high _gblCBW
 30775  00E3EE  20F4               	addwfc	prodh,w,c
 30776  00E3F0  6EE2               	movwf	fsr1h,c
 30777  00E3F2  CFDF FFE7          	movff	indf2,indf1
 30778                           
 30779                           ; BSR set to: 0
 30780  00E3F6  2BB1               	incf	MSDTasks@i& (0+255),f,b
 30781  00E3F8  D7E8               	goto	l16408
 30782  00E3FA                     u15700:
 30783                           
 30784                           ; BSR set to: 0
 30785                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 30786                           
 30787                           ; BSR set to: 0
 30788  00E3FA  0101               	movlb	1	; () banked
 30789  00E3FC  EE20 F001          	lfsr	2,1
 30790  00E400  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 30791  00E402  26D9               	addwf	fsr2l,f,c
 30792  00E404  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 30793  00E406  22DA               	addwfc	fsr2h,f,c
 30794  00E408  0E1F               	movlw	31
 30795  00E40A  18DE               	xorwf	postinc2,w,c
 30796  00E40C  A4D8               	btfss	status,2,c
 30797  00E40E  D077               	goto	l577
 30798                           
 30799                           ; BSR set to: 1
 30800  00E410  0E55               	movlw	85
 30801  00E412  0102               	movlb	2	; () banked
 30802  00E414  1900               	xorwf	_gblCBW& (0+255),w,b
 30803  00E416  E173               	bnz	l577
 30804  00E418  0E53               	movlw	83
 30805  00E41A  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 30806  00E41C  E170               	bnz	l577
 30807  00E41E  0E42               	movlw	66
 30808  00E420  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 30809  00E422  E16D               	bnz	l577
 30810  00E424  0E43               	movlw	67
 30811  00E426  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 30812  00E428  A4D8               	btfss	status,2,c
 30813  00E42A  D069               	goto	l577
 30814                           
 30815                           ; BSR set to: 2
 30816                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 30817  00E42C  0E01               	movlw	1
 30818  00E42E  0101               	movlb	1	; () banked
 30819  00E430  6F5B               	movwf	_MSDCBWValid& (0+255),b
 30820                           
 30821                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 30822  00E432  0102               	movlb	2	; () banked
 30823  00E434  510D               	movf	(_gblCBW+13)& (0+255),w,b
 30824  00E436  A4D8               	btfss	status,2,c
 30825  00E438  D055               	goto	l578
 30826                           
 30827                           ; BSR set to: 2
 30828  00E43A  0E11               	movlw	17
 30829  00E43C  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 30830  00E43E  D052               	goto	l578
 30831                           
 30832                           ; BSR set to: 2
 30833  00E440  510E               	movf	(_gblCBW+14)& (0+255),w,b
 30834  00E442  B4D8               	btfsc	status,2,c
 30835  00E444  D04F               	goto	l578
 30836                           
 30837                           ; BSR set to: 2
 30838  00E446  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 30839  00E44A  0E3F               	movlw	63
 30840  00E44C  0100               	movlb	0	; () banked
 30841  00E44E  17AC               	andwf	??_MSDTasks& (0+255),f,b
 30842  00E450  A4D8               	btfss	status,2,c
 30843  00E452  D048               	goto	l578
 30844                           
 30845                           ; BSR set to: 0
 30846                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 30847  00E454  0E55               	movlw	85
 30848  00E456  010D               	movlb	13	; () banked
 30849  00E458  6F80               	movwf	128,b	;volatile
 30850  00E45A  0E53               	movlw	83
 30851  00E45C  6F81               	movwf	129,b	;volatile
 30852  00E45E  0E42               	movlw	66
 30853  00E460  6F82               	movwf	130,b	;volatile
 30854  00E462  0E53               	movlw	83
 30855  00E464  6F83               	movwf	131,b	;volatile
 30856                           
 30857                           ; BSR set to: 13
 30858                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 30859  00E466  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 30860  00E46A  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 30861  00E46E  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 30862  00E472  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 30863                           
 30864                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 30865  00E476  0E00               	movlw	0
 30866  00E478  6F88               	movwf	136,b	;volatile
 30867  00E47A  0E00               	movlw	0
 30868  00E47C  6F89               	movwf	137,b	;volatile
 30869  00E47E  0E00               	movlw	0
 30870  00E480  6F8A               	movwf	138,b	;volatile
 30871  00E482  0E00               	movlw	0
 30872  00E484  6F8B               	movwf	139,b	;volatile
 30873                           
 30874                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 30875  00E486  0E00               	movlw	0
 30876  00E488  6F8C               	movwf	140,b	;volatile
 30877                           
 30878                           ; BSR set to: 13
 30879                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 30880  00E48A  0101               	movlb	1	; () banked
 30881  00E48C  6962               	setf	_MSDCommandState& (0+255),b
 30882                           
 30883                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 30884  00E48E  0E00               	movlw	0
 30885  00E490  6F61               	movwf	_MSDReadState& (0+255),b
 30886                           
 30887                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 30888  00E492  0E00               	movlw	0
 30889  00E494  6F60               	movwf	_MSDWriteState& (0+255),b
 30890                           
 30891                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 30892  00E496  0E00               	movlw	0
 30893  00E498  6F5F               	movwf	_MSDRetryAttempt& (0+255),b
 30894                           
 30895                           ; BSR set to: 1
 30896                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 30897  00E49A  0E03               	movlw	3
 30898  00E49C  0102               	movlb	2	; () banked
 30899  00E49E  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 30900  00E4A0  B4D8               	btfsc	status,2,c
 30901  00E4A2  D009               	goto	l579
 30902                           
 30903                           ; BSR set to: 2
 30904                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 30905  00E4A4  0101               	movlb	1	; () banked
 30906  00E4A6  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 30907  00E4A8  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 30908  00E4AA  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 30909  00E4AC  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 30910                           
 30911                           ; BSR set to: 1
 30912                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 30913  00E4AE  0E00               	movlw	0
 30914  00E4B0  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 30915                           
 30916                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 30917  00E4B2  0E00               	movlw	0
 30918  00E4B4  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 30919  00E4B6                     l579:
 30920                           
 30921                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 30922                           
 30923                           ; BSR set to: 1
 30924  00E4B6  0102               	movlb	2	; () banked
 30925  00E4B8  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 30926  00E4BA  D002               	goto	l580
 30927                           
 30928                           ; BSR set to: 2
 30929                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 30930  00E4BC  0E01               	movlw	1
 30931  00E4BE  D001               	goto	L44
 30932  00E4C0                     l580:
 30933                           
 30934                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 30935                           
 30936                           ; BSR set to: 1
 30937  00E4C0  0E02               	movlw	2
 30938  00E4C2                     L44:
 30939  00E4C2  0101               	movlb	1	; () banked
 30940  00E4C4  6F63               	movwf	_MSD_State& (0+255),b
 30941                           
 30942                           ; BSR set to: 1
 30943                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 30944                           
 30945                           ; BSR set to: 1
 30946  00E4C6  0102               	movlb	2	; () banked
 30947  00E4C8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 30948  00E4CA  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 30949  00E4CC  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 30950  00E4CE  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 30951  00E4D0  B4D8               	btfsc	status,2,c
 30952  00E4D2  D002               	goto	l582
 30953                           
 30954                           ; BSR set to: 2
 30955                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 30956  00E4D4  0E00               	movlw	0
 30957  00E4D6  D001               	goto	L45
 30958  00E4D8                     l582:
 30959                           
 30960                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 30961                           
 30962                           ; BSR set to: 1
 30963  00E4D8  0E01               	movlw	1
 30964  00E4DA                     L45:
 30965  00E4DA  0101               	movlb	1	; () banked
 30966  00E4DC  6F5C               	movwf	_MSDHostNoData& (0+255),b
 30967                           
 30968                           ; BSR set to: 1
 30969                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 30970                           
 30971                           ; BSR set to: 1
 30972  00E4DE  C20F  F162         	movff	_gblCBW+15,_MSDCommandState
 30973                           
 30974                           ;usb_device_msd.c: 454: }
 30975  00E4E2  D092               	goto	l586
 30976  00E4E4                     l578:
 30977                           
 30978                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 30979                           
 30980                           ; BSR set to: 1
 30981  00E4E4  0E01               	movlw	1
 30982  00E4E6  0100               	movlb	0	; () banked
 30983  00E4E8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 30984  00E4EA  0E02               	movlw	2
 30985  00E4EC  ECD9  F085         	call	_USBStallEndpoint
 30986                           
 30987                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 30988  00E4F0  0E00               	movlw	0
 30989  00E4F2  0100               	movlb	0	; () banked
 30990  00E4F4  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 30991  00E4F6  0E02               	movlw	2
 30992  00E4F8  ECD9  F085         	call	_USBStallEndpoint
 30993                           
 30994                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 30995  00E4FC  D085               	goto	l586
 30996  00E4FE                     l577:
 30997                           
 30998                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 30999  00E4FE  0E01               	movlw	1
 31000  00E500  0100               	movlb	0	; () banked
 31001  00E502  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31002  00E504  0E02               	movlw	2
 31003  00E506  ECD9  F085         	call	_USBStallEndpoint
 31004                           
 31005                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 31006  00E50A  0E00               	movlw	0
 31007  00E50C  0100               	movlb	0	; () banked
 31008  00E50E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31009  00E510  0E02               	movlw	2
 31010  00E512  ECD9  F085         	call	_USBStallEndpoint
 31011                           
 31012                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 31013  00E516  0E00               	movlw	0
 31014  00E518  0101               	movlb	1	; () banked
 31015  00E51A  6F5B               	movwf	_MSDCBWValid& (0+255),b
 31016                           
 31017                           ; BSR set to: 1
 31018                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 31019                           
 31020                           ; BSR set to: 1
 31021  00E51C  D075               	goto	l586
 31022  00E51E                     
 31023                           ; BSR set to: 1
 31024                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 31025                           
 31026                           ; BSR set to: 1
 31027  00E51E  EC68  F081         	call	_MSDProcessCommand	;wreg free
 31028  00E522  0AFF               	xorlw	255
 31029  00E524  A4D8               	btfss	status,2,c
 31030  00E526  D070               	goto	l586
 31031  00E528  D011               	goto	l591
 31032  00E52A                     
 31033                           ; BSR set to: 1
 31034                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 31035                           
 31036                           ; BSR set to: 1
 31037  00E52A  EC68  F081         	call	_MSDProcessCommand	;wreg free
 31038  00E52E  0AFF               	xorlw	255
 31039  00E530  A4D8               	btfss	status,2,c
 31040  00E532  D06A               	goto	l586
 31041                           
 31042                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 31043  00E534  010D               	movlb	13	; () banked
 31044  00E536  518C               	movf	140,w,b	;volatile
 31045  00E538  A4D8               	btfss	status,2,c
 31046  00E53A  D008               	goto	l591
 31047                           
 31048                           ; BSR set to: 13
 31049  00E53C  5188               	movf	136,w,b	;volatile
 31050  00E53E  1189               	iorwf	137,w,b	;volatile
 31051  00E540  118A               	iorwf	138,w,b	;volatile
 31052  00E542  118B               	iorwf	139,w,b	;volatile
 31053  00E544  B4D8               	btfsc	status,2,c
 31054  00E546  D002               	goto	l591
 31055                           
 31056                           ; BSR set to: 13
 31057                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 31058  00E548  0E02               	movlw	2
 31059  00E54A  6F8C               	movwf	140,b	;volatile
 31060  00E54C                     l591:
 31061                           
 31062                           ; BSR set to: 13
 31063                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 31064  00E54C  0E03               	movlw	3
 31065  00E54E  D03E               	goto	L43
 31066  00E550                     
 31067                           ; BSR set to: 1
 31068                           
 31069                           ; BSR set to: 1
 31070  00E550  C11F  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 31071  00E554  C120  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 31072                           
 31073                           ; BSR set to: 1
 31074                           
 31075                           ; BSR set to: 1
 31076                           
 31077                           ; BSR set to: 1
 31078  00E558  0100               	movlb	0	; () banked
 31079  00E55A  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 31080  00E55C  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 31081  00E55E  B4D8               	btfsc	status,2,c
 31082  00E560  D00A               	goto	l593
 31083                           
 31084                           ; BSR set to: 0
 31085  00E562  C11F  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 31086  00E566  C120  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 31087                           
 31088                           ; BSR set to: 0
 31089                           
 31090                           ; BSR set to: 0
 31091                           
 31092                           ; BSR set to: 0
 31093                           
 31094                           ; BSR set to: 0
 31095  00E56A  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 31096  00E56E  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 31097  00E572  BEDF               	btfsc	indf2,7,c
 31098  00E574  D049               	goto	l586
 31099  00E576                     l593:
 31100                           
 31101                           ; BSR set to: 0
 31102                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 31103                           
 31104                           ; BSR set to: 0
 31105  00E576  0E01               	movlw	1
 31106  00E578  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31107  00E57A  0E80               	movlw	128
 31108  00E57C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 31109  00E57E  0E0D               	movlw	13
 31110  00E580  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 31111  00E582  0E0D               	movlw	13
 31112  00E584  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 31113  00E586  0E02               	movlw	2
 31114  00E588  EC5E  F086         	call	_USBTransferOnePacket
 31115  00E58C  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 31116  00E590  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 31117                           
 31118                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 31119  00E594  0101               	movlb	1	; () banked
 31120  00E596  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 31121  00E598  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31122  00E59A  B4D8               	btfsc	status,2,c
 31123  00E59C  D006               	goto	u15870
 31124                           
 31125                           ; BSR set to: 1
 31126  00E59E  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31127  00E5A2  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31128  00E5A6  BEDF               	btfsc	indf2,7,c
 31129  00E5A8  D010               	goto	l602
 31130  00E5AA                     u15870:
 31131                           
 31132                           ; BSR set to: 1
 31133                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 31134                           
 31135                           ; BSR set to: 1
 31136  00E5AA  0E00               	movlw	0
 31137  00E5AC  0100               	movlb	0	; () banked
 31138  00E5AE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31139  00E5B0  0E40               	movlw	64
 31140  00E5B2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 31141  00E5B4  0E0D               	movlw	13
 31142  00E5B6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 31143  00E5B8  0E40               	movlw	64
 31144  00E5BA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 31145  00E5BC  0E02               	movlw	2
 31146  00E5BE  EC5E  F086         	call	_USBTransferOnePacket
 31147  00E5C2  C060  F14B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 31148  00E5C6  C061  F14C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 31149  00E5CA                     l602:
 31150                           
 31151                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 31152  00E5CA  0E00               	movlw	0
 31153  00E5CC                     L43:
 31154  00E5CC  0101               	movlb	1	; () banked
 31155  00E5CE  6F63               	movwf	_MSD_State& (0+255),b
 31156                           
 31157                           ;usb_device_msd.c: 513: break;
 31158  00E5D0  D01B               	goto	l586
 31159  00E5D2                     
 31160                           ; BSR set to: 1
 31161                           ;usb_device_msd.c: 518: MSD_State=0x00;
 31162                           
 31163                           ; BSR set to: 1
 31164  00E5D2  0E00               	movlw	0
 31165  00E5D4  6F63               	movwf	_MSD_State& (0+255),b
 31166                           
 31167                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 31168  00E5D6  0E02               	movlw	2
 31169  00E5D8  010D               	movlb	13	; () banked
 31170  00E5DA  6F8C               	movwf	140,b	;volatile
 31171                           
 31172                           ; BSR set to: 13
 31173                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 31174  00E5DC  0E00               	movlw	0
 31175  00E5DE  0100               	movlb	0	; () banked
 31176  00E5E0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31177  00E5E2  0E02               	movlw	2
 31178  00E5E4  ECD9  F085         	call	_USBStallEndpoint
 31179                           
 31180                           ;usb_device_msd.c: 521: }
 31181  00E5E8  D00F               	goto	l586
 31182  00E5EA                     l570:
 31183  00E5EA  0101               	movlb	1	; () banked
 31184  00E5EC  5163               	movf	_MSD_State& (0+255),w,b
 31185                           
 31186                           ; Switch size 1, requested type "space"
 31187                           ; Number of cases is 4, Range of values is 0 to 3
 31188                           ; switch strategies available:
 31189                           ; Name         Instructions Cycles
 31190                           ; simple_byte           13     7 (average)
 31191                           ;	Chosen strategy is simple_byte
 31192  00E5EE  0A00               	xorlw	0	; case 0
 31193  00E5F0  B4D8               	btfsc	status,2,c
 31194  00E5F2  D6DD               	goto	l571
 31195  00E5F4  0A01               	xorlw	1	; case 1
 31196  00E5F6  B4D8               	btfsc	status,2,c
 31197  00E5F8  D792               	goto	l587
 31198  00E5FA  0A03               	xorlw	3	; case 2
 31199  00E5FC  B4D8               	btfsc	status,2,c
 31200  00E5FE  D795               	goto	l589
 31201  00E600  0A01               	xorlw	1	; case 3
 31202  00E602  B4D8               	btfsc	status,2,c
 31203  00E604  D7A5               	goto	l592
 31204  00E606  D7E5               	goto	l605
 31205  00E608                     l586:
 31206                           
 31207                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 31208  00E608  88A0               	bsf	4000,4,c	;volatile
 31209                           
 31210                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 31211  00E60A  0012               	return		;funcret
 31212  00E60C                     __end_of_MSDTasks:
 31213                           	opt stack 0
 31214                           tblptru	equ	0xFF8
 31215                           tblptrh	equ	0xFF7
 31216                           tblptrl	equ	0xFF6
 31217                           tablat	equ	0xFF5
 31218                           prodh	equ	0xFF4
 31219                           prodl	equ	0xFF3
 31220                           intcon	equ	0xFF2
 31221                           postinc0	equ	0xFEE
 31222                           wreg	equ	0xFE8
 31223                           indf1	equ	0xFE7
 31224                           postinc1	equ	0xFE6
 31225                           postdec1	equ	0xFE5
 31226                           plusw1	equ	0xFE3
 31227                           fsr1h	equ	0xFE2
 31228                           fsr1l	equ	0xFE1
 31229                           indf2	equ	0xFDF
 31230                           postinc2	equ	0xFDE
 31231                           postdec2	equ	0xFDD
 31232                           plusw2	equ	0xFDB
 31233                           fsr2h	equ	0xFDA
 31234                           fsr2l	equ	0xFD9
 31235                           status	equ	0xFD8
 31236                           
 31237 ;; *************** function _MSDProcessCommand *****************
 31238 ;; Defined at:
 31239 ;;		line 553 in file "usb_device_msd.c"
 31240 ;; Parameters:    Size  Location     Type
 31241 ;;		None
 31242 ;; Auto vars:     Size  Location     Type
 31243 ;;		None
 31244 ;; Return value:  Size  Location     Type
 31245 ;;                  1    wreg      unsigned char 
 31246 ;; Registers used:
 31247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31248 ;; Tracked objects:
 31249 ;;		On entry : 0/0
 31250 ;;		On exit  : 0/0
 31251 ;;		Unchanged: 0/0
 31252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31255 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31256 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31257 ;;Total ram usage:        5 bytes
 31258 ;; Hardware stack levels used:    1
 31259 ;; Hardware stack levels required when called:   19
 31260 ;; This function calls:
 31261 ;;		_ExternalFlash_MediaDetect
 31262 ;;		_ExternalFlash_MediaInitialize
 31263 ;;		_MSDProcessCommandMediaAbsent
 31264 ;;		_MSDProcessCommandMediaPresent
 31265 ;; This function is called by:
 31266 ;;		_MSDTasks
 31267 ;; This function uses a non-reentrant model
 31268 ;;
 31269                           
 31270                           	psect	text125
 31271  0102D0                     __ptext125:
 31272                           	opt stack 0
 31273  0102D0                     _MSDProcessCommand:
 31274                           	opt stack 9
 31275                           
 31276                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 31277                           
 31278                           ;incstack = 0
 31279  0102D0  C29E  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 31280  0102D4  C29F  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 31281  0102D8  EE22  F092         	lfsr	2,_LUN+9
 31282  0102DC  D801               	call	u13998
 31283  0102DE  D00A               	goto	u13999
 31284  0102E0                     u13998:
 31285  0102E0  0005               	push	
 31286  0102E2  6EFA               	movwf	pclath,c
 31287  0102E4  50DE               	movf	postinc2,w,c
 31288  0102E6  6EFD               	movwf	tosl,c
 31289  0102E8  50DE               	movf	postinc2,w,c
 31290  0102EA  6EFE               	movwf	tosh,c
 31291  0102EC  50DE               	movf	postinc2,w,c
 31292  0102EE  6EFF               	movwf	tosu,c
 31293  0102F0  50FA               	movf	pclath,w,c
 31294  0102F2  0012               	return		;indir
 31295  0102F4                     u13999:
 31296  0102F4  0900               	iorlw	0
 31297  0102F6  B4D8               	btfsc	status,2,c
 31298  0102F8  D00C               	goto	u14010
 31299  0102FA  0102               	movlb	2	; () banked
 31300  0102FC  510D               	movf	(_gblCBW+13)& (0+255),w,b
 31301  0102FE  0D01               	mullw	1
 31302  010300  0E5D               	movlw	low _SoftDetach
 31303  010302  24F3               	addwf	prodl,w,c
 31304  010304  6ED9               	movwf	fsr2l,c
 31305  010306  0E01               	movlw	high _SoftDetach
 31306  010308  20F4               	addwfc	prodh,w,c
 31307  01030A  6EDA               	movwf	fsr2h,c
 31308  01030C  04DE               	decf	postinc2,w,c
 31309  01030E  A4D8               	btfss	status,2,c
 31310  010310  D01D               	goto	l608
 31311  010312                     u14010:
 31312                           
 31313                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 31314                           
 31315                           ; BSR set to: 2
 31316  010312  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31317  010316  0E01               	movlw	1
 31318  010318  0100               	movlb	0	; () banked
 31319  01031A  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31320  01031C  0E00               	movlw	0
 31321  01031E  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31322  010320  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31323  010322  D003               	goto	u14024
 31324  010324                     u14025:
 31325  010324  90D8               	bcf	status,0,c
 31326  010326  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31327  010328  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31328  01032A                     u14024:
 31329  01032A  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31330  01032C  D7FB               	goto	u14025
 31331  01032E  0100               	movlb	0	; () banked
 31332  010330  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 31333  010332  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 31334  010334  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 31335  010336  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 31336  010338  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 31337  01033A  0101               	movlb	1	; () banked
 31338  01033C  1747               	andwf	_gblMediaPresent& (0+255),f,b
 31339  01033E  0100               	movlb	0	; () banked
 31340  010340  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 31341  010342  0101               	movlb	1	; () banked
 31342  010344  1748               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 31343                           
 31344                           ; BSR set to: 1
 31345                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 31346  010346  EC0B  F0A0         	call	_MSDProcessCommandMediaAbsent	;wreg free
 31347                           
 31348                           ;usb_device_msd.c: 563: }
 31349  01034A  D058               	goto	l615
 31350  01034C                     l608:
 31351                           
 31352                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 31353  01034C  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31354  010350  0E01               	movlw	1
 31355  010352  0100               	movlb	0	; () banked
 31356  010354  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31357  010356  0E00               	movlw	0
 31358  010358  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31359  01035A  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31360  01035C  D003               	goto	u14034
 31361  01035E                     u14035:
 31362  01035E  90D8               	bcf	status,0,c
 31363  010360  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31364  010362  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31365  010364                     u14034:
 31366  010364  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31367  010366  D7FB               	goto	u14035
 31368  010368  0101               	movlb	1	; () banked
 31369  01036A  5147               	movf	_gblMediaPresent& (0+255),w,b
 31370  01036C  0100               	movlb	0	; () banked
 31371  01036E  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 31372  010370  0101               	movlb	1	; () banked
 31373  010372  5148               	movf	(_gblMediaPresent+1)& (0+255),w,b
 31374  010374  0100               	movlb	0	; () banked
 31375  010376  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 31376  010378  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 31377  01037A  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 31378  01037C  A4D8               	btfss	status,2,c
 31379  01037E  D03C               	goto	l612
 31380                           
 31381                           ; BSR set to: 0
 31382                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 31383  010380  C29E  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 31384  010384  C29F  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 31385  010388  D801               	call	u14058
 31386  01038A  D00B               	goto	u14059
 31387  01038C                     u14058:
 31388  01038C  0005               	push	
 31389  01038E  6EFA               	movwf	pclath,c
 31390  010390  0102               	movlb	2	; () banked
 31391  010392  5189               	movf	_LUN& (0+255),w,b
 31392  010394  6EFD               	movwf	tosl,c
 31393  010396  518A               	movf	(_LUN+1)& (0+255),w,b
 31394  010398  6EFE               	movwf	tosh,c
 31395  01039A  518B               	movf	(_LUN+2)& (0+255),w,b
 31396  01039C  6EFF               	movwf	tosu,c
 31397  01039E  50FA               	movf	pclath,w,c
 31398  0103A0  0012               	return		;indir
 31399  0103A2                     u14059:
 31400  0103A2  0100               	movlb	0	; () banked
 31401  0103A4  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 31402  0103A6  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 31403  0103A8  B4D8               	btfsc	status,2,c
 31404  0103AA  D023               	goto	l613
 31405                           
 31406                           ; BSR set to: 0
 31407                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 31408  0103AC  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31409  0103B0  0E01               	movlw	1
 31410  0103B2  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31411  0103B4  0E00               	movlw	0
 31412  0103B6  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31413  0103B8  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31414  0103BA  D003               	goto	u14074
 31415  0103BC                     u14075:
 31416  0103BC  90D8               	bcf	status,0,c
 31417  0103BE  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31418  0103C0  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31419  0103C2                     u14074:
 31420  0103C2  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31421  0103C4  D7FB               	goto	u14075
 31422  0103C6  0100               	movlb	0	; () banked
 31423  0103C8  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 31424  0103CA  0101               	movlb	1	; () banked
 31425  0103CC  1347               	iorwf	_gblMediaPresent& (0+255),f,b
 31426  0103CE  0100               	movlb	0	; () banked
 31427  0103D0  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 31428  0103D2  0101               	movlb	1	; () banked
 31429  0103D4  1348               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 31430                           
 31431                           ; BSR set to: 1
 31432                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 31433  0103D6  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 31434  0103D8  0BF0               	andlw	-16
 31435  0103DA  0906               	iorlw	6
 31436  0103DC  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 31437                           
 31438                           ; BSR set to: 1
 31439                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 31440  0103DE  0E28               	movlw	40
 31441  0103E0  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 31442                           
 31443                           ; BSR set to: 1
 31444                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 31445  0103E2  0E00               	movlw	0
 31446  0103E4  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 31447                           
 31448                           ; BSR set to: 1
 31449                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 31450  0103E6  0E01               	movlw	1
 31451  0103E8  010D               	movlb	13	; () banked
 31452  0103EA  6F8C               	movwf	140,b	;volatile
 31453                           
 31454                           ; BSR set to: 13
 31455                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 31456  0103EC  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 31457                           
 31458                           ;usb_device_msd.c: 589: }
 31459  0103F0  D005               	goto	l615
 31460  0103F2                     l613:
 31461                           
 31462                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 31463  0103F2  EC0B  F0A0         	call	_MSDProcessCommandMediaAbsent	;wreg free
 31464                           
 31465                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 31466  0103F6  D002               	goto	l615
 31467  0103F8                     l612:
 31468                           
 31469                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 31470  0103F8  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 31471  0103FC                     l615:
 31472                           
 31473                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 31474  0103FC  0101               	movlb	1	; () banked
 31475  0103FE  5162               	movf	_MSDCommandState& (0+255),w,b
 31476  010400  0012               	return	
 31477  010402                     __end_of_MSDProcessCommand:
 31478                           	opt stack 0
 31479                           tosu	equ	0xFFF
 31480                           tosh	equ	0xFFE
 31481                           tosl	equ	0xFFD
 31482                           pclath	equ	0xFFA
 31483                           tblptru	equ	0xFF8
 31484                           tblptrh	equ	0xFF7
 31485                           tblptrl	equ	0xFF6
 31486                           tablat	equ	0xFF5
 31487                           prodh	equ	0xFF4
 31488                           prodl	equ	0xFF3
 31489                           intcon	equ	0xFF2
 31490                           postinc0	equ	0xFEE
 31491                           wreg	equ	0xFE8
 31492                           indf1	equ	0xFE7
 31493                           postinc1	equ	0xFE6
 31494                           postdec1	equ	0xFE5
 31495                           plusw1	equ	0xFE3
 31496                           fsr1h	equ	0xFE2
 31497                           fsr1l	equ	0xFE1
 31498                           indf2	equ	0xFDF
 31499                           postinc2	equ	0xFDE
 31500                           postdec2	equ	0xFDD
 31501                           plusw2	equ	0xFDB
 31502                           fsr2h	equ	0xFDA
 31503                           fsr2l	equ	0xFD9
 31504                           status	equ	0xFD8
 31505                           
 31506 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 31507 ;; Defined at:
 31508 ;;		line 635 in file "usb_device_msd.c"
 31509 ;; Parameters:    Size  Location     Type
 31510 ;;		None
 31511 ;; Auto vars:     Size  Location     Type
 31512 ;;		None
 31513 ;; Return value:  Size  Location     Type
 31514 ;;                  1    wreg      void 
 31515 ;; Registers used:
 31516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31517 ;; Tracked objects:
 31518 ;;		On entry : 0/0
 31519 ;;		On exit  : 0/0
 31520 ;;		Unchanged: 0/0
 31521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31526 ;;Total ram usage:        0 bytes
 31527 ;; Hardware stack levels used:    1
 31528 ;; Hardware stack levels required when called:   18
 31529 ;; This function calls:
 31530 ;;		_MSDErrorHandler
 31531 ;;		_MSDProcessCommandMediaPresent
 31532 ;;		_ResetSenseData
 31533 ;; This function is called by:
 31534 ;;		_MSDProcessCommand
 31535 ;; This function uses a non-reentrant model
 31536 ;;
 31537                           
 31538                           	psect	text126
 31539  014016                     __ptext126:
 31540                           	opt stack 0
 31541  014016                     _MSDProcessCommandMediaAbsent:
 31542                           	opt stack 9
 31543                           
 31544                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 31545                           
 31546                           ; BSR set to: 1
 31547                           ;incstack = 0
 31548  014016  D01E               	goto	l619
 31549  014018                     
 31550                           ;usb_device_msd.c: 646: ResetSenseData();
 31551  014018  EC3C  F0A0         	call	_ResetSenseData	;wreg free
 31552                           
 31553                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 31554  01401C  0101               	movlb	1	; () banked
 31555  01401E  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 31556  014020  0BF0               	andlw	-16
 31557  014022  0902               	iorlw	2
 31558  014024  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 31559                           
 31560                           ; BSR set to: 1
 31561                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 31562  014026  0E3A               	movlw	58
 31563  014028  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 31564                           
 31565                           ; BSR set to: 1
 31566                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 31567  01402A  0E00               	movlw	0
 31568  01402C  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 31569                           
 31570                           ; BSR set to: 1
 31571                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 31572  01402E  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 31573                           
 31574                           ;usb_device_msd.c: 655: break;
 31575  014032  0012               	return	
 31576  014034                     
 31577                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 31578  014034  0E01               	movlw	1
 31579  014036  010D               	movlb	13	; () banked
 31580  014038  6F8C               	movwf	140,b	;volatile
 31581                           
 31582                           ; BSR set to: 13
 31583                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 31584  01403A  0101               	movlb	1	; () banked
 31585  01403C  6962               	setf	_MSDCommandState& (0+255),b
 31586                           
 31587                           ;usb_device_msd.c: 665: break;
 31588  01403E  0012               	return	
 31589  014040                     
 31590                           ; BSR set to: 1
 31591                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 31592                           
 31593                           ; BSR set to: 1
 31594  014040  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 31595                           
 31596                           ;usb_device_msd.c: 671: break;
 31597  014044  0012               	return	
 31598  014046                     
 31599                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 31600  014046  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 31601                           
 31602                           ;usb_device_msd.c: 677: break;
 31603  01404A  0012               	return	
 31604  01404C                     
 31605                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 31606  01404C  0E7F               	movlw	127
 31607  01404E  EC2C  F083         	call	_MSDErrorHandler
 31608                           
 31609                           ;usb_device_msd.c: 685: }
 31610                           
 31611                           ;usb_device_msd.c: 684: break;
 31612  014052  0012               	return	
 31613  014054                     l619:
 31614  014054  0101               	movlb	1	; () banked
 31615  014056  5162               	movf	_MSDCommandState& (0+255),w,b
 31616                           
 31617                           ; Switch size 1, requested type "space"
 31618                           ; Number of cases is 5, Range of values is 0 to 253
 31619                           ; switch strategies available:
 31620                           ; Name         Instructions Cycles
 31621                           ; simple_byte           16     9 (average)
 31622                           ;	Chosen strategy is simple_byte
 31623  014058  0A00               	xorlw	0	; case 0
 31624  01405A  B4D8               	btfsc	status,2,c
 31625  01405C  D7EB               	goto	l622
 31626  01405E  0A03               	xorlw	3	; case 3
 31627  014060  B4D8               	btfsc	status,2,c
 31628  014062  D7DA               	goto	l620
 31629  014064  0A11               	xorlw	17	; case 18
 31630  014066  B4D8               	btfsc	status,2,c
 31631  014068  D7EB               	goto	l624
 31632  01406A  0A0C               	xorlw	12	; case 30
 31633  01406C  B4D8               	btfsc	status,2,c
 31634  01406E  D7E2               	goto	l622
 31635  014070  0AE3               	xorlw	227	; case 253
 31636  014072  B4D8               	btfsc	status,2,c
 31637  014074  D7E8               	goto	l625
 31638  014076  D7EA               	goto	l626
 31639  014078                     __end_of_MSDProcessCommandMediaAbsent:
 31640                           	opt stack 0
 31641                           tosu	equ	0xFFF
 31642                           tosh	equ	0xFFE
 31643                           tosl	equ	0xFFD
 31644                           pclath	equ	0xFFA
 31645                           tblptru	equ	0xFF8
 31646                           tblptrh	equ	0xFF7
 31647                           tblptrl	equ	0xFF6
 31648                           tablat	equ	0xFF5
 31649                           prodh	equ	0xFF4
 31650                           prodl	equ	0xFF3
 31651                           intcon	equ	0xFF2
 31652                           postinc0	equ	0xFEE
 31653                           wreg	equ	0xFE8
 31654                           indf1	equ	0xFE7
 31655                           postinc1	equ	0xFE6
 31656                           postdec1	equ	0xFE5
 31657                           plusw1	equ	0xFE3
 31658                           fsr1h	equ	0xFE2
 31659                           fsr1l	equ	0xFE1
 31660                           indf2	equ	0xFDF
 31661                           postinc2	equ	0xFDE
 31662                           postdec2	equ	0xFDD
 31663                           plusw2	equ	0xFDB
 31664                           fsr2h	equ	0xFDA
 31665                           fsr2l	equ	0xFD9
 31666                           status	equ	0xFD8
 31667                           
 31668 ;; *************** function _MSDProcessCommandMediaPresent *****************
 31669 ;; Defined at:
 31670 ;;		line 712 in file "usb_device_msd.c"
 31671 ;; Parameters:    Size  Location     Type
 31672 ;;		None
 31673 ;; Auto vars:     Size  Location     Type
 31674 ;;  capacity        4   66[BANK0 ] struct .
 31675 ;;  sectorSize      4   62[BANK0 ] struct .
 31676 ;;  i               1   70[BANK0 ] unsigned char 
 31677 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 31678 ;; Return value:  Size  Location     Type
 31679 ;;                  1    wreg      void 
 31680 ;; Registers used:
 31681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31682 ;; Tracked objects:
 31683 ;;		On entry : 0/0
 31684 ;;		On exit  : 0/0
 31685 ;;		Unchanged: 0/0
 31686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31688 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31689 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31690 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31691 ;;Total ram usage:       14 bytes
 31692 ;; Hardware stack levels used:    1
 31693 ;; Hardware stack levels required when called:   17
 31694 ;; This function calls:
 31695 ;;		_ExternalFlash_CapacityRead
 31696 ;;		_ExternalFlash_SectorSizeRead
 31697 ;;		_ExternalFlash_WriteProtectStateGet
 31698 ;;		_MSDCheckForErrorCases
 31699 ;;		_MSDComputeDeviceInAndResidue
 31700 ;;		_MSDErrorHandler
 31701 ;;		_MSDReadHandler
 31702 ;;		_MSDWriteHandler
 31703 ;;		_ResetSenseData
 31704 ;;		_USBTransferOnePacket
 31705 ;;		_memcpy
 31706 ;; This function is called by:
 31707 ;;		_MSDProcessCommand
 31708 ;;		_MSDProcessCommandMediaAbsent
 31709 ;; This function uses a non-reentrant model
 31710 ;;
 31711                           
 31712                           	psect	text127
 31713  00BDBC                     __ptext127:
 31714                           	opt stack 0
 31715  00BDBC                     _MSDProcessCommandMediaPresent:
 31716                           	opt stack 10
 31717                           
 31718                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 31719                           
 31720                           ;incstack = 0
 31721  00BDBC  D1D0               	goto	l630
 31722  00BDBE                     
 31723                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 31724  00BDBE  EC3D  F077         	call	_MSDReadHandler	;wreg free
 31725  00BDC2  0900               	iorlw	0
 31726  00BDC4  A4D8               	btfss	status,2,c
 31727  00BDC6  0012               	return	
 31728                           
 31729                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 31730  00BDC8  0101               	movlb	1	; () banked
 31731  00BDCA  6962               	setf	_MSDCommandState& (0+255),b
 31732                           
 31733                           ; BSR set to: 1
 31734                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 31735  00BDCC  0012               	return	
 31736  00BDCE                     
 31737                           ; BSR set to: 1
 31738                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 31739                           
 31740                           ; BSR set to: 1
 31741  00BDCE  EC1B  F06B         	call	_MSDWriteHandler	;wreg free
 31742  00BDD2  0900               	iorlw	0
 31743  00BDD4  A4D8               	btfss	status,2,c
 31744  00BDD6  0012               	return	
 31745                           
 31746                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 31747  00BDD8  0101               	movlb	1	; () banked
 31748  00BDDA  6962               	setf	_MSDCommandState& (0+255),b
 31749                           
 31750                           ; BSR set to: 1
 31751                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 31752  00BDDC  0012               	return	
 31753  00BDDE                     
 31754                           ; BSR set to: 1
 31755                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 31756                           
 31757                           ; BSR set to: 1
 31758  00BDDE  055C               	decf	_MSDHostNoData& (0+255),w,b
 31759  00BDE0  A4D8               	btfss	status,2,c
 31760  00BDE2  D002               	goto	l637
 31761                           
 31762                           ; BSR set to: 1
 31763                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 31764  00BDE4  6962               	setf	_MSDCommandState& (0+255),b
 31765                           
 31766                           ;usb_device_msd.c: 751: break;
 31767  00BDE6  0012               	return	
 31768  00BDE8                     l637:
 31769                           
 31770                           ; BSR set to: 1
 31771                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 31772  00BDE8  C212  F146         	movff	_gblCBW+18,_TransferLength+1
 31773                           
 31774                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 31775  00BDEC  C213  F145         	movff	_gblCBW+19,_TransferLength
 31776                           
 31777                           ; BSR set to: 1
 31778                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 31779  00BDF0  C145  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 31780  00BDF4  C146  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 31781  00BDF8  0100               	movlb	0	; () banked
 31782  00BDFA  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 31783  00BDFC  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 31784  00BDFE  ECB9  F083         	call	_MSDCheckForErrorCases	;wreg free
 31785  00BE02  0900               	iorlw	0
 31786  00BE04  A4D8               	btfss	status,2,c
 31787  00BE06  0012               	return	
 31788                           
 31789                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 31790                           
 31791                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 31792  00BE08  0E00               	movlw	0
 31793  00BE0A  0100               	movlb	0	; () banked
 31794  00BE0C  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 31795  00BE0E  0E24               	movlw	36
 31796  00BE10  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 31797  00BE12  ECCD  F093         	call	_MSDComputeDeviceInAndResidue	;wreg free
 31798                           
 31799                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 31800  00BE16  0E00               	movlw	0
 31801  00BE18  0100               	movlb	0	; () banked
 31802  00BE1A  6F60               	movwf	memcpy@d1& (0+255),b
 31803  00BE1C  0E06               	movlw	6
 31804  00BE1E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 31805  00BE20  0E60               	movlw	low _inq_resp
 31806  00BE22  6F62               	movwf	memcpy@s1& (0+255),b
 31807  00BE24  0EA1               	movlw	high _inq_resp
 31808  00BE26  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 31809  00BE28  0E00               	movlw	0
 31810  00BE2A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31811  00BE2C  0E24               	movlw	36
 31812  00BE2E  6F64               	movwf	memcpy@n& (0+255),b
 31813  00BE30  ECCF  F0A0         	call	_memcpy	;wreg free
 31814                           
 31815                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 31816  00BE34  0EFD               	movlw	253
 31817  00BE36  0101               	movlb	1	; () banked
 31818  00BE38  6F62               	movwf	_MSDCommandState& (0+255),b
 31819                           
 31820                           ;usb_device_msd.c: 773: break;
 31821  00BE3A  0012               	return	
 31822  00BE3C                     
 31823                           ; BSR set to: 1
 31824                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 31825                           
 31826                           ; BSR set to: 1
 31827  00BE3C  C29E  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 31828  00BE40  C29F  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 31829  00BE44  EE22  F08C         	lfsr	2,_LUN+3
 31830  00BE48  D801               	call	u12398
 31831  00BE4A  D00A               	goto	u12399
 31832  00BE4C                     u12398:
 31833  00BE4C  0005               	push	
 31834  00BE4E  6EFA               	movwf	pclath,c
 31835  00BE50  50DE               	movf	postinc2,w,c
 31836  00BE52  6EFD               	movwf	tosl,c
 31837  00BE54  50DE               	movf	postinc2,w,c
 31838  00BE56  6EFE               	movwf	tosh,c
 31839  00BE58  50DE               	movf	postinc2,w,c
 31840  00BE5A  6EFF               	movwf	tosu,c
 31841  00BE5C  50FA               	movf	pclath,w,c
 31842  00BE5E  0012               	return		;indir
 31843  00BE60                     u12399:
 31844  00BE60  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 31845  00BE64  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 31846  00BE68  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 31847  00BE6C  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 31848                           
 31849                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 31850  00BE70  C29E  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 31851  00BE74  C29F  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 31852  00BE78  EE22  F08F         	lfsr	2,_LUN+6
 31853  00BE7C  D801               	call	u12408
 31854  00BE7E  D00A               	goto	u12409
 31855  00BE80                     u12408:
 31856  00BE80  0005               	push	
 31857  00BE82  6EFA               	movwf	pclath,c
 31858  00BE84  50DE               	movf	postinc2,w,c
 31859  00BE86  6EFD               	movwf	tosl,c
 31860  00BE88  50DE               	movf	postinc2,w,c
 31861  00BE8A  6EFE               	movwf	tosh,c
 31862  00BE8C  50DE               	movf	postinc2,w,c
 31863  00BE8E  6EFF               	movwf	tosu,c
 31864  00BE90  50FA               	movf	pclath,w,c
 31865  00BE92  0012               	return		;indir
 31866  00BE94                     u12409:
 31867  00BE94  0100               	movlb	0	; () banked
 31868  00BE96  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 31869  00BE9A  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 31870  00BE9E  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 31871  00BEA0  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 31872                           
 31873                           ; BSR set to: 0
 31874                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 31875  00BEA2  EE26 F000          	lfsr	2,1536
 31876  00BEA6  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 31877                           
 31878                           ; BSR set to: 0
 31879                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 31880  00BEAA  EE26 F001          	lfsr	2,1537	;volatile
 31881  00BEAE  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 31882                           
 31883                           ; BSR set to: 0
 31884                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 31885  00BEB2  EE26 F002          	lfsr	2,1538	;volatile
 31886  00BEB6  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 31887                           
 31888                           ; BSR set to: 0
 31889                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 31890  00BEBA  EE26 F003          	lfsr	2,1539	;volatile
 31891  00BEBE  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 31892                           
 31893                           ; BSR set to: 0
 31894                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 31895  00BEC2  EE26 F004          	lfsr	2,1540	;volatile
 31896  00BEC6  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 31897                           
 31898                           ; BSR set to: 0
 31899                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 31900  00BECA  EE26 F005          	lfsr	2,1541	;volatile
 31901  00BECE  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 31902                           
 31903                           ; BSR set to: 0
 31904                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 31905  00BED2  EE26 F006          	lfsr	2,1542	;volatile
 31906  00BED6  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 31907                           
 31908                           ; BSR set to: 0
 31909                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 31910  00BEDA  EE26 F007          	lfsr	2,1543	;volatile
 31911  00BEDE  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 31912                           
 31913                           ; BSR set to: 0
 31914                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 31915  00BEE2  0E00               	movlw	0
 31916  00BEE4  0101               	movlb	1	; () banked
 31917  00BEE6  6F46               	movwf	(_TransferLength+1)& (0+255),b
 31918  00BEE8  0E08               	movlw	8
 31919  00BEEA  6F45               	movwf	_TransferLength& (0+255),b
 31920                           
 31921                           ; BSR set to: 1
 31922                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 31923  00BEEC  0E00               	movlw	0
 31924  00BEEE  0100               	movlb	0	; () banked
 31925  00BEF0  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 31926  00BEF2  0E08               	movlw	8
 31927  00BEF4  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 31928  00BEF6  ECCD  F093         	call	_MSDComputeDeviceInAndResidue	;wreg free
 31929                           
 31930                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 31931  00BEFA  0EFD               	movlw	253
 31932  00BEFC  0101               	movlb	1	; () banked
 31933  00BEFE  6F62               	movwf	_MSDCommandState& (0+255),b
 31934                           
 31935                           ;usb_device_msd.c: 802: break;
 31936  00BF00  0012               	return	
 31937  00BF02                     
 31938                           ; BSR set to: 1
 31939                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 31940                           
 31941                           ; BSR set to: 1
 31942  00BF02  055C               	decf	_MSDHostNoData& (0+255),w,b
 31943  00BF04  A4D8               	btfss	status,2,c
 31944  00BF06  D002               	goto	l641
 31945                           
 31946                           ; BSR set to: 1
 31947                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 31948  00BF08  6962               	setf	_MSDCommandState& (0+255),b
 31949                           
 31950                           ;usb_device_msd.c: 814: break;
 31951  00BF0A  0012               	return	
 31952  00BF0C                     l641:
 31953                           
 31954                           ; BSR set to: 1
 31955                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 31956                           
 31957                           ; BSR set to: 1
 31958  00BF0C  0E00               	movlw	0
 31959  00BF0E  6F46               	movwf	(_TransferLength+1)& (0+255),b
 31960  00BF10  0E12               	movlw	18
 31961  00BF12  6F45               	movwf	_TransferLength& (0+255),b
 31962                           
 31963                           ; BSR set to: 1
 31964                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 31965  00BF14  0E00               	movlw	0
 31966  00BF16  0100               	movlb	0	; () banked
 31967  00BF18  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 31968  00BF1A  0E12               	movlw	18
 31969  00BF1C  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 31970  00BF1E  ECCD  F093         	call	_MSDComputeDeviceInAndResidue	;wreg free
 31971                           
 31972                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 31973  00BF22  0E00               	movlw	0
 31974  00BF24  0100               	movlb	0	; () banked
 31975  00BF26  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 31976  00BF28                     l13624:
 31977                           
 31978                           ; BSR set to: 0
 31979  00BF28  0E11               	movlw	17
 31980  00BF2A  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 31981  00BF2C  D001               	goto	l642
 31982  00BF2E  D014               	goto	u12430
 31983  00BF30                     l642:
 31984                           
 31985                           ; BSR set to: 0
 31986                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 31987                           
 31988                           ; BSR set to: 0
 31989  00BF30  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 31990  00BF32  0D01               	mullw	1
 31991  00BF34  0E00               	movlw	low _gblSenseData
 31992  00BF36  24F3               	addwf	prodl,w,c
 31993  00BF38  6ED9               	movwf	fsr2l,c
 31994  00BF3A  0E01               	movlw	high _gblSenseData
 31995  00BF3C  20F4               	addwfc	prodh,w,c
 31996  00BF3E  6EDA               	movwf	fsr2h,c
 31997  00BF40  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 31998  00BF42  0D01               	mullw	1
 31999  00BF44  0E00               	movlw	0
 32000  00BF46  24F3               	addwf	prodl,w,c
 32001  00BF48  6EE1               	movwf	fsr1l,c
 32002  00BF4A  0E06               	movlw	6
 32003  00BF4C  20F4               	addwfc	prodh,w,c
 32004  00BF4E  6EE2               	movwf	fsr1h,c
 32005  00BF50  CFDF FFE7          	movff	indf2,indf1
 32006                           
 32007                           ; BSR set to: 0
 32008  00BF54  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 32009  00BF56  D7E8               	goto	l13624
 32010  00BF58                     u12430:
 32011                           
 32012                           ; BSR set to: 0
 32013                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 32014                           
 32015                           ; BSR set to: 0
 32016  00BF58  0EFD               	movlw	253
 32017  00BF5A  0101               	movlb	1	; () banked
 32018  00BF5C  6F62               	movwf	_MSDCommandState& (0+255),b
 32019                           
 32020                           ;usb_device_msd.c: 827: break;
 32021  00BF5E  0012               	return	
 32022  00BF60                     l644:
 32023                           
 32024                           ; BSR set to: 1
 32025                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 32026  00BF60  0E03               	movlw	3
 32027  00BF62  CFE8 F600          	movff	wreg,1536
 32028                           
 32029                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 32030  00BF66  0E00               	movlw	0
 32031  00BF68  CFE8 F601          	movff	wreg,1537	;volatile
 32032                           
 32033                           ; BSR set to: 1
 32034                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 32035  00BF6C  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 32036  00BF70  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 32037  00BF74  EE22  F098         	lfsr	2,_LUN+15
 32038  00BF78  D801               	call	u12448
 32039  00BF7A  D00A               	goto	u12449
 32040  00BF7C                     u12448:
 32041  00BF7C  0005               	push	
 32042  00BF7E  6EFA               	movwf	pclath,c
 32043  00BF80  50DE               	movf	postinc2,w,c
 32044  00BF82  6EFD               	movwf	tosl,c
 32045  00BF84  50DE               	movf	postinc2,w,c
 32046  00BF86  6EFE               	movwf	tosh,c
 32047  00BF88  50DE               	movf	postinc2,w,c
 32048  00BF8A  6EFF               	movwf	tosu,c
 32049  00BF8C  50FA               	movf	pclath,w,c
 32050  00BF8E  0012               	return		;indir
 32051  00BF90                     u12449:
 32052  00BF90  0900               	iorlw	0
 32053  00BF92  A4D8               	btfss	status,2,c
 32054  00BF94  D005               	goto	l646
 32055  00BF96  0E00               	movlw	0
 32056  00BF98  0100               	movlb	0	; () banked
 32057  00BF9A  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 32058  00BF9C  0E00               	movlw	0
 32059  00BF9E  D004               	goto	L46
 32060  00BFA0                     l646:
 32061                           
 32062                           ; BSR set to: 0
 32063  00BFA0  0E00               	movlw	0
 32064  00BFA2  0100               	movlb	0	; () banked
 32065  00BFA4  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 32066  00BFA6  0E80               	movlw	128
 32067  00BFA8                     L46:
 32068  00BFA8  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 32069                           
 32070                           ; BSR set to: 0
 32071                           
 32072                           ; BSR set to: 0
 32073  00BFAA  EE26 F002          	lfsr	2,1538	;volatile
 32074  00BFAE  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 32075                           
 32076                           ; BSR set to: 0
 32077                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 32078  00BFB2  0E00               	movlw	0
 32079  00BFB4  CFE8 F603          	movff	wreg,1539	;volatile
 32080                           
 32081                           ; BSR set to: 0
 32082                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 32083  00BFB8  0E00               	movlw	0
 32084  00BFBA  0101               	movlb	1	; () banked
 32085  00BFBC  6F46               	movwf	(_TransferLength+1)& (0+255),b
 32086  00BFBE  0E04               	movlw	4
 32087  00BFC0  6F45               	movwf	_TransferLength& (0+255),b
 32088                           
 32089                           ; BSR set to: 1
 32090                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 32091  00BFC2  0E00               	movlw	0
 32092  00BFC4  0100               	movlb	0	; () banked
 32093  00BFC6  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32094  00BFC8  0E04               	movlw	4
 32095  00BFCA  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32096  00BFCC  ECCD  F093         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32097                           
 32098                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 32099  00BFD0  0EFD               	movlw	253
 32100  00BFD2  0101               	movlb	1	; () banked
 32101  00BFD4  6F62               	movwf	_MSDCommandState& (0+255),b
 32102                           
 32103                           ;usb_device_msd.c: 839: break;
 32104  00BFD6  0012               	return	
 32105  00BFD8                     
 32106                           ; BSR set to: 1
 32107                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 32108                           
 32109                           ; BSR set to: 1
 32110  00BFD8  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32111  00BFDA  0BF0               	andlw	-16
 32112  00BFDC  0905               	iorlw	5
 32113  00BFDE  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32114                           
 32115                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 32116  00BFE0  0E20               	movlw	32
 32117  00BFE2  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32118                           
 32119                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 32120  00BFE4  0E00               	movlw	0
 32121  00BFE6  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32122                           
 32123                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 32124  00BFE8  0E01               	movlw	1
 32125  00BFEA  010D               	movlb	13	; () banked
 32126  00BFEC  6F8C               	movwf	140,b	;volatile
 32127                           
 32128                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 32129  00BFEE  0E00               	movlw	0
 32130  00BFF0  6F88               	movwf	136,b	;volatile
 32131  00BFF2  0E00               	movlw	0
 32132  00BFF4  6F89               	movwf	137,b	;volatile
 32133  00BFF6  0E00               	movlw	0
 32134  00BFF8  6F8A               	movwf	138,b	;volatile
 32135  00BFFA  0E00               	movlw	0
 32136  00BFFC  6F8B               	movwf	139,b	;volatile
 32137                           
 32138                           ; BSR set to: 13
 32139                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 32140  00BFFE  0101               	movlb	1	; () banked
 32141  00C000  6962               	setf	_MSDCommandState& (0+255),b
 32142                           
 32143                           ;usb_device_msd.c: 848: break;
 32144  00C002  0012               	return	
 32145  00C004                     
 32146                           ; BSR set to: 1
 32147                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 32148                           
 32149                           ; BSR set to: 1
 32150  00C004  0E00               	movlw	0
 32151  00C006  0100               	movlb	0	; () banked
 32152  00C008  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 32153  00C00A  0E00               	movlw	0
 32154  00C00C  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 32155  00C00E  0E00               	movlw	0
 32156  00C010  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 32157  00C012  0E00               	movlw	0
 32158  00C014  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 32159  00C016  ECB9  F083         	call	_MSDCheckForErrorCases	;wreg free
 32160  00C01A  0900               	iorlw	0
 32161  00C01C  A4D8               	btfss	status,2,c
 32162  00C01E  0012               	return	
 32163                           
 32164                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 32165                           
 32166                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 32167  00C020  0101               	movlb	1	; () banked
 32168  00C022  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32169  00C024  0B0F               	andlw	15
 32170  00C026  0A06               	xorlw	6
 32171  00C028  A4D8               	btfss	status,2,c
 32172  00C02A  D007               	goto	l652
 32173                           
 32174                           ; BSR set to: 1
 32175  00C02C  010D               	movlb	13	; () banked
 32176  00C02E  058C               	decf	140,w,b	;volatile
 32177  00C030  A4D8               	btfss	status,2,c
 32178  00C032  D003               	goto	l652
 32179                           
 32180                           ; BSR set to: 13
 32181                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 32182  00C034  0101               	movlb	1	; () banked
 32183  00C036  6962               	setf	_MSDCommandState& (0+255),b
 32184                           
 32185                           ;usb_device_msd.c: 870: }
 32186  00C038  0012               	return	
 32187  00C03A                     l652:
 32188                           
 32189                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 32190                           
 32191                           ; BSR set to: 1
 32192  00C03A  EC3C  F0A0         	call	_ResetSenseData	;wreg free
 32193                           
 32194                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 32195  00C03E  0E00               	movlw	0
 32196  00C040  010D               	movlb	13	; () banked
 32197  00C042  6F88               	movwf	136,b	;volatile
 32198  00C044  0E00               	movlw	0
 32199  00C046  6F89               	movwf	137,b	;volatile
 32200  00C048  0E00               	movlw	0
 32201  00C04A  6F8A               	movwf	138,b	;volatile
 32202  00C04C  0E00               	movlw	0
 32203  00C04E  6F8B               	movwf	139,b	;volatile
 32204                           
 32205                           ; BSR set to: 13
 32206                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 32207  00C050  0101               	movlb	1	; () banked
 32208  00C052  6962               	setf	_MSDCommandState& (0+255),b
 32209                           
 32210                           ; BSR set to: 1
 32211                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 32212  00C054  0012               	return	
 32213  00C056                     
 32214                           ; BSR set to: 1
 32215                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 32216                           
 32217                           ; BSR set to: 1
 32218                           
 32219                           ; BSR set to: 1
 32220  00C056  0E00               	movlw	0
 32221  00C058  010D               	movlb	13	; () banked
 32222  00C05A  6F88               	movwf	136,b	;volatile
 32223  00C05C  0E00               	movlw	0
 32224  00C05E  6F89               	movwf	137,b	;volatile
 32225  00C060  0E00               	movlw	0
 32226  00C062  6F8A               	movwf	138,b	;volatile
 32227  00C064  0E00               	movlw	0
 32228  00C066  6F8B               	movwf	139,b	;volatile
 32229                           
 32230                           ; BSR set to: 13
 32231                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 32232  00C068  0101               	movlb	1	; () banked
 32233  00C06A  6962               	setf	_MSDCommandState& (0+255),b
 32234                           
 32235                           ;usb_device_msd.c: 885: break;
 32236  00C06C  0012               	return	
 32237  00C06E                     
 32238                           ; BSR set to: 1
 32239                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 32240                           
 32241                           ; BSR set to: 1
 32242  00C06E  5149               	movf	_USBMSDInHandle& (0+255),w,b
 32243  00C070  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 32244  00C072  B4D8               	btfsc	status,2,c
 32245  00C074  D006               	goto	u12500
 32246                           
 32247                           ; BSR set to: 1
 32248  00C076  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 32249  00C07A  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 32250  00C07E  BEDF               	btfsc	indf2,7,c
 32251  00C080  0012               	return	
 32252  00C082                     u12500:
 32253                           
 32254                           ; BSR set to: 1
 32255                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 32256                           
 32257                           ; BSR set to: 1
 32258  00C082  0102               	movlb	2	; () banked
 32259  00C084  510B               	movf	(_gblCBW+11)& (0+255),w,b
 32260  00C086  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 32261  00C088  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 32262  00C08A  E104               	bnz	u12510
 32263  00C08C  0E40               	movlw	64
 32264  00C08E  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 32265  00C090  A0D8               	btfss	status,0,c
 32266  00C092  D00B               	goto	l660
 32267  00C094                     u12510:
 32268                           
 32269                           ; BSR set to: 2
 32270                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 32271  00C094  0E40               	movlw	64
 32272  00C096  0100               	movlb	0	; () banked
 32273  00C098  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 32274                           
 32275                           ; BSR set to: 0
 32276                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 32277  00C09A  0E40               	movlw	64
 32278  00C09C  0102               	movlb	2	; () banked
 32279  00C09E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 32280  00C0A0  0E00               	movlw	0
 32281  00C0A2  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 32282  00C0A4  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 32283  00C0A6  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 32284                           
 32285                           ;usb_device_msd.c: 900: }
 32286  00C0A8  D00A               	goto	l661
 32287  00C0AA                     l660:
 32288                           
 32289                           ; BSR set to: 2
 32290                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 32291  00C0AA  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 32292                           
 32293                           ; BSR set to: 2
 32294                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 32295  00C0AE  0E00               	movlw	0
 32296  00C0B0  6F08               	movwf	(_gblCBW+8)& (0+255),b
 32297  00C0B2  0E00               	movlw	0
 32298  00C0B4  6F09               	movwf	(_gblCBW+9)& (0+255),b
 32299  00C0B6  0E00               	movlw	0
 32300  00C0B8  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 32301  00C0BA  0E00               	movlw	0
 32302  00C0BC  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 32303  00C0BE                     l661:
 32304                           
 32305                           ; BSR set to: 2
 32306                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 32307                           
 32308                           ; BSR set to: 2
 32309  00C0BE  0100               	movlb	0	; () banked
 32310  00C0C0  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32311  00C0C2  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 32312  00C0C4  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 32313  00C0C6  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 32314  00C0C8  0101               	movlb	1	; () banked
 32315  00C0CA  5D45               	subwf	_TransferLength& (0+255),w,b
 32316  00C0CC  0100               	movlb	0	; () banked
 32317  00C0CE  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 32318  00C0D0  0101               	movlb	1	; () banked
 32319  00C0D2  5946               	subwfb	(_TransferLength+1)& (0+255),w,b
 32320  00C0D4  A0D8               	btfss	status,0,c
 32321  00C0D6  D007               	goto	l662
 32322                           
 32323                           ; BSR set to: 1
 32324                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 32325  00C0D8  0100               	movlb	0	; () banked
 32326  00C0DA  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32327  00C0DC  0101               	movlb	1	; () banked
 32328  00C0DE  5F45               	subwf	_TransferLength& (0+255),f,b
 32329  00C0E0  0E00               	movlw	0
 32330  00C0E2  5B46               	subwfb	(_TransferLength+1)& (0+255),f,b
 32331                           
 32332                           ;usb_device_msd.c: 918: }
 32333  00C0E4  D01E               	goto	u12540
 32334  00C0E6                     l662:
 32335                           
 32336                           ; BSR set to: 1
 32337                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 32338                           
 32339                           ; BSR set to: 1
 32340  00C0E6  0E00               	movlw	0
 32341  00C0E8  0100               	movlb	0	; () banked
 32342  00C0EA  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 32343  00C0EC  D016               	goto	l664
 32344  00C0EE                     
 32345                           ; BSR set to: 0
 32346                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 32347                           
 32348                           ; BSR set to: 0
 32349  00C0EE  0101               	movlb	1	; () banked
 32350  00C0F0  5145               	movf	_TransferLength& (0+255),w,b
 32351  00C0F2  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 32352  00C0F4  B4D8               	btfsc	status,2,c
 32353  00C0F6  D004               	goto	l666
 32354                           
 32355                           ; BSR set to: 1
 32356                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 32357  00C0F8  0745               	decf	_TransferLength& (0+255),f,b
 32358  00C0FA  A0D8               	btfss	status,0,c
 32359  00C0FC  0746               	decf	(_TransferLength+1)& (0+255),f,b
 32360                           
 32361                           ;usb_device_msd.c: 932: }
 32362  00C0FE  D00B               	goto	l667
 32363  00C100                     l666:
 32364                           
 32365                           ; BSR set to: 1
 32366                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 32367                           
 32368                           ; BSR set to: 1
 32369  00C100  0100               	movlb	0	; () banked
 32370  00C102  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32371  00C104  0D01               	mullw	1
 32372  00C106  0E00               	movlw	0
 32373  00C108  24F3               	addwf	prodl,w,c
 32374  00C10A  6ED9               	movwf	fsr2l,c
 32375  00C10C  0E06               	movlw	6
 32376  00C10E  20F4               	addwfc	prodh,w,c
 32377  00C110  6EDA               	movwf	fsr2h,c
 32378  00C112  0E00               	movlw	0
 32379  00C114  6EDF               	movwf	indf2,c
 32380  00C116                     l667:
 32381                           
 32382                           ; BSR set to: 0
 32383  00C116  0100               	movlb	0	; () banked
 32384  00C118  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 32385  00C11A                     l664:
 32386                           
 32387                           ; BSR set to: 0
 32388                           
 32389                           ; BSR set to: 0
 32390  00C11A  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32391  00C11C  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32392  00C11E  A0D8               	btfss	status,0,c
 32393  00C120  D7E6               	goto	l665
 32394  00C122                     u12540:
 32395                           
 32396                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 32397                           
 32398                           ; BSR set to: 0
 32399                           
 32400                           ; BSR set to: 0
 32401  00C122  0E01               	movlw	1
 32402  00C124  0100               	movlb	0	; () banked
 32403  00C126  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32404  00C128  0E00               	movlw	0
 32405  00C12A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32406  00C12C  0E06               	movlw	6
 32407  00C12E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32408  00C130  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 32409  00C134  0E02               	movlw	2
 32410  00C136  EC5E  F086         	call	_USBTransferOnePacket
 32411  00C13A  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 32412  00C13E  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 32413                           
 32414                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 32415  00C142  0102               	movlb	2	; () banked
 32416  00C144  5108               	movf	(_gblCBW+8)& (0+255),w,b
 32417  00C146  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 32418  00C148  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 32419  00C14A  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 32420  00C14C  A4D8               	btfss	status,2,c
 32421  00C14E  0012               	return	
 32422                           
 32423                           ; BSR set to: 2
 32424                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 32425  00C150  0101               	movlb	1	; () banked
 32426  00C152  6962               	setf	_MSDCommandState& (0+255),b
 32427                           
 32428                           ; BSR set to: 1
 32429                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 32430                           
 32431                           ; BSR set to: 1
 32432                           
 32433                           ;usb_device_msd.c: 949: break;
 32434  00C154  0012               	return	
 32435  00C156                     
 32436                           ; BSR set to: 1
 32437                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 32438                           
 32439                           ; BSR set to: 1
 32440                           
 32441                           ;usb_device_msd.c: 954: default:
 32442                           
 32443                           ; BSR set to: 1
 32444  00C156  0E7F               	movlw	127
 32445  00C158  EC2C  F083         	call	_MSDErrorHandler
 32446                           
 32447                           ;usb_device_msd.c: 960: }
 32448                           
 32449                           ;usb_device_msd.c: 959: break;
 32450  00C15C  0012               	return	
 32451  00C15E                     l630:
 32452  00C15E  0101               	movlb	1	; () banked
 32453  00C160  5162               	movf	_MSDCommandState& (0+255),w,b
 32454                           
 32455                           ; Switch size 1, requested type "space"
 32456                           ; Number of cases is 12, Range of values is 0 to 254
 32457                           ; switch strategies available:
 32458                           ; Name         Instructions Cycles
 32459                           ; simple_byte           37    19 (average)
 32460                           ;	Chosen strategy is simple_byte
 32461  00C162  0A00               	xorlw	0	; case 0
 32462  00C164  B4D8               	btfsc	status,2,c
 32463  00C166  D74E               	goto	l650
 32464  00C168  0A03               	xorlw	3	; case 3
 32465  00C16A  B4D8               	btfsc	status,2,c
 32466  00C16C  D6CA               	goto	l640
 32467  00C16E  0A11               	xorlw	17	; case 18
 32468  00C170  B4D8               	btfsc	status,2,c
 32469  00C172  D635               	goto	l636
 32470  00C174  0A08               	xorlw	8	; case 26
 32471  00C176  B4D8               	btfsc	status,2,c
 32472  00C178  D6F3               	goto	l644
 32473  00C17A  0A01               	xorlw	1	; case 27
 32474  00C17C  B4D8               	btfsc	status,2,c
 32475  00C17E  D76B               	goto	l654
 32476  00C180  0A05               	xorlw	5	; case 30
 32477  00C182  B4D8               	btfsc	status,2,c
 32478  00C184  D729               	goto	l649
 32479  00C186  0A3B               	xorlw	59	; case 37
 32480  00C188  B4D8               	btfsc	status,2,c
 32481  00C18A  D658               	goto	l639
 32482  00C18C  0A0D               	xorlw	13	; case 40
 32483  00C18E  B4D8               	btfsc	status,2,c
 32484  00C190  D616               	goto	l631
 32485  00C192  0A02               	xorlw	2	; case 42
 32486  00C194  B4D8               	btfsc	status,2,c
 32487  00C196  D61B               	goto	l634
 32488  00C198  0A05               	xorlw	5	; case 47
 32489  00C19A  B4D8               	btfsc	status,2,c
 32490  00C19C  D75C               	goto	l654
 32491  00C19E  0AD2               	xorlw	210	; case 253
 32492  00C1A0  B4D8               	btfsc	status,2,c
 32493  00C1A2  D765               	goto	l656
 32494  00C1A4  0A03               	xorlw	3	; case 254
 32495  00C1A6  D7D7               	goto	l670
 32496  00C1A8                     __end_of_MSDProcessCommandMediaPresent:
 32497                           	opt stack 0
 32498                           tosu	equ	0xFFF
 32499                           tosh	equ	0xFFE
 32500                           tosl	equ	0xFFD
 32501                           pclath	equ	0xFFA
 32502                           tblptru	equ	0xFF8
 32503                           tblptrh	equ	0xFF7
 32504                           tblptrl	equ	0xFF6
 32505                           tablat	equ	0xFF5
 32506                           prodh	equ	0xFF4
 32507                           prodl	equ	0xFF3
 32508                           intcon	equ	0xFF2
 32509                           postinc0	equ	0xFEE
 32510                           wreg	equ	0xFE8
 32511                           indf1	equ	0xFE7
 32512                           postinc1	equ	0xFE6
 32513                           postdec1	equ	0xFE5
 32514                           plusw1	equ	0xFE3
 32515                           fsr1h	equ	0xFE2
 32516                           fsr1l	equ	0xFE1
 32517                           indf2	equ	0xFDF
 32518                           postinc2	equ	0xFDE
 32519                           postdec2	equ	0xFDD
 32520                           plusw2	equ	0xFDB
 32521                           fsr2h	equ	0xFDA
 32522                           fsr2l	equ	0xFD9
 32523                           status	equ	0xFD8
 32524                           
 32525 ;; *************** function _MSDWriteHandler *****************
 32526 ;; Defined at:
 32527 ;;		line 1188 in file "usb_device_msd.c"
 32528 ;; Parameters:    Size  Location     Type
 32529 ;;		None
 32530 ;; Auto vars:     Size  Location     Type
 32531 ;;		None
 32532 ;; Return value:  Size  Location     Type
 32533 ;;                  1    wreg      unsigned char 
 32534 ;; Registers used:
 32535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32536 ;; Tracked objects:
 32537 ;;		On entry : 0/0
 32538 ;;		On exit  : 0/0
 32539 ;;		Unchanged: 0/0
 32540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32543 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32544 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32545 ;;Total ram usage:        5 bytes
 32546 ;; Hardware stack levels used:    1
 32547 ;; Hardware stack levels required when called:   16
 32548 ;; This function calls:
 32549 ;;		_ExternalFlash_SectorWrite
 32550 ;;		_ExternalFlash_WriteProtectStateGet
 32551 ;;		_MSDCheckForErrorCases
 32552 ;;		_USBStallEndpoint
 32553 ;;		_USBTransferOnePacket
 32554 ;; This function is called by:
 32555 ;;		_MSDProcessCommandMediaPresent
 32556 ;; This function uses a non-reentrant model
 32557 ;;
 32558                           
 32559                           	psect	text128
 32560  00D636                     __ptext128:
 32561                           	opt stack 0
 32562  00D636                     _MSDWriteHandler:
 32563                           	opt stack 10
 32564                           
 32565                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 32566                           
 32567                           ;incstack = 0
 32568  00D636  D160               	goto	l700
 32569  00D638                     l701:
 32570                           
 32571                           ; BSR set to: 1
 32572                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 32573  00D638  C211  F12E         	movff	_gblCBW+17,_LBA+3
 32574                           
 32575                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 32576  00D63C  C212  F12D         	movff	_gblCBW+18,_LBA+2
 32577                           
 32578                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 32579  00D640  C213  F12C         	movff	_gblCBW+19,_LBA+1
 32580                           
 32581                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 32582  00D644  C214  F12B         	movff	_gblCBW+20,_LBA
 32583                           
 32584                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 32585  00D648  C216  F146         	movff	_gblCBW+22,_TransferLength+1
 32586                           
 32587                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 32588  00D64C  C217  F145         	movff	_gblCBW+23,_TransferLength
 32589                           
 32590                           ; BSR set to: 1
 32591                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 32592  00D650  5145               	movf	_TransferLength& (0+255),w,b
 32593  00D652  0100               	movlb	0	; () banked
 32594  00D654  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 32595  00D656  0101               	movlb	1	; () banked
 32596  00D658  5146               	movf	(_TransferLength+1)& (0+255),w,b
 32597  00D65A  0100               	movlb	0	; () banked
 32598  00D65C  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 32599  00D65E  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 32600  00D660  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 32601  00D662  0E09               	movlw	9
 32602  00D664                     u11325:
 32603  00D664  90D8               	bcf	status,0,c
 32604  00D666  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 32605  00D668  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 32606  00D66A  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 32607  00D66C  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 32608  00D66E  2EE8               	decfsz	wreg,f,c
 32609  00D670  D7F9               	goto	u11325
 32610  00D672  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 32611  00D676  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 32612  00D67A  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 32613  00D67E  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 32614  00D682  ECB9  F083         	call	_MSDCheckForErrorCases	;wreg free
 32615  00D686  0900               	iorlw	0
 32616  00D688  A4D8               	btfss	status,2,c
 32617  00D68A  D148               	goto	l703
 32618                           
 32619                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 32620                           
 32621                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 32622  00D68C  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 32623  00D690  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 32624  00D694  EE22  F098         	lfsr	2,_LUN+15
 32625  00D698  D801               	call	u11348
 32626  00D69A  D00A               	goto	u11349
 32627  00D69C                     u11348:
 32628  00D69C  0005               	push	
 32629  00D69E  6EFA               	movwf	pclath,c
 32630  00D6A0  50DE               	movf	postinc2,w,c
 32631  00D6A2  6EFD               	movwf	tosl,c
 32632  00D6A4  50DE               	movf	postinc2,w,c
 32633  00D6A6  6EFE               	movwf	tosh,c
 32634  00D6A8  50DE               	movf	postinc2,w,c
 32635  00D6AA  6EFF               	movwf	tosu,c
 32636  00D6AC  50FA               	movf	pclath,w,c
 32637  00D6AE  0012               	return		;indir
 32638  00D6B0                     u11349:
 32639  00D6B0  0900               	iorlw	0
 32640  00D6B2  B4D8               	btfsc	status,2,c
 32641  00D6B4  D017               	goto	l704
 32642                           
 32643                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 32644  00D6B6  0E01               	movlw	1
 32645  00D6B8  010D               	movlb	13	; () banked
 32646  00D6BA  6F8C               	movwf	140,b	;volatile
 32647                           
 32648                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 32649  00D6BC  0101               	movlb	1	; () banked
 32650  00D6BE  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32651  00D6C0  0BF0               	andlw	-16
 32652  00D6C2  0907               	iorlw	7
 32653  00D6C4  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32654                           
 32655                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 32656  00D6C6  0E27               	movlw	39
 32657  00D6C8  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32658                           
 32659                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 32660  00D6CA  0E00               	movlw	0
 32661  00D6CC  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32662                           
 32663                           ; BSR set to: 1
 32664                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 32665  00D6CE  0E00               	movlw	0
 32666  00D6D0  0100               	movlb	0	; () banked
 32667  00D6D2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32668  00D6D4  0E02               	movlw	2
 32669  00D6D6  ECD9  F085         	call	_USBStallEndpoint
 32670                           
 32671                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 32672  00D6DA  0E00               	movlw	0
 32673  00D6DC  0101               	movlb	1	; () banked
 32674  00D6DE  6F60               	movwf	_MSDWriteState& (0+255),b
 32675                           
 32676                           ; BSR set to: 1
 32677                           ;usb_device_msd.c: 1228: return MSDWriteState;
 32678  00D6E0  5160               	movf	_MSDWriteState& (0+255),w,b
 32679                           
 32680                           ; BSR set to: 1
 32681  00D6E2  0012               	return	
 32682  00D6E4                     l704:
 32683                           
 32684                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 32685                           
 32686                           ; BSR set to: 1
 32687  00D6E4  0E01               	movlw	1
 32688  00D6E6  0101               	movlb	1	; () banked
 32689  00D6E8  6F63               	movwf	_MSD_State& (0+255),b
 32690  00D6EA                     
 32691                           ; BSR set to: 1
 32692                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 32693                           
 32694                           ; BSR set to: 1
 32695  00D6EA  5145               	movf	_TransferLength& (0+255),w,b
 32696  00D6EC  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 32697  00D6EE  A4D8               	btfss	status,2,c
 32698  00D6F0  D002               	goto	l707
 32699                           
 32700                           ; BSR set to: 1
 32701                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 32702  00D6F2  0E00               	movlw	0
 32703  00D6F4  D0FF               	goto	L50
 32704  00D6F6                     l707:
 32705                           
 32706                           ; BSR set to: 1
 32707                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 32708                           
 32709                           ; BSR set to: 1
 32710  00D6F6  0E03               	movlw	3
 32711  00D6F8  6F60               	movwf	_MSDWriteState& (0+255),b
 32712                           
 32713                           ; BSR set to: 1
 32714                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 32715  00D6FA  0E00               	movlw	0
 32716  00D6FC  6F4D               	movwf	_ptrNextData& (0+255),b
 32717  00D6FE  0E06               	movlw	6
 32718  00D700  6F4E               	movwf	(_ptrNextData+1)& (0+255),b
 32719                           
 32720                           ; BSR set to: 1
 32721                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 32722  00D702  0E00               	movlw	0
 32723  00D704  010D               	movlb	13	; () banked
 32724  00D706  6F88               	movwf	136,b	;volatile
 32725  00D708  0E02               	movlw	2
 32726  00D70A  6F89               	movwf	137,b	;volatile
 32727  00D70C  0E00               	movlw	0
 32728  00D70E  6F8A               	movwf	138,b	;volatile
 32729  00D710  0E00               	movlw	0
 32730  00D712  6F8B               	movwf	139,b	;volatile
 32731  00D714                     l708:
 32732                           
 32733                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 32734  00D714  010D               	movlb	13	; () banked
 32735  00D716  5188               	movf	136,w,b	;volatile
 32736  00D718  1189               	iorwf	137,w,b	;volatile
 32737  00D71A  118A               	iorwf	138,w,b	;volatile
 32738  00D71C  118B               	iorwf	139,w,b	;volatile
 32739  00D71E  B4D8               	btfsc	status,2,c
 32740  00D720  D01F               	goto	l709
 32741                           
 32742                           ; BSR set to: 13
 32743                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 32744  00D722  0101               	movlb	1	; () banked
 32745  00D724  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 32746  00D726  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 32747  00D728  B4D8               	btfsc	status,2,c
 32748  00D72A  D006               	goto	l710
 32749                           
 32750                           ; BSR set to: 1
 32751  00D72C  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 32752  00D730  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 32753  00D734  BEDF               	btfsc	indf2,7,c
 32754  00D736  D0F2               	goto	l703
 32755  00D738                     l710:
 32756                           
 32757                           ; BSR set to: 1
 32758                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 32759                           
 32760                           ; BSR set to: 1
 32761  00D738  0E00               	movlw	0
 32762  00D73A  0100               	movlb	0	; () banked
 32763  00D73C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32764  00D73E  C14D  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 32765  00D742  C14E  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 32766  00D746  0E40               	movlw	64
 32767  00D748  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32768  00D74A  0E02               	movlw	2
 32769  00D74C  EC5E  F086         	call	_USBTransferOnePacket
 32770  00D750  C060  F14B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 32771  00D754  C061  F14C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 32772                           
 32773                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 32774  00D758  0E04               	movlw	4
 32775  00D75A  0101               	movlb	1	; () banked
 32776  00D75C  6F60               	movwf	_MSDWriteState& (0+255),b
 32777                           
 32778                           ;usb_device_msd.c: 1260: }
 32779  00D75E  D023               	goto	l711
 32780  00D760                     l709:
 32781                           
 32782                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 32783                           
 32784                           ; BSR set to: 1
 32785  00D760  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 32786  00D764  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 32787  00D768  EE22  F098         	lfsr	2,_LUN+15
 32788  00D76C  D801               	call	u11408
 32789  00D76E  D00A               	goto	u11409
 32790  00D770                     u11408:
 32791  00D770  0005               	push	
 32792  00D772  6EFA               	movwf	pclath,c
 32793  00D774  50DE               	movf	postinc2,w,c
 32794  00D776  6EFD               	movwf	tosl,c
 32795  00D778  50DE               	movf	postinc2,w,c
 32796  00D77A  6EFE               	movwf	tosh,c
 32797  00D77C  50DE               	movf	postinc2,w,c
 32798  00D77E  6EFF               	movwf	tosu,c
 32799  00D780  50FA               	movf	pclath,w,c
 32800  00D782  0012               	return		;indir
 32801  00D784                     u11409:
 32802  00D784  0900               	iorlw	0
 32803  00D786  B4D8               	btfsc	status,2,c
 32804  00D788  D00C               	goto	l712
 32805                           
 32806                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 32807  00D78A  0E01               	movlw	1
 32808  00D78C  010D               	movlb	13	; () banked
 32809  00D78E  6F8C               	movwf	140,b	;volatile
 32810                           
 32811                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 32812  00D790  0101               	movlb	1	; () banked
 32813  00D792  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32814  00D794  0BF0               	andlw	-16
 32815  00D796  0902               	iorlw	2
 32816  00D798  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32817                           
 32818                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 32819  00D79A  0E27               	movlw	39
 32820  00D79C  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32821                           
 32822                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 32823  00D79E  0E00               	movlw	0
 32824  00D7A0  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32825  00D7A2                     l712:
 32826                           
 32827                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 32828  00D7A2  0E02               	movlw	2
 32829  00D7A4  D0A6               	goto	L94
 32830  00D7A6                     l711:
 32831                           
 32832                           ; BSR set to: 1
 32833                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 32834                           
 32835                           ; BSR set to: 1
 32836                           
 32837                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 32838                           
 32839                           ; BSR set to: 1
 32840  00D7A6  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 32841  00D7A8  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 32842  00D7AA  B4D8               	btfsc	status,2,c
 32843  00D7AC  D006               	goto	l714
 32844                           
 32845                           ; BSR set to: 1
 32846  00D7AE  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 32847  00D7B2  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 32848  00D7B6  BEDF               	btfsc	indf2,7,c
 32849  00D7B8  D0B1               	goto	l703
 32850  00D7BA                     l714:
 32851                           
 32852                           ; BSR set to: 1
 32853                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 32854                           
 32855                           ; BSR set to: 1
 32856  00D7BA  EE20 F001          	lfsr	2,1
 32857  00D7BE  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 32858  00D7C0  26D9               	addwf	fsr2l,f,c
 32859  00D7C2  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 32860  00D7C4  22DA               	addwfc	fsr2h,f,c
 32861  00D7C6  50DF               	movf	indf2,w,c
 32862  00D7C8  0100               	movlb	0	; () banked
 32863  00D7CA  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 32864  00D7CC  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 32865  00D7D0  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 32866  00D7D2  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 32867  00D7D4  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 32868  00D7D6  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 32869  00D7D8  0102               	movlb	2	; () banked
 32870  00D7DA  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 32871  00D7DC  0100               	movlb	0	; () banked
 32872  00D7DE  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 32873  00D7E0  0102               	movlb	2	; () banked
 32874  00D7E2  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 32875  00D7E4  0100               	movlb	0	; () banked
 32876  00D7E6  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 32877  00D7E8  0102               	movlb	2	; () banked
 32878  00D7EA  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 32879  00D7EC  0100               	movlb	0	; () banked
 32880  00D7EE  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 32881  00D7F0  0102               	movlb	2	; () banked
 32882  00D7F2  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 32883                           
 32884                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 32885  00D7F4  0101               	movlb	1	; () banked
 32886  00D7F6  EE20 F001          	lfsr	2,1
 32887  00D7FA  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 32888  00D7FC  26D9               	addwf	fsr2l,f,c
 32889  00D7FE  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 32890  00D800  22DA               	addwfc	fsr2h,f,c
 32891  00D802  50DF               	movf	indf2,w,c
 32892  00D804  0100               	movlb	0	; () banked
 32893  00D806  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 32894  00D808  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 32895  00D80C  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 32896  00D80E  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 32897  00D810  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 32898  00D812  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 32899  00D814  010D               	movlb	13	; () banked
 32900  00D816  5F88               	subwf	136,f,b	;volatile
 32901  00D818  0100               	movlb	0	; () banked
 32902  00D81A  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 32903  00D81C  010D               	movlb	13	; () banked
 32904  00D81E  5B89               	subwfb	137,f,b	;volatile
 32905  00D820  0100               	movlb	0	; () banked
 32906  00D822  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 32907  00D824  010D               	movlb	13	; () banked
 32908  00D826  5B8A               	subwfb	138,f,b	;volatile
 32909  00D828  0100               	movlb	0	; () banked
 32910  00D82A  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 32911  00D82C  010D               	movlb	13	; () banked
 32912  00D82E  5B8B               	subwfb	139,f,b	;volatile
 32913                           
 32914                           ; BSR set to: 13
 32915                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 32916  00D830  0E40               	movlw	64
 32917  00D832  0101               	movlb	1	; () banked
 32918  00D834  274D               	addwf	_ptrNextData& (0+255),f,b
 32919  00D836  0E00               	movlw	0
 32920  00D838  234E               	addwfc	(_ptrNextData+1)& (0+255),f,b
 32921                           
 32922                           ; BSR set to: 1
 32923                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 32924  00D83A  0E03               	movlw	3
 32925  00D83C  D05B               	goto	L50
 32926  00D83E                     
 32927                           ; BSR set to: 1
 32928                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 32929                           
 32930                           ; BSR set to: 1
 32931  00D83E  010D               	movlb	13	; () banked
 32932  00D840  518C               	movf	140,w,b	;volatile
 32933  00D842  A4D8               	btfss	status,2,c
 32934  00D844  D040               	goto	l719
 32935                           
 32936                           ; BSR set to: 13
 32937                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 32938  00D846  C29E  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 32939  00D84A  C29F  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 32940  00D84E  C12B  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 32941  00D852  C12C  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 32942  00D856  C12D  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 32943  00D85A  C12E  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 32944  00D85E  0E00               	movlw	0
 32945  00D860  0100               	movlb	0	; () banked
 32946  00D862  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 32947  00D864  0E06               	movlw	6
 32948  00D866  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 32949  00D868  0101               	movlb	1	; () banked
 32950  00D86A  512B               	movf	_LBA& (0+255),w,b
 32951  00D86C  112C               	iorwf	(_LBA+1)& (0+255),w,b
 32952  00D86E  112D               	iorwf	(_LBA+2)& (0+255),w,b
 32953  00D870  112E               	iorwf	(_LBA+3)& (0+255),w,b
 32954  00D872  A4D8               	btfss	status,2,c
 32955  00D874  D002               	goto	u11450
 32956  00D876  0E01               	movlw	1
 32957  00D878  D001               	goto	u11460
 32958  00D87A                     u11450:
 32959  00D87A  0E00               	movlw	0
 32960  00D87C                     u11460:
 32961  00D87C  0100               	movlb	0	; () banked
 32962  00D87E  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 32963  00D880  EE22  F09B         	lfsr	2,_LUN+18
 32964  00D884  D801               	call	u11478
 32965  00D886  D00A               	goto	u11479
 32966  00D888                     u11478:
 32967  00D888  0005               	push	
 32968  00D88A  6EFA               	movwf	pclath,c
 32969  00D88C  50DE               	movf	postinc2,w,c
 32970  00D88E  6EFD               	movwf	tosl,c
 32971  00D890  50DE               	movf	postinc2,w,c
 32972  00D892  6EFE               	movwf	tosh,c
 32973  00D894  50DE               	movf	postinc2,w,c
 32974  00D896  6EFF               	movwf	tosu,c
 32975  00D898  50FA               	movf	pclath,w,c
 32976  00D89A  0012               	return		;indir
 32977  00D89C                     u11479:
 32978  00D89C  06E8               	decf	wreg,f,c
 32979  00D89E  B4D8               	btfsc	status,2,c
 32980  00D8A0  D012               	goto	l719
 32981                           
 32982                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 32983  00D8A2  0E64               	movlw	100
 32984  00D8A4  0101               	movlb	1	; () banked
 32985  00D8A6  615F               	cpfslt	_MSDRetryAttempt& (0+255),b
 32986  00D8A8  D002               	goto	l718
 32987                           
 32988                           ; BSR set to: 1
 32989                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 32990  00D8AA  2B5F               	incf	_MSDRetryAttempt& (0+255),f,b
 32991                           
 32992                           ;usb_device_msd.c: 1314: break;
 32993  00D8AC  D037               	goto	l703
 32994  00D8AE                     l718:
 32995                           
 32996                           ; BSR set to: 1
 32997                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 32998                           
 32999                           ; BSR set to: 1
 33000  00D8AE  0E01               	movlw	1
 33001  00D8B0  010D               	movlb	13	; () banked
 33002  00D8B2  6F8C               	movwf	140,b	;volatile
 33003                           
 33004                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 33005  00D8B4  0101               	movlb	1	; () banked
 33006  00D8B6  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33007  00D8B8  0BF0               	andlw	-16
 33008  00D8BA  0903               	iorlw	3
 33009  00D8BC  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33010                           
 33011                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 33012  00D8BE  0E00               	movlw	0
 33013  00D8C0  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33014                           
 33015                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 33016  00D8C2  0E00               	movlw	0
 33017  00D8C4  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33018  00D8C6                     l719:
 33019                           
 33020                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 33021                           
 33022                           ; BSR set to: 1
 33023                           
 33024                           ; BSR set to: 1
 33025                           
 33026                           ; BSR set to: 1
 33027  00D8C6  0E01               	movlw	1
 33028  00D8C8  0101               	movlb	1	; () banked
 33029  00D8CA  272B               	addwf	_LBA& (0+255),f,b
 33030  00D8CC  0E00               	movlw	0
 33031  00D8CE  232C               	addwfc	(_LBA+1)& (0+255),f,b
 33032  00D8D0  232D               	addwfc	(_LBA+2)& (0+255),f,b
 33033  00D8D2  232E               	addwfc	(_LBA+3)& (0+255),f,b
 33034                           
 33035                           ; BSR set to: 1
 33036                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 33037  00D8D4  0745               	decf	_TransferLength& (0+255),f,b
 33038  00D8D6  A0D8               	btfss	status,0,c
 33039  00D8D8  0746               	decf	(_TransferLength+1)& (0+255),f,b
 33040                           
 33041                           ; BSR set to: 1
 33042                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 33043  00D8DA  0E01               	movlw	1
 33044  00D8DC  D00B               	goto	L50
 33045  00D8DE                     
 33046                           ; BSR set to: 1
 33047                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 33048                           
 33049                           ; BSR set to: 1
 33050  00D8DE  0E02               	movlw	2
 33051  00D8E0  010D               	movlb	13	; () banked
 33052  00D8E2  6F8C               	movwf	140,b	;volatile
 33053                           
 33054                           ; BSR set to: 13
 33055                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 33056  00D8E4  0E00               	movlw	0
 33057  00D8E6  0100               	movlb	0	; () banked
 33058  00D8E8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33059  00D8EA  0E02               	movlw	2
 33060  00D8EC  ECD9  F085         	call	_USBStallEndpoint
 33061                           
 33062                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 33063  00D8F0  0E00               	movlw	0
 33064  00D8F2                     L94:
 33065  00D8F2  0101               	movlb	1	; () banked
 33066  00D8F4                     L50:
 33067  00D8F4  6F60               	movwf	_MSDWriteState& (0+255),b
 33068                           
 33069                           ; BSR set to: 1
 33070                           ;usb_device_msd.c: 1345: }
 33071                           
 33072                           ;usb_device_msd.c: 1344: break;
 33073  00D8F6  D012               	goto	l703
 33074  00D8F8                     l700:
 33075                           
 33076                           ; BSR set to: 1
 33077  00D8F8  0101               	movlb	1	; () banked
 33078  00D8FA  5160               	movf	_MSDWriteState& (0+255),w,b
 33079                           
 33080                           ; Switch size 1, requested type "space"
 33081                           ; Number of cases is 5, Range of values is 0 to 4
 33082                           ; switch strategies available:
 33083                           ; Name         Instructions Cycles
 33084                           ; simple_byte           16     9 (average)
 33085                           ;	Chosen strategy is simple_byte
 33086  00D8FC  0A00               	xorlw	0	; case 0
 33087  00D8FE  B4D8               	btfsc	status,2,c
 33088  00D900  D69B               	goto	l701
 33089  00D902  0A01               	xorlw	1	; case 1
 33090  00D904  B4D8               	btfsc	status,2,c
 33091  00D906  D6F1               	goto	l706
 33092  00D908  0A03               	xorlw	3	; case 2
 33093  00D90A  B4D8               	btfsc	status,2,c
 33094  00D90C  D798               	goto	l715
 33095  00D90E  0A01               	xorlw	1	; case 3
 33096  00D910  B4D8               	btfsc	status,2,c
 33097  00D912  D700               	goto	l708
 33098  00D914  0A07               	xorlw	7	; case 4
 33099  00D916  B4D8               	btfsc	status,2,c
 33100  00D918  D746               	goto	l711
 33101  00D91A  D7E1               	goto	l720
 33102  00D91C                     l703:
 33103                           
 33104                           ;usb_device_msd.c: 1347: return MSDWriteState;
 33105                           
 33106                           ; BSR set to: 1
 33107  00D91C  0101               	movlb	1	; () banked
 33108  00D91E  5160               	movf	_MSDWriteState& (0+255),w,b
 33109  00D920  0012               	return	
 33110  00D922                     __end_of_MSDWriteHandler:
 33111                           	opt stack 0
 33112                           tosu	equ	0xFFF
 33113                           tosh	equ	0xFFE
 33114                           tosl	equ	0xFFD
 33115                           pclath	equ	0xFFA
 33116                           tblptru	equ	0xFF8
 33117                           tblptrh	equ	0xFF7
 33118                           tblptrl	equ	0xFF6
 33119                           tablat	equ	0xFF5
 33120                           prodh	equ	0xFF4
 33121                           prodl	equ	0xFF3
 33122                           intcon	equ	0xFF2
 33123                           postinc0	equ	0xFEE
 33124                           wreg	equ	0xFE8
 33125                           indf1	equ	0xFE7
 33126                           postinc1	equ	0xFE6
 33127                           postdec1	equ	0xFE5
 33128                           plusw1	equ	0xFE3
 33129                           fsr1h	equ	0xFE2
 33130                           fsr1l	equ	0xFE1
 33131                           indf2	equ	0xFDF
 33132                           postinc2	equ	0xFDE
 33133                           postdec2	equ	0xFDD
 33134                           plusw2	equ	0xFDB
 33135                           fsr2h	equ	0xFDA
 33136                           fsr2l	equ	0xFD9
 33137                           status	equ	0xFD8
 33138                           
 33139 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 33140 ;; Defined at:
 33141 ;;		line 34 in file "external_flash.c"
 33142 ;; Parameters:    Size  Location     Type
 33143 ;;  config          2    0[BANK0 ] PTR void 
 33144 ;;		 -> NULL(0), 
 33145 ;; Auto vars:     Size  Location     Type
 33146 ;;		None
 33147 ;; Return value:  Size  Location     Type
 33148 ;;                  1    wreg      unsigned char 
 33149 ;; Registers used:
 33150 ;;		wreg
 33151 ;; Tracked objects:
 33152 ;;		On entry : 0/0
 33153 ;;		On exit  : 0/0
 33154 ;;		Unchanged: 0/0
 33155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33156 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33159 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33160 ;;Total ram usage:        2 bytes
 33161 ;; Hardware stack levels used:    1
 33162 ;; Hardware stack levels required when called:   10
 33163 ;; This function calls:
 33164 ;;		Nothing
 33165 ;; This function is called by:
 33166 ;;		_MSDWriteHandler
 33167 ;;		_MSDProcessCommandMediaPresent
 33168 ;; This function uses a non-reentrant model
 33169 ;;
 33170                           
 33171                           	psect	text129
 33172  0156DE                     __ptext129:
 33173                           	opt stack 0
 33174  0156DE                     _ExternalFlash_WriteProtectStateGet:
 33175                           	opt stack 15
 33176                           
 33177                           ;external_flash.c: 37: return 0;
 33178                           
 33179                           ; BSR set to: 1
 33180                           ;incstack = 0
 33181  0156DE  0E00               	movlw	0
 33182  0156E0  0012               	return	
 33183  0156E2                     __end_of_ExternalFlash_WriteProtectStateGet:
 33184                           	opt stack 0
 33185                           tosu	equ	0xFFF
 33186                           tosh	equ	0xFFE
 33187                           tosl	equ	0xFFD
 33188                           pclath	equ	0xFFA
 33189                           tblptru	equ	0xFF8
 33190                           tblptrh	equ	0xFF7
 33191                           tblptrl	equ	0xFF6
 33192                           tablat	equ	0xFF5
 33193                           prodh	equ	0xFF4
 33194                           prodl	equ	0xFF3
 33195                           intcon	equ	0xFF2
 33196                           postinc0	equ	0xFEE
 33197                           wreg	equ	0xFE8
 33198                           indf1	equ	0xFE7
 33199                           postinc1	equ	0xFE6
 33200                           postdec1	equ	0xFE5
 33201                           plusw1	equ	0xFE3
 33202                           fsr1h	equ	0xFE2
 33203                           fsr1l	equ	0xFE1
 33204                           indf2	equ	0xFDF
 33205                           postinc2	equ	0xFDE
 33206                           postdec2	equ	0xFDD
 33207                           plusw2	equ	0xFDB
 33208                           fsr2h	equ	0xFDA
 33209                           fsr2l	equ	0xFD9
 33210                           status	equ	0xFD8
 33211                           
 33212 ;; *************** function _ExternalFlash_SectorWrite *****************
 33213 ;; Defined at:
 33214 ;;		line 56 in file "external_flash.c"
 33215 ;; Parameters:    Size  Location     Type
 33216 ;;  config          2   36[BANK0 ] PTR void 
 33217 ;;		 -> NULL(0), 
 33218 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 33219 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 33220 ;;		 -> msd_buffer(512), 
 33221 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 33222 ;; Auto vars:     Size  Location     Type
 33223 ;;  page            2   45[BANK0 ] unsigned int 
 33224 ;; Return value:  Size  Location     Type
 33225 ;;                  1    wreg      unsigned char 
 33226 ;; Registers used:
 33227 ;;		wreg, status,2, status,0, cstack
 33228 ;; Tracked objects:
 33229 ;;		On entry : 0/0
 33230 ;;		On exit  : 0/0
 33231 ;;		Unchanged: 0/0
 33232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33233 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33234 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33236 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33237 ;;Total ram usage:       11 bytes
 33238 ;; Hardware stack levels used:    1
 33239 ;; Hardware stack levels required when called:   15
 33240 ;; This function calls:
 33241 ;;		_flash_sector_write
 33242 ;; This function is called by:
 33243 ;;		_MSDWriteHandler
 33244 ;; This function uses a non-reentrant model
 33245 ;;
 33246                           
 33247                           	psect	text130
 33248  014FD2                     __ptext130:
 33249                           	opt stack 0
 33250  014FD2                     _ExternalFlash_SectorWrite:
 33251                           	opt stack 10
 33252                           
 33253                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 33254                           
 33255                           ;incstack = 0
 33256  014FD2  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 33257  014FD6  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 33258                           
 33259                           ;external_flash.c: 61: if(sector_addr >= 8192)
 33260  014FDA  0100               	movlb	0	; () banked
 33261  014FDC  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 33262  014FDE  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 33263  014FE0  E104               	bnz	u11010
 33264  014FE2  0E20               	movlw	32
 33265  014FE4  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 33266  014FE6  A0D8               	btfss	status,0,c
 33267  014FE8  D002               	goto	l1681
 33268  014FEA                     u11010:
 33269                           
 33270                           ; BSR set to: 0
 33271                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 33272  014FEA  0E00               	movlw	0
 33273                           
 33274                           ; BSR set to: 0
 33275  014FEC  0012               	return	
 33276  014FEE                     l1681:
 33277                           
 33278                           ; BSR set to: 0
 33279                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 33280                           
 33281                           ; BSR set to: 0
 33282  014FEE  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 33283  014FF2  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 33284  014FF6  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 33285  014FFA  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 33286  014FFE  ECE8  F0A4         	call	_flash_sector_write	;wreg free
 33287                           
 33288                           ;external_flash.c: 69: return 1;
 33289  015002  0E01               	movlw	1
 33290  015004  0012               	return	
 33291  015006                     __end_of_ExternalFlash_SectorWrite:
 33292                           	opt stack 0
 33293                           tosu	equ	0xFFF
 33294                           tosh	equ	0xFFE
 33295                           tosl	equ	0xFFD
 33296                           pclath	equ	0xFFA
 33297                           tblptru	equ	0xFF8
 33298                           tblptrh	equ	0xFF7
 33299                           tblptrl	equ	0xFF6
 33300                           tablat	equ	0xFF5
 33301                           prodh	equ	0xFF4
 33302                           prodl	equ	0xFF3
 33303                           intcon	equ	0xFF2
 33304                           postinc0	equ	0xFEE
 33305                           wreg	equ	0xFE8
 33306                           indf1	equ	0xFE7
 33307                           postinc1	equ	0xFE6
 33308                           postdec1	equ	0xFE5
 33309                           plusw1	equ	0xFE3
 33310                           fsr1h	equ	0xFE2
 33311                           fsr1l	equ	0xFE1
 33312                           indf2	equ	0xFDF
 33313                           postinc2	equ	0xFDE
 33314                           postdec2	equ	0xFDD
 33315                           plusw2	equ	0xFDB
 33316                           fsr2h	equ	0xFDA
 33317                           fsr2l	equ	0xFD9
 33318                           status	equ	0xFD8
 33319                           
 33320 ;; *************** function _flash_sector_write *****************
 33321 ;; Defined at:
 33322 ;;		line 434 in file "flash.c"
 33323 ;; Parameters:    Size  Location     Type
 33324 ;;  page            2   31[BANK0 ] unsigned int 
 33325 ;;  data            2   33[BANK0 ] PTR unsigned char 
 33326 ;;		 -> buffer(512), msd_buffer(512), 
 33327 ;; Auto vars:     Size  Location     Type
 33328 ;;  match           1   35[BANK0 ] enum E7013
 33329 ;; Return value:  Size  Location     Type
 33330 ;;                  1    wreg      void 
 33331 ;; Registers used:
 33332 ;;		wreg, status,2, status,0, cstack
 33333 ;; Tracked objects:
 33334 ;;		On entry : 0/0
 33335 ;;		On exit  : 0/0
 33336 ;;		Unchanged: 0/0
 33337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33338 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33339 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33341 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33342 ;;Total ram usage:        5 bytes
 33343 ;; Hardware stack levels used:    1
 33344 ;; Hardware stack levels required when called:   14
 33345 ;; This function calls:
 33346 ;;		__flash_compare_page_to_buffer
 33347 ;;		__flash_write_page_from_buffer
 33348 ;;		__flash_write_to_buffer
 33349 ;; This function is called by:
 33350 ;;		_ExternalFlash_SectorWrite
 33351 ;;		__make_cluster_chain
 33352 ;;		_fat_restore_mbr_fbr
 33353 ;;		_fat_format
 33354 ;; This function uses a non-reentrant model
 33355 ;;
 33356                           
 33357                           	psect	text131
 33358  0149D0                     __ptext131:
 33359                           	opt stack 0
 33360  0149D0                     _flash_sector_write:
 33361                           	opt stack 13
 33362                           
 33363                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 33364                           
 33365                           ;incstack = 0
 33366  0149D0  0E00               	movlw	0
 33367  0149D2  0100               	movlb	0	; () banked
 33368  0149D4  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 33369  0149D6  0E00               	movlw	0
 33370  0149D8  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 33371  0149DA  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 33372  0149DE  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 33373  0149E2  0E02               	movlw	2
 33374  0149E4  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 33375  0149E6  0E00               	movlw	0
 33376  0149E8  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 33377  0149EA  0E00               	movlw	0
 33378  0149EC  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 33379  0149EE  EC47  F0A4         	call	__flash_write_to_buffer	;wreg free
 33380                           
 33381                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 33382  0149F2  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 33383  0149F6  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 33384  0149FA  0E00               	movlw	0
 33385  0149FC  0100               	movlb	0	; () banked
 33386  0149FE  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 33387  014A00  ECFF  F09C         	call	__flash_compare_page_to_buffer	;wreg free
 33388  014A04  0100               	movlb	0	; () banked
 33389  014A06  6F83               	movwf	flash_sector_write@match& (0+255),b
 33390                           
 33391                           ; BSR set to: 0
 33392                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 33393  014A08  0583               	decf	flash_sector_write@match& (0+255),w,b
 33394  014A0A  A4D8               	btfss	status,2,c
 33395  014A0C  0012               	return	
 33396                           
 33397                           ; BSR set to: 0
 33398                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 33399  014A0E  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 33400  014A12  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 33401  014A16  0E00               	movlw	0
 33402  014A18  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 33403  014A1A  EC13  F0A2         	call	__flash_write_page_from_buffer	;wreg free
 33404  014A1E  0012               	return	
 33405  014A20                     __end_of_flash_sector_write:
 33406                           	opt stack 0
 33407                           tosu	equ	0xFFF
 33408                           tosh	equ	0xFFE
 33409                           tosl	equ	0xFFD
 33410                           pclath	equ	0xFFA
 33411                           tblptru	equ	0xFF8
 33412                           tblptrh	equ	0xFF7
 33413                           tblptrl	equ	0xFF6
 33414                           tablat	equ	0xFF5
 33415                           prodh	equ	0xFF4
 33416                           prodl	equ	0xFF3
 33417                           intcon	equ	0xFF2
 33418                           postinc0	equ	0xFEE
 33419                           wreg	equ	0xFE8
 33420                           indf1	equ	0xFE7
 33421                           postinc1	equ	0xFE6
 33422                           postdec1	equ	0xFE5
 33423                           plusw1	equ	0xFE3
 33424                           fsr1h	equ	0xFE2
 33425                           fsr1l	equ	0xFE1
 33426                           indf2	equ	0xFDF
 33427                           postinc2	equ	0xFDE
 33428                           postdec2	equ	0xFDD
 33429                           plusw2	equ	0xFDB
 33430                           fsr2h	equ	0xFDA
 33431                           fsr2l	equ	0xFD9
 33432                           status	equ	0xFD8
 33433                           
 33434 ;; *************** function __flash_write_to_buffer *****************
 33435 ;; Defined at:
 33436 ;;		line 236 in file "flash.c"
 33437 ;; Parameters:    Size  Location     Type
 33438 ;;  start           2   19[BANK0 ] unsigned int 
 33439 ;;  data            2   21[BANK0 ] PTR unsigned char 
 33440 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 33441 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 33442 ;;  data_length     2   23[BANK0 ] unsigned int 
 33443 ;;  buffer          1   25[BANK0 ] enum E7009
 33444 ;; Auto vars:     Size  Location     Type
 33445 ;;  command         4   26[BANK0 ] unsigned char [4]
 33446 ;; Return value:  Size  Location     Type
 33447 ;;                  1    wreg      void 
 33448 ;; Registers used:
 33449 ;;		wreg, status,2, status,0, cstack
 33450 ;; Tracked objects:
 33451 ;;		On entry : 0/0
 33452 ;;		On exit  : 0/0
 33453 ;;		Unchanged: 0/0
 33454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33455 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33456 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33458 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33459 ;;Total ram usage:       11 bytes
 33460 ;; Hardware stack levels used:    1
 33461 ;; Hardware stack levels required when called:   13
 33462 ;; This function calls:
 33463 ;;		__flash_is_busy
 33464 ;;		_spi_tx_tx
 33465 ;; This function is called by:
 33466 ;;		_flash_sector_write
 33467 ;;		_flash_partial_write
 33468 ;;		_flash_write_to_buffer
 33469 ;; This function uses a non-reentrant model
 33470 ;;
 33471                           
 33472                           	psect	text132
 33473  01488E                     __ptext132:
 33474                           	opt stack 0
 33475  01488E                     __flash_write_to_buffer:
 33476                           	opt stack 13
 33477                           
 33478                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 33479                           
 33480                           ;incstack = 0
 33481  01488E  EC13  F0AA         	call	__flash_is_busy	;wreg free
 33482  014892  0900               	iorlw	0
 33483  014894  A4D8               	btfss	status,2,c
 33484  014896  D7FB               	goto	__flash_write_to_buffer
 33485                           
 33486                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 33487  014898  0100               	movlb	0	; () banked
 33488  01489A  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 33489  01489C  A4D8               	btfss	status,2,c
 33490  01489E  D002               	goto	l1567
 33491                           
 33492                           ; BSR set to: 0
 33493                           ;flash.c: 245: command[0] = 0x84;
 33494  0148A0  0E84               	movlw	132
 33495  0148A2  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 33496  0148A4                     l1567:
 33497                           
 33498                           ; BSR set to: 0
 33499                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 33500                           
 33501                           ; BSR set to: 0
 33502  0148A4  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 33503  0148A6  A4D8               	btfss	status,2,c
 33504  0148A8  D002               	goto	l1568
 33505                           
 33506                           ; BSR set to: 0
 33507                           ;flash.c: 247: command[0] = 0x87;
 33508  0148AA  0E87               	movlw	135
 33509  0148AC  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 33510  0148AE                     l1568:
 33511                           
 33512                           ; BSR set to: 0
 33513                           ;flash.c: 249: command[1] = 0x00;
 33514  0148AE  0E00               	movlw	0
 33515  0148B0  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 33516                           
 33517                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 33518  0148B2  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 33519  0148B4  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 33520                           
 33521                           ; BSR set to: 0
 33522                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 33523  0148B6  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 33524                           
 33525                           ; BSR set to: 0
 33526                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 33527  0148BA  0E7A               	movlw	low __flash_write_to_buffer@command
 33528  0148BC  6F60               	movwf	spi_tx_tx@command& (0+255),b
 33529  0148BE  0E00               	movlw	high __flash_write_to_buffer@command
 33530  0148C0  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 33531  0148C2  0E00               	movlw	0
 33532  0148C4  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 33533  0148C6  0E04               	movlw	4
 33534  0148C8  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 33535  0148CA  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 33536  0148CE  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 33537  0148D2  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 33538  0148D6  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 33539  0148DA  ECE9  F09A         	call	_spi_tx_tx	;wreg free
 33540  0148DE  0012               	return		;funcret
 33541  0148E0                     __end_of__flash_write_to_buffer:
 33542                           	opt stack 0
 33543                           tosu	equ	0xFFF
 33544                           tosh	equ	0xFFE
 33545                           tosl	equ	0xFFD
 33546                           pclath	equ	0xFFA
 33547                           tblptru	equ	0xFF8
 33548                           tblptrh	equ	0xFF7
 33549                           tblptrl	equ	0xFF6
 33550                           tablat	equ	0xFF5
 33551                           prodh	equ	0xFF4
 33552                           prodl	equ	0xFF3
 33553                           intcon	equ	0xFF2
 33554                           postinc0	equ	0xFEE
 33555                           wreg	equ	0xFE8
 33556                           indf1	equ	0xFE7
 33557                           postinc1	equ	0xFE6
 33558                           postdec1	equ	0xFE5
 33559                           plusw1	equ	0xFE3
 33560                           fsr1h	equ	0xFE2
 33561                           fsr1l	equ	0xFE1
 33562                           indf2	equ	0xFDF
 33563                           postinc2	equ	0xFDE
 33564                           postdec2	equ	0xFDD
 33565                           plusw2	equ	0xFDB
 33566                           fsr2h	equ	0xFDA
 33567                           fsr2l	equ	0xFD9
 33568                           status	equ	0xFD8
 33569                           
 33570 ;; *************** function _spi_tx_tx *****************
 33571 ;; Defined at:
 33572 ;;		line 146 in file "spi.c"
 33573 ;; Parameters:    Size  Location     Type
 33574 ;;  command         2    0[BANK0 ] PTR unsigned char 
 33575 ;;		 -> _flash_write_to_buffer@command(4), 
 33576 ;;  command_leng    2    2[BANK0 ] unsigned int 
 33577 ;;  data            2    4[BANK0 ] PTR unsigned char 
 33578 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 33579 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 33580 ;;  data_length     2    6[BANK0 ] unsigned int 
 33581 ;; Auto vars:     Size  Location     Type
 33582 ;;		None
 33583 ;; Return value:  Size  Location     Type
 33584 ;;                  1    wreg      void 
 33585 ;; Registers used:
 33586 ;;		wreg, status,2, status,0
 33587 ;; Tracked objects:
 33588 ;;		On entry : 0/0
 33589 ;;		On exit  : 0/0
 33590 ;;		Unchanged: 0/0
 33591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33592 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33594 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33595 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33596 ;;Total ram usage:       12 bytes
 33597 ;; Hardware stack levels used:    1
 33598 ;; Hardware stack levels required when called:   10
 33599 ;; This function calls:
 33600 ;;		Nothing
 33601 ;; This function is called by:
 33602 ;;		__flash_write_to_buffer
 33603 ;; This function uses a non-reentrant model
 33604 ;;
 33605                           
 33606                           	psect	text133
 33607  0135D2                     __ptext133:
 33608                           	opt stack 0
 33609  0135D2                     _spi_tx_tx:
 33610                           	opt stack 15
 33611                           
 33612                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 33613                           
 33614                           ;incstack = 0
 33615  0135D2  9E88               	bcf	3976,7,c	;volatile
 33616                           
 33617                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 33618  0135D4  9C88               	bcf	3976,6,c	;volatile
 33619                           
 33620                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 33621  0135D6  8A88               	bsf	3976,5,c	;volatile
 33622                           
 33623                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 33624  0135D8  9888               	bcf	3976,4,c	;volatile
 33625                           
 33626                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 33627  0135DA  9688               	bcf	3976,3,c	;volatile
 33628                           
 33629                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 33630  0135DC  8488               	bsf	3976,2,c	;volatile
 33631                           
 33632                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 33633  0135DE  9288               	bcf	3976,1,c	;volatile
 33634                           
 33635                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 33636  0135E0  9886               	bcf	3974,4,c	;volatile
 33637  0135E2  9A86               	bcf	3974,5,c	;volatile
 33638  0135E4  9C86               	bcf	3974,6,c	;volatile
 33639  0135E6  9E86               	bcf	3974,7,c	;volatile
 33640                           
 33641                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 33642  0135E8  9086               	bcf	3974,0,c	;volatile
 33643  0135EA  9286               	bcf	3974,1,c	;volatile
 33644  0135EC  9486               	bcf	3974,2,c	;volatile
 33645  0135EE  9686               	bcf	3974,3,c	;volatile
 33646                           
 33647                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 33648  0135F0  0100               	movlb	0	; () banked
 33649  0135F2  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 33650  0135F4  6E6A               	movwf	3946,c	;volatile
 33651                           
 33652                           ; BSR set to: 0
 33653                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 33654  0135F6  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 33655                           
 33656                           ; BSR set to: 0
 33657                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 33658  0135FA  0EFF               	movlw	255
 33659  0135FC  6F68               	movwf	??_spi_tx_tx& (0+255),b
 33660  0135FE  0EFF               	movlw	255
 33661  013600  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 33662  013602  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 33663  013606  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 33664  01360A  5168               	movf	??_spi_tx_tx& (0+255),w,b
 33665  01360C  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 33666  01360E  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 33667  013610  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 33668  013612  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 33669  013616  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 33670  013618  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 33671  01361A  6E66               	movwf	3942,c	;volatile
 33672                           
 33673                           ; BSR set to: 0
 33674                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 33675  01361C  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 33676  01361E  6E67               	movwf	3943,c	;volatile
 33677                           
 33678                           ; BSR set to: 0
 33679                           ;spi.c: 174: LATDbits.LD7 = 0;
 33680  013620  9E8C               	bcf	3980,7,c	;volatile
 33681                           
 33682                           ; BSR set to: 0
 33683                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 33684  013622  8088               	bsf	3976,0,c	;volatile
 33685  013624                     
 33686                           ; BSR set to: 0
 33687  013624  B088               	btfsc	3976,0,c	;volatile
 33688  013626  D7FE               	goto	l2183
 33689                           
 33690                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 33691  013628  0100               	movlb	0	; () banked
 33692  01362A  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 33693  01362C  6E6A               	movwf	3946,c	;volatile
 33694                           
 33695                           ; BSR set to: 0
 33696                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 33697  01362E  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 33698                           
 33699                           ; BSR set to: 0
 33700                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 33701  013632  0EFF               	movlw	255
 33702  013634  6F68               	movwf	??_spi_tx_tx& (0+255),b
 33703  013636  0EFF               	movlw	255
 33704  013638  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 33705  01363A  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 33706  01363E  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 33707  013642  5168               	movf	??_spi_tx_tx& (0+255),w,b
 33708  013644  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 33709  013646  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 33710  013648  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 33711  01364A  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 33712  01364E  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 33713  013650  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 33714  013652  6E66               	movwf	3942,c	;volatile
 33715                           
 33716                           ; BSR set to: 0
 33717                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 33718  013654  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 33719  013656  6E67               	movwf	3943,c	;volatile
 33720                           
 33721                           ; BSR set to: 0
 33722                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 33723  013658  8088               	bsf	3976,0,c	;volatile
 33724  01365A                     
 33725                           ; BSR set to: 0
 33726  01365A  B088               	btfsc	3976,0,c	;volatile
 33727  01365C  D7FE               	goto	l2186
 33728                           
 33729                           ;spi.c: 193: LATDbits.LD7 = 1;
 33730  01365E  8E8C               	bsf	3980,7,c	;volatile
 33731  013660  0012               	return		;funcret
 33732  013662                     __end_of_spi_tx_tx:
 33733                           	opt stack 0
 33734                           tosu	equ	0xFFF
 33735                           tosh	equ	0xFFE
 33736                           tosl	equ	0xFFD
 33737                           pclath	equ	0xFFA
 33738                           tblptru	equ	0xFF8
 33739                           tblptrh	equ	0xFF7
 33740                           tblptrl	equ	0xFF6
 33741                           tablat	equ	0xFF5
 33742                           prodh	equ	0xFF4
 33743                           prodl	equ	0xFF3
 33744                           intcon	equ	0xFF2
 33745                           postinc0	equ	0xFEE
 33746                           wreg	equ	0xFE8
 33747                           indf1	equ	0xFE7
 33748                           postinc1	equ	0xFE6
 33749                           postdec1	equ	0xFE5
 33750                           plusw1	equ	0xFE3
 33751                           fsr1h	equ	0xFE2
 33752                           fsr1l	equ	0xFE1
 33753                           indf2	equ	0xFDF
 33754                           postinc2	equ	0xFDE
 33755                           postdec2	equ	0xFDD
 33756                           plusw2	equ	0xFDB
 33757                           fsr2h	equ	0xFDA
 33758                           fsr2l	equ	0xFD9
 33759                           status	equ	0xFD8
 33760                           
 33761 ;; *************** function __flash_write_page_from_buffer *****************
 33762 ;; Defined at:
 33763 ;;		line 258 in file "flash.c"
 33764 ;; Parameters:    Size  Location     Type
 33765 ;;  page            2   19[BANK0 ] unsigned int 
 33766 ;;  buffer          1   21[BANK0 ] enum E7009
 33767 ;; Auto vars:     Size  Location     Type
 33768 ;;  command         4   25[BANK0 ] unsigned char [4]
 33769 ;; Return value:  Size  Location     Type
 33770 ;;                  1    wreg      void 
 33771 ;; Registers used:
 33772 ;;		wreg, status,2, status,0, cstack
 33773 ;; Tracked objects:
 33774 ;;		On entry : 0/0
 33775 ;;		On exit  : 0/0
 33776 ;;		Unchanged: 0/0
 33777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33778 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33779 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33780 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33781 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33782 ;;Total ram usage:       10 bytes
 33783 ;; Hardware stack levels used:    1
 33784 ;; Hardware stack levels required when called:   13
 33785 ;; This function calls:
 33786 ;;		__flash_is_busy
 33787 ;;		_spi_tx
 33788 ;; This function is called by:
 33789 ;;		_flash_sector_write
 33790 ;;		_flash_partial_write
 33791 ;;		_flash_write_page_from_buffer
 33792 ;; This function uses a non-reentrant model
 33793 ;;
 33794                           
 33795                           	psect	text134
 33796  014426                     __ptext134:
 33797                           	opt stack 0
 33798  014426                     __flash_write_page_from_buffer:
 33799                           	opt stack 13
 33800                           
 33801                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 33802                           
 33803                           ;incstack = 0
 33804  014426  EC13  F0AA         	call	__flash_is_busy	;wreg free
 33805  01442A  0900               	iorlw	0
 33806  01442C  A4D8               	btfss	status,2,c
 33807  01442E  D7FB               	goto	__flash_write_page_from_buffer
 33808                           
 33809                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 33810  014430  0100               	movlb	0	; () banked
 33811  014432  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 33812  014434  A4D8               	btfss	status,2,c
 33813  014436  D002               	goto	l1575
 33814                           
 33815                           ; BSR set to: 0
 33816                           ;flash.c: 267: command[0] = 0x83;
 33817  014438  0E83               	movlw	131
 33818  01443A  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 33819  01443C                     l1575:
 33820                           
 33821                           ; BSR set to: 0
 33822                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 33823                           
 33824                           ; BSR set to: 0
 33825  01443C  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 33826  01443E  A4D8               	btfss	status,2,c
 33827  014440  D002               	goto	l1576
 33828                           
 33829                           ; BSR set to: 0
 33830                           ;flash.c: 269: command[0] = 0x86;
 33831  014442  0E86               	movlw	134
 33832  014444  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 33833  014446                     l1576:
 33834                           
 33835                           ; BSR set to: 0
 33836                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 33837                           
 33838                           ; BSR set to: 0
 33839  014446  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 33840  01444A  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 33841  01444E  0E07               	movlw	7
 33842  014450  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 33843  014452                     u9825:
 33844  014452  90D8               	bcf	status,0,c
 33845  014454  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 33846  014456  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 33847  014458  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 33848  01445A  D7FB               	goto	u9825
 33849  01445C  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 33850  01445E  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 33851                           
 33852                           ; BSR set to: 0
 33853                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 33854  014460  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 33855  014462  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 33856  014464  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 33857                           
 33858                           ;flash.c: 273: command[3] = 0x00;
 33859  014466  0E00               	movlw	0
 33860  014468  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 33861                           
 33862                           ; BSR set to: 0
 33863                           ;flash.c: 276: spi_tx(command, 4);
 33864  01446A  0E79               	movlw	low __flash_write_page_from_buffer@command
 33865  01446C  6F60               	movwf	spi_tx@data& (0+255),b
 33866  01446E  0E00               	movlw	high __flash_write_page_from_buffer@command
 33867  014470  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 33868  014472  0E00               	movlw	0
 33869  014474  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 33870  014476  0E04               	movlw	4
 33871  014478  6F62               	movwf	spi_tx@length& (0+255),b
 33872  01447A  EC40  F0A2         	call	_spi_tx	;wreg free
 33873  01447E  0012               	return		;funcret
 33874  014480                     __end_of__flash_write_page_from_buffer:
 33875                           	opt stack 0
 33876                           tosu	equ	0xFFF
 33877                           tosh	equ	0xFFE
 33878                           tosl	equ	0xFFD
 33879                           pclath	equ	0xFFA
 33880                           tblptru	equ	0xFF8
 33881                           tblptrh	equ	0xFF7
 33882                           tblptrl	equ	0xFF6
 33883                           tablat	equ	0xFF5
 33884                           prodh	equ	0xFF4
 33885                           prodl	equ	0xFF3
 33886                           intcon	equ	0xFF2
 33887                           postinc0	equ	0xFEE
 33888                           wreg	equ	0xFE8
 33889                           indf1	equ	0xFE7
 33890                           postinc1	equ	0xFE6
 33891                           postdec1	equ	0xFE5
 33892                           plusw1	equ	0xFE3
 33893                           fsr1h	equ	0xFE2
 33894                           fsr1l	equ	0xFE1
 33895                           indf2	equ	0xFDF
 33896                           postinc2	equ	0xFDE
 33897                           postdec2	equ	0xFDD
 33898                           plusw2	equ	0xFDB
 33899                           fsr2h	equ	0xFDA
 33900                           fsr2l	equ	0xFD9
 33901                           status	equ	0xFD8
 33902                           
 33903 ;; *************** function __flash_compare_page_to_buffer *****************
 33904 ;; Defined at:
 33905 ;;		line 176 in file "flash.c"
 33906 ;; Parameters:    Size  Location     Type
 33907 ;;  page            2   19[BANK0 ] unsigned int 
 33908 ;;  buffer          1   21[BANK0 ] enum E7009
 33909 ;; Auto vars:     Size  Location     Type
 33910 ;;  command         4   27[BANK0 ] unsigned char [4]
 33911 ;;  status          2   25[BANK0 ] unsigned int 
 33912 ;; Return value:  Size  Location     Type
 33913 ;;                  1    wreg      enum E7013
 33914 ;; Registers used:
 33915 ;;		wreg, status,2, status,0, cstack
 33916 ;; Tracked objects:
 33917 ;;		On entry : 0/0
 33918 ;;		On exit  : 0/0
 33919 ;;		Unchanged: 0/0
 33920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33921 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33922 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33923 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33924 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33925 ;;Total ram usage:       12 bytes
 33926 ;; Hardware stack levels used:    1
 33927 ;; Hardware stack levels required when called:   13
 33928 ;; This function calls:
 33929 ;;		__flash_get_status
 33930 ;;		__flash_is_busy
 33931 ;;		_spi_tx
 33932 ;; This function is called by:
 33933 ;;		_flash_sector_write
 33934 ;;		_flash_partial_write
 33935 ;; This function uses a non-reentrant model
 33936 ;;
 33937                           
 33938                           	psect	text135
 33939  0139FE                     __ptext135:
 33940                           	opt stack 0
 33941  0139FE                     __flash_compare_page_to_buffer:
 33942                           	opt stack 13
 33943                           
 33944                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 33945                           
 33946                           ;incstack = 0
 33947  0139FE  EC13  F0AA         	call	__flash_is_busy	;wreg free
 33948  013A02  0900               	iorlw	0
 33949  013A04  A4D8               	btfss	status,2,c
 33950  013A06  D7FB               	goto	__flash_compare_page_to_buffer
 33951                           
 33952                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 33953  013A08  0100               	movlb	0	; () banked
 33954  013A0A  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 33955  013A0C  A4D8               	btfss	status,2,c
 33956  013A0E  D002               	goto	l1548
 33957                           
 33958                           ; BSR set to: 0
 33959                           ;flash.c: 186: command[0] = 0x60;
 33960  013A10  0E60               	movlw	96
 33961  013A12  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 33962  013A14                     l1548:
 33963                           
 33964                           ; BSR set to: 0
 33965                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 33966                           
 33967                           ; BSR set to: 0
 33968  013A14  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 33969  013A16  A4D8               	btfss	status,2,c
 33970  013A18  D002               	goto	l1549
 33971                           
 33972                           ; BSR set to: 0
 33973                           ;flash.c: 188: command[0] = 0x60;
 33974  013A1A  0E60               	movlw	96
 33975  013A1C  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 33976  013A1E                     l1549:
 33977                           
 33978                           ; BSR set to: 0
 33979                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 33980                           
 33981                           ; BSR set to: 0
 33982  013A1E  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 33983  013A22  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 33984  013A26  0E07               	movlw	7
 33985  013A28  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 33986  013A2A                     u9735:
 33987  013A2A  90D8               	bcf	status,0,c
 33988  013A2C  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 33989  013A2E  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 33990  013A30  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 33991  013A32  D7FB               	goto	u9735
 33992  013A34  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 33993  013A36  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 33994                           
 33995                           ; BSR set to: 0
 33996                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 33997  013A38  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 33998  013A3A  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 33999  013A3C  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 34000                           
 34001                           ;flash.c: 192: command[3] = 0x00;
 34002  013A3E  0E00               	movlw	0
 34003  013A40  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 34004                           
 34005                           ; BSR set to: 0
 34006                           ;flash.c: 195: spi_tx(command, 4);
 34007  013A42  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 34008  013A44  6F60               	movwf	spi_tx@data& (0+255),b
 34009  013A46  0E00               	movlw	high __flash_compare_page_to_buffer@command
 34010  013A48  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 34011  013A4A  0E00               	movlw	0
 34012  013A4C  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 34013  013A4E  0E04               	movlw	4
 34014  013A50  6F62               	movwf	spi_tx@length& (0+255),b
 34015  013A52  EC40  F0A2         	call	_spi_tx	;wreg free
 34016  013A56  EC13  F0AA         	call	__flash_is_busy	;wreg free
 34017  013A5A  0900               	iorlw	0
 34018  013A5C  A4D8               	btfss	status,2,c
 34019  013A5E  D7FB               	goto	l1551
 34020                           
 34021                           ;flash.c: 201: status = _flash_get_status();
 34022  013A60  EC1D  F0A8         	call	__flash_get_status	;wreg free
 34023  013A64  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 34024  013A68  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 34025                           
 34026                           ;flash.c: 204: if(status & 0b0000000001000000)
 34027  013A6C  0100               	movlb	0	; () banked
 34028  013A6E  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 34029  013A70  D002               	goto	l1553
 34030                           
 34031                           ; BSR set to: 0
 34032                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 34033  013A72  0E01               	movlw	1
 34034                           
 34035                           ; BSR set to: 0
 34036                           ;flash.c: 208: }
 34037                           
 34038                           ; BSR set to: 0
 34039  013A74  0012               	return	
 34040  013A76                     l1553:
 34041                           
 34042                           ; BSR set to: 0
 34043                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 34044                           
 34045                           ; BSR set to: 0
 34046  013A76  0E00               	movlw	0
 34047                           
 34048                           ; BSR set to: 0
 34049  013A78  0012               	return	
 34050  013A7A                     __end_of__flash_compare_page_to_buffer:
 34051                           	opt stack 0
 34052                           tosu	equ	0xFFF
 34053                           tosh	equ	0xFFE
 34054                           tosl	equ	0xFFD
 34055                           pclath	equ	0xFFA
 34056                           tblptru	equ	0xFF8
 34057                           tblptrh	equ	0xFF7
 34058                           tblptrl	equ	0xFF6
 34059                           tablat	equ	0xFF5
 34060                           prodh	equ	0xFF4
 34061                           prodl	equ	0xFF3
 34062                           intcon	equ	0xFF2
 34063                           postinc0	equ	0xFEE
 34064                           wreg	equ	0xFE8
 34065                           indf1	equ	0xFE7
 34066                           postinc1	equ	0xFE6
 34067                           postdec1	equ	0xFE5
 34068                           plusw1	equ	0xFE3
 34069                           fsr1h	equ	0xFE2
 34070                           fsr1l	equ	0xFE1
 34071                           indf2	equ	0xFDF
 34072                           postinc2	equ	0xFDE
 34073                           postdec2	equ	0xFDD
 34074                           plusw2	equ	0xFDB
 34075                           fsr2h	equ	0xFDA
 34076                           fsr2l	equ	0xFD9
 34077                           status	equ	0xFD8
 34078                           
 34079 ;; *************** function _MSDReadHandler *****************
 34080 ;; Defined at:
 34081 ;;		line 1038 in file "usb_device_msd.c"
 34082 ;; Parameters:    Size  Location     Type
 34083 ;;		None
 34084 ;; Auto vars:     Size  Location     Type
 34085 ;;		None
 34086 ;; Return value:  Size  Location     Type
 34087 ;;                  1    wreg      unsigned char 
 34088 ;; Registers used:
 34089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 34090 ;; Tracked objects:
 34091 ;;		On entry : 0/0
 34092 ;;		On exit  : 0/0
 34093 ;;		Unchanged: 0/0
 34094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34097 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34098 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34099 ;;Total ram usage:        4 bytes
 34100 ;; Hardware stack levels used:    1
 34101 ;; Hardware stack levels required when called:   16
 34102 ;; This function calls:
 34103 ;;		_ExternalFlash_SectorRead
 34104 ;;		_MSDCheckForErrorCases
 34105 ;;		_USBStallEndpoint
 34106 ;;		_USBTransferOnePacket
 34107 ;; This function is called by:
 34108 ;;		_MSDProcessCommandMediaPresent
 34109 ;; This function uses a non-reentrant model
 34110 ;;
 34111                           
 34112                           	psect	text136
 34113  00EE7A                     __ptext136:
 34114                           	opt stack 0
 34115  00EE7A                     _MSDReadHandler:
 34116                           	opt stack 10
 34117                           
 34118                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 34119                           
 34120                           ; BSR set to: 0
 34121                           ;incstack = 0
 34122  00EE7A  D0DF               	goto	l681
 34123  00EE7C                     l682:
 34124                           
 34125                           ; BSR set to: 1
 34126                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 34127  00EE7C  C211  F12E         	movff	_gblCBW+17,_LBA+3
 34128                           
 34129                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 34130  00EE80  C212  F12D         	movff	_gblCBW+18,_LBA+2
 34131                           
 34132                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 34133  00EE84  C213  F12C         	movff	_gblCBW+19,_LBA+1
 34134                           
 34135                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 34136  00EE88  C214  F12B         	movff	_gblCBW+20,_LBA
 34137                           
 34138                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 34139  00EE8C  C216  F146         	movff	_gblCBW+22,_TransferLength+1
 34140                           
 34141                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 34142  00EE90  C217  F145         	movff	_gblCBW+23,_TransferLength
 34143                           
 34144                           ; BSR set to: 1
 34145                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 34146  00EE94  5145               	movf	_TransferLength& (0+255),w,b
 34147  00EE96  0100               	movlb	0	; () banked
 34148  00EE98  6F95               	movwf	??_MSDReadHandler& (0+255),b
 34149  00EE9A  0101               	movlb	1	; () banked
 34150  00EE9C  5146               	movf	(_TransferLength+1)& (0+255),w,b
 34151  00EE9E  0100               	movlb	0	; () banked
 34152  00EEA0  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 34153  00EEA2  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 34154  00EEA4  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 34155  00EEA6  0E09               	movlw	9
 34156  00EEA8                     u11215:
 34157  00EEA8  90D8               	bcf	status,0,c
 34158  00EEAA  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 34159  00EEAC  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 34160  00EEAE  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 34161  00EEB0  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 34162  00EEB2  2EE8               	decfsz	wreg,f,c
 34163  00EEB4  D7F9               	goto	u11215
 34164  00EEB6  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 34165  00EEBA  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 34166  00EEBE  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 34167  00EEC2  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 34168  00EEC6  ECB9  F083         	call	_MSDCheckForErrorCases	;wreg free
 34169  00EECA  0900               	iorlw	0
 34170  00EECC  A4D8               	btfss	status,2,c
 34171  00EECE  D0C7               	goto	l684
 34172                           
 34173                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 34174                           
 34175                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 34176  00EED0  0E01               	movlw	1
 34177  00EED2  0101               	movlb	1	; () banked
 34178  00EED4  6F61               	movwf	_MSDReadState& (0+255),b
 34179  00EED6                     
 34180                           ; BSR set to: 1
 34181                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 34182                           
 34183                           ; BSR set to: 1
 34184  00EED6  5145               	movf	_TransferLength& (0+255),w,b
 34185  00EED8  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 34186  00EEDA  A4D8               	btfss	status,2,c
 34187  00EEDC  D002               	goto	l686
 34188                           
 34189                           ; BSR set to: 1
 34190                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 34191  00EEDE  0E00               	movlw	0
 34192  00EEE0  D04A               	goto	L51
 34193  00EEE2                     l686:
 34194                           
 34195                           ; BSR set to: 1
 34196                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 34197                           
 34198                           ; BSR set to: 1
 34199  00EEE2  0745               	decf	_TransferLength& (0+255),f,b
 34200  00EEE4  A0D8               	btfss	status,0,c
 34201  00EEE6  0746               	decf	(_TransferLength+1)& (0+255),f,b
 34202                           
 34203                           ; BSR set to: 1
 34204                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 34205  00EEE8  0E02               	movlw	2
 34206  00EEEA  6F61               	movwf	_MSDReadState& (0+255),b
 34207  00EEEC                     
 34208                           ; BSR set to: 1
 34209                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 34210                           
 34211                           ; BSR set to: 1
 34212  00EEEC  5149               	movf	_USBMSDInHandle& (0+255),w,b
 34213  00EEEE  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 34214  00EEF0  B4D8               	btfsc	status,2,c
 34215  00EEF2  D006               	goto	l688
 34216                           
 34217                           ; BSR set to: 1
 34218  00EEF4  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 34219  00EEF8  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 34220  00EEFC  BEDF               	btfsc	indf2,7,c
 34221  00EEFE  D0AF               	goto	l684
 34222  00EF00                     l688:
 34223                           
 34224                           ; BSR set to: 1
 34225                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 34226                           
 34227                           ; BSR set to: 1
 34228  00EF00  C29E  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 34229  00EF04  C29F  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 34230  00EF08  C12B  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 34231  00EF0C  C12C  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 34232  00EF10  C12D  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 34233  00EF14  C12E  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 34234  00EF18  0E00               	movlw	0
 34235  00EF1A  0100               	movlb	0	; () banked
 34236  00EF1C  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 34237  00EF1E  0E06               	movlw	6
 34238  00EF20  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 34239  00EF22  EE22  F095         	lfsr	2,_LUN+12
 34240  00EF26  D801               	call	u11268
 34241  00EF28  D00A               	goto	u11269
 34242  00EF2A                     u11268:
 34243  00EF2A  0005               	push	
 34244  00EF2C  6EFA               	movwf	pclath,c
 34245  00EF2E  50DE               	movf	postinc2,w,c
 34246  00EF30  6EFD               	movwf	tosl,c
 34247  00EF32  50DE               	movf	postinc2,w,c
 34248  00EF34  6EFE               	movwf	tosh,c
 34249  00EF36  50DE               	movf	postinc2,w,c
 34250  00EF38  6EFF               	movwf	tosu,c
 34251  00EF3A  50FA               	movf	pclath,w,c
 34252  00EF3C  0012               	return		;indir
 34253  00EF3E                     u11269:
 34254  00EF3E  06E8               	decf	wreg,f,c
 34255  00EF40  B4D8               	btfsc	status,2,c
 34256  00EF42  D01B               	goto	l691
 34257                           
 34258                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 34259  00EF44  0E64               	movlw	100
 34260  00EF46  0101               	movlb	1	; () banked
 34261  00EF48  615F               	cpfslt	_MSDRetryAttempt& (0+255),b
 34262  00EF4A  D002               	goto	l690
 34263                           
 34264                           ; BSR set to: 1
 34265                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 34266  00EF4C  2B5F               	incf	_MSDRetryAttempt& (0+255),f,b
 34267                           
 34268                           ;usb_device_msd.c: 1088: break;
 34269  00EF4E  D087               	goto	l684
 34270  00EF50                     l690:
 34271                           
 34272                           ; BSR set to: 1
 34273                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 34274                           
 34275                           ; BSR set to: 1
 34276  00EF50  0E02               	movlw	2
 34277  00EF52  010D               	movlb	13	; () banked
 34278  00EF54  6F8C               	movwf	140,b	;volatile
 34279                           
 34280                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 34281  00EF56  0101               	movlb	1	; () banked
 34282  00EF58  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 34283  00EF5A  0BF0               	andlw	-16
 34284  00EF5C  0903               	iorlw	3
 34285  00EF5E  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 34286                           
 34287                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 34288  00EF60  0E00               	movlw	0
 34289  00EF62  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 34290                           
 34291                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 34292  00EF64  0E00               	movlw	0
 34293  00EF66  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 34294                           
 34295                           ; BSR set to: 1
 34296                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 34297  00EF68  0E01               	movlw	1
 34298  00EF6A  0100               	movlb	0	; () banked
 34299  00EF6C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34300  00EF6E  0E02               	movlw	2
 34301  00EF70  ECD9  F085         	call	_USBStallEndpoint
 34302  00EF74  D05F               	goto	l12924
 34303  00EF76                     L51:
 34304  00EF76  6F61               	movwf	_MSDReadState& (0+255),b
 34305                           
 34306                           ;usb_device_msd.c: 1109: break;
 34307  00EF78  D072               	goto	l684
 34308  00EF7A                     l691:
 34309                           
 34310                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 34311                           
 34312                           ; BSR set to: 1
 34313                           
 34314                           ; BSR set to: 1
 34315  00EF7A  0E01               	movlw	1
 34316  00EF7C  0101               	movlb	1	; () banked
 34317  00EF7E  272B               	addwf	_LBA& (0+255),f,b
 34318  00EF80  0E00               	movlw	0
 34319  00EF82  232C               	addwfc	(_LBA+1)& (0+255),f,b
 34320  00EF84  232D               	addwfc	(_LBA+2)& (0+255),f,b
 34321  00EF86  232E               	addwfc	(_LBA+3)& (0+255),f,b
 34322                           
 34323                           ; BSR set to: 1
 34324                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 34325  00EF88  0E00               	movlw	0
 34326  00EF8A  010D               	movlb	13	; () banked
 34327  00EF8C  6F88               	movwf	136,b	;volatile
 34328  00EF8E  0E02               	movlw	2
 34329  00EF90  6F89               	movwf	137,b	;volatile
 34330  00EF92  0E00               	movlw	0
 34331  00EF94  6F8A               	movwf	138,b	;volatile
 34332  00EF96  0E00               	movlw	0
 34333  00EF98  6F8B               	movwf	139,b	;volatile
 34334                           
 34335                           ; BSR set to: 13
 34336                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 34337  00EF9A  0E00               	movlw	0
 34338  00EF9C  0101               	movlb	1	; () banked
 34339  00EF9E  6F4D               	movwf	_ptrNextData& (0+255),b
 34340  00EFA0  0E06               	movlw	6
 34341  00EFA2  6F4E               	movwf	(_ptrNextData+1)& (0+255),b
 34342                           
 34343                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 34344  00EFA4  0E03               	movlw	3
 34345  00EFA6  6F61               	movwf	_MSDReadState& (0+255),b
 34346  00EFA8                     
 34347                           ; BSR set to: 1
 34348                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 34349                           
 34350                           ; BSR set to: 1
 34351  00EFA8  010D               	movlb	13	; () banked
 34352  00EFAA  5188               	movf	136,w,b	;volatile
 34353  00EFAC  1189               	iorwf	137,w,b	;volatile
 34354  00EFAE  118A               	iorwf	138,w,b	;volatile
 34355  00EFB0  118B               	iorwf	139,w,b	;volatile
 34356  00EFB2  A4D8               	btfss	status,2,c
 34357  00EFB4  D002               	goto	l693
 34358                           
 34359                           ; BSR set to: 13
 34360                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 34361  00EFB6  0E01               	movlw	1
 34362  00EFB8  D03E               	goto	L53
 34363  00EFBA                     l693:
 34364                           
 34365                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 34366                           
 34367                           ; BSR set to: 1
 34368  00EFBA  0E04               	movlw	4
 34369  00EFBC  0101               	movlb	1	; () banked
 34370  00EFBE  6F61               	movwf	_MSDReadState& (0+255),b
 34371  00EFC0                     
 34372                           ; BSR set to: 1
 34373                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 34374                           
 34375                           ; BSR set to: 1
 34376  00EFC0  5149               	movf	_USBMSDInHandle& (0+255),w,b
 34377  00EFC2  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 34378  00EFC4  B4D8               	btfsc	status,2,c
 34379  00EFC6  D006               	goto	l695
 34380                           
 34381                           ; BSR set to: 1
 34382  00EFC8  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 34383  00EFCC  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 34384  00EFD0  BEDF               	btfsc	indf2,7,c
 34385  00EFD2  D045               	goto	l684
 34386  00EFD4                     l695:
 34387                           
 34388                           ; BSR set to: 1
 34389                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 34390                           
 34391                           ; BSR set to: 1
 34392  00EFD4  0E01               	movlw	1
 34393  00EFD6  0100               	movlb	0	; () banked
 34394  00EFD8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34395  00EFDA  C14D  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 34396  00EFDE  C14E  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 34397  00EFE2  0E40               	movlw	64
 34398  00EFE4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34399  00EFE6  0E02               	movlw	2
 34400  00EFE8  EC5E  F086         	call	_USBTransferOnePacket
 34401  00EFEC  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 34402  00EFF0  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 34403                           
 34404                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 34405  00EFF4  0E03               	movlw	3
 34406  00EFF6  0101               	movlb	1	; () banked
 34407  00EFF8  6F61               	movwf	_MSDReadState& (0+255),b
 34408                           
 34409                           ; BSR set to: 1
 34410                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 34411  00EFFA  0E40               	movlw	64
 34412  00EFFC  0102               	movlb	2	; () banked
 34413  00EFFE  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 34414  00F000  0E00               	movlw	0
 34415  00F002  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 34416  00F004  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 34417  00F006  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 34418                           
 34419                           ; BSR set to: 2
 34420                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 34421  00F008  0E40               	movlw	64
 34422  00F00A  010D               	movlb	13	; () banked
 34423  00F00C  5F88               	subwf	136,f,b	;volatile
 34424  00F00E  0E00               	movlw	0
 34425  00F010  5B89               	subwfb	137,f,b	;volatile
 34426  00F012  5B8A               	subwfb	138,f,b	;volatile
 34427  00F014  5B8B               	subwfb	139,f,b	;volatile
 34428                           
 34429                           ; BSR set to: 13
 34430                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 34431  00F016  0E40               	movlw	64
 34432  00F018  0101               	movlb	1	; () banked
 34433  00F01A  274D               	addwf	_ptrNextData& (0+255),f,b
 34434  00F01C  0E00               	movlw	0
 34435  00F01E  234E               	addwfc	(_ptrNextData+1)& (0+255),f,b
 34436                           
 34437                           ;usb_device_msd.c: 1149: break;
 34438  00F020  D01E               	goto	l684
 34439  00F022                     
 34440                           ; BSR set to: 1
 34441                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 34442                           
 34443                           ; BSR set to: 1
 34444  00F022  0E02               	movlw	2
 34445  00F024  010D               	movlb	13	; () banked
 34446  00F026  6F8C               	movwf	140,b	;volatile
 34447                           
 34448                           ; BSR set to: 13
 34449                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 34450  00F028  0E01               	movlw	1
 34451  00F02A  0100               	movlb	0	; () banked
 34452  00F02C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34453  00F02E  0E02               	movlw	2
 34454  00F030  ECD9  F085         	call	_USBStallEndpoint
 34455  00F034                     l12924:
 34456                           
 34457                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 34458  00F034  0E00               	movlw	0
 34459  00F036                     L53:
 34460  00F036  0101               	movlb	1	; () banked
 34461  00F038  D79E               	goto	L51
 34462  00F03A                     l681:
 34463                           
 34464                           ; BSR set to: 1
 34465  00F03A  0101               	movlb	1	; () banked
 34466  00F03C  5161               	movf	_MSDReadState& (0+255),w,b
 34467                           
 34468                           ; Switch size 1, requested type "space"
 34469                           ; Number of cases is 5, Range of values is 0 to 4
 34470                           ; switch strategies available:
 34471                           ; Name         Instructions Cycles
 34472                           ; simple_byte           16     9 (average)
 34473                           ;	Chosen strategy is simple_byte
 34474  00F03E  0A00               	xorlw	0	; case 0
 34475  00F040  B4D8               	btfsc	status,2,c
 34476  00F042  D71C               	goto	l682
 34477  00F044  0A01               	xorlw	1	; case 1
 34478  00F046  B4D8               	btfsc	status,2,c
 34479  00F048  D746               	goto	l685
 34480  00F04A  0A03               	xorlw	3	; case 2
 34481  00F04C  B4D8               	btfsc	status,2,c
 34482  00F04E  D74E               	goto	l687
 34483  00F050  0A01               	xorlw	1	; case 3
 34484  00F052  B4D8               	btfsc	status,2,c
 34485  00F054  D7A9               	goto	l692
 34486  00F056  0A07               	xorlw	7	; case 4
 34487  00F058  B4D8               	btfsc	status,2,c
 34488  00F05A  D7B2               	goto	l694
 34489  00F05C  D7E2               	goto	l696
 34490  00F05E                     l684:
 34491                           
 34492                           ;usb_device_msd.c: 1161: return MSDReadState;
 34493                           
 34494                           ; BSR set to: 1
 34495  00F05E  0101               	movlb	1	; () banked
 34496  00F060  5161               	movf	_MSDReadState& (0+255),w,b
 34497  00F062  0012               	return	
 34498  00F064                     __end_of_MSDReadHandler:
 34499                           	opt stack 0
 34500                           tosu	equ	0xFFF
 34501                           tosh	equ	0xFFE
 34502                           tosl	equ	0xFFD
 34503                           pclath	equ	0xFFA
 34504                           tblptru	equ	0xFF8
 34505                           tblptrh	equ	0xFF7
 34506                           tblptrl	equ	0xFF6
 34507                           tablat	equ	0xFF5
 34508                           prodh	equ	0xFF4
 34509                           prodl	equ	0xFF3
 34510                           intcon	equ	0xFF2
 34511                           postinc0	equ	0xFEE
 34512                           wreg	equ	0xFE8
 34513                           indf1	equ	0xFE7
 34514                           postinc1	equ	0xFE6
 34515                           postdec1	equ	0xFE5
 34516                           plusw1	equ	0xFE3
 34517                           fsr1h	equ	0xFE2
 34518                           fsr1l	equ	0xFE1
 34519                           indf2	equ	0xFDF
 34520                           postinc2	equ	0xFDE
 34521                           postdec2	equ	0xFDD
 34522                           plusw2	equ	0xFDB
 34523                           fsr2h	equ	0xFDA
 34524                           fsr2l	equ	0xFD9
 34525                           status	equ	0xFD8
 34526                           
 34527 ;; *************** function _MSDCheckForErrorCases *****************
 34528 ;; Defined at:
 34529 ;;		line 1434 in file "usb_device_msd.c"
 34530 ;; Parameters:    Size  Location     Type
 34531 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 34532 ;; Auto vars:     Size  Location     Type
 34533 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 34534 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 34535 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 34536 ;; Return value:  Size  Location     Type
 34537 ;;                  1    wreg      unsigned char 
 34538 ;; Registers used:
 34539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34540 ;; Tracked objects:
 34541 ;;		On entry : 0/0
 34542 ;;		On exit  : 0/0
 34543 ;;		Unchanged: 0/0
 34544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34545 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34546 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34548 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34549 ;;Total ram usage:        7 bytes
 34550 ;; Hardware stack levels used:    1
 34551 ;; Hardware stack levels required when called:   12
 34552 ;; This function calls:
 34553 ;;		_MSDErrorHandler
 34554 ;; This function is called by:
 34555 ;;		_MSDProcessCommandMediaPresent
 34556 ;;		_MSDReadHandler
 34557 ;;		_MSDWriteHandler
 34558 ;; This function uses a non-reentrant model
 34559 ;;
 34560                           
 34561                           	psect	text137
 34562  010772                     __ptext137:
 34563                           	opt stack 0
 34564  010772                     _MSDCheckForErrorCases:
 34565                           	opt stack 13
 34566                           
 34567                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 34568                           
 34569                           ; BSR set to: 1
 34570                           ;incstack = 0
 34571  010772  0100               	movlb	0	; () banked
 34572  010774  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 34573  010776  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 34574  010778  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 34575  01077A  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 34576  01077C  A4D8               	btfss	status,2,c
 34577  01077E  D002               	goto	l726
 34578                           
 34579                           ; BSR set to: 0
 34580                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 34581  010780  0E01               	movlw	1
 34582  010782  D001               	goto	L54
 34583  010784                     l726:
 34584                           
 34585                           ; BSR set to: 0
 34586                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 34587                           
 34588                           ; BSR set to: 0
 34589  010784  0E00               	movlw	0
 34590  010786                     L54:
 34591  010786  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 34592                           
 34593                           ; BSR set to: 0
 34594                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 34595                           
 34596                           ; BSR set to: 0
 34597  010788  0101               	movlb	1	; () banked
 34598  01078A  055C               	decf	_MSDHostNoData& (0+255),w,b
 34599  01078C  A4D8               	btfss	status,2,c
 34600  01078E  D006               	goto	l728
 34601                           
 34602                           ; BSR set to: 1
 34603  010790  0100               	movlb	0	; () banked
 34604  010792  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 34605  010794  A4D8               	btfss	status,2,c
 34606  010796  D002               	goto	l728
 34607                           
 34608                           ; BSR set to: 0
 34609                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 34610  010798  0E00               	movlw	0
 34611                           
 34612                           ; BSR set to: 0
 34613  01079A  0012               	return	
 34614  01079C                     l728:
 34615                           
 34616                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 34617                           
 34618                           ; BSR set to: 0
 34619  01079C  0100               	movlb	0	; () banked
 34620  01079E  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 34621  0107A0  0102               	movlb	2	; () banked
 34622  0107A2  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 34623  0107A4  E120               	bnz	l12568
 34624  0107A6  0100               	movlb	0	; () banked
 34625  0107A8  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 34626  0107AA  0102               	movlb	2	; () banked
 34627  0107AC  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 34628  0107AE  E11B               	bnz	l12568
 34629  0107B0  0100               	movlb	0	; () banked
 34630  0107B2  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 34631  0107B4  0102               	movlb	2	; () banked
 34632  0107B6  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 34633  0107B8  E116               	bnz	l12568
 34634  0107BA  0100               	movlb	0	; () banked
 34635  0107BC  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 34636  0107BE  0102               	movlb	2	; () banked
 34637  0107C0  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 34638  0107C2  A4D8               	btfss	status,2,c
 34639  0107C4  D010               	goto	l734
 34640                           
 34641                           ; BSR set to: 2
 34642                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 34643  0107C6  0101               	movlb	1	; () banked
 34644  0107C8  0563               	decf	_MSD_State& (0+255),w,b
 34645  0107CA  A4D8               	btfss	status,2,c
 34646  0107CC  D006               	goto	l731
 34647                           
 34648                           ; BSR set to: 1
 34649                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 34650  0107CE  0E2A               	movlw	42
 34651  0107D0  1962               	xorwf	_MSDCommandState& (0+255),w,b
 34652  0107D2  B4D8               	btfsc	status,2,c
 34653  0107D4  D008               	goto	l734
 34654                           
 34655                           ; BSR set to: 1
 34656                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 34657  0107D6  0E00               	movlw	0
 34658                           
 34659                           ; BSR set to: 1
 34660  0107D8  0012               	return	
 34661  0107DA                     l731:
 34662                           
 34663                           ; BSR set to: 1
 34664                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 34665                           
 34666                           ; BSR set to: 1
 34667  0107DA  0E2A               	movlw	42
 34668  0107DC  1962               	xorwf	_MSDCommandState& (0+255),w,b
 34669  0107DE  A4D8               	btfss	status,2,c
 34670  0107E0  D002               	goto	l734
 34671                           
 34672                           ; BSR set to: 1
 34673                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 34674  0107E2  0E00               	movlw	0
 34675                           
 34676                           ; BSR set to: 1
 34677  0107E4  0012               	return	
 34678  0107E6                     l734:
 34679  0107E6                     l12568:
 34680                           
 34681                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 34682  0107E6  0102               	movlb	2	; () banked
 34683  0107E8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 34684  0107EA  0100               	movlb	0	; () banked
 34685  0107EC  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 34686  0107EE  0102               	movlb	2	; () banked
 34687  0107F0  5109               	movf	(_gblCBW+9)& (0+255),w,b
 34688  0107F2  0100               	movlb	0	; () banked
 34689  0107F4  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 34690  0107F6  0102               	movlb	2	; () banked
 34691  0107F8  510A               	movf	(_gblCBW+10)& (0+255),w,b
 34692  0107FA  0100               	movlb	0	; () banked
 34693  0107FC  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 34694  0107FE  0102               	movlb	2	; () banked
 34695  010800  510B               	movf	(_gblCBW+11)& (0+255),w,b
 34696  010802  0100               	movlb	0	; () banked
 34697  010804  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 34698  010806  B0D8               	btfsc	status,0,c
 34699  010808  D002               	goto	l735
 34700                           
 34701                           ; BSR set to: 0
 34702                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 34703  01080A  0E01               	movlw	1
 34704  01080C  D001               	goto	L55
 34705  01080E                     l735:
 34706                           
 34707                           ; BSR set to: 0
 34708                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 34709                           
 34710                           ; BSR set to: 0
 34711  01080E  0E00               	movlw	0
 34712  010810                     L55:
 34713  010810  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 34714                           
 34715                           ; BSR set to: 0
 34716                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 34717                           
 34718                           ; BSR set to: 0
 34719  010812  0E02               	movlw	2
 34720  010814  0101               	movlb	1	; () banked
 34721  010816  1963               	xorwf	_MSD_State& (0+255),w,b
 34722  010818  A4D8               	btfss	status,2,c
 34723  01081A  D017               	goto	l737
 34724                           
 34725                           ; BSR set to: 1
 34726                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 34727  01081C  0E2A               	movlw	42
 34728  01081E  1962               	xorwf	_MSDCommandState& (0+255),w,b
 34729  010820  B4D8               	btfsc	status,2,c
 34730  010822  D006               	goto	l738
 34731                           
 34732                           ; BSR set to: 1
 34733  010824  0100               	movlb	0	; () banked
 34734  010826  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 34735  010828  A4D8               	btfss	status,2,c
 34736  01082A  D002               	goto	l738
 34737  01082C                     u10890:
 34738                           
 34739                           ; BSR set to: 0
 34740                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 34741  01082C  0E05               	movlw	5
 34742  01082E  D025               	goto	L60
 34743  010830                     l738:
 34744                           
 34745                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 34746                           
 34747                           ; BSR set to: 0
 34748  010830  0101               	movlb	1	; () banked
 34749  010832  055C               	decf	_MSDHostNoData& (0+255),w,b
 34750  010834  B4D8               	btfsc	status,2,c
 34751  010836  D014               	goto	u10940
 34752                           
 34753                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 34754                           
 34755                           ; BSR set to: 0
 34756                           
 34757                           ; BSR set to: 1
 34758                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 34759  010838  0100               	movlb	0	; () banked
 34760  01083A  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 34761  01083C  B4D8               	btfsc	status,2,c
 34762  01083E  D003               	goto	u10920
 34763                           
 34764                           ; BSR set to: 0
 34765                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 34766                           
 34767                           ; BSR set to: 0
 34768                           
 34769                           ; BSR set to: 0
 34770                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 34771  010840  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 34772  010842  A4D8               	btfss	status,2,c
 34773  010844  D7F3               	goto	u10890
 34774  010846                     u10920:
 34775                           
 34776                           ; BSR set to: 0
 34777                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 34778  010846  0E04               	movlw	4
 34779  010848  D018               	goto	L60
 34780  01084A                     l737:
 34781                           
 34782                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 34783                           
 34784                           ; BSR set to: 0
 34785  01084A  0E2A               	movlw	42
 34786  01084C  0101               	movlb	1	; () banked
 34787  01084E  1962               	xorwf	_MSDCommandState& (0+255),w,b
 34788  010850  A4D8               	btfss	status,2,c
 34789  010852  D002               	goto	l747
 34790                           
 34791                           ; BSR set to: 1
 34792                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 34793  010854  0E03               	movlw	3
 34794  010856  D005               	goto	L59
 34795  010858                     l747:
 34796                           
 34797                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 34798                           
 34799                           ; BSR set to: 0
 34800  010858  0101               	movlb	1	; () banked
 34801  01085A  055C               	decf	_MSDHostNoData& (0+255),w,b
 34802  01085C  A4D8               	btfss	status,2,c
 34803  01085E  D003               	goto	l749
 34804  010860                     u10940:
 34805                           
 34806                           ; BSR set to: 1
 34807                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 34808  010860  0E01               	movlw	1
 34809  010862                     L59:
 34810  010862  0100               	movlb	0	; () banked
 34811  010864  D00A               	goto	L60
 34812  010866                     l749:
 34813                           
 34814                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 34815                           
 34816                           ; BSR set to: 0
 34817  010866  0100               	movlb	0	; () banked
 34818  010868  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 34819  01086A  B4D8               	btfsc	status,2,c
 34820  01086C  D003               	goto	u10960
 34821                           
 34822                           ; BSR set to: 0
 34823                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 34824                           
 34825                           ; BSR set to: 0
 34826                           
 34827                           ; BSR set to: 0
 34828                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 34829  01086E  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 34830  010870  A4D8               	btfss	status,2,c
 34831  010872  D002               	goto	l753
 34832  010874                     u10960:
 34833                           
 34834                           ; BSR set to: 0
 34835                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 34836  010874  0E02               	movlw	2
 34837  010876  D001               	goto	L60
 34838  010878                     l753:
 34839                           
 34840                           ; BSR set to: 0
 34841                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 34842                           
 34843                           ; BSR set to: 0
 34844  010878  0E03               	movlw	3
 34845  01087A                     L60:
 34846  01087A  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 34847                           
 34848                           ; BSR set to: 0
 34849                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 34850                           
 34851                           ; BSR set to: 0
 34852                           
 34853                           ; BSR set to: 0
 34854                           
 34855                           ; BSR set to: 0
 34856                           
 34857                           ; BSR set to: 0
 34858                           
 34859                           ; BSR set to: 0
 34860  01087C  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 34861  01087E  EC2C  F083         	call	_MSDErrorHandler
 34862                           
 34863                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 34864  010882  0100               	movlb	0	; () banked
 34865  010884  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 34866  010886  0012               	return	
 34867  010888                     __end_of_MSDCheckForErrorCases:
 34868                           	opt stack 0
 34869                           tosu	equ	0xFFF
 34870                           tosh	equ	0xFFE
 34871                           tosl	equ	0xFFD
 34872                           pclath	equ	0xFFA
 34873                           tblptru	equ	0xFF8
 34874                           tblptrh	equ	0xFF7
 34875                           tblptrl	equ	0xFF6
 34876                           tablat	equ	0xFF5
 34877                           prodh	equ	0xFF4
 34878                           prodl	equ	0xFF3
 34879                           intcon	equ	0xFF2
 34880                           postinc0	equ	0xFEE
 34881                           wreg	equ	0xFE8
 34882                           indf1	equ	0xFE7
 34883                           postinc1	equ	0xFE6
 34884                           postdec1	equ	0xFE5
 34885                           plusw1	equ	0xFE3
 34886                           fsr1h	equ	0xFE2
 34887                           fsr1l	equ	0xFE1
 34888                           indf2	equ	0xFDF
 34889                           postinc2	equ	0xFDE
 34890                           postdec2	equ	0xFDD
 34891                           plusw2	equ	0xFDB
 34892                           fsr2h	equ	0xFDA
 34893                           fsr2l	equ	0xFD9
 34894                           status	equ	0xFD8
 34895                           
 34896 ;; *************** function _MSDErrorHandler *****************
 34897 ;; Defined at:
 34898 ;;		line 1577 in file "usb_device_msd.c"
 34899 ;; Parameters:    Size  Location     Type
 34900 ;;  ErrorCase       1    wreg     unsigned char 
 34901 ;; Auto vars:     Size  Location     Type
 34902 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 34903 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 34904 ;; Return value:  Size  Location     Type
 34905 ;;                  1    wreg      void 
 34906 ;; Registers used:
 34907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34908 ;; Tracked objects:
 34909 ;;		On entry : 0/0
 34910 ;;		On exit  : 0/0
 34911 ;;		Unchanged: 0/0
 34912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34914 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34917 ;;Total ram usage:        2 bytes
 34918 ;; Hardware stack levels used:    1
 34919 ;; Hardware stack levels required when called:   11
 34920 ;; This function calls:
 34921 ;;		_ResetSenseData
 34922 ;;		_USBStallEndpoint
 34923 ;; This function is called by:
 34924 ;;		_MSDProcessCommandMediaAbsent
 34925 ;;		_MSDProcessCommandMediaPresent
 34926 ;;		_MSDCheckForErrorCases
 34927 ;; This function uses a non-reentrant model
 34928 ;;
 34929                           
 34930                           	psect	text138
 34931  010658                     __ptext138:
 34932                           	opt stack 0
 34933  010658                     _MSDErrorHandler:
 34934                           	opt stack 13
 34935                           
 34936                           ;incstack = 0
 34937                           ;MSDErrorHandler@ErrorCase stored from wreg
 34938  010658  0100               	movlb	0	; () banked
 34939  01065A  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 34940                           
 34941                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 34942  01065C  0101               	movlb	1	; () banked
 34943  01065E  5149               	movf	_USBMSDInHandle& (0+255),w,b
 34944  010660  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 34945  010662  B4D8               	btfsc	status,2,c
 34946  010664  D006               	goto	u9970
 34947                           
 34948                           ; BSR set to: 1
 34949  010666  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 34950  01066A  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 34951  01066E  BEDF               	btfsc	indf2,7,c
 34952  010670  0012               	return	
 34953  010672                     u9970:
 34954                           
 34955                           ; BSR set to: 1
 34956                           
 34957                           ; BSR set to: 1
 34958  010672  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 34959  010674  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 34960  010676  B4D8               	btfsc	status,2,c
 34961  010678  D006               	goto	l757
 34962                           
 34963                           ; BSR set to: 1
 34964  01067A  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 34965  01067E  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 34966  010682  BEDF               	btfsc	indf2,7,c
 34967  010684  0012               	return	
 34968  010686                     l757:
 34969                           
 34970                           ; BSR set to: 1
 34971                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 34972  010686  C163  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 34973                           
 34974                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 34975  01068A  6962               	setf	_MSDCommandState& (0+255),b
 34976                           
 34977                           ; BSR set to: 1
 34978                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 34979  01068C  0E00               	movlw	0
 34980  01068E  6F61               	movwf	_MSDReadState& (0+255),b
 34981                           
 34982                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 34983  010690  0E00               	movlw	0
 34984  010692  6F60               	movwf	_MSDWriteState& (0+255),b
 34985                           
 34986                           ; BSR set to: 1
 34987                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 34988  010694  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 34989  010698  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 34990  01069C  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 34991  0106A0  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 34992                           
 34993                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 34994  0106A4  0E01               	movlw	1
 34995  0106A6  010D               	movlb	13	; () banked
 34996  0106A8  6F8C               	movwf	140,b	;volatile
 34997                           
 34998                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 34999  0106AA  0E03               	movlw	3
 35000  0106AC  0101               	movlb	1	; () banked
 35001  0106AE  6F63               	movwf	_MSD_State& (0+255),b
 35002                           
 35003                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 35004  0106B0  D04B               	goto	l763
 35005  0106B2                     
 35006                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 35007                           
 35008                           ; BSR set to: 1
 35009  0106B2  0E02               	movlw	2
 35010  0106B4  010D               	movlb	13	; () banked
 35011  0106B6  6F8C               	movwf	140,b	;volatile
 35012                           
 35013                           ;usb_device_msd.c: 1607: break;
 35014  0106B8  0012               	return	
 35015  0106BA                     
 35016                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 35017                           
 35018                           ; BSR set to: 13
 35019  0106BA  0E01               	movlw	1
 35020  0106BC  0100               	movlb	0	; () banked
 35021  0106BE  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35022  0106C0  0E02               	movlw	2
 35023  0106C2  ECD9  F085         	call	_USBStallEndpoint
 35024                           
 35025                           ;usb_device_msd.c: 1611: break;
 35026  0106C6  0012               	return	
 35027  0106C8                     
 35028                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 35029  0106C8  0E02               	movlw	2
 35030  0106CA  010D               	movlb	13	; () banked
 35031  0106CC  6F8C               	movwf	140,b	;volatile
 35032                           
 35033                           ; BSR set to: 13
 35034                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 35035  0106CE  0E01               	movlw	1
 35036  0106D0  0100               	movlb	0	; () banked
 35037  0106D2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35038  0106D4  0E02               	movlw	2
 35039  0106D6  ECD9  F085         	call	_USBStallEndpoint
 35040                           
 35041                           ;usb_device_msd.c: 1616: break;
 35042  0106DA  0012               	return	
 35043  0106DC                     
 35044                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 35045  0106DC  0E00               	movlw	0
 35046  0106DE  0100               	movlb	0	; () banked
 35047  0106E0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35048  0106E2  0E02               	movlw	2
 35049  0106E4  ECD9  F085         	call	_USBStallEndpoint
 35050                           
 35051                           ;usb_device_msd.c: 1620: break;
 35052  0106E8  0012               	return	
 35053  0106EA                     
 35054                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 35055  0106EA  0E02               	movlw	2
 35056  0106EC  010D               	movlb	13	; () banked
 35057  0106EE  6F8C               	movwf	140,b	;volatile
 35058                           
 35059                           ; BSR set to: 13
 35060                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 35061  0106F0  0E00               	movlw	0
 35062  0106F2  0100               	movlb	0	; () banked
 35063  0106F4  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35064  0106F6  0E02               	movlw	2
 35065  0106F8  ECD9  F085         	call	_USBStallEndpoint
 35066                           
 35067                           ;usb_device_msd.c: 1625: break;
 35068  0106FC  0012               	return	
 35069  0106FE                     
 35070                           ;usb_device_msd.c: 1628: ResetSenseData();
 35071  0106FE  EC3C  F0A0         	call	_ResetSenseData	;wreg free
 35072                           
 35073                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 35074  010702  0101               	movlb	1	; () banked
 35075  010704  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 35076  010706  0BF0               	andlw	-16
 35077  010708  0905               	iorlw	5
 35078  01070A  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 35079                           
 35080                           ; BSR set to: 1
 35081                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 35082  01070C  0E20               	movlw	32
 35083  01070E  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 35084                           
 35085                           ; BSR set to: 1
 35086                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 35087  010710  0E00               	movlw	0
 35088  010712  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 35089                           
 35090                           ; BSR set to: 1
 35091                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 35092  010714  0E02               	movlw	2
 35093  010716  0100               	movlb	0	; () banked
 35094  010718  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 35095  01071A  A4D8               	btfss	status,2,c
 35096  01071C  D00E               	goto	l771
 35097                           
 35098                           ; BSR set to: 0
 35099  01071E  0102               	movlb	2	; () banked
 35100  010720  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35101  010722  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35102  010724  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35103  010726  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 35104  010728  B4D8               	btfsc	status,2,c
 35105  01072A  D007               	goto	l771
 35106                           
 35107                           ; BSR set to: 2
 35108                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 35109  01072C  0E00               	movlw	0
 35110  01072E  0100               	movlb	0	; () banked
 35111  010730  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35112  010732  0E02               	movlw	2
 35113  010734  ECD9  F085         	call	_USBStallEndpoint
 35114                           
 35115                           ;usb_device_msd.c: 1636: }
 35116  010738  0012               	return	
 35117  01073A                     l771:
 35118                           
 35119                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 35120  01073A  0E01               	movlw	1
 35121  01073C  0100               	movlb	0	; () banked
 35122  01073E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35123  010740  0E02               	movlw	2
 35124  010742  ECD9  F085         	call	_USBStallEndpoint
 35125                           
 35126                           ;usb_device_msd.c: 1644: }
 35127                           
 35128                           ;usb_device_msd.c: 1643: break;
 35129                           
 35130                           ;usb_device_msd.c: 1642: default:
 35131                           
 35132                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 35133  010746  0012               	return	
 35134  010748                     l763:
 35135  010748  0100               	movlb	0	; () banked
 35136  01074A  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 35137                           
 35138                           ; Switch size 1, requested type "space"
 35139                           ; Number of cases is 6, Range of values is 1 to 127
 35140                           ; switch strategies available:
 35141                           ; Name         Instructions Cycles
 35142                           ; simple_byte           19    10 (average)
 35143                           ;	Chosen strategy is simple_byte
 35144  01074C  0A01               	xorlw	1	; case 1
 35145  01074E  B4D8               	btfsc	status,2,c
 35146  010750  D7B0               	goto	l764
 35147  010752  0A03               	xorlw	3	; case 2
 35148  010754  B4D8               	btfsc	status,2,c
 35149  010756  D7B1               	goto	l766
 35150  010758  0A01               	xorlw	1	; case 3
 35151  01075A  B4D8               	btfsc	status,2,c
 35152  01075C  D7B5               	goto	l767
 35153  01075E  0A07               	xorlw	7	; case 4
 35154  010760  B4D8               	btfsc	status,2,c
 35155  010762  D7BC               	goto	l768
 35156  010764  0A01               	xorlw	1	; case 5
 35157  010766  B4D8               	btfsc	status,2,c
 35158  010768  D7C0               	goto	l769
 35159  01076A  0A7A               	xorlw	122	; case 127
 35160  01076C  A4D8               	btfss	status,2,c
 35161  01076E  0012               	return	
 35162  010770  D7C6               	goto	l770
 35163  010772                     __end_of_MSDErrorHandler:
 35164                           	opt stack 0
 35165                           tosu	equ	0xFFF
 35166                           tosh	equ	0xFFE
 35167                           tosl	equ	0xFFD
 35168                           pclath	equ	0xFFA
 35169                           tblptru	equ	0xFF8
 35170                           tblptrh	equ	0xFF7
 35171                           tblptrl	equ	0xFF6
 35172                           tablat	equ	0xFF5
 35173                           prodh	equ	0xFF4
 35174                           prodl	equ	0xFF3
 35175                           intcon	equ	0xFF2
 35176                           postinc0	equ	0xFEE
 35177                           wreg	equ	0xFE8
 35178                           indf1	equ	0xFE7
 35179                           postinc1	equ	0xFE6
 35180                           postdec1	equ	0xFE5
 35181                           plusw1	equ	0xFE3
 35182                           fsr1h	equ	0xFE2
 35183                           fsr1l	equ	0xFE1
 35184                           indf2	equ	0xFDF
 35185                           postinc2	equ	0xFDE
 35186                           postdec2	equ	0xFDD
 35187                           plusw2	equ	0xFDB
 35188                           fsr2h	equ	0xFDA
 35189                           fsr2l	equ	0xFD9
 35190                           status	equ	0xFD8
 35191                           
 35192 ;; *************** function _USBStallEndpoint *****************
 35193 ;; Defined at:
 35194 ;;		line 1073 in file "usb_device.c"
 35195 ;; Parameters:    Size  Location     Type
 35196 ;;  ep              1    wreg     unsigned char 
 35197 ;;  dir             1    0[BANK0 ] unsigned char 
 35198 ;; Auto vars:     Size  Location     Type
 35199 ;;  ep              1    5[BANK0 ] unsigned char 
 35200 ;;  p               2    6[BANK0 ] PTR struct __BDT
 35201 ;;		 -> BDT(48), 
 35202 ;; Return value:  Size  Location     Type
 35203 ;;                  1    wreg      void 
 35204 ;; Registers used:
 35205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35206 ;; Tracked objects:
 35207 ;;		On entry : 0/0
 35208 ;;		On exit  : 0/0
 35209 ;;		Unchanged: 0/0
 35210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35211 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35212 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35213 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35214 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35215 ;;Total ram usage:        8 bytes
 35216 ;; Hardware stack levels used:    1
 35217 ;; Hardware stack levels required when called:   10
 35218 ;; This function calls:
 35219 ;;		Nothing
 35220 ;; This function is called by:
 35221 ;;		_MSDTasks
 35222 ;;		_MSDReadHandler
 35223 ;;		_MSDWriteHandler
 35224 ;;		_MSDErrorHandler
 35225 ;; This function uses a non-reentrant model
 35226 ;;
 35227                           
 35228                           	psect	text139
 35229  010BB2                     __ptext139:
 35230                           	opt stack 0
 35231  010BB2                     _USBStallEndpoint:
 35232                           	opt stack 18
 35233                           
 35234                           ;incstack = 0
 35235                           ;USBStallEndpoint@ep stored from wreg
 35236  010BB2  0100               	movlb	0	; () banked
 35237  010BB4  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 35238                           
 35239                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 35240  010BB6  0100               	movlb	0	; () banked
 35241  010BB8  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 35242  010BBA  A4D8               	btfss	status,2,c
 35243  010BBC  D02B               	goto	l192
 35244                           
 35245                           ; BSR set to: 0
 35246                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 35247  010BBE  EE20 F001          	lfsr	2,1
 35248  010BC2  505C               	movf	_pBDTEntryEP0OutNext,w,c
 35249  010BC4  26D9               	addwf	fsr2l,f,c
 35250  010BC6  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 35251  010BC8  22DA               	addwfc	fsr2h,f,c
 35252  010BCA  0E08               	movlw	8
 35253  010BCC  6EDF               	movwf	indf2,c
 35254                           
 35255                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 35256  010BCE  EE20 F002          	lfsr	2,2
 35257  010BD2  505C               	movf	_pBDTEntryEP0OutNext,w,c
 35258  010BD4  26D9               	addwf	fsr2l,f,c
 35259  010BD6  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 35260  010BD8  22DA               	addwfc	fsr2h,f,c
 35261  010BDA  0E30               	movlw	48
 35262  010BDC  6EDE               	movwf	postinc2,c
 35263  010BDE  0E0D               	movlw	13
 35264  010BE0  6EDD               	movwf	postdec2,c
 35265                           
 35266                           ; BSR set to: 0
 35267                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 35268  010BE2  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35269  010BE6  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35270  010BEA  0E0C               	movlw	12
 35271  010BEC  6EDF               	movwf	indf2,c
 35272                           
 35273                           ; BSR set to: 0
 35274                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 35275  010BEE  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35276  010BF2  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35277  010BF6  0E00               	movlw	0
 35278  010BF8  8EDB               	bsf	plusw2,7,c
 35279                           
 35280                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 35281  010BFA  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 35282  010BFE  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35283  010C02  0E04               	movlw	4
 35284  010C04  6EDF               	movwf	indf2,c
 35285                           
 35286                           ; BSR set to: 0
 35287                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 35288  010C06  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 35289  010C0A  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35290  010C0E  0E00               	movlw	0
 35291  010C10  8EDB               	bsf	plusw2,7,c
 35292                           
 35293                           ;usb_device.c: 1089: }
 35294  010C12  0012               	return	
 35295  010C14                     l192:
 35296                           
 35297                           ; BSR set to: 0
 35298                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 35299                           
 35300                           ; BSR set to: 0
 35301  010C14  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 35302  010C16  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 35303  010C18  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 35304  010C1A  90D8               	bcf	status,0,c
 35305  010C1C  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 35306  010C1E  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 35307  010C20  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 35308  010C22  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 35309  010C24  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 35310  010C26  90D8               	bcf	status,0,c
 35311  010C28  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35312  010C2A  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35313  010C2C  90D8               	bcf	status,0,c
 35314  010C2E  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35315  010C30  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35316  010C32  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 35317  010C34  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 35318  010C36  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 35319  010C38  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 35320  010C3A  90D8               	bcf	status,0,c
 35321  010C3C  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35322  010C3E  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35323  010C40  90D8               	bcf	status,0,c
 35324  010C42  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35325  010C44  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35326  010C46  0E00               	movlw	0
 35327  010C48  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 35328  010C4A  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 35329  010C4C  0E0D               	movlw	13
 35330  010C4E  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 35331  010C50  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 35332                           
 35333                           ; BSR set to: 0
 35334                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 35335  010C52  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 35336  010C56  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 35337  010C5A  0E00               	movlw	0
 35338  010C5C  84DB               	bsf	plusw2,2,c
 35339                           
 35340                           ; BSR set to: 0
 35341                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 35342  010C5E  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 35343  010C62  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 35344  010C66  0E00               	movlw	0
 35345  010C68  8EDB               	bsf	plusw2,7,c
 35346                           
 35347                           ; BSR set to: 0
 35348                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 35349  010C6A  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 35350  010C6C  0D04               	mullw	4
 35351  010C6E  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 35352  010C72  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 35353  010C76  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 35354  010C78  0D02               	mullw	2
 35355  010C7A  50F3               	movf	prodl,w,c
 35356  010C7C  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 35357  010C7E  50F4               	movf	prodh,w,c
 35358  010C80  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 35359  010C82  90D8               	bcf	status,0,c
 35360  010C84  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 35361  010C86  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 35362  010C88  90D8               	bcf	status,0,c
 35363  010C8A  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 35364  010C8C  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 35365  010C8E  0E04               	movlw	4
 35366  010C90  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 35367  010C92  0E00               	movlw	0
 35368  010C94  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 35369  010C96  0E00               	movlw	0
 35370  010C98  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 35371  010C9A  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 35372  010C9C  0E0D               	movlw	13
 35373  010C9E  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 35374  010CA0  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 35375                           
 35376                           ; BSR set to: 0
 35377                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 35378  010CA2  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 35379  010CA6  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 35380  010CAA  0E00               	movlw	0
 35381  010CAC  84DB               	bsf	plusw2,2,c
 35382                           
 35383                           ; BSR set to: 0
 35384                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 35385  010CAE  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 35386  010CB2  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 35387  010CB6  0E00               	movlw	0
 35388  010CB8  8EDB               	bsf	plusw2,7,c
 35389  010CBA  0012               	return	
 35390  010CBC                     __end_of_USBStallEndpoint:
 35391                           	opt stack 0
 35392                           tosu	equ	0xFFF
 35393                           tosh	equ	0xFFE
 35394                           tosl	equ	0xFFD
 35395                           pclath	equ	0xFFA
 35396                           tblptru	equ	0xFF8
 35397                           tblptrh	equ	0xFF7
 35398                           tblptrl	equ	0xFF6
 35399                           tablat	equ	0xFF5
 35400                           prodh	equ	0xFF4
 35401                           prodl	equ	0xFF3
 35402                           intcon	equ	0xFF2
 35403                           postinc0	equ	0xFEE
 35404                           wreg	equ	0xFE8
 35405                           indf1	equ	0xFE7
 35406                           postinc1	equ	0xFE6
 35407                           postdec1	equ	0xFE5
 35408                           plusw1	equ	0xFE3
 35409                           fsr1h	equ	0xFE2
 35410                           fsr1l	equ	0xFE1
 35411                           indf2	equ	0xFDF
 35412                           postinc2	equ	0xFDE
 35413                           postdec2	equ	0xFDD
 35414                           plusw2	equ	0xFDB
 35415                           fsr2h	equ	0xFDA
 35416                           fsr2l	equ	0xFD9
 35417                           status	equ	0xFD8
 35418                           
 35419 ;; *************** function _ResetSenseData *****************
 35420 ;; Defined at:
 35421 ;;		line 1373 in file "usb_device_msd.c"
 35422 ;; Parameters:    Size  Location     Type
 35423 ;;		None
 35424 ;; Auto vars:     Size  Location     Type
 35425 ;;		None
 35426 ;; Return value:  Size  Location     Type
 35427 ;;                  1    wreg      void 
 35428 ;; Registers used:
 35429 ;;		wreg, status,2
 35430 ;; Tracked objects:
 35431 ;;		On entry : 0/0
 35432 ;;		On exit  : 0/0
 35433 ;;		Unchanged: 0/0
 35434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35439 ;;Total ram usage:        0 bytes
 35440 ;; Hardware stack levels used:    1
 35441 ;; Hardware stack levels required when called:   10
 35442 ;; This function calls:
 35443 ;;		Nothing
 35444 ;; This function is called by:
 35445 ;;		_MSDProcessCommandMediaAbsent
 35446 ;;		_MSDProcessCommandMediaPresent
 35447 ;;		_MSDErrorHandler
 35448 ;; This function uses a non-reentrant model
 35449 ;;
 35450                           
 35451                           	psect	text140
 35452  014078                     __ptext140:
 35453                           	opt stack 0
 35454  014078                     _ResetSenseData:
 35455                           	opt stack 16
 35456                           
 35457                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 35458                           
 35459                           ; BSR set to: 0
 35460                           ;incstack = 0
 35461  014078  0101               	movlb	1	; () banked
 35462  01407A  9100               	bcf	_gblSenseData& (0+255),0,b
 35463  01407C  9300               	bcf	_gblSenseData& (0+255),1,b
 35464  01407E  9500               	bcf	_gblSenseData& (0+255),2,b
 35465  014080  9700               	bcf	_gblSenseData& (0+255),3,b
 35466  014082  8900               	bsf	_gblSenseData& (0+255),4,b
 35467  014084  8B00               	bsf	_gblSenseData& (0+255),5,b
 35468  014086  8D00               	bsf	_gblSenseData& (0+255),6,b
 35469                           
 35470                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 35471  014088  9F00               	bcf	_gblSenseData& (0+255),7,b
 35472                           
 35473                           ; BSR set to: 1
 35474                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 35475  01408A  0E00               	movlw	0
 35476  01408C  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 35477                           
 35478                           ; BSR set to: 1
 35479                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 35480  01408E  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 35481  014090  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 35482  014092  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 35483  014094  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 35484                           
 35485                           ; BSR set to: 1
 35486                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 35487  014096  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 35488                           
 35489                           ; BSR set to: 1
 35490                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 35491  014098  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 35492                           
 35493                           ; BSR set to: 1
 35494                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 35495  01409A  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 35496                           
 35497                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 35498  01409C  0E00               	movlw	0
 35499  01409E  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 35500                           
 35501                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 35502  0140A0  0E00               	movlw	0
 35503  0140A2  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 35504                           
 35505                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 35506  0140A4  0E00               	movlw	0
 35507  0140A6  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 35508                           
 35509                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 35510  0140A8  0E00               	movlw	0
 35511  0140AA  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 35512                           
 35513                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 35514  0140AC  0E0A               	movlw	10
 35515  0140AE  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 35516                           
 35517                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 35518  0140B0  0E00               	movlw	0
 35519  0140B2  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 35520  0140B4  0E00               	movlw	0
 35521  0140B6  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 35522  0140B8  0E00               	movlw	0
 35523  0140BA  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 35524  0140BC  0E00               	movlw	0
 35525  0140BE  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 35526                           
 35527                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 35528  0140C0  0E00               	movlw	0
 35529  0140C2  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 35530                           
 35531                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 35532  0140C4  0E00               	movlw	0
 35533  0140C6  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 35534                           
 35535                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 35536  0140C8  0E00               	movlw	0
 35537  0140CA  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 35538                           
 35539                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 35540  0140CC  0E00               	movlw	0
 35541  0140CE  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 35542                           
 35543                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 35544  0140D0  0E00               	movlw	0
 35545  0140D2  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 35546                           
 35547                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 35548  0140D4  0E00               	movlw	0
 35549  0140D6  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 35550                           
 35551                           ; BSR set to: 1
 35552  0140D8  0012               	return		;funcret
 35553  0140DA                     __end_of_ResetSenseData:
 35554                           	opt stack 0
 35555                           tosu	equ	0xFFF
 35556                           tosh	equ	0xFFE
 35557                           tosl	equ	0xFFD
 35558                           pclath	equ	0xFFA
 35559                           tblptru	equ	0xFF8
 35560                           tblptrh	equ	0xFF7
 35561                           tblptrl	equ	0xFF6
 35562                           tablat	equ	0xFF5
 35563                           prodh	equ	0xFF4
 35564                           prodl	equ	0xFF3
 35565                           intcon	equ	0xFF2
 35566                           postinc0	equ	0xFEE
 35567                           wreg	equ	0xFE8
 35568                           indf1	equ	0xFE7
 35569                           postinc1	equ	0xFE6
 35570                           postdec1	equ	0xFE5
 35571                           plusw1	equ	0xFE3
 35572                           fsr1h	equ	0xFE2
 35573                           fsr1l	equ	0xFE1
 35574                           indf2	equ	0xFDF
 35575                           postinc2	equ	0xFDE
 35576                           postdec2	equ	0xFDD
 35577                           plusw2	equ	0xFDB
 35578                           fsr2h	equ	0xFDA
 35579                           fsr2l	equ	0xFD9
 35580                           status	equ	0xFD8
 35581                           
 35582 ;; *************** function _ExternalFlash_SectorRead *****************
 35583 ;; Defined at:
 35584 ;;		line 40 in file "external_flash.c"
 35585 ;; Parameters:    Size  Location     Type
 35586 ;;  config          2   43[BANK0 ] PTR void 
 35587 ;;		 -> NULL(0), 
 35588 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 35589 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 35590 ;;		 -> msd_buffer(512), 
 35591 ;; Auto vars:     Size  Location     Type
 35592 ;;  page            2   51[BANK0 ] unsigned int 
 35593 ;; Return value:  Size  Location     Type
 35594 ;;                  1    wreg      unsigned char 
 35595 ;; Registers used:
 35596 ;;		wreg, status,2, status,0, cstack
 35597 ;; Tracked objects:
 35598 ;;		On entry : 0/0
 35599 ;;		On exit  : 0/0
 35600 ;;		Unchanged: 0/0
 35601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35602 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35603 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35605 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35606 ;;Total ram usage:       10 bytes
 35607 ;; Hardware stack levels used:    1
 35608 ;; Hardware stack levels required when called:   15
 35609 ;; This function calls:
 35610 ;;		_flash_sector_read
 35611 ;; This function is called by:
 35612 ;;		_MSDReadHandler
 35613 ;; This function uses a non-reentrant model
 35614 ;;
 35615                           
 35616                           	psect	text141
 35617  015006                     __ptext141:
 35618                           	opt stack 0
 35619  015006                     _ExternalFlash_SectorRead:
 35620                           	opt stack 10
 35621                           
 35622                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 35623                           
 35624                           ; BSR set to: 1
 35625                           ;incstack = 0
 35626  015006  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 35627  01500A  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 35628                           
 35629                           ;external_flash.c: 45: if(sector_addr >= 8192)
 35630  01500E  0100               	movlb	0	; () banked
 35631  015010  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 35632  015012  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 35633  015014  E104               	bnz	u11000
 35634  015016  0E20               	movlw	32
 35635  015018  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 35636  01501A  A0D8               	btfss	status,0,c
 35637  01501C  D002               	goto	l1677
 35638  01501E                     u11000:
 35639                           
 35640                           ; BSR set to: 0
 35641                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 35642  01501E  0E00               	movlw	0
 35643                           
 35644                           ; BSR set to: 0
 35645  015020  0012               	return	
 35646  015022                     l1677:
 35647                           
 35648                           ; BSR set to: 0
 35649                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 35650                           
 35651                           ; BSR set to: 0
 35652  015022  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 35653  015026  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 35654  01502A  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 35655  01502E  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 35656  015032  ECB5  F0A9         	call	_flash_sector_read	;wreg free
 35657                           
 35658                           ;external_flash.c: 53: return 1;
 35659  015036  0E01               	movlw	1
 35660  015038  0012               	return	
 35661  01503A                     __end_of_ExternalFlash_SectorRead:
 35662                           	opt stack 0
 35663                           tosu	equ	0xFFF
 35664                           tosh	equ	0xFFE
 35665                           tosl	equ	0xFFD
 35666                           pclath	equ	0xFFA
 35667                           tblptru	equ	0xFF8
 35668                           tblptrh	equ	0xFF7
 35669                           tblptrl	equ	0xFF6
 35670                           tablat	equ	0xFF5
 35671                           prodh	equ	0xFF4
 35672                           prodl	equ	0xFF3
 35673                           intcon	equ	0xFF2
 35674                           postinc0	equ	0xFEE
 35675                           wreg	equ	0xFE8
 35676                           indf1	equ	0xFE7
 35677                           postinc1	equ	0xFE6
 35678                           postdec1	equ	0xFE5
 35679                           plusw1	equ	0xFE3
 35680                           fsr1h	equ	0xFE2
 35681                           fsr1l	equ	0xFE1
 35682                           indf2	equ	0xFDF
 35683                           postinc2	equ	0xFDE
 35684                           postdec2	equ	0xFDD
 35685                           plusw2	equ	0xFDB
 35686                           fsr2h	equ	0xFDA
 35687                           fsr2l	equ	0xFD9
 35688                           status	equ	0xFD8
 35689                           
 35690 ;; *************** function _flash_sector_read *****************
 35691 ;; Defined at:
 35692 ;;		line 426 in file "flash.c"
 35693 ;; Parameters:    Size  Location     Type
 35694 ;;  page            2   39[BANK0 ] unsigned int 
 35695 ;;  data            2   41[BANK0 ] PTR unsigned char 
 35696 ;;		 -> buffer(512), msd_buffer(512), 
 35697 ;; Auto vars:     Size  Location     Type
 35698 ;;		None
 35699 ;; Return value:  Size  Location     Type
 35700 ;;                  1    wreg      void 
 35701 ;; Registers used:
 35702 ;;		wreg, status,2, status,0, cstack
 35703 ;; Tracked objects:
 35704 ;;		On entry : 0/0
 35705 ;;		On exit  : 0/0
 35706 ;;		Unchanged: 0/0
 35707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35708 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35711 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35712 ;;Total ram usage:        4 bytes
 35713 ;; Hardware stack levels used:    1
 35714 ;; Hardware stack levels required when called:   14
 35715 ;; This function calls:
 35716 ;;		__flash_partial_read
 35717 ;; This function is called by:
 35718 ;;		_ExternalFlash_SectorRead
 35719 ;;		__get_available_cluster
 35720 ;;		__find_nth_cluster
 35721 ;;		__make_cluster_chain
 35722 ;;		_fat_find_file
 35723 ;;		_fat_get_format_status
 35724 ;; This function uses a non-reentrant model
 35725 ;;
 35726                           
 35727                           	psect	text142
 35728  01536A                     __ptext142:
 35729                           	opt stack 0
 35730  01536A                     _flash_sector_read:
 35731                           	opt stack 13
 35732                           
 35733                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 35734                           
 35735                           ;incstack = 0
 35736  01536A  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 35737  01536E  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 35738  015372  0E00               	movlw	0
 35739  015374  0100               	movlb	0	; () banked
 35740  015376  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 35741  015378  0E00               	movlw	0
 35742  01537A  6F75               	movwf	__flash_partial_read@start& (0+255),b
 35743  01537C  0E02               	movlw	2
 35744  01537E  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 35745  015380  0E00               	movlw	0
 35746  015382  6F77               	movwf	__flash_partial_read@length& (0+255),b
 35747  015384  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 35748  015388  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 35749  01538C  ECB7  F09D         	call	__flash_partial_read	;wreg free
 35750  015390  0012               	return		;funcret
 35751  015392                     __end_of_flash_sector_read:
 35752                           	opt stack 0
 35753                           tosu	equ	0xFFF
 35754                           tosh	equ	0xFFE
 35755                           tosl	equ	0xFFD
 35756                           pclath	equ	0xFFA
 35757                           tblptru	equ	0xFF8
 35758                           tblptrh	equ	0xFF7
 35759                           tblptrl	equ	0xFF6
 35760                           tablat	equ	0xFF5
 35761                           prodh	equ	0xFF4
 35762                           prodl	equ	0xFF3
 35763                           intcon	equ	0xFF2
 35764                           postinc0	equ	0xFEE
 35765                           wreg	equ	0xFE8
 35766                           indf1	equ	0xFE7
 35767                           postinc1	equ	0xFE6
 35768                           postdec1	equ	0xFE5
 35769                           plusw1	equ	0xFE3
 35770                           fsr1h	equ	0xFE2
 35771                           fsr1l	equ	0xFE1
 35772                           indf2	equ	0xFDF
 35773                           postinc2	equ	0xFDE
 35774                           postdec2	equ	0xFDD
 35775                           plusw2	equ	0xFDB
 35776                           fsr2h	equ	0xFDA
 35777                           fsr2l	equ	0xFD9
 35778                           status	equ	0xFD8
 35779                           
 35780 ;; *************** function __flash_partial_read *****************
 35781 ;; Defined at:
 35782 ;;		line 309 in file "flash.c"
 35783 ;; Parameters:    Size  Location     Type
 35784 ;;  page            2   19[BANK0 ] unsigned int 
 35785 ;;  start           2   21[BANK0 ] unsigned int 
 35786 ;;  length          2   23[BANK0 ] unsigned int 
 35787 ;;  data            2   25[BANK0 ] PTR unsigned char 
 35788 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 35789 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 35790 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 35791 ;; Auto vars:     Size  Location     Type
 35792 ;;  command         4   31[BANK0 ] unsigned char [4]
 35793 ;;  address         4   35[BANK0 ] unsigned long 
 35794 ;; Return value:  Size  Location     Type
 35795 ;;                  1    wreg      void 
 35796 ;; Registers used:
 35797 ;;		wreg, status,2, status,0, cstack
 35798 ;; Tracked objects:
 35799 ;;		On entry : 0/0
 35800 ;;		On exit  : 0/0
 35801 ;;		Unchanged: 0/0
 35802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35803 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35804 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35805 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35806 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35807 ;;Total ram usage:       20 bytes
 35808 ;; Hardware stack levels used:    1
 35809 ;; Hardware stack levels required when called:   13
 35810 ;; This function calls:
 35811 ;;		__flash_is_busy
 35812 ;;		_spi_tx_rx
 35813 ;; This function is called by:
 35814 ;;		_flash_sector_read
 35815 ;;		_flash_partial_read
 35816 ;; This function uses a non-reentrant model
 35817 ;;
 35818                           
 35819                           	psect	text143
 35820  013B6E                     __ptext143:
 35821                           	opt stack 0
 35822  013B6E                     __flash_partial_read:
 35823                           	opt stack 13
 35824                           
 35825                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 35826                           
 35827                           ;incstack = 0
 35828  013B6E  EC13  F0AA         	call	__flash_is_busy	;wreg free
 35829  013B72  0900               	iorlw	0
 35830  013B74  A4D8               	btfss	status,2,c
 35831  013B76  D7FB               	goto	__flash_partial_read
 35832                           
 35833                           ;flash.c: 318: address = page;
 35834  013B78  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 35835  013B7C  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 35836  013B80  0100               	movlb	0	; () banked
 35837  013B82  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 35838  013B84  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 35839                           
 35840                           ; BSR set to: 0
 35841                           ;flash.c: 319: address <<= 9;
 35842  013B86  0E09               	movlw	9
 35843  013B88                     u9845:
 35844  013B88  90D8               	bcf	status,0,c
 35845  013B8A  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 35846  013B8C  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 35847  013B8E  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 35848  013B90  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 35849  013B92  2EE8               	decfsz	wreg,f,c
 35850  013B94  D7F9               	goto	u9845
 35851                           
 35852                           ; BSR set to: 0
 35853                           ;flash.c: 320: address |= start;
 35854  013B96  5175               	movf	__flash_partial_read@start& (0+255),w,b
 35855  013B98  6F7B               	movwf	??__flash_partial_read& (0+255),b
 35856  013B9A  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 35857  013B9C  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 35858  013B9E  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 35859  013BA0  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 35860  013BA2  517B               	movf	??__flash_partial_read& (0+255),w,b
 35861  013BA4  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 35862  013BA6  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 35863  013BA8  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 35864  013BAA  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 35865  013BAC  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 35866  013BAE  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 35867  013BB0  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 35868                           
 35869                           ; BSR set to: 0
 35870                           ;flash.c: 323: command[0] = 0x03;
 35871  013BB2  0E03               	movlw	3
 35872  013BB4  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 35873                           
 35874                           ; BSR set to: 0
 35875                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 35876  013BB6  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 35877                           
 35878                           ; BSR set to: 0
 35879                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 35880  013BBA  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 35881  013BBC  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 35882                           
 35883                           ; BSR set to: 0
 35884                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 35885  013BBE  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 35886                           
 35887                           ; BSR set to: 0
 35888                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 35889  013BC2  0E7F               	movlw	low __flash_partial_read@command
 35890  013BC4  6F60               	movwf	spi_tx_rx@command& (0+255),b
 35891  013BC6  0E00               	movlw	high __flash_partial_read@command
 35892  013BC8  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 35893  013BCA  0E00               	movlw	0
 35894  013BCC  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 35895  013BCE  0E04               	movlw	4
 35896  013BD0  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 35897  013BD2  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 35898  013BD6  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 35899  013BDA  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 35900  013BDE  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 35901  013BE2  ECE0  F098         	call	_spi_tx_rx	;wreg free
 35902  013BE6  0012               	return		;funcret
 35903  013BE8                     __end_of__flash_partial_read:
 35904                           	opt stack 0
 35905                           tosu	equ	0xFFF
 35906                           tosh	equ	0xFFE
 35907                           tosl	equ	0xFFD
 35908                           pclath	equ	0xFFA
 35909                           tblptru	equ	0xFF8
 35910                           tblptrh	equ	0xFF7
 35911                           tblptrl	equ	0xFF6
 35912                           tablat	equ	0xFF5
 35913                           prodh	equ	0xFF4
 35914                           prodl	equ	0xFF3
 35915                           intcon	equ	0xFF2
 35916                           postinc0	equ	0xFEE
 35917                           wreg	equ	0xFE8
 35918                           indf1	equ	0xFE7
 35919                           postinc1	equ	0xFE6
 35920                           postdec1	equ	0xFE5
 35921                           plusw1	equ	0xFE3
 35922                           fsr1h	equ	0xFE2
 35923                           fsr1l	equ	0xFE1
 35924                           indf2	equ	0xFDF
 35925                           postinc2	equ	0xFDE
 35926                           postdec2	equ	0xFDD
 35927                           plusw2	equ	0xFDB
 35928                           fsr2h	equ	0xFDA
 35929                           fsr2l	equ	0xFD9
 35930                           status	equ	0xFD8
 35931                           
 35932 ;; *************** function __flash_is_busy *****************
 35933 ;; Defined at:
 35934 ;;		line 281 in file "flash.c"
 35935 ;; Parameters:    Size  Location     Type
 35936 ;;		None
 35937 ;; Auto vars:     Size  Location     Type
 35938 ;;  status          2   17[BANK0 ] unsigned int 
 35939 ;; Return value:  Size  Location     Type
 35940 ;;                  1    wreg      unsigned char 
 35941 ;; Registers used:
 35942 ;;		wreg, status,2, status,0, cstack
 35943 ;; Tracked objects:
 35944 ;;		On entry : 0/0
 35945 ;;		On exit  : 0/0
 35946 ;;		Unchanged: 0/0
 35947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35949 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35951 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35952 ;;Total ram usage:        2 bytes
 35953 ;; Hardware stack levels used:    1
 35954 ;; Hardware stack levels required when called:   12
 35955 ;; This function calls:
 35956 ;;		__flash_get_status
 35957 ;;		__flash_wakeup
 35958 ;; This function is called by:
 35959 ;;		__flash_set_page_size
 35960 ;;		__flash_copy_page_to_buffer
 35961 ;;		__flash_compare_page_to_buffer
 35962 ;;		__flash_write_to_buffer
 35963 ;;		__flash_write_page_from_buffer
 35964 ;;		__flash_partial_read
 35965 ;;		_flash_partial_write
 35966 ;;		__flash_erase_page
 35967 ;;		__flash_buffer_read
 35968 ;;		_flash_is_busy
 35969 ;;		_flash_set_power_state
 35970 ;; This function uses a non-reentrant model
 35971 ;;
 35972                           
 35973                           	psect	text144
 35974  015426                     __ptext144:
 35975                           	opt stack 0
 35976  015426                     __flash_is_busy:
 35977                           	opt stack 15
 35978                           
 35979                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 35980                           
 35981                           ;incstack = 0
 35982  015426  0101               	movlb	1	; () banked
 35983  015428  515A               	movf	_power_state& (0+255),w,b
 35984  01542A  A4D8               	btfss	status,2,c
 35985                           
 35986                           ; BSR set to: 1
 35987                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 35988  01542C  ECF1  F0A2         	call	__flash_wakeup	;wreg free
 35989                           
 35990                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 35991  015430  EC1D  F0A8         	call	__flash_get_status	;wreg free
 35992  015434  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 35993  015438  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 35994                           
 35995                           ;flash.c: 295: if(status & 0b0000000010000000)
 35996  01543C  0100               	movlb	0	; () banked
 35997  01543E  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 35998  015440  D002               	goto	l1581
 35999                           
 36000                           ; BSR set to: 0
 36001                           ;flash.c: 296: {;flash.c: 298: return 0;
 36002  015442  0E00               	movlw	0
 36003                           
 36004                           ; BSR set to: 0
 36005                           ;flash.c: 299: }
 36006                           
 36007                           ; BSR set to: 0
 36008  015444  0012               	return	
 36009  015446                     l1581:
 36010                           
 36011                           ; BSR set to: 0
 36012                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 36013                           
 36014                           ; BSR set to: 0
 36015  015446  0E01               	movlw	1
 36016                           
 36017                           ; BSR set to: 0
 36018  015448  0012               	return	
 36019  01544A                     __end_of__flash_is_busy:
 36020                           	opt stack 0
 36021                           tosu	equ	0xFFF
 36022                           tosh	equ	0xFFE
 36023                           tosl	equ	0xFFD
 36024                           pclath	equ	0xFFA
 36025                           tblptru	equ	0xFF8
 36026                           tblptrh	equ	0xFF7
 36027                           tblptrl	equ	0xFF6
 36028                           tablat	equ	0xFF5
 36029                           prodh	equ	0xFF4
 36030                           prodl	equ	0xFF3
 36031                           intcon	equ	0xFF2
 36032                           postinc0	equ	0xFEE
 36033                           wreg	equ	0xFE8
 36034                           indf1	equ	0xFE7
 36035                           postinc1	equ	0xFE6
 36036                           postdec1	equ	0xFE5
 36037                           plusw1	equ	0xFE3
 36038                           fsr1h	equ	0xFE2
 36039                           fsr1l	equ	0xFE1
 36040                           indf2	equ	0xFDF
 36041                           postinc2	equ	0xFDE
 36042                           postdec2	equ	0xFDD
 36043                           plusw2	equ	0xFDB
 36044                           fsr2h	equ	0xFDA
 36045                           fsr2l	equ	0xFD9
 36046                           status	equ	0xFD8
 36047                           
 36048 ;; *************** function __flash_wakeup *****************
 36049 ;; Defined at:
 36050 ;;		line 128 in file "flash.c"
 36051 ;; Parameters:    Size  Location     Type
 36052 ;;		None
 36053 ;; Auto vars:     Size  Location     Type
 36054 ;;  command         1    8[BANK0 ] unsigned char 
 36055 ;; Return value:  Size  Location     Type
 36056 ;;                  1    wreg      void 
 36057 ;; Registers used:
 36058 ;;		wreg, status,2, status,0, cstack
 36059 ;; Tracked objects:
 36060 ;;		On entry : 0/0
 36061 ;;		On exit  : 0/0
 36062 ;;		Unchanged: 0/0
 36063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36065 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36067 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36068 ;;Total ram usage:        1 bytes
 36069 ;; Hardware stack levels used:    1
 36070 ;; Hardware stack levels required when called:   11
 36071 ;; This function calls:
 36072 ;;		_spi_tx
 36073 ;; This function is called by:
 36074 ;;		__flash_is_busy
 36075 ;;		_flash_set_power_state
 36076 ;; This function uses a non-reentrant model
 36077 ;;
 36078                           
 36079                           	psect	text145
 36080  0145E2                     __ptext145:
 36081                           	opt stack 0
 36082  0145E2                     __flash_wakeup:
 36083                           	opt stack 15
 36084                           
 36085                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 36086                           
 36087                           ; BSR set to: 0
 36088                           ;incstack = 0
 36089  0145E2  D022               	goto	l1530
 36090  0145E4                     
 36091                           ;flash.c: 135: command = 0xAB;
 36092  0145E4  0EAB               	movlw	171
 36093  0145E6  0100               	movlb	0	; () banked
 36094  0145E8  6F68               	movwf	__flash_wakeup@command& (0+255),b
 36095                           
 36096                           ; BSR set to: 0
 36097                           ;flash.c: 136: spi_tx(&command, 1);
 36098  0145EA  0E68               	movlw	low __flash_wakeup@command
 36099  0145EC  6F60               	movwf	spi_tx@data& (0+255),b
 36100  0145EE  0E00               	movlw	high __flash_wakeup@command
 36101  0145F0  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 36102  0145F2  0E00               	movlw	0
 36103  0145F4  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 36104  0145F6  0E01               	movlw	1
 36105  0145F8  6F62               	movwf	spi_tx@length& (0+255),b
 36106  0145FA  EC40  F0A2         	call	_spi_tx	;wreg free
 36107                           
 36108                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 36109  0145FE  0E17               	movlw	23
 36110  014600                     u19177:
 36111  014600  2EE8               	decfsz	wreg,f,c
 36112  014602  D7FE               	bra	u19177
 36113  014604  F000               	nop	
 36114                           
 36115                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 36116  014606  0E00               	movlw	0
 36117  014608  0101               	movlb	1	; () banked
 36118  01460A  6F5A               	movwf	_power_state& (0+255),b
 36119                           
 36120                           ;flash.c: 139: break;
 36121  01460C  0012               	return	
 36122  01460E                     l1533:
 36123                           
 36124                           ; BSR set to: 1
 36125                           ;flash.c: 144: LATDbits.LD7 = 0;
 36126  01460E  9E8C               	bcf	3980,7,c	;volatile
 36127                           
 36128                           ; BSR set to: 1
 36129                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 36130  014610  0E0D               	movlw	13
 36131  014612                     u19187:
 36132  014612  2EE8               	decfsz	wreg,f,c
 36133  014614  D7FE               	bra	u19187
 36134  014616  F000               	nop	
 36135                           
 36136                           ;flash.c: 146: LATDbits.LD7 = 1;
 36137  014618  8E8C               	bsf	3980,7,c	;volatile
 36138                           
 36139                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 36140  01461A  0E50               	movlw	80
 36141  01461C                     u19197:
 36142  01461C  2EE8               	decfsz	wreg,f,c
 36143  01461E  D7FE               	bra	u19197
 36144                           
 36145                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 36146  014620  0E00               	movlw	0
 36147  014622  0101               	movlb	1	; () banked
 36148  014624  6F5A               	movwf	_power_state& (0+255),b
 36149                           
 36150                           ; BSR set to: 1
 36151                           ;flash.c: 150: }
 36152                           
 36153                           ;flash.c: 149: break;
 36154  014626  0012               	return	
 36155  014628                     l1530:
 36156                           
 36157                           ; BSR set to: 1
 36158  014628  0101               	movlb	1	; () banked
 36159  01462A  515A               	movf	_power_state& (0+255),w,b
 36160                           
 36161                           ; Switch size 1, requested type "space"
 36162                           ; Number of cases is 2, Range of values is 1 to 2
 36163                           ; switch strategies available:
 36164                           ; Name         Instructions Cycles
 36165                           ; simple_byte            7     4 (average)
 36166                           ;	Chosen strategy is simple_byte
 36167  01462C  0A01               	xorlw	1	; case 1
 36168  01462E  B4D8               	btfsc	status,2,c
 36169  014630  D7D9               	goto	l1531
 36170  014632  0A03               	xorlw	3	; case 2
 36171  014634  A4D8               	btfss	status,2,c
 36172  014636  0012               	return	
 36173  014638  D7EA               	goto	l1533
 36174  01463A                     __end_of__flash_wakeup:
 36175                           	opt stack 0
 36176                           tosu	equ	0xFFF
 36177                           tosh	equ	0xFFE
 36178                           tosl	equ	0xFFD
 36179                           pclath	equ	0xFFA
 36180                           tblptru	equ	0xFF8
 36181                           tblptrh	equ	0xFF7
 36182                           tblptrl	equ	0xFF6
 36183                           tablat	equ	0xFF5
 36184                           prodh	equ	0xFF4
 36185                           prodl	equ	0xFF3
 36186                           intcon	equ	0xFF2
 36187                           postinc0	equ	0xFEE
 36188                           wreg	equ	0xFE8
 36189                           indf1	equ	0xFE7
 36190                           postinc1	equ	0xFE6
 36191                           postdec1	equ	0xFE5
 36192                           plusw1	equ	0xFE3
 36193                           fsr1h	equ	0xFE2
 36194                           fsr1l	equ	0xFE1
 36195                           indf2	equ	0xFDF
 36196                           postinc2	equ	0xFDE
 36197                           postdec2	equ	0xFDD
 36198                           plusw2	equ	0xFDB
 36199                           fsr2h	equ	0xFDA
 36200                           fsr2l	equ	0xFD9
 36201                           status	equ	0xFD8
 36202                           
 36203 ;; *************** function _spi_tx *****************
 36204 ;; Defined at:
 36205 ;;		line 108 in file "spi.c"
 36206 ;; Parameters:    Size  Location     Type
 36207 ;;  data            2    0[BANK0 ] PTR unsigned char 
 36208 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 36209 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 36210 ;;  length          2    2[BANK0 ] unsigned int 
 36211 ;; Auto vars:     Size  Location     Type
 36212 ;;		None
 36213 ;; Return value:  Size  Location     Type
 36214 ;;                  1    wreg      void 
 36215 ;; Registers used:
 36216 ;;		wreg, status,2, status,0
 36217 ;; Tracked objects:
 36218 ;;		On entry : 0/0
 36219 ;;		On exit  : 0/0
 36220 ;;		Unchanged: 0/0
 36221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36222 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36224 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36225 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36226 ;;Total ram usage:        8 bytes
 36227 ;; Hardware stack levels used:    1
 36228 ;; Hardware stack levels required when called:   10
 36229 ;; This function calls:
 36230 ;;		Nothing
 36231 ;; This function is called by:
 36232 ;;		__flash_set_page_size
 36233 ;;		__flash_wakeup
 36234 ;;		__flash_copy_page_to_buffer
 36235 ;;		__flash_compare_page_to_buffer
 36236 ;;		__flash_write_page_from_buffer
 36237 ;;		__flash_erase_page
 36238 ;;		_flash_set_power_state
 36239 ;; This function uses a non-reentrant model
 36240 ;;
 36241                           
 36242                           	psect	text146
 36243  014480                     __ptext146:
 36244                           	opt stack 0
 36245  014480                     _spi_tx:
 36246                           	opt stack 17
 36247                           
 36248                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 36249                           
 36250                           ; BSR set to: 1
 36251                           ;incstack = 0
 36252  014480  9E88               	bcf	3976,7,c	;volatile
 36253                           
 36254                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 36255  014482  9C88               	bcf	3976,6,c	;volatile
 36256                           
 36257                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 36258  014484  8A88               	bsf	3976,5,c	;volatile
 36259                           
 36260                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 36261  014486  9888               	bcf	3976,4,c	;volatile
 36262                           
 36263                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 36264  014488  9688               	bcf	3976,3,c	;volatile
 36265                           
 36266                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 36267  01448A  8488               	bsf	3976,2,c	;volatile
 36268                           
 36269                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 36270  01448C  9288               	bcf	3976,1,c	;volatile
 36271                           
 36272                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 36273  01448E  9886               	bcf	3974,4,c	;volatile
 36274  014490  9A86               	bcf	3974,5,c	;volatile
 36275  014492  9C86               	bcf	3974,6,c	;volatile
 36276  014494  9E86               	bcf	3974,7,c	;volatile
 36277                           
 36278                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 36279  014496  9086               	bcf	3974,0,c	;volatile
 36280  014498  9286               	bcf	3974,1,c	;volatile
 36281  01449A  9486               	bcf	3974,2,c	;volatile
 36282  01449C  9686               	bcf	3974,3,c	;volatile
 36283                           
 36284                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 36285  01449E  0100               	movlb	0	; () banked
 36286  0144A0  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 36287  0144A2  6E6A               	movwf	3946,c	;volatile
 36288                           
 36289                           ; BSR set to: 0
 36290                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 36291  0144A4  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 36292                           
 36293                           ; BSR set to: 0
 36294                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 36295  0144A8  0EFF               	movlw	255
 36296  0144AA  6F64               	movwf	??_spi_tx& (0+255),b
 36297  0144AC  0EFF               	movlw	255
 36298  0144AE  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 36299  0144B0  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 36300  0144B4  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 36301  0144B8  5164               	movf	??_spi_tx& (0+255),w,b
 36302  0144BA  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 36303  0144BC  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 36304  0144BE  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 36305  0144C0  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 36306  0144C4  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 36307  0144C6  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 36308  0144C8  6E66               	movwf	3942,c	;volatile
 36309                           
 36310                           ; BSR set to: 0
 36311                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 36312  0144CA  0562               	decf	spi_tx@length& (0+255),w,b
 36313  0144CC  6E67               	movwf	3943,c	;volatile
 36314                           
 36315                           ; BSR set to: 0
 36316                           ;spi.c: 136: LATDbits.LD7 = 0;
 36317  0144CE  9E8C               	bcf	3980,7,c	;volatile
 36318                           
 36319                           ; BSR set to: 0
 36320                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 36321  0144D0  8088               	bsf	3976,0,c	;volatile
 36322  0144D2                     
 36323                           ; BSR set to: 0
 36324  0144D2  B088               	btfsc	3976,0,c	;volatile
 36325  0144D4  D7FE               	goto	l2177
 36326                           
 36327                           ;spi.c: 139: LATDbits.LD7 = 1;
 36328  0144D6  8E8C               	bsf	3980,7,c	;volatile
 36329  0144D8  0012               	return		;funcret
 36330  0144DA                     __end_of_spi_tx:
 36331                           	opt stack 0
 36332                           tosu	equ	0xFFF
 36333                           tosh	equ	0xFFE
 36334                           tosl	equ	0xFFD
 36335                           pclath	equ	0xFFA
 36336                           tblptru	equ	0xFF8
 36337                           tblptrh	equ	0xFF7
 36338                           tblptrl	equ	0xFF6
 36339                           tablat	equ	0xFF5
 36340                           prodh	equ	0xFF4
 36341                           prodl	equ	0xFF3
 36342                           intcon	equ	0xFF2
 36343                           postinc0	equ	0xFEE
 36344                           wreg	equ	0xFE8
 36345                           indf1	equ	0xFE7
 36346                           postinc1	equ	0xFE6
 36347                           postdec1	equ	0xFE5
 36348                           plusw1	equ	0xFE3
 36349                           fsr1h	equ	0xFE2
 36350                           fsr1l	equ	0xFE1
 36351                           indf2	equ	0xFDF
 36352                           postinc2	equ	0xFDE
 36353                           postdec2	equ	0xFDD
 36354                           plusw2	equ	0xFDB
 36355                           fsr2h	equ	0xFDA
 36356                           fsr2l	equ	0xFD9
 36357                           status	equ	0xFD8
 36358                           
 36359 ;; *************** function __flash_get_status *****************
 36360 ;; Defined at:
 36361 ;;		line 117 in file "flash.c"
 36362 ;; Parameters:    Size  Location     Type
 36363 ;;		None
 36364 ;; Auto vars:     Size  Location     Type
 36365 ;;  status          2   15[BANK0 ] unsigned int 
 36366 ;;  command         1   14[BANK0 ] unsigned char 
 36367 ;; Return value:  Size  Location     Type
 36368 ;;                  2   12[BANK0 ] unsigned int 
 36369 ;; Registers used:
 36370 ;;		wreg, status,2, status,0, cstack
 36371 ;; Tracked objects:
 36372 ;;		On entry : 0/0
 36373 ;;		On exit  : 0/0
 36374 ;;		Unchanged: 0/0
 36375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36377 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36379 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36380 ;;Total ram usage:        5 bytes
 36381 ;; Hardware stack levels used:    1
 36382 ;; Hardware stack levels required when called:   11
 36383 ;; This function calls:
 36384 ;;		_spi_tx_rx
 36385 ;; This function is called by:
 36386 ;;		__flash_compare_page_to_buffer
 36387 ;;		__flash_is_busy
 36388 ;; This function uses a non-reentrant model
 36389 ;;
 36390                           
 36391                           	psect	text147
 36392  01503A                     __ptext147:
 36393                           	opt stack 0
 36394  01503A                     __flash_get_status:
 36395                           	opt stack 15
 36396                           
 36397                           ;flash.c: 121: uint8_t command = 0xD7;
 36398                           
 36399                           ;incstack = 0
 36400  01503A  0ED7               	movlw	215
 36401  01503C  0100               	movlb	0	; () banked
 36402  01503E  6F6E               	movwf	__flash_get_status@command& (0+255),b
 36403                           
 36404                           ; BSR set to: 0
 36405                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 36406  015040  0E6E               	movlw	low __flash_get_status@command
 36407  015042  6F60               	movwf	spi_tx_rx@command& (0+255),b
 36408  015044  0E00               	movlw	high __flash_get_status@command
 36409  015046  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 36410  015048  0E00               	movlw	0
 36411  01504A  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 36412  01504C  0E01               	movlw	1
 36413  01504E  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 36414  015050  0E6F               	movlw	low __flash_get_status@status
 36415  015052  6F64               	movwf	spi_tx_rx@data& (0+255),b
 36416  015054  0E00               	movlw	high __flash_get_status@status
 36417  015056  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 36418  015058  0E00               	movlw	0
 36419  01505A  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 36420  01505C  0E02               	movlw	2
 36421  01505E  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 36422  015060  ECE0  F098         	call	_spi_tx_rx	;wreg free
 36423                           
 36424                           ;flash.c: 124: return status;
 36425  015064  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 36426  015068  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 36427  01506C  0012               	return	
 36428  01506E                     __end_of__flash_get_status:
 36429                           	opt stack 0
 36430                           tosu	equ	0xFFF
 36431                           tosh	equ	0xFFE
 36432                           tosl	equ	0xFFD
 36433                           pclath	equ	0xFFA
 36434                           tblptru	equ	0xFF8
 36435                           tblptrh	equ	0xFF7
 36436                           tblptrl	equ	0xFF6
 36437                           tablat	equ	0xFF5
 36438                           prodh	equ	0xFF4
 36439                           prodl	equ	0xFF3
 36440                           intcon	equ	0xFF2
 36441                           postinc0	equ	0xFEE
 36442                           wreg	equ	0xFE8
 36443                           indf1	equ	0xFE7
 36444                           postinc1	equ	0xFE6
 36445                           postdec1	equ	0xFE5
 36446                           plusw1	equ	0xFE3
 36447                           fsr1h	equ	0xFE2
 36448                           fsr1l	equ	0xFE1
 36449                           indf2	equ	0xFDF
 36450                           postinc2	equ	0xFDE
 36451                           postdec2	equ	0xFDD
 36452                           plusw2	equ	0xFDB
 36453                           fsr2h	equ	0xFDA
 36454                           fsr2l	equ	0xFD9
 36455                           status	equ	0xFD8
 36456                           
 36457 ;; *************** function _spi_tx_rx *****************
 36458 ;; Defined at:
 36459 ;;		line 199 in file "spi.c"
 36460 ;; Parameters:    Size  Location     Type
 36461 ;;  command         2    0[BANK0 ] PTR unsigned char 
 36462 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 36463 ;;  command_leng    2    2[BANK0 ] unsigned int 
 36464 ;;  data            2    4[BANK0 ] PTR unsigned char 
 36465 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 36466 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 36467 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 36468 ;;  data_length     2    6[BANK0 ] unsigned int 
 36469 ;; Auto vars:     Size  Location     Type
 36470 ;;		None
 36471 ;; Return value:  Size  Location     Type
 36472 ;;                  1    wreg      void 
 36473 ;; Registers used:
 36474 ;;		wreg, status,2, status,0
 36475 ;; Tracked objects:
 36476 ;;		On entry : 0/0
 36477 ;;		On exit  : 0/0
 36478 ;;		Unchanged: 0/0
 36479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36480 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36482 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36483 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36484 ;;Total ram usage:       12 bytes
 36485 ;; Hardware stack levels used:    1
 36486 ;; Hardware stack levels required when called:   10
 36487 ;; This function calls:
 36488 ;;		Nothing
 36489 ;; This function is called by:
 36490 ;;		__flash_get_status
 36491 ;;		__flash_partial_read
 36492 ;;		__flash_buffer_read
 36493 ;; This function uses a non-reentrant model
 36494 ;;
 36495                           
 36496                           	psect	text148
 36497  0131C0                     __ptext148:
 36498                           	opt stack 0
 36499  0131C0                     _spi_tx_rx:
 36500                           	opt stack 15
 36501                           
 36502                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 36503                           
 36504                           ;incstack = 0
 36505  0131C0  9E88               	bcf	3976,7,c	;volatile
 36506                           
 36507                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 36508  0131C2  9C88               	bcf	3976,6,c	;volatile
 36509                           
 36510                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 36511  0131C4  8A88               	bsf	3976,5,c	;volatile
 36512                           
 36513                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 36514  0131C6  9888               	bcf	3976,4,c	;volatile
 36515                           
 36516                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 36517  0131C8  9688               	bcf	3976,3,c	;volatile
 36518                           
 36519                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 36520  0131CA  8488               	bsf	3976,2,c	;volatile
 36521                           
 36522                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 36523  0131CC  9288               	bcf	3976,1,c	;volatile
 36524                           
 36525                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 36526  0131CE  9886               	bcf	3974,4,c	;volatile
 36527  0131D0  9A86               	bcf	3974,5,c	;volatile
 36528  0131D2  9C86               	bcf	3974,6,c	;volatile
 36529  0131D4  9E86               	bcf	3974,7,c	;volatile
 36530                           
 36531                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 36532  0131D6  9086               	bcf	3974,0,c	;volatile
 36533  0131D8  9286               	bcf	3974,1,c	;volatile
 36534  0131DA  9486               	bcf	3974,2,c	;volatile
 36535  0131DC  9686               	bcf	3974,3,c	;volatile
 36536                           
 36537                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 36538  0131DE  0100               	movlb	0	; () banked
 36539  0131E0  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 36540  0131E2  6E6A               	movwf	3946,c	;volatile
 36541                           
 36542                           ; BSR set to: 0
 36543                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 36544  0131E4  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 36545                           
 36546                           ; BSR set to: 0
 36547                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 36548  0131E8  0EFF               	movlw	255
 36549  0131EA  6F68               	movwf	??_spi_tx_rx& (0+255),b
 36550  0131EC  0EFF               	movlw	255
 36551  0131EE  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 36552  0131F0  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 36553  0131F4  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 36554  0131F8  5168               	movf	??_spi_tx_rx& (0+255),w,b
 36555  0131FA  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 36556  0131FC  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 36557  0131FE  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 36558  013200  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 36559  013204  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 36560  013206  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 36561  013208  6E66               	movwf	3942,c	;volatile
 36562                           
 36563                           ; BSR set to: 0
 36564                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 36565  01320A  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 36566  01320C  6E67               	movwf	3943,c	;volatile
 36567                           
 36568                           ; BSR set to: 0
 36569                           ;spi.c: 227: LATDbits.LD7 = 0;
 36570  01320E  9E8C               	bcf	3980,7,c	;volatile
 36571                           
 36572                           ; BSR set to: 0
 36573                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 36574  013210  8088               	bsf	3976,0,c	;volatile
 36575  013212                     
 36576                           ; BSR set to: 0
 36577  013212  B088               	btfsc	3976,0,c	;volatile
 36578  013214  D7FE               	goto	l2192
 36579                           
 36580                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 36581  013216  9A88               	bcf	3976,5,c	;volatile
 36582                           
 36583                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 36584  013218  8888               	bsf	3976,4,c	;volatile
 36585                           
 36586                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 36587  01321A  9688               	bcf	3976,3,c	;volatile
 36588                           
 36589                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 36590  01321C  9488               	bcf	3976,2,c	;volatile
 36591                           
 36592                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 36593  01321E  0100               	movlb	0	; () banked
 36594  013220  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 36595  013222  6E68               	movwf	3944,c	;volatile
 36596                           
 36597                           ; BSR set to: 0
 36598                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 36599  013224  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 36600                           
 36601                           ; BSR set to: 0
 36602                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 36603  013228  0EFF               	movlw	255
 36604  01322A  6F68               	movwf	??_spi_tx_rx& (0+255),b
 36605  01322C  0EFF               	movlw	255
 36606  01322E  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 36607  013230  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 36608  013234  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 36609  013238  5168               	movf	??_spi_tx_rx& (0+255),w,b
 36610  01323A  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 36611  01323C  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 36612  01323E  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 36613  013240  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 36614  013244  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 36615  013246  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 36616  013248  6E66               	movwf	3942,c	;volatile
 36617                           
 36618                           ; BSR set to: 0
 36619                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 36620  01324A  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 36621  01324C  6E67               	movwf	3943,c	;volatile
 36622                           
 36623                           ; BSR set to: 0
 36624                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 36625  01324E  8088               	bsf	3976,0,c	;volatile
 36626  013250                     
 36627                           ; BSR set to: 0
 36628  013250  B088               	btfsc	3976,0,c	;volatile
 36629  013252  D7FE               	goto	l2195
 36630                           
 36631                           ;spi.c: 254: LATDbits.LD7 = 1;
 36632  013254  8E8C               	bsf	3980,7,c	;volatile
 36633  013256  0012               	return		;funcret
 36634  013258                     __end_of_spi_tx_rx:
 36635                           	opt stack 0
 36636                           tosu	equ	0xFFF
 36637                           tosh	equ	0xFFE
 36638                           tosl	equ	0xFFD
 36639                           pclath	equ	0xFFA
 36640                           tblptru	equ	0xFF8
 36641                           tblptrh	equ	0xFF7
 36642                           tblptrl	equ	0xFF6
 36643                           tablat	equ	0xFF5
 36644                           prodh	equ	0xFF4
 36645                           prodl	equ	0xFF3
 36646                           intcon	equ	0xFF2
 36647                           postinc0	equ	0xFEE
 36648                           wreg	equ	0xFE8
 36649                           indf1	equ	0xFE7
 36650                           postinc1	equ	0xFE6
 36651                           postdec1	equ	0xFE5
 36652                           plusw1	equ	0xFE3
 36653                           fsr1h	equ	0xFE2
 36654                           fsr1l	equ	0xFE1
 36655                           indf2	equ	0xFDF
 36656                           postinc2	equ	0xFDE
 36657                           postdec2	equ	0xFDD
 36658                           plusw2	equ	0xFDB
 36659                           fsr2h	equ	0xFDA
 36660                           fsr2l	equ	0xFD9
 36661                           status	equ	0xFD8
 36662                           
 36663 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 36664 ;; Defined at:
 36665 ;;		line 993 in file "usb_device_msd.c"
 36666 ;; Parameters:    Size  Location     Type
 36667 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 36668 ;; Auto vars:     Size  Location     Type
 36669 ;;		None
 36670 ;; Return value:  Size  Location     Type
 36671 ;;                  1    wreg      void 
 36672 ;; Registers used:
 36673 ;;		wreg, status,2, status,0
 36674 ;; Tracked objects:
 36675 ;;		On entry : 0/0
 36676 ;;		On exit  : 0/0
 36677 ;;		Unchanged: 0/0
 36678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36679 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36681 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36682 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36683 ;;Total ram usage:        6 bytes
 36684 ;; Hardware stack levels used:    1
 36685 ;; Hardware stack levels required when called:   10
 36686 ;; This function calls:
 36687 ;;		Nothing
 36688 ;; This function is called by:
 36689 ;;		_MSDProcessCommandMediaPresent
 36690 ;; This function uses a non-reentrant model
 36691 ;;
 36692                           
 36693                           	psect	text149
 36694  01279A                     __ptext149:
 36695                           	opt stack 0
 36696  01279A                     _MSDComputeDeviceInAndResidue:
 36697                           	opt stack 16
 36698                           
 36699                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 36700                           
 36701                           ;incstack = 0
 36702  01279A  0100               	movlb	0	; () banked
 36703  01279C  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 36704  01279E  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 36705  0127A0  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 36706  0127A2  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 36707  0127A4  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 36708  0127A6  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 36709  0127A8  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 36710  0127AA  0102               	movlb	2	; () banked
 36711  0127AC  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 36712  0127AE  0100               	movlb	0	; () banked
 36713  0127B0  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 36714  0127B2  0102               	movlb	2	; () banked
 36715  0127B4  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 36716  0127B6  0100               	movlb	0	; () banked
 36717  0127B8  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 36718  0127BA  0102               	movlb	2	; () banked
 36719  0127BC  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 36720  0127BE  0100               	movlb	0	; () banked
 36721  0127C0  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 36722  0127C2  0102               	movlb	2	; () banked
 36723  0127C4  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 36724  0127C6  B0D8               	btfsc	status,0,c
 36725  0127C8  D00E               	goto	l675
 36726                           
 36727                           ; BSR set to: 2
 36728                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 36729  0127CA  0E00               	movlw	0
 36730  0127CC  010D               	movlb	13	; () banked
 36731  0127CE  6F88               	movwf	136,b	;volatile
 36732  0127D0  0E00               	movlw	0
 36733  0127D2  6F89               	movwf	137,b	;volatile
 36734  0127D4  0E00               	movlw	0
 36735  0127D6  6F8A               	movwf	138,b	;volatile
 36736  0127D8  0E00               	movlw	0
 36737  0127DA  6F8B               	movwf	139,b	;volatile
 36738                           
 36739                           ; BSR set to: 13
 36740                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 36741  0127DC  C208  F145         	movff	_gblCBW+8,_TransferLength
 36742  0127E0  C209  F146         	movff	_gblCBW+9,_TransferLength+1
 36743                           
 36744                           ;usb_device_msd.c: 1002: }
 36745  0127E4  0012               	return	
 36746  0127E6                     l675:
 36747                           
 36748                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 36749                           
 36750                           ; BSR set to: 13
 36751  0127E6  0101               	movlb	1	; () banked
 36752  0127E8  5145               	movf	_TransferLength& (0+255),w,b
 36753  0127EA  0100               	movlb	0	; () banked
 36754  0127EC  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 36755  0127EE  0101               	movlb	1	; () banked
 36756  0127F0  5146               	movf	(_TransferLength+1)& (0+255),w,b
 36757  0127F2  0100               	movlb	0	; () banked
 36758  0127F4  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 36759  0127F6  B0D8               	btfsc	status,0,c
 36760  0127F8  D004               	goto	l677
 36761                           
 36762                           ; BSR set to: 0
 36763                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 36764  0127FA  C060  F145         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 36765  0127FE  C061  F146         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 36766  012802                     l677:
 36767                           
 36768                           ; BSR set to: 0
 36769                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 36770                           
 36771                           ; BSR set to: 0
 36772  012802  0101               	movlb	1	; () banked
 36773  012804  5145               	movf	_TransferLength& (0+255),w,b
 36774  012806  0100               	movlb	0	; () banked
 36775  012808  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 36776  01280A  0101               	movlb	1	; () banked
 36777  01280C  5146               	movf	(_TransferLength+1)& (0+255),w,b
 36778  01280E  0100               	movlb	0	; () banked
 36779  012810  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 36780  012812  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 36781  012814  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 36782  012816  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 36783  012818  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 36784  01281A  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 36785  01281C  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 36786  01281E  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 36787  012820  0E00               	movlw	0
 36788  012822  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 36789  012824  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 36790  012826  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 36791  012828  0102               	movlb	2	; () banked
 36792  01282A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 36793  01282C  0100               	movlb	0	; () banked
 36794  01282E  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 36795  012830  010D               	movlb	13	; () banked
 36796  012832  6F88               	movwf	136,b	;volatile
 36797  012834  0102               	movlb	2	; () banked
 36798  012836  5109               	movf	(_gblCBW+9)& (0+255),w,b
 36799  012838  0100               	movlb	0	; () banked
 36800  01283A  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 36801  01283C  010D               	movlb	13	; () banked
 36802  01283E  6F89               	movwf	137,b	;volatile
 36803  012840  0102               	movlb	2	; () banked
 36804  012842  510A               	movf	(_gblCBW+10)& (0+255),w,b
 36805  012844  0100               	movlb	0	; () banked
 36806  012846  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 36807  012848  010D               	movlb	13	; () banked
 36808  01284A  6F8A               	movwf	138,b	;volatile
 36809  01284C  0102               	movlb	2	; () banked
 36810  01284E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 36811  012850  0100               	movlb	0	; () banked
 36812  012852  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 36813  012854  010D               	movlb	13	; () banked
 36814  012856  6F8B               	movwf	139,b	;volatile
 36815  012858  0012               	return	
 36816  01285A                     __end_of_MSDComputeDeviceInAndResidue:
 36817                           	opt stack 0
 36818                           tosu	equ	0xFFF
 36819                           tosh	equ	0xFFE
 36820                           tosl	equ	0xFFD
 36821                           pclath	equ	0xFFA
 36822                           tblptru	equ	0xFF8
 36823                           tblptrh	equ	0xFF7
 36824                           tblptrl	equ	0xFF6
 36825                           tablat	equ	0xFF5
 36826                           prodh	equ	0xFF4
 36827                           prodl	equ	0xFF3
 36828                           intcon	equ	0xFF2
 36829                           postinc0	equ	0xFEE
 36830                           wreg	equ	0xFE8
 36831                           indf1	equ	0xFE7
 36832                           postinc1	equ	0xFE6
 36833                           postdec1	equ	0xFE5
 36834                           plusw1	equ	0xFE3
 36835                           fsr1h	equ	0xFE2
 36836                           fsr1l	equ	0xFE1
 36837                           indf2	equ	0xFDF
 36838                           postinc2	equ	0xFDE
 36839                           postdec2	equ	0xFDD
 36840                           plusw2	equ	0xFDB
 36841                           fsr2h	equ	0xFDA
 36842                           fsr2l	equ	0xFD9
 36843                           status	equ	0xFD8
 36844                           
 36845 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 36846 ;; Defined at:
 36847 ;;		line 18 in file "external_flash.c"
 36848 ;; Parameters:    Size  Location     Type
 36849 ;;  config          2    0[BANK0 ] PTR void 
 36850 ;;		 -> NULL(0), 
 36851 ;; Auto vars:     Size  Location     Type
 36852 ;;		None
 36853 ;; Return value:  Size  Location     Type
 36854 ;;                  2    0[BANK0 ] unsigned int 
 36855 ;; Registers used:
 36856 ;;		wreg, status,2
 36857 ;; Tracked objects:
 36858 ;;		On entry : 0/0
 36859 ;;		On exit  : 0/0
 36860 ;;		Unchanged: 0/0
 36861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36862 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36865 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36866 ;;Total ram usage:        2 bytes
 36867 ;; Hardware stack levels used:    1
 36868 ;; Hardware stack levels required when called:   10
 36869 ;; This function calls:
 36870 ;;		Nothing
 36871 ;; This function is called by:
 36872 ;;		_MSDProcessCommandMediaPresent
 36873 ;; This function uses a non-reentrant model
 36874 ;;
 36875                           
 36876                           	psect	text150
 36877  015658                     __ptext150:
 36878                           	opt stack 0
 36879  015658                     _ExternalFlash_SectorSizeRead:
 36880                           	opt stack 16
 36881                           
 36882                           ;external_flash.c: 20: return 512;
 36883                           
 36884                           ; BSR set to: 13
 36885                           ;incstack = 0
 36886  015658  0E02               	movlw	2
 36887  01565A  0100               	movlb	0	; () banked
 36888  01565C  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 36889  01565E  0E00               	movlw	0
 36890  015660  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 36891  015662  0012               	return	
 36892  015664                     __end_of_ExternalFlash_SectorSizeRead:
 36893                           	opt stack 0
 36894                           tosu	equ	0xFFF
 36895                           tosh	equ	0xFFE
 36896                           tosl	equ	0xFFD
 36897                           pclath	equ	0xFFA
 36898                           tblptru	equ	0xFF8
 36899                           tblptrh	equ	0xFF7
 36900                           tblptrl	equ	0xFF6
 36901                           tablat	equ	0xFF5
 36902                           prodh	equ	0xFF4
 36903                           prodl	equ	0xFF3
 36904                           intcon	equ	0xFF2
 36905                           postinc0	equ	0xFEE
 36906                           wreg	equ	0xFE8
 36907                           indf1	equ	0xFE7
 36908                           postinc1	equ	0xFE6
 36909                           postdec1	equ	0xFE5
 36910                           plusw1	equ	0xFE3
 36911                           fsr1h	equ	0xFE2
 36912                           fsr1l	equ	0xFE1
 36913                           indf2	equ	0xFDF
 36914                           postinc2	equ	0xFDE
 36915                           postdec2	equ	0xFDD
 36916                           plusw2	equ	0xFDB
 36917                           fsr2h	equ	0xFDA
 36918                           fsr2l	equ	0xFD9
 36919                           status	equ	0xFD8
 36920                           
 36921 ;; *************** function _ExternalFlash_CapacityRead *****************
 36922 ;; Defined at:
 36923 ;;		line 23 in file "external_flash.c"
 36924 ;; Parameters:    Size  Location     Type
 36925 ;;  config          2    0[BANK0 ] PTR void 
 36926 ;;		 -> NULL(0), 
 36927 ;; Auto vars:     Size  Location     Type
 36928 ;;		None
 36929 ;; Return value:  Size  Location     Type
 36930 ;;                  4    0[BANK0 ] unsigned long 
 36931 ;; Registers used:
 36932 ;;		wreg, status,2
 36933 ;; Tracked objects:
 36934 ;;		On entry : 0/0
 36935 ;;		On exit  : 0/0
 36936 ;;		Unchanged: 0/0
 36937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36938 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36941 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36942 ;;Total ram usage:        4 bytes
 36943 ;; Hardware stack levels used:    1
 36944 ;; Hardware stack levels required when called:   10
 36945 ;; This function calls:
 36946 ;;		Nothing
 36947 ;; This function is called by:
 36948 ;;		_MSDProcessCommandMediaPresent
 36949 ;; This function uses a non-reentrant model
 36950 ;;
 36951                           
 36952                           	psect	text151
 36953  0155DC                     __ptext151:
 36954                           	opt stack 0
 36955  0155DC                     _ExternalFlash_CapacityRead:
 36956                           	opt stack 16
 36957                           
 36958                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 36959                           
 36960                           ; BSR set to: 0
 36961                           ;incstack = 0
 36962  0155DC  0EFF               	movlw	255
 36963  0155DE  0100               	movlb	0	; () banked
 36964  0155E0  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 36965  0155E2  0E1F               	movlw	31
 36966  0155E4  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 36967  0155E6  0E00               	movlw	0
 36968  0155E8  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 36969  0155EA  0E00               	movlw	0
 36970  0155EC  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 36971  0155EE  0012               	return	
 36972  0155F0                     __end_of_ExternalFlash_CapacityRead:
 36973                           	opt stack 0
 36974                           tosu	equ	0xFFF
 36975                           tosh	equ	0xFFE
 36976                           tosl	equ	0xFFD
 36977                           pclath	equ	0xFFA
 36978                           tblptru	equ	0xFF8
 36979                           tblptrh	equ	0xFF7
 36980                           tblptrl	equ	0xFF6
 36981                           tablat	equ	0xFF5
 36982                           prodh	equ	0xFF4
 36983                           prodl	equ	0xFF3
 36984                           intcon	equ	0xFF2
 36985                           postinc0	equ	0xFEE
 36986                           wreg	equ	0xFE8
 36987                           indf1	equ	0xFE7
 36988                           postinc1	equ	0xFE6
 36989                           postdec1	equ	0xFE5
 36990                           plusw1	equ	0xFE3
 36991                           fsr1h	equ	0xFE2
 36992                           fsr1l	equ	0xFE1
 36993                           indf2	equ	0xFDF
 36994                           postinc2	equ	0xFDE
 36995                           postdec2	equ	0xFDD
 36996                           plusw2	equ	0xFDB
 36997                           fsr2h	equ	0xFDA
 36998                           fsr2l	equ	0xFD9
 36999                           status	equ	0xFD8
 37000                           
 37001 ;; *************** function _ExternalFlash_MediaInitialize *****************
 37002 ;; Defined at:
 37003 ;;		line 10 in file "external_flash.c"
 37004 ;; Parameters:    Size  Location     Type
 37005 ;;  config          2    0[BANK0 ] PTR void 
 37006 ;;		 -> NULL(0), 
 37007 ;; Auto vars:     Size  Location     Type
 37008 ;;		None
 37009 ;; Return value:  Size  Location     Type
 37010 ;;                  2    0[BANK0 ] PTR struct .
 37011 ;; Registers used:
 37012 ;;		wreg, status,2, status,0
 37013 ;; Tracked objects:
 37014 ;;		On entry : 0/0
 37015 ;;		On exit  : 0/0
 37016 ;;		Unchanged: 0/0
 37017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37018 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37021 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37022 ;;Total ram usage:        2 bytes
 37023 ;; Hardware stack levels used:    1
 37024 ;; Hardware stack levels required when called:   10
 37025 ;; This function calls:
 37026 ;;		Nothing
 37027 ;; This function is called by:
 37028 ;;		_USBMSDInit
 37029 ;;		_MSDProcessCommand
 37030 ;; This function uses a non-reentrant model
 37031 ;;
 37032                           
 37033                           	psect	text152
 37034  0154B0                     __ptext152:
 37035                           	opt stack 0
 37036  0154B0                     _ExternalFlash_MediaInitialize:
 37037                           	opt stack 0
 37038                           
 37039                           ; BSR set to: 0
 37040                           ;Skip over the trampoline to the duplicate function for level 2
 37041  0154B0  B25F               	btfsc	btemp,1,c
 37042  0154B2  EFCA  F0AA         	goto	i2_ExternalFlash_MediaInitialize
 37043  0154B6                     _ExternalFlash_MediaInitialize$intlevel0:
 37044                           	opt stack 17
 37045                           
 37046                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 37047                           
 37048                           ;incstack = 0
 37049  0154B6  0102               	movlb	2	; () banked
 37050  0154B8  8185               	bsf	(_mediaInformation+1)& (0+255),0,b
 37051                           
 37052                           ; BSR set to: 2
 37053                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 37054  0154BA  0E02               	movlw	2
 37055  0154BC  6F87               	movwf	(_mediaInformation+3)& (0+255),b
 37056  0154BE  0E00               	movlw	0
 37057  0154C0  6F86               	movwf	(_mediaInformation+2)& (0+255),b
 37058                           
 37059                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 37060  0154C2  0E00               	movlw	0
 37061  0154C4  6F84               	movwf	_mediaInformation& (0+255),b
 37062                           
 37063                           ; BSR set to: 2
 37064                           ;external_flash.c: 15: return &mediaInformation;
 37065  0154C6  0E84               	movlw	low _mediaInformation
 37066  0154C8  0100               	movlb	0	; () banked
 37067  0154CA  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 37068  0154CC  0E02               	movlw	high _mediaInformation
 37069  0154CE  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 37070  0154D0  0012               	return	
 37071  0154D2                     __end_of_ExternalFlash_MediaInitialize:
 37072                           	opt stack 0
 37073                           tosu	equ	0xFFF
 37074                           tosh	equ	0xFFE
 37075                           tosl	equ	0xFFD
 37076                           pclath	equ	0xFFA
 37077                           tblptru	equ	0xFF8
 37078                           tblptrh	equ	0xFF7
 37079                           tblptrl	equ	0xFF6
 37080                           tablat	equ	0xFF5
 37081                           prodh	equ	0xFF4
 37082                           prodl	equ	0xFF3
 37083                           intcon	equ	0xFF2
 37084                           postinc0	equ	0xFEE
 37085                           wreg	equ	0xFE8
 37086                           indf1	equ	0xFE7
 37087                           postinc1	equ	0xFE6
 37088                           postdec1	equ	0xFE5
 37089                           plusw1	equ	0xFE3
 37090                           fsr1h	equ	0xFE2
 37091                           fsr1l	equ	0xFE1
 37092                           indf2	equ	0xFDF
 37093                           postinc2	equ	0xFDE
 37094                           postdec2	equ	0xFDD
 37095                           plusw2	equ	0xFDB
 37096                           fsr2h	equ	0xFDA
 37097                           fsr2l	equ	0xFD9
 37098                           status	equ	0xFD8
 37099                           
 37100 ;; *************** function _ExternalFlash_MediaDetect *****************
 37101 ;; Defined at:
 37102 ;;		line 29 in file "external_flash.c"
 37103 ;; Parameters:    Size  Location     Type
 37104 ;;  config          2    0[BANK0 ] PTR void 
 37105 ;;		 -> NULL(0), 
 37106 ;; Auto vars:     Size  Location     Type
 37107 ;;		None
 37108 ;; Return value:  Size  Location     Type
 37109 ;;                  1    wreg      unsigned char 
 37110 ;; Registers used:
 37111 ;;		wreg
 37112 ;; Tracked objects:
 37113 ;;		On entry : 0/0
 37114 ;;		On exit  : 0/0
 37115 ;;		Unchanged: 0/0
 37116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37117 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37120 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37121 ;;Total ram usage:        2 bytes
 37122 ;; Hardware stack levels used:    1
 37123 ;; Hardware stack levels required when called:   10
 37124 ;; This function calls:
 37125 ;;		Nothing
 37126 ;; This function is called by:
 37127 ;;		_USBMSDInit
 37128 ;;		_MSDProcessCommand
 37129 ;; This function uses a non-reentrant model
 37130 ;;
 37131                           
 37132                           	psect	text153
 37133  015698                     __ptext153:
 37134                           	opt stack 0
 37135  015698                     _ExternalFlash_MediaDetect:
 37136                           	opt stack 0
 37137                           
 37138                           ; BSR set to: 0
 37139                           ;Skip over the trampoline to the duplicate function for level 2
 37140  015698  B25F               	btfsc	btemp,1,c
 37141  01569A  EF71  F0AB         	goto	i2_ExternalFlash_MediaDetect
 37142  01569E                     _ExternalFlash_MediaDetect$intlevel0:
 37143                           	opt stack 17
 37144                           
 37145                           ;external_flash.c: 31: return 1;
 37146                           
 37147                           ;incstack = 0
 37148  01569E  0E01               	movlw	1
 37149  0156A0  0012               	return	
 37150  0156A2                     __end_of_ExternalFlash_MediaDetect:
 37151                           	opt stack 0
 37152                           tosu	equ	0xFFF
 37153                           tosh	equ	0xFFE
 37154                           tosl	equ	0xFFD
 37155                           pclath	equ	0xFFA
 37156                           tblptru	equ	0xFF8
 37157                           tblptrh	equ	0xFF7
 37158                           tblptrl	equ	0xFF6
 37159                           tablat	equ	0xFF5
 37160                           prodh	equ	0xFF4
 37161                           prodl	equ	0xFF3
 37162                           intcon	equ	0xFF2
 37163                           postinc0	equ	0xFEE
 37164                           wreg	equ	0xFE8
 37165                           indf1	equ	0xFE7
 37166                           postinc1	equ	0xFE6
 37167                           postdec1	equ	0xFE5
 37168                           plusw1	equ	0xFE3
 37169                           fsr1h	equ	0xFE2
 37170                           fsr1l	equ	0xFE1
 37171                           indf2	equ	0xFDF
 37172                           postinc2	equ	0xFDE
 37173                           postdec2	equ	0xFDD
 37174                           plusw2	equ	0xFDB
 37175                           fsr2h	equ	0xFDA
 37176                           fsr2l	equ	0xFD9
 37177                           status	equ	0xFD8
 37178                           
 37179 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 37180 ;; Defined at:
 37181 ;;		line 73 in file "app_device_custom_hid.c"
 37182 ;; Parameters:    Size  Location     Type
 37183 ;;		None
 37184 ;; Auto vars:     Size  Location     Type
 37185 ;;  idx             1    0        unsigned char 
 37186 ;; Return value:  Size  Location     Type
 37187 ;;                  1    wreg      void 
 37188 ;; Registers used:
 37189 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37190 ;; Tracked objects:
 37191 ;;		On entry : 0/0
 37192 ;;		On exit  : 0/0
 37193 ;;		Unchanged: 0/0
 37194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37199 ;;Total ram usage:        0 bytes
 37200 ;; Hardware stack levels used:    1
 37201 ;; Hardware stack levels required when called:   17
 37202 ;; This function calls:
 37203 ;;		_USBTransferOnePacket
 37204 ;;		_api_parse
 37205 ;;		_api_prepare
 37206 ;; This function is called by:
 37207 ;;		_main
 37208 ;; This function uses a non-reentrant model
 37209 ;;
 37210                           
 37211                           	psect	text154
 37212  012E9E                     __ptext154:
 37213                           	opt stack 0
 37214  012E9E                     _APP_DeviceCustomHIDTasks:
 37215                           	opt stack 13
 37216                           
 37217                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 37218                           
 37219                           ;incstack = 0
 37220  012E9E  0E20               	movlw	32
 37221  012EA0  605E               	cpfslt	_USBDeviceState,c	;volatile
 37222  012EA2  D001               	goto	l944
 37223  012EA4  0012               	return	
 37224  012EA6                     l944:
 37225                           
 37226                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 37227  012EA6  B265               	btfsc	3941,1,c	;volatile
 37228  012EA8  0012               	return	
 37229                           
 37230                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 37231                           
 37232                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 37233  012EAA  0101               	movlb	1	; () banked
 37234  012EAC  5143               	movf	_USBOutHandle& (0+255),w,b
 37235  012EAE  1144               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 37236  012EB0  B4D8               	btfsc	status,2,c
 37237  012EB2  D006               	goto	u16990
 37238                           
 37239                           ; BSR set to: 1
 37240  012EB4  C143  FFD9         	movff	_USBOutHandle,fsr2l
 37241  012EB8  C144  FFDA         	movff	_USBOutHandle+1,fsr2h
 37242  012EBC  BEDF               	btfsc	indf2,7,c
 37243  012EBE  0012               	return	
 37244  012EC0                     u16990:
 37245                           
 37246                           ; BSR set to: 1
 37247                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 37248                           
 37249                           ; BSR set to: 1
 37250  012EC0  5141               	movf	_USBInHandle& (0+255),w,b
 37251  012EC2  1142               	iorwf	(_USBInHandle+1)& (0+255),w,b
 37252  012EC4  B4D8               	btfsc	status,2,c
 37253  012EC6  D006               	goto	u17010
 37254                           
 37255                           ; BSR set to: 1
 37256  012EC8  C141  FFD9         	movff	_USBInHandle,fsr2l
 37257  012ECC  C142  FFDA         	movff	_USBInHandle+1,fsr2h
 37258  012ED0  BEDF               	btfsc	indf2,7,c
 37259  012ED2  D01B               	goto	l950
 37260  012ED4                     u17010:
 37261                           
 37262                           ; BSR set to: 1
 37263                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 37264                           
 37265                           ; BSR set to: 1
 37266  012ED4  0E80               	movlw	low _ReceivedDataBuffer
 37267  012ED6  0100               	movlb	0	; () banked
 37268  012ED8  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 37269  012EDA  0E03               	movlw	high _ReceivedDataBuffer
 37270  012EDC  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 37271  012EDE  0E40               	movlw	low _ToSendDataBuffer
 37272  012EE0  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 37273  012EE2  0E03               	movlw	high _ToSendDataBuffer
 37274  012EE4  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 37275  012EE6  EC05  F08E         	call	_api_prepare	;wreg free
 37276                           
 37277                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 37278  012EEA  0E01               	movlw	1
 37279  012EEC  0100               	movlb	0	; () banked
 37280  012EEE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37281  012EF0  0E40               	movlw	low _ToSendDataBuffer
 37282  012EF2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 37283  012EF4  0E03               	movlw	high _ToSendDataBuffer
 37284  012EF6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 37285  012EF8  0E40               	movlw	64
 37286  012EFA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37287  012EFC  0E01               	movlw	1
 37288  012EFE  EC5E  F086         	call	_USBTransferOnePacket
 37289  012F02  C060  F141         	movff	?_USBTransferOnePacket,_USBInHandle
 37290  012F06  C061  F142         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 37291  012F0A                     l950:
 37292                           
 37293                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 37294  012F0A  0E80               	movlw	low _ReceivedDataBuffer
 37295  012F0C  0100               	movlb	0	; () banked
 37296  012F0E  6FC6               	movwf	api_parse@inBuffer& (0+255),b
 37297  012F10  0E03               	movlw	high _ReceivedDataBuffer
 37298  012F12  6FC7               	movwf	(api_parse@inBuffer+1)& (0+255),b
 37299  012F14  0E40               	movlw	64
 37300  012F16  6FC8               	movwf	api_parse@receivedDataLength& (0+255),b
 37301  012F18  0E40               	movlw	low _ToSendDataBuffer
 37302  012F1A  6FC9               	movwf	api_parse@outBuffer& (0+255),b
 37303  012F1C  0E03               	movlw	high _ToSendDataBuffer
 37304  012F1E  6FCA               	movwf	(api_parse@outBuffer+1)& (0+255),b
 37305  012F20  EC97  F082         	call	_api_parse	;wreg free
 37306                           
 37307                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 37308  012F24  0E00               	movlw	0
 37309  012F26  0100               	movlb	0	; () banked
 37310  012F28  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37311  012F2A  0E80               	movlw	low _ReceivedDataBuffer
 37312  012F2C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 37313  012F2E  0E03               	movlw	high _ReceivedDataBuffer
 37314  012F30  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 37315  012F32  0E40               	movlw	64
 37316  012F34  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37317  012F36  0E01               	movlw	1
 37318  012F38  EC5E  F086         	call	_USBTransferOnePacket
 37319  012F3C  C060  F143         	movff	?_USBTransferOnePacket,_USBOutHandle
 37320  012F40  C061  F144         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 37321  012F44  0012               	return	
 37322  012F46                     __end_of_APP_DeviceCustomHIDTasks:
 37323                           	opt stack 0
 37324                           tosu	equ	0xFFF
 37325                           tosh	equ	0xFFE
 37326                           tosl	equ	0xFFD
 37327                           pclath	equ	0xFFA
 37328                           tblptru	equ	0xFF8
 37329                           tblptrh	equ	0xFF7
 37330                           tblptrl	equ	0xFF6
 37331                           tablat	equ	0xFF5
 37332                           prodh	equ	0xFF4
 37333                           prodl	equ	0xFF3
 37334                           intcon	equ	0xFF2
 37335                           postinc0	equ	0xFEE
 37336                           wreg	equ	0xFE8
 37337                           indf1	equ	0xFE7
 37338                           postinc1	equ	0xFE6
 37339                           postdec1	equ	0xFE5
 37340                           plusw1	equ	0xFE3
 37341                           fsr1h	equ	0xFE2
 37342                           fsr1l	equ	0xFE1
 37343                           indf2	equ	0xFDF
 37344                           postinc2	equ	0xFDE
 37345                           postdec2	equ	0xFDD
 37346                           plusw2	equ	0xFDB
 37347                           fsr2h	equ	0xFDA
 37348                           fsr2l	equ	0xFD9
 37349                           status	equ	0xFD8
 37350                           
 37351 ;; *************** function _api_prepare *****************
 37352 ;; Defined at:
 37353 ;;		line 38 in file "api.c"
 37354 ;; Parameters:    Size  Location     Type
 37355 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 37356 ;;		 -> ReceivedDataBuffer(64), 
 37357 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 37358 ;;		 -> ToSendDataBuffer(64), 
 37359 ;; Auto vars:     Size  Location     Type
 37360 ;;  command         1   20[BANK0 ] enum E6715
 37361 ;; Return value:  Size  Location     Type
 37362 ;;                  1    wreg      void 
 37363 ;; Registers used:
 37364 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37365 ;; Tracked objects:
 37366 ;;		On entry : 0/0
 37367 ;;		On exit  : 0/0
 37368 ;;		Unchanged: 0/0
 37369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37370 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37373 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37374 ;;Total ram usage:        5 bytes
 37375 ;; Hardware stack levels used:    1
 37376 ;; Hardware stack levels required when called:   12
 37377 ;; This function calls:
 37378 ;;		__fill_buffer_get_display
 37379 ;;		__fill_buffer_get_mode_details
 37380 ;;		__fill_buffer_get_status
 37381 ;;		_memcpy
 37382 ;; This function is called by:
 37383 ;;		_APP_DeviceCustomHIDTasks
 37384 ;; This function uses a non-reentrant model
 37385 ;;
 37386                           
 37387                           	psect	text155
 37388  011C0A                     __ptext155:
 37389                           	opt stack 0
 37390  011C0A                     _api_prepare:
 37391                           	opt stack 17
 37392                           
 37393                           ;api.c: 40: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 37394                           
 37395                           ;incstack = 0
 37396  011C0A  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 37397  011C0E  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 37398  011C12  50DF               	movf	indf2,w,c
 37399  011C14  0100               	movlb	0	; () banked
 37400  011C16  6F74               	movwf	api_prepare@command& (0+255),b
 37401                           
 37402                           ; BSR set to: 0
 37403                           ;api.c: 42: if(command>0x7F)
 37404  011C18  0E7F               	movlw	127
 37405  011C1A  6574               	cpfsgt	api_prepare@command& (0+255),b
 37406  011C1C  D051               	goto	l2241
 37407                           
 37408                           ; BSR set to: 0
 37409                           ;api.c: 49: outBuffer[0] = 0x99;
 37410                           
 37411                           ; BSR set to: 0
 37412                           
 37413                           ;api.c: 45: {;api.c: 48: default:
 37414                           
 37415                           ; BSR set to: 0
 37416                           ;api.c: 43: {;api.c: 44: switch(command)
 37417  011C1E  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 37418  011C22  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 37419  011C26  0E99               	movlw	153
 37420  011C28  6EDF               	movwf	indf2,c
 37421                           
 37422                           ; BSR set to: 0
 37423                           ;api.c: 50: outBuffer[1] = 0x99;
 37424  011C2A  EE20 F001          	lfsr	2,1
 37425  011C2E  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 37426  011C30  26D9               	addwf	fsr2l,f,c
 37427  011C32  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 37428  011C34  22DA               	addwfc	fsr2h,f,c
 37429  011C36  0E99               	movlw	153
 37430  011C38  6EDF               	movwf	indf2,c
 37431                           
 37432                           ;api.c: 51: }
 37433  011C3A  0012               	return	
 37434  011C3C                     
 37435                           ; BSR set to: 0
 37436                           ;api.c: 64: _fill_buffer_get_status(outBuffer);
 37437                           
 37438                           ; BSR set to: 0
 37439  011C3C  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 37440  011C40  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 37441  011C44  EC45  F076         	call	__fill_buffer_get_status	;wreg free
 37442                           
 37443                           ;api.c: 65: break;
 37444  011C48  0012               	return	
 37445  011C4A                     
 37446                           ;api.c: 69: _fill_buffer_get_display(outBuffer, 0);
 37447  011C4A  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 37448  011C4E  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 37449  011C52  0E00               	movlw	0
 37450  011C54  0100               	movlb	0	; () banked
 37451  011C56  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 37452  011C58  ECE8  F094         	call	__fill_buffer_get_display	;wreg free
 37453                           
 37454                           ;api.c: 70: break;
 37455  011C5C  0012               	return	
 37456  011C5E                     
 37457                           ;api.c: 74: _fill_buffer_get_display(outBuffer, 1);
 37458  011C5E  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 37459  011C62  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 37460  011C66  0E01               	movlw	1
 37461  011C68  0100               	movlb	0	; () banked
 37462  011C6A  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 37463  011C6C  ECE8  F094         	call	__fill_buffer_get_display	;wreg free
 37464                           
 37465                           ;api.c: 75: break;
 37466  011C70  0012               	return	
 37467  011C72                     
 37468                           ;api.c: 79: _fill_buffer_get_mode_details(outBuffer);
 37469  011C72  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 37470  011C76  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 37471  011C7A  EC21  F079         	call	__fill_buffer_get_mode_details	;wreg free
 37472                           
 37473                           ;api.c: 80: break;
 37474  011C7E  0012               	return	
 37475  011C80                     
 37476                           ;api.c: 84: memcpy(outBuffer, inBuffer, 64);
 37477  011C80  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 37478  011C84  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 37479  011C88  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 37480  011C8C  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 37481  011C90  0E00               	movlw	0
 37482  011C92  0100               	movlb	0	; () banked
 37483  011C94  6F65               	movwf	(memcpy@n+1)& (0+255),b
 37484  011C96  0E40               	movlw	64
 37485  011C98  6F64               	movwf	memcpy@n& (0+255),b
 37486  011C9A  ECCF  F0A0         	call	_memcpy	;wreg free
 37487                           
 37488                           ;api.c: 85: break;
 37489  011C9E  0012               	return	
 37490  011CA0                     
 37491                           ;api.c: 88: outBuffer[0] = 0x99;
 37492  011CA0  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 37493  011CA4  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 37494  011CA8  0E99               	movlw	153
 37495  011CAA  6EDF               	movwf	indf2,c
 37496                           
 37497                           ;api.c: 89: outBuffer[1] = 0x99;
 37498  011CAC  0100               	movlb	0	; () banked
 37499  011CAE  EE20 F001          	lfsr	2,1
 37500  011CB2  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 37501  011CB4  26D9               	addwf	fsr2l,f,c
 37502  011CB6  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 37503  011CB8  22DA               	addwfc	fsr2h,f,c
 37504  011CBA  0E99               	movlw	153
 37505  011CBC  6EDF               	movwf	indf2,c
 37506                           
 37507                           ;api.c: 90: }
 37508  011CBE  0012               	return	
 37509  011CC0                     l2241:
 37510                           
 37511                           ; BSR set to: 0
 37512                           
 37513                           ; BSR set to: 0
 37514  011CC0  5174               	movf	api_prepare@command& (0+255),w,b
 37515                           
 37516                           ; Switch size 1, requested type "space"
 37517                           ; Number of cases is 6, Range of values is 0 to 32
 37518                           ; switch strategies available:
 37519                           ; Name         Instructions Cycles
 37520                           ; simple_byte           19    10 (average)
 37521                           ;	Chosen strategy is simple_byte
 37522  011CC2  0A00               	xorlw	0	; case 0
 37523  011CC4  B4D8               	btfsc	status,2,c
 37524  011CC6  0012               	return	
 37525  011CC8  0A10               	xorlw	16	; case 16
 37526  011CCA  B4D8               	btfsc	status,2,c
 37527  011CCC  D7B7               	goto	l2244
 37528  011CCE  0A01               	xorlw	1	; case 17
 37529  011CD0  B4D8               	btfsc	status,2,c
 37530  011CD2  D7BB               	goto	l2245
 37531  011CD4  0A03               	xorlw	3	; case 18
 37532  011CD6  B4D8               	btfsc	status,2,c
 37533  011CD8  D7C2               	goto	l2246
 37534  011CDA  0A01               	xorlw	1	; case 19
 37535  011CDC  B4D8               	btfsc	status,2,c
 37536  011CDE  D7C9               	goto	l2247
 37537  011CE0  0A33               	xorlw	51	; case 32
 37538  011CE2  B4D8               	btfsc	status,2,c
 37539  011CE4  D7CD               	goto	l2248
 37540  011CE6  D7DC               	goto	l2249
 37541  011CE8                     __end_of_api_prepare:
 37542                           	opt stack 0
 37543                           tosu	equ	0xFFF
 37544                           tosh	equ	0xFFE
 37545                           tosl	equ	0xFFD
 37546                           pclath	equ	0xFFA
 37547                           tblptru	equ	0xFF8
 37548                           tblptrh	equ	0xFF7
 37549                           tblptrl	equ	0xFF6
 37550                           tablat	equ	0xFF5
 37551                           prodh	equ	0xFF4
 37552                           prodl	equ	0xFF3
 37553                           intcon	equ	0xFF2
 37554                           postinc0	equ	0xFEE
 37555                           wreg	equ	0xFE8
 37556                           indf1	equ	0xFE7
 37557                           postinc1	equ	0xFE6
 37558                           postdec1	equ	0xFE5
 37559                           plusw1	equ	0xFE3
 37560                           fsr1h	equ	0xFE2
 37561                           fsr1l	equ	0xFE1
 37562                           indf2	equ	0xFDF
 37563                           postinc2	equ	0xFDE
 37564                           postdec2	equ	0xFDD
 37565                           plusw2	equ	0xFDB
 37566                           fsr2h	equ	0xFDA
 37567                           fsr2l	equ	0xFD9
 37568                           status	equ	0xFD8
 37569                           
 37570 ;; *************** function __fill_buffer_get_status *****************
 37571 ;; Defined at:
 37572 ;;		line 171 in file "api.c"
 37573 ;; Parameters:    Size  Location     Type
 37574 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 37575 ;;		 -> ToSendDataBuffer(64), 
 37576 ;; Auto vars:     Size  Location     Type
 37577 ;;		None
 37578 ;; Return value:  Size  Location     Type
 37579 ;;                  1    wreg      void 
 37580 ;; Registers used:
 37581 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37582 ;; Tracked objects:
 37583 ;;		On entry : 0/0
 37584 ;;		On exit  : 0/0
 37585 ;;		Unchanged: 0/0
 37586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37590 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37591 ;;Total ram usage:        2 bytes
 37592 ;; Hardware stack levels used:    1
 37593 ;; Hardware stack levels required when called:   11
 37594 ;; This function calls:
 37595 ;;		_memcpy
 37596 ;; This function is called by:
 37597 ;;		_api_prepare
 37598 ;; This function uses a non-reentrant model
 37599 ;;
 37600                           
 37601                           	psect	text156
 37602  00EC8A                     __ptext156:
 37603                           	opt stack 0
 37604  00EC8A                     __fill_buffer_get_status:
 37605                           	opt stack 17
 37606                           
 37607                           ;api.c: 174: outBuffer[0] = DATAREQUEST_GET_STATUS;
 37608                           
 37609                           ;incstack = 0
 37610  00EC8A  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 37611  00EC8E  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 37612  00EC92  0E10               	movlw	16
 37613  00EC94  6EDF               	movwf	indf2,c
 37614                           
 37615                           ;api.c: 177: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 37616  00EC96  0100               	movlb	0	; () banked
 37617  00EC98  EE20 F001          	lfsr	2,1
 37618  00EC9C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37619  00EC9E  26D9               	addwf	fsr2l,f,c
 37620  00ECA0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37621  00ECA2  22DA               	addwfc	fsr2h,f,c
 37622  00ECA4  0EBC               	movlw	188
 37623  00ECA6  6EDF               	movwf	indf2,c
 37624                           
 37625                           ; BSR set to: 0
 37626                           ;api.c: 178: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 37627  00ECA8  EE20 F002          	lfsr	2,2
 37628  00ECAC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37629  00ECAE  26D9               	addwf	fsr2l,f,c
 37630  00ECB0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37631  00ECB2  22DA               	addwfc	fsr2h,f,c
 37632  00ECB4  0E26               	movlw	38
 37633  00ECB6  6EDF               	movwf	indf2,c
 37634                           
 37635                           ; BSR set to: 0
 37636                           ;api.c: 181: outBuffer[3] = 0x00;
 37637  00ECB8  EE20 F003          	lfsr	2,3
 37638  00ECBC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37639  00ECBE  26D9               	addwf	fsr2l,f,c
 37640  00ECC0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37641  00ECC2  22DA               	addwfc	fsr2h,f,c
 37642  00ECC4  0E00               	movlw	0
 37643  00ECC6  6EDF               	movwf	indf2,c
 37644                           
 37645                           ; BSR set to: 0
 37646                           ;api.c: 182: outBuffer[4] = 0x05;
 37647  00ECC8  EE20 F004          	lfsr	2,4
 37648  00ECCC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37649  00ECCE  26D9               	addwf	fsr2l,f,c
 37650  00ECD0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37651  00ECD2  22DA               	addwfc	fsr2h,f,c
 37652  00ECD4  0E05               	movlw	5
 37653  00ECD6  6EDF               	movwf	indf2,c
 37654                           
 37655                           ; BSR set to: 0
 37656                           ;api.c: 183: outBuffer[5] = 0x06;
 37657  00ECD8  EE20 F005          	lfsr	2,5
 37658  00ECDC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37659  00ECDE  26D9               	addwf	fsr2l,f,c
 37660  00ECE0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37661  00ECE2  22DA               	addwfc	fsr2h,f,c
 37662  00ECE4  0E06               	movlw	6
 37663  00ECE6  6EDF               	movwf	indf2,c
 37664                           
 37665                           ; BSR set to: 0
 37666                           ;api.c: 186: outBuffer[6] = os.subTimeSlot;
 37667  00ECE8  EE20 F006          	lfsr	2,6
 37668  00ECEC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37669  00ECEE  26D9               	addwf	fsr2l,f,c
 37670  00ECF0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37671  00ECF2  22DA               	addwfc	fsr2h,f,c
 37672  00ECF4  C171  FFDF         	movff	_os,indf2	;volatile
 37673                           
 37674                           ; BSR set to: 0
 37675                           ;api.c: 187: outBuffer[7] = os.timeSlot;
 37676  00ECF8  EE20 F007          	lfsr	2,7
 37677  00ECFC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37678  00ECFE  26D9               	addwf	fsr2l,f,c
 37679  00ED00  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37680  00ED02  22DA               	addwfc	fsr2h,f,c
 37681  00ED04  C172  FFDF         	movff	_os+1,indf2	;volatile
 37682                           
 37683                           ; BSR set to: 0
 37684                           ;api.c: 188: outBuffer[8] = os.done;
 37685  00ED08  EE20 F008          	lfsr	2,8
 37686  00ED0C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37687  00ED0E  26D9               	addwf	fsr2l,f,c
 37688  00ED10  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37689  00ED12  22DA               	addwfc	fsr2h,f,c
 37690  00ED14  C173  FFDF         	movff	_os+2,indf2	;volatile
 37691                           
 37692                           ; BSR set to: 0
 37693                           ;api.c: 189: outBuffer[9] = os.encoder1Count;
 37694  00ED18  EE20 F009          	lfsr	2,9
 37695  00ED1C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37696  00ED1E  26D9               	addwf	fsr2l,f,c
 37697  00ED20  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37698  00ED22  22DA               	addwfc	fsr2h,f,c
 37699  00ED24  C174  FFDF         	movff	_os+3,indf2	;volatile
 37700                           
 37701                           ; BSR set to: 0
 37702                           ;api.c: 190: outBuffer[10] = os.button1;
 37703  00ED28  EE20 F00A          	lfsr	2,10
 37704  00ED2C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37705  00ED2E  26D9               	addwf	fsr2l,f,c
 37706  00ED30  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37707  00ED32  22DA               	addwfc	fsr2h,f,c
 37708  00ED34  C175  FFDF         	movff	_os+4,indf2	;volatile
 37709                           
 37710                           ; BSR set to: 0
 37711                           ;api.c: 191: outBuffer[11] = os.encoder2Count;
 37712  00ED38  EE20 F00B          	lfsr	2,11
 37713  00ED3C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37714  00ED3E  26D9               	addwf	fsr2l,f,c
 37715  00ED40  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37716  00ED42  22DA               	addwfc	fsr2h,f,c
 37717  00ED44  C176  FFDF         	movff	_os+5,indf2	;volatile
 37718                           
 37719                           ; BSR set to: 0
 37720                           ;api.c: 192: outBuffer[12] = os.button2;
 37721  00ED48  EE20 F00C          	lfsr	2,12
 37722  00ED4C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37723  00ED4E  26D9               	addwf	fsr2l,f,c
 37724  00ED50  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37725  00ED52  22DA               	addwfc	fsr2h,f,c
 37726  00ED54  C177  FFDF         	movff	_os+6,indf2	;volatile
 37727                           
 37728                           ; BSR set to: 0
 37729                           ;api.c: 193: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 37730  00ED58  0E0D               	movlw	13
 37731  00ED5A  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37732  00ED5C  6F60               	movwf	memcpy@d1& (0+255),b
 37733  00ED5E  0E00               	movlw	0
 37734  00ED60  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37735  00ED62  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 37736  00ED64  0E78               	movlw	low (_os+7)
 37737  00ED66  6F62               	movwf	memcpy@s1& (0+255),b
 37738  00ED68  0E01               	movlw	high (_os+7)
 37739  00ED6A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 37740  00ED6C  0E00               	movlw	0
 37741  00ED6E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 37742  00ED70  0E04               	movlw	4
 37743  00ED72  6F64               	movwf	memcpy@n& (0+255),b
 37744  00ED74  ECCF  F0A0         	call	_memcpy	;wreg free
 37745                           
 37746                           ;api.c: 198: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 37747  00ED78  0E11               	movlw	17
 37748  00ED7A  0100               	movlb	0	; () banked
 37749  00ED7C  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37750  00ED7E  6F60               	movwf	memcpy@d1& (0+255),b
 37751  00ED80  0E00               	movlw	0
 37752  00ED82  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37753  00ED84  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 37754  00ED86  0E7C               	movlw	low (_os+11)
 37755  00ED88  6F62               	movwf	memcpy@s1& (0+255),b
 37756  00ED8A  0E01               	movlw	high (_os+11)
 37757  00ED8C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 37758  00ED8E  0E00               	movlw	0
 37759  00ED90  6F65               	movwf	(memcpy@n+1)& (0+255),b
 37760  00ED92  0E04               	movlw	4
 37761  00ED94  6F64               	movwf	memcpy@n& (0+255),b
 37762  00ED96  ECCF  F0A0         	call	_memcpy	;wreg free
 37763                           
 37764                           ;api.c: 203: outBuffer[21] = os.displayState;
 37765  00ED9A  0100               	movlb	0	; () banked
 37766  00ED9C  EE20 F015          	lfsr	2,21
 37767  00EDA0  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37768  00EDA2  26D9               	addwf	fsr2l,f,c
 37769  00EDA4  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37770  00EDA6  22DA               	addwfc	fsr2h,f,c
 37771  00EDA8  C17E  FFDF         	movff	_os+13,indf2	;volatile
 37772                           
 37773                           ; BSR set to: 0
 37774                           ;api.c: 204: outBuffer[22] = os.beep_count;
 37775  00EDAC  EE20 F016          	lfsr	2,22
 37776  00EDB0  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37777  00EDB2  26D9               	addwf	fsr2l,f,c
 37778  00EDB4  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37779  00EDB6  22DA               	addwfc	fsr2h,f,c
 37780  00EDB8  C197  FFDF         	movff	_os+38,indf2	;volatile
 37781                           
 37782                           ; BSR set to: 0
 37783                           ;api.c: 205: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 37784  00EDBC  EE20 F017          	lfsr	2,23
 37785  00EDC0  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37786  00EDC2  26D9               	addwf	fsr2l,f,c
 37787  00EDC4  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37788  00EDC6  22DA               	addwfc	fsr2h,f,c
 37789  00EDC8  C198  FFDF         	movff	_os+39,indf2	;volatile
 37790                           
 37791                           ; BSR set to: 0
 37792                           ;api.c: 206: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 37793  00EDCC  EE20 F018          	lfsr	2,24
 37794  00EDD0  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37795  00EDD2  26D9               	addwf	fsr2l,f,c
 37796  00EDD4  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37797  00EDD6  22DA               	addwfc	fsr2h,f,c
 37798  00EDD8  0101               	movlb	1	; () banked
 37799  00EDDA  5199               	movf	(_os+40)& (0+255),w,b	;volatile
 37800  00EDDC  6EDF               	movwf	indf2,c
 37801                           
 37802                           ; BSR set to: 1
 37803                           ;api.c: 207: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 37804  00EDDE  0100               	movlb	0	; () banked
 37805  00EDE0  EE20 F019          	lfsr	2,25
 37806  00EDE4  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37807  00EDE6  26D9               	addwf	fsr2l,f,c
 37808  00EDE8  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37809  00EDEA  22DA               	addwfc	fsr2h,f,c
 37810  00EDEC  C19A  FFDF         	movff	_os+41,indf2	;volatile
 37811                           
 37812                           ; BSR set to: 0
 37813                           ;api.c: 208: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 37814  00EDF0  EE20 F01A          	lfsr	2,26
 37815  00EDF4  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37816  00EDF6  26D9               	addwf	fsr2l,f,c
 37817  00EDF8  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37818  00EDFA  22DA               	addwfc	fsr2h,f,c
 37819  00EDFC  0101               	movlb	1	; () banked
 37820  00EDFE  519B               	movf	(_os+42)& (0+255),w,b	;volatile
 37821  00EE00  6EDF               	movwf	indf2,c
 37822                           
 37823                           ; BSR set to: 1
 37824                           ;api.c: 209: outBuffer[27] = os.fan_on;
 37825  00EE02  0100               	movlb	0	; () banked
 37826  00EE04  EE20 F01B          	lfsr	2,27
 37827  00EE08  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37828  00EE0A  26D9               	addwf	fsr2l,f,c
 37829  00EE0C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37830  00EE0E  22DA               	addwfc	fsr2h,f,c
 37831  00EE10  C19F  FFDF         	movff	_os+46,indf2	;volatile
 37832                           
 37833                           ; BSR set to: 0
 37834                           ;api.c: 210: outBuffer[28] = os.brake_on;
 37835  00EE14  EE20 F01C          	lfsr	2,28
 37836  00EE18  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37837  00EE1A  26D9               	addwf	fsr2l,f,c
 37838  00EE1C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37839  00EE1E  22DA               	addwfc	fsr2h,f,c
 37840  00EE20  C1A0  FFDF         	movff	_os+47,indf2	;volatile
 37841                           
 37842                           ; BSR set to: 0
 37843                           ;api.c: 211: outBuffer[29] = os.busy;
 37844  00EE24  EE20 F01D          	lfsr	2,29
 37845  00EE28  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37846  00EE2A  26D9               	addwf	fsr2l,f,c
 37847  00EE2C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37848  00EE2E  22DA               	addwfc	fsr2h,f,c
 37849  00EE30  C17F  FFDF         	movff	_os+14,indf2	;volatile
 37850                           
 37851                           ; BSR set to: 0
 37852                           ;api.c: 213: outBuffer[30] = ((unsigned char)((os.manual_speed)&0xFF));
 37853  00EE34  EE20 F01E          	lfsr	2,30
 37854  00EE38  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37855  00EE3A  26D9               	addwf	fsr2l,f,c
 37856  00EE3C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37857  00EE3E  22DA               	addwfc	fsr2h,f,c
 37858  00EE40  C194  FFDF         	movff	_os+35,indf2	;volatile
 37859                           
 37860                           ; BSR set to: 0
 37861                           ;api.c: 214: outBuffer[31] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 37862  00EE44  EE20 F01F          	lfsr	2,31
 37863  00EE48  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37864  00EE4A  26D9               	addwf	fsr2l,f,c
 37865  00EE4C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37866  00EE4E  22DA               	addwfc	fsr2h,f,c
 37867  00EE50  0101               	movlb	1	; () banked
 37868  00EE52  5195               	movf	(_os+36)& (0+255),w,b	;volatile
 37869  00EE54  6EDF               	movwf	indf2,c
 37870                           
 37871                           ; BSR set to: 1
 37872                           ;api.c: 228: memcpy(&outBuffer[42], &config, 22);
 37873  00EE56  0E2A               	movlw	42
 37874  00EE58  0100               	movlb	0	; () banked
 37875  00EE5A  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 37876  00EE5C  6F60               	movwf	memcpy@d1& (0+255),b
 37877  00EE5E  0E00               	movlw	0
 37878  00EE60  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 37879  00EE62  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 37880  00EE64  0EA1               	movlw	low _config
 37881  00EE66  6F62               	movwf	memcpy@s1& (0+255),b
 37882  00EE68  0E01               	movlw	high _config
 37883  00EE6A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 37884  00EE6C  0E00               	movlw	0
 37885  00EE6E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 37886  00EE70  0E16               	movlw	22
 37887  00EE72  6F64               	movwf	memcpy@n& (0+255),b
 37888  00EE74  ECCF  F0A0         	call	_memcpy	;wreg free
 37889  00EE78  0012               	return		;funcret
 37890  00EE7A                     __end_of__fill_buffer_get_status:
 37891                           	opt stack 0
 37892                           tosu	equ	0xFFF
 37893                           tosh	equ	0xFFE
 37894                           tosl	equ	0xFFD
 37895                           pclath	equ	0xFFA
 37896                           tblptru	equ	0xFF8
 37897                           tblptrh	equ	0xFF7
 37898                           tblptrl	equ	0xFF6
 37899                           tablat	equ	0xFF5
 37900                           prodh	equ	0xFF4
 37901                           prodl	equ	0xFF3
 37902                           intcon	equ	0xFF2
 37903                           postinc0	equ	0xFEE
 37904                           wreg	equ	0xFE8
 37905                           indf1	equ	0xFE7
 37906                           postinc1	equ	0xFE6
 37907                           postdec1	equ	0xFE5
 37908                           plusw1	equ	0xFE3
 37909                           fsr1h	equ	0xFE2
 37910                           fsr1l	equ	0xFE1
 37911                           indf2	equ	0xFDF
 37912                           postinc2	equ	0xFDE
 37913                           postdec2	equ	0xFDD
 37914                           plusw2	equ	0xFDB
 37915                           fsr2h	equ	0xFDA
 37916                           fsr2l	equ	0xFD9
 37917                           status	equ	0xFD8
 37918                           
 37919 ;; *************** function _memcpy *****************
 37920 ;; Defined at:
 37921 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 37922 ;; Parameters:    Size  Location     Type
 37923 ;;  d1              2    0[BANK0 ] PTR void 
 37924 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 37925 ;;		 -> msd_buffer(512), SetupPkt(8), 
 37926 ;;  s1              2    2[BANK0 ] PTR const void 
 37927 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 37928 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 37929 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 37930 ;;		 -> dc_arc2(80), dc_arc1(80), os.current_position_in_degrees(2), dc_divide2(80), 
 37931 ;;		 -> dc_divide1(80), dc_setup2(80), dc_setup1(80), dc_main(80), 
 37932 ;;		 -> dc_startup(80), os.current_position_in_steps(4), config(28), ReceivedDataBuffer(64), 
 37933 ;;		 -> os(48), inq_resp(36), RAM(3759), 
 37934 ;;  n               2    4[BANK0 ] unsigned int 
 37935 ;; Auto vars:     Size  Location     Type
 37936 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 37937 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 37938 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 37939 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 37940 ;;		 -> dc_arc2(80), dc_arc1(80), os.current_position_in_degrees(2), dc_divide2(80), 
 37941 ;;		 -> dc_divide1(80), dc_setup2(80), dc_setup1(80), dc_main(80), 
 37942 ;;		 -> dc_startup(80), os.current_position_in_steps(4), config(28), ReceivedDataBuffer(64), 
 37943 ;;		 -> os(48), inq_resp(36), RAM(3759), 
 37944 ;;  d               2    6[BANK0 ] PTR unsigned char 
 37945 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 37946 ;;		 -> msd_buffer(512), SetupPkt(8), 
 37947 ;;  tmp             1   10[BANK0 ] unsigned char 
 37948 ;; Return value:  Size  Location     Type
 37949 ;;                  2    0[BANK0 ] PTR void 
 37950 ;; Registers used:
 37951 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 37952 ;; Tracked objects:
 37953 ;;		On entry : 0/0
 37954 ;;		On exit  : 0/0
 37955 ;;		Unchanged: 0/0
 37956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37957 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37958 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37960 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37961 ;;Total ram usage:       11 bytes
 37962 ;; Hardware stack levels used:    1
 37963 ;; Hardware stack levels required when called:   10
 37964 ;; This function calls:
 37965 ;;		Nothing
 37966 ;; This function is called by:
 37967 ;;		_MSDProcessCommandMediaPresent
 37968 ;;		__display_start
 37969 ;;		_display_prepare
 37970 ;;		__flash_set_page_size
 37971 ;;		_fat_create_file
 37972 ;;		_api_prepare
 37973 ;;		__fill_buffer_get_status
 37974 ;; This function uses a non-reentrant model
 37975 ;;
 37976                           
 37977                           	psect	text157
 37978  01419E                     __ptext157:
 37979                           	opt stack 0
 37980  01419E                     _memcpy:
 37981                           	opt stack 17
 37982                           
 37983                           ;incstack = 0
 37984  01419E  C062  F068         	movff	memcpy@s1,memcpy@s
 37985  0141A2  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 37986  0141A6  C060  F066         	movff	memcpy@d1,memcpy@d
 37987  0141AA  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 37988  0141AE  D01D               	goto	l3714
 37989  0141B0                     l12846:
 37990  0141B0  C068  FFF6         	movff	memcpy@s,tblptrl
 37991  0141B4  C069  FFF7         	movff	memcpy@s+1,tblptrh
 37992  0141B8  0E00               	movlw	low (__mediumconst shr (0+16))
 37993  0141BA  6EF8               	movwf	tblptru,c
 37994  0141BC  0E0E               	movlw	(high __ramtop+-1)
 37995  0141BE  64F7               	cpfsgt	tblptrh,c
 37996  0141C0  D003               	bra	u11197
 37997  0141C2  0008               	tblrd		*
 37998  0141C4  50F5               	movf	tablat,w,c
 37999  0141C6  D005               	bra	u11190
 38000  0141C8                     u11197:
 38001  0141C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 38002  0141CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 38003  0141D0  50EF               	movf	indf0,w,c
 38004  0141D2                     u11190:
 38005  0141D2  0100               	movlb	0	; () banked
 38006  0141D4  6F6A               	movwf	memcpy@tmp& (0+255),b
 38007                           
 38008                           ; BSR set to: 0
 38009  0141D6  4B68               	infsnz	memcpy@s& (0+255),f,b
 38010  0141D8  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 38011                           
 38012                           ; BSR set to: 0
 38013  0141DA  C066  FFD9         	movff	memcpy@d,fsr2l
 38014  0141DE  C067  FFDA         	movff	memcpy@d+1,fsr2h
 38015  0141E2  C06A  FFDF         	movff	memcpy@tmp,indf2
 38016                           
 38017                           ; BSR set to: 0
 38018  0141E6  4B66               	infsnz	memcpy@d& (0+255),f,b
 38019  0141E8  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 38020  0141EA                     l3714:
 38021                           
 38022                           ; BSR set to: 0
 38023  0141EA  0100               	movlb	0	; () banked
 38024  0141EC  0764               	decf	memcpy@n& (0+255),f,b
 38025  0141EE  A0D8               	btfss	status,0,c
 38026  0141F0  0765               	decf	(memcpy@n+1)& (0+255),f,b
 38027  0141F2  2964               	incf	memcpy@n& (0+255),w,b
 38028  0141F4  E1DD               	bnz	l12846
 38029  0141F6  2965               	incf	(memcpy@n+1)& (0+255),w,b
 38030  0141F8  B4D8               	btfsc	status,2,c
 38031  0141FA  0012               	return	
 38032  0141FC  D7D9               	goto	l3715
 38033  0141FE                     __end_of_memcpy:
 38034                           	opt stack 0
 38035                           tosu	equ	0xFFF
 38036                           tosh	equ	0xFFE
 38037                           tosl	equ	0xFFD
 38038                           pclath	equ	0xFFA
 38039                           tblptru	equ	0xFF8
 38040                           tblptrh	equ	0xFF7
 38041                           tblptrl	equ	0xFF6
 38042                           tablat	equ	0xFF5
 38043                           prodh	equ	0xFF4
 38044                           prodl	equ	0xFF3
 38045                           intcon	equ	0xFF2
 38046                           indf0	equ	0xFEF
 38047                           postinc0	equ	0xFEE
 38048                           fsr0h	equ	0xFEA
 38049                           fsr0l	equ	0xFE9
 38050                           wreg	equ	0xFE8
 38051                           indf1	equ	0xFE7
 38052                           postinc1	equ	0xFE6
 38053                           postdec1	equ	0xFE5
 38054                           plusw1	equ	0xFE3
 38055                           fsr1h	equ	0xFE2
 38056                           fsr1l	equ	0xFE1
 38057                           indf2	equ	0xFDF
 38058                           postinc2	equ	0xFDE
 38059                           postdec2	equ	0xFDD
 38060                           plusw2	equ	0xFDB
 38061                           fsr2h	equ	0xFDA
 38062                           fsr2l	equ	0xFD9
 38063                           status	equ	0xFD8
 38064                           
 38065 ;; *************** function __fill_buffer_get_mode_details *****************
 38066 ;; Defined at:
 38067 ;;		line 273 in file "api.c"
 38068 ;; Parameters:    Size  Location     Type
 38069 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 38070 ;;		 -> ToSendDataBuffer(64), 
 38071 ;; Auto vars:     Size  Location     Type
 38072 ;;		None
 38073 ;; Return value:  Size  Location     Type
 38074 ;;                  1    wreg      void 
 38075 ;; Registers used:
 38076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38077 ;; Tracked objects:
 38078 ;;		On entry : 0/0
 38079 ;;		On exit  : 0/0
 38080 ;;		Unchanged: 0/0
 38081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38082 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38084 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38085 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38086 ;;Total ram usage:        4 bytes
 38087 ;; Hardware stack levels used:    1
 38088 ;; Hardware stack levels required when called:   10
 38089 ;; This function calls:
 38090 ;;		Nothing
 38091 ;; This function is called by:
 38092 ;;		_api_prepare
 38093 ;; This function uses a non-reentrant model
 38094 ;;
 38095                           
 38096                           	psect	text158
 38097  00F242                     __ptext158:
 38098                           	opt stack 0
 38099  00F242                     __fill_buffer_get_mode_details:
 38100                           	opt stack 18
 38101                           
 38102                           ;api.c: 276: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 38103                           
 38104                           ; BSR set to: 0
 38105                           ;incstack = 0
 38106  00F242  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 38107  00F246  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 38108  00F24A  0E13               	movlw	19
 38109  00F24C  6EDF               	movwf	indf2,c
 38110                           
 38111                           ;api.c: 279: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 38112  00F24E  0100               	movlb	0	; () banked
 38113  00F250  EE20 F001          	lfsr	2,1
 38114  00F254  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38115  00F256  26D9               	addwf	fsr2l,f,c
 38116  00F258  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38117  00F25A  22DA               	addwfc	fsr2h,f,c
 38118  00F25C  0EBC               	movlw	188
 38119  00F25E  6EDF               	movwf	indf2,c
 38120                           
 38121                           ; BSR set to: 0
 38122                           ;api.c: 280: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 38123  00F260  EE20 F002          	lfsr	2,2
 38124  00F264  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38125  00F266  26D9               	addwf	fsr2l,f,c
 38126  00F268  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38127  00F26A  22DA               	addwfc	fsr2h,f,c
 38128  00F26C  0E26               	movlw	38
 38129  00F26E  6EDF               	movwf	indf2,c
 38130                           
 38131                           ; BSR set to: 0
 38132                           ;api.c: 283: outBuffer[3] = os.displayState;
 38133  00F270  EE20 F003          	lfsr	2,3
 38134  00F274  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38135  00F276  26D9               	addwf	fsr2l,f,c
 38136  00F278  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38137  00F27A  22DA               	addwfc	fsr2h,f,c
 38138  00F27C  C17E  FFDF         	movff	_os+13,indf2	;volatile
 38139                           
 38140                           ;api.c: 285: switch(os.displayState & 0x0F)
 38141  00F280  D090               	goto	l2284
 38142  00F282                     
 38143                           ; BSR set to: 0
 38144                           ;api.c: 291: case DISPLAY_STATE_SETUP2:;api.c: 292: outBuffer[4] = os.setup_step_size;
 38145                           
 38146                           ; BSR set to: 0
 38147                           
 38148                           ; BSR set to: 0
 38149  00F282  EE20 F004          	lfsr	2,4
 38150  00F286  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38151  00F288  26D9               	addwf	fsr2l,f,c
 38152  00F28A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38153  00F28C  22DA               	addwfc	fsr2h,f,c
 38154  00F28E  C181  FFDF         	movff	_os+16,indf2	;volatile
 38155                           
 38156                           ;api.c: 293: break;
 38157  00F292  0012               	return	
 38158  00F294                     
 38159                           ; BSR set to: 0
 38160                           ;api.c: 296: case DISPLAY_STATE_DIVIDE2:;api.c: 298: outBuffer[4] = os.divide_step_size;
 38161                           
 38162                           ; BSR set to: 0
 38163                           
 38164                           ; BSR set to: 0
 38165  00F294  EE20 F004          	lfsr	2,4
 38166  00F298  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38167  00F29A  26D9               	addwf	fsr2l,f,c
 38168  00F29C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38169  00F29E  22DA               	addwfc	fsr2h,f,c
 38170  00F2A0  C186  FFDF         	movff	_os+21,indf2	;volatile
 38171                           
 38172                           ;api.c: 299: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 38173  00F2A4  EE20 F005          	lfsr	2,5
 38174  00F2A8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38175  00F2AA  26D9               	addwf	fsr2l,f,c
 38176  00F2AC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38177  00F2AE  22DA               	addwfc	fsr2h,f,c
 38178  00F2B0  0101               	movlb	1	; () banked
 38179  00F2B2  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 38180  00F2B4  6EDF               	movwf	indf2,c
 38181                           
 38182                           ;api.c: 300: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 38183  00F2B6  0100               	movlb	0	; () banked
 38184  00F2B8  EE20 F006          	lfsr	2,6
 38185  00F2BC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38186  00F2BE  26D9               	addwf	fsr2l,f,c
 38187  00F2C0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38188  00F2C2  22DA               	addwfc	fsr2h,f,c
 38189  00F2C4  C184  FFDF         	movff	_os+19,indf2	;volatile
 38190                           
 38191                           ;api.c: 301: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 38192  00F2C8  EE20 F007          	lfsr	2,7
 38193  00F2CC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38194  00F2CE  26D9               	addwf	fsr2l,f,c
 38195  00F2D0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38196  00F2D2  22DA               	addwfc	fsr2h,f,c
 38197  00F2D4  0101               	movlb	1	; () banked
 38198  00F2D6  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 38199  00F2D8  6EDF               	movwf	indf2,c
 38200                           
 38201                           ;api.c: 302: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 38202  00F2DA  0100               	movlb	0	; () banked
 38203  00F2DC  EE20 F008          	lfsr	2,8
 38204  00F2E0  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38205  00F2E2  26D9               	addwf	fsr2l,f,c
 38206  00F2E4  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38207  00F2E6  22DA               	addwfc	fsr2h,f,c
 38208  00F2E8  C189  FFDF         	movff	_os+24,indf2	;volatile
 38209                           
 38210                           ;api.c: 303: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 38211  00F2EC  EE20 F009          	lfsr	2,9
 38212  00F2F0  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38213  00F2F2  26D9               	addwf	fsr2l,f,c
 38214  00F2F4  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38215  00F2F6  22DA               	addwfc	fsr2h,f,c
 38216  00F2F8  0101               	movlb	1	; () banked
 38217  00F2FA  5188               	movf	(_os+23)& (0+255),w,b	;volatile
 38218  00F2FC  6EDF               	movwf	indf2,c
 38219                           
 38220                           ;api.c: 304: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 38221  00F2FE  0100               	movlb	0	; () banked
 38222  00F300  EE20 F00A          	lfsr	2,10
 38223  00F304  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38224  00F306  26D9               	addwf	fsr2l,f,c
 38225  00F308  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38226  00F30A  22DA               	addwfc	fsr2h,f,c
 38227  00F30C  C187  FFDF         	movff	_os+22,indf2	;volatile
 38228                           
 38229                           ;api.c: 305: break;
 38230  00F310  0012               	return	
 38231  00F312                     
 38232                           ; BSR set to: 0
 38233                           ;api.c: 308: case DISPLAY_STATE_ARC2:;api.c: 309: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 38234                           
 38235                           ; BSR set to: 0
 38236                           
 38237                           ; BSR set to: 0
 38238  00F312  EE20 F004          	lfsr	2,4
 38239  00F316  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38240  00F318  26D9               	addwf	fsr2l,f,c
 38241  00F31A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38242  00F31C  22DA               	addwfc	fsr2h,f,c
 38243  00F31E  0101               	movlb	1	; () banked
 38244  00F320  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 38245  00F322  6EDF               	movwf	indf2,c
 38246                           
 38247                           ;api.c: 310: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 38248  00F324  0100               	movlb	0	; () banked
 38249  00F326  EE20 F005          	lfsr	2,5
 38250  00F32A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38251  00F32C  26D9               	addwf	fsr2l,f,c
 38252  00F32E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38253  00F330  22DA               	addwfc	fsr2h,f,c
 38254  00F332  C18B  FFDF         	movff	_os+26,indf2	;volatile
 38255                           
 38256                           ;api.c: 311: outBuffer[6] = os.arc_direction;
 38257  00F336  EE20 F006          	lfsr	2,6
 38258  00F33A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38259  00F33C  26D9               	addwf	fsr2l,f,c
 38260  00F33E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38261  00F340  22DA               	addwfc	fsr2h,f,c
 38262  00F342  C193  FFDF         	movff	_os+34,indf2	;volatile
 38263                           
 38264                           ;api.c: 312: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 38265  00F346  EE20 F007          	lfsr	2,7
 38266  00F34A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38267  00F34C  26D9               	addwf	fsr2l,f,c
 38268  00F34E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38269  00F350  22DA               	addwfc	fsr2h,f,c
 38270  00F352  0101               	movlb	1	; () banked
 38271  00F354  5192               	movf	(_os+33)& (0+255),w,b	;volatile
 38272  00F356  6EDF               	movwf	indf2,c
 38273                           
 38274                           ;api.c: 313: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 38275  00F358  0100               	movlb	0	; () banked
 38276  00F35A  EE20 F008          	lfsr	2,8
 38277  00F35E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38278  00F360  26D9               	addwf	fsr2l,f,c
 38279  00F362  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38280  00F364  22DA               	addwfc	fsr2h,f,c
 38281  00F366  C191  FFDF         	movff	_os+32,indf2	;volatile
 38282                           
 38283                           ; BSR set to: 0
 38284                           ;api.c: 317: break;
 38285                           
 38286                           ;api.c: 316: case DISPLAY_STATE_ZERO:
 38287                           
 38288                           ;api.c: 314: break;
 38289  00F36A  0012               	return	
 38290  00F36C                     
 38291                           ; BSR set to: 0
 38292                           ;api.c: 320: outBuffer[4] = os.manual_direction;
 38293                           
 38294                           ; BSR set to: 0
 38295  00F36C  EE20 F004          	lfsr	2,4
 38296  00F370  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38297  00F372  26D9               	addwf	fsr2l,f,c
 38298  00F374  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38299  00F376  22DA               	addwfc	fsr2h,f,c
 38300  00F378  C196  FFDF         	movff	_os+37,indf2	;volatile
 38301                           
 38302                           ;api.c: 321: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 38303  00F37C  EE20 F005          	lfsr	2,5
 38304  00F380  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38305  00F382  26D9               	addwf	fsr2l,f,c
 38306  00F384  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38307  00F386  22DA               	addwfc	fsr2h,f,c
 38308  00F388  0101               	movlb	1	; () banked
 38309  00F38A  5195               	movf	(_os+36)& (0+255),w,b	;volatile
 38310  00F38C  6EDF               	movwf	indf2,c
 38311                           
 38312                           ;api.c: 322: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 38313  00F38E  0100               	movlb	0	; () banked
 38314  00F390  EE20 F006          	lfsr	2,6
 38315  00F394  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 38316  00F396  26D9               	addwf	fsr2l,f,c
 38317  00F398  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 38318  00F39A  22DA               	addwfc	fsr2h,f,c
 38319  00F39C  C194  FFDF         	movff	_os+35,indf2	;volatile
 38320                           
 38321                           ; BSR set to: 0
 38322                           ;api.c: 324: }
 38323                           
 38324                           ;api.c: 323: break;
 38325  00F3A0  0012               	return	
 38326  00F3A2                     l2284:
 38327                           
 38328                           ; BSR set to: 0
 38329                           
 38330                           ; BSR set to: 0
 38331  00F3A2  0101               	movlb	1	; () banked
 38332  00F3A4  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 38333  00F3A6  0B0F               	andlw	15
 38334  00F3A8  0100               	movlb	0	; () banked
 38335  00F3AA  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 38336  00F3AC  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 38337                           
 38338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38339                           ; Switch size 1, requested type "space"
 38340                           ; Number of cases is 1, Range of values is 0 to 0
 38341                           ; switch strategies available:
 38342                           ; Name         Instructions Cycles
 38343                           ; simple_byte            4     3 (average)
 38344                           ;	Chosen strategy is simple_byte
 38345  00F3AE  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 38346  00F3B0  0A00               	xorlw	0	; case 0
 38347  00F3B2  A4D8               	btfss	status,2,c
 38348  00F3B4  0012               	return	
 38349                           
 38350                           ; BSR set to: 0
 38351                           ; Switch size 1, requested type "space"
 38352                           ; Number of cases is 9, Range of values is 0 to 128
 38353                           ; switch strategies available:
 38354                           ; Name         Instructions Cycles
 38355                           ; simple_byte           28    15 (average)
 38356                           ;	Chosen strategy is simple_byte
 38357  00F3B6  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 38358  00F3B8  0A00               	xorlw	0	; case 0
 38359  00F3BA  B4D8               	btfsc	status,2,c
 38360  00F3BC  0012               	return	
 38361  00F3BE  0A10               	xorlw	16	; case 16
 38362  00F3C0  B4D8               	btfsc	status,2,c
 38363  00F3C2  D75F               	goto	l2287
 38364  00F3C4  0A30               	xorlw	48	; case 32
 38365  00F3C6  B4D8               	btfsc	status,2,c
 38366  00F3C8  D75C               	goto	l2287
 38367  00F3CA  0A10               	xorlw	16	; case 48
 38368  00F3CC  B4D8               	btfsc	status,2,c
 38369  00F3CE  D762               	goto	l2289
 38370  00F3D0  0A70               	xorlw	112	; case 64
 38371  00F3D2  B4D8               	btfsc	status,2,c
 38372  00F3D4  D75F               	goto	l2289
 38373  00F3D6  0A10               	xorlw	16	; case 80
 38374  00F3D8  B4D8               	btfsc	status,2,c
 38375  00F3DA  D79B               	goto	l2291
 38376  00F3DC  0A30               	xorlw	48	; case 96
 38377  00F3DE  B4D8               	btfsc	status,2,c
 38378  00F3E0  D798               	goto	l2291
 38379  00F3E2  0A10               	xorlw	16	; case 112
 38380  00F3E4  B4D8               	btfsc	status,2,c
 38381  00F3E6  0012               	return	
 38382  00F3E8  0AF0               	xorlw	240	; case 128
 38383  00F3EA  A4D8               	btfss	status,2,c
 38384  00F3EC  0012               	return	
 38385  00F3EE  D7BE               	goto	l2294
 38386  00F3F0                     __end_of__fill_buffer_get_mode_details:
 38387                           	opt stack 0
 38388                           tosu	equ	0xFFF
 38389                           tosh	equ	0xFFE
 38390                           tosl	equ	0xFFD
 38391                           pclath	equ	0xFFA
 38392                           tblptru	equ	0xFF8
 38393                           tblptrh	equ	0xFF7
 38394                           tblptrl	equ	0xFF6
 38395                           tablat	equ	0xFF5
 38396                           prodh	equ	0xFF4
 38397                           prodl	equ	0xFF3
 38398                           intcon	equ	0xFF2
 38399                           indf0	equ	0xFEF
 38400                           postinc0	equ	0xFEE
 38401                           fsr0h	equ	0xFEA
 38402                           fsr0l	equ	0xFE9
 38403                           wreg	equ	0xFE8
 38404                           indf1	equ	0xFE7
 38405                           postinc1	equ	0xFE6
 38406                           postdec1	equ	0xFE5
 38407                           plusw1	equ	0xFE3
 38408                           fsr1h	equ	0xFE2
 38409                           fsr1l	equ	0xFE1
 38410                           indf2	equ	0xFDF
 38411                           postinc2	equ	0xFDE
 38412                           postdec2	equ	0xFDD
 38413                           plusw2	equ	0xFDB
 38414                           fsr2h	equ	0xFDA
 38415                           fsr2l	equ	0xFD9
 38416                           status	equ	0xFD8
 38417                           
 38418 ;; *************** function __fill_buffer_get_display *****************
 38419 ;; Defined at:
 38420 ;;		line 232 in file "api.c"
 38421 ;; Parameters:    Size  Location     Type
 38422 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 38423 ;;		 -> ToSendDataBuffer(64), 
 38424 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 38425 ;; Auto vars:     Size  Location     Type
 38426 ;;  position        1   15[BANK0 ] unsigned char 
 38427 ;;  start_line      1   14[BANK0 ] unsigned char 
 38428 ;;  line            1   13[BANK0 ] unsigned char 
 38429 ;;  cntr            1   12[BANK0 ] unsigned char 
 38430 ;; Return value:  Size  Location     Type
 38431 ;;                  1    wreg      void 
 38432 ;; Registers used:
 38433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38434 ;; Tracked objects:
 38435 ;;		On entry : 0/0
 38436 ;;		On exit  : 0/0
 38437 ;;		Unchanged: 0/0
 38438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38439 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38440 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38441 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38442 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38443 ;;Total ram usage:       12 bytes
 38444 ;; Hardware stack levels used:    1
 38445 ;; Hardware stack levels required when called:   11
 38446 ;; This function calls:
 38447 ;;		_display_get_character
 38448 ;; This function is called by:
 38449 ;;		_api_prepare
 38450 ;; This function uses a non-reentrant model
 38451 ;;
 38452                           
 38453                           	psect	text159
 38454  0129D0                     __ptext159:
 38455                           	opt stack 0
 38456  0129D0                     __fill_buffer_get_display:
 38457                           	opt stack 17
 38458                           
 38459                           ;api.c: 234: uint8_t cntr;;api.c: 235: uint8_t line;;api.c: 236: uint8_t start_line;;api
      +                          .c: 237: uint8_t position;;api.c: 240: if(secondHalf)
 38460                           
 38461                           ; BSR set to: 0
 38462                           ;incstack = 0
 38463  0129D0  0100               	movlb	0	; () banked
 38464  0129D2  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 38465  0129D4  B4D8               	btfsc	status,2,c
 38466  0129D6  D006               	goto	l2272
 38467                           
 38468                           ; BSR set to: 0
 38469                           ;api.c: 241: {;api.c: 242: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 38470  0129D8  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 38471  0129DC  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 38472  0129E0  0E12               	movlw	18
 38473  0129E2  D005               	goto	L61
 38474  0129E4                     l2272:
 38475                           
 38476                           ; BSR set to: 0
 38477                           ;api.c: 244: else;api.c: 245: {;api.c: 246: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 38478                           
 38479                           ; BSR set to: 0
 38480  0129E4  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 38481  0129E8  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 38482  0129EC  0E11               	movlw	17
 38483  0129EE                     L61:
 38484  0129EE  6EDF               	movwf	indf2,c
 38485                           
 38486                           ; BSR set to: 0
 38487                           ;api.c: 247: };api.c: 250: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 38488                           
 38489                           ; BSR set to: 0
 38490  0129F0  EE20 F001          	lfsr	2,1
 38491  0129F4  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 38492  0129F6  26D9               	addwf	fsr2l,f,c
 38493  0129F8  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 38494  0129FA  22DA               	addwfc	fsr2h,f,c
 38495  0129FC  0EBC               	movlw	188
 38496  0129FE  6EDF               	movwf	indf2,c
 38497                           
 38498                           ; BSR set to: 0
 38499                           ;api.c: 251: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 38500  012A00  EE20 F002          	lfsr	2,2
 38501  012A04  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 38502  012A06  26D9               	addwf	fsr2l,f,c
 38503  012A08  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 38504  012A0A  22DA               	addwfc	fsr2h,f,c
 38505  012A0C  0E26               	movlw	38
 38506  012A0E  6EDF               	movwf	indf2,c
 38507                           
 38508                           ; BSR set to: 0
 38509                           ;api.c: 254: cntr = 3;
 38510  012A10  0E03               	movlw	3
 38511  012A12  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 38512                           
 38513                           ; BSR set to: 0
 38514                           ;api.c: 255: if(secondHalf)
 38515  012A14  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 38516  012A16  B4D8               	btfsc	status,2,c
 38517  012A18  D002               	goto	l2274
 38518                           
 38519                           ; BSR set to: 0
 38520                           ;api.c: 256: {;api.c: 257: start_line = 2;
 38521  012A1A  0E02               	movlw	2
 38522  012A1C  D001               	goto	L62
 38523  012A1E                     l2274:
 38524                           
 38525                           ; BSR set to: 0
 38526                           ;api.c: 259: else;api.c: 260: {;api.c: 261: start_line = 0;
 38527                           
 38528                           ; BSR set to: 0
 38529  012A1E  0E00               	movlw	0
 38530  012A20                     L62:
 38531  012A20  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 38532                           
 38533                           ; BSR set to: 0
 38534                           ;api.c: 262: };api.c: 263: for(line=start_line; line<start_line+2; ++line)
 38535                           
 38536                           ; BSR set to: 0
 38537  012A22  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 38538  012A26  D01B               	goto	l2276
 38539  012A28                     
 38540                           ; BSR set to: 0
 38541                           ;api.c: 264: {;api.c: 265: for(position=0; position<20; ++position)
 38542                           
 38543                           ; BSR set to: 0
 38544  012A28  0E00               	movlw	0
 38545  012A2A  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 38546  012A2C                     l15708:
 38547                           
 38548                           ; BSR set to: 0
 38549  012A2C  0E13               	movlw	19
 38550  012A2E  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 38551  012A30  D001               	goto	l2278
 38552  012A32  D014               	goto	u14680
 38553  012A34                     l2278:
 38554                           
 38555                           ; BSR set to: 0
 38556                           ;api.c: 266: {;api.c: 267: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 38557                           
 38558                           ; BSR set to: 0
 38559  012A34  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 38560  012A38  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 38561  012A3A  ECE1  F0A8         	call	_display_get_character
 38562  012A3E  0100               	movlb	0	; () banked
 38563  012A40  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 38564  012A42  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 38565  012A44  0D01               	mullw	1
 38566  012A46  50F3               	movf	prodl,w,c
 38567  012A48  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 38568  012A4A  6ED9               	movwf	fsr2l,c
 38569  012A4C  50F4               	movf	prodh,w,c
 38570  012A4E  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 38571  012A50  6EDA               	movwf	fsr2h,c
 38572  012A52  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 38573                           
 38574                           ; BSR set to: 0
 38575                           ;api.c: 268: ++cntr;
 38576  012A56  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 38577                           
 38578                           ; BSR set to: 0
 38579  012A58  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 38580  012A5A  D7E8               	goto	l15708
 38581  012A5C                     u14680:
 38582                           
 38583                           ; BSR set to: 0
 38584                           
 38585                           ; BSR set to: 0
 38586  012A5C  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 38587  012A5E                     l2276:
 38588                           
 38589                           ; BSR set to: 0
 38590                           
 38591                           ; BSR set to: 0
 38592  012A5E  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 38593  012A60  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 38594  012A62  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 38595  012A64  0E02               	movlw	2
 38596  012A66  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 38597  012A68  0E00               	movlw	0
 38598  012A6A  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 38599  012A6C  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 38600  012A6E  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 38601  012A70  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 38602  012A72  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 38603  012A74  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 38604  012A76  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 38605  012A78  0A80               	xorlw	128
 38606  012A7A  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 38607  012A7C  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 38608  012A7E  0A80               	xorlw	128
 38609  012A80  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 38610  012A82  B0D8               	btfsc	status,0,c
 38611  012A84  0012               	return	
 38612  012A86  D7D0               	goto	l2277
 38613  012A88                     __end_of__fill_buffer_get_display:
 38614                           	opt stack 0
 38615                           tosu	equ	0xFFF
 38616                           tosh	equ	0xFFE
 38617                           tosl	equ	0xFFD
 38618                           pclath	equ	0xFFA
 38619                           tblptru	equ	0xFF8
 38620                           tblptrh	equ	0xFF7
 38621                           tblptrl	equ	0xFF6
 38622                           tablat	equ	0xFF5
 38623                           prodh	equ	0xFF4
 38624                           prodl	equ	0xFF3
 38625                           intcon	equ	0xFF2
 38626                           indf0	equ	0xFEF
 38627                           postinc0	equ	0xFEE
 38628                           fsr0h	equ	0xFEA
 38629                           fsr0l	equ	0xFE9
 38630                           wreg	equ	0xFE8
 38631                           indf1	equ	0xFE7
 38632                           postinc1	equ	0xFE6
 38633                           postdec1	equ	0xFE5
 38634                           plusw1	equ	0xFE3
 38635                           fsr1h	equ	0xFE2
 38636                           fsr1l	equ	0xFE1
 38637                           indf2	equ	0xFDF
 38638                           postinc2	equ	0xFDE
 38639                           postdec2	equ	0xFDD
 38640                           plusw2	equ	0xFDB
 38641                           fsr2h	equ	0xFDA
 38642                           fsr2l	equ	0xFD9
 38643                           status	equ	0xFD8
 38644                           
 38645 ;; *************** function _display_get_character *****************
 38646 ;; Defined at:
 38647 ;;		line 628 in file "display.c"
 38648 ;; Parameters:    Size  Location     Type
 38649 ;;  line            1    wreg     unsigned char 
 38650 ;;  position        1    0[BANK0 ] unsigned char 
 38651 ;; Auto vars:     Size  Location     Type
 38652 ;;  line            1    3[BANK0 ] unsigned char 
 38653 ;; Return value:  Size  Location     Type
 38654 ;;                  1    wreg      unsigned char 
 38655 ;; Registers used:
 38656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38657 ;; Tracked objects:
 38658 ;;		On entry : 0/0
 38659 ;;		On exit  : 0/0
 38660 ;;		Unchanged: 0/0
 38661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38662 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38664 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38665 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38666 ;;Total ram usage:        4 bytes
 38667 ;; Hardware stack levels used:    1
 38668 ;; Hardware stack levels required when called:   10
 38669 ;; This function calls:
 38670 ;;		Nothing
 38671 ;; This function is called by:
 38672 ;;		__fill_buffer_get_display
 38673 ;; This function uses a non-reentrant model
 38674 ;;
 38675                           
 38676                           	psect	text160
 38677  0151C2                     __ptext160:
 38678                           	opt stack 0
 38679  0151C2                     _display_get_character:
 38680                           	opt stack 17
 38681                           
 38682                           ; BSR set to: 0
 38683                           ;incstack = 0
 38684                           ;display_get_character@line stored from wreg
 38685  0151C2  0100               	movlb	0	; () banked
 38686  0151C4  6F63               	movwf	display_get_character@line& (0+255),b
 38687                           
 38688                           ;display.c: 630: return display_content[line][position];
 38689  0151C6  0100               	movlb	0	; () banked
 38690  0151C8  5163               	movf	display_get_character@line& (0+255),w,b
 38691  0151CA  0D14               	mullw	20
 38692  0151CC  0E34               	movlw	low _display_content
 38693  0151CE  6F61               	movwf	??_display_get_character& (0+255),b
 38694  0151D0  0E02               	movlw	high _display_content
 38695  0151D2  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 38696  0151D4  50F3               	movf	prodl,w,c
 38697  0151D6  2761               	addwf	??_display_get_character& (0+255),f,b
 38698  0151D8  50F4               	movf	prodh,w,c
 38699  0151DA  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 38700  0151DC  5160               	movf	display_get_character@position& (0+255),w,b
 38701  0151DE  0D01               	mullw	1
 38702  0151E0  50F3               	movf	prodl,w,c
 38703  0151E2  2561               	addwf	??_display_get_character& (0+255),w,b
 38704  0151E4  6ED9               	movwf	fsr2l,c
 38705  0151E6  50F4               	movf	prodh,w,c
 38706  0151E8  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 38707  0151EA  6EDA               	movwf	fsr2h,c
 38708  0151EC  50DF               	movf	indf2,w,c
 38709  0151EE  0012               	return	
 38710  0151F0                     __end_of_display_get_character:
 38711                           	opt stack 0
 38712                           tosu	equ	0xFFF
 38713                           tosh	equ	0xFFE
 38714                           tosl	equ	0xFFD
 38715                           pclath	equ	0xFFA
 38716                           tblptru	equ	0xFF8
 38717                           tblptrh	equ	0xFF7
 38718                           tblptrl	equ	0xFF6
 38719                           tablat	equ	0xFF5
 38720                           prodh	equ	0xFF4
 38721                           prodl	equ	0xFF3
 38722                           intcon	equ	0xFF2
 38723                           indf0	equ	0xFEF
 38724                           postinc0	equ	0xFEE
 38725                           fsr0h	equ	0xFEA
 38726                           fsr0l	equ	0xFE9
 38727                           wreg	equ	0xFE8
 38728                           indf1	equ	0xFE7
 38729                           postinc1	equ	0xFE6
 38730                           postdec1	equ	0xFE5
 38731                           plusw1	equ	0xFE3
 38732                           fsr1h	equ	0xFE2
 38733                           fsr1l	equ	0xFE1
 38734                           indf2	equ	0xFDF
 38735                           postinc2	equ	0xFDE
 38736                           postdec2	equ	0xFDD
 38737                           plusw2	equ	0xFDB
 38738                           fsr2h	equ	0xFDA
 38739                           fsr2l	equ	0xFD9
 38740                           status	equ	0xFD8
 38741                           
 38742 ;; *************** function _api_parse *****************
 38743 ;; Defined at:
 38744 ;;		line 94 in file "api.c"
 38745 ;; Parameters:    Size  Location     Type
 38746 ;;  inBuffer        2  102[BANK0 ] PTR unsigned char 
 38747 ;;		 -> ReceivedDataBuffer(64), 
 38748 ;;  receivedData    1  104[BANK0 ] unsigned char 
 38749 ;;  outBuffer       2  105[BANK0 ] PTR unsigned char 
 38750 ;;		 -> ToSendDataBuffer(64), 
 38751 ;; Auto vars:     Size  Location     Type
 38752 ;;  out_idx_ptr     2  109[BANK0 ] PTR unsigned char 
 38753 ;;		 -> api_parse@out_idx(1), 
 38754 ;;  in_idx          1  112[BANK0 ] unsigned char 
 38755 ;;  out_idx         1  111[BANK0 ] unsigned char 
 38756 ;; Return value:  Size  Location     Type
 38757 ;;                  1    wreg      void 
 38758 ;; Registers used:
 38759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38760 ;; Tracked objects:
 38761 ;;		On entry : 0/0
 38762 ;;		On exit  : 0/0
 38763 ;;		Unchanged: 0/0
 38764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38765 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38766 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38767 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38768 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38769 ;;Total ram usage:       11 bytes
 38770 ;; Hardware stack levels used:    1
 38771 ;; Hardware stack levels required when called:   16
 38772 ;; This function calls:
 38773 ;;		__parse_command_long
 38774 ;;		__parse_command_short
 38775 ;; This function is called by:
 38776 ;;		_APP_DeviceCustomHIDTasks
 38777 ;; This function uses a non-reentrant model
 38778 ;;
 38779                           
 38780                           	psect	text161
 38781  01052E                     __ptext161:
 38782                           	opt stack 0
 38783  01052E                     _api_parse:
 38784                           	opt stack 13
 38785                           
 38786                           ;api.c: 98: uint8_t in_idx;;api.c: 99: uint8_t out_idx;;api.c: 100: uint8_t *out_idx_ptr
      +                          ;;api.c: 102: out_idx = 0;
 38787                           
 38788                           ; BSR set to: 0
 38789                           ;incstack = 0
 38790  01052E  0E00               	movlw	0
 38791  010530  0100               	movlb	0	; () banked
 38792  010532  6FCF               	movwf	api_parse@out_idx& (0+255),b
 38793                           
 38794                           ; BSR set to: 0
 38795                           ;api.c: 103: out_idx_ptr = &out_idx;
 38796  010534  0ECF               	movlw	low api_parse@out_idx
 38797  010536  6FCD               	movwf	api_parse@out_idx_ptr& (0+255),b
 38798  010538  0E00               	movlw	high api_parse@out_idx
 38799  01053A  6FCE               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 38800                           
 38801                           ; BSR set to: 0
 38802                           ;api.c: 105: if(inBuffer[0]>0x7F)
 38803  01053C  C0C6  FFD9         	movff	api_parse@inBuffer,fsr2l
 38804  010540  C0C7  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 38805  010544  0E7F               	movlw	127
 38806  010546  64DF               	cpfsgt	indf2,c
 38807  010548  D001               	goto	l2253
 38808  01054A  0012               	return	
 38809  01054C                     l2253:
 38810                           
 38811                           ; BSR set to: 0
 38812                           ;api.c: 110: };api.c: 112: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 38813                           
 38814                           ; BSR set to: 0
 38815  01054C  C0C6  FFD9         	movff	api_parse@inBuffer,fsr2l
 38816  010550  C0C7  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 38817  010554  0E20               	movlw	32
 38818  010556  18DE               	xorwf	postinc2,w,c
 38819  010558  B4D8               	btfsc	status,2,c
 38820  01055A  0012               	return	
 38821                           
 38822                           ; BSR set to: 0
 38823                           ;api.c: 117: };api.c: 119: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 38824                           
 38825                           ; BSR set to: 0
 38826                           
 38827                           ; BSR set to: 0
 38828                           ;api.c: 113: {;api.c: 116: return;
 38829  01055C  C0C6  FFD9         	movff	api_parse@inBuffer,fsr2l
 38830  010560  C0C7  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 38831  010564  50DF               	movf	indf2,w,c
 38832  010566  A4D8               	btfss	status,2,c
 38833  010568  D018               	goto	l2256
 38834                           
 38835                           ; BSR set to: 0
 38836                           ;api.c: 120: {;api.c: 122: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 38837  01056A  C0C9  FFD9         	movff	api_parse@outBuffer,fsr2l
 38838  01056E  C0CA  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 38839  010572  0E00               	movlw	0
 38840  010574  6EDF               	movwf	indf2,c
 38841                           
 38842                           ; BSR set to: 0
 38843                           ;api.c: 125: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 38844  010576  EE20 F001          	lfsr	2,1
 38845  01057A  51C9               	movf	api_parse@outBuffer& (0+255),w,b
 38846  01057C  26D9               	addwf	fsr2l,f,c
 38847  01057E  51CA               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 38848  010580  22DA               	addwfc	fsr2h,f,c
 38849  010582  0EBC               	movlw	188
 38850  010584  6EDF               	movwf	indf2,c
 38851                           
 38852                           ; BSR set to: 0
 38853                           ;api.c: 126: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 38854  010586  EE20 F002          	lfsr	2,2
 38855  01058A  51C9               	movf	api_parse@outBuffer& (0+255),w,b
 38856  01058C  26D9               	addwf	fsr2l,f,c
 38857  01058E  51CA               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 38858  010590  22DA               	addwfc	fsr2h,f,c
 38859  010592  0E26               	movlw	38
 38860  010594  6EDF               	movwf	indf2,c
 38861                           
 38862                           ; BSR set to: 0
 38863                           ;api.c: 129: out_idx = 3;
 38864  010596  0E03               	movlw	3
 38865  010598  6FCF               	movwf	api_parse@out_idx& (0+255),b
 38866  01059A                     l2256:
 38867                           
 38868                           ; BSR set to: 0
 38869                           ;api.c: 130: };api.c: 132: in_idx = 1;
 38870                           
 38871                           ; BSR set to: 0
 38872  01059A  0E01               	movlw	1
 38873  01059C  6FD0               	movwf	api_parse@in_idx& (0+255),b
 38874                           
 38875                           ;api.c: 133: while(in_idx<receivedDataLength)
 38876  01059E  D057               	goto	l2262
 38877  0105A0                     
 38878                           ; BSR set to: 0
 38879                           ;api.c: 134: {;api.c: 136: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 38880                           
 38881                           ; BSR set to: 0
 38882  0105A0  51D0               	movf	api_parse@in_idx& (0+255),w,b
 38883  0105A2  0D01               	mullw	1
 38884  0105A4  50F3               	movf	prodl,w,c
 38885  0105A6  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 38886  0105A8  6ED9               	movwf	fsr2l,c
 38887  0105AA  50F4               	movf	prodh,w,c
 38888  0105AC  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 38889  0105AE  6EDA               	movwf	fsr2h,c
 38890  0105B0  0E99               	movlw	153
 38891  0105B2  18DE               	xorwf	postinc2,w,c
 38892  0105B4  B4D8               	btfsc	status,2,c
 38893  0105B6  0012               	return	
 38894  0105B8  D02F               	goto	l2260
 38895  0105BA                     
 38896                           ; BSR set to: 0
 38897                           ;api.c: 144: _parse_command_short(inBuffer[in_idx]);
 38898                           
 38899                           ; BSR set to: 0
 38900  0105BA  51D0               	movf	api_parse@in_idx& (0+255),w,b
 38901  0105BC  0D01               	mullw	1
 38902  0105BE  50F3               	movf	prodl,w,c
 38903  0105C0  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 38904  0105C2  6ED9               	movwf	fsr2l,c
 38905  0105C4  50F4               	movf	prodh,w,c
 38906  0105C6  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 38907  0105C8  6EDA               	movwf	fsr2h,c
 38908  0105CA  50DF               	movf	indf2,w,c
 38909  0105CC  EC8F  F07B         	call	__parse_command_short
 38910  0105D0  D00B               	goto	l16574
 38911  0105D2                     
 38912                           ; BSR set to: 0
 38913                           ;api.c: 149: _parse_command_short(inBuffer[in_idx]);
 38914                           
 38915                           ; BSR set to: 0
 38916  0105D2  51D0               	movf	api_parse@in_idx& (0+255),w,b
 38917  0105D4  0D01               	mullw	1
 38918  0105D6  50F3               	movf	prodl,w,c
 38919  0105D8  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 38920  0105DA  6ED9               	movwf	fsr2l,c
 38921  0105DC  50F4               	movf	prodh,w,c
 38922  0105DE  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 38923  0105E0  6EDA               	movwf	fsr2h,c
 38924  0105E2  50DF               	movf	indf2,w,c
 38925  0105E4  EC8F  F07B         	call	__parse_command_short
 38926  0105E8                     l16574:
 38927                           
 38928                           ;api.c: 150: ++in_idx;
 38929  0105E8  0100               	movlb	0	; () banked
 38930  0105EA  2BD0               	incf	api_parse@in_idx& (0+255),f,b
 38931                           
 38932                           ;api.c: 151: break;
 38933  0105EC  D030               	goto	l2262
 38934  0105EE                     
 38935                           ; BSR set to: 0
 38936                           ;api.c: 154: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 38937                           
 38938                           ; BSR set to: 0
 38939  0105EE  51D0               	movf	api_parse@in_idx& (0+255),w,b
 38940  0105F0  0D01               	mullw	1
 38941  0105F2  50F3               	movf	prodl,w,c
 38942  0105F4  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 38943  0105F6  6FB5               	movwf	__parse_command_long@data& (0+255),b
 38944  0105F8  50F4               	movf	prodh,w,c
 38945  0105FA  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 38946  0105FC  6FB6               	movwf	(__parse_command_long@data+1)& (0+255),b
 38947  0105FE  C0C9  F0B7         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 38948  010602  C0CA  F0B8         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 38949  010606  C0CD  F0B9         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 38950  01060A  C0CE  F0BA         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 38951  01060E  EC6D  F0A0         	call	__parse_command_long	;wreg free
 38952  010612  0100               	movlb	0	; () banked
 38953  010614  27D0               	addwf	api_parse@in_idx& (0+255),f,b
 38954                           
 38955                           ;api.c: 155: break;
 38956  010616  D01B               	goto	l2262
 38957  010618                     l2260:
 38958                           
 38959                           ; BSR set to: 0
 38960                           
 38961                           ; BSR set to: 0
 38962  010618  51D0               	movf	api_parse@in_idx& (0+255),w,b
 38963  01061A  0D01               	mullw	1
 38964  01061C  50F3               	movf	prodl,w,c
 38965  01061E  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 38966  010620  6ED9               	movwf	fsr2l,c
 38967  010622  50F4               	movf	prodh,w,c
 38968  010624  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 38969  010626  6EDA               	movwf	fsr2h,c
 38970  010628  50DF               	movf	indf2,w,c
 38971  01062A  0BF0               	andlw	240
 38972  01062C  6FCB               	movwf	??_api_parse& (0+255),b
 38973  01062E  6BCC               	clrf	(??_api_parse+1)& (0+255),b
 38974                           
 38975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38976                           ; Switch size 1, requested type "space"
 38977                           ; Number of cases is 1, Range of values is 0 to 0
 38978                           ; switch strategies available:
 38979                           ; Name         Instructions Cycles
 38980                           ; simple_byte            4     3 (average)
 38981                           ;	Chosen strategy is simple_byte
 38982  010630  51CC               	movf	(??_api_parse+1)& (0+255),w,b
 38983  010632  0A00               	xorlw	0	; case 0
 38984  010634  A4D8               	btfss	status,2,c
 38985  010636  0012               	return	
 38986                           
 38987                           ; BSR set to: 0
 38988                           ; Switch size 1, requested type "space"
 38989                           ; Number of cases is 3, Range of values is 32 to 144
 38990                           ; switch strategies available:
 38991                           ; Name         Instructions Cycles
 38992                           ; simple_byte           10     6 (average)
 38993                           ;	Chosen strategy is simple_byte
 38994  010638  51CB               	movf	??_api_parse& (0+255),w,b
 38995  01063A  0A20               	xorlw	32	; case 32
 38996  01063C  B4D8               	btfsc	status,2,c
 38997  01063E  D7BD               	goto	l2261
 38998  010640  0A10               	xorlw	16	; case 48
 38999  010642  B4D8               	btfsc	status,2,c
 39000  010644  D7C6               	goto	l2263
 39001  010646  0AA0               	xorlw	160	; case 144
 39002  010648  A4D8               	btfss	status,2,c
 39003  01064A  0012               	return	
 39004  01064C  D7D0               	goto	l2264
 39005  01064E                     l2262:
 39006                           
 39007                           ; BSR set to: 0
 39008                           
 39009                           ; BSR set to: 0
 39010                           
 39011                           ; BSR set to: 0
 39012  01064E  51C8               	movf	api_parse@receivedDataLength& (0+255),w,b
 39013  010650  5DD0               	subwf	api_parse@in_idx& (0+255),w,b
 39014  010652  B0D8               	btfsc	status,0,c
 39015  010654  0012               	return	
 39016  010656  D7A4               	goto	l2258
 39017  010658                     __end_of_api_parse:
 39018                           	opt stack 0
 39019                           tosu	equ	0xFFF
 39020                           tosh	equ	0xFFE
 39021                           tosl	equ	0xFFD
 39022                           pclath	equ	0xFFA
 39023                           tblptru	equ	0xFF8
 39024                           tblptrh	equ	0xFF7
 39025                           tblptrl	equ	0xFF6
 39026                           tablat	equ	0xFF5
 39027                           prodh	equ	0xFF4
 39028                           prodl	equ	0xFF3
 39029                           intcon	equ	0xFF2
 39030                           indf0	equ	0xFEF
 39031                           postinc0	equ	0xFEE
 39032                           fsr0h	equ	0xFEA
 39033                           fsr0l	equ	0xFE9
 39034                           wreg	equ	0xFE8
 39035                           indf1	equ	0xFE7
 39036                           postinc1	equ	0xFE6
 39037                           postdec1	equ	0xFE5
 39038                           plusw1	equ	0xFE3
 39039                           fsr1h	equ	0xFE2
 39040                           fsr1l	equ	0xFE1
 39041                           indf2	equ	0xFDF
 39042                           postinc2	equ	0xFDE
 39043                           postdec2	equ	0xFDD
 39044                           plusw2	equ	0xFDB
 39045                           fsr2h	equ	0xFDA
 39046                           fsr2l	equ	0xFD9
 39047                           status	equ	0xFD8
 39048                           
 39049 ;; *************** function __parse_command_short *****************
 39050 ;; Defined at:
 39051 ;;		line 327 in file "api.c"
 39052 ;; Parameters:    Size  Location     Type
 39053 ;;  cmd             1    wreg     unsigned char 
 39054 ;; Auto vars:     Size  Location     Type
 39055 ;;  cmd             1  101[BANK0 ] unsigned char 
 39056 ;; Return value:  Size  Location     Type
 39057 ;;                  1    wreg      void 
 39058 ;; Registers used:
 39059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39060 ;; Tracked objects:
 39061 ;;		On entry : 0/0
 39062 ;;		On exit  : 0/0
 39063 ;;		Unchanged: 0/0
 39064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39066 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39068 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39069 ;;Total ram usage:        1 bytes
 39070 ;; Hardware stack levels used:    1
 39071 ;; Hardware stack levels required when called:   15
 39072 ;; This function calls:
 39073 ;;		_motor_clear_command_cue
 39074 ;;		_motor_go_to_steps_position
 39075 ;;		_motor_schedule_command
 39076 ;;		_motor_set_zero
 39077 ;;		_motor_stop
 39078 ;; This function is called by:
 39079 ;;		_api_parse
 39080 ;; This function uses a non-reentrant model
 39081 ;;
 39082                           
 39083                           	psect	text162
 39084  00F71E                     __ptext162:
 39085                           	opt stack 0
 39086  00F71E                     __parse_command_short:
 39087                           	opt stack 13
 39088                           
 39089                           ; BSR set to: 0
 39090                           ;incstack = 0
 39091                           ;__parse_command_short@cmd stored from wreg
 39092  00F71E  0100               	movlb	0	; () banked
 39093  00F720  6FC5               	movwf	__parse_command_short@cmd& (0+255),b
 39094                           
 39095                           ;api.c: 329: switch(cmd)
 39096  00F722  D082               	goto	l2298
 39097  00F724                     
 39098                           ;api.c: 347: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 39099  00F724  0E01               	movlw	1
 39100  00F726  0101               	movlb	1	; () banked
 39101  00F728  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39102                           
 39103                           ;api.c: 348: break;
 39104  00F72A  0012               	return	
 39105  00F72C                     
 39106                           ;api.c: 351: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 39107                           
 39108                           ; BSR set to: 1
 39109  00F72C  0E11               	movlw	17
 39110  00F72E  0101               	movlb	1	; () banked
 39111  00F730  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39112                           
 39113                           ;api.c: 352: break;
 39114  00F732  0012               	return	
 39115  00F734                     
 39116                           ;api.c: 355: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 39117                           
 39118                           ; BSR set to: 1
 39119  00F734  0E31               	movlw	49
 39120  00F736  0101               	movlb	1	; () banked
 39121  00F738  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39122                           
 39123                           ;api.c: 356: break;
 39124  00F73A  0012               	return	
 39125  00F73C                     
 39126                           ;api.c: 359: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 39127                           
 39128                           ; BSR set to: 1
 39129  00F73C  0E51               	movlw	81
 39130  00F73E  0101               	movlb	1	; () banked
 39131  00F740  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39132                           
 39133                           ;api.c: 360: break;
 39134  00F742  0012               	return	
 39135  00F744                     
 39136                           ;api.c: 363: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 39137                           
 39138                           ; BSR set to: 1
 39139  00F744  0E82               	movlw	130
 39140  00F746  0101               	movlb	1	; () banked
 39141  00F748  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39142                           
 39143                           ;api.c: 364: break;
 39144  00F74A  0012               	return	
 39145  00F74C                     
 39146                           ;api.c: 367: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 39147                           
 39148                           ; BSR set to: 1
 39149  00F74C  0E71               	movlw	113
 39150  00F74E  0101               	movlb	1	; () banked
 39151  00F750  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39152                           
 39153                           ;api.c: 368: break;
 39154  00F752  0012               	return	
 39155  00F754                     
 39156                           ;api.c: 371: motor_set_zero(MOTOR_DIRECTION_CCW);
 39157                           
 39158                           ; BSR set to: 1
 39159  00F754  0EFF               	movlw	255
 39160  00F756  EC8B  F094         	call	_motor_set_zero
 39161                           
 39162                           ;api.c: 372: break;
 39163  00F75A  0012               	return	
 39164  00F75C                     
 39165                           ;api.c: 375: motor_set_zero(MOTOR_DIRECTION_CW);
 39166  00F75C  0E01               	movlw	1
 39167  00F75E  EC8B  F094         	call	_motor_set_zero
 39168                           
 39169                           ;api.c: 376: break;
 39170  00F762  0012               	return	
 39171  00F764                     
 39172                           ;api.c: 379: motor_go_to_steps_position(0);
 39173  00F764  0E00               	movlw	0
 39174  00F766  0100               	movlb	0	; () banked
 39175  00F768  6FA9               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 39176  00F76A  0E00               	movlw	0
 39177  00F76C  6FAA               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 39178  00F76E  0E00               	movlw	0
 39179  00F770  6FAB               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 39180  00F772  0E00               	movlw	0
 39181  00F774  6FAC               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 39182  00F776  EC7F  F069         	call	_motor_go_to_steps_position	;wreg free
 39183                           
 39184                           ;api.c: 381: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 39185  00F77A  0E05               	movlw	5
 39186  00F77C  0101               	movlb	1	; () banked
 39187  00F77E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39188                           
 39189                           ; BSR set to: 1
 39190                           ;api.c: 382: os.divide_position = 0;
 39191  00F780  0E00               	movlw	0
 39192  00F782  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 39193  00F784  0E00               	movlw	0
 39194  00F786  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 39195  00F788                     
 39196                           ;api.c: 385: --os.encoder2Count;
 39197                           
 39198                           ; BSR set to: 1
 39199  00F788  0101               	movlb	1	; () banked
 39200  00F78A  0776               	decf	(_os+5)& (0+255),f,b	;volatile
 39201                           
 39202                           ;api.c: 386: break;
 39203  00F78C  0012               	return	
 39204  00F78E                     
 39205                           ;api.c: 389: ++os.encoder2Count;
 39206                           
 39207                           ; BSR set to: 1
 39208  00F78E  0101               	movlb	1	; () banked
 39209  00F790  2B76               	incf	(_os+5)& (0+255),f,b	;volatile
 39210                           
 39211                           ;api.c: 390: break;
 39212  00F792  0012               	return	
 39213  00F794                     
 39214                           ;api.c: 393: ++os.button2;
 39215                           
 39216                           ; BSR set to: 1
 39217  00F794  0101               	movlb	1	; () banked
 39218  00F796  2B77               	incf	(_os+6)& (0+255),f,b	;volatile
 39219                           
 39220                           ;api.c: 394: break;
 39221  00F798  0012               	return	
 39222  00F79A                     
 39223                           ;api.c: 397: --os.encoder1Count;
 39224                           
 39225                           ; BSR set to: 1
 39226  00F79A  0101               	movlb	1	; () banked
 39227  00F79C  0774               	decf	(_os+3)& (0+255),f,b	;volatile
 39228                           
 39229                           ;api.c: 398: break;
 39230  00F79E  0012               	return	
 39231  00F7A0                     
 39232                           ;api.c: 401: ++os.encoder1Count;
 39233                           
 39234                           ; BSR set to: 1
 39235  00F7A0  0101               	movlb	1	; () banked
 39236  00F7A2  2B74               	incf	(_os+3)& (0+255),f,b	;volatile
 39237                           
 39238                           ;api.c: 402: break;
 39239  00F7A4  0012               	return	
 39240  00F7A6                     
 39241                           ;api.c: 405: ++os.button1;
 39242                           
 39243                           ; BSR set to: 1
 39244  00F7A6  0101               	movlb	1	; () banked
 39245  00F7A8  2B75               	incf	(_os+4)& (0+255),f,b	;volatile
 39246                           
 39247                           ;api.c: 406: break;
 39248  00F7AA  0012               	return	
 39249  00F7AC                     
 39250                           ;api.c: 409: if(!os.busy)
 39251                           
 39252                           ; BSR set to: 1
 39253  00F7AC  0101               	movlb	1	; () banked
 39254  00F7AE  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 39255  00F7B0  A4D8               	btfss	status,2,c
 39256  00F7B2  0012               	return	
 39257                           
 39258                           ; BSR set to: 1
 39259                           ;api.c: 410: {;api.c: 411: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 39260  00F7B4  0E84               	movlw	132
 39261  00F7B6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39262                           
 39263                           ; BSR set to: 1
 39264                           ;api.c: 412: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.manual_speed, MOTOR_MOVE_
      +                          TYPE_NORMAL);
 39265  00F7B8  0E00               	movlw	0
 39266  00F7BA  0100               	movlb	0	; () banked
 39267  00F7BC  6FA1               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 39268  00F7BE  0E00               	movlw	0
 39269  00F7C0  6FA2               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 39270  00F7C2  0E00               	movlw	0
 39271  00F7C4  6FA3               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 39272  00F7C6  0E00               	movlw	0
 39273  00F7C8  6FA4               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 39274  00F7CA  C194  F0A5         	movff	_os+35,motor_schedule_command@speed	;volatile
 39275  00F7CE  C195  F0A6         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 39276  00F7D2  0E00               	movlw	0
 39277  00F7D4  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 39278  00F7D6  0EFF               	movlw	255
 39279  00F7D8  ECA3  F092         	call	_motor_schedule_command
 39280                           
 39281                           ;api.c: 413: };api.c: 414: break;
 39282  00F7DC  0012               	return	
 39283  00F7DE                     
 39284                           ;api.c: 417: if(!os.busy)
 39285  00F7DE  0101               	movlb	1	; () banked
 39286  00F7E0  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 39287  00F7E2  A4D8               	btfss	status,2,c
 39288  00F7E4  0012               	return	
 39289                           
 39290                           ; BSR set to: 1
 39291                           ;api.c: 418: {;api.c: 419: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 39292  00F7E6  0E84               	movlw	132
 39293  00F7E8  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39294                           
 39295                           ; BSR set to: 1
 39296                           ;api.c: 420: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed, MOTOR_MOVE_T
      +                          YPE_NORMAL);
 39297  00F7EA  0E00               	movlw	0
 39298  00F7EC  0100               	movlb	0	; () banked
 39299  00F7EE  6FA1               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 39300  00F7F0  0E00               	movlw	0
 39301  00F7F2  6FA2               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 39302  00F7F4  0E00               	movlw	0
 39303  00F7F6  6FA3               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 39304  00F7F8  0E00               	movlw	0
 39305  00F7FA  6FA4               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 39306  00F7FC  C194  F0A5         	movff	_os+35,motor_schedule_command@speed	;volatile
 39307  00F800  C195  F0A6         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 39308  00F804  0E00               	movlw	0
 39309  00F806  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 39310  00F808  0E01               	movlw	1
 39311  00F80A  ECA3  F092         	call	_motor_schedule_command
 39312                           
 39313                           ;api.c: 421: };api.c: 422: break;
 39314  00F80E  0012               	return	
 39315  00F810                     
 39316                           ;api.c: 425: if(os.busy)
 39317  00F810  0101               	movlb	1	; () banked
 39318  00F812  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 39319  00F814  B4D8               	btfsc	status,2,c
 39320  00F816  0012               	return	
 39321                           
 39322                           ; BSR set to: 1
 39323                           ;api.c: 426: {;api.c: 427: motor_stop();
 39324  00F818  EC18  F0A6         	call	_motor_stop	;wreg free
 39325                           
 39326                           ;api.c: 428: motor_clear_command_cue();
 39327  00F81C  EC6A  F0AB         	call	_motor_clear_command_cue	;wreg free
 39328                           
 39329                           ;api.c: 429: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 39330  00F820  0E82               	movlw	130
 39331  00F822  0101               	movlb	1	; () banked
 39332  00F824  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39333                           
 39334                           ; BSR set to: 1
 39335                           ;api.c: 432: }
 39336                           
 39337                           ; BSR set to: 1
 39338                           ;api.c: 430: };api.c: 431: break;
 39339  00F826  0012               	return	
 39340  00F828                     l2298:
 39341                           
 39342                           ; BSR set to: 1
 39343  00F828  0100               	movlb	0	; () banked
 39344  00F82A  51C5               	movf	__parse_command_short@cmd& (0+255),w,b
 39345                           
 39346                           ; Switch size 1, requested type "space"
 39347                           ; Number of cases is 18, Range of values is 32 to 56
 39348                           ; switch strategies available:
 39349                           ; Name         Instructions Cycles
 39350                           ; simple_byte           55    28 (average)
 39351                           ;	Chosen strategy is simple_byte
 39352  00F82C  0A20               	xorlw	32	; case 32
 39353  00F82E  B4D8               	btfsc	status,2,c
 39354  00F830  D779               	goto	l2299
 39355  00F832  0A01               	xorlw	1	; case 33
 39356  00F834  B4D8               	btfsc	status,2,c
 39357  00F836  D77A               	goto	l2301
 39358  00F838  0A03               	xorlw	3	; case 34
 39359  00F83A  B4D8               	btfsc	status,2,c
 39360  00F83C  D77B               	goto	l2302
 39361  00F83E  0A01               	xorlw	1	; case 35
 39362  00F840  B4D8               	btfsc	status,2,c
 39363  00F842  D77C               	goto	l2303
 39364  00F844  0A07               	xorlw	7	; case 36
 39365  00F846  B4D8               	btfsc	status,2,c
 39366  00F848  D77D               	goto	l2304
 39367  00F84A  0A01               	xorlw	1	; case 37
 39368  00F84C  B4D8               	btfsc	status,2,c
 39369  00F84E  D77E               	goto	l2305
 39370  00F850  0A03               	xorlw	3	; case 38
 39371  00F852  B4D8               	btfsc	status,2,c
 39372  00F854  D77F               	goto	l2306
 39373  00F856  0A01               	xorlw	1	; case 39
 39374  00F858  B4D8               	btfsc	status,2,c
 39375  00F85A  D780               	goto	l2307
 39376  00F85C  0A0F               	xorlw	15	; case 40
 39377  00F85E  B4D8               	btfsc	status,2,c
 39378  00F860  D781               	goto	l2308
 39379  00F862  0A18               	xorlw	24	; case 48
 39380  00F864  B4D8               	btfsc	status,2,c
 39381  00F866  D790               	goto	l2309
 39382  00F868  0A01               	xorlw	1	; case 49
 39383  00F86A  B4D8               	btfsc	status,2,c
 39384  00F86C  D790               	goto	l2310
 39385  00F86E  0A03               	xorlw	3	; case 50
 39386  00F870  B4D8               	btfsc	status,2,c
 39387  00F872  D790               	goto	l2311
 39388  00F874  0A01               	xorlw	1	; case 51
 39389  00F876  B4D8               	btfsc	status,2,c
 39390  00F878  D790               	goto	l2312
 39391  00F87A  0A07               	xorlw	7	; case 52
 39392  00F87C  B4D8               	btfsc	status,2,c
 39393  00F87E  D790               	goto	l2313
 39394  00F880  0A01               	xorlw	1	; case 53
 39395  00F882  B4D8               	btfsc	status,2,c
 39396  00F884  D790               	goto	l2314
 39397  00F886  0A03               	xorlw	3	; case 54
 39398  00F888  B4D8               	btfsc	status,2,c
 39399  00F88A  D790               	goto	l2315
 39400  00F88C  0A01               	xorlw	1	; case 55
 39401  00F88E  B4D8               	btfsc	status,2,c
 39402  00F890  D7A6               	goto	l2317
 39403  00F892  0A0F               	xorlw	15	; case 56
 39404  00F894  A4D8               	btfss	status,2,c
 39405  00F896  0012               	return	
 39406  00F898  D7BB               	goto	l2319
 39407  00F89A                     __end_of__parse_command_short:
 39408                           	opt stack 0
 39409                           tosu	equ	0xFFF
 39410                           tosh	equ	0xFFE
 39411                           tosl	equ	0xFFD
 39412                           pclath	equ	0xFFA
 39413                           tblptru	equ	0xFF8
 39414                           tblptrh	equ	0xFF7
 39415                           tblptrl	equ	0xFF6
 39416                           tablat	equ	0xFF5
 39417                           prodh	equ	0xFF4
 39418                           prodl	equ	0xFF3
 39419                           intcon	equ	0xFF2
 39420                           indf0	equ	0xFEF
 39421                           postinc0	equ	0xFEE
 39422                           fsr0h	equ	0xFEA
 39423                           fsr0l	equ	0xFE9
 39424                           wreg	equ	0xFE8
 39425                           indf1	equ	0xFE7
 39426                           postinc1	equ	0xFE6
 39427                           postdec1	equ	0xFE5
 39428                           plusw1	equ	0xFE3
 39429                           fsr1h	equ	0xFE2
 39430                           fsr1l	equ	0xFE1
 39431                           indf2	equ	0xFDF
 39432                           postinc2	equ	0xFDE
 39433                           postdec2	equ	0xFDD
 39434                           plusw2	equ	0xFDB
 39435                           fsr2h	equ	0xFDA
 39436                           fsr2l	equ	0xFD9
 39437                           status	equ	0xFD8
 39438                           
 39439 ;; *************** function _motor_stop *****************
 39440 ;; Defined at:
 39441 ;;		line 534 in file "motor.c"
 39442 ;; Parameters:    Size  Location     Type
 39443 ;;		None
 39444 ;; Auto vars:     Size  Location     Type
 39445 ;;		None
 39446 ;; Return value:  Size  Location     Type
 39447 ;;                  1    wreg      void 
 39448 ;; Registers used:
 39449 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 39450 ;; Tracked objects:
 39451 ;;		On entry : 0/0
 39452 ;;		On exit  : 0/0
 39453 ;;		Unchanged: 0/0
 39454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39457 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39458 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39459 ;;Total ram usage:        2 bytes
 39460 ;; Hardware stack levels used:    1
 39461 ;; Hardware stack levels required when called:   10
 39462 ;; This function calls:
 39463 ;;		Nothing
 39464 ;; This function is called by:
 39465 ;;		__parse_command_short
 39466 ;;		_encoder_statemachine
 39467 ;; This function uses a non-reentrant model
 39468 ;;
 39469                           
 39470                           	psect	text163
 39471  014C30                     __ptext163:
 39472                           	opt stack 0
 39473  014C30                     _motor_stop:
 39474                           	opt stack 19
 39475                           
 39476                           ;motor.c: 536: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 39477                           
 39478                           ;incstack = 0
 39479  014C30  90D8               	bcf	status,0,c
 39480  014C32  0100               	movlb	0	; () banked
 39481  014C34  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 39482  014C36  6EF6               	movwf	tblptrl,c
 39483  014C38  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 39484  014C3A  6EF7               	movwf	tblptrh,c
 39485  014C3C  0E61               	movlw	low _motor_steps_lookup
 39486  014C3E  26F6               	addwf	tblptrl,f,c
 39487  014C40  0E94               	movlw	high _motor_steps_lookup
 39488  014C42  22F7               	addwfc	tblptrh,f,c
 39489  014C44                     	if	1	;There are 3 active tblptr bytes
 39490  014C44  6AF8               	clrf	tblptru,c
 39491  014C46  0E00               	movlw	low (__mediumconst shr (0+16))
 39492  014C48  22F8               	addwfc	tblptru,f,c
 39493  014C4A                     	endif
 39494  014C4A  0009               	tblrd		*+
 39495  014C4C  CFF5 F060          	movff	tablat,??_motor_stop
 39496  014C50  0009               	tblrd		*+
 39497  014C52  CFF5 F061          	movff	tablat,??_motor_stop+1
 39498  014C56  5160               	movf	??_motor_stop& (0+255),w,b
 39499  014C58  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 39500  014C5A  0101               	movlb	1	; () banked
 39501  014C5C  6F27               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 39502  014C5E  0100               	movlb	0	; () banked
 39503  014C60  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 39504  014C62  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 39505  014C64  0101               	movlb	1	; () banked
 39506  014C66  6F28               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 39507  014C68  0E00               	movlw	0
 39508  014C6A  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 39509  014C6C  6F29               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 39510  014C6E  0E00               	movlw	0
 39511  014C70  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 39512  014C72  6F2A               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 39513                           
 39514                           ; BSR set to: 1
 39515  014C74  0012               	return		;funcret
 39516  014C76                     __end_of_motor_stop:
 39517                           	opt stack 0
 39518                           tosu	equ	0xFFF
 39519                           tosh	equ	0xFFE
 39520                           tosl	equ	0xFFD
 39521                           pclath	equ	0xFFA
 39522                           tblptru	equ	0xFF8
 39523                           tblptrh	equ	0xFF7
 39524                           tblptrl	equ	0xFF6
 39525                           tablat	equ	0xFF5
 39526                           prodh	equ	0xFF4
 39527                           prodl	equ	0xFF3
 39528                           intcon	equ	0xFF2
 39529                           indf0	equ	0xFEF
 39530                           postinc0	equ	0xFEE
 39531                           fsr0h	equ	0xFEA
 39532                           fsr0l	equ	0xFE9
 39533                           wreg	equ	0xFE8
 39534                           indf1	equ	0xFE7
 39535                           postinc1	equ	0xFE6
 39536                           postdec1	equ	0xFE5
 39537                           plusw1	equ	0xFE3
 39538                           fsr1h	equ	0xFE2
 39539                           fsr1l	equ	0xFE1
 39540                           indf2	equ	0xFDF
 39541                           postinc2	equ	0xFDE
 39542                           postdec2	equ	0xFDD
 39543                           plusw2	equ	0xFDB
 39544                           fsr2h	equ	0xFDA
 39545                           fsr2l	equ	0xFD9
 39546                           status	equ	0xFD8
 39547                           
 39548 ;; *************** function _motor_set_zero *****************
 39549 ;; Defined at:
 39550 ;;		line 729 in file "motor.c"
 39551 ;; Parameters:    Size  Location     Type
 39552 ;;  direction       1    wreg     enum E6622
 39553 ;; Auto vars:     Size  Location     Type
 39554 ;;  direction       1   73[BANK0 ] enum E6622
 39555 ;; Return value:  Size  Location     Type
 39556 ;;                  1    wreg      void 
 39557 ;; Registers used:
 39558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39559 ;; Tracked objects:
 39560 ;;		On entry : 0/0
 39561 ;;		On exit  : 0/0
 39562 ;;		Unchanged: 0/0
 39563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39565 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39567 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39568 ;;Total ram usage:        1 bytes
 39569 ;; Hardware stack levels used:    1
 39570 ;; Hardware stack levels required when called:   14
 39571 ;; This function calls:
 39572 ;;		_motor_schedule_command
 39573 ;; This function is called by:
 39574 ;;		__parse_command_short
 39575 ;;		_encoder_statemachine
 39576 ;; This function uses a non-reentrant model
 39577 ;;
 39578                           
 39579                           	psect	text164
 39580  012916                     __ptext164:
 39581                           	opt stack 0
 39582  012916                     _motor_set_zero:
 39583                           	opt stack 15
 39584                           
 39585                           ; BSR set to: 1
 39586                           ;incstack = 0
 39587                           ;motor_set_zero@direction stored from wreg
 39588  012916  0100               	movlb	0	; () banked
 39589  012918  6FA9               	movwf	motor_set_zero@direction& (0+255),b
 39590                           
 39591                           ;motor.c: 731: if(config.overshoot_in_steps!=0)
 39592  01291A  0101               	movlb	1	; () banked
 39593  01291C  51A6               	movf	(_config+5)& (0+255),w,b
 39594  01291E  11A7               	iorwf	(_config+6)& (0+255),w,b
 39595  012920  B4D8               	btfsc	status,2,c
 39596  012922  D044               	goto	l2572
 39597                           
 39598                           ; BSR set to: 1
 39599                           ;motor.c: 732: {;motor.c: 733: if(direction==MOTOR_DIRECTION_CW)
 39600  012924  0100               	movlb	0	; () banked
 39601  012926  05A9               	decf	motor_set_zero@direction& (0+255),w,b
 39602  012928  A4D8               	btfss	status,2,c
 39603  01292A  D020               	goto	l2571
 39604                           
 39605                           ; BSR set to: 0
 39606                           ;motor.c: 734: {;motor.c: 735: motor_schedule_command(MOTOR_DIRECTION_CCW, config.oversh
      +                          oot_in_steps, 0, MOTOR_MOVE_TYPE_OVERSHOOT);
 39607  01292C  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 39608  012930  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 39609  012934  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 39610  012936  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 39611  012938  0E00               	movlw	0
 39612  01293A  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 39613  01293C  0E00               	movlw	0
 39614  01293E  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 39615  012940  0E01               	movlw	1
 39616  012942  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 39617  012944  0EFF               	movlw	255
 39618  012946  ECA3  F092         	call	_motor_schedule_command
 39619                           
 39620                           ;motor.c: 736: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0, 
      +                          MOTOR_MOVE_TYPE_NORMAL);
 39621  01294A  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 39622  01294E  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 39623  012952  0100               	movlb	0	; () banked
 39624  012954  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 39625  012956  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 39626  012958  0E00               	movlw	0
 39627  01295A  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 39628  01295C  0E00               	movlw	0
 39629  01295E  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 39630  012960  0E00               	movlw	0
 39631  012962  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 39632  012964  0E01               	movlw	1
 39633  012966  ECA3  F092         	call	_motor_schedule_command
 39634                           
 39635                           ;motor.c: 737: }
 39636  01296A  D020               	goto	l2572
 39637  01296C                     l2571:
 39638                           
 39639                           ;motor.c: 738: else;motor.c: 739: {;motor.c: 740: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, config.overshoot_in_steps, 0, MOTOR_MOVE_TYPE_OVERSHOOT);
 39640  01296C  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 39641  012970  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 39642  012974  0100               	movlb	0	; () banked
 39643  012976  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 39644  012978  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 39645  01297A  0E00               	movlw	0
 39646  01297C  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 39647  01297E  0E00               	movlw	0
 39648  012980  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 39649  012982  0E01               	movlw	1
 39650  012984  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 39651  012986  0E01               	movlw	1
 39652  012988  ECA3  F092         	call	_motor_schedule_command
 39653                           
 39654                           ;motor.c: 741: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0,
      +                           MOTOR_MOVE_TYPE_NORMAL);
 39655  01298C  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 39656  012990  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 39657  012994  0100               	movlb	0	; () banked
 39658  012996  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 39659  012998  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 39660  01299A  0E00               	movlw	0
 39661  01299C  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 39662  01299E  0E00               	movlw	0
 39663  0129A0  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 39664  0129A2  0E00               	movlw	0
 39665  0129A4  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 39666  0129A6  0EFF               	movlw	255
 39667  0129A8  ECA3  F092         	call	_motor_schedule_command
 39668  0129AC                     l2572:
 39669                           
 39670                           ;motor.c: 742: };motor.c: 743: };motor.c: 744: os.approach_direction = direction;
 39671  0129AC  C0A9  F183         	movff	motor_set_zero@direction,_os+18	;volatile
 39672                           
 39673                           ;motor.c: 745: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 39674  0129B0  0E01               	movlw	1
 39675  0129B2  0101               	movlb	1	; () banked
 39676  0129B4  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 39677                           
 39678                           ; BSR set to: 1
 39679                           ;motor.c: 746: os.current_position_in_steps = 0;
 39680  0129B6  0E00               	movlw	0
 39681  0129B8  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 39682  0129BA  0E00               	movlw	0
 39683  0129BC  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 39684  0129BE  0E00               	movlw	0
 39685  0129C0  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 39686  0129C2  0E00               	movlw	0
 39687  0129C4  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 39688                           
 39689                           ; BSR set to: 1
 39690                           ;motor.c: 747: os.divide_position = 0;
 39691  0129C6  0E00               	movlw	0
 39692  0129C8  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 39693  0129CA  0E00               	movlw	0
 39694  0129CC  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 39695                           
 39696                           ; BSR set to: 1
 39697  0129CE  0012               	return		;funcret
 39698  0129D0                     __end_of_motor_set_zero:
 39699                           	opt stack 0
 39700                           tosu	equ	0xFFF
 39701                           tosh	equ	0xFFE
 39702                           tosl	equ	0xFFD
 39703                           pclath	equ	0xFFA
 39704                           tblptru	equ	0xFF8
 39705                           tblptrh	equ	0xFF7
 39706                           tblptrl	equ	0xFF6
 39707                           tablat	equ	0xFF5
 39708                           prodh	equ	0xFF4
 39709                           prodl	equ	0xFF3
 39710                           intcon	equ	0xFF2
 39711                           indf0	equ	0xFEF
 39712                           postinc0	equ	0xFEE
 39713                           fsr0h	equ	0xFEA
 39714                           fsr0l	equ	0xFE9
 39715                           wreg	equ	0xFE8
 39716                           indf1	equ	0xFE7
 39717                           postinc1	equ	0xFE6
 39718                           postdec1	equ	0xFE5
 39719                           plusw1	equ	0xFE3
 39720                           fsr1h	equ	0xFE2
 39721                           fsr1l	equ	0xFE1
 39722                           indf2	equ	0xFDF
 39723                           postinc2	equ	0xFDE
 39724                           postdec2	equ	0xFDD
 39725                           plusw2	equ	0xFDB
 39726                           fsr2h	equ	0xFDA
 39727                           fsr2l	equ	0xFD9
 39728                           status	equ	0xFD8
 39729                           
 39730 ;; *************** function _motor_go_to_steps_position *****************
 39731 ;; Defined at:
 39732 ;;		line 577 in file "motor.c"
 39733 ;; Parameters:    Size  Location     Type
 39734 ;;  target_posit    4   73[BANK0 ] unsigned long 
 39735 ;; Auto vars:     Size  Location     Type
 39736 ;;  distance_ccw    4   97[BANK0 ] unsigned long 
 39737 ;;  distance_cw     4   93[BANK0 ] unsigned long 
 39738 ;;  overhead_ccw    4   89[BANK0 ] unsigned long 
 39739 ;;  overhead_cw     4   85[BANK0 ] unsigned long 
 39740 ;; Return value:  Size  Location     Type
 39741 ;;                  1    wreg      void 
 39742 ;; Registers used:
 39743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39744 ;; Tracked objects:
 39745 ;;		On entry : 0/0
 39746 ;;		On exit  : 0/0
 39747 ;;		Unchanged: 0/0
 39748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39749 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39750 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39751 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39752 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39753 ;;Total ram usage:       28 bytes
 39754 ;; Hardware stack levels used:    1
 39755 ;; Hardware stack levels required when called:   14
 39756 ;; This function calls:
 39757 ;;		_motor_schedule_command
 39758 ;; This function is called by:
 39759 ;;		__parse_command_short
 39760 ;;		_motor_divide_jump
 39761 ;;		_motor_divide_jump_to_nearest
 39762 ;;		_encoder_statemachine
 39763 ;;		_motor_go_to_degrees_position
 39764 ;; This function uses a non-reentrant model
 39765 ;;
 39766                           
 39767                           	psect	text165
 39768  00D2FE                     __ptext165:
 39769                           	opt stack 0
 39770  00D2FE                     _motor_go_to_steps_position:
 39771                           	opt stack 15
 39772                           
 39773                           ;motor.c: 579: uint32_t distance_cw;;motor.c: 580: uint32_t overhead_cw;;motor.c: 581: u
      +                          int32_t distance_ccw;;motor.c: 582: uint32_t overhead_ccw;;motor.c: 585: if(os.busy)
 39774                           
 39775                           ; BSR set to: 1
 39776                           ;incstack = 0
 39777  00D2FE  0101               	movlb	1	; () banked
 39778  00D300  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 39779  00D302  A4D8               	btfss	status,2,c
 39780  00D304  0012               	return	
 39781                           
 39782                           ; BSR set to: 1
 39783                           ;motor.c: 588: };motor.c: 591: if(os.current_position_in_steps == target_position)
 39784                           
 39785                           ; BSR set to: 1
 39786                           
 39787                           ; BSR set to: 1
 39788                           ;motor.c: 586: {;motor.c: 587: return;
 39789  00D306  0100               	movlb	0	; () banked
 39790  00D308  51A9               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 39791  00D30A  0101               	movlb	1	; () banked
 39792  00D30C  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 39793  00D30E  E110               	bnz	l14852
 39794  00D310  0100               	movlb	0	; () banked
 39795  00D312  51AA               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 39796  00D314  0101               	movlb	1	; () banked
 39797  00D316  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 39798  00D318  E10B               	bnz	l14852
 39799  00D31A  0100               	movlb	0	; () banked
 39800  00D31C  51AB               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 39801  00D31E  0101               	movlb	1	; () banked
 39802  00D320  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 39803  00D322  E106               	bnz	l14852
 39804  00D324  0100               	movlb	0	; () banked
 39805  00D326  51AC               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 39806  00D328  0101               	movlb	1	; () banked
 39807  00D32A  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 39808  00D32C  B4D8               	btfsc	status,2,c
 39809  00D32E  0012               	return	
 39810  00D330                     l14852:
 39811                           
 39812                           ; BSR set to: 1
 39813                           ;motor.c: 594: };motor.c: 597: overhead_cw = 0;
 39814  00D330  0E00               	movlw	0
 39815  00D332  0100               	movlb	0	; () banked
 39816  00D334  6FB5               	movwf	motor_go_to_steps_position@overhead_cw& (0+255),b
 39817  00D336  0E00               	movlw	0
 39818  00D338  6FB6               	movwf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),b
 39819  00D33A  0E00               	movlw	0
 39820  00D33C  6FB7               	movwf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),b
 39821  00D33E  0E00               	movlw	0
 39822  00D340  6FB8               	movwf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),b
 39823                           
 39824                           ; BSR set to: 0
 39825                           ;motor.c: 598: distance_cw = target_position - os.current_position_in_steps;
 39826  00D342  C178  F0AD         	movff	_os+7,??_motor_go_to_steps_position	;volatile
 39827  00D346  C179  F0AE         	movff	_os+8,??_motor_go_to_steps_position+1	;volatile
 39828  00D34A  C17A  F0AF         	movff	_os+9,??_motor_go_to_steps_position+2	;volatile
 39829  00D34E  C17B  F0B0         	movff	_os+10,??_motor_go_to_steps_position+3	;volatile
 39830  00D352  1FAD               	comf	??_motor_go_to_steps_position& (0+255),f,b
 39831  00D354  1FAE               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 39832  00D356  1FAF               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 39833  00D358  1FB0               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 39834  00D35A  2BAD               	incf	??_motor_go_to_steps_position& (0+255),f,b
 39835  00D35C  0E00               	movlw	0
 39836  00D35E  23AE               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 39837  00D360  23AF               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 39838  00D362  23B0               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 39839  00D364  51A9               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 39840  00D366  25AD               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 39841  00D368  6FBD               	movwf	motor_go_to_steps_position@distance_cw& (0+255),b
 39842  00D36A  51AA               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 39843  00D36C  21AE               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 39844  00D36E  6FBE               	movwf	(motor_go_to_steps_position@distance_cw+1)& (0+255),b
 39845  00D370  51AB               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 39846  00D372  21AF               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 39847  00D374  6FBF               	movwf	(motor_go_to_steps_position@distance_cw+2)& (0+255),b
 39848  00D376  51AC               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 39849  00D378  21B0               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 39850  00D37A  6FC0               	movwf	(motor_go_to_steps_position@distance_cw+3)& (0+255),b
 39851                           
 39852                           ; BSR set to: 0
 39853                           ;motor.c: 599: if(distance_cw>config.full_circle_in_steps)
 39854  00D37C  51BD               	movf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 39855  00D37E  0101               	movlb	1	; () banked
 39856  00D380  5DA1               	subwf	_config& (0+255),w,b
 39857  00D382  0100               	movlb	0	; () banked
 39858  00D384  51BE               	movf	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 39859  00D386  0101               	movlb	1	; () banked
 39860  00D388  59A2               	subwfb	(_config+1)& (0+255),w,b
 39861  00D38A  0100               	movlb	0	; () banked
 39862  00D38C  51BF               	movf	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 39863  00D38E  0101               	movlb	1	; () banked
 39864  00D390  59A3               	subwfb	(_config+2)& (0+255),w,b
 39865  00D392  0100               	movlb	0	; () banked
 39866  00D394  51C0               	movf	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 39867  00D396  0101               	movlb	1	; () banked
 39868  00D398  59A4               	subwfb	(_config+3)& (0+255),w,b
 39869  00D39A  B0D8               	btfsc	status,0,c
 39870  00D39C  D00F               	goto	l2540
 39871                           
 39872                           ; BSR set to: 1
 39873                           ;motor.c: 600: {;motor.c: 601: distance_cw += config.full_circle_in_steps;
 39874  00D39E  51A1               	movf	_config& (0+255),w,b
 39875  00D3A0  0100               	movlb	0	; () banked
 39876  00D3A2  27BD               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 39877  00D3A4  0101               	movlb	1	; () banked
 39878  00D3A6  51A2               	movf	(_config+1)& (0+255),w,b
 39879  00D3A8  0100               	movlb	0	; () banked
 39880  00D3AA  23BE               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 39881  00D3AC  0101               	movlb	1	; () banked
 39882  00D3AE  51A3               	movf	(_config+2)& (0+255),w,b
 39883  00D3B0  0100               	movlb	0	; () banked
 39884  00D3B2  23BF               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 39885  00D3B4  0101               	movlb	1	; () banked
 39886  00D3B6  51A4               	movf	(_config+3)& (0+255),w,b
 39887  00D3B8  0100               	movlb	0	; () banked
 39888  00D3BA  23C0               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 39889  00D3BC                     l2540:
 39890                           
 39891                           ;motor.c: 602: };motor.c: 603: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 39892  00D3BC  0101               	movlb	1	; () banked
 39893  00D3BE  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 39894  00D3C0  A4D8               	btfss	status,2,c
 39895  00D3C2  D023               	goto	l2541
 39896                           
 39897                           ; BSR set to: 1
 39898                           ;motor.c: 604: {;motor.c: 605: distance_cw += config.overshoot_in_steps;
 39899  00D3C4  51A6               	movf	(_config+5)& (0+255),w,b
 39900  00D3C6  0100               	movlb	0	; () banked
 39901  00D3C8  27BD               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 39902  00D3CA  0101               	movlb	1	; () banked
 39903  00D3CC  51A7               	movf	(_config+6)& (0+255),w,b
 39904  00D3CE  0100               	movlb	0	; () banked
 39905  00D3D0  23BE               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 39906  00D3D2  0E00               	movlw	0
 39907  00D3D4  23BF               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 39908  00D3D6  0E00               	movlw	0
 39909  00D3D8  23C0               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 39910                           
 39911                           ;motor.c: 606: overhead_cw += config.overshoot_in_steps;
 39912  00D3DA  0101               	movlb	1	; () banked
 39913  00D3DC  51A6               	movf	(_config+5)& (0+255),w,b
 39914  00D3DE  0100               	movlb	0	; () banked
 39915  00D3E0  27B5               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 39916  00D3E2  0101               	movlb	1	; () banked
 39917  00D3E4  51A7               	movf	(_config+6)& (0+255),w,b
 39918  00D3E6  0100               	movlb	0	; () banked
 39919  00D3E8  23B6               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 39920  00D3EA  0E00               	movlw	0
 39921  00D3EC  23B7               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 39922  00D3EE  0E00               	movlw	0
 39923  00D3F0  23B8               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 39924                           
 39925                           ;motor.c: 607: overhead_cw += config.overshoot_cost_in_steps;
 39926  00D3F2  0101               	movlb	1	; () banked
 39927  00D3F4  51A8               	movf	(_config+7)& (0+255),w,b
 39928  00D3F6  0100               	movlb	0	; () banked
 39929  00D3F8  27B5               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 39930  00D3FA  0101               	movlb	1	; () banked
 39931  00D3FC  51A9               	movf	(_config+8)& (0+255),w,b
 39932  00D3FE  0100               	movlb	0	; () banked
 39933  00D400  23B6               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 39934  00D402  0E00               	movlw	0
 39935  00D404  23B7               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 39936  00D406  0E00               	movlw	0
 39937  00D408  23B8               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 39938  00D40A                     l2541:
 39939                           
 39940                           ;motor.c: 608: };motor.c: 611: overhead_ccw = 0;
 39941                           
 39942                           ; BSR set to: 0
 39943  00D40A  0E00               	movlw	0
 39944  00D40C  0100               	movlb	0	; () banked
 39945  00D40E  6FB9               	movwf	motor_go_to_steps_position@overhead_ccw& (0+255),b
 39946  00D410  0E00               	movlw	0
 39947  00D412  6FBA               	movwf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),b
 39948  00D414  0E00               	movlw	0
 39949  00D416  6FBB               	movwf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),b
 39950  00D418  0E00               	movlw	0
 39951  00D41A  6FBC               	movwf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),b
 39952                           
 39953                           ; BSR set to: 0
 39954                           ;motor.c: 612: distance_ccw = os.current_position_in_steps - target_position;
 39955  00D41C  C0A9  F0AD         	movff	motor_go_to_steps_position@target_position,??_motor_go_to_steps_position
 39956  00D420  C0AA  F0AE         	movff	motor_go_to_steps_position@target_position+1,??_motor_go_to_steps_position+1
 39957  00D424  C0AB  F0AF         	movff	motor_go_to_steps_position@target_position+2,??_motor_go_to_steps_position+2
 39958  00D428  C0AC  F0B0         	movff	motor_go_to_steps_position@target_position+3,??_motor_go_to_steps_position+3
 39959  00D42C  1FAD               	comf	??_motor_go_to_steps_position& (0+255),f,b
 39960  00D42E  1FAE               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 39961  00D430  1FAF               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 39962  00D432  1FB0               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 39963  00D434  2BAD               	incf	??_motor_go_to_steps_position& (0+255),f,b
 39964  00D436  0E00               	movlw	0
 39965  00D438  23AE               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 39966  00D43A  23AF               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 39967  00D43C  23B0               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 39968  00D43E  0101               	movlb	1	; () banked
 39969  00D440  5178               	movf	(_os+7)& (0+255),w,b	;volatile
 39970  00D442  0100               	movlb	0	; () banked
 39971  00D444  25AD               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 39972  00D446  6FC1               	movwf	motor_go_to_steps_position@distance_ccw& (0+255),b
 39973  00D448  0101               	movlb	1	; () banked
 39974  00D44A  5179               	movf	(_os+8)& (0+255),w,b	;volatile
 39975  00D44C  0100               	movlb	0	; () banked
 39976  00D44E  21AE               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 39977  00D450  6FC2               	movwf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),b
 39978  00D452  0101               	movlb	1	; () banked
 39979  00D454  517A               	movf	(_os+9)& (0+255),w,b	;volatile
 39980  00D456  0100               	movlb	0	; () banked
 39981  00D458  21AF               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 39982  00D45A  6FC3               	movwf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),b
 39983  00D45C  0101               	movlb	1	; () banked
 39984  00D45E  517B               	movf	(_os+10)& (0+255),w,b	;volatile
 39985  00D460  0100               	movlb	0	; () banked
 39986  00D462  21B0               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 39987  00D464  6FC4               	movwf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),b
 39988                           
 39989                           ; BSR set to: 0
 39990                           ;motor.c: 613: if(distance_ccw>config.full_circle_in_steps)
 39991  00D466  51C1               	movf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 39992  00D468  0101               	movlb	1	; () banked
 39993  00D46A  5DA1               	subwf	_config& (0+255),w,b
 39994  00D46C  0100               	movlb	0	; () banked
 39995  00D46E  51C2               	movf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 39996  00D470  0101               	movlb	1	; () banked
 39997  00D472  59A2               	subwfb	(_config+1)& (0+255),w,b
 39998  00D474  0100               	movlb	0	; () banked
 39999  00D476  51C3               	movf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 40000  00D478  0101               	movlb	1	; () banked
 40001  00D47A  59A3               	subwfb	(_config+2)& (0+255),w,b
 40002  00D47C  0100               	movlb	0	; () banked
 40003  00D47E  51C4               	movf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 40004  00D480  0101               	movlb	1	; () banked
 40005  00D482  59A4               	subwfb	(_config+3)& (0+255),w,b
 40006  00D484  B0D8               	btfsc	status,0,c
 40007  00D486  D00F               	goto	l2542
 40008                           
 40009                           ; BSR set to: 1
 40010                           ;motor.c: 614: {;motor.c: 615: distance_ccw += config.full_circle_in_steps;
 40011  00D488  51A1               	movf	_config& (0+255),w,b
 40012  00D48A  0100               	movlb	0	; () banked
 40013  00D48C  27C1               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 40014  00D48E  0101               	movlb	1	; () banked
 40015  00D490  51A2               	movf	(_config+1)& (0+255),w,b
 40016  00D492  0100               	movlb	0	; () banked
 40017  00D494  23C2               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 40018  00D496  0101               	movlb	1	; () banked
 40019  00D498  51A3               	movf	(_config+2)& (0+255),w,b
 40020  00D49A  0100               	movlb	0	; () banked
 40021  00D49C  23C3               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 40022  00D49E  0101               	movlb	1	; () banked
 40023  00D4A0  51A4               	movf	(_config+3)& (0+255),w,b
 40024  00D4A2  0100               	movlb	0	; () banked
 40025  00D4A4  23C4               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 40026  00D4A6                     l2542:
 40027                           
 40028                           ;motor.c: 616: };motor.c: 617: if(os.approach_direction==MOTOR_DIRECTION_CW)
 40029  00D4A6  0101               	movlb	1	; () banked
 40030  00D4A8  0583               	decf	(_os+18)& (0+255),w,b	;volatile
 40031  00D4AA  A4D8               	btfss	status,2,c
 40032  00D4AC  D023               	goto	l2543
 40033                           
 40034                           ; BSR set to: 1
 40035                           ;motor.c: 618: {;motor.c: 619: distance_ccw += config.overshoot_in_steps;
 40036  00D4AE  51A6               	movf	(_config+5)& (0+255),w,b
 40037  00D4B0  0100               	movlb	0	; () banked
 40038  00D4B2  27C1               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 40039  00D4B4  0101               	movlb	1	; () banked
 40040  00D4B6  51A7               	movf	(_config+6)& (0+255),w,b
 40041  00D4B8  0100               	movlb	0	; () banked
 40042  00D4BA  23C2               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 40043  00D4BC  0E00               	movlw	0
 40044  00D4BE  23C3               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 40045  00D4C0  0E00               	movlw	0
 40046  00D4C2  23C4               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 40047                           
 40048                           ;motor.c: 620: overhead_ccw += config.overshoot_in_steps;
 40049  00D4C4  0101               	movlb	1	; () banked
 40050  00D4C6  51A6               	movf	(_config+5)& (0+255),w,b
 40051  00D4C8  0100               	movlb	0	; () banked
 40052  00D4CA  27B9               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 40053  00D4CC  0101               	movlb	1	; () banked
 40054  00D4CE  51A7               	movf	(_config+6)& (0+255),w,b
 40055  00D4D0  0100               	movlb	0	; () banked
 40056  00D4D2  23BA               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 40057  00D4D4  0E00               	movlw	0
 40058  00D4D6  23BB               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 40059  00D4D8  0E00               	movlw	0
 40060  00D4DA  23BC               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 40061                           
 40062                           ;motor.c: 621: overhead_ccw += config.overshoot_cost_in_steps;
 40063  00D4DC  0101               	movlb	1	; () banked
 40064  00D4DE  51A8               	movf	(_config+7)& (0+255),w,b
 40065  00D4E0  0100               	movlb	0	; () banked
 40066  00D4E2  27B9               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 40067  00D4E4  0101               	movlb	1	; () banked
 40068  00D4E6  51A9               	movf	(_config+8)& (0+255),w,b
 40069  00D4E8  0100               	movlb	0	; () banked
 40070  00D4EA  23BA               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 40071  00D4EC  0E00               	movlw	0
 40072  00D4EE  23BB               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 40073  00D4F0  0E00               	movlw	0
 40074  00D4F2  23BC               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 40075  00D4F4                     l2543:
 40076                           
 40077                           ;motor.c: 622: };motor.c: 625: if((distance_cw+overhead_cw) < (distance_ccw+overhead_ccw
      +                          ))
 40078                           
 40079                           ; BSR set to: 0
 40080  00D4F4  0100               	movlb	0	; () banked
 40081  00D4F6  51B9               	movf	motor_go_to_steps_position@overhead_ccw& (0+255),w,b
 40082  00D4F8  25C1               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 40083  00D4FA  6FAD               	movwf	??_motor_go_to_steps_position& (0+255),b
 40084  00D4FC  51BA               	movf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),w,b
 40085  00D4FE  21C2               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 40086  00D500  6FAE               	movwf	(??_motor_go_to_steps_position+1)& (0+255),b
 40087  00D502  51BB               	movf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),w,b
 40088  00D504  21C3               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 40089  00D506  6FAF               	movwf	(??_motor_go_to_steps_position+2)& (0+255),b
 40090  00D508  51BC               	movf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),w,b
 40091  00D50A  21C4               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 40092  00D50C  6FB0               	movwf	(??_motor_go_to_steps_position+3)& (0+255),b
 40093  00D50E  51B5               	movf	motor_go_to_steps_position@overhead_cw& (0+255),w,b
 40094  00D510  25BD               	addwf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 40095  00D512  6FB1               	movwf	(??_motor_go_to_steps_position+4)& (0+255),b
 40096  00D514  51B6               	movf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),w,b
 40097  00D516  21BE               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 40098  00D518  6FB2               	movwf	(??_motor_go_to_steps_position+5)& (0+255),b
 40099  00D51A  51B7               	movf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),w,b
 40100  00D51C  21BF               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 40101  00D51E  6FB3               	movwf	(??_motor_go_to_steps_position+6)& (0+255),b
 40102  00D520  51B8               	movf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),w,b
 40103  00D522  21C0               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 40104  00D524  6FB4               	movwf	(??_motor_go_to_steps_position+7)& (0+255),b
 40105  00D526  51AD               	movf	??_motor_go_to_steps_position& (0+255),w,b
 40106  00D528  5DB1               	subwf	(??_motor_go_to_steps_position+4)& (0+255),w,b
 40107  00D52A  51AE               	movf	(??_motor_go_to_steps_position+1)& (0+255),w,b
 40108  00D52C  59B2               	subwfb	(??_motor_go_to_steps_position+5)& (0+255),w,b
 40109  00D52E  51AF               	movf	(??_motor_go_to_steps_position+2)& (0+255),w,b
 40110  00D530  59B3               	subwfb	(??_motor_go_to_steps_position+6)& (0+255),w,b
 40111  00D532  51B0               	movf	(??_motor_go_to_steps_position+3)& (0+255),w,b
 40112  00D534  59B4               	subwfb	(??_motor_go_to_steps_position+7)& (0+255),w,b
 40113  00D536  B0D8               	btfsc	status,0,c
 40114  00D538  D03F               	goto	l2544
 40115                           
 40116                           ; BSR set to: 0
 40117                           ;motor.c: 626: {;motor.c: 627: if(os.approach_direction==MOTOR_DIRECTION_CW)
 40118  00D53A  0101               	movlb	1	; () banked
 40119  00D53C  0583               	decf	(_os+18)& (0+255),w,b	;volatile
 40120  00D53E  A4D8               	btfss	status,2,c
 40121  00D540  D013               	goto	l2545
 40122                           
 40123                           ; BSR set to: 1
 40124                           ;motor.c: 628: {;motor.c: 630: motor_schedule_command(MOTOR_DIRECTION_CW, distance_cw, 0
      +                          , MOTOR_MOVE_TYPE_NORMAL);
 40125  00D542  C0BD  F0A1         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 40126  00D546  C0BE  F0A2         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 40127  00D54A  C0BF  F0A3         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 40128  00D54E  C0C0  F0A4         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 40129  00D552  0E00               	movlw	0
 40130  00D554  0100               	movlb	0	; () banked
 40131  00D556  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40132  00D558  0E00               	movlw	0
 40133  00D55A  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40134  00D55C  0E00               	movlw	0
 40135  00D55E  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40136  00D560  0E01               	movlw	1
 40137  00D562  ECA3  F092         	call	_motor_schedule_command
 40138                           
 40139                           ;motor.c: 631: }
 40140  00D566  0012               	return	
 40141  00D568                     l2545:
 40142                           
 40143                           ;motor.c: 632: else;motor.c: 633: {;motor.c: 635: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, distance_cw, 0, MOTOR_MOVE_TYPE_OVERSHOOT);
 40144  00D568  C0BD  F0A1         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 40145  00D56C  C0BE  F0A2         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 40146  00D570  C0BF  F0A3         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 40147  00D574  C0C0  F0A4         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 40148  00D578  0E00               	movlw	0
 40149  00D57A  0100               	movlb	0	; () banked
 40150  00D57C  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40151  00D57E  0E00               	movlw	0
 40152  00D580  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40153  00D582  0E01               	movlw	1
 40154  00D584  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40155  00D586  0E01               	movlw	1
 40156  00D588  ECA3  F092         	call	_motor_schedule_command
 40157                           
 40158                           ;motor.c: 636: if(config.overshoot_in_steps!=0)
 40159  00D58C  0101               	movlb	1	; () banked
 40160  00D58E  51A6               	movf	(_config+5)& (0+255),w,b
 40161  00D590  11A7               	iorwf	(_config+6)& (0+255),w,b
 40162  00D592  B4D8               	btfsc	status,2,c
 40163  00D594  0012               	return	
 40164                           
 40165                           ; BSR set to: 1
 40166                           ;motor.c: 637: {;motor.c: 638: motor_schedule_command(MOTOR_DIRECTION_CCW, config.oversh
      +                          oot_in_steps, 0, MOTOR_MOVE_TYPE_NORMAL);
 40167  00D596  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 40168  00D59A  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40169  00D59E  0100               	movlb	0	; () banked
 40170  00D5A0  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40171  00D5A2  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40172  00D5A4  0E00               	movlw	0
 40173  00D5A6  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40174  00D5A8  0E00               	movlw	0
 40175  00D5AA  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40176  00D5AC  0E00               	movlw	0
 40177  00D5AE  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40178  00D5B0  0EFF               	movlw	255
 40179  00D5B2  ECA3  F092         	call	_motor_schedule_command
 40180                           
 40181                           ;motor.c: 639: };motor.c: 640: };motor.c: 641: }
 40182  00D5B6  0012               	return	
 40183  00D5B8                     l2544:
 40184                           
 40185                           ;motor.c: 642: else;motor.c: 643: {;motor.c: 644: if(os.approach_direction==MOTOR_DIRECT
      +                          ION_CCW)
 40186  00D5B8  0101               	movlb	1	; () banked
 40187  00D5BA  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 40188  00D5BC  A4D8               	btfss	status,2,c
 40189  00D5BE  D013               	goto	l2549
 40190                           
 40191                           ; BSR set to: 1
 40192                           ;motor.c: 645: {;motor.c: 647: motor_schedule_command(MOTOR_DIRECTION_CCW, distance_ccw,
      +                           0, MOTOR_MOVE_TYPE_NORMAL);
 40193  00D5C0  C0C1  F0A1         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 40194  00D5C4  C0C2  F0A2         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 40195  00D5C8  C0C3  F0A3         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 40196  00D5CC  C0C4  F0A4         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 40197  00D5D0  0E00               	movlw	0
 40198  00D5D2  0100               	movlb	0	; () banked
 40199  00D5D4  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40200  00D5D6  0E00               	movlw	0
 40201  00D5D8  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40202  00D5DA  0E00               	movlw	0
 40203  00D5DC  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40204  00D5DE  0EFF               	movlw	255
 40205  00D5E0  ECA3  F092         	call	_motor_schedule_command
 40206                           
 40207                           ;motor.c: 648: }
 40208  00D5E4  0012               	return	
 40209  00D5E6                     l2549:
 40210                           
 40211                           ;motor.c: 649: else;motor.c: 650: {;motor.c: 652: motor_schedule_command(MOTOR_DIRECTION
      +                          _CCW, distance_ccw, 0, MOTOR_MOVE_TYPE_OVERSHOOT);
 40212  00D5E6  C0C1  F0A1         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 40213  00D5EA  C0C2  F0A2         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 40214  00D5EE  C0C3  F0A3         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 40215  00D5F2  C0C4  F0A4         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 40216  00D5F6  0E00               	movlw	0
 40217  00D5F8  0100               	movlb	0	; () banked
 40218  00D5FA  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40219  00D5FC  0E00               	movlw	0
 40220  00D5FE  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40221  00D600  0E01               	movlw	1
 40222  00D602  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40223  00D604  0EFF               	movlw	255
 40224  00D606  ECA3  F092         	call	_motor_schedule_command
 40225                           
 40226                           ;motor.c: 653: if(config.overshoot_in_steps!=0)
 40227  00D60A  0101               	movlb	1	; () banked
 40228  00D60C  51A6               	movf	(_config+5)& (0+255),w,b
 40229  00D60E  11A7               	iorwf	(_config+6)& (0+255),w,b
 40230  00D610  B4D8               	btfsc	status,2,c
 40231  00D612  0012               	return	
 40232                           
 40233                           ; BSR set to: 1
 40234                           ;motor.c: 654: {;motor.c: 655: motor_schedule_command(MOTOR_DIRECTION_CW, config.oversho
      +                          ot_in_steps, 0, MOTOR_MOVE_TYPE_NORMAL);
 40235  00D614  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 40236  00D618  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40237  00D61C  0100               	movlb	0	; () banked
 40238  00D61E  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40239  00D620  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40240  00D622  0E00               	movlw	0
 40241  00D624  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40242  00D626  0E00               	movlw	0
 40243  00D628  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40244  00D62A  0E00               	movlw	0
 40245  00D62C  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40246  00D62E  0E01               	movlw	1
 40247  00D630  ECA3  F092         	call	_motor_schedule_command
 40248  00D634  0012               	return	
 40249  00D636                     __end_of_motor_go_to_steps_position:
 40250                           	opt stack 0
 40251                           tosu	equ	0xFFF
 40252                           tosh	equ	0xFFE
 40253                           tosl	equ	0xFFD
 40254                           pclath	equ	0xFFA
 40255                           tblptru	equ	0xFF8
 40256                           tblptrh	equ	0xFF7
 40257                           tblptrl	equ	0xFF6
 40258                           tablat	equ	0xFF5
 40259                           prodh	equ	0xFF4
 40260                           prodl	equ	0xFF3
 40261                           intcon	equ	0xFF2
 40262                           indf0	equ	0xFEF
 40263                           postinc0	equ	0xFEE
 40264                           fsr0h	equ	0xFEA
 40265                           fsr0l	equ	0xFE9
 40266                           wreg	equ	0xFE8
 40267                           indf1	equ	0xFE7
 40268                           postinc1	equ	0xFE6
 40269                           postdec1	equ	0xFE5
 40270                           plusw1	equ	0xFE3
 40271                           fsr1h	equ	0xFE2
 40272                           fsr1l	equ	0xFE1
 40273                           indf2	equ	0xFDF
 40274                           postinc2	equ	0xFDE
 40275                           postdec2	equ	0xFDD
 40276                           plusw2	equ	0xFDB
 40277                           fsr2h	equ	0xFDA
 40278                           fsr2l	equ	0xFD9
 40279                           status	equ	0xFD8
 40280                           
 40281 ;; *************** function _motor_clear_command_cue *****************
 40282 ;; Defined at:
 40283 ;;		line 154 in file "motor.c"
 40284 ;; Parameters:    Size  Location     Type
 40285 ;;		None
 40286 ;; Auto vars:     Size  Location     Type
 40287 ;;		None
 40288 ;; Return value:  Size  Location     Type
 40289 ;;                  1    wreg      void 
 40290 ;; Registers used:
 40291 ;;		None
 40292 ;; Tracked objects:
 40293 ;;		On entry : 0/0
 40294 ;;		On exit  : 0/0
 40295 ;;		Unchanged: 0/0
 40296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40301 ;;Total ram usage:        0 bytes
 40302 ;; Hardware stack levels used:    1
 40303 ;; Hardware stack levels required when called:   10
 40304 ;; This function calls:
 40305 ;;		Nothing
 40306 ;; This function is called by:
 40307 ;;		__parse_command_short
 40308 ;; This function uses a non-reentrant model
 40309 ;;
 40310                           
 40311                           	psect	text166
 40312  0156D4                     __ptext166:
 40313                           	opt stack 0
 40314  0156D4                     _motor_clear_command_cue:
 40315                           	opt stack 17
 40316                           
 40317                           ;motor.c: 157: motor_cue_write_index = motor_cue_read_index;
 40318                           
 40319                           ;incstack = 0
 40320  0156D4  C158  F157         	movff	_motor_cue_read_index,_motor_cue_write_index
 40321  0156D8  0012               	return		;funcret
 40322  0156DA                     __end_of_motor_clear_command_cue:
 40323                           	opt stack 0
 40324                           tosu	equ	0xFFF
 40325                           tosh	equ	0xFFE
 40326                           tosl	equ	0xFFD
 40327                           pclath	equ	0xFFA
 40328                           tblptru	equ	0xFF8
 40329                           tblptrh	equ	0xFF7
 40330                           tblptrl	equ	0xFF6
 40331                           tablat	equ	0xFF5
 40332                           prodh	equ	0xFF4
 40333                           prodl	equ	0xFF3
 40334                           intcon	equ	0xFF2
 40335                           indf0	equ	0xFEF
 40336                           postinc0	equ	0xFEE
 40337                           fsr0h	equ	0xFEA
 40338                           fsr0l	equ	0xFE9
 40339                           wreg	equ	0xFE8
 40340                           indf1	equ	0xFE7
 40341                           postinc1	equ	0xFE6
 40342                           postdec1	equ	0xFE5
 40343                           plusw1	equ	0xFE3
 40344                           fsr1h	equ	0xFE2
 40345                           fsr1l	equ	0xFE1
 40346                           indf2	equ	0xFDF
 40347                           postinc2	equ	0xFDE
 40348                           postdec2	equ	0xFDD
 40349                           plusw2	equ	0xFDB
 40350                           fsr2h	equ	0xFDA
 40351                           fsr2l	equ	0xFD9
 40352                           status	equ	0xFD8
 40353                           
 40354 ;; *************** function __parse_command_long *****************
 40355 ;; Defined at:
 40356 ;;		line 435 in file "api.c"
 40357 ;; Parameters:    Size  Location     Type
 40358 ;;  data            2   85[BANK0 ] PTR unsigned char 
 40359 ;;		 -> ReceivedDataBuffer(64), 
 40360 ;;  out_buffer      2   87[BANK0 ] PTR unsigned char 
 40361 ;;		 -> ToSendDataBuffer(64), 
 40362 ;;  out_idx_ptr     2   89[BANK0 ] PTR unsigned char 
 40363 ;;		 -> api_parse@out_idx(1), 
 40364 ;; Auto vars:     Size  Location     Type
 40365 ;;  length          1   91[BANK0 ] unsigned char 
 40366 ;; Return value:  Size  Location     Type
 40367 ;;                  1    wreg      unsigned char 
 40368 ;; Registers used:
 40369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40370 ;; Tracked objects:
 40371 ;;		On entry : 0/0
 40372 ;;		On exit  : 0/0
 40373 ;;		Unchanged: 0/0
 40374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40375 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40378 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40379 ;;Total ram usage:        7 bytes
 40380 ;; Hardware stack levels used:    1
 40381 ;; Hardware stack levels required when called:   15
 40382 ;; This function calls:
 40383 ;;		__parse_jump_steps
 40384 ;;		__parse_set_manual_speed
 40385 ;; This function is called by:
 40386 ;;		_api_parse
 40387 ;; This function uses a non-reentrant model
 40388 ;;
 40389                           
 40390                           	psect	text167
 40391  0140DA                     __ptext167:
 40392                           	opt stack 0
 40393  0140DA                     __parse_command_long:
 40394                           	opt stack 13
 40395                           
 40396                           ;api.c: 437: uint8_t length = 65;
 40397                           
 40398                           ;incstack = 0
 40399  0140DA  0E41               	movlw	65
 40400  0140DC  0100               	movlb	0	; () banked
 40401  0140DE  6FBB               	movwf	__parse_command_long@length& (0+255),b
 40402                           
 40403                           ;api.c: 439: switch(data[0])
 40404  0140E0  D020               	goto	l2324
 40405  0140E2                     
 40406                           ; BSR set to: 0
 40407                           ;api.c: 446: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 40408                           
 40409                           ; BSR set to: 0
 40410  0140E2  C0B5  F0A9         	movff	__parse_command_long@data,__parse_jump_steps@data
 40411  0140E6  C0B6  F0AA         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 40412  0140EA  C0B7  F0AB         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 40413  0140EE  C0B8  F0AC         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 40414  0140F2  C0B9  F0AD         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 40415  0140F6  C0BA  F0AE         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 40416  0140FA  EC4D  F07C         	call	__parse_jump_steps	;wreg free
 40417  0140FE  D00E               	goto	L63
 40418  014100                     
 40419                           ; BSR set to: 0
 40420                           ;api.c: 450: length = _parse_set_manual_speed(data, out_buffer, out_idx_ptr);
 40421                           
 40422                           ; BSR set to: 0
 40423  014100  C0B5  F064         	movff	__parse_command_long@data,__parse_set_manual_speed@data
 40424  014104  C0B6  F065         	movff	__parse_command_long@data+1,__parse_set_manual_speed@data+1
 40425  014108  C0B7  F066         	movff	__parse_command_long@out_buffer,__parse_set_manual_speed@out_buffer
 40426  01410C  C0B8  F067         	movff	__parse_command_long@out_buffer+1,__parse_set_manual_speed@out_buffer+1
 40427  014110  C0B9  F068         	movff	__parse_command_long@out_idx_ptr,__parse_set_manual_speed@out_idx_ptr
 40428  014114  C0BA  F069         	movff	__parse_command_long@out_idx_ptr+1,__parse_set_manual_speed@out_idx_ptr+1
 40429  014118  ECFE  F09B         	call	__parse_set_manual_speed	;wreg free
 40430  01411C                     L63:
 40431  01411C  0100               	movlb	0	; () banked
 40432  01411E  6FBB               	movwf	__parse_command_long@length& (0+255),b
 40433                           
 40434                           ; BSR set to: 0
 40435                           ;api.c: 452: }
 40436                           
 40437                           ;api.c: 451: break;
 40438  014120  D00B               	goto	l2326
 40439  014122                     l2324:
 40440                           
 40441                           ; BSR set to: 0
 40442                           
 40443                           ; BSR set to: 0
 40444  014122  C0B5  FFD9         	movff	__parse_command_long@data,fsr2l
 40445  014126  C0B6  FFDA         	movff	__parse_command_long@data+1,fsr2h
 40446  01412A  50DF               	movf	indf2,w,c
 40447                           
 40448                           ; Switch size 1, requested type "space"
 40449                           ; Number of cases is 2, Range of values is 144 to 146
 40450                           ; switch strategies available:
 40451                           ; Name         Instructions Cycles
 40452                           ; simple_byte            7     4 (average)
 40453                           ;	Chosen strategy is simple_byte
 40454  01412C  0A90               	xorlw	144	; case 144
 40455  01412E  B4D8               	btfsc	status,2,c
 40456  014130  D7D8               	goto	l2325
 40457  014132  0A02               	xorlw	2	; case 146
 40458  014134  B4D8               	btfsc	status,2,c
 40459  014136  D7E4               	goto	l2327
 40460  014138                     l2326:
 40461                           
 40462                           ; BSR set to: 0
 40463                           ;api.c: 456: return length;
 40464                           
 40465                           ; BSR set to: 0
 40466  014138  51BB               	movf	__parse_command_long@length& (0+255),w,b
 40467  01413A  0012               	return	
 40468  01413C                     __end_of__parse_command_long:
 40469                           	opt stack 0
 40470                           tosu	equ	0xFFF
 40471                           tosh	equ	0xFFE
 40472                           tosl	equ	0xFFD
 40473                           pclath	equ	0xFFA
 40474                           tblptru	equ	0xFF8
 40475                           tblptrh	equ	0xFF7
 40476                           tblptrl	equ	0xFF6
 40477                           tablat	equ	0xFF5
 40478                           prodh	equ	0xFF4
 40479                           prodl	equ	0xFF3
 40480                           intcon	equ	0xFF2
 40481                           indf0	equ	0xFEF
 40482                           postinc0	equ	0xFEE
 40483                           fsr0h	equ	0xFEA
 40484                           fsr0l	equ	0xFE9
 40485                           wreg	equ	0xFE8
 40486                           indf1	equ	0xFE7
 40487                           postinc1	equ	0xFE6
 40488                           postdec1	equ	0xFE5
 40489                           plusw1	equ	0xFE3
 40490                           fsr1h	equ	0xFE2
 40491                           fsr1l	equ	0xFE1
 40492                           indf2	equ	0xFDF
 40493                           postinc2	equ	0xFDE
 40494                           postdec2	equ	0xFDD
 40495                           plusw2	equ	0xFDB
 40496                           fsr2h	equ	0xFDA
 40497                           fsr2l	equ	0xFD9
 40498                           status	equ	0xFD8
 40499                           
 40500 ;; *************** function __parse_set_manual_speed *****************
 40501 ;; Defined at:
 40502 ;;		line 550 in file "api.c"
 40503 ;; Parameters:    Size  Location     Type
 40504 ;;  data            2    4[BANK0 ] PTR unsigned char 
 40505 ;;		 -> ReceivedDataBuffer(64), 
 40506 ;;  out_buffer      2    6[BANK0 ] PTR unsigned char 
 40507 ;;		 -> ToSendDataBuffer(64), 
 40508 ;;  out_idx_ptr     2    8[BANK0 ] PTR unsigned char 
 40509 ;;		 -> api_parse@out_idx(1), 
 40510 ;; Auto vars:     Size  Location     Type
 40511 ;;  new_speed       2   11[BANK0 ] unsigned int 
 40512 ;; Return value:  Size  Location     Type
 40513 ;;                  1    wreg      unsigned char 
 40514 ;; Registers used:
 40515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40516 ;; Tracked objects:
 40517 ;;		On entry : 0/0
 40518 ;;		On exit  : 0/0
 40519 ;;		Unchanged: 0/0
 40520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40521 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40522 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40523 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40524 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40525 ;;Total ram usage:        9 bytes
 40526 ;; Hardware stack levels used:    1
 40527 ;; Hardware stack levels required when called:   12
 40528 ;; This function calls:
 40529 ;;		_motor_set_manual_speed
 40530 ;; This function is called by:
 40531 ;;		__parse_command_long
 40532 ;; This function uses a non-reentrant model
 40533 ;;
 40534                           
 40535                           	psect	text168
 40536  0137FC                     __ptext168:
 40537                           	opt stack 0
 40538  0137FC                     __parse_set_manual_speed:
 40539                           	opt stack 15
 40540                           
 40541                           ;api.c: 554: uint16_t new_speed;;api.c: 556: new_speed = data[1];
 40542                           
 40543                           ; BSR set to: 0
 40544                           ;incstack = 0
 40545  0137FC  0100               	movlb	0	; () banked
 40546  0137FE  EE20 F001          	lfsr	2,1
 40547  013802  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 40548  013804  26D9               	addwf	fsr2l,f,c
 40549  013806  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 40550  013808  22DA               	addwfc	fsr2h,f,c
 40551  01380A  50DF               	movf	indf2,w,c
 40552  01380C  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 40553  01380E  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 40554  013810  6F6B               	movwf	__parse_set_manual_speed@new_speed& (0+255),b
 40555  013812  6B6C               	clrf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 40556                           
 40557                           ; BSR set to: 0
 40558                           ;api.c: 557: new_speed <<= 8;
 40559  013814  516B               	movf	__parse_set_manual_speed@new_speed& (0+255),w,b
 40560  013816  6F6C               	movwf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 40561  013818  6B6B               	clrf	__parse_set_manual_speed@new_speed& (0+255),b
 40562                           
 40563                           ; BSR set to: 0
 40564                           ;api.c: 558: new_speed |= data[2];
 40565  01381A  EE20 F002          	lfsr	2,2
 40566  01381E  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 40567  013820  26D9               	addwf	fsr2l,f,c
 40568  013822  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 40569  013824  22DA               	addwfc	fsr2h,f,c
 40570  013826  50DF               	movf	indf2,w,c
 40571  013828  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 40572  01382A  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 40573  01382C  136B               	iorwf	__parse_set_manual_speed@new_speed& (0+255),f,b
 40574                           
 40575                           ; BSR set to: 0
 40576                           ;api.c: 560: motor_set_manual_speed(new_speed);
 40577  01382E  C06B  F062         	movff	__parse_set_manual_speed@new_speed,motor_set_manual_speed@new_speed
 40578  013832  C06C  F063         	movff	__parse_set_manual_speed@new_speed+1,motor_set_manual_speed@new_speed+1
 40579  013836  EC10  F0A5         	call	_motor_set_manual_speed	;wreg free
 40580                           
 40581                           ;api.c: 563: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 40582  01383A  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 40583  01383E  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 40584  013842  50DF               	movf	indf2,w,c
 40585  013844  B4D8               	btfsc	status,2,c
 40586  013846  D01A               	goto	l2343
 40587  013848  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 40588  01384C  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 40589  013850  0E3F               	movlw	63
 40590  013852  60DF               	cpfslt	indf2,c
 40591  013854  D013               	goto	l2343
 40592                           
 40593                           ;api.c: 564: {;api.c: 565: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_MANUAL_SPEED;
 40594  013856  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 40595  01385A  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 40596  01385E  CFDF F06A          	movff	indf2,??__parse_set_manual_speed
 40597  013862  0E01               	movlw	1
 40598  013864  26DF               	addwf	indf2,f,c
 40599  013866  0100               	movlb	0	; () banked
 40600  013868  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 40601  01386A  0D01               	mullw	1
 40602  01386C  50F3               	movf	prodl,w,c
 40603  01386E  2566               	addwf	__parse_set_manual_speed@out_buffer& (0+255),w,b
 40604  013870  6ED9               	movwf	fsr2l,c
 40605  013872  50F4               	movf	prodh,w,c
 40606  013874  2167               	addwfc	(__parse_set_manual_speed@out_buffer+1)& (0+255),w,b
 40607  013876  6EDA               	movwf	fsr2h,c
 40608  013878  0E92               	movlw	146
 40609  01387A  6EDF               	movwf	indf2,c
 40610  01387C                     l2343:
 40611                           
 40612                           ;api.c: 566: };api.c: 568: return 3;
 40613                           
 40614                           ; BSR set to: 0
 40615  01387C  0E03               	movlw	3
 40616  01387E  0012               	return	
 40617  013880                     __end_of__parse_set_manual_speed:
 40618                           	opt stack 0
 40619                           tosu	equ	0xFFF
 40620                           tosh	equ	0xFFE
 40621                           tosl	equ	0xFFD
 40622                           pclath	equ	0xFFA
 40623                           tblptru	equ	0xFF8
 40624                           tblptrh	equ	0xFF7
 40625                           tblptrl	equ	0xFF6
 40626                           tablat	equ	0xFF5
 40627                           prodh	equ	0xFF4
 40628                           prodl	equ	0xFF3
 40629                           intcon	equ	0xFF2
 40630                           indf0	equ	0xFEF
 40631                           postinc0	equ	0xFEE
 40632                           fsr0h	equ	0xFEA
 40633                           fsr0l	equ	0xFE9
 40634                           wreg	equ	0xFE8
 40635                           indf1	equ	0xFE7
 40636                           postinc1	equ	0xFE6
 40637                           postdec1	equ	0xFE5
 40638                           plusw1	equ	0xFE3
 40639                           fsr1h	equ	0xFE2
 40640                           fsr1l	equ	0xFE1
 40641                           indf2	equ	0xFDF
 40642                           postinc2	equ	0xFDE
 40643                           postdec2	equ	0xFDD
 40644                           plusw2	equ	0xFDB
 40645                           fsr2h	equ	0xFDA
 40646                           fsr2l	equ	0xFD9
 40647                           status	equ	0xFD8
 40648                           
 40649 ;; *************** function _motor_set_manual_speed *****************
 40650 ;; Defined at:
 40651 ;;		line 555 in file "motor.c"
 40652 ;; Parameters:    Size  Location     Type
 40653 ;;  new_speed       2    2[BANK0 ] unsigned int 
 40654 ;; Auto vars:     Size  Location     Type
 40655 ;;		None
 40656 ;; Return value:  Size  Location     Type
 40657 ;;                  1    wreg      void 
 40658 ;; Registers used:
 40659 ;;		wreg, status,2, status,0, cstack
 40660 ;; Tracked objects:
 40661 ;;		On entry : 0/0
 40662 ;;		On exit  : 0/0
 40663 ;;		Unchanged: 0/0
 40664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40665 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40668 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40669 ;;Total ram usage:        2 bytes
 40670 ;; Hardware stack levels used:    1
 40671 ;; Hardware stack levels required when called:   11
 40672 ;; This function calls:
 40673 ;;		_motor_change_speed
 40674 ;; This function is called by:
 40675 ;;		__parse_set_manual_speed
 40676 ;;		_motor_increase_manual_speed
 40677 ;;		_motor_decrease_manual_speed
 40678 ;; This function uses a non-reentrant model
 40679 ;;
 40680                           
 40681                           	psect	text169
 40682  014A20                     __ptext169:
 40683                           	opt stack 0
 40684  014A20                     _motor_set_manual_speed:
 40685                           	opt stack 17
 40686                           
 40687                           ;motor.c: 557: if(new_speed>config.maximum_speed_manual)
 40688                           
 40689                           ;incstack = 0
 40690  014A20  0100               	movlb	0	; () banked
 40691  014A22  5162               	movf	motor_set_manual_speed@new_speed& (0+255),w,b
 40692  014A24  0101               	movlb	1	; () banked
 40693  014A26  5DB4               	subwf	(_config+19)& (0+255),w,b
 40694  014A28  0100               	movlb	0	; () banked
 40695  014A2A  5163               	movf	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 40696  014A2C  0101               	movlb	1	; () banked
 40697  014A2E  59B5               	subwfb	(_config+20)& (0+255),w,b
 40698  014A30  B0D8               	btfsc	status,0,c
 40699  014A32  D005               	goto	l2527
 40700                           
 40701                           ; BSR set to: 1
 40702                           ;motor.c: 558: {;motor.c: 559: os.manual_speed = config.maximum_speed_manual;
 40703  014A34  C1B4  F194         	movff	_config+19,_os+35	;volatile
 40704  014A38  C1B5  F195         	movff	_config+20,_os+36	;volatile
 40705                           
 40706                           ;motor.c: 560: }
 40707  014A3C  D012               	goto	l2530
 40708  014A3E                     l2527:
 40709                           
 40710                           ; BSR set to: 1
 40711                           ;motor.c: 561: else if(new_speed<config.minimum_speed)
 40712                           
 40713                           ; BSR set to: 1
 40714  014A3E  51AA               	movf	(_config+9)& (0+255),w,b
 40715  014A40  0100               	movlb	0	; () banked
 40716  014A42  5D62               	subwf	motor_set_manual_speed@new_speed& (0+255),w,b
 40717  014A44  0101               	movlb	1	; () banked
 40718  014A46  51AB               	movf	(_config+10)& (0+255),w,b
 40719  014A48  0100               	movlb	0	; () banked
 40720  014A4A  5963               	subwfb	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 40721  014A4C  B0D8               	btfsc	status,0,c
 40722  014A4E  D005               	goto	l2529
 40723                           
 40724                           ; BSR set to: 0
 40725                           ;motor.c: 562: {;motor.c: 563: os.manual_speed = config.minimum_speed;
 40726  014A50  C1AA  F194         	movff	_config+9,_os+35	;volatile
 40727  014A54  C1AB  F195         	movff	_config+10,_os+36	;volatile
 40728                           
 40729                           ;motor.c: 564: }
 40730  014A58  D004               	goto	l2530
 40731  014A5A                     l2529:
 40732                           
 40733                           ; BSR set to: 0
 40734                           ;motor.c: 565: else;motor.c: 566: {;motor.c: 567: os.manual_speed = new_speed;
 40735  014A5A  C062  F194         	movff	motor_set_manual_speed@new_speed,_os+35	;volatile
 40736  014A5E  C063  F195         	movff	motor_set_manual_speed@new_speed+1,_os+36	;volatile
 40737  014A62                     l2530:
 40738                           
 40739                           ;motor.c: 568: };motor.c: 569: motor_change_speed(new_speed);
 40740                           
 40741                           ; BSR set to: 0
 40742                           
 40743                           ; BSR set to: 0
 40744  014A62  C062  F060         	movff	motor_set_manual_speed@new_speed,motor_change_speed@new_speed
 40745  014A66  C063  F061         	movff	motor_set_manual_speed@new_speed+1,motor_change_speed@new_speed+1
 40746  014A6A  EC51  F0AB         	call	_motor_change_speed	;wreg free
 40747  014A6E  0012               	return		;funcret
 40748  014A70                     __end_of_motor_set_manual_speed:
 40749                           	opt stack 0
 40750                           tosu	equ	0xFFF
 40751                           tosh	equ	0xFFE
 40752                           tosl	equ	0xFFD
 40753                           pclath	equ	0xFFA
 40754                           tblptru	equ	0xFF8
 40755                           tblptrh	equ	0xFF7
 40756                           tblptrl	equ	0xFF6
 40757                           tablat	equ	0xFF5
 40758                           prodh	equ	0xFF4
 40759                           prodl	equ	0xFF3
 40760                           intcon	equ	0xFF2
 40761                           indf0	equ	0xFEF
 40762                           postinc0	equ	0xFEE
 40763                           fsr0h	equ	0xFEA
 40764                           fsr0l	equ	0xFE9
 40765                           wreg	equ	0xFE8
 40766                           indf1	equ	0xFE7
 40767                           postinc1	equ	0xFE6
 40768                           postdec1	equ	0xFE5
 40769                           plusw1	equ	0xFE3
 40770                           fsr1h	equ	0xFE2
 40771                           fsr1l	equ	0xFE1
 40772                           indf2	equ	0xFDF
 40773                           postinc2	equ	0xFDE
 40774                           postdec2	equ	0xFDD
 40775                           plusw2	equ	0xFDB
 40776                           fsr2h	equ	0xFDA
 40777                           fsr2l	equ	0xFD9
 40778                           status	equ	0xFD8
 40779                           
 40780 ;; *************** function _motor_change_speed *****************
 40781 ;; Defined at:
 40782 ;;		line 572 in file "motor.c"
 40783 ;; Parameters:    Size  Location     Type
 40784 ;;  new_speed       2    0[BANK0 ] unsigned int 
 40785 ;; Auto vars:     Size  Location     Type
 40786 ;;		None
 40787 ;; Return value:  Size  Location     Type
 40788 ;;                  1    wreg      void 
 40789 ;; Registers used:
 40790 ;;		None
 40791 ;; Tracked objects:
 40792 ;;		On entry : 0/0
 40793 ;;		On exit  : 0/0
 40794 ;;		Unchanged: 0/0
 40795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40799 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40800 ;;Total ram usage:        2 bytes
 40801 ;; Hardware stack levels used:    1
 40802 ;; Hardware stack levels required when called:   10
 40803 ;; This function calls:
 40804 ;;		Nothing
 40805 ;; This function is called by:
 40806 ;;		_motor_set_manual_speed
 40807 ;;		_encoder_statemachine
 40808 ;; This function uses a non-reentrant model
 40809 ;;
 40810                           
 40811                           	psect	text170
 40812  0156A2                     __ptext170:
 40813                           	opt stack 0
 40814  0156A2                     _motor_change_speed:
 40815                           	opt stack 17
 40816                           
 40817                           ;motor.c: 574: motor_maximum_speed = new_speed;
 40818                           
 40819                           ;incstack = 0
 40820  0156A2  C060  F13F         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 40821  0156A6  C061  F140         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 40822  0156AA  0012               	return		;funcret
 40823  0156AC                     __end_of_motor_change_speed:
 40824                           	opt stack 0
 40825                           tosu	equ	0xFFF
 40826                           tosh	equ	0xFFE
 40827                           tosl	equ	0xFFD
 40828                           pclath	equ	0xFFA
 40829                           tblptru	equ	0xFF8
 40830                           tblptrh	equ	0xFF7
 40831                           tblptrl	equ	0xFF6
 40832                           tablat	equ	0xFF5
 40833                           prodh	equ	0xFF4
 40834                           prodl	equ	0xFF3
 40835                           intcon	equ	0xFF2
 40836                           indf0	equ	0xFEF
 40837                           postinc0	equ	0xFEE
 40838                           fsr0h	equ	0xFEA
 40839                           fsr0l	equ	0xFE9
 40840                           wreg	equ	0xFE8
 40841                           indf1	equ	0xFE7
 40842                           postinc1	equ	0xFE6
 40843                           postdec1	equ	0xFE5
 40844                           plusw1	equ	0xFE3
 40845                           fsr1h	equ	0xFE2
 40846                           fsr1l	equ	0xFE1
 40847                           indf2	equ	0xFDF
 40848                           postinc2	equ	0xFDE
 40849                           postdec2	equ	0xFDD
 40850                           plusw2	equ	0xFDB
 40851                           fsr2h	equ	0xFDA
 40852                           fsr2l	equ	0xFD9
 40853                           status	equ	0xFD8
 40854                           
 40855 ;; *************** function __parse_jump_steps *****************
 40856 ;; Defined at:
 40857 ;;		line 482 in file "api.c"
 40858 ;; Parameters:    Size  Location     Type
 40859 ;;  data            2   73[BANK0 ] PTR unsigned char 
 40860 ;;		 -> ReceivedDataBuffer(64), 
 40861 ;;  out_buffer      2   75[BANK0 ] PTR unsigned char 
 40862 ;;		 -> ToSendDataBuffer(64), 
 40863 ;;  out_idx_ptr     2   77[BANK0 ] PTR unsigned char 
 40864 ;;		 -> api_parse@out_idx(1), 
 40865 ;; Auto vars:     Size  Location     Type
 40866 ;;  number_of_st    4   81[BANK0 ] long 
 40867 ;;  return_value    1   80[BANK0 ] unsigned char 
 40868 ;; Return value:  Size  Location     Type
 40869 ;;                  1    wreg      unsigned char 
 40870 ;; Registers used:
 40871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40872 ;; Tracked objects:
 40873 ;;		On entry : 0/0
 40874 ;;		On exit  : 0/0
 40875 ;;		Unchanged: 0/0
 40876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40877 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40878 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40879 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40880 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40881 ;;Total ram usage:       12 bytes
 40882 ;; Hardware stack levels used:    1
 40883 ;; Hardware stack levels required when called:   14
 40884 ;; This function calls:
 40885 ;;		_motor_schedule_command
 40886 ;; This function is called by:
 40887 ;;		__parse_command_long
 40888 ;; This function uses a non-reentrant model
 40889 ;;
 40890                           
 40891                           	psect	text171
 40892  00F89A                     __ptext171:
 40893                           	opt stack 0
 40894  00F89A                     __parse_jump_steps:
 40895                           	opt stack 13
 40896                           
 40897                           ;api.c: 486: uint8_t return_value;;api.c: 487: int32_t number_of_steps;;api.c: 489: numb
      +                          er_of_steps = data[1];
 40898                           
 40899                           ;incstack = 0
 40900  00F89A  0100               	movlb	0	; () banked
 40901  00F89C  EE20 F001          	lfsr	2,1
 40902  00F8A0  51A9               	movf	__parse_jump_steps@data& (0+255),w,b
 40903  00F8A2  26D9               	addwf	fsr2l,f,c
 40904  00F8A4  51AA               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 40905  00F8A6  22DA               	addwfc	fsr2h,f,c
 40906  00F8A8  50DF               	movf	indf2,w,c
 40907  00F8AA  6FAF               	movwf	??__parse_jump_steps& (0+255),b
 40908  00F8AC  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 40909  00F8AE  6FB1               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 40910  00F8B0  6BB2               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 40911  00F8B2  6BB3               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 40912  00F8B4  6BB4               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 40913                           
 40914                           ; BSR set to: 0
 40915                           ;api.c: 490: number_of_steps <<= 8;
 40916  00F8B6  C0B3  F0B4         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 40917  00F8BA  C0B2  F0B3         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 40918  00F8BE  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 40919  00F8C2  6BB1               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 40920                           
 40921                           ; BSR set to: 0
 40922                           ;api.c: 491: number_of_steps |= data[2];
 40923  00F8C4  EE20 F002          	lfsr	2,2
 40924  00F8C8  51A9               	movf	__parse_jump_steps@data& (0+255),w,b
 40925  00F8CA  26D9               	addwf	fsr2l,f,c
 40926  00F8CC  51AA               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 40927  00F8CE  22DA               	addwfc	fsr2h,f,c
 40928  00F8D0  50DF               	movf	indf2,w,c
 40929  00F8D2  6FAF               	movwf	??__parse_jump_steps& (0+255),b
 40930  00F8D4  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 40931  00F8D6  13B1               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 40932                           
 40933                           ;api.c: 492: number_of_steps <<= 8;
 40934  00F8D8  C0B3  F0B4         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 40935  00F8DC  C0B2  F0B3         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 40936  00F8E0  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 40937  00F8E4  6BB1               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 40938                           
 40939                           ; BSR set to: 0
 40940                           ;api.c: 493: number_of_steps |= data[3];
 40941  00F8E6  EE20 F003          	lfsr	2,3
 40942  00F8EA  51A9               	movf	__parse_jump_steps@data& (0+255),w,b
 40943  00F8EC  26D9               	addwf	fsr2l,f,c
 40944  00F8EE  51AA               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 40945  00F8F0  22DA               	addwfc	fsr2h,f,c
 40946  00F8F2  50DF               	movf	indf2,w,c
 40947  00F8F4  6FAF               	movwf	??__parse_jump_steps& (0+255),b
 40948  00F8F6  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 40949  00F8F8  13B1               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 40950                           
 40951                           ; BSR set to: 0
 40952                           ;api.c: 494: number_of_steps <<= 8;
 40953  00F8FA  C0B3  F0B4         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 40954  00F8FE  C0B2  F0B3         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 40955  00F902  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 40956  00F906  6BB1               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 40957                           
 40958                           ;api.c: 495: number_of_steps |= data[4];
 40959  00F908  EE20 F004          	lfsr	2,4
 40960  00F90C  51A9               	movf	__parse_jump_steps@data& (0+255),w,b
 40961  00F90E  26D9               	addwf	fsr2l,f,c
 40962  00F910  51AA               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 40963  00F912  22DA               	addwfc	fsr2h,f,c
 40964  00F914  50DF               	movf	indf2,w,c
 40965  00F916  6FAF               	movwf	??__parse_jump_steps& (0+255),b
 40966  00F918  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 40967  00F91A  13B1               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 40968                           
 40969                           ; BSR set to: 0
 40970                           ;api.c: 497: if(number_of_steps>0)
 40971  00F91C  BFB4               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 40972  00F91E  D019               	goto	l2331
 40973  00F920  51B4               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 40974  00F922  11B3               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 40975  00F924  11B2               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 40976  00F926  E103               	bnz	u13700
 40977  00F928  05B1               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 40978  00F92A  A0D8               	btfss	status,0,c
 40979  00F92C  D012               	goto	l2331
 40980  00F92E                     u13700:
 40981                           
 40982                           ; BSR set to: 0
 40983                           ;api.c: 498: {;api.c: 499: return_value = motor_schedule_command(MOTOR_DIRECTION_CW, (ui
      +                          nt32_t) number_of_steps, 0, MOTOR_MOVE_TYPE_NORMAL);
 40984  00F92E  C0B1  F0A1         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 40985  00F932  C0B2  F0A2         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 40986  00F936  C0B3  F0A3         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 40987  00F93A  C0B4  F0A4         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 40988  00F93E  0E00               	movlw	0
 40989  00F940  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40990  00F942  0E00               	movlw	0
 40991  00F944  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40992  00F946  0E00               	movlw	0
 40993  00F948  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40994  00F94A  0E01               	movlw	1
 40995  00F94C  ECA3  F092         	call	_motor_schedule_command
 40996  00F950  D019               	goto	L64
 40997  00F952                     l2331:
 40998                           
 40999                           ; BSR set to: 0
 41000                           ;api.c: 501: else;api.c: 502: {;api.c: 503: number_of_steps = -number_of_steps;
 41001                           
 41002                           ; BSR set to: 0
 41003  00F952  1FB4               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 41004  00F954  1FB3               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 41005  00F956  1FB2               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 41006  00F958  6DB1               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 41007  00F95A  0E00               	movlw	0
 41008  00F95C  23B2               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 41009  00F95E  23B3               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 41010  00F960  23B4               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 41011                           
 41012                           ; BSR set to: 0
 41013                           ;api.c: 504: return_value = motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t) numbe
      +                          r_of_steps, 0, MOTOR_MOVE_TYPE_NORMAL);
 41014  00F962  C0B1  F0A1         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 41015  00F966  C0B2  F0A2         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 41016  00F96A  C0B3  F0A3         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 41017  00F96E  C0B4  F0A4         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 41018  00F972  0E00               	movlw	0
 41019  00F974  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41020  00F976  0E00               	movlw	0
 41021  00F978  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 41022  00F97A  0E00               	movlw	0
 41023  00F97C  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 41024  00F97E  0EFF               	movlw	255
 41025  00F980  ECA3  F092         	call	_motor_schedule_command
 41026  00F984                     L64:
 41027  00F984  0100               	movlb	0	; () banked
 41028  00F986  6FB0               	movwf	__parse_jump_steps@return_value& (0+255),b
 41029                           
 41030                           ; BSR set to: 0
 41031                           ;api.c: 505: };api.c: 508: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 41032                           
 41033                           ; BSR set to: 0
 41034  00F988  C0AD  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41035  00F98C  C0AE  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41036  00F990  50DF               	movf	indf2,w,c
 41037  00F992  B4D8               	btfsc	status,2,c
 41038  00F994  D02B               	goto	l2333
 41039                           
 41040                           ; BSR set to: 0
 41041  00F996  C0AD  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41042  00F99A  C0AE  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41043  00F99E  0E3E               	movlw	62
 41044  00F9A0  60DF               	cpfslt	indf2,c
 41045  00F9A2  D024               	goto	l2333
 41046                           
 41047                           ; BSR set to: 0
 41048                           ;api.c: 509: {;api.c: 510: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 41049  00F9A4  C0AD  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41050  00F9A8  C0AE  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41051  00F9AC  CFDF F0AF          	movff	indf2,??__parse_jump_steps
 41052  00F9B0  0E01               	movlw	1
 41053  00F9B2  26DF               	addwf	indf2,f,c
 41054  00F9B4  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 41055  00F9B6  0D01               	mullw	1
 41056  00F9B8  50F3               	movf	prodl,w,c
 41057  00F9BA  25AB               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 41058  00F9BC  6ED9               	movwf	fsr2l,c
 41059  00F9BE  50F4               	movf	prodh,w,c
 41060  00F9C0  21AC               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 41061  00F9C2  6EDA               	movwf	fsr2h,c
 41062  00F9C4  0E90               	movlw	144
 41063  00F9C6  6EDF               	movwf	indf2,c
 41064                           
 41065                           ;api.c: 511: out_buffer[(*out_idx_ptr)++] = return_value;
 41066  00F9C8  C0AD  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41067  00F9CC  C0AE  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41068  00F9D0  CFDF F0AF          	movff	indf2,??__parse_jump_steps
 41069  00F9D4  0E01               	movlw	1
 41070  00F9D6  26DF               	addwf	indf2,f,c
 41071  00F9D8  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 41072  00F9DA  0D01               	mullw	1
 41073  00F9DC  50F3               	movf	prodl,w,c
 41074  00F9DE  25AB               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 41075  00F9E0  6ED9               	movwf	fsr2l,c
 41076  00F9E2  50F4               	movf	prodh,w,c
 41077  00F9E4  21AC               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 41078  00F9E6  6EDA               	movwf	fsr2h,c
 41079  00F9E8  C0B0  FFDF         	movff	__parse_jump_steps@return_value,indf2
 41080  00F9EC                     l2333:
 41081                           
 41082                           ; BSR set to: 0
 41083                           ;api.c: 512: };api.c: 514: return 5;
 41084                           
 41085                           ; BSR set to: 0
 41086  00F9EC  0E05               	movlw	5
 41087  00F9EE  0012               	return	
 41088  00F9F0                     __end_of__parse_jump_steps:
 41089                           	opt stack 0
 41090                           tosu	equ	0xFFF
 41091                           tosh	equ	0xFFE
 41092                           tosl	equ	0xFFD
 41093                           pclath	equ	0xFFA
 41094                           tblptru	equ	0xFF8
 41095                           tblptrh	equ	0xFF7
 41096                           tblptrl	equ	0xFF6
 41097                           tablat	equ	0xFF5
 41098                           prodh	equ	0xFF4
 41099                           prodl	equ	0xFF3
 41100                           intcon	equ	0xFF2
 41101                           indf0	equ	0xFEF
 41102                           postinc0	equ	0xFEE
 41103                           fsr0h	equ	0xFEA
 41104                           fsr0l	equ	0xFE9
 41105                           wreg	equ	0xFE8
 41106                           indf1	equ	0xFE7
 41107                           postinc1	equ	0xFE6
 41108                           postdec1	equ	0xFE5
 41109                           plusw1	equ	0xFE3
 41110                           fsr1h	equ	0xFE2
 41111                           fsr1l	equ	0xFE1
 41112                           indf2	equ	0xFDF
 41113                           postinc2	equ	0xFDE
 41114                           postdec2	equ	0xFDD
 41115                           plusw2	equ	0xFDB
 41116                           fsr2h	equ	0xFDA
 41117                           fsr2l	equ	0xFD9
 41118                           status	equ	0xFD8
 41119                           
 41120 ;; *************** function _motor_schedule_command *****************
 41121 ;; Defined at:
 41122 ;;		line 124 in file "motor.c"
 41123 ;; Parameters:    Size  Location     Type
 41124 ;;  direction       1    wreg     enum E6622
 41125 ;;  distance_in_    4   65[BANK0 ] unsigned long 
 41126 ;;  speed           2   69[BANK0 ] unsigned int 
 41127 ;;  type            1   71[BANK0 ] enum E6630
 41128 ;; Auto vars:     Size  Location     Type
 41129 ;;  direction       1   72[BANK0 ] enum E6622
 41130 ;; Return value:  Size  Location     Type
 41131 ;;                  1    wreg      unsigned char 
 41132 ;; Registers used:
 41133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41134 ;; Tracked objects:
 41135 ;;		On entry : 0/0
 41136 ;;		On exit  : 0/0
 41137 ;;		Unchanged: 0/0
 41138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41139 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41140 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41142 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41143 ;;Total ram usage:        8 bytes
 41144 ;; Hardware stack levels used:    1
 41145 ;; Hardware stack levels required when called:   13
 41146 ;; This function calls:
 41147 ;;		__motor_run
 41148 ;;		_motor_items_in_cue
 41149 ;; This function is called by:
 41150 ;;		__parse_command_short
 41151 ;;		__parse_jump_steps
 41152 ;;		_motor_go_to_steps_position
 41153 ;;		_motor_arc_move
 41154 ;;		_motor_set_zero
 41155 ;;		_encoder_statemachine
 41156 ;;		_motor_move_steps_with_overshoot
 41157 ;; This function uses a non-reentrant model
 41158 ;;
 41159                           
 41160                           	psect	text172
 41161  012546                     __ptext172:
 41162                           	opt stack 0
 41163  012546                     _motor_schedule_command:
 41164                           	opt stack 15
 41165                           
 41166                           ; BSR set to: 0
 41167                           ;incstack = 0
 41168                           ;motor_schedule_command@direction stored from wreg
 41169  012546  0100               	movlb	0	; () banked
 41170  012548  6FA8               	movwf	motor_schedule_command@direction& (0+255),b
 41171                           
 41172                           ;motor.c: 126: if((motor_items_in_cue()==0) && (os.busy==0))
 41173  01254A  EC32  F0AB         	call	_motor_items_in_cue	;wreg free
 41174  01254E  0900               	iorlw	0
 41175  012550  A4D8               	btfss	status,2,c
 41176  012552  D018               	goto	l2446
 41177  012554  0101               	movlb	1	; () banked
 41178  012556  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 41179  012558  A4D8               	btfss	status,2,c
 41180  01255A  D014               	goto	l2446
 41181                           
 41182                           ; BSR set to: 1
 41183                           ;motor.c: 127: {;motor.c: 130: _motor_run(direction, distance_in_steps, speed, type);
 41184  01255C  C0A1  F08F         	movff	motor_schedule_command@distance_in_steps,__motor_run@distance_in_steps
 41185  012560  C0A2  F090         	movff	motor_schedule_command@distance_in_steps+1,__motor_run@distance_in_steps+1
 41186  012564  C0A3  F091         	movff	motor_schedule_command@distance_in_steps+2,__motor_run@distance_in_steps+2
 41187  012568  C0A4  F092         	movff	motor_schedule_command@distance_in_steps+3,__motor_run@distance_in_steps+3
 41188  01256C  C0A5  F093         	movff	motor_schedule_command@speed,__motor_run@speed
 41189  012570  C0A6  F094         	movff	motor_schedule_command@speed+1,__motor_run@speed+1
 41190  012574  C0A7  F095         	movff	motor_schedule_command@type,__motor_run@type
 41191  012578  0100               	movlb	0	; () banked
 41192  01257A  51A8               	movf	motor_schedule_command@direction& (0+255),w,b
 41193  01257C  ECAD  F062         	call	__motor_run
 41194                           
 41195                           ;motor.c: 132: return 1;
 41196  012580  0E01               	movlw	1
 41197  012582  0012               	return	
 41198  012584                     l2446:
 41199                           
 41200                           ;motor.c: 133: };motor.c: 134: if(motor_items_in_cue()==8-1)
 41201  012584  EC32  F0AB         	call	_motor_items_in_cue	;wreg free
 41202  012588  0A07               	xorlw	7
 41203  01258A  A4D8               	btfss	status,2,c
 41204  01258C  D002               	goto	l2448
 41205                           
 41206                           ;motor.c: 135: {;motor.c: 138: return 0;
 41207  01258E  0E00               	movlw	0
 41208                           
 41209                           ;motor.c: 139: }
 41210  012590  0012               	return	
 41211  012592                     l2448:
 41212                           
 41213                           ;motor.c: 140: else;motor.c: 141: {;motor.c: 143: motor_command_cue[motor_cue_write_inde
      +                          x].direction = direction;
 41214  012592  0101               	movlb	1	; () banked
 41215  012594  5157               	movf	_motor_cue_write_index& (0+255),w,b
 41216  012596  0D08               	mullw	8
 41217  012598  0E00               	movlw	low _motor_command_cue
 41218  01259A  24F3               	addwf	prodl,w,c
 41219  01259C  6ED9               	movwf	fsr2l,c
 41220  01259E  0E03               	movlw	high _motor_command_cue
 41221  0125A0  20F4               	addwfc	prodh,w,c
 41222  0125A2  6EDA               	movwf	fsr2h,c
 41223  0125A4  C0A8  FFDF         	movff	motor_schedule_command@direction,indf2
 41224                           
 41225                           ;motor.c: 144: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 41226  0125A8  5157               	movf	_motor_cue_write_index& (0+255),w,b
 41227  0125AA  0D08               	mullw	8
 41228  0125AC  0E01               	movlw	1
 41229  0125AE  26F3               	addwf	prodl,f,c
 41230  0125B0  0E00               	movlw	0
 41231  0125B2  22F4               	addwfc	prodh,f,c
 41232  0125B4  0E00               	movlw	low _motor_command_cue
 41233  0125B6  24F3               	addwf	prodl,w,c
 41234  0125B8  6ED9               	movwf	fsr2l,c
 41235  0125BA  0E03               	movlw	high _motor_command_cue
 41236  0125BC  20F4               	addwfc	prodh,w,c
 41237  0125BE  6EDA               	movwf	fsr2h,c
 41238  0125C0  C0A1  FFDE         	movff	motor_schedule_command@distance_in_steps,postinc2
 41239  0125C4  C0A2  FFDE         	movff	motor_schedule_command@distance_in_steps+1,postinc2
 41240  0125C8  C0A3  FFDE         	movff	motor_schedule_command@distance_in_steps+2,postinc2
 41241  0125CC  C0A4  FFDE         	movff	motor_schedule_command@distance_in_steps+3,postinc2
 41242                           
 41243                           ;motor.c: 145: motor_command_cue[motor_cue_write_index].speed = speed;
 41244  0125D0  5157               	movf	_motor_cue_write_index& (0+255),w,b
 41245  0125D2  0D08               	mullw	8
 41246  0125D4  0E05               	movlw	5
 41247  0125D6  26F3               	addwf	prodl,f,c
 41248  0125D8  0E00               	movlw	0
 41249  0125DA  22F4               	addwfc	prodh,f,c
 41250  0125DC  0E00               	movlw	low _motor_command_cue
 41251  0125DE  24F3               	addwf	prodl,w,c
 41252  0125E0  6ED9               	movwf	fsr2l,c
 41253  0125E2  0E03               	movlw	high _motor_command_cue
 41254  0125E4  20F4               	addwfc	prodh,w,c
 41255  0125E6  6EDA               	movwf	fsr2h,c
 41256  0125E8  C0A5  FFDE         	movff	motor_schedule_command@speed,postinc2
 41257  0125EC  C0A6  FFDD         	movff	motor_schedule_command@speed+1,postdec2
 41258                           
 41259                           ;motor.c: 146: motor_command_cue[motor_cue_write_index].type = type;
 41260  0125F0  5157               	movf	_motor_cue_write_index& (0+255),w,b
 41261  0125F2  0D08               	mullw	8
 41262  0125F4  0E07               	movlw	7
 41263  0125F6  26F3               	addwf	prodl,f,c
 41264  0125F8  0E00               	movlw	0
 41265  0125FA  22F4               	addwfc	prodh,f,c
 41266  0125FC  0E00               	movlw	low _motor_command_cue
 41267  0125FE  24F3               	addwf	prodl,w,c
 41268  012600  6ED9               	movwf	fsr2l,c
 41269  012602  0E03               	movlw	high _motor_command_cue
 41270  012604  20F4               	addwfc	prodh,w,c
 41271  012606  6EDA               	movwf	fsr2h,c
 41272  012608  C0A7  FFDF         	movff	motor_schedule_command@type,indf2
 41273                           
 41274                           ; BSR set to: 1
 41275                           ;motor.c: 148: ++motor_cue_write_index;
 41276  01260C  2B57               	incf	_motor_cue_write_index& (0+255),f,b
 41277                           
 41278                           ; BSR set to: 1
 41279                           ;motor.c: 150: return 1;
 41280  01260E  0E01               	movlw	1
 41281                           
 41282                           ; BSR set to: 1
 41283  012610  0012               	return	
 41284  012612                     __end_of_motor_schedule_command:
 41285                           	opt stack 0
 41286                           tosu	equ	0xFFF
 41287                           tosh	equ	0xFFE
 41288                           tosl	equ	0xFFD
 41289                           pclath	equ	0xFFA
 41290                           tblptru	equ	0xFF8
 41291                           tblptrh	equ	0xFF7
 41292                           tblptrl	equ	0xFF6
 41293                           tablat	equ	0xFF5
 41294                           prodh	equ	0xFF4
 41295                           prodl	equ	0xFF3
 41296                           intcon	equ	0xFF2
 41297                           indf0	equ	0xFEF
 41298                           postinc0	equ	0xFEE
 41299                           fsr0h	equ	0xFEA
 41300                           fsr0l	equ	0xFE9
 41301                           wreg	equ	0xFE8
 41302                           indf1	equ	0xFE7
 41303                           postinc1	equ	0xFE6
 41304                           postdec1	equ	0xFE5
 41305                           plusw1	equ	0xFE3
 41306                           fsr1h	equ	0xFE2
 41307                           fsr1l	equ	0xFE1
 41308                           indf2	equ	0xFDF
 41309                           postinc2	equ	0xFDE
 41310                           postdec2	equ	0xFDD
 41311                           plusw2	equ	0xFDB
 41312                           fsr2h	equ	0xFDA
 41313                           fsr2l	equ	0xFD9
 41314                           status	equ	0xFD8
 41315                           
 41316 ;; *************** function _motor_items_in_cue *****************
 41317 ;; Defined at:
 41318 ;;		line 119 in file "motor.c"
 41319 ;; Parameters:    Size  Location     Type
 41320 ;;		None
 41321 ;; Auto vars:     Size  Location     Type
 41322 ;;		None
 41323 ;; Return value:  Size  Location     Type
 41324 ;;                  1    wreg      unsigned char 
 41325 ;; Registers used:
 41326 ;;		wreg, status,2, status,0
 41327 ;; Tracked objects:
 41328 ;;		On entry : 0/0
 41329 ;;		On exit  : 0/0
 41330 ;;		Unchanged: 0/0
 41331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41336 ;;Total ram usage:        0 bytes
 41337 ;; Hardware stack levels used:    1
 41338 ;; Hardware stack levels required when called:   10
 41339 ;; This function calls:
 41340 ;;		Nothing
 41341 ;; This function is called by:
 41342 ;;		_motor_schedule_command
 41343 ;;		_motor_process_cue
 41344 ;; This function uses a non-reentrant model
 41345 ;;
 41346                           
 41347                           	psect	text173
 41348  015664                     __ptext173:
 41349                           	opt stack 0
 41350  015664                     _motor_items_in_cue:
 41351                           	opt stack 19
 41352                           
 41353                           ;motor.c: 121: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 41354                           
 41355                           ;incstack = 0
 41356  015664  0101               	movlb	1	; () banked
 41357  015666  5158               	movf	_motor_cue_read_index& (0+255),w,b
 41358  015668  0800               	sublw	0
 41359  01566A  2557               	addwf	_motor_cue_write_index& (0+255),w,b
 41360  01566C  0B07               	andlw	7
 41361  01566E  0012               	return	
 41362  015670                     __end_of_motor_items_in_cue:
 41363                           	opt stack 0
 41364                           tosu	equ	0xFFF
 41365                           tosh	equ	0xFFE
 41366                           tosl	equ	0xFFD
 41367                           pclath	equ	0xFFA
 41368                           tblptru	equ	0xFF8
 41369                           tblptrh	equ	0xFF7
 41370                           tblptrl	equ	0xFF6
 41371                           tablat	equ	0xFF5
 41372                           prodh	equ	0xFF4
 41373                           prodl	equ	0xFF3
 41374                           intcon	equ	0xFF2
 41375                           indf0	equ	0xFEF
 41376                           postinc0	equ	0xFEE
 41377                           fsr0h	equ	0xFEA
 41378                           fsr0l	equ	0xFE9
 41379                           wreg	equ	0xFE8
 41380                           indf1	equ	0xFE7
 41381                           postinc1	equ	0xFE6
 41382                           postdec1	equ	0xFE5
 41383                           plusw1	equ	0xFE3
 41384                           fsr1h	equ	0xFE2
 41385                           fsr1l	equ	0xFE1
 41386                           indf2	equ	0xFDF
 41387                           postinc2	equ	0xFDE
 41388                           postdec2	equ	0xFDD
 41389                           plusw2	equ	0xFDB
 41390                           fsr2h	equ	0xFDA
 41391                           fsr2l	equ	0xFD9
 41392                           status	equ	0xFD8
 41393                           
 41394 ;; *************** function __motor_run *****************
 41395 ;; Defined at:
 41396 ;;		line 210 in file "motor.c"
 41397 ;; Parameters:    Size  Location     Type
 41398 ;;  direction       1    wreg     enum E6622
 41399 ;;  distance_in_    4   47[BANK0 ] unsigned long 
 41400 ;;  speed           2   51[BANK0 ] unsigned int 
 41401 ;;  type            1   53[BANK0 ] enum E6630
 41402 ;; Auto vars:     Size  Location     Type
 41403 ;;  direction       1   58[BANK0 ] enum E6622
 41404 ;;  maximum_dist    4   61[BANK0 ] unsigned long 
 41405 ;;  maximum_dist    2   59[BANK0 ] unsigned int 
 41406 ;; Return value:  Size  Location     Type
 41407 ;;                  1    wreg      void 
 41408 ;; Registers used:
 41409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41410 ;; Tracked objects:
 41411 ;;		On entry : 0/0
 41412 ;;		On exit  : 0/0
 41413 ;;		Unchanged: 0/0
 41414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41415 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41416 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41417 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41418 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41419 ;;Total ram usage:       18 bytes
 41420 ;; Hardware stack levels used:    1
 41421 ;; Hardware stack levels required when called:   12
 41422 ;; This function calls:
 41423 ;;		_motor_calculate_position_in_degrees
 41424 ;;		_motor_steps_from_degrees
 41425 ;; This function is called by:
 41426 ;;		_motor_schedule_command
 41427 ;;		_motor_process_cue
 41428 ;; This function uses a non-reentrant model
 41429 ;;
 41430                           
 41431                           	psect	text174
 41432  00C55A                     __ptext174:
 41433                           	opt stack 0
 41434  00C55A                     __motor_run:
 41435                           	opt stack 17
 41436                           
 41437                           ; BSR set to: 1
 41438                           ;incstack = 0
 41439                           ;__motor_run@direction stored from wreg
 41440  00C55A  0100               	movlb	0	; () banked
 41441  00C55C  6F9A               	movwf	__motor_run@direction& (0+255),b
 41442                           
 41443                           ;motor.c: 212: uint16_t maximum_distance_in_degrees;;motor.c: 213: uint32_t maximum_dist
      +                          ance_in_steps;;motor.c: 216: motor_direction = direction;
 41444  00C55E  C09A  F155         	movff	__motor_run@direction,_motor_direction
 41445                           
 41446                           ;motor.c: 219: if(distance_in_steps==0)
 41447  00C562  0100               	movlb	0	; () banked
 41448  00C564  518F               	movf	__motor_run@distance_in_steps& (0+255),w,b
 41449  00C566  1190               	iorwf	(__motor_run@distance_in_steps+1)& (0+255),w,b
 41450  00C568  1191               	iorwf	(__motor_run@distance_in_steps+2)& (0+255),w,b
 41451  00C56A  1192               	iorwf	(__motor_run@distance_in_steps+3)& (0+255),w,b
 41452  00C56C  A4D8               	btfss	status,2,c
 41453  00C56E  D00A               	goto	l2465
 41454                           
 41455                           ; BSR set to: 0
 41456                           ;motor.c: 220: {;motor.c: 222: motor_final_stepcount = 0xFF000000;
 41457  00C570  0E00               	movlw	0
 41458  00C572  0101               	movlb	1	; () banked
 41459  00C574  6F27               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 41460  00C576  0E00               	movlw	0
 41461  00C578  6F28               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 41462  00C57A  0E00               	movlw	0
 41463  00C57C  6F29               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 41464  00C57E  0EFF               	movlw	255
 41465  00C580  6F2A               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 41466                           
 41467                           ;motor.c: 223: }
 41468  00C582  D008               	goto	l2466
 41469  00C584                     l2465:
 41470                           
 41471                           ; BSR set to: 0
 41472                           ;motor.c: 224: else;motor.c: 225: {;motor.c: 226: motor_final_stepcount = distance_in_st
      +                          eps;
 41473  00C584  C08F  F127         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 41474  00C588  C090  F128         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 41475  00C58C  C091  F129         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 41476  00C590  C092  F12A         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 41477  00C594                     l2466:
 41478                           
 41479                           ;motor.c: 227: };motor.c: 230: if((motor_direction==MOTOR_DIRECTION_CCW) && config.use_c
      +                          cw_limit)
 41480                           
 41481                           ; BSR set to: 0
 41482  00C594  0101               	movlb	1	; () banked
 41483  00C596  2955               	incf	_motor_direction& (0+255),w,b
 41484  00C598  A4D8               	btfss	status,2,c
 41485  00C59A  D071               	goto	l2471
 41486                           
 41487                           ; BSR set to: 1
 41488  00C59C  51BA               	movf	(_config+25)& (0+255),w,b
 41489  00C59E  B4D8               	btfsc	status,2,c
 41490  00C5A0  D06E               	goto	l2471
 41491                           
 41492                           ; BSR set to: 1
 41493                           ;motor.c: 231: {;motor.c: 233: motor_calculate_position_in_degrees();
 41494  00C5A2  EC74  F08E         	call	_motor_calculate_position_in_degrees	;wreg free
 41495                           
 41496                           ;motor.c: 236: if(os.current_position_in_degrees >= config.ccw_limit)
 41497  00C5A6  0101               	movlb	1	; () banked
 41498  00C5A8  51BB               	movf	(_config+26)& (0+255),w,b
 41499  00C5AA  5D7C               	subwf	(_os+11)& (0+255),w,b	;volatile
 41500  00C5AC  51BC               	movf	(_config+27)& (0+255),w,b
 41501  00C5AE  597D               	subwfb	(_os+12)& (0+255),w,b	;volatile
 41502  00C5B0  A0D8               	btfss	status,0,c
 41503  00C5B2  D014               	goto	l2468
 41504                           
 41505                           ; BSR set to: 1
 41506                           ;motor.c: 237: {;motor.c: 238: maximum_distance_in_degrees = os.current_position_in_degr
      +                          ees - config.ccw_limit;
 41507  00C5B4  EE21  F0BB         	lfsr	2,_config+26
 41508  00C5B8  CFDE F096          	movff	postinc2,??__motor_run
 41509  00C5BC  CFDD F097          	movff	postdec2,??__motor_run+1
 41510  00C5C0  0100               	movlb	0	; () banked
 41511  00C5C2  1F96               	comf	??__motor_run& (0+255),f,b
 41512  00C5C4  1F97               	comf	(??__motor_run+1)& (0+255),f,b
 41513  00C5C6  4B96               	infsnz	??__motor_run& (0+255),f,b
 41514  00C5C8  2B97               	incf	(??__motor_run+1)& (0+255),f,b
 41515  00C5CA  0101               	movlb	1	; () banked
 41516  00C5CC  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 41517  00C5CE  0100               	movlb	0	; () banked
 41518  00C5D0  2596               	addwf	??__motor_run& (0+255),w,b
 41519  00C5D2  6F9B               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 41520  00C5D4  0101               	movlb	1	; () banked
 41521  00C5D6  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 41522  00C5D8  0100               	movlb	0	; () banked
 41523  00C5DA  D017               	goto	L65
 41524  00C5DC                     l2468:
 41525                           
 41526                           ;motor.c: 240: else;motor.c: 241: {;motor.c: 243: maximum_distance_in_degrees = 36000 + 
      +                          os.current_position_in_degrees - config.ccw_limit;
 41527                           
 41528                           ; BSR set to: 0
 41529  00C5DC  EE21  F0BB         	lfsr	2,_config+26
 41530  00C5E0  CFDE F096          	movff	postinc2,??__motor_run
 41531  00C5E4  CFDD F097          	movff	postdec2,??__motor_run+1
 41532  00C5E8  0100               	movlb	0	; () banked
 41533  00C5EA  1F96               	comf	??__motor_run& (0+255),f,b
 41534  00C5EC  1F97               	comf	(??__motor_run+1)& (0+255),f,b
 41535  00C5EE  4B96               	infsnz	??__motor_run& (0+255),f,b
 41536  00C5F0  2B97               	incf	(??__motor_run+1)& (0+255),f,b
 41537  00C5F2  0101               	movlb	1	; () banked
 41538  00C5F4  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 41539  00C5F6  0100               	movlb	0	; () banked
 41540  00C5F8  2796               	addwf	??__motor_run& (0+255),f,b
 41541  00C5FA  0101               	movlb	1	; () banked
 41542  00C5FC  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 41543  00C5FE  0100               	movlb	0	; () banked
 41544  00C600  2397               	addwfc	(??__motor_run+1)& (0+255),f,b
 41545  00C602  0EA0               	movlw	160
 41546  00C604  2596               	addwf	??__motor_run& (0+255),w,b
 41547  00C606  6F9B               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 41548  00C608  0E8C               	movlw	140
 41549  00C60A                     L65:
 41550  00C60A  2197               	addwfc	(??__motor_run+1)& (0+255),w,b
 41551  00C60C  6F9C               	movwf	(__motor_run@maximum_distance_in_degrees+1)& (0+255),b
 41552                           
 41553                           ; BSR set to: 0
 41554                           ;motor.c: 244: };motor.c: 246: maximum_distance_in_steps = motor_steps_from_degrees(maxi
      +                          mum_distance_in_degrees);
 41555                           
 41556                           ; BSR set to: 0
 41557  00C60E  C09B  F087         	movff	__motor_run@maximum_distance_in_degrees,motor_steps_from_degrees@degrees
 41558  00C612  C09C  F088         	movff	__motor_run@maximum_distance_in_degrees+1,motor_steps_from_degrees@degrees+1
 41559  00C616  EC22  F08D         	call	_motor_steps_from_degrees	;wreg free
 41560  00C61A  C087  F09D         	movff	?_motor_steps_from_degrees,__motor_run@maximum_distance_in_steps
 41561  00C61E  C088  F09E         	movff	?_motor_steps_from_degrees+1,__motor_run@maximum_distance_in_steps+1
 41562  00C622  C089  F09F         	movff	?_motor_steps_from_degrees+2,__motor_run@maximum_distance_in_steps+2
 41563  00C626  C08A  F0A0         	movff	?_motor_steps_from_degrees+3,__motor_run@maximum_distance_in_steps+3
 41564                           
 41565                           ;motor.c: 248: if(type==MOTOR_MOVE_TYPE_OVERSHOOT)
 41566  00C62A  0100               	movlb	0	; () banked
 41567  00C62C  0595               	decf	__motor_run@type& (0+255),w,b
 41568  00C62E  A4D8               	btfss	status,2,c
 41569  00C630  D00C               	goto	l2470
 41570                           
 41571                           ; BSR set to: 0
 41572                           ;motor.c: 249: {;motor.c: 250: maximum_distance_in_steps += config.overshoot_in_steps;
 41573  00C632  0101               	movlb	1	; () banked
 41574  00C634  51A6               	movf	(_config+5)& (0+255),w,b
 41575  00C636  0100               	movlb	0	; () banked
 41576  00C638  279D               	addwf	__motor_run@maximum_distance_in_steps& (0+255),f,b
 41577  00C63A  0101               	movlb	1	; () banked
 41578  00C63C  51A7               	movf	(_config+6)& (0+255),w,b
 41579  00C63E  0100               	movlb	0	; () banked
 41580  00C640  239E               	addwfc	(__motor_run@maximum_distance_in_steps+1)& (0+255),f,b
 41581  00C642  0E00               	movlw	0
 41582  00C644  239F               	addwfc	(__motor_run@maximum_distance_in_steps+2)& (0+255),f,b
 41583  00C646  0E00               	movlw	0
 41584  00C648  23A0               	addwfc	(__motor_run@maximum_distance_in_steps+3)& (0+255),f,b
 41585  00C64A                     l2470:
 41586                           
 41587                           ; BSR set to: 0
 41588                           ;motor.c: 251: };motor.c: 253: if(maximum_distance_in_steps<motor_final_stepcount)
 41589                           
 41590                           ; BSR set to: 0
 41591  00C64A  0101               	movlb	1	; () banked
 41592  00C64C  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 41593  00C64E  0100               	movlb	0	; () banked
 41594  00C650  5D9D               	subwf	__motor_run@maximum_distance_in_steps& (0+255),w,b
 41595  00C652  0101               	movlb	1	; () banked
 41596  00C654  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 41597  00C656  0100               	movlb	0	; () banked
 41598  00C658  599E               	subwfb	(__motor_run@maximum_distance_in_steps+1)& (0+255),w,b
 41599  00C65A  0101               	movlb	1	; () banked
 41600  00C65C  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 41601  00C65E  0100               	movlb	0	; () banked
 41602  00C660  599F               	subwfb	(__motor_run@maximum_distance_in_steps+2)& (0+255),w,b
 41603  00C662  0101               	movlb	1	; () banked
 41604  00C664  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 41605  00C666  0100               	movlb	0	; () banked
 41606  00C668  59A0               	subwfb	(__motor_run@maximum_distance_in_steps+3)& (0+255),w,b
 41607  00C66A  B0D8               	btfsc	status,0,c
 41608  00C66C  D008               	goto	l2471
 41609                           
 41610                           ; BSR set to: 0
 41611                           ;motor.c: 254: {;motor.c: 255: motor_final_stepcount = maximum_distance_in_steps;
 41612  00C66E  C09D  F127         	movff	__motor_run@maximum_distance_in_steps,_motor_final_stepcount	;volatile
 41613  00C672  C09E  F128         	movff	__motor_run@maximum_distance_in_steps+1,_motor_final_stepcount+1	;volatile
 41614  00C676  C09F  F129         	movff	__motor_run@maximum_distance_in_steps+2,_motor_final_stepcount+2	;volatile
 41615  00C67A  C0A0  F12A         	movff	__motor_run@maximum_distance_in_steps+3,_motor_final_stepcount+3	;volatile
 41616  00C67E                     l2471:
 41617                           
 41618                           ;motor.c: 256: };motor.c: 257: };motor.c: 260: if((motor_direction==MOTOR_DIRECTION_CW) 
      +                          && config.use_cw_limit)
 41619                           
 41620                           ; BSR set to: 0
 41621                           
 41622                           ; BSR set to: 0
 41623  00C67E  0101               	movlb	1	; () banked
 41624  00C680  0555               	decf	_motor_direction& (0+255),w,b
 41625  00C682  A4D8               	btfss	status,2,c
 41626  00C684  D061               	goto	l2475
 41627                           
 41628                           ; BSR set to: 1
 41629  00C686  51B7               	movf	(_config+22)& (0+255),w,b
 41630  00C688  B4D8               	btfsc	status,2,c
 41631  00C68A  D05E               	goto	l2475
 41632                           
 41633                           ; BSR set to: 1
 41634                           ;motor.c: 262: {;motor.c: 264: motor_calculate_position_in_degrees();
 41635  00C68C  EC74  F08E         	call	_motor_calculate_position_in_degrees	;wreg free
 41636                           
 41637                           ;motor.c: 267: if(config.cw_limit >= os.current_position_in_degrees)
 41638  00C690  0101               	movlb	1	; () banked
 41639  00C692  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 41640  00C694  5DB8               	subwf	(_config+23)& (0+255),w,b
 41641  00C696  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 41642  00C698  59B9               	subwfb	(_config+24)& (0+255),w,b
 41643  00C69A  A0D8               	btfss	status,0,c
 41644  00C69C  D014               	goto	l2473
 41645                           
 41646                           ; BSR set to: 1
 41647                           ;motor.c: 268: {;motor.c: 269: maximum_distance_in_degrees = config.cw_limit - os.curren
      +                          t_position_in_degrees;
 41648  00C69E  EE21  F07C         	lfsr	2,_os+11	;volatile
 41649  00C6A2  CFDE F096          	movff	postinc2,??__motor_run
 41650  00C6A6  CFDD F097          	movff	postdec2,??__motor_run+1
 41651  00C6AA  0100               	movlb	0	; () banked
 41652  00C6AC  1F96               	comf	??__motor_run& (0+255),f,b
 41653  00C6AE  1F97               	comf	(??__motor_run+1)& (0+255),f,b
 41654  00C6B0  4B96               	infsnz	??__motor_run& (0+255),f,b
 41655  00C6B2  2B97               	incf	(??__motor_run+1)& (0+255),f,b
 41656  00C6B4  0101               	movlb	1	; () banked
 41657  00C6B6  51B8               	movf	(_config+23)& (0+255),w,b
 41658  00C6B8  0100               	movlb	0	; () banked
 41659  00C6BA  2596               	addwf	??__motor_run& (0+255),w,b
 41660  00C6BC  6F9B               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 41661  00C6BE  0101               	movlb	1	; () banked
 41662  00C6C0  51B9               	movf	(_config+24)& (0+255),w,b
 41663  00C6C2  0100               	movlb	0	; () banked
 41664  00C6C4  D017               	goto	L66
 41665  00C6C6                     l2473:
 41666                           
 41667                           ;motor.c: 271: else;motor.c: 272: {;motor.c: 274: maximum_distance_in_degrees = 36000 + 
      +                          config.cw_limit - os.current_position_in_degrees;
 41668                           
 41669                           ; BSR set to: 0
 41670  00C6C6  EE21  F07C         	lfsr	2,_os+11	;volatile
 41671  00C6CA  CFDE F096          	movff	postinc2,??__motor_run
 41672  00C6CE  CFDD F097          	movff	postdec2,??__motor_run+1
 41673  00C6D2  0100               	movlb	0	; () banked
 41674  00C6D4  1F96               	comf	??__motor_run& (0+255),f,b
 41675  00C6D6  1F97               	comf	(??__motor_run+1)& (0+255),f,b
 41676  00C6D8  4B96               	infsnz	??__motor_run& (0+255),f,b
 41677  00C6DA  2B97               	incf	(??__motor_run+1)& (0+255),f,b
 41678  00C6DC  0101               	movlb	1	; () banked
 41679  00C6DE  51B8               	movf	(_config+23)& (0+255),w,b
 41680  00C6E0  0100               	movlb	0	; () banked
 41681  00C6E2  2796               	addwf	??__motor_run& (0+255),f,b
 41682  00C6E4  0101               	movlb	1	; () banked
 41683  00C6E6  51B9               	movf	(_config+24)& (0+255),w,b
 41684  00C6E8  0100               	movlb	0	; () banked
 41685  00C6EA  2397               	addwfc	(??__motor_run+1)& (0+255),f,b
 41686  00C6EC  0EA0               	movlw	160
 41687  00C6EE  2596               	addwf	??__motor_run& (0+255),w,b
 41688  00C6F0  6F9B               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 41689  00C6F2  0E8C               	movlw	140
 41690  00C6F4                     L66:
 41691  00C6F4  2197               	addwfc	(??__motor_run+1)& (0+255),w,b
 41692  00C6F6  6F9C               	movwf	(__motor_run@maximum_distance_in_degrees+1)& (0+255),b
 41693                           
 41694                           ; BSR set to: 0
 41695                           ;motor.c: 275: };motor.c: 277: maximum_distance_in_steps = motor_steps_from_degrees(maxi
      +                          mum_distance_in_degrees);
 41696                           
 41697                           ; BSR set to: 0
 41698  00C6F8  C09B  F087         	movff	__motor_run@maximum_distance_in_degrees,motor_steps_from_degrees@degrees
 41699  00C6FC  C09C  F088         	movff	__motor_run@maximum_distance_in_degrees+1,motor_steps_from_degrees@degrees+1
 41700  00C700  EC22  F08D         	call	_motor_steps_from_degrees	;wreg free
 41701  00C704  C087  F09D         	movff	?_motor_steps_from_degrees,__motor_run@maximum_distance_in_steps
 41702  00C708  C088  F09E         	movff	?_motor_steps_from_degrees+1,__motor_run@maximum_distance_in_steps+1
 41703  00C70C  C089  F09F         	movff	?_motor_steps_from_degrees+2,__motor_run@maximum_distance_in_steps+2
 41704  00C710  C08A  F0A0         	movff	?_motor_steps_from_degrees+3,__motor_run@maximum_distance_in_steps+3
 41705                           
 41706                           ;motor.c: 279: if(maximum_distance_in_steps<motor_final_stepcount)
 41707  00C714  0101               	movlb	1	; () banked
 41708  00C716  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 41709  00C718  0100               	movlb	0	; () banked
 41710  00C71A  5D9D               	subwf	__motor_run@maximum_distance_in_steps& (0+255),w,b
 41711  00C71C  0101               	movlb	1	; () banked
 41712  00C71E  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 41713  00C720  0100               	movlb	0	; () banked
 41714  00C722  599E               	subwfb	(__motor_run@maximum_distance_in_steps+1)& (0+255),w,b
 41715  00C724  0101               	movlb	1	; () banked
 41716  00C726  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 41717  00C728  0100               	movlb	0	; () banked
 41718  00C72A  599F               	subwfb	(__motor_run@maximum_distance_in_steps+2)& (0+255),w,b
 41719  00C72C  0101               	movlb	1	; () banked
 41720  00C72E  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 41721  00C730  0100               	movlb	0	; () banked
 41722  00C732  59A0               	subwfb	(__motor_run@maximum_distance_in_steps+3)& (0+255),w,b
 41723  00C734  B0D8               	btfsc	status,0,c
 41724  00C736  D008               	goto	l2475
 41725                           
 41726                           ; BSR set to: 0
 41727                           ;motor.c: 280: {;motor.c: 281: motor_final_stepcount = maximum_distance_in_steps;
 41728  00C738  C09D  F127         	movff	__motor_run@maximum_distance_in_steps,_motor_final_stepcount	;volatile
 41729  00C73C  C09E  F128         	movff	__motor_run@maximum_distance_in_steps+1,_motor_final_stepcount+1	;volatile
 41730  00C740  C09F  F129         	movff	__motor_run@maximum_distance_in_steps+2,_motor_final_stepcount+2	;volatile
 41731  00C744  C0A0  F12A         	movff	__motor_run@maximum_distance_in_steps+3,_motor_final_stepcount+3	;volatile
 41732  00C748                     l2475:
 41733                           
 41734                           ;motor.c: 282: };motor.c: 283: };motor.c: 287: if(motor_final_stepcount==0)
 41735                           
 41736                           ; BSR set to: 0
 41737                           
 41738                           ; BSR set to: 0
 41739  00C748  0101               	movlb	1	; () banked
 41740  00C74A  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 41741  00C74C  1128               	iorwf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 41742  00C74E  1129               	iorwf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 41743  00C750  112A               	iorwf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 41744  00C752  B4D8               	btfsc	status,2,c
 41745  00C754  0012               	return	
 41746                           
 41747                           ; BSR set to: 1
 41748                           ;motor.c: 290: };motor.c: 293: if(speed==0)
 41749                           
 41750                           ; BSR set to: 1
 41751                           
 41752                           ; BSR set to: 1
 41753                           ;motor.c: 288: {;motor.c: 289: return;
 41754  00C756  0100               	movlb	0	; () banked
 41755  00C758  5193               	movf	__motor_run@speed& (0+255),w,b
 41756  00C75A  1194               	iorwf	(__motor_run@speed+1)& (0+255),w,b
 41757  00C75C  A4D8               	btfss	status,2,c
 41758  00C75E  D005               	goto	l2478
 41759                           
 41760                           ; BSR set to: 0
 41761                           ;motor.c: 294: {;motor.c: 295: motor_maximum_speed = config.maximum_speed;
 41762  00C760  C1AC  F13F         	movff	_config+11,_motor_maximum_speed
 41763  00C764  C1AD  F140         	movff	_config+12,_motor_maximum_speed+1
 41764                           
 41765                           ;motor.c: 296: }
 41766  00C768  D004               	goto	l2479
 41767  00C76A                     l2478:
 41768                           
 41769                           ; BSR set to: 0
 41770                           ;motor.c: 297: else;motor.c: 298: {;motor.c: 299: motor_maximum_speed = speed;
 41771  00C76A  C093  F13F         	movff	__motor_run@speed,_motor_maximum_speed
 41772  00C76E  C094  F140         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 41773  00C772                     l2479:
 41774                           
 41775                           ; BSR set to: 0
 41776                           ;motor.c: 300: };motor.c: 303: motor_current_speed = 0;
 41777                           
 41778                           ; BSR set to: 0
 41779  00C772  0E00               	movlw	0
 41780  00C774  6FFF               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 41781  00C776  0E00               	movlw	0
 41782  00C778  6FFE               	movwf	_motor_current_speed& (0+255),b	;volatile
 41783                           
 41784                           ;motor.c: 304: motor_current_stepcount = 0;
 41785  00C77A  0E00               	movlw	0
 41786  00C77C  6E58               	movwf	_motor_current_stepcount,c	;volatile
 41787  00C77E  0E00               	movlw	0
 41788  00C780  6E59               	movwf	_motor_current_stepcount+1,c	;volatile
 41789  00C782  0E00               	movlw	0
 41790  00C784  6E5A               	movwf	_motor_current_stepcount+2,c	;volatile
 41791  00C786  0E00               	movlw	0
 41792  00C788  6E5B               	movwf	_motor_current_stepcount+3,c	;volatile
 41793                           
 41794                           ; BSR set to: 0
 41795                           ;motor.c: 306: motor_next_speed_check = motor_steps_lookup[1];
 41796  00C78A  0E63               	movlw	low (_motor_steps_lookup+2)
 41797  00C78C  6EF6               	movwf	tblptrl,c
 41798  00C78E  0E94               	movlw	high (_motor_steps_lookup+2)
 41799  00C790  6EF7               	movwf	tblptrh,c
 41800  00C792                     	if	0	;tblptru may be non-zero
 41801  00C792                     	endif
 41802  00C792                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41803  00C792  0E00               	movlw	low (__mediumconst shr (0+16))
 41804  00C794  6EF8               	movwf	tblptru,c
 41805  00C796                     	endif
 41806  00C796  0009               	tblrd		*+
 41807  00C798  CFF5 F096          	movff	tablat,??__motor_run
 41808  00C79C  0009               	tblrd		*+
 41809  00C79E  CFF5 F097          	movff	tablat,??__motor_run+1
 41810  00C7A2  C096  F226         	movff	??__motor_run,_motor_next_speed_check	;volatile
 41811  00C7A6  C097  F227         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 41812  00C7AA  0102               	movlb	2	; () banked
 41813  00C7AC  6B28               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 41814  00C7AE  6B29               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 41815                           
 41816                           ; BSR set to: 2
 41817                           ;motor.c: 309: CCP1CONbits.CCP1M = 0b0000;
 41818  00C7B0  90BA               	bcf	4026,0,c	;volatile
 41819  00C7B2  92BA               	bcf	4026,1,c	;volatile
 41820  00C7B4  94BA               	bcf	4026,2,c	;volatile
 41821  00C7B6  96BA               	bcf	4026,3,c	;volatile
 41822                           
 41823                           ; BSR set to: 2
 41824                           ;motor.c: 312: LATBbits.LB0 = 0;
 41825  00C7B8  908A               	bcf	3978,0,c	;volatile
 41826                           
 41827                           ; BSR set to: 2
 41828                           ;motor.c: 313: if(direction==MOTOR_DIRECTION_CCW)
 41829  00C7BA  0100               	movlb	0	; () banked
 41830  00C7BC  299A               	incf	__motor_run@direction& (0+255),w,b
 41831  00C7BE  A4D8               	btfss	status,2,c
 41832  00C7C0  D005               	goto	l2480
 41833                           
 41834                           ; BSR set to: 0
 41835                           ;motor.c: 314: {;motor.c: 315: if(config.inverse_direction)
 41836  00C7C2  0101               	movlb	1	; () banked
 41837  00C7C4  51A5               	movf	(_config+4)& (0+255),w,b
 41838  00C7C6  B4D8               	btfsc	status,2,c
 41839  00C7C8  D005               	goto	u11840
 41840  00C7CA  D006               	goto	l2484
 41841  00C7CC                     l2480:
 41842                           
 41843                           ;motor.c: 320: else;motor.c: 321: {;motor.c: 322: if(config.inverse_direction)
 41844                           
 41845                           ; BSR set to: 1
 41846  00C7CC  0101               	movlb	1	; () banked
 41847  00C7CE  51A5               	movf	(_config+4)& (0+255),w,b
 41848  00C7D0  B4D8               	btfsc	status,2,c
 41849  00C7D2  D002               	goto	l2484
 41850  00C7D4                     u11840:
 41851                           
 41852                           ; BSR set to: 1
 41853                           ;motor.c: 323: LATBbits.LB2 = 0;
 41854  00C7D4  948A               	bcf	3978,2,c	;volatile
 41855  00C7D6  D001               	goto	l2485
 41856  00C7D8                     l2484:
 41857                           
 41858                           ; BSR set to: 1
 41859                           ;motor.c: 324: else;motor.c: 325: LATBbits.LB2 = 1;
 41860  00C7D8  848A               	bsf	3978,2,c	;volatile
 41861  00C7DA                     l2485:
 41862                           
 41863                           ; BSR set to: 1
 41864                           ;motor.c: 326: };motor.c: 329: LATBbits.LB1 = 1;
 41865                           
 41866                           ; BSR set to: 1
 41867  00C7DA  828A               	bsf	3978,1,c	;volatile
 41868                           
 41869                           ; BSR set to: 1
 41870                           ;motor.c: 332: ++motor_current_stepcount;
 41871  00C7DC  0E01               	movlw	1
 41872  00C7DE  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 41873  00C7E0  0E00               	movlw	0
 41874  00C7E2  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 41875  00C7E4  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 41876  00C7E6  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 41877                           
 41878                           ;motor.c: 335: os.current_position_in_steps += motor_direction;
 41879  00C7E8  5155               	movf	_motor_direction& (0+255),w,b
 41880  00C7EA  0100               	movlb	0	; () banked
 41881  00C7EC  6F96               	movwf	??__motor_run& (0+255),b
 41882  00C7EE  0E00               	movlw	0
 41883  00C7F0  BF96               	btfsc	??__motor_run& (0+255),7,b
 41884  00C7F2  0EFF               	movlw	255
 41885  00C7F4  6F97               	movwf	(??__motor_run+1)& (0+255),b
 41886  00C7F6  6F98               	movwf	(??__motor_run+2)& (0+255),b
 41887  00C7F8  6F99               	movwf	(??__motor_run+3)& (0+255),b
 41888  00C7FA  5196               	movf	??__motor_run& (0+255),w,b
 41889  00C7FC  0101               	movlb	1	; () banked
 41890  00C7FE  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 41891  00C800  0100               	movlb	0	; () banked
 41892  00C802  5197               	movf	(??__motor_run+1)& (0+255),w,b
 41893  00C804  0101               	movlb	1	; () banked
 41894  00C806  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 41895  00C808  0100               	movlb	0	; () banked
 41896  00C80A  5198               	movf	(??__motor_run+2)& (0+255),w,b
 41897  00C80C  0101               	movlb	1	; () banked
 41898  00C80E  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 41899  00C810  0100               	movlb	0	; () banked
 41900  00C812  5199               	movf	(??__motor_run+3)& (0+255),w,b
 41901  00C814  0101               	movlb	1	; () banked
 41902  00C816  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 41903                           
 41904                           ;motor.c: 336: if(os.current_position_in_steps==config.full_circle_in_steps)
 41905  00C818  51A1               	movf	_config& (0+255),w,b
 41906  00C81A  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 41907  00C81C  E112               	bnz	l13212
 41908  00C81E  51A2               	movf	(_config+1)& (0+255),w,b
 41909  00C820  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 41910  00C822  E10F               	bnz	l13212
 41911  00C824  51A3               	movf	(_config+2)& (0+255),w,b
 41912  00C826  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 41913  00C828  E10C               	bnz	l13212
 41914  00C82A  51A4               	movf	(_config+3)& (0+255),w,b
 41915  00C82C  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 41916  00C82E  A4D8               	btfss	status,2,c
 41917  00C830  D008               	goto	l2486
 41918                           
 41919                           ; BSR set to: 1
 41920                           ;motor.c: 337: os.current_position_in_steps = 0;
 41921  00C832  0E00               	movlw	0
 41922  00C834  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 41923  00C836  0E00               	movlw	0
 41924  00C838  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 41925  00C83A  0E00               	movlw	0
 41926  00C83C  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 41927  00C83E  0E00               	movlw	0
 41928  00C840  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 41929  00C842                     l2486:
 41930  00C842                     l13212:
 41931                           
 41932                           ; BSR set to: 1
 41933                           ;motor.c: 338: if(os.current_position_in_steps==0xFFFFFFFF)
 41934  00C842  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 41935  00C844  E113               	bnz	l13216
 41936  00C846  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 41937  00C848  E111               	bnz	l13216
 41938  00C84A  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 41939  00C84C  E10F               	bnz	l13216
 41940  00C84E  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 41941  00C850  A4D8               	btfss	status,2,c
 41942  00C852  D00C               	goto	l2487
 41943                           
 41944                           ; BSR set to: 1
 41945                           ;motor.c: 339: os.current_position_in_steps = (config.full_circle_in_steps-1);
 41946  00C854  0EFF               	movlw	255
 41947  00C856  25A1               	addwf	_config& (0+255),w,b
 41948  00C858  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 41949  00C85A  0EFF               	movlw	255
 41950  00C85C  21A2               	addwfc	(_config+1)& (0+255),w,b
 41951  00C85E  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 41952  00C860  0EFF               	movlw	255
 41953  00C862  21A3               	addwfc	(_config+2)& (0+255),w,b
 41954  00C864  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 41955  00C866  0EFF               	movlw	255
 41956  00C868  21A4               	addwfc	(_config+3)& (0+255),w,b
 41957  00C86A  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 41958  00C86C                     l2487:
 41959  00C86C                     l13216:
 41960                           
 41961                           ; BSR set to: 1
 41962                           ;motor.c: 342: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 41963  00C86C  0E55               	movlw	85
 41964  00C86E  6EA7               	movwf	4007,c	;volsfr
 41965                           
 41966                           ; BSR set to: 1
 41967  00C870  0EAA               	movlw	170
 41968  00C872  6EA7               	movwf	4007,c	;volsfr
 41969                           
 41970                           ; BSR set to: 1
 41971  00C874  010E               	movlb	14	; () banked
 41972  00C876  91BF               	bcf	191,0,b	;volatile
 41973                           
 41974                           ; BSR set to: 14
 41975                           ;motor.c: 343: RPOR4 = 0;
 41976  00C878  0E00               	movlw	0
 41977  00C87A  6FC4               	movwf	196,b	;volatile
 41978                           
 41979                           ; BSR set to: 14
 41980                           ;motor.c: 344: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 41981  00C87C  0E55               	movlw	85
 41982  00C87E  6EA7               	movwf	4007,c	;volsfr
 41983                           
 41984                           ; BSR set to: 14
 41985  00C880  0EAA               	movlw	170
 41986  00C882  6EA7               	movwf	4007,c	;volsfr
 41987                           
 41988                           ; BSR set to: 14
 41989  00C884  81BF               	bsf	191,0,b	;volatile
 41990                           
 41991                           ; BSR set to: 14
 41992                           ;motor.c: 347: motor_mode = MOTOR_MODE_MANUAL;
 41993  00C886  0E00               	movlw	0
 41994  00C888  0101               	movlb	1	; () banked
 41995  00C88A  6F56               	movwf	_motor_mode& (0+255),b
 41996                           
 41997                           ; BSR set to: 1
 41998                           ;motor.c: 351: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 41999  00C88C  0EFD               	movlw	low _motor_prescaler_lookup
 42000  00C88E  0100               	movlb	0	; () banked
 42001  00C890  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42002  00C892  6EF6               	movwf	tblptrl,c
 42003  00C894  0E9B               	movlw	high _motor_prescaler_lookup
 42004  00C896  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42005  00C898  6EF7               	movwf	tblptrh,c
 42006  00C89A                     	if	1	;There are 3 active tblptr bytes
 42007  00C89A  6AF8               	clrf	tblptru,c
 42008  00C89C  0E00               	movlw	low (__mediumconst shr (0+16))
 42009  00C89E  22F8               	addwfc	tblptru,f,c
 42010  00C8A0                     	endif
 42011  00C8A0  0008               	tblrd		*
 42012  00C8A2  CFF5 F096          	movff	tablat,??__motor_run
 42013  00C8A6  50CA               	movf	4042,w,c	;volatile
 42014  00C8A8  1996               	xorwf	??__motor_run& (0+255),w,b
 42015  00C8AA  0BFC               	andlw	-4
 42016  00C8AC  1996               	xorwf	??__motor_run& (0+255),w,b
 42017  00C8AE  6ECA               	movwf	4042,c	;volatile
 42018                           
 42019                           ; BSR set to: 0
 42020                           ;motor.c: 353: PR2 = motor_period_lookup[motor_current_speed];
 42021  00C8B0  0E16               	movlw	low _motor_period_lookup
 42022  00C8B2  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42023  00C8B4  6EF6               	movwf	tblptrl,c
 42024  00C8B6  0E9A               	movlw	high _motor_period_lookup
 42025  00C8B8  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42026  00C8BA  6EF7               	movwf	tblptrh,c
 42027  00C8BC                     	if	1	;There are 3 active tblptr bytes
 42028  00C8BC  6AF8               	clrf	tblptru,c
 42029  00C8BE  0E00               	movlw	low (__mediumconst shr (0+16))
 42030  00C8C0  22F8               	addwfc	tblptru,f,c
 42031  00C8C2                     	endif
 42032  00C8C2  0008               	tblrd		*
 42033  00C8C4  CFF5 FFCB          	movff	tablat,4043	;volatile
 42034                           
 42035                           ; BSR set to: 0
 42036                           ;motor.c: 355: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 42037  00C8C8  0E2F               	movlw	low _motor_postscaler_lookup
 42038  00C8CA  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42039  00C8CC  6EF6               	movwf	tblptrl,c
 42040  00C8CE  0E98               	movlw	high _motor_postscaler_lookup
 42041  00C8D0  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42042  00C8D2  6EF7               	movwf	tblptrh,c
 42043  00C8D4                     	if	1	;There are 3 active tblptr bytes
 42044  00C8D4  6AF8               	clrf	tblptru,c
 42045  00C8D6  0E00               	movlw	low (__mediumconst shr (0+16))
 42046  00C8D8  22F8               	addwfc	tblptru,f,c
 42047  00C8DA                     	endif
 42048  00C8DA  0008               	tblrd		*
 42049  00C8DC  CFF5 F096          	movff	tablat,??__motor_run
 42050  00C8E0  4796               	rlncf	??__motor_run& (0+255),f,b
 42051  00C8E2  4796               	rlncf	??__motor_run& (0+255),f,b
 42052  00C8E4  4796               	rlncf	??__motor_run& (0+255),f,b
 42053  00C8E6  50CA               	movf	4042,w,c	;volatile
 42054  00C8E8  1996               	xorwf	??__motor_run& (0+255),w,b
 42055  00C8EA  0B87               	andlw	-121
 42056  00C8EC  1996               	xorwf	??__motor_run& (0+255),w,b
 42057  00C8EE  6ECA               	movwf	4042,c	;volatile
 42058                           
 42059                           ; BSR set to: 0
 42060                           ;motor.c: 357: CCPR1L = PR2>>1;
 42061  00C8F0  90D8               	bcf	status,0,c
 42062  00C8F2  30CB               	rrcf	4043,w,c	;volatile
 42063  00C8F4  6EBB               	movwf	4027,c	;volatile
 42064                           
 42065                           ; BSR set to: 0
 42066                           ;motor.c: 360: PIR1bits.TMR2IF = 0;
 42067  00C8F6  929E               	bcf	3998,1,c	;volatile
 42068                           
 42069                           ; BSR set to: 0
 42070                           ;motor.c: 361: PIE1bits.TMR2IE = 1;
 42071  00C8F8  829D               	bsf	3997,1,c	;volatile
 42072                           
 42073                           ; BSR set to: 0
 42074                           ;motor.c: 364: TMR2 = 0;
 42075  00C8FA  0E00               	movlw	0
 42076  00C8FC  6ECC               	movwf	4044,c	;volatile
 42077                           
 42078                           ; BSR set to: 0
 42079                           ;motor.c: 365: T2CONbits.TMR2ON = 1;
 42080  00C8FE  84CA               	bsf	4042,2,c	;volatile
 42081                           
 42082                           ; BSR set to: 0
 42083                           ;motor.c: 368: os.busy = 1;
 42084  00C900  0E01               	movlw	1
 42085  00C902  0101               	movlb	1	; () banked
 42086  00C904  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
 42087                           
 42088                           ; BSR set to: 1
 42089  00C906  0012               	return		;funcret
 42090  00C908                     __end_of__motor_run:
 42091                           	opt stack 0
 42092                           tosu	equ	0xFFF
 42093                           tosh	equ	0xFFE
 42094                           tosl	equ	0xFFD
 42095                           pclath	equ	0xFFA
 42096                           tblptru	equ	0xFF8
 42097                           tblptrh	equ	0xFF7
 42098                           tblptrl	equ	0xFF6
 42099                           tablat	equ	0xFF5
 42100                           prodh	equ	0xFF4
 42101                           prodl	equ	0xFF3
 42102                           intcon	equ	0xFF2
 42103                           indf0	equ	0xFEF
 42104                           postinc0	equ	0xFEE
 42105                           fsr0h	equ	0xFEA
 42106                           fsr0l	equ	0xFE9
 42107                           wreg	equ	0xFE8
 42108                           indf1	equ	0xFE7
 42109                           postinc1	equ	0xFE6
 42110                           postdec1	equ	0xFE5
 42111                           plusw1	equ	0xFE3
 42112                           fsr1h	equ	0xFE2
 42113                           fsr1l	equ	0xFE1
 42114                           indf2	equ	0xFDF
 42115                           postinc2	equ	0xFDE
 42116                           postdec2	equ	0xFDD
 42117                           plusw2	equ	0xFDB
 42118                           fsr2h	equ	0xFDA
 42119                           fsr2l	equ	0xFD9
 42120                           status	equ	0xFD8
 42121                           
 42122 ;; *************** function _motor_steps_from_degrees *****************
 42123 ;; Defined at:
 42124 ;;		line 32 in file "motor.c"
 42125 ;; Parameters:    Size  Location     Type
 42126 ;;  degrees         2   39[BANK0 ] unsigned int 
 42127 ;; Auto vars:     Size  Location     Type
 42128 ;;  steps           4   43[BANK0 ] float 
 42129 ;; Return value:  Size  Location     Type
 42130 ;;                  4   39[BANK0 ] unsigned long 
 42131 ;; Registers used:
 42132 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 42133 ;; Tracked objects:
 42134 ;;		On entry : 0/0
 42135 ;;		On exit  : 0/0
 42136 ;;		Unchanged: 0/0
 42137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42139 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42141 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42142 ;;Total ram usage:        8 bytes
 42143 ;; Hardware stack levels used:    1
 42144 ;; Hardware stack levels required when called:   11
 42145 ;; This function calls:
 42146 ;;		___fldiv
 42147 ;;		___flmul
 42148 ;;		___fltol
 42149 ;;		___xxtofl
 42150 ;; This function is called by:
 42151 ;;		_motor_nonzero_steps_from_degrees
 42152 ;;		__motor_run
 42153 ;; This function uses a non-reentrant model
 42154 ;;
 42155                           
 42156                           	psect	text175
 42157  011A44                     __ptext175:
 42158                           	opt stack 0
 42159  011A44                     _motor_steps_from_degrees:
 42160                           	opt stack 17
 42161                           
 42162                           ;motor.c: 34: float steps;;motor.c: 37: if(degrees==0)
 42163                           
 42164                           ; BSR set to: 1
 42165                           ;incstack = 0
 42166  011A44  0100               	movlb	0	; () banked
 42167  011A46  5187               	movf	motor_steps_from_degrees@degrees& (0+255),w,b
 42168  011A48  1188               	iorwf	(motor_steps_from_degrees@degrees+1)& (0+255),w,b
 42169  011A4A  A4D8               	btfss	status,2,c
 42170  011A4C  D009               	goto	l2416
 42171                           
 42172                           ; BSR set to: 0
 42173                           ;motor.c: 38: {;motor.c: 39: return 0;
 42174  011A4E  0E00               	movlw	0
 42175  011A50  6F87               	movwf	?_motor_steps_from_degrees& (0+255),b
 42176  011A52  0E00               	movlw	0
 42177  011A54  6F88               	movwf	(?_motor_steps_from_degrees+1)& (0+255),b
 42178  011A56  0E00               	movlw	0
 42179  011A58  6F89               	movwf	(?_motor_steps_from_degrees+2)& (0+255),b
 42180  011A5A  0E00               	movlw	0
 42181  011A5C  6F8A               	movwf	(?_motor_steps_from_degrees+3)& (0+255),b
 42182                           
 42183                           ; BSR set to: 0
 42184  011A5E  0012               	return	
 42185  011A60                     l2416:
 42186                           
 42187                           ; BSR set to: 0
 42188                           ;motor.c: 40: };motor.c: 42: steps = (float) degrees;
 42189                           
 42190                           ; BSR set to: 0
 42191  011A60  C087  F060         	movff	motor_steps_from_degrees@degrees,___xxtofl@val
 42192  011A64  C088  F061         	movff	motor_steps_from_degrees@degrees+1,___xxtofl@val+1
 42193  011A68  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 42194  011A6A  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 42195  011A6C  0E00               	movlw	0
 42196  011A6E  EC8B  F07F         	call	___xxtofl
 42197  011A72  C060  F08B         	movff	?___xxtofl,motor_steps_from_degrees@steps
 42198  011A76  C061  F08C         	movff	?___xxtofl+1,motor_steps_from_degrees@steps+1
 42199  011A7A  C062  F08D         	movff	?___xxtofl+2,motor_steps_from_degrees@steps+2
 42200  011A7E  C063  F08E         	movff	?___xxtofl+3,motor_steps_from_degrees@steps+3
 42201                           
 42202                           ;motor.c: 43: steps *= config.full_circle_in_steps;
 42203  011A82  C08B  F06E         	movff	motor_steps_from_degrees@steps,___flmul@b
 42204  011A86  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___flmul@b+1
 42205  011A8A  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___flmul@b+2
 42206  011A8E  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___flmul@b+3
 42207  011A92  C1A1  F060         	movff	_config,___xxtofl@val
 42208  011A96  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 42209  011A9A  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 42210  011A9E  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 42211  011AA2  0E00               	movlw	0
 42212  011AA4  EC8B  F07F         	call	___xxtofl
 42213  011AA8  C060  F072         	movff	?___xxtofl,___flmul@a
 42214  011AAC  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 42215  011AB0  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 42216  011AB4  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 42217  011AB8  EC38  F066         	call	___flmul	;wreg free
 42218  011ABC  C06E  F08B         	movff	?___flmul,motor_steps_from_degrees@steps
 42219  011AC0  C06F  F08C         	movff	?___flmul+1,motor_steps_from_degrees@steps+1
 42220  011AC4  C070  F08D         	movff	?___flmul+2,motor_steps_from_degrees@steps+2
 42221  011AC8  C071  F08E         	movff	?___flmul+3,motor_steps_from_degrees@steps+3
 42222                           
 42223                           ;motor.c: 44: steps /= 36000;
 42224  011ACC  C08B  F06E         	movff	motor_steps_from_degrees@steps,___fldiv@b
 42225  011AD0  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___fldiv@b+1
 42226  011AD4  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___fldiv@b+2
 42227  011AD8  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___fldiv@b+3
 42228  011ADC  0E00               	movlw	0
 42229  011ADE  0100               	movlb	0	; () banked
 42230  011AE0  6F72               	movwf	___fldiv@a& (0+255),b
 42231  011AE2  0EA0               	movlw	160
 42232  011AE4  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 42233  011AE6  0E0C               	movlw	12
 42234  011AE8  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 42235  011AEA  0E47               	movlw	71
 42236  011AEC  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 42237  011AEE  ECFC  F06D         	call	___fldiv	;wreg free
 42238  011AF2  C06E  F08B         	movff	?___fldiv,motor_steps_from_degrees@steps
 42239  011AF6  C06F  F08C         	movff	?___fldiv+1,motor_steps_from_degrees@steps+1
 42240  011AFA  C070  F08D         	movff	?___fldiv+2,motor_steps_from_degrees@steps+2
 42241  011AFE  C071  F08E         	movff	?___fldiv+3,motor_steps_from_degrees@steps+3
 42242                           
 42243                           ;motor.c: 46: return (uint32_t) steps;
 42244  011B02  C08B  F060         	movff	motor_steps_from_degrees@steps,___fltol@f1
 42245  011B06  C08C  F061         	movff	motor_steps_from_degrees@steps+1,___fltol@f1+1
 42246  011B0A  C08D  F062         	movff	motor_steps_from_degrees@steps+2,___fltol@f1+2
 42247  011B0E  C08E  F063         	movff	motor_steps_from_degrees@steps+3,___fltol@f1+3
 42248  011B12  ECE3  F08E         	call	___fltol	;wreg free
 42249  011B16  C060  F087         	movff	?___fltol,?_motor_steps_from_degrees
 42250  011B1A  C061  F088         	movff	?___fltol+1,?_motor_steps_from_degrees+1
 42251  011B1E  C062  F089         	movff	?___fltol+2,?_motor_steps_from_degrees+2
 42252  011B22  C063  F08A         	movff	?___fltol+3,?_motor_steps_from_degrees+3
 42253  011B26  0012               	return	
 42254  011B28                     __end_of_motor_steps_from_degrees:
 42255                           	opt stack 0
 42256                           tosu	equ	0xFFF
 42257                           tosh	equ	0xFFE
 42258                           tosl	equ	0xFFD
 42259                           pclath	equ	0xFFA
 42260                           tblptru	equ	0xFF8
 42261                           tblptrh	equ	0xFF7
 42262                           tblptrl	equ	0xFF6
 42263                           tablat	equ	0xFF5
 42264                           prodh	equ	0xFF4
 42265                           prodl	equ	0xFF3
 42266                           intcon	equ	0xFF2
 42267                           indf0	equ	0xFEF
 42268                           postinc0	equ	0xFEE
 42269                           fsr0h	equ	0xFEA
 42270                           fsr0l	equ	0xFE9
 42271                           wreg	equ	0xFE8
 42272                           indf1	equ	0xFE7
 42273                           postinc1	equ	0xFE6
 42274                           postdec1	equ	0xFE5
 42275                           plusw1	equ	0xFE3
 42276                           fsr1h	equ	0xFE2
 42277                           fsr1l	equ	0xFE1
 42278                           indf2	equ	0xFDF
 42279                           postinc2	equ	0xFDE
 42280                           postdec2	equ	0xFDD
 42281                           plusw2	equ	0xFDB
 42282                           fsr2h	equ	0xFDA
 42283                           fsr2l	equ	0xFD9
 42284                           status	equ	0xFD8
 42285                           
 42286 ;; *************** function _motor_calculate_position_in_degrees *****************
 42287 ;; Defined at:
 42288 ;;		line 59 in file "motor.c"
 42289 ;; Parameters:    Size  Location     Type
 42290 ;;		None
 42291 ;; Auto vars:     Size  Location     Type
 42292 ;;  tmp             4   39[BANK0 ] float 
 42293 ;; Return value:  Size  Location     Type
 42294 ;;                  1    wreg      void 
 42295 ;; Registers used:
 42296 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 42297 ;; Tracked objects:
 42298 ;;		On entry : 0/0
 42299 ;;		On exit  : 0/0
 42300 ;;		Unchanged: 0/0
 42301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42303 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42305 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42306 ;;Total ram usage:        4 bytes
 42307 ;; Hardware stack levels used:    1
 42308 ;; Hardware stack levels required when called:   11
 42309 ;; This function calls:
 42310 ;;		___fldiv
 42311 ;;		___flmul
 42312 ;;		___fltol
 42313 ;;		___xxtofl
 42314 ;; This function is called by:
 42315 ;;		_main
 42316 ;;		_system_init
 42317 ;;		__motor_run
 42318 ;; This function uses a non-reentrant model
 42319 ;;
 42320                           
 42321                           	psect	text176
 42322  011CE8                     __ptext176:
 42323                           	opt stack 0
 42324  011CE8                     _motor_calculate_position_in_degrees:
 42325                           	opt stack 18
 42326                           
 42327                           ;motor.c: 61: float tmp;;motor.c: 63: tmp = (float) os.current_position_in_steps;
 42328                           
 42329                           ;incstack = 0
 42330  011CE8  C178  F060         	movff	_os+7,___xxtofl@val	;volatile
 42331  011CEC  C179  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 42332  011CF0  C17A  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 42333  011CF4  C17B  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 42334  011CF8  0E00               	movlw	0
 42335  011CFA  EC8B  F07F         	call	___xxtofl
 42336  011CFE  C060  F087         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
 42337  011D02  C061  F088         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
 42338  011D06  C062  F089         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
 42339  011D0A  C063  F08A         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
 42340                           
 42341                           ;motor.c: 64: tmp *= 36000;
 42342  011D0E  C087  F06E         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
 42343  011D12  C088  F06F         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
 42344  011D16  C089  F070         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
 42345  011D1A  C08A  F071         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
 42346  011D1E  0E00               	movlw	0
 42347  011D20  0100               	movlb	0	; () banked
 42348  011D22  6F72               	movwf	___flmul@a& (0+255),b
 42349  011D24  0EA0               	movlw	160
 42350  011D26  6F73               	movwf	(___flmul@a+1)& (0+255),b
 42351  011D28  0E0C               	movlw	12
 42352  011D2A  6F74               	movwf	(___flmul@a+2)& (0+255),b
 42353  011D2C  0E47               	movlw	71
 42354  011D2E  6F75               	movwf	(___flmul@a+3)& (0+255),b
 42355  011D30  EC38  F066         	call	___flmul	;wreg free
 42356  011D34  C06E  F087         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
 42357  011D38  C06F  F088         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
 42358  011D3C  C070  F089         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
 42359  011D40  C071  F08A         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
 42360                           
 42361                           ;motor.c: 65: tmp /= config.full_circle_in_steps;
 42362  011D44  C087  F06E         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
 42363  011D48  C088  F06F         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
 42364  011D4C  C089  F070         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
 42365  011D50  C08A  F071         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
 42366  011D54  C1A1  F060         	movff	_config,___xxtofl@val
 42367  011D58  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 42368  011D5C  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 42369  011D60  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 42370  011D64  0E00               	movlw	0
 42371  011D66  EC8B  F07F         	call	___xxtofl
 42372  011D6A  C060  F072         	movff	?___xxtofl,___fldiv@a
 42373  011D6E  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 42374  011D72  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 42375  011D76  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 42376  011D7A  ECFC  F06D         	call	___fldiv	;wreg free
 42377  011D7E  C06E  F087         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
 42378  011D82  C06F  F088         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
 42379  011D86  C070  F089         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
 42380  011D8A  C071  F08A         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
 42381                           
 42382                           ;motor.c: 67: os.current_position_in_degrees = (uint16_t) tmp;
 42383  011D8E  C087  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
 42384  011D92  C088  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
 42385  011D96  C089  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
 42386  011D9A  C08A  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
 42387  011D9E  ECE3  F08E         	call	___fltol	;wreg free
 42388  011DA2  C060  F17C         	movff	?___fltol,_os+11	;volatile
 42389  011DA6  C061  F17D         	movff	?___fltol+1,_os+12	;volatile
 42390                           
 42391                           ;motor.c: 68: if(os.current_position_in_degrees==36000)
 42392  011DAA  0EA0               	movlw	160
 42393  011DAC  0101               	movlb	1	; () banked
 42394  011DAE  197C               	xorwf	(_os+11)& (0+255),w,b	;volatile
 42395  011DB0  E109               	bnz	l2425
 42396  011DB2  0E8C               	movlw	140
 42397  011DB4  197D               	xorwf	(_os+12)& (0+255),w,b	;volatile
 42398  011DB6  A4D8               	btfss	status,2,c
 42399  011DB8  0012               	return	
 42400                           
 42401                           ; BSR set to: 1
 42402                           ;motor.c: 69: {;motor.c: 71: os.current_position_in_degrees = 0;
 42403  011DBA  0E00               	movlw	0
 42404  011DBC  6F7D               	movwf	(_os+12)& (0+255),b	;volatile
 42405  011DBE  0E00               	movlw	0
 42406  011DC0  6F7C               	movwf	(_os+11)& (0+255),b	;volatile
 42407  011DC2  0012               	return	
 42408  011DC4                     l2425:
 42409                           
 42410                           ; BSR set to: 1
 42411  011DC4  0012               	return		;funcret
 42412  011DC6                     __end_of_motor_calculate_position_in_degrees:
 42413                           	opt stack 0
 42414                           tosu	equ	0xFFF
 42415                           tosh	equ	0xFFE
 42416                           tosl	equ	0xFFD
 42417                           pclath	equ	0xFFA
 42418                           tblptru	equ	0xFF8
 42419                           tblptrh	equ	0xFF7
 42420                           tblptrl	equ	0xFF6
 42421                           tablat	equ	0xFF5
 42422                           prodh	equ	0xFF4
 42423                           prodl	equ	0xFF3
 42424                           intcon	equ	0xFF2
 42425                           indf0	equ	0xFEF
 42426                           postinc0	equ	0xFEE
 42427                           fsr0h	equ	0xFEA
 42428                           fsr0l	equ	0xFE9
 42429                           wreg	equ	0xFE8
 42430                           indf1	equ	0xFE7
 42431                           postinc1	equ	0xFE6
 42432                           postdec1	equ	0xFE5
 42433                           plusw1	equ	0xFE3
 42434                           fsr1h	equ	0xFE2
 42435                           fsr1l	equ	0xFE1
 42436                           indf2	equ	0xFDF
 42437                           postinc2	equ	0xFDE
 42438                           postdec2	equ	0xFDD
 42439                           plusw2	equ	0xFDB
 42440                           fsr2h	equ	0xFDA
 42441                           fsr2l	equ	0xFD9
 42442                           status	equ	0xFD8
 42443                           
 42444 ;; *************** function ___xxtofl *****************
 42445 ;; Defined at:
 42446 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 42447 ;; Parameters:    Size  Location     Type
 42448 ;;  sign            1    wreg     unsigned char 
 42449 ;;  val             4    0[BANK0 ] long 
 42450 ;; Auto vars:     Size  Location     Type
 42451 ;;  sign            1    8[BANK0 ] unsigned char 
 42452 ;;  arg             4   10[BANK0 ] unsigned long 
 42453 ;;  exp             1    9[BANK0 ] unsigned char 
 42454 ;; Return value:  Size  Location     Type
 42455 ;;                  4    0[BANK0 ] unsigned char 
 42456 ;; Registers used:
 42457 ;;		wreg, status,2, status,0
 42458 ;; Tracked objects:
 42459 ;;		On entry : 0/0
 42460 ;;		On exit  : 0/0
 42461 ;;		Unchanged: 0/0
 42462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42463 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42464 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42465 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42466 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42467 ;;Total ram usage:       14 bytes
 42468 ;; Hardware stack levels used:    1
 42469 ;; Hardware stack levels required when called:   10
 42470 ;; This function calls:
 42471 ;;		Nothing
 42472 ;; This function is called by:
 42473 ;;		_motor_steps_from_degrees
 42474 ;;		_motor_calculate_position_in_degrees
 42475 ;;		__motor_get_speed_in_degrees
 42476 ;;		__step_position_from_divide_position
 42477 ;;		_motor_divide_jump_to_nearest
 42478 ;;		_motor_arc_move
 42479 ;;		_adc_read_temperature
 42480 ;;		_motor_go_to_degrees_position
 42481 ;; This function uses a non-reentrant model
 42482 ;;
 42483                           
 42484                           	psect	text177
 42485  00FF16                     __ptext177:
 42486                           	opt stack 0
 42487  00FF16                     ___xxtofl:
 42488                           	opt stack 18
 42489                           
 42490                           ; BSR set to: 1
 42491                           ;incstack = 0
 42492                           ;___xxtofl@sign stored from wreg
 42493  00FF16  0100               	movlb	0	; () banked
 42494  00FF18  6F68               	movwf	___xxtofl@sign& (0+255),b
 42495  00FF1A  0100               	movlb	0	; () banked
 42496  00FF1C  5168               	movf	___xxtofl@sign& (0+255),w,b
 42497  00FF1E  A4D8               	btfss	status,2,c
 42498                           
 42499                           ; BSR set to: 0
 42500  00FF20  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 42501  00FF22  D01A               	goto	l3633
 42502                           
 42503                           ; BSR set to: 0
 42504  00FF24  C060  F064         	movff	___xxtofl@val,??___xxtofl
 42505  00FF28  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 42506  00FF2C  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 42507  00FF30  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 42508  00FF34  1F64               	comf	??___xxtofl& (0+255),f,b
 42509  00FF36  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 42510  00FF38  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 42511  00FF3A  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 42512  00FF3C  2B64               	incf	??___xxtofl& (0+255),f,b
 42513  00FF3E  0E00               	movlw	0
 42514  00FF40  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 42515  00FF42  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 42516  00FF44  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 42517  00FF46  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 42518  00FF4A  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 42519  00FF4E  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 42520  00FF52  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 42521  00FF56  D008               	goto	l3634
 42522  00FF58                     l3633:
 42523                           
 42524                           ; BSR set to: 0
 42525  00FF58  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 42526  00FF5C  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 42527  00FF60  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 42528  00FF64  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 42529  00FF68                     l3634:
 42530                           
 42531                           ; BSR set to: 0
 42532                           
 42533                           ; BSR set to: 0
 42534  00FF68  5160               	movf	___xxtofl@val& (0+255),w,b
 42535  00FF6A  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 42536  00FF6C  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 42537  00FF6E  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 42538  00FF70  A4D8               	btfss	status,2,c
 42539  00FF72  D009               	goto	l3635
 42540                           
 42541                           ; BSR set to: 0
 42542  00FF74  0E00               	movlw	0
 42543  00FF76  6F60               	movwf	?___xxtofl& (0+255),b
 42544  00FF78  0E00               	movlw	0
 42545  00FF7A  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 42546  00FF7C  0E00               	movlw	0
 42547  00FF7E  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 42548  00FF80  0E00               	movlw	0
 42549  00FF82  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 42550                           
 42551                           ; BSR set to: 0
 42552  00FF84  0012               	return	
 42553  00FF86                     l3635:
 42554                           
 42555                           ; BSR set to: 0
 42556                           
 42557                           ; BSR set to: 0
 42558  00FF86  0E96               	movlw	150
 42559  00FF88  6F69               	movwf	___xxtofl@exp& (0+255),b
 42560  00FF8A  D006               	goto	l3637
 42561  00FF8C                     
 42562                           ; BSR set to: 0
 42563                           
 42564                           ; BSR set to: 0
 42565  00FF8C  2B69               	incf	___xxtofl@exp& (0+255),f,b
 42566  00FF8E  90D8               	bcf	status,0,c
 42567  00FF90  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 42568  00FF92  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 42569  00FF94  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 42570  00FF96  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 42571  00FF98                     l3637:
 42572                           
 42573                           ; BSR set to: 0
 42574                           
 42575                           ; BSR set to: 0
 42576  00FF98  0E00               	movlw	0
 42577  00FF9A  156A               	andwf	___xxtofl@arg& (0+255),w,b
 42578  00FF9C  6F64               	movwf	??___xxtofl& (0+255),b
 42579  00FF9E  0E00               	movlw	0
 42580  00FFA0  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 42581  00FFA2  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 42582  00FFA4  0E00               	movlw	0
 42583  00FFA6  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 42584  00FFA8  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 42585  00FFAA  0EFE               	movlw	254
 42586  00FFAC  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 42587  00FFAE  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 42588  00FFB0  5164               	movf	??___xxtofl& (0+255),w,b
 42589  00FFB2  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 42590  00FFB4  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 42591  00FFB6  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 42592  00FFB8  B4D8               	btfsc	status,2,c
 42593  00FFBA  D00D               	goto	l3640
 42594  00FFBC  D7E7               	goto	l3638
 42595  00FFBE                     
 42596                           ; BSR set to: 0
 42597                           
 42598                           ; BSR set to: 0
 42599  00FFBE  2B69               	incf	___xxtofl@exp& (0+255),f,b
 42600                           
 42601                           ; BSR set to: 0
 42602  00FFC0  0E01               	movlw	1
 42603  00FFC2  276A               	addwf	___xxtofl@arg& (0+255),f,b
 42604  00FFC4  0E00               	movlw	0
 42605  00FFC6  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 42606  00FFC8  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 42607  00FFCA  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 42608                           
 42609                           ; BSR set to: 0
 42610  00FFCC  90D8               	bcf	status,0,c
 42611  00FFCE  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 42612  00FFD0  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 42613  00FFD2  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 42614  00FFD4  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 42615  00FFD6                     l3640:
 42616                           
 42617                           ; BSR set to: 0
 42618  00FFD6  0E00               	movlw	0
 42619  00FFD8  156A               	andwf	___xxtofl@arg& (0+255),w,b
 42620  00FFDA  6F64               	movwf	??___xxtofl& (0+255),b
 42621  00FFDC  0E00               	movlw	0
 42622  00FFDE  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 42623  00FFE0  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 42624  00FFE2  0E00               	movlw	0
 42625  00FFE4  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 42626  00FFE6  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 42627  00FFE8  0EFF               	movlw	255
 42628  00FFEA  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 42629  00FFEC  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 42630  00FFEE  5164               	movf	??___xxtofl& (0+255),w,b
 42631  00FFF0  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 42632  00FFF2  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 42633  00FFF4  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 42634  00FFF6  B4D8               	btfsc	status,2,c
 42635  00FFF8  D007               	goto	l3643
 42636  00FFFA  D7E1               	goto	l3641
 42637  00FFFC                     
 42638                           ; BSR set to: 0
 42639                           
 42640                           ; BSR set to: 0
 42641  00FFFC  0769               	decf	___xxtofl@exp& (0+255),f,b
 42642  00FFFE  90D8               	bcf	status,0,c
 42643  010000  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 42644  010002  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 42645  010004  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 42646  010006  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 42647  010008                     l3643:
 42648                           
 42649                           ; BSR set to: 0
 42650                           
 42651                           ; BSR set to: 0
 42652  010008  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 42653  01000A  D003               	goto	u10580
 42654                           
 42655                           ; BSR set to: 0
 42656  01000C  0E02               	movlw	2
 42657  01000E  6169               	cpfslt	___xxtofl@exp& (0+255),b
 42658  010010  D7F5               	goto	l3644
 42659  010012                     u10580:
 42660                           
 42661                           ; BSR set to: 0
 42662                           
 42663                           ; BSR set to: 0
 42664  010012  A169               	btfss	___xxtofl@exp& (0+255),0,b
 42665                           
 42666                           ; BSR set to: 0
 42667  010014  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 42668                           
 42669                           ; BSR set to: 0
 42670                           
 42671                           ; BSR set to: 0
 42672  010016  90D8               	bcf	status,0,c
 42673  010018  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 42674                           
 42675                           ; BSR set to: 0
 42676  01001A  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 42677  01001E  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 42678  010020  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 42679  010022  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 42680  010024  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 42681  010028  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 42682  01002A  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 42683  01002C  6B64               	clrf	??___xxtofl& (0+255),b
 42684  01002E  5164               	movf	??___xxtofl& (0+255),w,b
 42685  010030  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 42686  010032  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 42687  010034  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 42688  010036  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 42689  010038  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 42690  01003A  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 42691  01003C  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 42692                           
 42693                           ; BSR set to: 0
 42694  01003E  5168               	movf	___xxtofl@sign& (0+255),w,b
 42695  010040  A4D8               	btfss	status,2,c
 42696                           
 42697                           ; BSR set to: 0
 42698  010042  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 42699  010044  D001               	goto	l3649
 42700                           
 42701                           ; BSR set to: 0
 42702  010046  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 42703  010048                     l3649:
 42704                           
 42705                           ; BSR set to: 0
 42706                           
 42707                           ; BSR set to: 0
 42708  010048  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 42709  01004C  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 42710  010050  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 42711  010054  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 42712  010058  0012               	return	
 42713  01005A                     __end_of___xxtofl:
 42714                           	opt stack 0
 42715                           tosu	equ	0xFFF
 42716                           tosh	equ	0xFFE
 42717                           tosl	equ	0xFFD
 42718                           pclath	equ	0xFFA
 42719                           tblptru	equ	0xFF8
 42720                           tblptrh	equ	0xFF7
 42721                           tblptrl	equ	0xFF6
 42722                           tablat	equ	0xFF5
 42723                           prodh	equ	0xFF4
 42724                           prodl	equ	0xFF3
 42725                           intcon	equ	0xFF2
 42726                           indf0	equ	0xFEF
 42727                           postinc0	equ	0xFEE
 42728                           fsr0h	equ	0xFEA
 42729                           fsr0l	equ	0xFE9
 42730                           wreg	equ	0xFE8
 42731                           indf1	equ	0xFE7
 42732                           postinc1	equ	0xFE6
 42733                           postdec1	equ	0xFE5
 42734                           plusw1	equ	0xFE3
 42735                           fsr1h	equ	0xFE2
 42736                           fsr1l	equ	0xFE1
 42737                           indf2	equ	0xFDF
 42738                           postinc2	equ	0xFDE
 42739                           postdec2	equ	0xFDD
 42740                           plusw2	equ	0xFDB
 42741                           fsr2h	equ	0xFDA
 42742                           fsr2l	equ	0xFD9
 42743                           status	equ	0xFD8
 42744                           
 42745 ;; *************** function ___fltol *****************
 42746 ;; Defined at:
 42747 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 42748 ;; Parameters:    Size  Location     Type
 42749 ;;  f1              4    0[BANK0 ] unsigned char 
 42750 ;; Auto vars:     Size  Location     Type
 42751 ;;  exp1            1    9[BANK0 ] unsigned char 
 42752 ;;  sign1           1    8[BANK0 ] unsigned char 
 42753 ;; Return value:  Size  Location     Type
 42754 ;;                  4    0[BANK0 ] long 
 42755 ;; Registers used:
 42756 ;;		wreg, status,2, status,0
 42757 ;; Tracked objects:
 42758 ;;		On entry : 0/0
 42759 ;;		On exit  : 0/0
 42760 ;;		Unchanged: 0/0
 42761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42762 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42763 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42764 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42765 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42766 ;;Total ram usage:       10 bytes
 42767 ;; Hardware stack levels used:    1
 42768 ;; Hardware stack levels required when called:   10
 42769 ;; This function calls:
 42770 ;;		Nothing
 42771 ;; This function is called by:
 42772 ;;		_motor_steps_from_degrees
 42773 ;;		_motor_calculate_position_in_degrees
 42774 ;;		__motor_get_speed_in_degrees
 42775 ;;		__step_position_from_divide_position
 42776 ;;		_motor_divide_jump_to_nearest
 42777 ;;		_motor_arc_move
 42778 ;;		_adc_read_temperature
 42779 ;;		_motor_go_to_degrees_position
 42780 ;; This function uses a non-reentrant model
 42781 ;;
 42782                           
 42783                           	psect	text178
 42784  011DC6                     __ptext178:
 42785                           	opt stack 0
 42786  011DC6                     ___fltol:
 42787                           	opt stack 18
 42788                           
 42789                           ; BSR set to: 0
 42790                           ;incstack = 0
 42791  011DC6  0100               	movlb	0	; () banked
 42792  011DC8  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 42793  011DCA  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 42794  011DCC  6F69               	movwf	___fltol@exp1& (0+255),b
 42795  011DCE  5169               	movf	___fltol@exp1& (0+255),w,b
 42796  011DD0  A4D8               	btfss	status,2,c
 42797  011DD2  D009               	goto	l3278
 42798                           
 42799                           ; BSR set to: 0
 42800  011DD4  0E00               	movlw	0
 42801  011DD6  6F60               	movwf	?___fltol& (0+255),b
 42802  011DD8  0E00               	movlw	0
 42803  011DDA  6F61               	movwf	(?___fltol+1)& (0+255),b
 42804  011DDC  0E00               	movlw	0
 42805  011DDE  6F62               	movwf	(?___fltol+2)& (0+255),b
 42806  011DE0  0E00               	movlw	0
 42807  011DE2  6F63               	movwf	(?___fltol+3)& (0+255),b
 42808                           
 42809                           ; BSR set to: 0
 42810  011DE4  0012               	return	
 42811  011DE6                     l3278:
 42812                           
 42813                           ; BSR set to: 0
 42814                           
 42815                           ; BSR set to: 0
 42816  011DE6  C060  F064         	movff	___fltol@f1,??___fltol
 42817  011DEA  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 42818  011DEE  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 42819  011DF2  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 42820  011DF6  0E20               	movlw	32
 42821  011DF8  D005               	goto	u10460
 42822  011DFA                     u10465:
 42823  011DFA  90D8               	bcf	status,0,c
 42824  011DFC  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 42825  011DFE  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 42826  011E00  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 42827  011E02  3364               	rrcf	??___fltol& (0+255),f,b
 42828  011E04                     u10460:
 42829  011E04  2EE8               	decfsz	wreg,f,c
 42830  011E06  D7F9               	goto	u10465
 42831  011E08  5164               	movf	??___fltol& (0+255),w,b
 42832  011E0A  6F68               	movwf	___fltol@sign1& (0+255),b
 42833                           
 42834                           ; BSR set to: 0
 42835  011E0C  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 42836                           
 42837                           ; BSR set to: 0
 42838  011E0E  0EFF               	movlw	255
 42839  011E10  1760               	andwf	___fltol@f1& (0+255),f,b
 42840  011E12  0EFF               	movlw	255
 42841  011E14  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 42842  011E16  0EFF               	movlw	255
 42843  011E18  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 42844  011E1A  0E00               	movlw	0
 42845  011E1C  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 42846                           
 42847                           ; BSR set to: 0
 42848  011E1E  0E96               	movlw	150
 42849  011E20  5F69               	subwf	___fltol@exp1& (0+255),f,b
 42850                           
 42851                           ; BSR set to: 0
 42852  011E22  AF69               	btfss	___fltol@exp1& (0+255),7,b
 42853  011E24  D016               	goto	l3280
 42854                           
 42855                           ; BSR set to: 0
 42856  011E26  5169               	movf	___fltol@exp1& (0+255),w,b
 42857  011E28  0A80               	xorlw	128
 42858  011E2A  0F97               	addlw	151
 42859  011E2C  B0D8               	btfsc	status,0,c
 42860  011E2E  D009               	goto	l3281
 42861                           
 42862                           ; BSR set to: 0
 42863  011E30  0E00               	movlw	0
 42864  011E32  6F60               	movwf	?___fltol& (0+255),b
 42865  011E34  0E00               	movlw	0
 42866  011E36  6F61               	movwf	(?___fltol+1)& (0+255),b
 42867  011E38  0E00               	movlw	0
 42868  011E3A  6F62               	movwf	(?___fltol+2)& (0+255),b
 42869  011E3C  0E00               	movlw	0
 42870  011E3E  6F63               	movwf	(?___fltol+3)& (0+255),b
 42871                           
 42872                           ; BSR set to: 0
 42873  011E40  0012               	return	
 42874  011E42                     l3281:
 42875                           
 42876                           ; BSR set to: 0
 42877                           
 42878                           ; BSR set to: 0
 42879                           
 42880                           ; BSR set to: 0
 42881  011E42  90D8               	bcf	status,0,c
 42882  011E44  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 42883  011E46  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 42884  011E48  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 42885  011E4A  3360               	rrcf	___fltol@f1& (0+255),f,b
 42886                           
 42887                           ; BSR set to: 0
 42888  011E4C  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 42889  011E4E  D7F9               	goto	l3281
 42890                           
 42891                           ; BSR set to: 0
 42892  011E50  D015               	goto	u10500
 42893  011E52                     l3280:
 42894                           
 42895                           ; BSR set to: 0
 42896                           
 42897                           ; BSR set to: 0
 42898  011E52  0E1F               	movlw	31
 42899  011E54  6569               	cpfsgt	___fltol@exp1& (0+255),b
 42900  011E56  D00F               	goto	l3286
 42901                           
 42902                           ; BSR set to: 0
 42903  011E58  0E00               	movlw	0
 42904  011E5A  6F60               	movwf	?___fltol& (0+255),b
 42905  011E5C  0E00               	movlw	0
 42906  011E5E  6F61               	movwf	(?___fltol+1)& (0+255),b
 42907  011E60  0E00               	movlw	0
 42908  011E62  6F62               	movwf	(?___fltol+2)& (0+255),b
 42909  011E64  0E00               	movlw	0
 42910  011E66  6F63               	movwf	(?___fltol+3)& (0+255),b
 42911                           
 42912                           ; BSR set to: 0
 42913  011E68  0012               	return	
 42914  011E6A                     
 42915                           ; BSR set to: 0
 42916                           
 42917                           ; BSR set to: 0
 42918  011E6A  90D8               	bcf	status,0,c
 42919  011E6C  3760               	rlcf	___fltol@f1& (0+255),f,b
 42920  011E6E  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 42921  011E70  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 42922  011E72  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 42923  011E74  0769               	decf	___fltol@exp1& (0+255),f,b
 42924  011E76                     l3286:
 42925                           
 42926                           ; BSR set to: 0
 42927                           
 42928                           ; BSR set to: 0
 42929  011E76  5169               	movf	___fltol@exp1& (0+255),w,b
 42930  011E78  A4D8               	btfss	status,2,c
 42931  011E7A  D7F7               	goto	l3287
 42932  011E7C                     u10500:
 42933                           
 42934                           ; BSR set to: 0
 42935                           
 42936                           ; BSR set to: 0
 42937                           
 42938                           ; BSR set to: 0
 42939  011E7C  5168               	movf	___fltol@sign1& (0+255),w,b
 42940  011E7E  B4D8               	btfsc	status,2,c
 42941  011E80  D008               	goto	l3289
 42942                           
 42943                           ; BSR set to: 0
 42944  011E82  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 42945  011E84  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 42946  011E86  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 42947  011E88  6D60               	negf	___fltol@f1& (0+255),b
 42948  011E8A  0E00               	movlw	0
 42949  011E8C  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 42950  011E8E  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 42951  011E90  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 42952  011E92                     l3289:
 42953                           
 42954                           ; BSR set to: 0
 42955                           
 42956                           ; BSR set to: 0
 42957  011E92  C060  F060         	movff	___fltol@f1,?___fltol
 42958  011E96  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 42959  011E9A  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 42960  011E9E  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 42961  011EA2  0012               	return	
 42962  011EA4                     __end_of___fltol:
 42963                           	opt stack 0
 42964                           tosu	equ	0xFFF
 42965                           tosh	equ	0xFFE
 42966                           tosl	equ	0xFFD
 42967                           pclath	equ	0xFFA
 42968                           tblptru	equ	0xFF8
 42969                           tblptrh	equ	0xFF7
 42970                           tblptrl	equ	0xFF6
 42971                           tablat	equ	0xFF5
 42972                           prodh	equ	0xFF4
 42973                           prodl	equ	0xFF3
 42974                           intcon	equ	0xFF2
 42975                           indf0	equ	0xFEF
 42976                           postinc0	equ	0xFEE
 42977                           fsr0h	equ	0xFEA
 42978                           fsr0l	equ	0xFE9
 42979                           wreg	equ	0xFE8
 42980                           indf1	equ	0xFE7
 42981                           postinc1	equ	0xFE6
 42982                           postdec1	equ	0xFE5
 42983                           plusw1	equ	0xFE3
 42984                           fsr1h	equ	0xFE2
 42985                           fsr1l	equ	0xFE1
 42986                           indf2	equ	0xFDF
 42987                           postinc2	equ	0xFDE
 42988                           postdec2	equ	0xFDD
 42989                           plusw2	equ	0xFDB
 42990                           fsr2h	equ	0xFDA
 42991                           fsr2l	equ	0xFD9
 42992                           status	equ	0xFD8
 42993                           
 42994 ;; *************** function ___flmul *****************
 42995 ;; Defined at:
 42996 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 42997 ;; Parameters:    Size  Location     Type
 42998 ;;  b               4   14[BANK0 ] long 
 42999 ;;  a               4   18[BANK0 ] long 
 43000 ;; Auto vars:     Size  Location     Type
 43001 ;;  prod            4   33[BANK0 ] struct .
 43002 ;;  grs             4   27[BANK0 ] unsigned long 
 43003 ;;  temp            2   37[BANK0 ] struct .
 43004 ;;  bexp            1   32[BANK0 ] unsigned char 
 43005 ;;  aexp            1   31[BANK0 ] unsigned char 
 43006 ;;  sign            1   26[BANK0 ] unsigned char 
 43007 ;; Return value:  Size  Location     Type
 43008 ;;                  4   14[BANK0 ] unsigned char 
 43009 ;; Registers used:
 43010 ;;		wreg, status,2, status,0, prodl, prodh
 43011 ;; Tracked objects:
 43012 ;;		On entry : 0/0
 43013 ;;		On exit  : 0/0
 43014 ;;		Unchanged: 0/0
 43015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43016 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43017 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43018 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43019 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43020 ;;Total ram usage:       25 bytes
 43021 ;; Hardware stack levels used:    1
 43022 ;; Hardware stack levels required when called:   10
 43023 ;; This function calls:
 43024 ;;		Nothing
 43025 ;; This function is called by:
 43026 ;;		_motor_steps_from_degrees
 43027 ;;		_motor_calculate_position_in_degrees
 43028 ;;		__step_position_from_divide_position
 43029 ;;		_motor_divide_jump_to_nearest
 43030 ;;		_motor_arc_move
 43031 ;;		_adc_read_temperature
 43032 ;;		_motor_go_to_degrees_position
 43033 ;; This function uses a non-reentrant model
 43034 ;;
 43035                           
 43036                           	psect	text179
 43037  00CC70                     __ptext179:
 43038                           	opt stack 0
 43039  00CC70                     ___flmul:
 43040                           	opt stack 18
 43041                           
 43042                           ; BSR set to: 0
 43043                           ;incstack = 0
 43044  00CC70  0100               	movlb	0	; () banked
 43045  00CC72  5171               	movf	(___flmul@b+3)& (0+255),w,b
 43046  00CC74  0B80               	andlw	128
 43047  00CC76  6F7A               	movwf	___flmul@sign& (0+255),b
 43048  00CC78  5171               	movf	(___flmul@b+3)& (0+255),w,b
 43049  00CC7A  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 43050  00CC7C  6F80               	movwf	___flmul@bexp& (0+255),b
 43051                           
 43052                           ; BSR set to: 0
 43053  00CC7E  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 43054                           
 43055                           ; BSR set to: 0
 43056  00CC80  8180               	bsf	___flmul@bexp& (0+255),0,b
 43057                           
 43058                           ; BSR set to: 0
 43059                           
 43060                           ; BSR set to: 0
 43061  00CC82  5180               	movf	___flmul@bexp& (0+255),w,b
 43062  00CC84  B4D8               	btfsc	status,2,c
 43063  00CC86  D00D               	goto	l3586
 43064                           
 43065                           ; BSR set to: 0
 43066  00CC88  2980               	incf	___flmul@bexp& (0+255),w,b
 43067  00CC8A  A4D8               	btfss	status,2,c
 43068  00CC8C  D008               	goto	l3587
 43069                           
 43070                           ; BSR set to: 0
 43071  00CC8E  0E00               	movlw	0
 43072  00CC90  6F6E               	movwf	___flmul@b& (0+255),b
 43073  00CC92  0E00               	movlw	0
 43074  00CC94  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 43075  00CC96  0E00               	movlw	0
 43076  00CC98  6F70               	movwf	(___flmul@b+2)& (0+255),b
 43077  00CC9A  0E00               	movlw	0
 43078  00CC9C  6F71               	movwf	(___flmul@b+3)& (0+255),b
 43079  00CC9E                     l3587:
 43080                           
 43081                           ; BSR set to: 0
 43082                           
 43083                           ; BSR set to: 0
 43084  00CC9E  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 43085  00CCA0  D008               	goto	l3588
 43086  00CCA2                     l3586:
 43087                           
 43088                           ; BSR set to: 0
 43089                           
 43090                           ; BSR set to: 0
 43091  00CCA2  0E00               	movlw	0
 43092  00CCA4  6F6E               	movwf	___flmul@b& (0+255),b
 43093  00CCA6  0E00               	movlw	0
 43094  00CCA8  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 43095  00CCAA  0E00               	movlw	0
 43096  00CCAC  6F70               	movwf	(___flmul@b+2)& (0+255),b
 43097  00CCAE  0E00               	movlw	0
 43098  00CCB0  6F71               	movwf	(___flmul@b+3)& (0+255),b
 43099  00CCB2                     l3588:
 43100                           
 43101                           ; BSR set to: 0
 43102                           
 43103                           ; BSR set to: 0
 43104  00CCB2  5175               	movf	(___flmul@a+3)& (0+255),w,b
 43105  00CCB4  0B80               	andlw	128
 43106  00CCB6  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 43107                           
 43108                           ; BSR set to: 0
 43109  00CCB8  5175               	movf	(___flmul@a+3)& (0+255),w,b
 43110  00CCBA  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 43111  00CCBC  6F7F               	movwf	___flmul@aexp& (0+255),b
 43112                           
 43113                           ; BSR set to: 0
 43114  00CCBE  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 43115                           
 43116                           ; BSR set to: 0
 43117  00CCC0  817F               	bsf	___flmul@aexp& (0+255),0,b
 43118                           
 43119                           ; BSR set to: 0
 43120                           
 43121                           ; BSR set to: 0
 43122  00CCC2  517F               	movf	___flmul@aexp& (0+255),w,b
 43123  00CCC4  B4D8               	btfsc	status,2,c
 43124  00CCC6  D00D               	goto	l3590
 43125                           
 43126                           ; BSR set to: 0
 43127  00CCC8  297F               	incf	___flmul@aexp& (0+255),w,b
 43128  00CCCA  A4D8               	btfss	status,2,c
 43129  00CCCC  D008               	goto	l3591
 43130                           
 43131                           ; BSR set to: 0
 43132  00CCCE  0E00               	movlw	0
 43133  00CCD0  6F72               	movwf	___flmul@a& (0+255),b
 43134  00CCD2  0E00               	movlw	0
 43135  00CCD4  6F73               	movwf	(___flmul@a+1)& (0+255),b
 43136  00CCD6  0E00               	movlw	0
 43137  00CCD8  6F74               	movwf	(___flmul@a+2)& (0+255),b
 43138  00CCDA  0E00               	movlw	0
 43139  00CCDC  6F75               	movwf	(___flmul@a+3)& (0+255),b
 43140  00CCDE                     l3591:
 43141                           
 43142                           ; BSR set to: 0
 43143                           
 43144                           ; BSR set to: 0
 43145  00CCDE  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 43146  00CCE0  D008               	goto	l3592
 43147  00CCE2                     l3590:
 43148                           
 43149                           ; BSR set to: 0
 43150                           
 43151                           ; BSR set to: 0
 43152  00CCE2  0E00               	movlw	0
 43153  00CCE4  6F72               	movwf	___flmul@a& (0+255),b
 43154  00CCE6  0E00               	movlw	0
 43155  00CCE8  6F73               	movwf	(___flmul@a+1)& (0+255),b
 43156  00CCEA  0E00               	movlw	0
 43157  00CCEC  6F74               	movwf	(___flmul@a+2)& (0+255),b
 43158  00CCEE  0E00               	movlw	0
 43159  00CCF0  6F75               	movwf	(___flmul@a+3)& (0+255),b
 43160  00CCF2                     l3592:
 43161                           
 43162                           ; BSR set to: 0
 43163  00CCF2  517F               	movf	___flmul@aexp& (0+255),w,b
 43164  00CCF4  B4D8               	btfsc	status,2,c
 43165  00CCF6  D003               	goto	u10330
 43166                           
 43167                           ; BSR set to: 0
 43168  00CCF8  5180               	movf	___flmul@bexp& (0+255),w,b
 43169  00CCFA  A4D8               	btfss	status,2,c
 43170  00CCFC  D009               	goto	l3593
 43171  00CCFE                     u10330:
 43172                           
 43173                           ; BSR set to: 0
 43174                           
 43175                           ; BSR set to: 0
 43176  00CCFE  0E00               	movlw	0
 43177  00CD00  6F6E               	movwf	?___flmul& (0+255),b
 43178  00CD02  0E00               	movlw	0
 43179  00CD04  6F6F               	movwf	(?___flmul+1)& (0+255),b
 43180  00CD06  0E00               	movlw	0
 43181  00CD08  6F70               	movwf	(?___flmul+2)& (0+255),b
 43182  00CD0A  0E00               	movlw	0
 43183  00CD0C  6F71               	movwf	(?___flmul+3)& (0+255),b
 43184                           
 43185                           ; BSR set to: 0
 43186  00CD0E  0012               	return	
 43187  00CD10                     l3593:
 43188                           
 43189                           ; BSR set to: 0
 43190                           
 43191                           ; BSR set to: 0
 43192  00CD10  5174               	movf	(___flmul@a+2)& (0+255),w,b
 43193  00CD12  036E               	mulwf	___flmul@b& (0+255),b
 43194  00CD14  CFF3 F085          	movff	prodl,___flmul@temp
 43195  00CD18  CFF4 F086          	movff	prodh,___flmul@temp+1
 43196                           
 43197                           ; BSR set to: 0
 43198  00CD1C  5185               	movf	___flmul@temp& (0+255),w,b
 43199  00CD1E  6F7B               	movwf	___flmul@grs& (0+255),b
 43200  00CD20  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
 43201  00CD22  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
 43202  00CD24  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
 43203                           
 43204                           ; BSR set to: 0
 43205  00CD26  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43206  00CD28  6F81               	movwf	___flmul@prod& (0+255),b
 43207  00CD2A  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 43208  00CD2C  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 43209  00CD2E  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 43210  00CD30  5173               	movf	(___flmul@a+1)& (0+255),w,b
 43211  00CD32  036F               	mulwf	(___flmul@b+1)& (0+255),b
 43212  00CD34  CFF3 F085          	movff	prodl,___flmul@temp
 43213  00CD38  CFF4 F086          	movff	prodh,___flmul@temp+1
 43214                           
 43215                           ; BSR set to: 0
 43216  00CD3C  5185               	movf	___flmul@temp& (0+255),w,b
 43217  00CD3E  277B               	addwf	___flmul@grs& (0+255),f,b
 43218  00CD40  0E00               	movlw	0
 43219  00CD42  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43220  00CD44  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43221  00CD46  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43222                           
 43223                           ; BSR set to: 0
 43224  00CD48  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43225  00CD4A  2781               	addwf	___flmul@prod& (0+255),f,b
 43226  00CD4C  0E00               	movlw	0
 43227  00CD4E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43228  00CD50  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43229  00CD52  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43230  00CD54  5172               	movf	___flmul@a& (0+255),w,b
 43231  00CD56  0370               	mulwf	(___flmul@b+2)& (0+255),b
 43232  00CD58  CFF3 F085          	movff	prodl,___flmul@temp
 43233  00CD5C  CFF4 F086          	movff	prodh,___flmul@temp+1
 43234                           
 43235                           ; BSR set to: 0
 43236  00CD60  5185               	movf	___flmul@temp& (0+255),w,b
 43237  00CD62  277B               	addwf	___flmul@grs& (0+255),f,b
 43238  00CD64  0E00               	movlw	0
 43239  00CD66  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43240  00CD68  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43241  00CD6A  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43242                           
 43243                           ; BSR set to: 0
 43244  00CD6C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43245  00CD6E  2781               	addwf	___flmul@prod& (0+255),f,b
 43246  00CD70  0E00               	movlw	0
 43247  00CD72  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43248  00CD74  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43249  00CD76  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43250                           
 43251                           ; BSR set to: 0
 43252  00CD78  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 43253  00CD7C  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 43254  00CD80  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 43255  00CD84  6B7B               	clrf	___flmul@grs& (0+255),b
 43256                           
 43257                           ; BSR set to: 0
 43258  00CD86  5172               	movf	___flmul@a& (0+255),w,b
 43259  00CD88  036F               	mulwf	(___flmul@b+1)& (0+255),b
 43260  00CD8A  CFF3 F085          	movff	prodl,___flmul@temp
 43261  00CD8E  CFF4 F086          	movff	prodh,___flmul@temp+1
 43262                           
 43263                           ; BSR set to: 0
 43264  00CD92  5185               	movf	___flmul@temp& (0+255),w,b
 43265  00CD94  277B               	addwf	___flmul@grs& (0+255),f,b
 43266  00CD96  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43267  00CD98  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43268  00CD9A  0E00               	movlw	0
 43269  00CD9C  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43270  00CD9E  0E00               	movlw	0
 43271  00CDA0  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43272                           
 43273                           ; BSR set to: 0
 43274  00CDA2  5173               	movf	(___flmul@a+1)& (0+255),w,b
 43275  00CDA4  036E               	mulwf	___flmul@b& (0+255),b
 43276  00CDA6  CFF3 F085          	movff	prodl,___flmul@temp
 43277  00CDAA  CFF4 F086          	movff	prodh,___flmul@temp+1
 43278                           
 43279                           ; BSR set to: 0
 43280  00CDAE  5185               	movf	___flmul@temp& (0+255),w,b
 43281  00CDB0  277B               	addwf	___flmul@grs& (0+255),f,b
 43282  00CDB2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43283  00CDB4  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43284  00CDB6  0E00               	movlw	0
 43285  00CDB8  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43286  00CDBA  0E00               	movlw	0
 43287  00CDBC  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43288                           
 43289                           ; BSR set to: 0
 43290  00CDBE  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 43291  00CDC2  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 43292  00CDC6  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 43293  00CDCA  6B7B               	clrf	___flmul@grs& (0+255),b
 43294  00CDCC  5172               	movf	___flmul@a& (0+255),w,b
 43295  00CDCE  036E               	mulwf	___flmul@b& (0+255),b
 43296  00CDD0  CFF3 F085          	movff	prodl,___flmul@temp
 43297  00CDD4  CFF4 F086          	movff	prodh,___flmul@temp+1
 43298                           
 43299                           ; BSR set to: 0
 43300  00CDD8  5185               	movf	___flmul@temp& (0+255),w,b
 43301  00CDDA  277B               	addwf	___flmul@grs& (0+255),f,b
 43302  00CDDC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43303  00CDDE  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 43304  00CDE0  0E00               	movlw	0
 43305  00CDE2  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 43306  00CDE4  0E00               	movlw	0
 43307  00CDE6  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 43308                           
 43309                           ; BSR set to: 0
 43310  00CDE8  5174               	movf	(___flmul@a+2)& (0+255),w,b
 43311  00CDEA  036F               	mulwf	(___flmul@b+1)& (0+255),b
 43312  00CDEC  CFF3 F085          	movff	prodl,___flmul@temp
 43313  00CDF0  CFF4 F086          	movff	prodh,___flmul@temp+1
 43314  00CDF4  5185               	movf	___flmul@temp& (0+255),w,b
 43315  00CDF6  2781               	addwf	___flmul@prod& (0+255),f,b
 43316  00CDF8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43317  00CDFA  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43318  00CDFC  0E00               	movlw	0
 43319  00CDFE  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43320  00CE00  0E00               	movlw	0
 43321  00CE02  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43322                           
 43323                           ; BSR set to: 0
 43324  00CE04  5173               	movf	(___flmul@a+1)& (0+255),w,b
 43325  00CE06  0370               	mulwf	(___flmul@b+2)& (0+255),b
 43326  00CE08  CFF3 F085          	movff	prodl,___flmul@temp
 43327  00CE0C  CFF4 F086          	movff	prodh,___flmul@temp+1
 43328                           
 43329                           ; BSR set to: 0
 43330  00CE10  5185               	movf	___flmul@temp& (0+255),w,b
 43331  00CE12  2781               	addwf	___flmul@prod& (0+255),f,b
 43332  00CE14  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43333  00CE16  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43334  00CE18  0E00               	movlw	0
 43335  00CE1A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43336  00CE1C  0E00               	movlw	0
 43337  00CE1E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43338  00CE20  5174               	movf	(___flmul@a+2)& (0+255),w,b
 43339  00CE22  0370               	mulwf	(___flmul@b+2)& (0+255),b
 43340  00CE24  CFF3 F085          	movff	prodl,___flmul@temp
 43341  00CE28  CFF4 F086          	movff	prodh,___flmul@temp+1
 43342                           
 43343                           ; BSR set to: 0
 43344  00CE2C  5185               	movf	___flmul@temp& (0+255),w,b
 43345  00CE2E  6F76               	movwf	??___flmul& (0+255),b
 43346  00CE30  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43347  00CE32  6F77               	movwf	(??___flmul+1)& (0+255),b
 43348  00CE34  6B78               	clrf	(??___flmul+2)& (0+255),b
 43349  00CE36  6B79               	clrf	(??___flmul+3)& (0+255),b
 43350  00CE38  C078  F079         	movff	??___flmul+2,??___flmul+3
 43351  00CE3C  C077  F078         	movff	??___flmul+1,??___flmul+2
 43352  00CE40  C076  F077         	movff	??___flmul,??___flmul+1
 43353  00CE44  6B76               	clrf	??___flmul& (0+255),b
 43354  00CE46  5176               	movf	??___flmul& (0+255),w,b
 43355  00CE48  2781               	addwf	___flmul@prod& (0+255),f,b
 43356  00CE4A  5177               	movf	(??___flmul+1)& (0+255),w,b
 43357  00CE4C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43358  00CE4E  5178               	movf	(??___flmul+2)& (0+255),w,b
 43359  00CE50  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43360  00CE52  5179               	movf	(??___flmul+3)& (0+255),w,b
 43361  00CE54  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43362                           
 43363                           ; BSR set to: 0
 43364  00CE56  C07B  F076         	movff	___flmul@grs,??___flmul
 43365  00CE5A  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
 43366  00CE5E  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
 43367  00CE62  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
 43368  00CE66  0E19               	movlw	25
 43369  00CE68  D005               	goto	u10340
 43370  00CE6A                     u10345:
 43371  00CE6A  90D8               	bcf	status,0,c
 43372  00CE6C  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 43373  00CE6E  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 43374  00CE70  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 43375  00CE72  3376               	rrcf	??___flmul& (0+255),f,b
 43376  00CE74                     u10340:
 43377  00CE74  2EE8               	decfsz	wreg,f,c
 43378  00CE76  D7F9               	goto	u10345
 43379  00CE78  5176               	movf	??___flmul& (0+255),w,b
 43380  00CE7A  2781               	addwf	___flmul@prod& (0+255),f,b
 43381  00CE7C  5177               	movf	(??___flmul+1)& (0+255),w,b
 43382  00CE7E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43383  00CE80  5178               	movf	(??___flmul+2)& (0+255),w,b
 43384  00CE82  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43385  00CE84  5179               	movf	(??___flmul+3)& (0+255),w,b
 43386  00CE86  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43387                           
 43388                           ; BSR set to: 0
 43389  00CE88  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 43390  00CE8C  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 43391  00CE90  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 43392  00CE94  6B7B               	clrf	___flmul@grs& (0+255),b
 43393                           
 43394                           ; BSR set to: 0
 43395  00CE96  517F               	movf	___flmul@aexp& (0+255),w,b
 43396  00CE98  C080  F076         	movff	___flmul@bexp,??___flmul
 43397  00CE9C  6B77               	clrf	(??___flmul+1)& (0+255),b
 43398  00CE9E  2776               	addwf	??___flmul& (0+255),f,b
 43399  00CEA0  0E00               	movlw	0
 43400  00CEA2  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 43401  00CEA4  0E82               	movlw	130
 43402  00CEA6  2576               	addwf	??___flmul& (0+255),w,b
 43403  00CEA8  6F85               	movwf	___flmul@temp& (0+255),b
 43404  00CEAA  0EFF               	movlw	255
 43405  00CEAC  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 43406  00CEAE  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 43407  00CEB0  D00F               	goto	l3597
 43408  00CEB2                     
 43409                           ; BSR set to: 0
 43410                           
 43411                           ; BSR set to: 0
 43412  00CEB2  90D8               	bcf	status,0,c
 43413  00CEB4  3781               	rlcf	___flmul@prod& (0+255),f,b
 43414  00CEB6  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 43415  00CEB8  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 43416  00CEBA  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 43417                           
 43418                           ; BSR set to: 0
 43419  00CEBC  BF7E               	btfsc	(___flmul@grs+3)& (0+255),7,b
 43420                           
 43421                           ; BSR set to: 0
 43422  00CEBE  8181               	bsf	___flmul@prod& (0+255),0,b
 43423                           
 43424                           ; BSR set to: 0
 43425  00CEC0  90D8               	bcf	status,0,c
 43426  00CEC2  377B               	rlcf	___flmul@grs& (0+255),f,b
 43427  00CEC4  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
 43428  00CEC6  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
 43429  00CEC8  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
 43430  00CECA  0785               	decf	___flmul@temp& (0+255),f,b
 43431  00CECC  A0D8               	btfss	status,0,c
 43432  00CECE  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 43433  00CED0                     l3597:
 43434                           
 43435                           ; BSR set to: 0
 43436                           
 43437                           ; BSR set to: 0
 43438  00CED0  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 43439  00CED2  D7EF               	goto	l3598
 43440                           
 43441                           ; BSR set to: 0
 43442                           
 43443                           ; BSR set to: 0
 43444  00CED4  0E00               	movlw	0
 43445  00CED6  6F7F               	movwf	___flmul@aexp& (0+255),b
 43446                           
 43447                           ; BSR set to: 0
 43448  00CED8  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
 43449  00CEDA  D016               	goto	l3604
 43450                           
 43451                           ; BSR set to: 0
 43452  00CEDC  0EFF               	movlw	255
 43453  00CEDE  157B               	andwf	___flmul@grs& (0+255),w,b
 43454  00CEE0  6F76               	movwf	??___flmul& (0+255),b
 43455  00CEE2  0EFF               	movlw	255
 43456  00CEE4  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
 43457  00CEE6  6F77               	movwf	(??___flmul+1)& (0+255),b
 43458  00CEE8  0EFF               	movlw	255
 43459  00CEEA  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
 43460  00CEEC  6F78               	movwf	(??___flmul+2)& (0+255),b
 43461  00CEEE  0E7F               	movlw	127
 43462  00CEF0  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
 43463  00CEF2  6F79               	movwf	(??___flmul+3)& (0+255),b
 43464  00CEF4  5176               	movf	??___flmul& (0+255),w,b
 43465  00CEF6  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 43466  00CEF8  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 43467  00CEFA  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 43468  00CEFC  A4D8               	btfss	status,2,c
 43469  00CEFE  D002               	goto	u10390
 43470                           
 43471                           ; BSR set to: 0
 43472                           
 43473                           ; BSR set to: 0
 43474  00CF00  A181               	btfss	___flmul@prod& (0+255),0,b
 43475  00CF02  D002               	goto	l3604
 43476  00CF04                     u10390:
 43477                           
 43478                           ; BSR set to: 0
 43479  00CF04  0E01               	movlw	1
 43480  00CF06  6F7F               	movwf	___flmul@aexp& (0+255),b
 43481  00CF08                     l3604:
 43482                           
 43483                           ; BSR set to: 0
 43484                           
 43485                           ; BSR set to: 0
 43486                           
 43487                           ; BSR set to: 0
 43488  00CF08  517F               	movf	___flmul@aexp& (0+255),w,b
 43489  00CF0A  B4D8               	btfsc	status,2,c
 43490  00CF0C  D01F               	goto	l3606
 43491                           
 43492                           ; BSR set to: 0
 43493  00CF0E  0E01               	movlw	1
 43494  00CF10  2781               	addwf	___flmul@prod& (0+255),f,b
 43495  00CF12  0E00               	movlw	0
 43496  00CF14  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 43497  00CF16  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 43498  00CF18  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 43499                           
 43500                           ; BSR set to: 0
 43501  00CF1A  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 43502  00CF1C  D017               	goto	l3606
 43503                           
 43504                           ; BSR set to: 0
 43505  00CF1E  C081  F076         	movff	___flmul@prod,??___flmul
 43506  00CF22  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 43507  00CF26  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 43508  00CF2A  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 43509  00CF2E  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 43510  00CF30  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 43511  00CF32  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 43512  00CF34  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 43513  00CF36  3376               	rrcf	??___flmul& (0+255),f,b
 43514  00CF38  C076  F081         	movff	??___flmul,___flmul@prod
 43515  00CF3C  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 43516  00CF40  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 43517  00CF44  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 43518                           
 43519                           ; BSR set to: 0
 43520  00CF48  4B85               	infsnz	___flmul@temp& (0+255),f,b
 43521  00CF4A  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 43522  00CF4C                     l3606:
 43523                           
 43524                           ; BSR set to: 0
 43525                           
 43526                           ; BSR set to: 0
 43527                           
 43528                           ; BSR set to: 0
 43529  00CF4C  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 43530  00CF4E  D00D               	goto	l3607
 43531  00CF50  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43532  00CF52  E103               	bnz	u10420
 43533  00CF54  2985               	incf	___flmul@temp& (0+255),w,b
 43534  00CF56  A0D8               	btfss	status,0,c
 43535  00CF58  D008               	goto	l3607
 43536  00CF5A                     u10420:
 43537                           
 43538                           ; BSR set to: 0
 43539  00CF5A  0E00               	movlw	0
 43540  00CF5C  6F81               	movwf	___flmul@prod& (0+255),b
 43541  00CF5E  0E00               	movlw	0
 43542  00CF60  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 43543  00CF62  0E80               	movlw	128
 43544  00CF64  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 43545  00CF66  0E7F               	movlw	127
 43546  00CF68  D020               	goto	L67
 43547  00CF6A                     l3607:
 43548                           
 43549                           ; BSR set to: 0
 43550                           
 43551                           ; BSR set to: 0
 43552  00CF6A  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 43553  00CF6C  D005               	goto	u10430
 43554  00CF6E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 43555  00CF70  E10E               	bnz	l3609
 43556  00CF72  0585               	decf	___flmul@temp& (0+255),w,b
 43557  00CF74  B0D8               	btfsc	status,0,c
 43558  00CF76  D00B               	goto	l3609
 43559  00CF78                     u10430:
 43560                           
 43561                           ; BSR set to: 0
 43562  00CF78  0E00               	movlw	0
 43563  00CF7A  6F81               	movwf	___flmul@prod& (0+255),b
 43564  00CF7C  0E00               	movlw	0
 43565  00CF7E  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 43566  00CF80  0E00               	movlw	0
 43567  00CF82  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 43568  00CF84  0E00               	movlw	0
 43569  00CF86  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 43570  00CF88  0E00               	movlw	0
 43571  00CF8A  6F7A               	movwf	___flmul@sign& (0+255),b
 43572  00CF8C  D00F               	goto	l3610
 43573  00CF8E                     l3609:
 43574                           
 43575                           ; BSR set to: 0
 43576  00CF8E  C085  F080         	movff	___flmul@temp,___flmul@bexp
 43577                           
 43578                           ; BSR set to: 0
 43579  00CF92  0EFF               	movlw	255
 43580  00CF94  1781               	andwf	___flmul@prod& (0+255),f,b
 43581  00CF96  0EFF               	movlw	255
 43582  00CF98  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 43583  00CF9A  0E7F               	movlw	127
 43584  00CF9C  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 43585  00CF9E  0E00               	movlw	0
 43586  00CFA0  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 43587                           
 43588                           ; BSR set to: 0
 43589  00CFA2  B180               	btfsc	___flmul@bexp& (0+255),0,b
 43590                           
 43591                           ; BSR set to: 0
 43592  00CFA4  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 43593                           
 43594                           ; BSR set to: 0
 43595                           
 43596                           ; BSR set to: 0
 43597  00CFA6  90D8               	bcf	status,0,c
 43598  00CFA8  3180               	rrcf	___flmul@bexp& (0+255),w,b
 43599  00CFAA                     L67:
 43600  00CFAA  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 43601  00CFAC                     l3610:
 43602                           
 43603                           ; BSR set to: 0
 43604                           
 43605                           ; BSR set to: 0
 43606                           
 43607                           ; BSR set to: 0
 43608  00CFAC  517A               	movf	___flmul@sign& (0+255),w,b
 43609  00CFAE  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 43610                           
 43611                           ; BSR set to: 0
 43612  00CFB0  C081  F06E         	movff	___flmul@prod,?___flmul
 43613  00CFB4  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 43614  00CFB8  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 43615  00CFBC  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 43616  00CFC0  0012               	return	
 43617  00CFC2                     __end_of___flmul:
 43618                           	opt stack 0
 43619                           tosu	equ	0xFFF
 43620                           tosh	equ	0xFFE
 43621                           tosl	equ	0xFFD
 43622                           pclath	equ	0xFFA
 43623                           tblptru	equ	0xFF8
 43624                           tblptrh	equ	0xFF7
 43625                           tblptrl	equ	0xFF6
 43626                           tablat	equ	0xFF5
 43627                           prodh	equ	0xFF4
 43628                           prodl	equ	0xFF3
 43629                           intcon	equ	0xFF2
 43630                           indf0	equ	0xFEF
 43631                           postinc0	equ	0xFEE
 43632                           fsr0h	equ	0xFEA
 43633                           fsr0l	equ	0xFE9
 43634                           wreg	equ	0xFE8
 43635                           indf1	equ	0xFE7
 43636                           postinc1	equ	0xFE6
 43637                           postdec1	equ	0xFE5
 43638                           plusw1	equ	0xFE3
 43639                           fsr1h	equ	0xFE2
 43640                           fsr1l	equ	0xFE1
 43641                           indf2	equ	0xFDF
 43642                           postinc2	equ	0xFDE
 43643                           postdec2	equ	0xFDD
 43644                           plusw2	equ	0xFDB
 43645                           fsr2h	equ	0xFDA
 43646                           fsr2l	equ	0xFD9
 43647                           status	equ	0xFD8
 43648                           
 43649 ;; *************** function ___fldiv *****************
 43650 ;; Defined at:
 43651 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 43652 ;; Parameters:    Size  Location     Type
 43653 ;;  b               4   14[BANK0 ] unsigned char 
 43654 ;;  a               4   18[BANK0 ] unsigned char 
 43655 ;; Auto vars:     Size  Location     Type
 43656 ;;  grs             4   33[BANK0 ] unsigned long 
 43657 ;;  rem             4   26[BANK0 ] unsigned long 
 43658 ;;  new_exp         2   31[BANK0 ] int 
 43659 ;;  aexp            1   38[BANK0 ] unsigned char 
 43660 ;;  bexp            1   37[BANK0 ] unsigned char 
 43661 ;;  sign            1   30[BANK0 ] unsigned char 
 43662 ;; Return value:  Size  Location     Type
 43663 ;;                  4   14[BANK0 ] unsigned char 
 43664 ;; Registers used:
 43665 ;;		wreg, status,2, status,0
 43666 ;; Tracked objects:
 43667 ;;		On entry : 0/0
 43668 ;;		On exit  : 0/0
 43669 ;;		Unchanged: 0/0
 43670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43671 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43672 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43673 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43674 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43675 ;;Total ram usage:       25 bytes
 43676 ;; Hardware stack levels used:    1
 43677 ;; Hardware stack levels required when called:   10
 43678 ;; This function calls:
 43679 ;;		Nothing
 43680 ;; This function is called by:
 43681 ;;		_motor_steps_from_degrees
 43682 ;;		_motor_calculate_position_in_degrees
 43683 ;;		__motor_get_speed_in_degrees
 43684 ;;		__step_position_from_divide_position
 43685 ;;		_motor_divide_jump_to_nearest
 43686 ;;		_motor_arc_move
 43687 ;;		_motor_go_to_degrees_position
 43688 ;; This function uses a non-reentrant model
 43689 ;;
 43690                           
 43691                           	psect	text180
 43692  00DBF8                     __ptext180:
 43693                           	opt stack 0
 43694  00DBF8                     ___fldiv:
 43695                           	opt stack 18
 43696                           
 43697                           ; BSR set to: 0
 43698                           ;incstack = 0
 43699  00DBF8  0100               	movlb	0	; () banked
 43700  00DBFA  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 43701  00DBFC  0B80               	andlw	128
 43702  00DBFE  6F7E               	movwf	___fldiv@sign& (0+255),b
 43703  00DC00  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 43704  00DC02  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 43705  00DC04  6F85               	movwf	___fldiv@bexp& (0+255),b
 43706                           
 43707                           ; BSR set to: 0
 43708  00DC06  BF70               	btfsc	(___fldiv@b+2)& (0+255),7,b
 43709                           
 43710                           ; BSR set to: 0
 43711  00DC08  8185               	bsf	___fldiv@bexp& (0+255),0,b
 43712                           
 43713                           ; BSR set to: 0
 43714                           
 43715                           ; BSR set to: 0
 43716  00DC0A  5185               	movf	___fldiv@bexp& (0+255),w,b
 43717  00DC0C  B4D8               	btfsc	status,2,c
 43718  00DC0E  D00D               	goto	l3552
 43719                           
 43720                           ; BSR set to: 0
 43721  00DC10  2985               	incf	___fldiv@bexp& (0+255),w,b
 43722  00DC12  A4D8               	btfss	status,2,c
 43723  00DC14  D008               	goto	l3553
 43724                           
 43725                           ; BSR set to: 0
 43726  00DC16  0E00               	movlw	0
 43727  00DC18  6F6E               	movwf	___fldiv@b& (0+255),b
 43728  00DC1A  0E00               	movlw	0
 43729  00DC1C  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 43730  00DC1E  0E00               	movlw	0
 43731  00DC20  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 43732  00DC22  0E00               	movlw	0
 43733  00DC24  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 43734  00DC26                     l3553:
 43735                           
 43736                           ; BSR set to: 0
 43737                           
 43738                           ; BSR set to: 0
 43739  00DC26  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 43740  00DC28  D006               	goto	L68
 43741  00DC2A                     l3552:
 43742                           
 43743                           ; BSR set to: 0
 43744                           
 43745                           ; BSR set to: 0
 43746  00DC2A  0E00               	movlw	0
 43747  00DC2C  6F6E               	movwf	___fldiv@b& (0+255),b
 43748  00DC2E  0E00               	movlw	0
 43749  00DC30  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 43750  00DC32  0E00               	movlw	0
 43751  00DC34  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 43752  00DC36                     L68:
 43753  00DC36  0E00               	movlw	0
 43754  00DC38  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 43755                           
 43756                           ; BSR set to: 0
 43757                           
 43758                           ; BSR set to: 0
 43759  00DC3A  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 43760  00DC3C  0B80               	andlw	128
 43761  00DC3E  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
 43762                           
 43763                           ; BSR set to: 0
 43764  00DC40  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 43765  00DC42  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 43766  00DC44  6F86               	movwf	___fldiv@aexp& (0+255),b
 43767                           
 43768                           ; BSR set to: 0
 43769  00DC46  BF74               	btfsc	(___fldiv@a+2)& (0+255),7,b
 43770                           
 43771                           ; BSR set to: 0
 43772  00DC48  8186               	bsf	___fldiv@aexp& (0+255),0,b
 43773                           
 43774                           ; BSR set to: 0
 43775                           
 43776                           ; BSR set to: 0
 43777  00DC4A  5186               	movf	___fldiv@aexp& (0+255),w,b
 43778  00DC4C  B4D8               	btfsc	status,2,c
 43779  00DC4E  D00D               	goto	l3556
 43780                           
 43781                           ; BSR set to: 0
 43782  00DC50  2986               	incf	___fldiv@aexp& (0+255),w,b
 43783  00DC52  A4D8               	btfss	status,2,c
 43784  00DC54  D008               	goto	l3557
 43785                           
 43786                           ; BSR set to: 0
 43787  00DC56  0E00               	movlw	0
 43788  00DC58  6F72               	movwf	___fldiv@a& (0+255),b
 43789  00DC5A  0E00               	movlw	0
 43790  00DC5C  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 43791  00DC5E  0E00               	movlw	0
 43792  00DC60  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 43793  00DC62  0E00               	movlw	0
 43794  00DC64  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 43795  00DC66                     l3557:
 43796                           
 43797                           ; BSR set to: 0
 43798                           
 43799                           ; BSR set to: 0
 43800  00DC66  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 43801  00DC68  D006               	goto	L69
 43802  00DC6A                     l3556:
 43803                           
 43804                           ; BSR set to: 0
 43805                           
 43806                           ; BSR set to: 0
 43807  00DC6A  0E00               	movlw	0
 43808  00DC6C  6F72               	movwf	___fldiv@a& (0+255),b
 43809  00DC6E  0E00               	movlw	0
 43810  00DC70  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 43811  00DC72  0E00               	movlw	0
 43812  00DC74  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 43813  00DC76                     L69:
 43814  00DC76  0E00               	movlw	0
 43815  00DC78  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 43816                           
 43817                           ; BSR set to: 0
 43818                           
 43819                           ; BSR set to: 0
 43820  00DC7A  5172               	movf	___fldiv@a& (0+255),w,b
 43821  00DC7C  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 43822  00DC7E  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 43823  00DC80  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 43824  00DC82  A4D8               	btfss	status,2,c
 43825  00DC84  D017               	goto	l3559
 43826                           
 43827                           ; BSR set to: 0
 43828  00DC86  0E00               	movlw	0
 43829  00DC88  6F6E               	movwf	___fldiv@b& (0+255),b
 43830  00DC8A  0E00               	movlw	0
 43831  00DC8C  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 43832  00DC8E  0E00               	movlw	0
 43833  00DC90  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 43834  00DC92  0E00               	movlw	0
 43835  00DC94  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 43836                           
 43837                           ; BSR set to: 0
 43838  00DC96  0E80               	movlw	128
 43839  00DC98  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 43840  00DC9A  0E7F               	movlw	127
 43841  00DC9C  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 43842                           
 43843                           ; BSR set to: 0
 43844  00DC9E  517E               	movf	___fldiv@sign& (0+255),w,b
 43845  00DCA0  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 43846                           
 43847                           ; BSR set to: 0
 43848  00DCA2  C06E  F06E         	movff	___fldiv@b,?___fldiv
 43849  00DCA6  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 43850  00DCAA  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 43851  00DCAE  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 43852                           
 43853                           ; BSR set to: 0
 43854  00DCB2  0012               	return	
 43855  00DCB4                     l3559:
 43856                           
 43857                           ; BSR set to: 0
 43858                           
 43859                           ; BSR set to: 0
 43860  00DCB4  5185               	movf	___fldiv@bexp& (0+255),w,b
 43861  00DCB6  A4D8               	btfss	status,2,c
 43862  00DCB8  D011               	goto	l3561
 43863                           
 43864                           ; BSR set to: 0
 43865  00DCBA  0E00               	movlw	0
 43866  00DCBC  6F6E               	movwf	___fldiv@b& (0+255),b
 43867  00DCBE  0E00               	movlw	0
 43868  00DCC0  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 43869  00DCC2  0E00               	movlw	0
 43870  00DCC4  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 43871  00DCC6  0E00               	movlw	0
 43872  00DCC8  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 43873                           
 43874                           ; BSR set to: 0
 43875  00DCCA  C06E  F06E         	movff	___fldiv@b,?___fldiv
 43876  00DCCE  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 43877  00DCD2  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 43878  00DCD6  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 43879                           
 43880                           ; BSR set to: 0
 43881  00DCDA  0012               	return	
 43882  00DCDC                     l3561:
 43883                           
 43884                           ; BSR set to: 0
 43885                           
 43886                           ; BSR set to: 0
 43887  00DCDC  5186               	movf	___fldiv@aexp& (0+255),w,b
 43888  00DCDE  6F76               	movwf	??___fldiv& (0+255),b
 43889  00DCE0  6B77               	clrf	(??___fldiv+1)& (0+255),b
 43890  00DCE2  1F76               	comf	??___fldiv& (0+255),f,b
 43891  00DCE4  1F77               	comf	(??___fldiv+1)& (0+255),f,b
 43892  00DCE6  4B76               	infsnz	??___fldiv& (0+255),f,b
 43893  00DCE8  2B77               	incf	(??___fldiv+1)& (0+255),f,b
 43894  00DCEA  5185               	movf	___fldiv@bexp& (0+255),w,b
 43895  00DCEC  6F78               	movwf	(??___fldiv+2)& (0+255),b
 43896  00DCEE  6B79               	clrf	(??___fldiv+3)& (0+255),b
 43897  00DCF0  5176               	movf	??___fldiv& (0+255),w,b
 43898  00DCF2  2778               	addwf	(??___fldiv+2)& (0+255),f,b
 43899  00DCF4  5177               	movf	(??___fldiv+1)& (0+255),w,b
 43900  00DCF6  2379               	addwfc	(??___fldiv+3)& (0+255),f,b
 43901  00DCF8  0E7F               	movlw	127
 43902  00DCFA  2578               	addwf	(??___fldiv+2)& (0+255),w,b
 43903  00DCFC  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 43904  00DCFE  0E00               	movlw	0
 43905  00DD00  2179               	addwfc	(??___fldiv+3)& (0+255),w,b
 43906  00DD02  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 43907                           
 43908                           ; BSR set to: 0
 43909  00DD04  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
 43910  00DD08  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
 43911  00DD0C  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
 43912  00DD10  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
 43913                           
 43914                           ; BSR set to: 0
 43915  00DD14  0E00               	movlw	0
 43916  00DD16  6F6E               	movwf	___fldiv@b& (0+255),b
 43917  00DD18  0E00               	movlw	0
 43918  00DD1A  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 43919  00DD1C  0E00               	movlw	0
 43920  00DD1E  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 43921  00DD20  0E00               	movlw	0
 43922  00DD22  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 43923                           
 43924                           ; BSR set to: 0
 43925  00DD24  0E00               	movlw	0
 43926  00DD26  6F81               	movwf	___fldiv@grs& (0+255),b
 43927  00DD28  0E00               	movlw	0
 43928  00DD2A  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 43929  00DD2C  0E00               	movlw	0
 43930  00DD2E  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 43931  00DD30  0E00               	movlw	0
 43932  00DD32  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 43933                           
 43934                           ; BSR set to: 0
 43935  00DD34  0E00               	movlw	0
 43936  00DD36  6F86               	movwf	___fldiv@aexp& (0+255),b
 43937  00DD38  D028               	goto	l3562
 43938  00DD3A                     
 43939                           ; BSR set to: 0
 43940                           
 43941                           ; BSR set to: 0
 43942  00DD3A  5186               	movf	___fldiv@aexp& (0+255),w,b
 43943  00DD3C  B4D8               	btfsc	status,2,c
 43944  00DD3E  D011               	goto	l3564
 43945                           
 43946                           ; BSR set to: 0
 43947  00DD40  90D8               	bcf	status,0,c
 43948  00DD42  377A               	rlcf	___fldiv@rem& (0+255),f,b
 43949  00DD44  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 43950  00DD46  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 43951  00DD48  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 43952  00DD4A  90D8               	bcf	status,0,c
 43953  00DD4C  376E               	rlcf	___fldiv@b& (0+255),f,b
 43954  00DD4E  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 43955  00DD50  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 43956  00DD52  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 43957                           
 43958                           ; BSR set to: 0
 43959  00DD54  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 43960                           
 43961                           ; BSR set to: 0
 43962  00DD56  816E               	bsf	___fldiv@b& (0+255),0,b
 43963                           
 43964                           ; BSR set to: 0
 43965  00DD58  90D8               	bcf	status,0,c
 43966  00DD5A  3781               	rlcf	___fldiv@grs& (0+255),f,b
 43967  00DD5C  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 43968  00DD5E  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 43969  00DD60  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 43970  00DD62                     l3564:
 43971                           
 43972                           ; BSR set to: 0
 43973                           
 43974                           ; BSR set to: 0
 43975  00DD62  5172               	movf	___fldiv@a& (0+255),w,b
 43976  00DD64  5D7A               	subwf	___fldiv@rem& (0+255),w,b
 43977  00DD66  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 43978  00DD68  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 43979  00DD6A  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 43980  00DD6C  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 43981  00DD6E  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 43982  00DD70  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 43983  00DD72  A0D8               	btfss	status,0,c
 43984  00DD74  D009               	goto	l3566
 43985                           
 43986                           ; BSR set to: 0
 43987  00DD76  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 43988                           
 43989                           ; BSR set to: 0
 43990  00DD78  5172               	movf	___fldiv@a& (0+255),w,b
 43991  00DD7A  5F7A               	subwf	___fldiv@rem& (0+255),f,b
 43992  00DD7C  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 43993  00DD7E  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 43994  00DD80  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 43995  00DD82  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 43996  00DD84  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 43997  00DD86  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 43998  00DD88                     l3566:
 43999                           
 44000                           ; BSR set to: 0
 44001                           
 44002                           ; BSR set to: 0
 44003  00DD88  2B86               	incf	___fldiv@aexp& (0+255),f,b
 44004  00DD8A                     l3562:
 44005                           
 44006                           ; BSR set to: 0
 44007  00DD8A  0E19               	movlw	25
 44008  00DD8C  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 44009  00DD8E  D7D5               	goto	l3563
 44010                           
 44011                           ; BSR set to: 0
 44012                           
 44013                           ; BSR set to: 0
 44014  00DD90  517A               	movf	___fldiv@rem& (0+255),w,b
 44015  00DD92  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 44016  00DD94  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 44017  00DD96  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 44018  00DD98  B4D8               	btfsc	status,2,c
 44019  00DD9A  D011               	goto	l3569
 44020                           
 44021                           ; BSR set to: 0
 44022  00DD9C  8181               	bsf	___fldiv@grs& (0+255),0,b
 44023                           
 44024                           ; BSR set to: 0
 44025  00DD9E  D00F               	goto	l3569
 44026  00DDA0                     
 44027                           ; BSR set to: 0
 44028                           
 44029                           ; BSR set to: 0
 44030  00DDA0  90D8               	bcf	status,0,c
 44031  00DDA2  376E               	rlcf	___fldiv@b& (0+255),f,b
 44032  00DDA4  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 44033  00DDA6  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 44034  00DDA8  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 44035                           
 44036                           ; BSR set to: 0
 44037  00DDAA  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 44038                           
 44039                           ; BSR set to: 0
 44040  00DDAC  816E               	bsf	___fldiv@b& (0+255),0,b
 44041                           
 44042                           ; BSR set to: 0
 44043  00DDAE  90D8               	bcf	status,0,c
 44044  00DDB0  3781               	rlcf	___fldiv@grs& (0+255),f,b
 44045  00DDB2  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 44046  00DDB4  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 44047  00DDB6  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 44048  00DDB8  077F               	decf	___fldiv@new_exp& (0+255),f,b
 44049  00DDBA  A0D8               	btfss	status,0,c
 44050  00DDBC  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 44051  00DDBE                     l3569:
 44052                           
 44053                           ; BSR set to: 0
 44054                           
 44055                           ; BSR set to: 0
 44056  00DDBE  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 44057  00DDC0  D7EF               	goto	l3570
 44058                           
 44059                           ; BSR set to: 0
 44060                           
 44061                           ; BSR set to: 0
 44062  00DDC2  0E00               	movlw	0
 44063  00DDC4  6F86               	movwf	___fldiv@aexp& (0+255),b
 44064                           
 44065                           ; BSR set to: 0
 44066  00DDC6  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 44067  00DDC8  D016               	goto	l3576
 44068                           
 44069                           ; BSR set to: 0
 44070  00DDCA  0EFF               	movlw	255
 44071  00DDCC  1581               	andwf	___fldiv@grs& (0+255),w,b
 44072  00DDCE  6F76               	movwf	??___fldiv& (0+255),b
 44073  00DDD0  0EFF               	movlw	255
 44074  00DDD2  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 44075  00DDD4  6F77               	movwf	(??___fldiv+1)& (0+255),b
 44076  00DDD6  0EFF               	movlw	255
 44077  00DDD8  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 44078  00DDDA  6F78               	movwf	(??___fldiv+2)& (0+255),b
 44079  00DDDC  0E7F               	movlw	127
 44080  00DDDE  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 44081  00DDE0  6F79               	movwf	(??___fldiv+3)& (0+255),b
 44082  00DDE2  5176               	movf	??___fldiv& (0+255),w,b
 44083  00DDE4  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 44084  00DDE6  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 44085  00DDE8  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 44086  00DDEA  A4D8               	btfss	status,2,c
 44087  00DDEC  D002               	goto	u10200
 44088                           
 44089                           ; BSR set to: 0
 44090                           
 44091                           ; BSR set to: 0
 44092  00DDEE  A16E               	btfss	___fldiv@b& (0+255),0,b
 44093  00DDF0  D002               	goto	l3576
 44094  00DDF2                     u10200:
 44095                           
 44096                           ; BSR set to: 0
 44097  00DDF2  0E01               	movlw	1
 44098  00DDF4  6F86               	movwf	___fldiv@aexp& (0+255),b
 44099  00DDF6                     l3576:
 44100                           
 44101                           ; BSR set to: 0
 44102                           
 44103                           ; BSR set to: 0
 44104                           
 44105                           ; BSR set to: 0
 44106  00DDF6  5186               	movf	___fldiv@aexp& (0+255),w,b
 44107  00DDF8  B4D8               	btfsc	status,2,c
 44108  00DDFA  D01F               	goto	l3578
 44109                           
 44110                           ; BSR set to: 0
 44111  00DDFC  0E01               	movlw	1
 44112  00DDFE  276E               	addwf	___fldiv@b& (0+255),f,b
 44113  00DE00  0E00               	movlw	0
 44114  00DE02  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 44115  00DE04  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 44116  00DE06  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 44117                           
 44118                           ; BSR set to: 0
 44119  00DE08  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 44120  00DE0A  D017               	goto	l3578
 44121                           
 44122                           ; BSR set to: 0
 44123  00DE0C  C06E  F076         	movff	___fldiv@b,??___fldiv
 44124  00DE10  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 44125  00DE14  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 44126  00DE18  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 44127  00DE1C  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 44128  00DE1E  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 44129  00DE20  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 44130  00DE22  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 44131  00DE24  3376               	rrcf	??___fldiv& (0+255),f,b
 44132  00DE26  C076  F06E         	movff	??___fldiv,___fldiv@b
 44133  00DE2A  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 44134  00DE2E  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 44135  00DE32  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 44136                           
 44137                           ; BSR set to: 0
 44138  00DE36  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 44139  00DE38  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 44140  00DE3A                     l3578:
 44141                           
 44142                           ; BSR set to: 0
 44143                           
 44144                           ; BSR set to: 0
 44145                           
 44146                           ; BSR set to: 0
 44147  00DE3A  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 44148  00DE3C  D010               	goto	l3579
 44149  00DE3E  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 44150  00DE40  E103               	bnz	u10230
 44151  00DE42  297F               	incf	___fldiv@new_exp& (0+255),w,b
 44152  00DE44  A0D8               	btfss	status,0,c
 44153  00DE46  D00B               	goto	l3579
 44154  00DE48                     u10230:
 44155                           
 44156                           ; BSR set to: 0
 44157  00DE48  0E00               	movlw	0
 44158  00DE4A  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 44159  00DE4C  697F               	setf	___fldiv@new_exp& (0+255),b
 44160  00DE4E  0E00               	movlw	0
 44161  00DE50  6F6E               	movwf	___fldiv@b& (0+255),b
 44162  00DE52  0E00               	movlw	0
 44163  00DE54  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44164  00DE56  0E00               	movlw	0
 44165  00DE58  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44166  00DE5A  0E00               	movlw	0
 44167  00DE5C  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44168  00DE5E                     l3579:
 44169                           
 44170                           ; BSR set to: 0
 44171                           
 44172                           ; BSR set to: 0
 44173  00DE5E  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 44174  00DE60  D005               	goto	u10240
 44175  00DE62  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 44176  00DE64  E111               	bnz	l12144
 44177  00DE66  057F               	decf	___fldiv@new_exp& (0+255),w,b
 44178  00DE68  B0D8               	btfsc	status,0,c
 44179  00DE6A  D00E               	goto	l3580
 44180  00DE6C                     u10240:
 44181                           
 44182                           ; BSR set to: 0
 44183  00DE6C  0E00               	movlw	0
 44184  00DE6E  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 44185  00DE70  0E00               	movlw	0
 44186  00DE72  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 44187  00DE74  0E00               	movlw	0
 44188  00DE76  6F6E               	movwf	___fldiv@b& (0+255),b
 44189  00DE78  0E00               	movlw	0
 44190  00DE7A  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44191  00DE7C  0E00               	movlw	0
 44192  00DE7E  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44193  00DE80  0E00               	movlw	0
 44194  00DE82  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44195  00DE84  0E00               	movlw	0
 44196  00DE86  6F7E               	movwf	___fldiv@sign& (0+255),b
 44197  00DE88                     l3580:
 44198  00DE88                     l12144:
 44199                           
 44200                           ; BSR set to: 0
 44201  00DE88  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 44202                           
 44203                           ; BSR set to: 0
 44204  00DE8C  A185               	btfss	___fldiv@bexp& (0+255),0,b
 44205  00DE8E  D002               	goto	l3581
 44206                           
 44207                           ; BSR set to: 0
 44208  00DE90  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 44209  00DE92  D001               	goto	l3582
 44210  00DE94                     l3581:
 44211                           
 44212                           ; BSR set to: 0
 44213                           
 44214                           ; BSR set to: 0
 44215  00DE94  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 44216  00DE96                     l3582:
 44217                           
 44218                           ; BSR set to: 0
 44219                           
 44220                           ; BSR set to: 0
 44221  00DE96  90D8               	bcf	status,0,c
 44222  00DE98  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 44223  00DE9A  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44224                           
 44225                           ; BSR set to: 0
 44226  00DE9C  517E               	movf	___fldiv@sign& (0+255),w,b
 44227  00DE9E  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44228                           
 44229                           ; BSR set to: 0
 44230  00DEA0  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44231  00DEA4  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44232  00DEA8  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44233  00DEAC  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44234  00DEB0  0012               	return	
 44235  00DEB2                     __end_of___fldiv:
 44236                           	opt stack 0
 44237                           tosu	equ	0xFFF
 44238                           tosh	equ	0xFFE
 44239                           tosl	equ	0xFFD
 44240                           pclath	equ	0xFFA
 44241                           tblptru	equ	0xFF8
 44242                           tblptrh	equ	0xFF7
 44243                           tblptrl	equ	0xFF6
 44244                           tablat	equ	0xFF5
 44245                           prodh	equ	0xFF4
 44246                           prodl	equ	0xFF3
 44247                           intcon	equ	0xFF2
 44248                           indf0	equ	0xFEF
 44249                           postinc0	equ	0xFEE
 44250                           fsr0h	equ	0xFEA
 44251                           fsr0l	equ	0xFE9
 44252                           wreg	equ	0xFE8
 44253                           indf1	equ	0xFE7
 44254                           postinc1	equ	0xFE6
 44255                           postdec1	equ	0xFE5
 44256                           plusw1	equ	0xFE3
 44257                           fsr1h	equ	0xFE2
 44258                           fsr1l	equ	0xFE1
 44259                           indf2	equ	0xFDF
 44260                           postinc2	equ	0xFDE
 44261                           postdec2	equ	0xFDD
 44262                           plusw2	equ	0xFDB
 44263                           fsr2h	equ	0xFDA
 44264                           fsr2l	equ	0xFD9
 44265                           status	equ	0xFD8
 44266                           
 44267 ;; *************** function _USBTransferOnePacket *****************
 44268 ;; Defined at:
 44269 ;;		line 995 in file "usb_device.c"
 44270 ;; Parameters:    Size  Location     Type
 44271 ;;  ep              1    wreg     unsigned char 
 44272 ;;  dir             1    0[BANK0 ] unsigned char 
 44273 ;;  data            2    1[BANK0 ] PTR unsigned char 
 44274 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 44275 ;;		 -> msd_cbw(31), NULL(0), 
 44276 ;;  len             1    3[BANK0 ] unsigned char 
 44277 ;; Auto vars:     Size  Location     Type
 44278 ;;  ep              1    8[BANK0 ] unsigned char 
 44279 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 44280 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 44281 ;; Return value:  Size  Location     Type
 44282 ;;                  2    0[BANK0 ] PTR void 
 44283 ;; Registers used:
 44284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44285 ;; Tracked objects:
 44286 ;;		On entry : 0/0
 44287 ;;		On exit  : 0/0
 44288 ;;		Unchanged: 0/0
 44289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44290 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44291 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44292 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44293 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44294 ;;Total ram usage:       11 bytes
 44295 ;; Hardware stack levels used:    1
 44296 ;; Hardware stack levels required when called:   10
 44297 ;; This function calls:
 44298 ;;		Nothing
 44299 ;; This function is called by:
 44300 ;;		_MSDTasks
 44301 ;;		_MSDProcessCommandMediaPresent
 44302 ;;		_MSDReadHandler
 44303 ;;		_MSDWriteHandler
 44304 ;;		_APP_DeviceCustomHIDTasks
 44305 ;; This function uses a non-reentrant model
 44306 ;;
 44307                           
 44308                           	psect	text181
 44309  010CBC                     __ptext181:
 44310                           	opt stack 0
 44311  010CBC                     _USBTransferOnePacket:
 44312                           	opt stack 18
 44313                           
 44314                           ; BSR set to: 0
 44315                           ;incstack = 0
 44316                           ;USBTransferOnePacket@ep stored from wreg
 44317  010CBC  0100               	movlb	0	; () banked
 44318  010CBE  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 44319                           
 44320                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 44321  010CC0  0100               	movlb	0	; () banked
 44322  010CC2  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 44323  010CC4  B4D8               	btfsc	status,2,c
 44324  010CC6  D007               	goto	l184
 44325                           
 44326                           ; BSR set to: 0
 44327                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 44328  010CC8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44329  010CCA  0D02               	mullw	2
 44330  010CCC  0E1B               	movlw	low _pBDTEntryIn
 44331  010CCE  24F3               	addwf	prodl,w,c
 44332  010CD0  6ED9               	movwf	fsr2l,c
 44333  010CD2  0E01               	movlw	high _pBDTEntryIn
 44334  010CD4  D006               	goto	L70
 44335  010CD6                     l184:
 44336                           
 44337                           ; BSR set to: 0
 44338                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 44339                           
 44340                           ; BSR set to: 0
 44341  010CD6  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44342  010CD8  0D02               	mullw	2
 44343  010CDA  0E21               	movlw	low _pBDTEntryOut
 44344  010CDC  24F3               	addwf	prodl,w,c
 44345  010CDE  6ED9               	movwf	fsr2l,c
 44346  010CE0  0E01               	movlw	high _pBDTEntryOut
 44347  010CE2                     L70:
 44348  010CE2  20F4               	addwfc	prodh,w,c
 44349  010CE4  6EDA               	movwf	fsr2h,c
 44350  010CE6  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 44351  010CEA  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 44352                           
 44353                           ; BSR set to: 0
 44354                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 44355                           
 44356                           ; BSR set to: 0
 44357  010CEE  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44358  010CF0  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44359  010CF2  A4D8               	btfss	status,2,c
 44360  010CF4  D005               	goto	l186
 44361                           
 44362                           ; BSR set to: 0
 44363                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 44364  010CF6  0E00               	movlw	0
 44365  010CF8  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 44366  010CFA  0E00               	movlw	0
 44367  010CFC  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 44368                           
 44369                           ; BSR set to: 0
 44370  010CFE  0012               	return	
 44371  010D00                     l186:
 44372                           
 44373                           ; BSR set to: 0
 44374                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 44375                           
 44376                           ; BSR set to: 0
 44377  010D00  EE20 F002          	lfsr	2,2
 44378  010D04  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44379  010D06  26D9               	addwf	fsr2l,f,c
 44380  010D08  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44381  010D0A  22DA               	addwfc	fsr2h,f,c
 44382  010D0C  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 44383  010D10  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 44384                           
 44385                           ;usb_device.c: 1030: handle->CNT = len;
 44386  010D14  EE20 F001          	lfsr	2,1
 44387  010D18  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44388  010D1A  26D9               	addwf	fsr2l,f,c
 44389  010D1C  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44390  010D1E  22DA               	addwfc	fsr2h,f,c
 44391  010D20  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 44392                           
 44393                           ; BSR set to: 0
 44394                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 44395  010D24  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44396  010D28  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44397  010D2C  0E40               	movlw	64
 44398  010D2E  16DF               	andwf	indf2,f,c
 44399                           
 44400                           ; BSR set to: 0
 44401                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 44402  010D30  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44403  010D34  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44404  010D38  0E00               	movlw	0
 44405  010D3A  86DB               	bsf	plusw2,3,c
 44406                           
 44407                           ; BSR set to: 0
 44408                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 44409  010D3C  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44410  010D40  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44411  010D44  0E00               	movlw	0
 44412  010D46  8EDB               	bsf	plusw2,7,c
 44413                           
 44414                           ; BSR set to: 0
 44415                           ;usb_device.c: 1036: if(dir != 0)
 44416  010D48  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 44417  010D4A  B4D8               	btfsc	status,2,c
 44418  010D4C  D018               	goto	l188
 44419                           
 44420                           ; BSR set to: 0
 44421                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 44422  010D4E  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44423  010D50  0D02               	mullw	2
 44424  010D52  0E1B               	movlw	low _pBDTEntryIn
 44425  010D54  24F3               	addwf	prodl,w,c
 44426  010D56  6ED9               	movwf	fsr2l,c
 44427  010D58  0E01               	movlw	high _pBDTEntryIn
 44428  010D5A  20F4               	addwfc	prodh,w,c
 44429  010D5C  6EDA               	movwf	fsr2h,c
 44430  010D5E  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 44431  010D62  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 44432  010D66  0E04               	movlw	4
 44433  010D68  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 44434  010D6A  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 44435  010D6C  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 44436  010D6E  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 44437  010D70  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44438  010D72  0D02               	mullw	2
 44439  010D74  0E1B               	movlw	low _pBDTEntryIn
 44440  010D76  24F3               	addwf	prodl,w,c
 44441  010D78  6ED9               	movwf	fsr2l,c
 44442  010D7A  0E01               	movlw	high _pBDTEntryIn
 44443  010D7C  D017               	goto	L71
 44444  010D7E                     l188:
 44445                           
 44446                           ; BSR set to: 0
 44447                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 44448                           
 44449                           ; BSR set to: 0
 44450  010D7E  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44451  010D80  0D02               	mullw	2
 44452  010D82  0E21               	movlw	low _pBDTEntryOut
 44453  010D84  24F3               	addwf	prodl,w,c
 44454  010D86  6ED9               	movwf	fsr2l,c
 44455  010D88  0E01               	movlw	high _pBDTEntryOut
 44456  010D8A  20F4               	addwfc	prodh,w,c
 44457  010D8C  6EDA               	movwf	fsr2h,c
 44458  010D8E  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 44459  010D92  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 44460  010D96  0E04               	movlw	4
 44461  010D98  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 44462  010D9A  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 44463  010D9C  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 44464  010D9E  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 44465  010DA0  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44466  010DA2  0D02               	mullw	2
 44467  010DA4  0E21               	movlw	low _pBDTEntryOut
 44468  010DA6  24F3               	addwf	prodl,w,c
 44469  010DA8  6ED9               	movwf	fsr2l,c
 44470  010DAA  0E01               	movlw	high _pBDTEntryOut
 44471  010DAC                     L71:
 44472  010DAC  20F4               	addwfc	prodh,w,c
 44473  010DAE  6EDA               	movwf	fsr2h,c
 44474  010DB0  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 44475  010DB4  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 44476                           
 44477                           ; BSR set to: 0
 44478                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 44479                           
 44480                           ; BSR set to: 0
 44481  010DB8  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 44482  010DBC  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 44483  010DC0  0012               	return	
 44484  010DC2                     __end_of_USBTransferOnePacket:
 44485                           	opt stack 0
 44486                           tosu	equ	0xFFF
 44487                           tosh	equ	0xFFE
 44488                           tosl	equ	0xFFD
 44489                           pclath	equ	0xFFA
 44490                           tblptru	equ	0xFF8
 44491                           tblptrh	equ	0xFF7
 44492                           tblptrl	equ	0xFF6
 44493                           tablat	equ	0xFF5
 44494                           prodh	equ	0xFF4
 44495                           prodl	equ	0xFF3
 44496                           intcon	equ	0xFF2
 44497                           indf0	equ	0xFEF
 44498                           postinc0	equ	0xFEE
 44499                           fsr0h	equ	0xFEA
 44500                           fsr0l	equ	0xFE9
 44501                           wreg	equ	0xFE8
 44502                           indf1	equ	0xFE7
 44503                           postinc1	equ	0xFE6
 44504                           postdec1	equ	0xFE5
 44505                           plusw1	equ	0xFE3
 44506                           fsr1h	equ	0xFE2
 44507                           fsr1l	equ	0xFE1
 44508                           indf2	equ	0xFDF
 44509                           postinc2	equ	0xFDE
 44510                           postdec2	equ	0xFDD
 44511                           plusw2	equ	0xFDB
 44512                           fsr2h	equ	0xFDA
 44513                           fsr2l	equ	0xFD9
 44514                           status	equ	0xFD8
 44515                           
 44516 ;; *************** function _SYS_InterruptHigh *****************
 44517 ;; Defined at:
 44518 ;;		line 162 in file "system.c"
 44519 ;; Parameters:    Size  Location     Type
 44520 ;;		None
 44521 ;; Auto vars:     Size  Location     Type
 44522 ;;		None
 44523 ;; Return value:  Size  Location     Type
 44524 ;;                  1    wreg      void 
 44525 ;; Registers used:
 44526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 44527 ;; Tracked objects:
 44528 ;;		On entry : 0/0
 44529 ;;		On exit  : 0/0
 44530 ;;		Unchanged: 0/0
 44531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44534 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44535 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44536 ;;Total ram usage:       14 bytes
 44537 ;; Hardware stack levels used:    1
 44538 ;; Hardware stack levels required when called:    9
 44539 ;; This function calls:
 44540 ;;		_USBDeviceTasks
 44541 ;;		_motor_isr
 44542 ;;		_tmr0_isr
 44543 ;; This function is called by:
 44544 ;;		Interrupt level 2
 44545 ;; This function uses a non-reentrant model
 44546 ;;
 44547                           
 44548                           	psect	intcode
 44549  009008                     __pintcode:
 44550                           	opt stack 0
 44551  009008                     _SYS_InterruptHigh:
 44552                           	opt stack 9
 44553                           
 44554                           ; BSR set to: 0
 44555                           ;incstack = 0
 44556  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 44557  00900A  CFFA F044          	movff	pclath,??_SYS_InterruptHigh
 44558  00900E  CFFB F045          	movff	pclatu,??_SYS_InterruptHigh+1
 44559  009012  CFE9 F046          	movff	fsr0l,??_SYS_InterruptHigh+2
 44560  009016  CFEA F047          	movff	fsr0h,??_SYS_InterruptHigh+3
 44561  00901A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh+4
 44562  00901E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+5
 44563  009022  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+6
 44564  009026  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+7
 44565  00902A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+8
 44566  00902E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+9
 44567  009032  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+10
 44568  009036  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+11
 44569  00903A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+12
 44570  00903E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+13
 44571                           
 44572                           ;system.c: 165: USBDeviceTasks();
 44573  009042  EC45  F07E         	call	_USBDeviceTasks	;wreg free
 44574                           
 44575                           ;system.c: 169: if(PIR1bits.TMR2IF)
 44576  009046  B29E               	btfsc	3998,1,c	;volatile
 44577                           
 44578                           ;system.c: 170: {;system.c: 171: motor_isr();
 44579  009048  EC08  F05C         	call	_motor_isr	;wreg free
 44580                           
 44581                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 44582  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 44583                           
 44584                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 44585  00904E  EC5D  F0A7         	call	_tmr0_isr	;wreg free
 44586  009052  C051  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 44587  009056  C050  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 44588  00905A  C04F  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 44589  00905E  C04E  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 44590  009062  C04D  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 44591  009066  C04C  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 44592  00906A  C04B  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 44593  00906E  C04A  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 44594  009072  C049  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 44595  009076  C048  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 44596  00907A  C047  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 44597  00907E  C046  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 44598  009082  C045  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 44599  009086  C044  FFFA         	movff	??_SYS_InterruptHigh,pclath
 44600  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 44601  00908C  0011               	retfie		f
 44602  00908E                     __end_of_SYS_InterruptHigh:
 44603                           	opt stack 0
 44604                           tosu	equ	0xFFF
 44605                           tosh	equ	0xFFE
 44606                           tosl	equ	0xFFD
 44607                           pclatu	equ	0xFFB
 44608                           pclath	equ	0xFFA
 44609                           tblptru	equ	0xFF8
 44610                           tblptrh	equ	0xFF7
 44611                           tblptrl	equ	0xFF6
 44612                           tablat	equ	0xFF5
 44613                           prodh	equ	0xFF4
 44614                           prodl	equ	0xFF3
 44615                           intcon	equ	0xFF2
 44616                           indf0	equ	0xFEF
 44617                           postinc0	equ	0xFEE
 44618                           fsr0h	equ	0xFEA
 44619                           fsr0l	equ	0xFE9
 44620                           wreg	equ	0xFE8
 44621                           indf1	equ	0xFE7
 44622                           postinc1	equ	0xFE6
 44623                           postdec1	equ	0xFE5
 44624                           plusw1	equ	0xFE3
 44625                           fsr1h	equ	0xFE2
 44626                           fsr1l	equ	0xFE1
 44627                           indf2	equ	0xFDF
 44628                           postinc2	equ	0xFDE
 44629                           postdec2	equ	0xFDD
 44630                           plusw2	equ	0xFDB
 44631                           fsr2h	equ	0xFDA
 44632                           fsr2l	equ	0xFD9
 44633                           status	equ	0xFD8
 44634                           
 44635 ;; *************** function _tmr0_isr *****************
 44636 ;; Defined at:
 44637 ;;		line 24 in file "os.c"
 44638 ;; Parameters:    Size  Location     Type
 44639 ;;		None
 44640 ;; Auto vars:     Size  Location     Type
 44641 ;;		None
 44642 ;; Return value:  Size  Location     Type
 44643 ;;                  1    wreg      void 
 44644 ;; Registers used:
 44645 ;;		wreg, status,2, status,0, cstack
 44646 ;; Tracked objects:
 44647 ;;		On entry : 0/0
 44648 ;;		On exit  : 0/0
 44649 ;;		Unchanged: 0/0
 44650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44655 ;;Total ram usage:        0 bytes
 44656 ;; Hardware stack levels used:    1
 44657 ;; Hardware stack levels required when called:    1
 44658 ;; This function calls:
 44659 ;;		_encoder_run
 44660 ;; This function is called by:
 44661 ;;		_SYS_InterruptHigh
 44662 ;; This function uses a non-reentrant model
 44663 ;;
 44664                           
 44665                           	psect	text183
 44666  014EBA                     __ptext183:
 44667                           	opt stack 0
 44668  014EBA                     _tmr0_isr:
 44669                           	opt stack 16
 44670                           
 44671                           ;os.c: 27: if(INTCONbits.T0IF)
 44672                           
 44673                           ;incstack = 0
 44674  014EBA  A4F2               	btfss	intcon,2,c	;volatile
 44675  014EBC  0012               	return	
 44676                           
 44677                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 44678  014EBE  0EFA               	movlw	250
 44679  014EC0  6ED7               	movwf	4055,c	;volatile
 44680                           
 44681                           ;os.c: 31: TMR0L = 0x24;
 44682  014EC2  0E24               	movlw	36
 44683  014EC4  6ED6               	movwf	4054,c	;volatile
 44684                           
 44685                           ;os.c: 34: INTCONbits.T0IF = 0;
 44686  014EC6  94F2               	bcf	intcon,2,c	;volatile
 44687                           
 44688                           ;os.c: 37: encoder_run();
 44689  014EC8  ECD5  F08A         	call	_encoder_run	;wreg free
 44690                           
 44691                           ;os.c: 40: ++os.subTimeSlot;
 44692  014ECC  0101               	movlb	1	; () banked
 44693  014ECE  2B71               	incf	_os& (0+255),f,b	;volatile
 44694                           
 44695                           ; BSR set to: 1
 44696                           ;os.c: 41: if(os.subTimeSlot>=10)
 44697  014ED0  0E09               	movlw	9
 44698  014ED2  6571               	cpfsgt	_os& (0+255),b	;volatile
 44699  014ED4  0012               	return	
 44700                           
 44701                           ; BSR set to: 1
 44702                           ;os.c: 42: {;os.c: 43: if(os.done)
 44703  014ED6  5173               	movf	(_os+2)& (0+255),w,b	;volatile
 44704  014ED8  B4D8               	btfsc	status,2,c
 44705  014EDA  0012               	return	
 44706                           
 44707                           ; BSR set to: 1
 44708                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 44709  014EDC  2B72               	incf	(_os+1)& (0+255),f,b	;volatile
 44710                           
 44711                           ; BSR set to: 1
 44712                           ;os.c: 46: if(os.timeSlot==16)
 44713  014EDE  0E10               	movlw	16
 44714  014EE0  1972               	xorwf	(_os+1)& (0+255),w,b	;volatile
 44715  014EE2  A4D8               	btfss	status,2,c
 44716  014EE4  D002               	goto	i2l1066
 44717                           
 44718                           ; BSR set to: 1
 44719                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 44720  014EE6  0E00               	movlw	0
 44721  014EE8  6F72               	movwf	(_os+1)& (0+255),b	;volatile
 44722  014EEA                     i2l1066:
 44723                           
 44724                           ; BSR set to: 1
 44725                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 44726  014EEA  0E00               	movlw	0
 44727  014EEC  6F71               	movwf	_os& (0+255),b	;volatile
 44728                           
 44729                           ;os.c: 51: os.done = 0;
 44730  014EEE  0E00               	movlw	0
 44731  014EF0  6F73               	movwf	(_os+2)& (0+255),b	;volatile
 44732                           
 44733                           ; BSR set to: 1
 44734                           
 44735                           ; BSR set to: 1
 44736  014EF2  0012               	return	
 44737  014EF4                     __end_of_tmr0_isr:
 44738                           	opt stack 0
 44739                           tosu	equ	0xFFF
 44740                           tosh	equ	0xFFE
 44741                           tosl	equ	0xFFD
 44742                           pclatu	equ	0xFFB
 44743                           pclath	equ	0xFFA
 44744                           tblptru	equ	0xFF8
 44745                           tblptrh	equ	0xFF7
 44746                           tblptrl	equ	0xFF6
 44747                           tablat	equ	0xFF5
 44748                           prodh	equ	0xFF4
 44749                           prodl	equ	0xFF3
 44750                           intcon	equ	0xFF2
 44751                           indf0	equ	0xFEF
 44752                           postinc0	equ	0xFEE
 44753                           fsr0h	equ	0xFEA
 44754                           fsr0l	equ	0xFE9
 44755                           wreg	equ	0xFE8
 44756                           indf1	equ	0xFE7
 44757                           postinc1	equ	0xFE6
 44758                           postdec1	equ	0xFE5
 44759                           plusw1	equ	0xFE3
 44760                           fsr1h	equ	0xFE2
 44761                           fsr1l	equ	0xFE1
 44762                           indf2	equ	0xFDF
 44763                           postinc2	equ	0xFDE
 44764                           postdec2	equ	0xFDD
 44765                           plusw2	equ	0xFDB
 44766                           fsr2h	equ	0xFDA
 44767                           fsr2l	equ	0xFD9
 44768                           status	equ	0xFD8
 44769                           
 44770 ;; *************** function _encoder_run *****************
 44771 ;; Defined at:
 44772 ;;		line 103 in file "encoder.c"
 44773 ;; Parameters:    Size  Location     Type
 44774 ;;		None
 44775 ;; Auto vars:     Size  Location     Type
 44776 ;;		None
 44777 ;; Return value:  Size  Location     Type
 44778 ;;                  1    wreg      void 
 44779 ;; Registers used:
 44780 ;;		wreg, status,2, status,0
 44781 ;; Tracked objects:
 44782 ;;		On entry : 0/0
 44783 ;;		On exit  : 0/0
 44784 ;;		Unchanged: 0/0
 44785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44790 ;;Total ram usage:        0 bytes
 44791 ;; Hardware stack levels used:    1
 44792 ;; This function calls:
 44793 ;;		Nothing
 44794 ;; This function is called by:
 44795 ;;		_tmr0_isr
 44796 ;; This function uses a non-reentrant model
 44797 ;;
 44798                           
 44799                           	psect	text184
 44800  0115AA                     __ptext184:
 44801                           	opt stack 0
 44802  0115AA                     _encoder_run:
 44803                           	opt stack 16
 44804                           
 44805                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 44806                           
 44807                           ;incstack = 0
 44808  0115AA  5084               	movf	3972,w,c	;volatile
 44809  0115AC  0B07               	andlw	7
 44810  0115AE  0101               	movlb	1	; () banked
 44811  0115B0  1954               	xorwf	_enc1& (0+255),w,b
 44812  0115B2  B4D8               	btfsc	status,2,c
 44813  0115B4  D033               	goto	i2l2663
 44814                           
 44815                           ; BSR set to: 1
 44816                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 44817  0115B6  B084               	btfsc	3972,0,c	;volatile
 44818                           
 44819                           ; BSR set to: 1
 44820  0115B8  A484               	btfss	3972,2,c	;volatile
 44821  0115BA  D00D               	goto	i2l2666
 44822                           
 44823                           ; BSR set to: 1
 44824  0115BC  B154               	btfsc	_enc1& (0+255),0,b
 44825  0115BE  D00B               	goto	i2l2666
 44826                           
 44827                           ; BSR set to: 1
 44828                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 44829  0115C0  0E7F               	movlw	127
 44830  0115C2  1974               	xorwf	(_os+3)& (0+255),w,b	;volatile
 44831  0115C4  B4D8               	btfsc	status,2,c
 44832  0115C6  D007               	goto	i2l2666
 44833                           
 44834                           ; BSR set to: 1
 44835                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 44836  0115C8  2B74               	incf	(_os+3)& (0+255),f,b	;volatile
 44837                           
 44838                           ; BSR set to: 1
 44839                           ;encoder.c: 113: if(config.beep_duration)
 44840  0115CA  51B6               	movf	(_config+21)& (0+255),w,b
 44841  0115CC  B4D8               	btfsc	status,2,c
 44842  0115CE  D003               	goto	i2l2666
 44843                           
 44844                           ; BSR set to: 1
 44845                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 44846  0115D0  8E8B               	bsf	3979,7,c	;volatile
 44847                           
 44848                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 44849  0115D2  C1B6  F197         	movff	_config+21,_os+38	;volatile
 44850  0115D6                     i2l2666:
 44851                           
 44852                           ; BSR set to: 1
 44853                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 44854                           
 44855                           ; BSR set to: 1
 44856                           
 44857                           ; BSR set to: 1
 44858  0115D6  B484               	btfsc	3972,2,c	;volatile
 44859                           
 44860                           ; BSR set to: 1
 44861  0115D8  A084               	btfss	3972,0,c	;volatile
 44862  0115DA  D00E               	goto	i2l2669
 44863                           
 44864                           ; BSR set to: 1
 44865  0115DC  B554               	btfsc	_enc1& (0+255),2,b
 44866  0115DE  D00C               	goto	i2l2669
 44867                           
 44868                           ; BSR set to: 1
 44869                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 44870  0115E0  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 44871  0115E2  0A80               	xorlw	128
 44872  0115E4  0FFF               	addlw	255
 44873  0115E6  A0D8               	btfss	status,0,c
 44874  0115E8  D007               	goto	i2l2669
 44875                           
 44876                           ; BSR set to: 1
 44877                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 44878  0115EA  0774               	decf	(_os+3)& (0+255),f,b	;volatile
 44879                           
 44880                           ; BSR set to: 1
 44881                           ;encoder.c: 126: if(config.beep_duration)
 44882  0115EC  51B6               	movf	(_config+21)& (0+255),w,b
 44883  0115EE  B4D8               	btfsc	status,2,c
 44884  0115F0  D003               	goto	i2l2669
 44885                           
 44886                           ; BSR set to: 1
 44887                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 44888  0115F2  8E8B               	bsf	3979,7,c	;volatile
 44889                           
 44890                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 44891  0115F4  C1B6  F197         	movff	_config+21,_os+38	;volatile
 44892  0115F8                     i2l2669:
 44893                           
 44894                           ; BSR set to: 1
 44895                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 44896                           
 44897                           ; BSR set to: 1
 44898                           
 44899                           ; BSR set to: 1
 44900  0115F8  B284               	btfsc	3972,1,c	;volatile
 44901                           
 44902                           ; BSR set to: 1
 44903  0115FA  B354               	btfsc	_enc1& (0+255),1,b
 44904  0115FC  D008               	goto	i2l2671
 44905                           
 44906                           ; BSR set to: 1
 44907                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 44908  0115FE  0E01               	movlw	1
 44909  011600  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 44910                           
 44911                           ;encoder.c: 137: if(config.beep_duration)
 44912  011602  51B6               	movf	(_config+21)& (0+255),w,b
 44913  011604  B4D8               	btfsc	status,2,c
 44914  011606  D003               	goto	i2l2671
 44915                           
 44916                           ; BSR set to: 1
 44917                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 44918  011608  8E8B               	bsf	3979,7,c	;volatile
 44919                           
 44920                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 44921  01160A  C1B6  F197         	movff	_config+21,_os+38	;volatile
 44922  01160E                     i2l2671:
 44923                           
 44924                           ; BSR set to: 1
 44925                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 44926                           
 44927                           ; BSR set to: 1
 44928  01160E  A284               	btfss	3972,1,c	;volatile
 44929                           
 44930                           ; BSR set to: 1
 44931  011610  A354               	btfss	_enc1& (0+255),1,b
 44932  011612  D001               	goto	i2l2672
 44933                           
 44934                           ; BSR set to: 1
 44935                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 44936  011614  6975               	setf	(_os+4)& (0+255),b	;volatile
 44937  011616                     i2l2672:
 44938                           
 44939                           ; BSR set to: 1
 44940                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 44941                           
 44942                           ; BSR set to: 1
 44943  011616  5084               	movf	3972,w,c	;volatile
 44944  011618  0B07               	andlw	7
 44945  01161A  6F54               	movwf	_enc1& (0+255),b
 44946  01161C                     i2l2663:
 44947                           
 44948                           ; BSR set to: 1
 44949                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 44950  01161C  5080               	movf	3968,w,c	;volatile
 44951  01161E  0B07               	andlw	7
 44952  011620  1953               	xorwf	_enc2& (0+255),w,b
 44953  011622  B4D8               	btfsc	status,2,c
 44954  011624  D033               	goto	i2l2673
 44955                           
 44956                           ; BSR set to: 1
 44957                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 44958  011626  B480               	btfsc	3968,2,c	;volatile
 44959                           
 44960                           ; BSR set to: 1
 44961  011628  A080               	btfss	3968,0,c	;volatile
 44962  01162A  D00D               	goto	i2l2676
 44963                           
 44964                           ; BSR set to: 1
 44965  01162C  B553               	btfsc	_enc2& (0+255),2,b
 44966  01162E  D00B               	goto	i2l2676
 44967                           
 44968                           ; BSR set to: 1
 44969                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 44970  011630  0E7F               	movlw	127
 44971  011632  1976               	xorwf	(_os+5)& (0+255),w,b	;volatile
 44972  011634  B4D8               	btfsc	status,2,c
 44973  011636  D007               	goto	i2l2676
 44974                           
 44975                           ; BSR set to: 1
 44976                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 44977  011638  2B76               	incf	(_os+5)& (0+255),f,b	;volatile
 44978                           
 44979                           ; BSR set to: 1
 44980                           ;encoder.c: 160: if(config.beep_duration)
 44981  01163A  51B6               	movf	(_config+21)& (0+255),w,b
 44982  01163C  B4D8               	btfsc	status,2,c
 44983  01163E  D003               	goto	i2l2676
 44984                           
 44985                           ; BSR set to: 1
 44986                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 44987  011640  8E8B               	bsf	3979,7,c	;volatile
 44988                           
 44989                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 44990  011642  C1B6  F197         	movff	_config+21,_os+38	;volatile
 44991  011646                     i2l2676:
 44992                           
 44993                           ; BSR set to: 1
 44994                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 44995                           
 44996                           ; BSR set to: 1
 44997                           
 44998                           ; BSR set to: 1
 44999  011646  B080               	btfsc	3968,0,c	;volatile
 45000                           
 45001                           ; BSR set to: 1
 45002  011648  A480               	btfss	3968,2,c	;volatile
 45003  01164A  D00E               	goto	i2l2679
 45004                           
 45005                           ; BSR set to: 1
 45006  01164C  B153               	btfsc	_enc2& (0+255),0,b
 45007  01164E  D00C               	goto	i2l2679
 45008                           
 45009                           ; BSR set to: 1
 45010                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 45011  011650  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 45012  011652  0A80               	xorlw	128
 45013  011654  0FFF               	addlw	255
 45014  011656  A0D8               	btfss	status,0,c
 45015  011658  D007               	goto	i2l2679
 45016                           
 45017                           ; BSR set to: 1
 45018                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 45019  01165A  0776               	decf	(_os+5)& (0+255),f,b	;volatile
 45020                           
 45021                           ; BSR set to: 1
 45022                           ;encoder.c: 173: if(config.beep_duration)
 45023  01165C  51B6               	movf	(_config+21)& (0+255),w,b
 45024  01165E  B4D8               	btfsc	status,2,c
 45025  011660  D003               	goto	i2l2679
 45026                           
 45027                           ; BSR set to: 1
 45028                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 45029  011662  8E8B               	bsf	3979,7,c	;volatile
 45030                           
 45031                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 45032  011664  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45033  011668                     i2l2679:
 45034                           
 45035                           ; BSR set to: 1
 45036                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 45037                           
 45038                           ; BSR set to: 1
 45039                           
 45040                           ; BSR set to: 1
 45041  011668  B280               	btfsc	3968,1,c	;volatile
 45042                           
 45043                           ; BSR set to: 1
 45044  01166A  B353               	btfsc	_enc2& (0+255),1,b
 45045  01166C  D008               	goto	i2l2681
 45046                           
 45047                           ; BSR set to: 1
 45048                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 45049  01166E  0E01               	movlw	1
 45050  011670  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 45051                           
 45052                           ;encoder.c: 184: if(config.beep_duration)
 45053  011672  51B6               	movf	(_config+21)& (0+255),w,b
 45054  011674  B4D8               	btfsc	status,2,c
 45055  011676  D003               	goto	i2l2681
 45056                           
 45057                           ; BSR set to: 1
 45058                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 45059  011678  8E8B               	bsf	3979,7,c	;volatile
 45060                           
 45061                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 45062  01167A  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45063  01167E                     i2l2681:
 45064                           
 45065                           ; BSR set to: 1
 45066                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 45067                           
 45068                           ; BSR set to: 1
 45069  01167E  A280               	btfss	3968,1,c	;volatile
 45070                           
 45071                           ; BSR set to: 1
 45072  011680  A353               	btfss	_enc2& (0+255),1,b
 45073  011682  D001               	goto	i2l2682
 45074                           
 45075                           ; BSR set to: 1
 45076                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 45077  011684  6977               	setf	(_os+6)& (0+255),b	;volatile
 45078  011686                     i2l2682:
 45079                           
 45080                           ; BSR set to: 1
 45081                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 45082                           
 45083                           ; BSR set to: 1
 45084  011686  5080               	movf	3968,w,c	;volatile
 45085  011688  0B07               	andlw	7
 45086  01168A  6F53               	movwf	_enc2& (0+255),b
 45087  01168C                     i2l2673:
 45088                           
 45089                           ; BSR set to: 1
 45090                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 45091                           
 45092                           ; BSR set to: 1
 45093  01168C  5197               	movf	(_os+38)& (0+255),w,b	;volatile
 45094  01168E  B4D8               	btfsc	status,2,c
 45095  011690  0012               	return	
 45096                           
 45097                           ; BSR set to: 1
 45098                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 45099  011692  0797               	decf	(_os+38)& (0+255),f,b	;volatile
 45100                           
 45101                           ; BSR set to: 1
 45102                           ;encoder.c: 203: if(!os.beep_count)
 45103  011694  5197               	movf	(_os+38)& (0+255),w,b	;volatile
 45104  011696  A4D8               	btfss	status,2,c
 45105  011698  0012               	return	
 45106                           
 45107                           ; BSR set to: 1
 45108                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 45109  01169A  9E8B               	bcf	3979,7,c	;volatile
 45110                           
 45111                           ; BSR set to: 1
 45112  01169C  0012               	return	
 45113  01169E                     __end_of_encoder_run:
 45114                           	opt stack 0
 45115                           tosu	equ	0xFFF
 45116                           tosh	equ	0xFFE
 45117                           tosl	equ	0xFFD
 45118                           pclatu	equ	0xFFB
 45119                           pclath	equ	0xFFA
 45120                           tblptru	equ	0xFF8
 45121                           tblptrh	equ	0xFF7
 45122                           tblptrl	equ	0xFF6
 45123                           tablat	equ	0xFF5
 45124                           prodh	equ	0xFF4
 45125                           prodl	equ	0xFF3
 45126                           intcon	equ	0xFF2
 45127                           indf0	equ	0xFEF
 45128                           postinc0	equ	0xFEE
 45129                           fsr0h	equ	0xFEA
 45130                           fsr0l	equ	0xFE9
 45131                           wreg	equ	0xFE8
 45132                           indf1	equ	0xFE7
 45133                           postinc1	equ	0xFE6
 45134                           postdec1	equ	0xFE5
 45135                           plusw1	equ	0xFE3
 45136                           fsr1h	equ	0xFE2
 45137                           fsr1l	equ	0xFE1
 45138                           indf2	equ	0xFDF
 45139                           postinc2	equ	0xFDE
 45140                           postdec2	equ	0xFDD
 45141                           plusw2	equ	0xFDB
 45142                           fsr2h	equ	0xFDA
 45143                           fsr2l	equ	0xFD9
 45144                           status	equ	0xFD8
 45145                           
 45146 ;; *************** function _motor_isr *****************
 45147 ;; Defined at:
 45148 ;;		line 371 in file "motor.c"
 45149 ;; Parameters:    Size  Location     Type
 45150 ;;		None
 45151 ;; Auto vars:     Size  Location     Type
 45152 ;;  steps_remain    4   63[COMRAM] unsigned long 
 45153 ;;  steps_until_    2   61[COMRAM] unsigned int 
 45154 ;;  steps_until_    2   59[COMRAM] unsigned int 
 45155 ;; Return value:  Size  Location     Type
 45156 ;;                  1    wreg      void 
 45157 ;; Registers used:
 45158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45159 ;; Tracked objects:
 45160 ;;		On entry : 0/0
 45161 ;;		On exit  : 0/0
 45162 ;;		Unchanged: 0/0
 45163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45165 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45166 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45167 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45168 ;;Total ram usage:       24 bytes
 45169 ;; Hardware stack levels used:    1
 45170 ;; Hardware stack levels required when called:    4
 45171 ;; This function calls:
 45172 ;;		_i2c_eeprom_writeUint32
 45173 ;; This function is called by:
 45174 ;;		_SYS_InterruptHigh
 45175 ;; This function uses a non-reentrant model
 45176 ;;
 45177                           
 45178                           	psect	text185
 45179  00B810                     __ptext185:
 45180                           	opt stack 0
 45181  00B810                     _motor_isr:
 45182                           	opt stack 13
 45183                           
 45184                           ;motor.c: 373: uint32_t steps_remaining;;motor.c: 374: uint16_t steps_until_standstill;;
      +                          motor.c: 375: uint16_t steps_until_standstill_if_accelerate;;motor.c: 378: PIR1bits.TMR2
      +                          IF = 0;
 45185                           
 45186                           ; BSR set to: 1
 45187                           ;incstack = 0
 45188  00B810  929E               	bcf	3998,1,c	;volatile
 45189                           
 45190                           ;motor.c: 380: if(motor_mode==MOTOR_MODE_MANUAL)
 45191  00B812  0101               	movlb	1	; () banked
 45192  00B814  5156               	movf	_motor_mode& (0+255),w,b
 45193  00B816  A4D8               	btfss	status,2,c
 45194  00B818  D026               	goto	i2l2494
 45195                           
 45196                           ; BSR set to: 1
 45197                           ;motor.c: 381: {;motor.c: 383: if(LATBbits.LB1)
 45198  00B81A  A28A               	btfss	3978,1,c	;volatile
 45199  00B81C  D023               	goto	i2l2491
 45200                           
 45201                           ; BSR set to: 1
 45202                           ;motor.c: 384: {;motor.c: 386: LATBbits.LB1 = 0;
 45203  00B81E  928A               	bcf	3978,1,c	;volatile
 45204                           
 45205                           ; BSR set to: 1
 45206                           ;motor.c: 389: if(motor_current_stepcount==motor_final_stepcount)
 45207  00B820  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 45208  00B822  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 45209  00B824  E109               	bnz	i2u1834_41
 45210  00B826  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 45211  00B828  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 45212  00B82A  E106               	bnz	i2u1834_41
 45213  00B82C  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 45214  00B82E  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 45215  00B830  E103               	bnz	i2u1834_41
 45216  00B832  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 45217  00B834  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 45218  00B836  A4D8               	btfss	status,2,c
 45219  00B838                     i2u1834_41:
 45220  00B838  0012               	return	
 45221                           
 45222                           ; BSR set to: 1
 45223                           ;motor.c: 390: {;motor.c: 393: T2CONbits.TMR2ON = 0;
 45224  00B83A  94CA               	bcf	4042,2,c	;volatile
 45225                           
 45226                           ;motor.c: 395: PIR1bits.TMR2IF = 0;
 45227  00B83C  929E               	bcf	3998,1,c	;volatile
 45228                           
 45229                           ;motor.c: 396: PIE1bits.TMR2IE = 0;
 45230  00B83E  929D               	bcf	3997,1,c	;volatile
 45231                           
 45232                           ; BSR set to: 1
 45233                           ;motor.c: 398: i2c_eeprom_writeUint32(0x200, os.current_position_in_steps);
 45234  00B840  0E02               	movlw	2
 45235  00B842  6E27               	movwf	i2c_eeprom_writeUint32@address+1,c
 45236  00B844  0E00               	movlw	0
 45237  00B846  6E26               	movwf	i2c_eeprom_writeUint32@address,c
 45238  00B848  C178  F028         	movff	_os+7,i2c_eeprom_writeUint32@data	;volatile
 45239  00B84C  C179  F029         	movff	_os+8,i2c_eeprom_writeUint32@data+1	;volatile
 45240  00B850  C17A  F02A         	movff	_os+9,i2c_eeprom_writeUint32@data+2	;volatile
 45241  00B854  C17B  F02B         	movff	_os+10,i2c_eeprom_writeUint32@data+3	;volatile
 45242  00B858  ECBD  F0AA         	call	_i2c_eeprom_writeUint32	;wreg free
 45243                           
 45244                           ;motor.c: 400: os.busy = 0;
 45245  00B85C  0E00               	movlw	0
 45246  00B85E  0101               	movlb	1	; () banked
 45247  00B860  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
 45248                           
 45249                           ; BSR set to: 1
 45250                           ;motor.c: 401: };motor.c: 404: return;
 45251                           
 45252                           ; BSR set to: 1
 45253  00B862  0012               	return	
 45254  00B864                     i2l2491:
 45255                           
 45256                           ; BSR set to: 1
 45257                           ;motor.c: 406: else;motor.c: 407: {;motor.c: 409: LATBbits.LB1 = 1;
 45258  00B864  828A               	bsf	3978,1,c	;volatile
 45259  00B866                     i2l2494:
 45260                           
 45261                           ; BSR set to: 1
 45262                           ;motor.c: 410: };motor.c: 411: };motor.c: 413: ++motor_current_stepcount;
 45263                           
 45264                           ; BSR set to: 1
 45265                           
 45266                           ; BSR set to: 1
 45267  00B866  0E01               	movlw	1
 45268  00B868  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 45269  00B86A  0E00               	movlw	0
 45270  00B86C  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 45271  00B86E  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 45272  00B870  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 45273                           
 45274                           ;motor.c: 416: os.current_position_in_steps += motor_direction;
 45275  00B872  5155               	movf	_motor_direction& (0+255),w,b
 45276  00B874  6E2C               	movwf	??_motor_isr& (0+255),c
 45277  00B876  0E00               	movlw	0
 45278  00B878  BE2C               	btfsc	??_motor_isr& (0+255),7,c
 45279  00B87A  0EFF               	movlw	255
 45280  00B87C  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 45281  00B87E  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 45282  00B880  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 45283  00B882  502C               	movf	??_motor_isr,w,c
 45284  00B884  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 45285  00B886  502D               	movf	??_motor_isr+1,w,c
 45286  00B888  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 45287  00B88A  502E               	movf	??_motor_isr+2,w,c
 45288  00B88C  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 45289  00B88E  502F               	movf	??_motor_isr+3,w,c
 45290  00B890  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 45291                           
 45292                           ;motor.c: 417: if(os.current_position_in_steps==config.full_circle_in_steps)
 45293  00B892  51A1               	movf	_config& (0+255),w,b
 45294  00B894  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 45295  00B896  E112               	bnz	i2l18294
 45296  00B898  51A2               	movf	(_config+1)& (0+255),w,b
 45297  00B89A  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 45298  00B89C  E10F               	bnz	i2l18294
 45299  00B89E  51A3               	movf	(_config+2)& (0+255),w,b
 45300  00B8A0  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 45301  00B8A2  E10C               	bnz	i2l18294
 45302  00B8A4  51A4               	movf	(_config+3)& (0+255),w,b
 45303  00B8A6  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 45304  00B8A8  A4D8               	btfss	status,2,c
 45305  00B8AA  D008               	goto	i2l2495
 45306                           
 45307                           ; BSR set to: 1
 45308                           ;motor.c: 418: os.current_position_in_steps = 0;
 45309  00B8AC  0E00               	movlw	0
 45310  00B8AE  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 45311  00B8B0  0E00               	movlw	0
 45312  00B8B2  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 45313  00B8B4  0E00               	movlw	0
 45314  00B8B6  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 45315  00B8B8  0E00               	movlw	0
 45316  00B8BA  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 45317  00B8BC                     i2l2495:
 45318  00B8BC                     i2l18294:
 45319                           
 45320                           ; BSR set to: 1
 45321                           ;motor.c: 419: if(os.current_position_in_steps==0xFFFFFFFF)
 45322  00B8BC  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 45323  00B8BE  E113               	bnz	i2l2496
 45324  00B8C0  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 45325  00B8C2  E111               	bnz	i2l2496
 45326  00B8C4  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 45327  00B8C6  E10F               	bnz	i2l2496
 45328  00B8C8  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 45329  00B8CA  A4D8               	btfss	status,2,c
 45330  00B8CC  D00C               	goto	i2l2496
 45331                           
 45332                           ; BSR set to: 1
 45333                           ;motor.c: 420: os.current_position_in_steps = (config.full_circle_in_steps-1);
 45334  00B8CE  0EFF               	movlw	255
 45335  00B8D0  25A1               	addwf	_config& (0+255),w,b
 45336  00B8D2  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 45337  00B8D4  0EFF               	movlw	255
 45338  00B8D6  21A2               	addwfc	(_config+1)& (0+255),w,b
 45339  00B8D8  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 45340  00B8DA  0EFF               	movlw	255
 45341  00B8DC  21A3               	addwfc	(_config+2)& (0+255),w,b
 45342  00B8DE  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 45343  00B8E0  0EFF               	movlw	255
 45344  00B8E2  21A4               	addwfc	(_config+3)& (0+255),w,b
 45345  00B8E4  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 45346  00B8E6                     i2l2496:
 45347                           
 45348                           ; BSR set to: 1
 45349                           ;motor.c: 423: if(motor_current_stepcount==motor_next_speed_check)
 45350  00B8E6  0102               	movlb	2	; () banked
 45351  00B8E8  5126               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 45352  00B8EA  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 45353  00B8EC  E109               	bnz	i2u1837_41
 45354  00B8EE  5127               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 45355  00B8F0  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 45356  00B8F2  E106               	bnz	i2u1837_41
 45357  00B8F4  5128               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 45358  00B8F6  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 45359  00B8F8  E103               	bnz	i2u1837_41
 45360  00B8FA  5129               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 45361  00B8FC  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 45362  00B8FE  A4D8               	btfss	status,2,c
 45363  00B900                     i2u1837_41:
 45364  00B900  D217               	goto	i2l2509
 45365                           
 45366                           ; BSR set to: 2
 45367                           ;motor.c: 424: {;motor.c: 426: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 45368  00B902  C058  F02C         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 45369  00B906  C059  F02D         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 45370  00B90A  C05A  F02E         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 45371  00B90E  C05B  F02F         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 45372  00B912  1E2C               	comf	??_motor_isr,f,c
 45373  00B914  1E2D               	comf	??_motor_isr+1,f,c
 45374  00B916  1E2E               	comf	??_motor_isr+2,f,c
 45375  00B918  1E2F               	comf	??_motor_isr+3,f,c
 45376  00B91A  2A2C               	incf	??_motor_isr,f,c
 45377  00B91C  0E00               	movlw	0
 45378  00B91E  222D               	addwfc	??_motor_isr+1,f,c
 45379  00B920  222E               	addwfc	??_motor_isr+2,f,c
 45380  00B922  222F               	addwfc	??_motor_isr+3,f,c
 45381  00B924  0101               	movlb	1	; () banked
 45382  00B926  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 45383  00B928  242C               	addwf	??_motor_isr,w,c
 45384  00B92A  6E40               	movwf	motor_isr@steps_remaining,c
 45385  00B92C  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 45386  00B92E  202D               	addwfc	??_motor_isr+1,w,c
 45387  00B930  6E41               	movwf	motor_isr@steps_remaining+1,c
 45388  00B932  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 45389  00B934  202E               	addwfc	??_motor_isr+2,w,c
 45390  00B936  6E42               	movwf	motor_isr@steps_remaining+2,c
 45391  00B938  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 45392  00B93A  202F               	addwfc	??_motor_isr+3,w,c
 45393  00B93C  6E43               	movwf	motor_isr@steps_remaining+3,c
 45394                           
 45395                           ; BSR set to: 1
 45396                           ;motor.c: 427: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 45397  00B93E  90D8               	bcf	status,0,c
 45398  00B940  0100               	movlb	0	; () banked
 45399  00B942  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 45400  00B944  6EF6               	movwf	tblptrl,c
 45401  00B946  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45402  00B948  6EF7               	movwf	tblptrh,c
 45403  00B94A  0E61               	movlw	low _motor_steps_lookup
 45404  00B94C  26F6               	addwf	tblptrl,f,c
 45405  00B94E  0E94               	movlw	high _motor_steps_lookup
 45406  00B950  22F7               	addwfc	tblptrh,f,c
 45407  00B952                     	if	1	;There are 3 active tblptr bytes
 45408  00B952  6AF8               	clrf	tblptru,c
 45409  00B954  0E00               	movlw	low (__mediumconst shr (0+16))
 45410  00B956  22F8               	addwfc	tblptru,f,c
 45411  00B958                     	endif
 45412  00B958  0009               	tblrd		*+
 45413  00B95A  CFF5 F03C          	movff	tablat,motor_isr@steps_until_standstill
 45414  00B95E  000A               	tblrd		*-
 45415  00B960  CFF5 F03D          	movff	tablat,motor_isr@steps_until_standstill+1
 45416                           
 45417                           ; BSR set to: 0
 45418                           ;motor.c: 428: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 45419  00B964  C0FE  F02C         	movff	_motor_current_speed,??_motor_isr	;volatile
 45420  00B968  C0FF  F02D         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 45421  00B96C  90D8               	bcf	status,0,c
 45422  00B96E  362C               	rlcf	??_motor_isr,f,c
 45423  00B970  362D               	rlcf	??_motor_isr+1,f,c
 45424  00B972  0E04               	movlw	4
 45425  00B974  262C               	addwf	??_motor_isr,f,c
 45426  00B976  0E00               	movlw	0
 45427  00B978  222D               	addwfc	??_motor_isr+1,f,c
 45428  00B97A  0E61               	movlw	low _motor_steps_lookup
 45429  00B97C  242C               	addwf	??_motor_isr,w,c
 45430  00B97E  6EF6               	movwf	tblptrl,c
 45431  00B980  0E94               	movlw	high _motor_steps_lookup
 45432  00B982  202D               	addwfc	??_motor_isr+1,w,c
 45433  00B984  6EF7               	movwf	tblptrh,c
 45434  00B986                     	if	1	;There are 3 active tblptr bytes
 45435  00B986  6AF8               	clrf	tblptru,c
 45436  00B988  0E00               	movlw	low (__mediumconst shr (0+16))
 45437  00B98A  22F8               	addwfc	tblptru,f,c
 45438  00B98C                     	endif
 45439  00B98C  0009               	tblrd		*+
 45440  00B98E  CFF5 F03E          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 45441  00B992  000A               	tblrd		*-
 45442  00B994  CFF5 F03F          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 45443                           
 45444                           ;motor.c: 430: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 45445  00B998  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 45446  00B99A  0101               	movlb	1	; () banked
 45447  00B99C  5D3F               	subwf	_motor_maximum_speed& (0+255),w,b
 45448  00B99E  0100               	movlb	0	; () banked
 45449  00B9A0  51FF               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45450  00B9A2  0101               	movlb	1	; () banked
 45451  00B9A4  5940               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 45452  00B9A6  A0D8               	btfss	status,0,c
 45453  00B9A8  D010               	goto	i2u1839_40
 45454                           
 45455                           ; BSR set to: 1
 45456  00B9AA  503C               	movf	motor_isr@steps_until_standstill,w,c
 45457  00B9AC  6E2C               	movwf	??_motor_isr& (0+255),c
 45458  00B9AE  503D               	movf	motor_isr@steps_until_standstill+1,w,c
 45459  00B9B0  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 45460  00B9B2  6A2E               	clrf	(??_motor_isr+2)& (0+255),c
 45461  00B9B4  6A2F               	clrf	(??_motor_isr+3)& (0+255),c
 45462  00B9B6  5040               	movf	motor_isr@steps_remaining,w,c
 45463  00B9B8  5C2C               	subwf	??_motor_isr,w,c
 45464  00B9BA  5041               	movf	motor_isr@steps_remaining+1,w,c
 45465  00B9BC  582D               	subwfb	??_motor_isr+1,w,c
 45466  00B9BE  5042               	movf	motor_isr@steps_remaining+2,w,c
 45467  00B9C0  582E               	subwfb	??_motor_isr+2,w,c
 45468  00B9C2  5043               	movf	motor_isr@steps_remaining+3,w,c
 45469  00B9C4  582F               	subwfb	??_motor_isr+3,w,c
 45470  00B9C6  A0D8               	btfss	status,0,c
 45471  00B9C8  D0E3               	goto	i2l2498
 45472  00B9CA                     i2u1839_40:
 45473                           
 45474                           ; BSR set to: 1
 45475                           ;motor.c: 431: {;motor.c: 433: if(motor_current_speed>0)
 45476                           
 45477                           ; BSR set to: 1
 45478  00B9CA  0100               	movlb	0	; () banked
 45479  00B9CC  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 45480  00B9CE  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45481  00B9D0  B4D8               	btfsc	status,2,c
 45482  00B9D2  D003               	goto	i2l2501
 45483                           
 45484                           ; BSR set to: 0
 45485                           ;motor.c: 434: {;motor.c: 435: --motor_current_speed;
 45486  00B9D4  07FE               	decf	_motor_current_speed& (0+255),f,b	;volatile
 45487  00B9D6  A0D8               	btfss	status,0,c
 45488  00B9D8  07FF               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 45489  00B9DA                     i2l2501:
 45490                           
 45491                           ; BSR set to: 0
 45492                           ;motor.c: 436: };motor.c: 439: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 45493                           
 45494                           ; BSR set to: 0
 45495  00B9DA  0101               	movlb	1	; () banked
 45496  00B9DC  0556               	decf	_motor_mode& (0+255),w,b
 45497  00B9DE  A4D8               	btfss	status,2,c
 45498  00B9E0  D026               	goto	i2l2502
 45499                           
 45500                           ; BSR set to: 1
 45501  00B9E2  0E2F               	movlw	low _motor_postscaler_lookup
 45502  00B9E4  0100               	movlb	0	; () banked
 45503  00B9E6  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 45504  00B9E8  6EF6               	movwf	tblptrl,c
 45505  00B9EA  0E98               	movlw	high _motor_postscaler_lookup
 45506  00B9EC  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45507  00B9EE  6EF7               	movwf	tblptrh,c
 45508  00B9F0                     	if	1	;There are 3 active tblptr bytes
 45509  00B9F0  6AF8               	clrf	tblptru,c
 45510  00B9F2  0E00               	movlw	low (__mediumconst shr (0+16))
 45511  00B9F4  22F8               	addwfc	tblptru,f,c
 45512  00B9F6                     	endif
 45513  00B9F6  0008               	tblrd		*
 45514  00B9F8  50F5               	movf	tablat,w,c
 45515  00B9FA  0900               	iorlw	0
 45516  00B9FC  B4D8               	btfsc	status,2,c
 45517  00B9FE  D017               	goto	i2l2502
 45518                           
 45519                           ; BSR set to: 0
 45520                           ;motor.c: 440: {;motor.c: 442: motor_mode = MOTOR_MODE_MANUAL;
 45521  00BA00  0E00               	movlw	0
 45522  00BA02  0101               	movlb	1	; () banked
 45523  00BA04  6F56               	movwf	_motor_mode& (0+255),b
 45524                           
 45525                           ; BSR set to: 1
 45526                           ;motor.c: 445: LATBbits.LB1 = 1;
 45527  00BA06  828A               	bsf	3978,1,c	;volatile
 45528                           
 45529                           ;motor.c: 446: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 45530  00BA08  0E55               	movlw	85
 45531  00BA0A  6EA7               	movwf	4007,c	;volsfr
 45532  00BA0C  0EAA               	movlw	170
 45533  00BA0E  6EA7               	movwf	4007,c	;volsfr
 45534                           
 45535                           ; BSR set to: 1
 45536  00BA10  010E               	movlb	14	; () banked
 45537  00BA12  91BF               	bcf	191,0,b	;volatile
 45538                           
 45539                           ;motor.c: 447: RPOR4 = 0;
 45540  00BA14  0E00               	movlw	0
 45541  00BA16  6FC4               	movwf	196,b	;volatile
 45542                           
 45543                           ;motor.c: 448: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 45544  00BA18  0E55               	movlw	85
 45545  00BA1A  6EA7               	movwf	4007,c	;volsfr
 45546  00BA1C  0EAA               	movlw	170
 45547  00BA1E  6EA7               	movwf	4007,c	;volsfr
 45548                           
 45549                           ; BSR set to: 14
 45550  00BA20  81BF               	bsf	191,0,b	;volatile
 45551                           
 45552                           ;motor.c: 451: TMR2 = 0;
 45553  00BA22  0E00               	movlw	0
 45554  00BA24  6ECC               	movwf	4044,c	;volatile
 45555                           
 45556                           ; BSR set to: 14
 45557                           ;motor.c: 454: CCP1CONbits.CCP1M = 0b0000;
 45558  00BA26  90BA               	bcf	4026,0,c	;volatile
 45559  00BA28  92BA               	bcf	4026,1,c	;volatile
 45560  00BA2A  94BA               	bcf	4026,2,c	;volatile
 45561  00BA2C  96BA               	bcf	4026,3,c	;volatile
 45562  00BA2E                     i2l2502:
 45563                           
 45564                           ;motor.c: 455: };motor.c: 459: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 45565                           
 45566                           ; BSR set to: 14
 45567  00BA2E  0EFD               	movlw	low _motor_prescaler_lookup
 45568  00BA30  0100               	movlb	0	; () banked
 45569  00BA32  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 45570  00BA34  6EF6               	movwf	tblptrl,c
 45571  00BA36  0E9B               	movlw	high _motor_prescaler_lookup
 45572  00BA38  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45573  00BA3A  6EF7               	movwf	tblptrh,c
 45574  00BA3C                     	if	1	;There are 3 active tblptr bytes
 45575  00BA3C  6AF8               	clrf	tblptru,c
 45576  00BA3E  0E00               	movlw	low (__mediumconst shr (0+16))
 45577  00BA40  22F8               	addwfc	tblptru,f,c
 45578  00BA42                     	endif
 45579  00BA42  0008               	tblrd		*
 45580  00BA44  CFF5 F02C          	movff	tablat,??_motor_isr
 45581  00BA48  50CA               	movf	4042,w,c	;volatile
 45582  00BA4A  182C               	xorwf	??_motor_isr,w,c
 45583  00BA4C  0BFC               	andlw	-4
 45584  00BA4E  182C               	xorwf	??_motor_isr,w,c
 45585  00BA50  6ECA               	movwf	4042,c	;volatile
 45586                           
 45587                           ; BSR set to: 0
 45588                           ;motor.c: 461: PR2 = motor_period_lookup[motor_current_speed];
 45589  00BA52  0E16               	movlw	low _motor_period_lookup
 45590  00BA54  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 45591  00BA56  6EF6               	movwf	tblptrl,c
 45592  00BA58  0E9A               	movlw	high _motor_period_lookup
 45593  00BA5A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45594  00BA5C  6EF7               	movwf	tblptrh,c
 45595  00BA5E                     	if	1	;There are 3 active tblptr bytes
 45596  00BA5E  6AF8               	clrf	tblptru,c
 45597  00BA60  0E00               	movlw	low (__mediumconst shr (0+16))
 45598  00BA62  22F8               	addwfc	tblptru,f,c
 45599  00BA64                     	endif
 45600  00BA64  0008               	tblrd		*
 45601  00BA66  CFF5 FFCB          	movff	tablat,4043	;volatile
 45602                           
 45603                           ; BSR set to: 0
 45604                           ;motor.c: 463: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 45605  00BA6A  0E2F               	movlw	low _motor_postscaler_lookup
 45606  00BA6C  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 45607  00BA6E  6EF6               	movwf	tblptrl,c
 45608  00BA70  0E98               	movlw	high _motor_postscaler_lookup
 45609  00BA72  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45610  00BA74  6EF7               	movwf	tblptrh,c
 45611  00BA76                     	if	1	;There are 3 active tblptr bytes
 45612  00BA76  6AF8               	clrf	tblptru,c
 45613  00BA78  0E00               	movlw	low (__mediumconst shr (0+16))
 45614  00BA7A  22F8               	addwfc	tblptru,f,c
 45615  00BA7C                     	endif
 45616  00BA7C  0008               	tblrd		*
 45617  00BA7E  CFF5 F02C          	movff	tablat,??_motor_isr
 45618  00BA82  462C               	rlncf	??_motor_isr,f,c
 45619  00BA84  462C               	rlncf	??_motor_isr,f,c
 45620  00BA86  462C               	rlncf	??_motor_isr,f,c
 45621  00BA88  50CA               	movf	4042,w,c	;volatile
 45622  00BA8A  182C               	xorwf	??_motor_isr,w,c
 45623  00BA8C  0B87               	andlw	-121
 45624  00BA8E  182C               	xorwf	??_motor_isr,w,c
 45625  00BA90  6ECA               	movwf	4042,c	;volatile
 45626                           
 45627                           ; BSR set to: 0
 45628                           ;motor.c: 465: CCPR1L = PR2>>1;
 45629  00BA92  90D8               	bcf	status,0,c
 45630  00BA94  30CB               	rrcf	4043,w,c	;volatile
 45631  00BA96  6EBB               	movwf	4027,c	;volatile
 45632                           
 45633                           ; BSR set to: 0
 45634                           ;motor.c: 468: if(motor_current_speed>0)
 45635  00BA98  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 45636  00BA9A  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45637  00BA9C  B4D8               	btfsc	status,2,c
 45638  00BA9E  D058               	goto	i2l2503
 45639                           
 45640                           ; BSR set to: 0
 45641                           ;motor.c: 469: {;motor.c: 470: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 45642  00BAA0  0EFE               	movlw	254
 45643  00BAA2  6E2C               	movwf	??_motor_isr& (0+255),c
 45644  00BAA4  0EFF               	movlw	255
 45645  00BAA6  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 45646  00BAA8  C0FE  F02E         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 45647  00BAAC  C0FF  F02F         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 45648  00BAB0  90D8               	bcf	status,0,c
 45649  00BAB2  362E               	rlcf	??_motor_isr+2,f,c
 45650  00BAB4  362F               	rlcf	??_motor_isr+3,f,c
 45651  00BAB6  502C               	movf	??_motor_isr,w,c
 45652  00BAB8  262E               	addwf	??_motor_isr+2,f,c
 45653  00BABA  502D               	movf	??_motor_isr+1,w,c
 45654  00BABC  222F               	addwfc	??_motor_isr+3,f,c
 45655  00BABE  0E61               	movlw	low _motor_steps_lookup
 45656  00BAC0  242E               	addwf	??_motor_isr+2,w,c
 45657  00BAC2  6EF6               	movwf	tblptrl,c
 45658  00BAC4  0E94               	movlw	high _motor_steps_lookup
 45659  00BAC6  202F               	addwfc	??_motor_isr+3,w,c
 45660  00BAC8  6EF7               	movwf	tblptrh,c
 45661  00BACA                     	if	1	;There are 3 active tblptr bytes
 45662  00BACA  6AF8               	clrf	tblptru,c
 45663  00BACC  0E00               	movlw	low (__mediumconst shr (0+16))
 45664  00BACE  22F8               	addwfc	tblptru,f,c
 45665  00BAD0                     	endif
 45666  00BAD0  0009               	tblrd		*+
 45667  00BAD2  CFF5 F030          	movff	tablat,??_motor_isr+4
 45668  00BAD6  0009               	tblrd		*+
 45669  00BAD8  CFF5 F031          	movff	tablat,??_motor_isr+5
 45670  00BADC  5030               	movf	??_motor_isr+4,w,c
 45671  00BADE  6E32               	movwf	(??_motor_isr+6)& (0+255),c
 45672  00BAE0  5031               	movf	??_motor_isr+5,w,c
 45673  00BAE2  6E33               	movwf	(??_motor_isr+7)& (0+255),c
 45674  00BAE4  6A34               	clrf	(??_motor_isr+8)& (0+255),c
 45675  00BAE6  6A35               	clrf	(??_motor_isr+9)& (0+255),c
 45676  00BAE8  1E32               	comf	??_motor_isr+6,f,c
 45677  00BAEA  1E33               	comf	??_motor_isr+7,f,c
 45678  00BAEC  1E34               	comf	??_motor_isr+8,f,c
 45679  00BAEE  1E35               	comf	??_motor_isr+9,f,c
 45680  00BAF0  2A32               	incf	??_motor_isr+6,f,c
 45681  00BAF2  0E00               	movlw	0
 45682  00BAF4  2233               	addwfc	??_motor_isr+7,f,c
 45683  00BAF6  2234               	addwfc	??_motor_isr+8,f,c
 45684  00BAF8  2235               	addwfc	??_motor_isr+9,f,c
 45685  00BAFA  90D8               	bcf	status,0,c
 45686  00BAFC  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 45687  00BAFE  6EF6               	movwf	tblptrl,c
 45688  00BB00  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45689  00BB02  6EF7               	movwf	tblptrh,c
 45690  00BB04  0E61               	movlw	low _motor_steps_lookup
 45691  00BB06  26F6               	addwf	tblptrl,f,c
 45692  00BB08  0E94               	movlw	high _motor_steps_lookup
 45693  00BB0A  22F7               	addwfc	tblptrh,f,c
 45694  00BB0C                     	if	1	;There are 3 active tblptr bytes
 45695  00BB0C  6AF8               	clrf	tblptru,c
 45696  00BB0E  0E00               	movlw	low (__mediumconst shr (0+16))
 45697  00BB10  22F8               	addwfc	tblptru,f,c
 45698  00BB12                     	endif
 45699  00BB12  0009               	tblrd		*+
 45700  00BB14  CFF5 F036          	movff	tablat,??_motor_isr+10
 45701  00BB18  0009               	tblrd		*+
 45702  00BB1A  CFF5 F037          	movff	tablat,??_motor_isr+11
 45703  00BB1E  5036               	movf	??_motor_isr+10,w,c
 45704  00BB20  2432               	addwf	??_motor_isr+6,w,c
 45705  00BB22  6E38               	movwf	(??_motor_isr+12)& (0+255),c
 45706  00BB24  5037               	movf	??_motor_isr+11,w,c
 45707  00BB26  2033               	addwfc	??_motor_isr+7,w,c
 45708  00BB28  6E39               	movwf	(??_motor_isr+13)& (0+255),c
 45709  00BB2A  0E00               	movlw	0
 45710  00BB2C  2034               	addwfc	??_motor_isr+8,w,c
 45711  00BB2E  6E3A               	movwf	(??_motor_isr+14)& (0+255),c
 45712  00BB30  0E00               	movlw	0
 45713  00BB32  2035               	addwfc	??_motor_isr+9,w,c
 45714  00BB34  6E3B               	movwf	(??_motor_isr+15)& (0+255),c
 45715  00BB36  5058               	movf	_motor_current_stepcount,w,c	;volatile
 45716  00BB38  2438               	addwf	??_motor_isr+12,w,c
 45717  00BB3A  0102               	movlb	2	; () banked
 45718  00BB3C  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 45719  00BB3E  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 45720  00BB40  2039               	addwfc	??_motor_isr+13,w,c
 45721  00BB42  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 45722  00BB44  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 45723  00BB46  203A               	addwfc	??_motor_isr+14,w,c
 45724  00BB48  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 45725  00BB4A  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 45726  00BB4C  203B               	addwfc	??_motor_isr+15,w,c
 45727  00BB4E  D0EF               	goto	L75
 45728  00BB50                     i2l2503:
 45729                           
 45730                           ;motor.c: 472: else;motor.c: 473: {;motor.c: 474: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 45731                           
 45732                           ; BSR set to: 2
 45733  00BB50  90D8               	bcf	status,0,c
 45734  00BB52  0100               	movlb	0	; () banked
 45735  00BB54  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 45736  00BB56  6EF6               	movwf	tblptrl,c
 45737  00BB58  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45738  00BB5A  6EF7               	movwf	tblptrh,c
 45739  00BB5C  0E61               	movlw	low _motor_steps_lookup
 45740  00BB5E  26F6               	addwf	tblptrl,f,c
 45741  00BB60  0E94               	movlw	high _motor_steps_lookup
 45742  00BB62  22F7               	addwfc	tblptrh,f,c
 45743  00BB64                     	if	1	;There are 3 active tblptr bytes
 45744  00BB64  6AF8               	clrf	tblptru,c
 45745  00BB66  0E00               	movlw	low (__mediumconst shr (0+16))
 45746  00BB68  22F8               	addwfc	tblptru,f,c
 45747  00BB6A                     	endif
 45748  00BB6A  0009               	tblrd		*+
 45749  00BB6C  CFF5 F02C          	movff	tablat,??_motor_isr
 45750  00BB70  0009               	tblrd		*+
 45751  00BB72  CFF5 F02D          	movff	tablat,??_motor_isr+1
 45752  00BB76  502C               	movf	??_motor_isr,w,c
 45753  00BB78  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 45754  00BB7A  0102               	movlb	2	; () banked
 45755  00BB7C  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 45756  00BB7E  502D               	movf	??_motor_isr+1,w,c
 45757  00BB80  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 45758  00BB82  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 45759  00BB84  0E00               	movlw	0
 45760  00BB86  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 45761  00BB88  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 45762  00BB8A  0E00               	movlw	0
 45763  00BB8C  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 45764  00BB8E  D0CF               	goto	L75
 45765  00BB90                     i2l2498:
 45766                           
 45767                           ;motor.c: 477: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 45768                           
 45769                           ; BSR set to: 2
 45770  00BB90  0101               	movlb	1	; () banked
 45771  00BB92  513F               	movf	_motor_maximum_speed& (0+255),w,b
 45772  00BB94  0100               	movlb	0	; () banked
 45773  00BB96  19FE               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 45774  00BB98  E106               	bnz	i2u1844_40
 45775  00BB9A  0101               	movlb	1	; () banked
 45776  00BB9C  5140               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 45777  00BB9E  0100               	movlb	0	; () banked
 45778  00BBA0  19FF               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45779  00BBA2  B4D8               	btfsc	status,2,c
 45780  00BBA4  D010               	goto	i2u1845_40
 45781  00BBA6                     i2u1844_40:
 45782                           
 45783                           ; BSR set to: 0
 45784  00BBA6  503E               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 45785  00BBA8  6E2C               	movwf	??_motor_isr& (0+255),c
 45786  00BBAA  503F               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 45787  00BBAC  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 45788  00BBAE  6A2E               	clrf	(??_motor_isr+2)& (0+255),c
 45789  00BBB0  6A2F               	clrf	(??_motor_isr+3)& (0+255),c
 45790  00BBB2  5040               	movf	motor_isr@steps_remaining,w,c
 45791  00BBB4  5C2C               	subwf	??_motor_isr,w,c
 45792  00BBB6  5041               	movf	motor_isr@steps_remaining+1,w,c
 45793  00BBB8  582D               	subwfb	??_motor_isr+1,w,c
 45794  00BBBA  5042               	movf	motor_isr@steps_remaining+2,w,c
 45795  00BBBC  582E               	subwfb	??_motor_isr+2,w,c
 45796  00BBBE  5043               	movf	motor_isr@steps_remaining+3,w,c
 45797  00BBC0  582F               	subwfb	??_motor_isr+3,w,c
 45798  00BBC2  A0D8               	btfss	status,0,c
 45799  00BBC4  D002               	goto	i2l2506
 45800  00BBC6                     i2u1845_40:
 45801                           
 45802                           ; BSR set to: 0
 45803                           ;motor.c: 478: {;motor.c: 481: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 45804                           
 45805                           ; BSR set to: 0
 45806  00BBC6  90D8               	bcf	status,0,c
 45807  00BBC8  D060               	goto	L74
 45808  00BBCA                     i2l2506:
 45809                           
 45810                           ;motor.c: 483: else;motor.c: 484: {;motor.c: 486: ++motor_current_speed;
 45811                           
 45812                           ; BSR set to: 2
 45813  00BBCA  0100               	movlb	0	; () banked
 45814  00BBCC  4BFE               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 45815  00BBCE  2BFF               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 45816                           
 45817                           ; BSR set to: 0
 45818                           ;motor.c: 490: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 45819  00BBD0  0EFD               	movlw	low _motor_prescaler_lookup
 45820  00BBD2  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 45821  00BBD4  6EF6               	movwf	tblptrl,c
 45822  00BBD6  0E9B               	movlw	high _motor_prescaler_lookup
 45823  00BBD8  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45824  00BBDA  6EF7               	movwf	tblptrh,c
 45825  00BBDC                     	if	1	;There are 3 active tblptr bytes
 45826  00BBDC  6AF8               	clrf	tblptru,c
 45827  00BBDE  0E00               	movlw	low (__mediumconst shr (0+16))
 45828  00BBE0  22F8               	addwfc	tblptru,f,c
 45829  00BBE2                     	endif
 45830  00BBE2  0008               	tblrd		*
 45831  00BBE4  CFF5 F02C          	movff	tablat,??_motor_isr
 45832  00BBE8  50CA               	movf	4042,w,c	;volatile
 45833  00BBEA  182C               	xorwf	??_motor_isr,w,c
 45834  00BBEC  0BFC               	andlw	-4
 45835  00BBEE  182C               	xorwf	??_motor_isr,w,c
 45836  00BBF0  6ECA               	movwf	4042,c	;volatile
 45837                           
 45838                           ; BSR set to: 0
 45839                           ;motor.c: 492: PR2 = motor_period_lookup[motor_current_speed];
 45840  00BBF2  0E16               	movlw	low _motor_period_lookup
 45841  00BBF4  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 45842  00BBF6  6EF6               	movwf	tblptrl,c
 45843  00BBF8  0E9A               	movlw	high _motor_period_lookup
 45844  00BBFA  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45845  00BBFC  6EF7               	movwf	tblptrh,c
 45846  00BBFE                     	if	1	;There are 3 active tblptr bytes
 45847  00BBFE  6AF8               	clrf	tblptru,c
 45848  00BC00  0E00               	movlw	low (__mediumconst shr (0+16))
 45849  00BC02  22F8               	addwfc	tblptru,f,c
 45850  00BC04                     	endif
 45851  00BC04  0008               	tblrd		*
 45852  00BC06  CFF5 FFCB          	movff	tablat,4043	;volatile
 45853                           
 45854                           ; BSR set to: 0
 45855                           ;motor.c: 494: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 45856  00BC0A  0E2F               	movlw	low _motor_postscaler_lookup
 45857  00BC0C  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 45858  00BC0E  6EF6               	movwf	tblptrl,c
 45859  00BC10  0E98               	movlw	high _motor_postscaler_lookup
 45860  00BC12  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45861  00BC14  6EF7               	movwf	tblptrh,c
 45862  00BC16                     	if	1	;There are 3 active tblptr bytes
 45863  00BC16  6AF8               	clrf	tblptru,c
 45864  00BC18  0E00               	movlw	low (__mediumconst shr (0+16))
 45865  00BC1A  22F8               	addwfc	tblptru,f,c
 45866  00BC1C                     	endif
 45867  00BC1C  0008               	tblrd		*
 45868  00BC1E  CFF5 F02C          	movff	tablat,??_motor_isr
 45869  00BC22  462C               	rlncf	??_motor_isr,f,c
 45870  00BC24  462C               	rlncf	??_motor_isr,f,c
 45871  00BC26  462C               	rlncf	??_motor_isr,f,c
 45872  00BC28  50CA               	movf	4042,w,c	;volatile
 45873  00BC2A  182C               	xorwf	??_motor_isr,w,c
 45874  00BC2C  0B87               	andlw	-121
 45875  00BC2E  182C               	xorwf	??_motor_isr,w,c
 45876  00BC30  6ECA               	movwf	4042,c	;volatile
 45877                           
 45878                           ; BSR set to: 0
 45879                           ;motor.c: 496: CCPR1L = PR2>>1;
 45880  00BC32  90D8               	bcf	status,0,c
 45881  00BC34  30CB               	rrcf	4043,w,c	;volatile
 45882  00BC36  6EBB               	movwf	4027,c	;volatile
 45883                           
 45884                           ; BSR set to: 0
 45885                           ;motor.c: 498: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 45886  00BC38  0101               	movlb	1	; () banked
 45887  00BC3A  5156               	movf	_motor_mode& (0+255),w,b
 45888  00BC3C  A4D8               	btfss	status,2,c
 45889  00BC3E  D023               	goto	i2l2510
 45890                           
 45891                           ; BSR set to: 1
 45892  00BC40  0E2F               	movlw	low _motor_postscaler_lookup
 45893  00BC42  0100               	movlb	0	; () banked
 45894  00BC44  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 45895  00BC46  6EF6               	movwf	tblptrl,c
 45896  00BC48  0E98               	movlw	high _motor_postscaler_lookup
 45897  00BC4A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45898  00BC4C  6EF7               	movwf	tblptrh,c
 45899  00BC4E                     	if	1	;There are 3 active tblptr bytes
 45900  00BC4E  6AF8               	clrf	tblptru,c
 45901  00BC50  0E00               	movlw	low (__mediumconst shr (0+16))
 45902  00BC52  22F8               	addwfc	tblptru,f,c
 45903  00BC54                     	endif
 45904  00BC54  0008               	tblrd		*
 45905  00BC56  50F5               	movf	tablat,w,c
 45906  00BC58  0900               	iorlw	0
 45907  00BC5A  A4D8               	btfss	status,2,c
 45908  00BC5C  D014               	goto	i2l2510
 45909                           
 45910                           ; BSR set to: 0
 45911                           ;motor.c: 499: {;motor.c: 501: motor_mode = MOTOR_MODE_PWM;
 45912  00BC5E  0E01               	movlw	1
 45913  00BC60  0101               	movlb	1	; () banked
 45914  00BC62  6F56               	movwf	_motor_mode& (0+255),b
 45915                           
 45916                           ;motor.c: 504: CCP1CONbits.CCP1M = 0b1100;
 45917  00BC64  50BA               	movf	4026,w,c	;volatile
 45918  00BC66  0BF0               	andlw	-16
 45919  00BC68  090C               	iorlw	12
 45920  00BC6A  6EBA               	movwf	4026,c	;volatile
 45921                           
 45922                           ;motor.c: 507: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 45923  00BC6C  0E55               	movlw	85
 45924  00BC6E  6EA7               	movwf	4007,c	;volsfr
 45925  00BC70  0EAA               	movlw	170
 45926  00BC72  6EA7               	movwf	4007,c	;volsfr
 45927                           
 45928                           ; BSR set to: 1
 45929  00BC74  010E               	movlb	14	; () banked
 45930  00BC76  91BF               	bcf	191,0,b	;volatile
 45931                           
 45932                           ;motor.c: 508: RPOR4 = 14;
 45933  00BC78  0E0E               	movlw	14
 45934  00BC7A  6FC4               	movwf	196,b	;volatile
 45935                           
 45936                           ;motor.c: 509: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 45937  00BC7C  0E55               	movlw	85
 45938  00BC7E  6EA7               	movwf	4007,c	;volsfr
 45939  00BC80  0EAA               	movlw	170
 45940  00BC82  6EA7               	movwf	4007,c	;volsfr
 45941                           
 45942                           ; BSR set to: 14
 45943  00BC84  81BF               	bsf	191,0,b	;volatile
 45944  00BC86                     i2l2510:
 45945                           
 45946                           ;motor.c: 510: };motor.c: 513: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 45947                           
 45948                           ; BSR set to: 14
 45949  00BC86  90D8               	bcf	status,0,c
 45950  00BC88  0100               	movlb	0	; () banked
 45951  00BC8A                     L74:
 45952  00BC8A  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 45953  00BC8C  6EF6               	movwf	tblptrl,c
 45954  00BC8E  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 45955  00BC90  6EF7               	movwf	tblptrh,c
 45956  00BC92  0E61               	movlw	low _motor_steps_lookup
 45957  00BC94  26F6               	addwf	tblptrl,f,c
 45958  00BC96  0E94               	movlw	high _motor_steps_lookup
 45959  00BC98  22F7               	addwfc	tblptrh,f,c
 45960  00BC9A                     	if	1	;There are 3 active tblptr bytes
 45961  00BC9A  6AF8               	clrf	tblptru,c
 45962  00BC9C  0E00               	movlw	low (__mediumconst shr (0+16))
 45963  00BC9E  22F8               	addwfc	tblptru,f,c
 45964  00BCA0                     	endif
 45965  00BCA0  0009               	tblrd		*+
 45966  00BCA2  CFF5 F02C          	movff	tablat,??_motor_isr
 45967  00BCA6  0009               	tblrd		*+
 45968  00BCA8  CFF5 F02D          	movff	tablat,??_motor_isr+1
 45969  00BCAC  502C               	movf	??_motor_isr,w,c
 45970  00BCAE  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 45971  00BCB0  502D               	movf	??_motor_isr+1,w,c
 45972  00BCB2  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 45973  00BCB4  6A30               	clrf	(??_motor_isr+4)& (0+255),c
 45974  00BCB6  6A31               	clrf	(??_motor_isr+5)& (0+255),c
 45975  00BCB8  1E2E               	comf	??_motor_isr+2,f,c
 45976  00BCBA  1E2F               	comf	??_motor_isr+3,f,c
 45977  00BCBC  1E30               	comf	??_motor_isr+4,f,c
 45978  00BCBE  1E31               	comf	??_motor_isr+5,f,c
 45979  00BCC0  2A2E               	incf	??_motor_isr+2,f,c
 45980  00BCC2  0E00               	movlw	0
 45981  00BCC4  222F               	addwfc	??_motor_isr+3,f,c
 45982  00BCC6  2230               	addwfc	??_motor_isr+4,f,c
 45983  00BCC8  2231               	addwfc	??_motor_isr+5,f,c
 45984  00BCCA  C0FE  F032         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 45985  00BCCE  C0FF  F033         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 45986  00BCD2  90D8               	bcf	status,0,c
 45987  00BCD4  3632               	rlcf	??_motor_isr+6,f,c
 45988  00BCD6  3633               	rlcf	??_motor_isr+7,f,c
 45989  00BCD8  0E02               	movlw	2
 45990  00BCDA  2632               	addwf	??_motor_isr+6,f,c
 45991  00BCDC  0E00               	movlw	0
 45992  00BCDE  2233               	addwfc	??_motor_isr+7,f,c
 45993  00BCE0  0E61               	movlw	low _motor_steps_lookup
 45994  00BCE2  2432               	addwf	??_motor_isr+6,w,c
 45995  00BCE4  6EF6               	movwf	tblptrl,c
 45996  00BCE6  0E94               	movlw	high _motor_steps_lookup
 45997  00BCE8  2033               	addwfc	??_motor_isr+7,w,c
 45998  00BCEA  6EF7               	movwf	tblptrh,c
 45999  00BCEC                     	if	1	;There are 3 active tblptr bytes
 46000  00BCEC  6AF8               	clrf	tblptru,c
 46001  00BCEE  0E00               	movlw	low (__mediumconst shr (0+16))
 46002  00BCF0  22F8               	addwfc	tblptru,f,c
 46003  00BCF2                     	endif
 46004  00BCF2  0009               	tblrd		*+
 46005  00BCF4  CFF5 F034          	movff	tablat,??_motor_isr+8
 46006  00BCF8  0009               	tblrd		*+
 46007  00BCFA  CFF5 F035          	movff	tablat,??_motor_isr+9
 46008  00BCFE  5034               	movf	??_motor_isr+8,w,c
 46009  00BD00  242E               	addwf	??_motor_isr+2,w,c
 46010  00BD02  6E36               	movwf	(??_motor_isr+10)& (0+255),c
 46011  00BD04  5035               	movf	??_motor_isr+9,w,c
 46012  00BD06  202F               	addwfc	??_motor_isr+3,w,c
 46013  00BD08  6E37               	movwf	(??_motor_isr+11)& (0+255),c
 46014  00BD0A  0E00               	movlw	0
 46015  00BD0C  2030               	addwfc	??_motor_isr+4,w,c
 46016  00BD0E  6E38               	movwf	(??_motor_isr+12)& (0+255),c
 46017  00BD10  0E00               	movlw	0
 46018  00BD12  2031               	addwfc	??_motor_isr+5,w,c
 46019  00BD14  6E39               	movwf	(??_motor_isr+13)& (0+255),c
 46020  00BD16  5058               	movf	_motor_current_stepcount,w,c	;volatile
 46021  00BD18  2436               	addwf	??_motor_isr+10,w,c
 46022  00BD1A  0102               	movlb	2	; () banked
 46023  00BD1C  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46024  00BD1E  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 46025  00BD20  2037               	addwfc	??_motor_isr+11,w,c
 46026  00BD22  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46027  00BD24  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 46028  00BD26  2038               	addwfc	??_motor_isr+12,w,c
 46029  00BD28  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46030  00BD2A  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 46031  00BD2C  2039               	addwfc	??_motor_isr+13,w,c
 46032  00BD2E                     L75:
 46033  00BD2E  6F29               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 46034  00BD30                     i2l2509:
 46035                           
 46036                           ; BSR set to: 2
 46037                           ;motor.c: 514: };motor.c: 515: };motor.c: 518: if(PIR1bits.TMR2IF)
 46038                           
 46039                           ; BSR set to: 2
 46040                           
 46041                           ; BSR set to: 2
 46042                           
 46043                           ; BSR set to: 2
 46044  00BD30  A29E               	btfss	3998,1,c	;volatile
 46045  00BD32  0012               	return	
 46046                           
 46047                           ; BSR set to: 2
 46048                           ;motor.c: 519: {;motor.c: 521: PIR1bits.TMR2IF = 0;
 46049  00BD34  929E               	bcf	3998,1,c	;volatile
 46050                           
 46051                           ; BSR set to: 2
 46052                           ;motor.c: 523: ++motor_current_stepcount;
 46053  00BD36  0E01               	movlw	1
 46054  00BD38  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 46055  00BD3A  0E00               	movlw	0
 46056  00BD3C  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 46057  00BD3E  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 46058  00BD40  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 46059                           
 46060                           ;motor.c: 526: os.current_position_in_steps += motor_direction;
 46061  00BD42  0101               	movlb	1	; () banked
 46062  00BD44  5155               	movf	_motor_direction& (0+255),w,b
 46063  00BD46  6E2C               	movwf	??_motor_isr& (0+255),c
 46064  00BD48  0E00               	movlw	0
 46065  00BD4A  BE2C               	btfsc	??_motor_isr& (0+255),7,c
 46066  00BD4C  0EFF               	movlw	255
 46067  00BD4E  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46068  00BD50  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46069  00BD52  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46070  00BD54  502C               	movf	??_motor_isr,w,c
 46071  00BD56  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 46072  00BD58  502D               	movf	??_motor_isr+1,w,c
 46073  00BD5A  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 46074  00BD5C  502E               	movf	??_motor_isr+2,w,c
 46075  00BD5E  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 46076  00BD60  502F               	movf	??_motor_isr+3,w,c
 46077  00BD62  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 46078                           
 46079                           ;motor.c: 527: if(os.current_position_in_steps==config.full_circle_in_steps)
 46080  00BD64  51A1               	movf	_config& (0+255),w,b
 46081  00BD66  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 46082  00BD68  E112               	bnz	i2l18374
 46083  00BD6A  51A2               	movf	(_config+1)& (0+255),w,b
 46084  00BD6C  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 46085  00BD6E  E10F               	bnz	i2l18374
 46086  00BD70  51A3               	movf	(_config+2)& (0+255),w,b
 46087  00BD72  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 46088  00BD74  E10C               	bnz	i2l18374
 46089  00BD76  51A4               	movf	(_config+3)& (0+255),w,b
 46090  00BD78  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 46091  00BD7A  A4D8               	btfss	status,2,c
 46092  00BD7C  D008               	goto	i2l2512
 46093                           
 46094                           ; BSR set to: 1
 46095                           ;motor.c: 528: os.current_position_in_steps = 0;
 46096  00BD7E  0E00               	movlw	0
 46097  00BD80  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46098  00BD82  0E00               	movlw	0
 46099  00BD84  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46100  00BD86  0E00               	movlw	0
 46101  00BD88  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46102  00BD8A  0E00               	movlw	0
 46103  00BD8C  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46104  00BD8E                     i2l2512:
 46105  00BD8E                     i2l18374:
 46106                           
 46107                           ; BSR set to: 1
 46108                           ;motor.c: 529: if(os.current_position_in_steps==0xFFFFFFFF)
 46109  00BD8E  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 46110  00BD90  E114               	bnz	i2l2493
 46111  00BD92  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 46112  00BD94  E112               	bnz	i2l2493
 46113  00BD96  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 46114  00BD98  E110               	bnz	i2l2493
 46115  00BD9A  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 46116  00BD9C  A4D8               	btfss	status,2,c
 46117  00BD9E  0012               	return	
 46118                           
 46119                           ; BSR set to: 1
 46120                           ;motor.c: 530: os.current_position_in_steps = (config.full_circle_in_steps-1);
 46121  00BDA0  0EFF               	movlw	255
 46122  00BDA2  25A1               	addwf	_config& (0+255),w,b
 46123  00BDA4  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46124  00BDA6  0EFF               	movlw	255
 46125  00BDA8  21A2               	addwfc	(_config+1)& (0+255),w,b
 46126  00BDAA  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46127  00BDAC  0EFF               	movlw	255
 46128  00BDAE  21A3               	addwfc	(_config+2)& (0+255),w,b
 46129  00BDB0  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46130  00BDB2  0EFF               	movlw	255
 46131  00BDB4  21A4               	addwfc	(_config+3)& (0+255),w,b
 46132  00BDB6  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46133                           
 46134                           ; BSR set to: 1
 46135  00BDB8  0012               	return	
 46136  00BDBA                     i2l2493:
 46137  00BDBA  0012               	return		;funcret
 46138  00BDBC                     __end_of_motor_isr:
 46139                           	opt stack 0
 46140                           tosu	equ	0xFFF
 46141                           tosh	equ	0xFFE
 46142                           tosl	equ	0xFFD
 46143                           pclatu	equ	0xFFB
 46144                           pclath	equ	0xFFA
 46145                           tblptru	equ	0xFF8
 46146                           tblptrh	equ	0xFF7
 46147                           tblptrl	equ	0xFF6
 46148                           tablat	equ	0xFF5
 46149                           prodh	equ	0xFF4
 46150                           prodl	equ	0xFF3
 46151                           intcon	equ	0xFF2
 46152                           indf0	equ	0xFEF
 46153                           postinc0	equ	0xFEE
 46154                           fsr0h	equ	0xFEA
 46155                           fsr0l	equ	0xFE9
 46156                           wreg	equ	0xFE8
 46157                           indf1	equ	0xFE7
 46158                           postinc1	equ	0xFE6
 46159                           postdec1	equ	0xFE5
 46160                           plusw1	equ	0xFE3
 46161                           fsr1h	equ	0xFE2
 46162                           fsr1l	equ	0xFE1
 46163                           indf2	equ	0xFDF
 46164                           postinc2	equ	0xFDE
 46165                           postdec2	equ	0xFDD
 46166                           plusw2	equ	0xFDB
 46167                           fsr2h	equ	0xFDA
 46168                           fsr2l	equ	0xFD9
 46169                           status	equ	0xFD8
 46170                           
 46171 ;; *************** function _i2c_eeprom_writeUint32 *****************
 46172 ;; Defined at:
 46173 ;;		line 230 in file "i2c.c"
 46174 ;; Parameters:    Size  Location     Type
 46175 ;;  address         2   37[COMRAM] unsigned int 
 46176 ;;  data            4   39[COMRAM] unsigned long 
 46177 ;; Auto vars:     Size  Location     Type
 46178 ;;		None
 46179 ;; Return value:  Size  Location     Type
 46180 ;;                  1    wreg      void 
 46181 ;; Registers used:
 46182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46183 ;; Tracked objects:
 46184 ;;		On entry : 0/0
 46185 ;;		On exit  : 0/0
 46186 ;;		Unchanged: 0/0
 46187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46188 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46191 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46192 ;;Total ram usage:        6 bytes
 46193 ;; Hardware stack levels used:    1
 46194 ;; Hardware stack levels required when called:    3
 46195 ;; This function calls:
 46196 ;;		_i2c_eeprom_write
 46197 ;; This function is called by:
 46198 ;;		_motor_isr
 46199 ;; This function uses a non-reentrant model
 46200 ;;
 46201                           
 46202                           	psect	text186
 46203  01557A                     __ptext186:
 46204                           	opt stack 0
 46205  01557A                     _i2c_eeprom_writeUint32:
 46206                           	opt stack 13
 46207                           
 46208                           ;i2c.c: 232: i2c_eeprom_write(address, &data, 4);
 46209                           
 46210                           ;incstack = 0
 46211  01557A  C026  F00B         	movff	i2c_eeprom_writeUint32@address,i2c_eeprom_write@address
 46212  01557E  C027  F00C         	movff	i2c_eeprom_writeUint32@address+1,i2c_eeprom_write@address+1
 46213  015582  0E28               	movlw	low i2c_eeprom_writeUint32@data
 46214  015584  6E0D               	movwf	i2c_eeprom_write@data,c
 46215  015586  0E00               	movlw	high i2c_eeprom_writeUint32@data
 46216  015588  6E0E               	movwf	i2c_eeprom_write@data+1,c
 46217  01558A  0E04               	movlw	4
 46218  01558C  6E0F               	movwf	i2c_eeprom_write@length,c
 46219  01558E  EC40  F09C         	call	_i2c_eeprom_write	;wreg free
 46220  015592  0012               	return		;funcret
 46221  015594                     __end_of_i2c_eeprom_writeUint32:
 46222                           	opt stack 0
 46223                           tosu	equ	0xFFF
 46224                           tosh	equ	0xFFE
 46225                           tosl	equ	0xFFD
 46226                           pclatu	equ	0xFFB
 46227                           pclath	equ	0xFFA
 46228                           tblptru	equ	0xFF8
 46229                           tblptrh	equ	0xFF7
 46230                           tblptrl	equ	0xFF6
 46231                           tablat	equ	0xFF5
 46232                           prodh	equ	0xFF4
 46233                           prodl	equ	0xFF3
 46234                           intcon	equ	0xFF2
 46235                           indf0	equ	0xFEF
 46236                           postinc0	equ	0xFEE
 46237                           fsr0h	equ	0xFEA
 46238                           fsr0l	equ	0xFE9
 46239                           wreg	equ	0xFE8
 46240                           indf1	equ	0xFE7
 46241                           postinc1	equ	0xFE6
 46242                           postdec1	equ	0xFE5
 46243                           plusw1	equ	0xFE3
 46244                           fsr1h	equ	0xFE2
 46245                           fsr1l	equ	0xFE1
 46246                           indf2	equ	0xFDF
 46247                           postinc2	equ	0xFDE
 46248                           postdec2	equ	0xFDD
 46249                           plusw2	equ	0xFDB
 46250                           fsr2h	equ	0xFDA
 46251                           fsr2l	equ	0xFD9
 46252                           status	equ	0xFD8
 46253                           
 46254 ;; *************** function _i2c_eeprom_write *****************
 46255 ;; Defined at:
 46256 ;;		line 242 in file "i2c.c"
 46257 ;; Parameters:    Size  Location     Type
 46258 ;;  address         2   10[COMRAM] unsigned int 
 46259 ;;  data            2   12[COMRAM] PTR unsigned char 
 46260 ;;		 -> i2c_eeprom_writeUint32@data(4), i2c_eeprom_writeUint16@data(2), 
 46261 ;;  length          1   14[COMRAM] unsigned char 
 46262 ;; Auto vars:     Size  Location     Type
 46263 ;;  dat            17   18[COMRAM] unsigned char [17]
 46264 ;;  cntr            1   36[COMRAM] unsigned char 
 46265 ;;  slave_addres    1   35[COMRAM] unsigned char 
 46266 ;; Return value:  Size  Location     Type
 46267 ;;                  1    wreg      void 
 46268 ;; Registers used:
 46269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46270 ;; Tracked objects:
 46271 ;;		On entry : 0/0
 46272 ;;		On exit  : 0/0
 46273 ;;		Unchanged: 0/0
 46274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46275 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46276 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46277 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46278 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46279 ;;Total ram usage:       27 bytes
 46280 ;; Hardware stack levels used:    1
 46281 ;; Hardware stack levels required when called:    2
 46282 ;; This function calls:
 46283 ;;		i2__i2c_eeprom_busy
 46284 ;;		i2__i2c_write
 46285 ;; This function is called by:
 46286 ;;		_i2c_eeprom_writeUint32
 46287 ;;		_i2c_eeprom_writeUint16
 46288 ;; This function uses a non-reentrant model
 46289 ;;
 46290                           
 46291                           	psect	text187
 46292  013880                     __ptext187:
 46293                           	opt stack 0
 46294  013880                     _i2c_eeprom_write:
 46295                           	opt stack 13
 46296                           
 46297                           ;i2c.c: 244: uint8_t cntr;;i2c.c: 245: uint8_t slave_address;;i2c.c: 246: uint8_t dat[17
      +                          ];;i2c.c: 248: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 46298                           
 46299                           ;incstack = 0
 46300  013880  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 46301  013884  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 46302  013888  0E07               	movlw	7
 46303  01388A  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 46304  01388C                     i2u1408_45:
 46305  01388C  90D8               	bcf	status,0,c
 46306  01388E  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 46307  013890  3210               	rrcf	??_i2c_eeprom_write,f,c
 46308  013892  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 46309  013894  D7FB               	goto	i2u1408_45
 46310  013896  5010               	movf	??_i2c_eeprom_write,w,c
 46311  013898  0B0E               	andlw	14
 46312  01389A  09A0               	iorlw	160
 46313  01389C  6E24               	movwf	i2c_eeprom_write@slave_address,c
 46314                           
 46315                           ;i2c.c: 249: dat[0] = address & 0xFF;
 46316  01389E  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 46317                           
 46318                           ;i2c.c: 251: length &= 0b00001111;
 46319  0138A2  0E0F               	movlw	15
 46320  0138A4  160F               	andwf	i2c_eeprom_write@length,f,c
 46321                           
 46322                           ;i2c.c: 252: for(cntr=0; cntr<length; ++cntr)
 46323  0138A6  0E00               	movlw	0
 46324  0138A8  6E25               	movwf	i2c_eeprom_write@cntr,c
 46325  0138AA  D018               	goto	i2l1203
 46326  0138AC                     
 46327                           ;i2c.c: 253: {;i2c.c: 254: dat[cntr+1] = data[cntr];
 46328  0138AC  5025               	movf	i2c_eeprom_write@cntr,w,c
 46329  0138AE  0D01               	mullw	1
 46330  0138B0  50F3               	movf	prodl,w,c
 46331  0138B2  240D               	addwf	i2c_eeprom_write@data,w,c
 46332  0138B4  6ED9               	movwf	fsr2l,c
 46333  0138B6  50F4               	movf	prodh,w,c
 46334  0138B8  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 46335  0138BA  6EDA               	movwf	fsr2h,c
 46336  0138BC  5025               	movf	i2c_eeprom_write@cntr,w,c
 46337  0138BE  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 46338  0138C0  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 46339  0138C2  0E01               	movlw	1
 46340  0138C4  2610               	addwf	??_i2c_eeprom_write,f,c
 46341  0138C6  0E00               	movlw	0
 46342  0138C8  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 46343  0138CA  0E13               	movlw	low i2c_eeprom_write@dat
 46344  0138CC  2410               	addwf	??_i2c_eeprom_write,w,c
 46345  0138CE  6EE1               	movwf	fsr1l,c
 46346  0138D0  0E00               	movlw	high i2c_eeprom_write@dat
 46347  0138D2  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 46348  0138D4  6EE2               	movwf	fsr1h,c
 46349  0138D6  CFDF FFE7          	movff	indf2,indf1
 46350  0138DA  2A25               	incf	i2c_eeprom_write@cntr,f,c
 46351  0138DC                     i2l1203:
 46352  0138DC  500F               	movf	i2c_eeprom_write@length,w,c
 46353  0138DE  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 46354  0138E0  A0D8               	btfss	status,0,c
 46355  0138E2  D7E4               	goto	i2l1204
 46356  0138E4                     i2u1409_40:
 46357                           
 46358                           ;i2c.c: 255: };i2c.c: 258: while(_i2c_eeprom_busy());
 46359  0138E4  ECDC  F0A9         	call	i2__i2c_eeprom_busy	;wreg free
 46360  0138E8  0900               	iorlw	0
 46361  0138EA  A4D8               	btfss	status,2,c
 46362  0138EC  D7FB               	goto	i2u1409_40
 46363                           
 46364                           ;i2c.c: 260: _i2c_write(slave_address, &dat[0], length+1);
 46365  0138EE  0E13               	movlw	low i2c_eeprom_write@dat
 46366  0138F0  6E06               	movwf	i2__i2c_write@data,c
 46367  0138F2  0E00               	movlw	high i2c_eeprom_write@dat
 46368  0138F4  6E07               	movwf	i2__i2c_write@data+1,c
 46369  0138F6  280F               	incf	i2c_eeprom_write@length,w,c
 46370  0138F8  6E08               	movwf	i2__i2c_write@length,c
 46371  0138FA  5024               	movf	i2c_eeprom_write@slave_address,w,c
 46372  0138FC  ECF4  F0A5         	call	i2__i2c_write
 46373  013900  0012               	return		;funcret
 46374  013902                     __end_of_i2c_eeprom_write:
 46375                           	opt stack 0
 46376                           tosu	equ	0xFFF
 46377                           tosh	equ	0xFFE
 46378                           tosl	equ	0xFFD
 46379                           pclatu	equ	0xFFB
 46380                           pclath	equ	0xFFA
 46381                           tblptru	equ	0xFF8
 46382                           tblptrh	equ	0xFF7
 46383                           tblptrl	equ	0xFF6
 46384                           tablat	equ	0xFF5
 46385                           prodh	equ	0xFF4
 46386                           prodl	equ	0xFF3
 46387                           intcon	equ	0xFF2
 46388                           indf0	equ	0xFEF
 46389                           postinc0	equ	0xFEE
 46390                           fsr0h	equ	0xFEA
 46391                           fsr0l	equ	0xFE9
 46392                           wreg	equ	0xFE8
 46393                           indf1	equ	0xFE7
 46394                           postinc1	equ	0xFE6
 46395                           postdec1	equ	0xFE5
 46396                           plusw1	equ	0xFE3
 46397                           fsr1h	equ	0xFE2
 46398                           fsr1l	equ	0xFE1
 46399                           indf2	equ	0xFDF
 46400                           postinc2	equ	0xFDE
 46401                           postdec2	equ	0xFDD
 46402                           plusw2	equ	0xFDB
 46403                           fsr2h	equ	0xFDA
 46404                           fsr2l	equ	0xFD9
 46405                           status	equ	0xFD8
 46406                           
 46407 ;; *************** function i2__i2c_write *****************
 46408 ;; Defined at:
 46409 ;;		line 84 in file "i2c.c"
 46410 ;; Parameters:    Size  Location     Type
 46411 ;;  slave_addres    1    wreg     unsigned char 
 46412 ;;  data            2    5[COMRAM] PTR unsigned char 
 46413 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 46414 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 46415 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 46416 ;;  length          1    7[COMRAM] unsigned char 
 46417 ;; Auto vars:     Size  Location     Type
 46418 ;;  slave_addres    1    8[COMRAM] unsigned char 
 46419 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 46420 ;; Return value:  Size  Location     Type
 46421 ;;                  1    wreg      void 
 46422 ;; Registers used:
 46423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46424 ;; Tracked objects:
 46425 ;;		On entry : 0/0
 46426 ;;		On exit  : 0/0
 46427 ;;		Unchanged: 0/0
 46428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46429 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46432 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46433 ;;Total ram usage:        5 bytes
 46434 ;; Hardware stack levels used:    1
 46435 ;; Hardware stack levels required when called:    1
 46436 ;; This function calls:
 46437 ;;		i2__i2c_send
 46438 ;;		i2__i2c_start
 46439 ;;		i2__i2c_stop
 46440 ;;		i2__i2c_wait_idle
 46441 ;; This function is called by:
 46442 ;;		_i2c_eeprom_write
 46443 ;; This function uses a non-reentrant model
 46444 ;;
 46445                           
 46446                           	psect	text188
 46447  014BE8                     __ptext188:
 46448                           	opt stack 0
 46449  014BE8                     i2__i2c_write:
 46450                           	opt stack 13
 46451                           
 46452                           ;incstack = 0
 46453                           ;i2__i2c_write@slave_address stored from wreg
 46454  014BE8  6E09               	movwf	i2__i2c_write@slave_address,c
 46455                           
 46456                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 46457  014BEA  EC1D  F0A3         	call	i2__i2c_wait_idle	;wreg free
 46458                           
 46459                           ;i2c.c: 89: _i2c_start();
 46460  014BEE  EC62  F0AB         	call	i2__i2c_start	;wreg free
 46461                           
 46462                           ;i2c.c: 90: _i2c_wait_idle();
 46463  014BF2  EC1D  F0A3         	call	i2__i2c_wait_idle	;wreg free
 46464                           
 46465                           ;i2c.c: 91: _i2c_send(slave_address);
 46466  014BF6  5009               	movf	i2__i2c_write@slave_address,w,c
 46467  014BF8  EC66  F0AB         	call	i2__i2c_send
 46468                           
 46469                           ;i2c.c: 92: _i2c_wait_idle();
 46470  014BFC  EC1D  F0A3         	call	i2__i2c_wait_idle	;wreg free
 46471                           
 46472                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 46473  014C00  0E00               	movlw	0
 46474  014C02  6E0A               	movwf	i2__i2c_write@cntr,c
 46475  014C04  D00E               	goto	i2l1158
 46476  014C06                     
 46477                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 46478  014C06  500A               	movf	i2__i2c_write@cntr,w,c
 46479  014C08  0D01               	mullw	1
 46480  014C0A  50F3               	movf	prodl,w,c
 46481  014C0C  2406               	addwf	i2__i2c_write@data,w,c
 46482  014C0E  6ED9               	movwf	fsr2l,c
 46483  014C10  50F4               	movf	prodh,w,c
 46484  014C12  2007               	addwfc	i2__i2c_write@data+1,w,c
 46485  014C14  6EDA               	movwf	fsr2h,c
 46486  014C16  50DF               	movf	indf2,w,c
 46487  014C18  EC66  F0AB         	call	i2__i2c_send
 46488                           
 46489                           ;i2c.c: 97: _i2c_wait_idle();
 46490  014C1C  EC1D  F0A3         	call	i2__i2c_wait_idle	;wreg free
 46491  014C20  2A0A               	incf	i2__i2c_write@cntr,f,c
 46492  014C22                     i2l1158:
 46493  014C22  5008               	movf	i2__i2c_write@length,w,c
 46494  014C24  5C0A               	subwf	i2__i2c_write@cntr,w,c
 46495  014C26  A0D8               	btfss	status,0,c
 46496  014C28  D7EE               	goto	i2l1159
 46497                           
 46498                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 46499  014C2A  EC5E  F0AB         	call	i2__i2c_stop	;wreg free
 46500  014C2E  0012               	return		;funcret
 46501  014C30                     __end_ofi2__i2c_write:
 46502                           	opt stack 0
 46503                           tosu	equ	0xFFF
 46504                           tosh	equ	0xFFE
 46505                           tosl	equ	0xFFD
 46506                           pclatu	equ	0xFFB
 46507                           pclath	equ	0xFFA
 46508                           tblptru	equ	0xFF8
 46509                           tblptrh	equ	0xFF7
 46510                           tblptrl	equ	0xFF6
 46511                           tablat	equ	0xFF5
 46512                           prodh	equ	0xFF4
 46513                           prodl	equ	0xFF3
 46514                           intcon	equ	0xFF2
 46515                           indf0	equ	0xFEF
 46516                           postinc0	equ	0xFEE
 46517                           fsr0h	equ	0xFEA
 46518                           fsr0l	equ	0xFE9
 46519                           wreg	equ	0xFE8
 46520                           indf1	equ	0xFE7
 46521                           postinc1	equ	0xFE6
 46522                           postdec1	equ	0xFE5
 46523                           plusw1	equ	0xFE3
 46524                           fsr1h	equ	0xFE2
 46525                           fsr1l	equ	0xFE1
 46526                           indf2	equ	0xFDF
 46527                           postinc2	equ	0xFDE
 46528                           postdec2	equ	0xFDD
 46529                           plusw2	equ	0xFDB
 46530                           fsr2h	equ	0xFDA
 46531                           fsr2l	equ	0xFD9
 46532                           status	equ	0xFD8
 46533                           
 46534 ;; *************** function i2__i2c_eeprom_busy *****************
 46535 ;; Defined at:
 46536 ;;		line 169 in file "i2c.c"
 46537 ;; Parameters:    Size  Location     Type
 46538 ;;		None
 46539 ;; Auto vars:     Size  Location     Type
 46540 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 46541 ;; Return value:  Size  Location     Type
 46542 ;;                  1    wreg      unsigned char 
 46543 ;; Registers used:
 46544 ;;		wreg, status,2, status,0, cstack
 46545 ;; Tracked objects:
 46546 ;;		On entry : 0/0
 46547 ;;		On exit  : 0/0
 46548 ;;		Unchanged: 0/0
 46549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46553 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46554 ;;Total ram usage:        1 bytes
 46555 ;; Hardware stack levels used:    1
 46556 ;; Hardware stack levels required when called:    1
 46557 ;; This function calls:
 46558 ;;		i2__i2c_send
 46559 ;;		i2__i2c_start
 46560 ;;		i2__i2c_stop
 46561 ;;		i2__i2c_wait_idle
 46562 ;; This function is called by:
 46563 ;;		_i2c_eeprom_write
 46564 ;; This function uses a non-reentrant model
 46565 ;;
 46566                           
 46567                           	psect	text189
 46568  0153B8                     __ptext189:
 46569                           	opt stack 0
 46570  0153B8                     i2__i2c_eeprom_busy:
 46571                           	opt stack 13
 46572                           
 46573                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
 46574                           
 46575                           ;incstack = 0
 46576  0153B8  EC1D  F0A3         	call	i2__i2c_wait_idle	;wreg free
 46577                           
 46578                           ;i2c.c: 173: _i2c_start();
 46579  0153BC  EC62  F0AB         	call	i2__i2c_start	;wreg free
 46580                           
 46581                           ;i2c.c: 174: _i2c_wait_idle();
 46582  0153C0  EC1D  F0A3         	call	i2__i2c_wait_idle	;wreg free
 46583                           
 46584                           ;i2c.c: 175: _i2c_send(0b10100000);
 46585  0153C4  0EA0               	movlw	160
 46586  0153C6  EC66  F0AB         	call	i2__i2c_send
 46587                           
 46588                           ;i2c.c: 176: _i2c_wait_idle();
 46589  0153CA  EC1D  F0A3         	call	i2__i2c_wait_idle	;wreg free
 46590                           
 46591                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
 46592  0153CE  0E00               	movlw	0
 46593  0153D0  BCC5               	btfsc	4037,6,c	;volatile
 46594  0153D2  0E01               	movlw	1
 46595  0153D4  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 46596                           
 46597                           ;i2c.c: 181: _i2c_stop();
 46598  0153D6  EC5E  F0AB         	call	i2__i2c_stop	;wreg free
 46599                           
 46600                           ;i2c.c: 183: return 0;
 46601  0153DA  0E00               	movlw	0
 46602  0153DC  0012               	return	
 46603  0153DE                     __end_ofi2__i2c_eeprom_busy:
 46604                           	opt stack 0
 46605                           tosu	equ	0xFFF
 46606                           tosh	equ	0xFFE
 46607                           tosl	equ	0xFFD
 46608                           pclatu	equ	0xFFB
 46609                           pclath	equ	0xFFA
 46610                           tblptru	equ	0xFF8
 46611                           tblptrh	equ	0xFF7
 46612                           tblptrl	equ	0xFF6
 46613                           tablat	equ	0xFF5
 46614                           prodh	equ	0xFF4
 46615                           prodl	equ	0xFF3
 46616                           intcon	equ	0xFF2
 46617                           indf0	equ	0xFEF
 46618                           postinc0	equ	0xFEE
 46619                           fsr0h	equ	0xFEA
 46620                           fsr0l	equ	0xFE9
 46621                           wreg	equ	0xFE8
 46622                           indf1	equ	0xFE7
 46623                           postinc1	equ	0xFE6
 46624                           postdec1	equ	0xFE5
 46625                           plusw1	equ	0xFE3
 46626                           fsr1h	equ	0xFE2
 46627                           fsr1l	equ	0xFE1
 46628                           indf2	equ	0xFDF
 46629                           postinc2	equ	0xFDE
 46630                           postdec2	equ	0xFDD
 46631                           plusw2	equ	0xFDB
 46632                           fsr2h	equ	0xFDA
 46633                           fsr2l	equ	0xFD9
 46634                           status	equ	0xFD8
 46635                           
 46636 ;; *************** function i2__i2c_wait_idle *****************
 46637 ;; Defined at:
 46638 ;;		line 40 in file "i2c.c"
 46639 ;; Parameters:    Size  Location     Type
 46640 ;;		None
 46641 ;; Auto vars:     Size  Location     Type
 46642 ;;		None
 46643 ;; Return value:  Size  Location     Type
 46644 ;;                  1    wreg      void 
 46645 ;; Registers used:
 46646 ;;		wreg, status,2, status,0
 46647 ;; Tracked objects:
 46648 ;;		On entry : 0/0
 46649 ;;		On exit  : 0/0
 46650 ;;		Unchanged: 0/0
 46651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46654 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46655 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46656 ;;Total ram usage:        5 bytes
 46657 ;; Hardware stack levels used:    1
 46658 ;; This function calls:
 46659 ;;		Nothing
 46660 ;; This function is called by:
 46661 ;;		i2__i2c_write
 46662 ;;		i2__i2c_eeprom_busy
 46663 ;; This function uses a non-reentrant model
 46664 ;;
 46665                           
 46666                           	psect	text190
 46667  01463A                     __ptext190:
 46668                           	opt stack 0
 46669  01463A                     i2__i2c_wait_idle:
 46670                           	opt stack 13
 46671                           
 46672                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 46673                           
 46674                           ;incstack = 0
 46675  01463A  A4C7               	btfss	4039,2,c	;volatile
 46676  01463C  D003               	goto	i2u1292_40
 46677  01463E  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 46678  014640  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 46679  014642  D001               	goto	i2u1292_48
 46680  014644                     i2u1292_40:
 46681  014644  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 46682  014646                     i2u1292_48:
 46683  014646  A0C5               	btfss	4037,0,c	;volatile
 46684  014648  D003               	goto	i2u1293_40
 46685  01464A  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 46686  01464C  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 46687  01464E  D001               	goto	i2u1293_48
 46688  014650                     i2u1293_40:
 46689  014650  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 46690  014652                     i2u1293_48:
 46691  014652  A2C5               	btfss	4037,1,c	;volatile
 46692  014654  D003               	goto	i2u1294_40
 46693  014656  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 46694  014658  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 46695  01465A  D001               	goto	i2u1294_48
 46696  01465C                     i2u1294_40:
 46697  01465C  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 46698  01465E                     i2u1294_48:
 46699  01465E  A4C5               	btfss	4037,2,c	;volatile
 46700  014660  D003               	goto	i2u1295_40
 46701  014662  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 46702  014664  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 46703  014666  D001               	goto	i2u1295_48
 46704  014668                     i2u1295_40:
 46705  014668  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 46706  01466A                     i2u1295_48:
 46707  01466A  A6C5               	btfss	4037,3,c	;volatile
 46708  01466C  D003               	goto	i2u1296_40
 46709  01466E  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 46710  014670  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 46711  014672  D001               	goto	i2u1296_48
 46712  014674                     i2u1296_40:
 46713  014674  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 46714  014676                     i2u1296_48:
 46715  014676  A8C5               	btfss	4037,4,c	;volatile
 46716  014678  D002               	goto	i2u1297_40
 46717  01467A  0E01               	movlw	1
 46718  01467C  D001               	goto	i2u1297_46
 46719  01467E                     i2u1297_40:
 46720  01467E  0E00               	movlw	0
 46721  014680                     i2u1297_46:
 46722  014680  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 46723  014682  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 46724  014684  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 46725  014686  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 46726  014688  1001               	iorwf	??i2__i2c_wait_idle,w,c
 46727  01468A  0900               	iorlw	0
 46728  01468C  B4D8               	btfsc	status,2,c
 46729  01468E  0012               	return	
 46730  014690  D7D4               	goto	i2__i2c_wait_idle
 46731  014692                     __end_ofi2__i2c_wait_idle:
 46732                           	opt stack 0
 46733                           tosu	equ	0xFFF
 46734                           tosh	equ	0xFFE
 46735                           tosl	equ	0xFFD
 46736                           pclatu	equ	0xFFB
 46737                           pclath	equ	0xFFA
 46738                           tblptru	equ	0xFF8
 46739                           tblptrh	equ	0xFF7
 46740                           tblptrl	equ	0xFF6
 46741                           tablat	equ	0xFF5
 46742                           prodh	equ	0xFF4
 46743                           prodl	equ	0xFF3
 46744                           intcon	equ	0xFF2
 46745                           indf0	equ	0xFEF
 46746                           postinc0	equ	0xFEE
 46747                           fsr0h	equ	0xFEA
 46748                           fsr0l	equ	0xFE9
 46749                           wreg	equ	0xFE8
 46750                           indf1	equ	0xFE7
 46751                           postinc1	equ	0xFE6
 46752                           postdec1	equ	0xFE5
 46753                           plusw1	equ	0xFE3
 46754                           fsr1h	equ	0xFE2
 46755                           fsr1l	equ	0xFE1
 46756                           indf2	equ	0xFDF
 46757                           postinc2	equ	0xFDE
 46758                           postdec2	equ	0xFDD
 46759                           plusw2	equ	0xFDB
 46760                           fsr2h	equ	0xFDA
 46761                           fsr2l	equ	0xFD9
 46762                           status	equ	0xFD8
 46763                           
 46764 ;; *************** function i2__i2c_stop *****************
 46765 ;; Defined at:
 46766 ;;		line 63 in file "i2c.c"
 46767 ;; Parameters:    Size  Location     Type
 46768 ;;		None
 46769 ;; Auto vars:     Size  Location     Type
 46770 ;;		None
 46771 ;; Return value:  Size  Location     Type
 46772 ;;                  1    wreg      void 
 46773 ;; Registers used:
 46774 ;;		None
 46775 ;; Tracked objects:
 46776 ;;		On entry : 0/0
 46777 ;;		On exit  : 0/0
 46778 ;;		Unchanged: 0/0
 46779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46784 ;;Total ram usage:        0 bytes
 46785 ;; Hardware stack levels used:    1
 46786 ;; This function calls:
 46787 ;;		Nothing
 46788 ;; This function is called by:
 46789 ;;		i2__i2c_write
 46790 ;;		i2__i2c_eeprom_busy
 46791 ;; This function uses a non-reentrant model
 46792 ;;
 46793                           
 46794                           	psect	text191
 46795  0156BC                     __ptext191:
 46796                           	opt stack 0
 46797  0156BC                     i2__i2c_stop:
 46798                           	opt stack 13
 46799                           
 46800                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 46801                           
 46802                           ;incstack = 0
 46803  0156BC  84C5               	bsf	4037,2,c	;volatile
 46804  0156BE  A4C5               	btfss	4037,2,c	;volatile
 46805  0156C0  0012               	return	
 46806  0156C2  D7FD               	goto	i2l1141
 46807  0156C4                     __end_ofi2__i2c_stop:
 46808                           	opt stack 0
 46809                           tosu	equ	0xFFF
 46810                           tosh	equ	0xFFE
 46811                           tosl	equ	0xFFD
 46812                           pclatu	equ	0xFFB
 46813                           pclath	equ	0xFFA
 46814                           tblptru	equ	0xFF8
 46815                           tblptrh	equ	0xFF7
 46816                           tblptrl	equ	0xFF6
 46817                           tablat	equ	0xFF5
 46818                           prodh	equ	0xFF4
 46819                           prodl	equ	0xFF3
 46820                           intcon	equ	0xFF2
 46821                           indf0	equ	0xFEF
 46822                           postinc0	equ	0xFEE
 46823                           fsr0h	equ	0xFEA
 46824                           fsr0l	equ	0xFE9
 46825                           wreg	equ	0xFE8
 46826                           indf1	equ	0xFE7
 46827                           postinc1	equ	0xFE6
 46828                           postdec1	equ	0xFE5
 46829                           plusw1	equ	0xFE3
 46830                           fsr1h	equ	0xFE2
 46831                           fsr1l	equ	0xFE1
 46832                           indf2	equ	0xFDF
 46833                           postinc2	equ	0xFDE
 46834                           postdec2	equ	0xFDD
 46835                           plusw2	equ	0xFDB
 46836                           fsr2h	equ	0xFDA
 46837                           fsr2l	equ	0xFD9
 46838                           status	equ	0xFD8
 46839                           
 46840 ;; *************** function i2__i2c_start *****************
 46841 ;; Defined at:
 46842 ;;		line 45 in file "i2c.c"
 46843 ;; Parameters:    Size  Location     Type
 46844 ;;		None
 46845 ;; Auto vars:     Size  Location     Type
 46846 ;;		None
 46847 ;; Return value:  Size  Location     Type
 46848 ;;                  1    wreg      void 
 46849 ;; Registers used:
 46850 ;;		None
 46851 ;; Tracked objects:
 46852 ;;		On entry : 0/0
 46853 ;;		On exit  : 0/0
 46854 ;;		Unchanged: 0/0
 46855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46860 ;;Total ram usage:        0 bytes
 46861 ;; Hardware stack levels used:    1
 46862 ;; This function calls:
 46863 ;;		Nothing
 46864 ;; This function is called by:
 46865 ;;		i2__i2c_write
 46866 ;;		i2__i2c_eeprom_busy
 46867 ;; This function uses a non-reentrant model
 46868 ;;
 46869                           
 46870                           	psect	text192
 46871  0156C4                     __ptext192:
 46872                           	opt stack 0
 46873  0156C4                     i2__i2c_start:
 46874                           	opt stack 13
 46875                           
 46876                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 46877                           
 46878                           ;incstack = 0
 46879  0156C4  80C5               	bsf	4037,0,c	;volatile
 46880  0156C6  A0C5               	btfss	4037,0,c	;volatile
 46881  0156C8  0012               	return	
 46882  0156CA  D7FD               	goto	i2l1126
 46883  0156CC                     __end_ofi2__i2c_start:
 46884                           	opt stack 0
 46885                           tosu	equ	0xFFF
 46886                           tosh	equ	0xFFE
 46887                           tosl	equ	0xFFD
 46888                           pclatu	equ	0xFFB
 46889                           pclath	equ	0xFFA
 46890                           tblptru	equ	0xFF8
 46891                           tblptrh	equ	0xFF7
 46892                           tblptrl	equ	0xFF6
 46893                           tablat	equ	0xFF5
 46894                           prodh	equ	0xFF4
 46895                           prodl	equ	0xFF3
 46896                           intcon	equ	0xFF2
 46897                           indf0	equ	0xFEF
 46898                           postinc0	equ	0xFEE
 46899                           fsr0h	equ	0xFEA
 46900                           fsr0l	equ	0xFE9
 46901                           wreg	equ	0xFE8
 46902                           indf1	equ	0xFE7
 46903                           postinc1	equ	0xFE6
 46904                           postdec1	equ	0xFE5
 46905                           plusw1	equ	0xFE3
 46906                           fsr1h	equ	0xFE2
 46907                           fsr1l	equ	0xFE1
 46908                           indf2	equ	0xFDF
 46909                           postinc2	equ	0xFDE
 46910                           postdec2	equ	0xFDD
 46911                           plusw2	equ	0xFDB
 46912                           fsr2h	equ	0xFDA
 46913                           fsr2l	equ	0xFD9
 46914                           status	equ	0xFD8
 46915                           
 46916 ;; *************** function i2__i2c_send *****************
 46917 ;; Defined at:
 46918 ;;		line 51 in file "i2c.c"
 46919 ;; Parameters:    Size  Location     Type
 46920 ;;  dat             1    wreg     unsigned char 
 46921 ;; Auto vars:     Size  Location     Type
 46922 ;;  dat             1    0[COMRAM] unsigned char 
 46923 ;; Return value:  Size  Location     Type
 46924 ;;                  1    wreg      void 
 46925 ;; Registers used:
 46926 ;;		wreg
 46927 ;; Tracked objects:
 46928 ;;		On entry : 0/0
 46929 ;;		On exit  : 0/0
 46930 ;;		Unchanged: 0/0
 46931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46936 ;;Total ram usage:        1 bytes
 46937 ;; Hardware stack levels used:    1
 46938 ;; This function calls:
 46939 ;;		Nothing
 46940 ;; This function is called by:
 46941 ;;		i2__i2c_write
 46942 ;;		i2__i2c_eeprom_busy
 46943 ;; This function uses a non-reentrant model
 46944 ;;
 46945                           
 46946                           	psect	text193
 46947  0156CC                     __ptext193:
 46948                           	opt stack 0
 46949  0156CC                     i2__i2c_send:
 46950                           	opt stack 13
 46951                           
 46952                           ;incstack = 0
 46953                           ;i2__i2c_send@dat stored from wreg
 46954  0156CC  6E01               	movwf	i2__i2c_send@dat,c
 46955                           
 46956                           ;i2c.c: 53: SSP1BUF = dat;
 46957  0156CE  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 46958  0156D2  0012               	return		;funcret
 46959  0156D4                     __end_ofi2__i2c_send:
 46960                           	opt stack 0
 46961                           tosu	equ	0xFFF
 46962                           tosh	equ	0xFFE
 46963                           tosl	equ	0xFFD
 46964                           pclatu	equ	0xFFB
 46965                           pclath	equ	0xFFA
 46966                           tblptru	equ	0xFF8
 46967                           tblptrh	equ	0xFF7
 46968                           tblptrl	equ	0xFF6
 46969                           tablat	equ	0xFF5
 46970                           prodh	equ	0xFF4
 46971                           prodl	equ	0xFF3
 46972                           intcon	equ	0xFF2
 46973                           indf0	equ	0xFEF
 46974                           postinc0	equ	0xFEE
 46975                           fsr0h	equ	0xFEA
 46976                           fsr0l	equ	0xFE9
 46977                           wreg	equ	0xFE8
 46978                           indf1	equ	0xFE7
 46979                           postinc1	equ	0xFE6
 46980                           postdec1	equ	0xFE5
 46981                           plusw1	equ	0xFE3
 46982                           fsr1h	equ	0xFE2
 46983                           fsr1l	equ	0xFE1
 46984                           indf2	equ	0xFDF
 46985                           postinc2	equ	0xFDE
 46986                           postdec2	equ	0xFDD
 46987                           plusw2	equ	0xFDB
 46988                           fsr2h	equ	0xFDA
 46989                           fsr2l	equ	0xFD9
 46990                           status	equ	0xFD8
 46991                           
 46992 ;; *************** function _USBDeviceTasks *****************
 46993 ;; Defined at:
 46994 ;;		line 477 in file "usb_device.c"
 46995 ;; Parameters:    Size  Location     Type
 46996 ;;		None
 46997 ;; Auto vars:     Size  Location     Type
 46998 ;;  i               1   30[COMRAM] unsigned char 
 46999 ;; Return value:  Size  Location     Type
 47000 ;;                  1    wreg      void 
 47001 ;; Registers used:
 47002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 47003 ;; Tracked objects:
 47004 ;;		On entry : 0/0
 47005 ;;		On exit  : 0/0
 47006 ;;		Unchanged: 0/0
 47007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47011 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47012 ;;Total ram usage:        1 bytes
 47013 ;; Hardware stack levels used:    1
 47014 ;; Hardware stack levels required when called:    8
 47015 ;; This function calls:
 47016 ;;		_USBCtrlEPAllowStatusStage
 47017 ;;		_USBCtrlEPService
 47018 ;;		_USBIncrement1msInternalTimers
 47019 ;;		_USBStallHandler
 47020 ;;		_USBSuspend
 47021 ;;		_USBWakeFromSuspend
 47022 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47023 ;;		i2_USBDeviceInit
 47024 ;; This function is called by:
 47025 ;;		_SYS_InterruptHigh
 47026 ;; This function uses a non-reentrant model
 47027 ;;
 47028                           
 47029                           	psect	text194
 47030  00FC8A                     __ptext194:
 47031                           	opt stack 0
 47032  00FC8A                     _USBDeviceTasks:
 47033                           	opt stack 9
 47034                           
 47035                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 47036                           
 47037                           ;incstack = 0
 47038  00FC8A  045E               	decf	_USBDeviceState,w,c	;volatile
 47039  00FC8C  B4D8               	btfsc	status,2,c
 47040                           
 47041                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 47042  00FC8E  BA65               	btfsc	3941,5,c	;volatile
 47043  00FC90  D007               	goto	i2l155
 47044                           
 47045                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 47046  00FC92  0E00               	movlw	0
 47047  00FC94  6E62               	movwf	3938,c	;volatile
 47048                           
 47049                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 47050  00FC96  010F               	movlb	15	; () banked
 47051  00FC98  8136               	bsf	54,0,b	;volatile
 47052                           
 47053                           ; BSR set to: 15
 47054                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 47055  00FC9A  8936               	bsf	54,4,b	;volatile
 47056                           
 47057                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 47058  00FC9C  0E02               	movlw	2
 47059  00FC9E  6E5E               	movwf	_USBDeviceState,c	;volatile
 47060  00FCA0                     i2l155:
 47061                           
 47062                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 47063                           
 47064                           ; BSR set to: 15
 47065                           
 47066                           ; BSR set to: 15
 47067  00FCA0  A462               	btfss	3938,2,c	;volatile
 47068  00FCA2  D006               	goto	i2l156
 47069  00FCA4  010F               	movlb	15	; () banked
 47070  00FCA6  A536               	btfss	54,2,b	;volatile
 47071  00FCA8  D003               	goto	i2l156
 47072                           
 47073                           ; BSR set to: 15
 47074                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 47075  00FCAA  9462               	bcf	3938,2,c	;volatile
 47076                           
 47077                           ; BSR set to: 15
 47078                           ;usb_device.c: 640: USBWakeFromSuspend();
 47079  00FCAC  ECB2  F0A7         	call	_USBWakeFromSuspend	;wreg free
 47080  00FCB0                     i2l156:
 47081                           
 47082                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 47083  00FCB0  A265               	btfss	3941,1,c	;volatile
 47084  00FCB2  D002               	goto	i2l157
 47085                           
 47086                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 47087  00FCB4  98A1               	bcf	4001,4,c	;volatile
 47088                           
 47089                           ;usb_device.c: 650: return;
 47090  00FCB6  0012               	return	
 47091  00FCB8                     i2l157:
 47092                           
 47093                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 47094  00FCB8  A062               	btfss	3938,0,c	;volatile
 47095  00FCBA  D009               	goto	i2l159
 47096  00FCBC  010F               	movlb	15	; () banked
 47097  00FCBE  A136               	btfss	54,0,b	;volatile
 47098  00FCC0  D006               	goto	i2l159
 47099                           
 47100                           ; BSR set to: 15
 47101                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 47102  00FCC2  ECE8  F07E         	call	i2_USBDeviceInit	;wreg free
 47103                           
 47104                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 47105  00FCC6  88A0               	bsf	4000,4,c	;volatile
 47106                           
 47107                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 47108  00FCC8  0E04               	movlw	4
 47109  00FCCA  6E5E               	movwf	_USBDeviceState,c	;volatile
 47110                           
 47111                           ;usb_device.c: 681: (UIR &= 0xFE);
 47112  00FCCC  9062               	bcf	3938,0,c	;volatile
 47113  00FCCE                     i2l159:
 47114                           
 47115                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 47116  00FCCE  A862               	btfss	3938,4,c	;volatile
 47117  00FCD0  D004               	goto	i2l160
 47118  00FCD2  010F               	movlb	15	; () banked
 47119  00FCD4  B936               	btfsc	54,4,b	;volatile
 47120                           
 47121                           ; BSR set to: 15
 47122                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 47123  00FCD6  ECB2  F0A8         	call	_USBSuspend	;wreg free
 47124  00FCDA                     i2l160:
 47125                           
 47126                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 47127  00FCDA  AC62               	btfss	3938,6,c	;volatile
 47128  00FCDC  D01C               	goto	i2l164
 47129                           
 47130                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 47131  00FCDE  010F               	movlb	15	; () banked
 47132  00FCE0  AD36               	btfss	54,6,b	;volatile
 47133  00FCE2  D00E               	goto	i2l162
 47134                           
 47135                           ; BSR set to: 15
 47136                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 47137  00FCE4  0E00               	movlw	0
 47138  00FCE6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47139  00FCE8  0E73               	movlw	115
 47140  00FCEA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47141  00FCEC  0E00               	movlw	0
 47142  00FCEE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47143  00FCF0  0E00               	movlw	0
 47144  00FCF2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47145  00FCF4  0E00               	movlw	0
 47146  00FCF6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47147  00FCF8  0E01               	movlw	1
 47148  00FCFA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47149  00FCFC  EC79  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47150  00FD00                     i2l162:
 47151                           
 47152                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 47153  00FD00  9C62               	bcf	3938,6,c	;volatile
 47154                           
 47155                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 47156  00FD02  EC69  F0AA         	call	_USBIncrement1msInternalTimers	;wreg free
 47157                           
 47158                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 47159  00FD06  0101               	movlb	1	; () banked
 47160  00FD08  516A               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 47161  00FD0A  A4D8               	btfss	status,2,c
 47162                           
 47163                           ; BSR set to: 1
 47164                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 47165  00FD0C  076A               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 47166                           
 47167                           ; BSR set to: 1
 47168                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 47169                           
 47170                           ; BSR set to: 1
 47171  00FD0E  516A               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 47172  00FD10  B4D8               	btfsc	status,2,c
 47173                           
 47174                           ; BSR set to: 1
 47175                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 47176  00FD12  EC09  F093         	call	_USBCtrlEPAllowStatusStage	;wreg free
 47177  00FD16                     i2l164:
 47178                           
 47179                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 47180  00FD16  AA62               	btfss	3938,5,c	;volatile
 47181  00FD18  D004               	goto	i2l165
 47182  00FD1A  010F               	movlb	15	; () banked
 47183  00FD1C  BB36               	btfsc	54,5,b	;volatile
 47184                           
 47185                           ; BSR set to: 15
 47186                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 47187  00FD1E  ECA1  F0A6         	call	_USBStallHandler	;wreg free
 47188  00FD22                     i2l165:
 47189                           
 47190                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 47191  00FD22  A262               	btfss	3938,1,c	;volatile
 47192  00FD24  D012               	goto	i2l166
 47193  00FD26  010F               	movlb	15	; () banked
 47194  00FD28  A336               	btfss	54,1,b	;volatile
 47195  00FD2A  D00F               	goto	i2l166
 47196                           
 47197                           ; BSR set to: 15
 47198                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 47199  00FD2C  0E7F               	movlw	127
 47200  00FD2E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47201  00FD30  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47202  00FD32  0E00               	movlw	0
 47203  00FD34  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47204  00FD36  0E00               	movlw	0
 47205  00FD38  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47206  00FD3A  0E00               	movlw	0
 47207  00FD3C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47208  00FD3E  0E01               	movlw	1
 47209  00FD40  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47210  00FD42  EC79  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47211                           
 47212                           ;usb_device.c: 759: {UEIR = 0;};
 47213  00FD46  0E00               	movlw	0
 47214  00FD48  6E63               	movwf	3939,c	;volatile
 47215  00FD4A                     i2l166:
 47216                           
 47217                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 47218  00FD4A  0E04               	movlw	4
 47219  00FD4C  605E               	cpfslt	_USBDeviceState,c	;volatile
 47220  00FD4E  D002               	goto	i2l167
 47221                           
 47222                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 47223  00FD50  98A1               	bcf	4001,4,c	;volatile
 47224                           
 47225                           ;usb_device.c: 777: return;
 47226  00FD52  0012               	return	
 47227  00FD54                     i2l167:
 47228                           
 47229                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 47230  00FD54  010F               	movlb	15	; () banked
 47231  00FD56  A736               	btfss	54,3,b	;volatile
 47232  00FD58  D039               	goto	i2u1688_40
 47233                           
 47234                           ; BSR set to: 15
 47235                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 47236  00FD5A  0E00               	movlw	0
 47237  00FD5C  6E1F               	movwf	USBDeviceTasks@i,c
 47238  00FD5E                     i2l17324:
 47239                           
 47240                           ; BSR set to: 15
 47241  00FD5E  0E03               	movlw	3
 47242  00FD60  641F               	cpfsgt	USBDeviceTasks@i,c
 47243  00FD62  D001               	goto	i2l169
 47244  00FD64  D033               	goto	i2u1688_40
 47245  00FD66                     i2l169:
 47246                           
 47247                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 47248  00FD66  A662               	btfss	3938,3,c	;volatile
 47249  00FD68  D031               	goto	i2u1688_40
 47250                           
 47251                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 47252  00FD6A  CF64 F1C1          	movff	3940,_USTATcopy	;volatile
 47253                           
 47254                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 47255  00FD6E  0101               	movlb	1	; () banked
 47256  00FD70  31C1               	rrcf	_USTATcopy& (0+255),w,b	;volatile
 47257  00FD72  32E8               	rrcf	wreg,f,c
 47258  00FD74  32E8               	rrcf	wreg,f,c
 47259  00FD76  0B0F               	andlw	15
 47260  00FD78  6F6C               	movwf	_endpoint_number& (0+255),b	;volatile
 47261                           
 47262                           ; BSR set to: 1
 47263                           ;usb_device.c: 793: (UIR &= 0xF7);
 47264  00FD7A  9662               	bcf	3938,3,c	;volatile
 47265                           
 47266                           ; BSR set to: 1
 47267                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 47268  00FD7C  B5C1               	btfsc	_USTATcopy& (0+255),2,b	;volatile
 47269  00FD7E  D007               	goto	i2l172
 47270                           
 47271                           ; BSR set to: 1
 47272                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 47273  00FD80  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 47274  00FD82  0D01               	mullw	1
 47275  00FD84  0E39               	movlw	low _ep_data_out
 47276  00FD86  24F3               	addwf	prodl,w,c
 47277  00FD88  6ED9               	movwf	fsr2l,c
 47278  00FD8A  0E01               	movlw	high _ep_data_out
 47279  00FD8C  D006               	goto	L76
 47280  00FD8E                     i2l172:
 47281                           
 47282                           ; BSR set to: 1
 47283                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 47284                           
 47285                           ; BSR set to: 1
 47286  00FD8E  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 47287  00FD90  0D01               	mullw	1
 47288  00FD92  0E3C               	movlw	low _ep_data_in
 47289  00FD94  24F3               	addwf	prodl,w,c
 47290  00FD96  6ED9               	movwf	fsr2l,c
 47291  00FD98  0E01               	movlw	high _ep_data_in
 47292  00FD9A                     L76:
 47293  00FD9A  20F4               	addwfc	prodh,w,c
 47294  00FD9C  6EDA               	movwf	fsr2h,c
 47295  00FD9E  70DF               	btg	indf2,0,c
 47296                           
 47297                           ; BSR set to: 1
 47298                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 47299                           
 47300                           ; BSR set to: 1
 47301  00FDA0  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 47302  00FDA2  A4D8               	btfss	status,2,c
 47303  00FDA4  D003               	goto	i2l174
 47304                           
 47305                           ; BSR set to: 1
 47306                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 47307  00FDA6  EC46  F098         	call	_USBCtrlEPService	;wreg free
 47308                           
 47309                           ;usb_device.c: 813: }
 47310  00FDAA  D00E               	goto	i2l176
 47311  00FDAC                     i2l174:
 47312                           
 47313                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 47314  00FDAC  0E00               	movlw	0
 47315  00FDAE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47316  00FDB0  0E72               	movlw	114
 47317  00FDB2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47318  00FDB4  0EC1               	movlw	low _USTATcopy
 47319  00FDB6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47320  00FDB8  0E01               	movlw	high _USTATcopy
 47321  00FDBA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47322  00FDBC  0E00               	movlw	0
 47323  00FDBE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47324  00FDC0  0E00               	movlw	0
 47325  00FDC2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47326  00FDC4  EC79  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47327  00FDC8                     i2l176:
 47328  00FDC8  2A1F               	incf	USBDeviceTasks@i,f,c
 47329  00FDCA  D7C9               	goto	i2l17324
 47330  00FDCC                     i2u1688_40:
 47331                           
 47332                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 47333  00FDCC  98A1               	bcf	4001,4,c	;volatile
 47334  00FDCE  0012               	return		;funcret
 47335  00FDD0                     __end_of_USBDeviceTasks:
 47336                           	opt stack 0
 47337                           tosu	equ	0xFFF
 47338                           tosh	equ	0xFFE
 47339                           tosl	equ	0xFFD
 47340                           pclatu	equ	0xFFB
 47341                           pclath	equ	0xFFA
 47342                           tblptru	equ	0xFF8
 47343                           tblptrh	equ	0xFF7
 47344                           tblptrl	equ	0xFF6
 47345                           tablat	equ	0xFF5
 47346                           prodh	equ	0xFF4
 47347                           prodl	equ	0xFF3
 47348                           intcon	equ	0xFF2
 47349                           indf0	equ	0xFEF
 47350                           postinc0	equ	0xFEE
 47351                           fsr0h	equ	0xFEA
 47352                           fsr0l	equ	0xFE9
 47353                           wreg	equ	0xFE8
 47354                           indf1	equ	0xFE7
 47355                           postinc1	equ	0xFE6
 47356                           postdec1	equ	0xFE5
 47357                           plusw1	equ	0xFE3
 47358                           fsr1h	equ	0xFE2
 47359                           fsr1l	equ	0xFE1
 47360                           indf2	equ	0xFDF
 47361                           postinc2	equ	0xFDE
 47362                           postdec2	equ	0xFDD
 47363                           plusw2	equ	0xFDB
 47364                           fsr2h	equ	0xFDA
 47365                           fsr2l	equ	0xFD9
 47366                           status	equ	0xFD8
 47367                           
 47368 ;; *************** function i2_USBDeviceInit *****************
 47369 ;; Defined at:
 47370 ;;		line 277 in file "usb_device.c"
 47371 ;; Parameters:    Size  Location     Type
 47372 ;;		None
 47373 ;; Auto vars:     Size  Location     Type
 47374 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 47375 ;; Return value:  Size  Location     Type
 47376 ;;                  1    wreg      void 
 47377 ;; Registers used:
 47378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47379 ;; Tracked objects:
 47380 ;;		On entry : 0/0
 47381 ;;		On exit  : 0/0
 47382 ;;		Unchanged: 0/0
 47383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47387 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47388 ;;Total ram usage:        1 bytes
 47389 ;; Hardware stack levels used:    1
 47390 ;; Hardware stack levels required when called:    1
 47391 ;; This function calls:
 47392 ;;		i2_memset
 47393 ;; This function is called by:
 47394 ;;		_USBDeviceTasks
 47395 ;; This function uses a non-reentrant model
 47396 ;;
 47397                           
 47398                           	psect	text195
 47399  00FDD0                     __ptext195:
 47400                           	opt stack 0
 47401  00FDD0                     i2_USBDeviceInit:
 47402                           	opt stack 15
 47403                           
 47404                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 47405                           
 47406                           ;incstack = 0
 47407  00FDD0  98A0               	bcf	4000,4,c	;volatile
 47408                           
 47409                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 47410  00FDD2  0E00               	movlw	0
 47411  00FDD4  6E63               	movwf	3939,c	;volatile
 47412                           
 47413                           ;usb_device.c: 291: {UIR = 0;};
 47414  00FDD6  0E00               	movlw	0
 47415  00FDD8  6E62               	movwf	3938,c	;volatile
 47416                           
 47417                           ;usb_device.c: 294: UEP0 = 0;
 47418  00FDDA  0E00               	movlw	0
 47419  00FDDC  010F               	movlb	15	; () banked
 47420  00FDDE  6F26               	movwf	38,b	;volatile
 47421                           
 47422                           ; BSR set to: 15
 47423                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 47424  00FDE0  0E27               	movlw	39
 47425  00FDE2  6E01               	movwf	i2memset@p1,c
 47426  00FDE4  0E0F               	movlw	15
 47427  00FDE6  6E02               	movwf	i2memset@p1+1,c
 47428  00FDE8  0E00               	movlw	0
 47429  00FDEA  6E04               	movwf	i2memset@c+1,c
 47430  00FDEC  0E00               	movlw	0
 47431  00FDEE  6E03               	movwf	i2memset@c,c
 47432  00FDF0  0E00               	movlw	0
 47433  00FDF2  6E06               	movwf	i2memset@n+1,c
 47434  00FDF4  0E02               	movlw	2
 47435  00FDF6  6E05               	movwf	i2memset@n,c
 47436  00FDF8  EC24  F0A9         	call	i2_memset	;wreg free
 47437                           
 47438                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 47439  00FDFC  0E16               	movlw	22
 47440  00FDFE  010F               	movlb	15	; () banked
 47441  00FE00  6F39               	movwf	57,b	;volatile
 47442                           
 47443                           ; BSR set to: 15
 47444  00FE02  0E9F               	movlw	159
 47445  00FE04  6F37               	movwf	55,b	;volatile
 47446                           
 47447                           ; BSR set to: 15
 47448  00FE06  0E7B               	movlw	123
 47449  00FE08  6F36               	movwf	54,b	;volatile
 47450                           
 47451                           ; BSR set to: 15
 47452                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 47453  00FE0A  0E00               	movlw	0
 47454  00FE0C  6E09               	movwf	i2USBDeviceInit@i,c
 47455  00FE0E                     i2l17118:
 47456                           
 47457                           ; BSR set to: 15
 47458  00FE0E  0E0B               	movlw	11
 47459  00FE10  6409               	cpfsgt	i2USBDeviceInit@i,c
 47460  00FE12  D001               	goto	i2l145
 47461  00FE14  D00E               	goto	i2u1656_40
 47462  00FE16                     i2l145:
 47463                           
 47464                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 47465                           
 47466                           ; BSR set to: 15
 47467  00FE16  5009               	movf	i2USBDeviceInit@i,w,c
 47468  00FE18  0D04               	mullw	4
 47469  00FE1A  0E00               	movlw	0
 47470  00FE1C  24F3               	addwf	prodl,w,c
 47471  00FE1E  6ED9               	movwf	fsr2l,c
 47472  00FE20  0E0D               	movlw	13
 47473  00FE22  20F4               	addwfc	prodh,w,c
 47474  00FE24  6EDA               	movwf	fsr2h,c
 47475  00FE26  6ADE               	clrf	postinc2,c
 47476  00FE28  6ADE               	clrf	postinc2,c
 47477  00FE2A  6ADE               	clrf	postinc2,c
 47478  00FE2C  6ADD               	clrf	postdec2,c
 47479  00FE2E  2A09               	incf	i2USBDeviceInit@i,f,c
 47480  00FE30  D7EE               	goto	i2l17118
 47481  00FE32                     i2u1656_40:
 47482                           
 47483                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 47484  00FE32  8C65               	bsf	3941,6,c	;volatile
 47485                           
 47486                           ;usb_device.c: 316: UADDR = 0x00;
 47487  00FE34  0E00               	movlw	0
 47488  00FE36  010F               	movlb	15	; () banked
 47489  00FE38  6F38               	movwf	56,b	;volatile
 47490                           
 47491                           ; BSR set to: 15
 47492                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 47493  00FE3A  9865               	bcf	3941,4,c	;volatile
 47494                           
 47495                           ; BSR set to: 15
 47496                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 47497  00FE3C  9C65               	bcf	3941,6,c	;volatile
 47498  00FE3E                     
 47499                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 47500                           
 47501                           ; BSR set to: 15
 47502  00FE3E  9662               	bcf	3938,3,c	;volatile
 47503                           
 47504                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 47505  00FE40  0E00               	movlw	0
 47506  00FE42  6E55               	movwf	_inPipes+3,c	;volatile
 47507                           
 47508                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 47509  00FE44  0E00               	movlw	0
 47510  00FE46  0101               	movlb	1	; () banked
 47511  00FE48  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 47512                           
 47513                           ; BSR set to: 1
 47514                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 47515  00FE4A  0E00               	movlw	0
 47516  00FE4C  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 47517  00FE4E  0E00               	movlw	0
 47518  00FE50  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 47519                           
 47520                           ; BSR set to: 1
 47521                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 47522  00FE52  B662               	btfsc	3938,3,c	;volatile
 47523  00FE54  D7F4               	goto	i2l147
 47524                           
 47525                           ; BSR set to: 1
 47526                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 47527                           
 47528                           ; BSR set to: 1
 47529  00FE56  0E01               	movlw	1
 47530  00FE58  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 47531                           
 47532                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 47533  00FE5A  0E01               	movlw	1
 47534  00FE5C  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 47535                           
 47536                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 47537  00FE5E  0E00               	movlw	0
 47538  00FE60  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 47539                           
 47540                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 47541  00FE62  0E00               	movlw	0
 47542  00FE64  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 47543                           
 47544                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 47545  00FE66  0E00               	movlw	0
 47546  00FE68  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 47547                           
 47548                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 47549  00FE6A  0E00               	movlw	0
 47550  00FE6C  6E09               	movwf	i2USBDeviceInit@i,c
 47551  00FE6E                     i2l17146:
 47552                           
 47553                           ; BSR set to: 1
 47554  00FE6E  0E02               	movlw	2
 47555  00FE70  6409               	cpfsgt	i2USBDeviceInit@i,c
 47556  00FE72  D001               	goto	i2l149
 47557  00FE74  D02E               	goto	i2u1659_40
 47558  00FE76                     i2l149:
 47559                           
 47560                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 47561                           
 47562                           ; BSR set to: 1
 47563  00FE76  5009               	movf	i2USBDeviceInit@i,w,c
 47564  00FE78  0D02               	mullw	2
 47565  00FE7A  0E1B               	movlw	low _pBDTEntryIn
 47566  00FE7C  24F3               	addwf	prodl,w,c
 47567  00FE7E  6ED9               	movwf	fsr2l,c
 47568  00FE80  0E01               	movlw	high _pBDTEntryIn
 47569  00FE82  20F4               	addwfc	prodh,w,c
 47570  00FE84  6EDA               	movwf	fsr2h,c
 47571  00FE86  0E00               	movlw	0
 47572  00FE88  6EDE               	movwf	postinc2,c
 47573  00FE8A  0E00               	movlw	0
 47574  00FE8C  6EDD               	movwf	postdec2,c
 47575                           
 47576                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 47577  00FE8E  5009               	movf	i2USBDeviceInit@i,w,c
 47578  00FE90  0D02               	mullw	2
 47579  00FE92  0E21               	movlw	low _pBDTEntryOut
 47580  00FE94  24F3               	addwf	prodl,w,c
 47581  00FE96  6ED9               	movwf	fsr2l,c
 47582  00FE98  0E01               	movlw	high _pBDTEntryOut
 47583  00FE9A  20F4               	addwfc	prodh,w,c
 47584  00FE9C  6EDA               	movwf	fsr2h,c
 47585  00FE9E  0E00               	movlw	0
 47586  00FEA0  6EDE               	movwf	postinc2,c
 47587  00FEA2  0E00               	movlw	0
 47588  00FEA4  6EDD               	movwf	postdec2,c
 47589                           
 47590                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 47591  00FEA6  5009               	movf	i2USBDeviceInit@i,w,c
 47592  00FEA8  0D01               	mullw	1
 47593  00FEAA  0E3C               	movlw	low _ep_data_in
 47594  00FEAC  24F3               	addwf	prodl,w,c
 47595  00FEAE  6ED9               	movwf	fsr2l,c
 47596  00FEB0  0E01               	movlw	high _ep_data_in
 47597  00FEB2  20F4               	addwfc	prodh,w,c
 47598  00FEB4  6EDA               	movwf	fsr2h,c
 47599  00FEB6  0E00               	movlw	0
 47600  00FEB8  6EDF               	movwf	indf2,c
 47601                           
 47602                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 47603  00FEBA  5009               	movf	i2USBDeviceInit@i,w,c
 47604  00FEBC  0D01               	mullw	1
 47605  00FEBE  0E39               	movlw	low _ep_data_out
 47606  00FEC0  24F3               	addwf	prodl,w,c
 47607  00FEC2  6ED9               	movwf	fsr2l,c
 47608  00FEC4  0E01               	movlw	high _ep_data_out
 47609  00FEC6  20F4               	addwfc	prodh,w,c
 47610  00FEC8  6EDA               	movwf	fsr2h,c
 47611  00FECA  0E00               	movlw	0
 47612  00FECC  6EDF               	movwf	indf2,c
 47613  00FECE  2A09               	incf	i2USBDeviceInit@i,f,c
 47614  00FED0  D7CE               	goto	i2l17146
 47615  00FED2                     i2u1659_40:
 47616                           
 47617                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 47618  00FED2  0E08               	movlw	8
 47619  00FED4  0101               	movlb	1	; () banked
 47620  00FED6  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 47621  00FED8  0E0D               	movlw	13
 47622  00FEDA  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 47623                           
 47624                           ; BSR set to: 1
 47625                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 47626  00FEDC  0E16               	movlw	22
 47627  00FEDE  010F               	movlb	15	; () banked
 47628  00FEE0  6F26               	movwf	38,b	;volatile
 47629                           
 47630                           ; BSR set to: 15
 47631                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 47632  00FEE2  0E0D               	movlw	13
 47633  00FEE4  010D               	movlb	13	; () banked
 47634  00FEE6  6F03               	movwf	3,b	;volatile
 47635  00FEE8  0E30               	movlw	48
 47636  00FEEA  6F02               	movwf	2,b	;volatile
 47637                           
 47638                           ; BSR set to: 13
 47639                           ;usb_device.c: 359: BDT[0].CNT = 8;
 47640  00FEEC  0E08               	movlw	8
 47641  00FEEE  6F01               	movwf	1,b	;volatile
 47642                           
 47643                           ; BSR set to: 13
 47644                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 47645  00FEF0  0E04               	movlw	4
 47646  00FEF2  6F00               	movwf	0,b	;volatile
 47647                           
 47648                           ; BSR set to: 13
 47649                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 47650  00FEF4  8F00               	bsf	0,7,b	;volatile
 47651                           
 47652                           ; BSR set to: 13
 47653                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 47654  00FEF6  0E00               	movlw	0
 47655  00FEF8  0101               	movlb	1	; () banked
 47656  00FEFA  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 47657                           
 47658                           ; BSR set to: 1
 47659                           ;usb_device.c: 366: USB1msTickCount = 0;
 47660  00FEFC  0E00               	movlw	0
 47661  00FEFE  6F2F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 47662  00FF00  0E00               	movlw	0
 47663  00FF02  6F30               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 47664  00FF04  0E00               	movlw	0
 47665  00FF06  6F31               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 47666  00FF08  0E00               	movlw	0
 47667  00FF0A  6F32               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 47668                           
 47669                           ; BSR set to: 1
 47670                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 47671  00FF0C  0E00               	movlw	0
 47672  00FF0E  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 47673                           
 47674                           ; BSR set to: 1
 47675                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 47676  00FF10  0E00               	movlw	0
 47677  00FF12  6E5E               	movwf	_USBDeviceState,c	;volatile
 47678                           
 47679                           ; BSR set to: 1
 47680  00FF14  0012               	return		;funcret
 47681  00FF16                     __end_ofi2_USBDeviceInit:
 47682                           	opt stack 0
 47683                           tosu	equ	0xFFF
 47684                           tosh	equ	0xFFE
 47685                           tosl	equ	0xFFD
 47686                           pclatu	equ	0xFFB
 47687                           pclath	equ	0xFFA
 47688                           tblptru	equ	0xFF8
 47689                           tblptrh	equ	0xFF7
 47690                           tblptrl	equ	0xFF6
 47691                           tablat	equ	0xFF5
 47692                           prodh	equ	0xFF4
 47693                           prodl	equ	0xFF3
 47694                           intcon	equ	0xFF2
 47695                           indf0	equ	0xFEF
 47696                           postinc0	equ	0xFEE
 47697                           fsr0h	equ	0xFEA
 47698                           fsr0l	equ	0xFE9
 47699                           wreg	equ	0xFE8
 47700                           indf1	equ	0xFE7
 47701                           postinc1	equ	0xFE6
 47702                           postdec1	equ	0xFE5
 47703                           plusw1	equ	0xFE3
 47704                           fsr1h	equ	0xFE2
 47705                           fsr1l	equ	0xFE1
 47706                           indf2	equ	0xFDF
 47707                           postinc2	equ	0xFDE
 47708                           postdec2	equ	0xFDD
 47709                           plusw2	equ	0xFDB
 47710                           fsr2h	equ	0xFDA
 47711                           fsr2l	equ	0xFD9
 47712                           status	equ	0xFD8
 47713                           
 47714 ;; *************** function _USBWakeFromSuspend *****************
 47715 ;; Defined at:
 47716 ;;		line 2305 in file "usb_device.c"
 47717 ;; Parameters:    Size  Location     Type
 47718 ;;		None
 47719 ;; Auto vars:     Size  Location     Type
 47720 ;;		None
 47721 ;; Return value:  Size  Location     Type
 47722 ;;                  1    wreg      void 
 47723 ;; Registers used:
 47724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 47725 ;; Tracked objects:
 47726 ;;		On entry : 0/0
 47727 ;;		On exit  : 0/0
 47728 ;;		Unchanged: 0/0
 47729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47734 ;;Total ram usage:        0 bytes
 47735 ;; Hardware stack levels used:    1
 47736 ;; Hardware stack levels required when called:    4
 47737 ;; This function calls:
 47738 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47739 ;; This function is called by:
 47740 ;;		_USBDeviceTasks
 47741 ;; This function uses a non-reentrant model
 47742 ;;
 47743                           
 47744                           	psect	text196
 47745  014F64                     __ptext196:
 47746                           	opt stack 0
 47747  014F64                     _USBWakeFromSuspend:
 47748                           	opt stack 12
 47749                           
 47750                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 47751                           
 47752                           ; BSR set to: 1
 47753                           ;incstack = 0
 47754  014F64  0E00               	movlw	0
 47755  014F66  0101               	movlb	1	; () banked
 47756  014F68  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 47757                           
 47758                           ; BSR set to: 1
 47759                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 47760  014F6A  0E00               	movlw	0
 47761  014F6C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47762  014F6E  0E74               	movlw	116
 47763  014F70  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47764  014F72  0E00               	movlw	0
 47765  014F74  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47766  014F76  0E00               	movlw	0
 47767  014F78  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47768  014F7A  0E00               	movlw	0
 47769  014F7C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47770  014F7E  0E00               	movlw	0
 47771  014F80  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47772  014F82  EC79  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47773                           
 47774                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 47775  014F86  9265               	bcf	3941,1,c	;volatile
 47776                           
 47777                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 47778  014F88  010F               	movlb	15	; () banked
 47779  014F8A  9536               	bcf	54,2,b	;volatile
 47780                           
 47781                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 47782  014F8C  D001               	goto	i2l315
 47783  014F8E                     
 47784                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 47785                           
 47786                           ; BSR set to: 15
 47787  014F8E  9462               	bcf	3938,2,c	;volatile
 47788  014F90                     i2l315:
 47789  014F90  B462               	btfsc	3938,2,c	;volatile
 47790  014F92  D7FD               	goto	i2l316
 47791                           
 47792                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 47793  014F94  0E00               	movlw	0
 47794  014F96  0101               	movlb	1	; () banked
 47795  014F98  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 47796                           
 47797                           ; BSR set to: 1
 47798  014F9A  0012               	return		;funcret
 47799  014F9C                     __end_of_USBWakeFromSuspend:
 47800                           	opt stack 0
 47801                           tosu	equ	0xFFF
 47802                           tosh	equ	0xFFE
 47803                           tosl	equ	0xFFD
 47804                           pclatu	equ	0xFFB
 47805                           pclath	equ	0xFFA
 47806                           tblptru	equ	0xFF8
 47807                           tblptrh	equ	0xFF7
 47808                           tblptrl	equ	0xFF6
 47809                           tablat	equ	0xFF5
 47810                           prodh	equ	0xFF4
 47811                           prodl	equ	0xFF3
 47812                           intcon	equ	0xFF2
 47813                           indf0	equ	0xFEF
 47814                           postinc0	equ	0xFEE
 47815                           fsr0h	equ	0xFEA
 47816                           fsr0l	equ	0xFE9
 47817                           wreg	equ	0xFE8
 47818                           indf1	equ	0xFE7
 47819                           postinc1	equ	0xFE6
 47820                           postdec1	equ	0xFE5
 47821                           plusw1	equ	0xFE3
 47822                           fsr1h	equ	0xFE2
 47823                           fsr1l	equ	0xFE1
 47824                           indf2	equ	0xFDF
 47825                           postinc2	equ	0xFDE
 47826                           postdec2	equ	0xFDD
 47827                           plusw2	equ	0xFDB
 47828                           fsr2h	equ	0xFDA
 47829                           fsr2l	equ	0xFD9
 47830                           status	equ	0xFD8
 47831                           
 47832 ;; *************** function _USBSuspend *****************
 47833 ;; Defined at:
 47834 ;;		line 2247 in file "usb_device.c"
 47835 ;; Parameters:    Size  Location     Type
 47836 ;;		None
 47837 ;; Auto vars:     Size  Location     Type
 47838 ;;		None
 47839 ;; Return value:  Size  Location     Type
 47840 ;;                  1    wreg      void 
 47841 ;; Registers used:
 47842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 47843 ;; Tracked objects:
 47844 ;;		On entry : 0/0
 47845 ;;		On exit  : 0/0
 47846 ;;		Unchanged: 0/0
 47847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47852 ;;Total ram usage:        0 bytes
 47853 ;; Hardware stack levels used:    1
 47854 ;; Hardware stack levels required when called:    4
 47855 ;; This function calls:
 47856 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47857 ;; This function is called by:
 47858 ;;		_USBDeviceTasks
 47859 ;; This function uses a non-reentrant model
 47860 ;;
 47861                           
 47862                           	psect	text197
 47863  015164                     __ptext197:
 47864                           	opt stack 0
 47865  015164                     _USBSuspend:
 47866                           	opt stack 12
 47867                           
 47868                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 47869                           
 47870                           ; BSR set to: 1
 47871                           ;incstack = 0
 47872  015164  010F               	movlb	15	; () banked
 47873  015166  8536               	bsf	54,2,b	;volatile
 47874                           
 47875                           ; BSR set to: 15
 47876                           ;usb_device.c: 2273: (UIR &= 0xEF);
 47877  015168  9862               	bcf	3938,4,c	;volatile
 47878                           
 47879                           ; BSR set to: 15
 47880                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 47881  01516A  8265               	bsf	3941,1,c	;volatile
 47882                           
 47883                           ; BSR set to: 15
 47884                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 47885  01516C  0E01               	movlw	1
 47886  01516E  0101               	movlb	1	; () banked
 47887  015170  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 47888                           
 47889                           ; BSR set to: 1
 47890                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 47891  015172  0E00               	movlw	0
 47892  015174  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 47893                           
 47894                           ; BSR set to: 1
 47895                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 47896  015176  0E00               	movlw	0
 47897  015178  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47898  01517A  0E75               	movlw	117
 47899  01517C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47900  01517E  0E00               	movlw	0
 47901  015180  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47902  015182  0E00               	movlw	0
 47903  015184  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47904  015186  0E00               	movlw	0
 47905  015188  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47906  01518A  0E00               	movlw	0
 47907  01518C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47908  01518E  EC79  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47909  015192  0012               	return		;funcret
 47910  015194                     __end_of_USBSuspend:
 47911                           	opt stack 0
 47912                           tosu	equ	0xFFF
 47913                           tosh	equ	0xFFE
 47914                           tosl	equ	0xFFD
 47915                           pclatu	equ	0xFFB
 47916                           pclath	equ	0xFFA
 47917                           tblptru	equ	0xFF8
 47918                           tblptrh	equ	0xFF7
 47919                           tblptrl	equ	0xFF6
 47920                           tablat	equ	0xFF5
 47921                           prodh	equ	0xFF4
 47922                           prodl	equ	0xFF3
 47923                           intcon	equ	0xFF2
 47924                           indf0	equ	0xFEF
 47925                           postinc0	equ	0xFEE
 47926                           fsr0h	equ	0xFEA
 47927                           fsr0l	equ	0xFE9
 47928                           wreg	equ	0xFE8
 47929                           indf1	equ	0xFE7
 47930                           postinc1	equ	0xFE6
 47931                           postdec1	equ	0xFE5
 47932                           plusw1	equ	0xFE3
 47933                           fsr1h	equ	0xFE2
 47934                           fsr1l	equ	0xFE1
 47935                           indf2	equ	0xFDF
 47936                           postinc2	equ	0xFDE
 47937                           postdec2	equ	0xFDD
 47938                           plusw2	equ	0xFDB
 47939                           fsr2h	equ	0xFDA
 47940                           fsr2l	equ	0xFD9
 47941                           status	equ	0xFD8
 47942                           
 47943 ;; *************** function _USBStallHandler *****************
 47944 ;; Defined at:
 47945 ;;		line 2204 in file "usb_device.c"
 47946 ;; Parameters:    Size  Location     Type
 47947 ;;		None
 47948 ;; Auto vars:     Size  Location     Type
 47949 ;;		None
 47950 ;; Return value:  Size  Location     Type
 47951 ;;                  1    wreg      void 
 47952 ;; Registers used:
 47953 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 47954 ;; Tracked objects:
 47955 ;;		On entry : 0/0
 47956 ;;		On exit  : 0/0
 47957 ;;		Unchanged: 0/0
 47958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47963 ;;Total ram usage:        1 bytes
 47964 ;; Hardware stack levels used:    1
 47965 ;; This function calls:
 47966 ;;		Nothing
 47967 ;; This function is called by:
 47968 ;;		_USBDeviceTasks
 47969 ;; This function uses a non-reentrant model
 47970 ;;
 47971                           
 47972                           	psect	text198
 47973  014D42                     __ptext198:
 47974                           	opt stack 0
 47975  014D42                     _USBStallHandler:
 47976                           	opt stack 16
 47977                           
 47978                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 47979                           
 47980                           ;incstack = 0
 47981  014D42  010F               	movlb	15	; () banked
 47982  014D44  A126               	btfss	38,0,b	;volatile
 47983  014D46  D01D               	goto	i2l307
 47984                           
 47985                           ; BSR set to: 15
 47986                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 47987  014D48  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 47988  014D4C  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 47989  014D50  0E80               	movlw	128
 47990  014D52  18DE               	xorwf	postinc2,w,c
 47991  014D54  A4D8               	btfss	status,2,c
 47992  014D56  D014               	goto	i2l308
 47993                           
 47994                           ; BSR set to: 15
 47995  014D58  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 47996  014D5C  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47997  014D60  0E84               	movlw	132
 47998  014D62  18DE               	xorwf	postinc2,w,c
 47999  014D64  A4D8               	btfss	status,2,c
 48000  014D66  D00C               	goto	i2l308
 48001                           
 48002                           ; BSR set to: 15
 48003                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 48004  014D68  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48005  014D6C  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48006  014D70  0E0C               	movlw	12
 48007  014D72  6EDF               	movwf	indf2,c
 48008                           
 48009                           ; BSR set to: 15
 48010                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 48011  014D74  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48012  014D78  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48013  014D7C  0E00               	movlw	0
 48014  014D7E  8EDB               	bsf	plusw2,7,c
 48015  014D80                     i2l308:
 48016                           
 48017                           ; BSR set to: 15
 48018                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 48019                           
 48020                           ; BSR set to: 15
 48021  014D80  9126               	bcf	38,0,b	;volatile
 48022  014D82                     i2l307:
 48023                           
 48024                           ; BSR set to: 15
 48025                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 48026  014D82  9A62               	bcf	3938,5,c	;volatile
 48027                           
 48028                           ; BSR set to: 15
 48029  014D84  0012               	return		;funcret
 48030  014D86                     __end_of_USBStallHandler:
 48031                           	opt stack 0
 48032                           tosu	equ	0xFFF
 48033                           tosh	equ	0xFFE
 48034                           tosl	equ	0xFFD
 48035                           pclatu	equ	0xFFB
 48036                           pclath	equ	0xFFA
 48037                           tblptru	equ	0xFF8
 48038                           tblptrh	equ	0xFF7
 48039                           tblptrl	equ	0xFF6
 48040                           tablat	equ	0xFF5
 48041                           prodh	equ	0xFF4
 48042                           prodl	equ	0xFF3
 48043                           intcon	equ	0xFF2
 48044                           indf0	equ	0xFEF
 48045                           postinc0	equ	0xFEE
 48046                           fsr0h	equ	0xFEA
 48047                           fsr0l	equ	0xFE9
 48048                           wreg	equ	0xFE8
 48049                           indf1	equ	0xFE7
 48050                           postinc1	equ	0xFE6
 48051                           postdec1	equ	0xFE5
 48052                           plusw1	equ	0xFE3
 48053                           fsr1h	equ	0xFE2
 48054                           fsr1l	equ	0xFE1
 48055                           indf2	equ	0xFDF
 48056                           postinc2	equ	0xFDE
 48057                           postdec2	equ	0xFDD
 48058                           plusw2	equ	0xFDB
 48059                           fsr2h	equ	0xFDA
 48060                           fsr2l	equ	0xFD9
 48061                           status	equ	0xFD8
 48062                           
 48063 ;; *************** function _USBIncrement1msInternalTimers *****************
 48064 ;; Defined at:
 48065 ;;		line 3027 in file "usb_device.c"
 48066 ;; Parameters:    Size  Location     Type
 48067 ;;		None
 48068 ;; Auto vars:     Size  Location     Type
 48069 ;;		None
 48070 ;; Return value:  Size  Location     Type
 48071 ;;                  1    wreg      void 
 48072 ;; Registers used:
 48073 ;;		wreg, status,2, status,0
 48074 ;; Tracked objects:
 48075 ;;		On entry : 0/0
 48076 ;;		On exit  : 0/0
 48077 ;;		Unchanged: 0/0
 48078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48083 ;;Total ram usage:        0 bytes
 48084 ;; Hardware stack levels used:    1
 48085 ;; This function calls:
 48086 ;;		Nothing
 48087 ;; This function is called by:
 48088 ;;		_USBDeviceTasks
 48089 ;; This function uses a non-reentrant model
 48090 ;;
 48091                           
 48092                           	psect	text199
 48093  0154D2                     __ptext199:
 48094                           	opt stack 0
 48095  0154D2                     _USBIncrement1msInternalTimers:
 48096                           	opt stack 16
 48097                           
 48098                           ;usb_device.c: 3035: USB1msTickCount++;
 48099                           
 48100                           ; BSR set to: 15
 48101                           ;incstack = 0
 48102  0154D2  0E01               	movlw	1
 48103  0154D4  0101               	movlb	1	; () banked
 48104  0154D6  272F               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 48105  0154D8  0E00               	movlw	0
 48106  0154DA  2330               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 48107  0154DC  2331               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 48108  0154DE  2332               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 48109                           
 48110                           ; BSR set to: 1
 48111                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 48112  0154E0  516D               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 48113  0154E2  A4D8               	btfss	status,2,c
 48114  0154E4  0012               	return	
 48115                           
 48116                           ; BSR set to: 1
 48117                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 48118  0154E6  2B64               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 48119                           
 48120                           ; BSR set to: 1
 48121                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 48122  0154E8  5164               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 48123  0154EA  A4D8               	btfss	status,2,c
 48124  0154EC  0012               	return	
 48125                           
 48126                           ; BSR set to: 1
 48127                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 48128  0154EE  6964               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48129                           
 48130                           ; BSR set to: 1
 48131  0154F0  0012               	return	
 48132  0154F2                     __end_of_USBIncrement1msInternalTimers:
 48133                           	opt stack 0
 48134                           tosu	equ	0xFFF
 48135                           tosh	equ	0xFFE
 48136                           tosl	equ	0xFFD
 48137                           pclatu	equ	0xFFB
 48138                           pclath	equ	0xFFA
 48139                           tblptru	equ	0xFF8
 48140                           tblptrh	equ	0xFF7
 48141                           tblptrl	equ	0xFF6
 48142                           tablat	equ	0xFF5
 48143                           prodh	equ	0xFF4
 48144                           prodl	equ	0xFF3
 48145                           intcon	equ	0xFF2
 48146                           indf0	equ	0xFEF
 48147                           postinc0	equ	0xFEE
 48148                           fsr0h	equ	0xFEA
 48149                           fsr0l	equ	0xFE9
 48150                           wreg	equ	0xFE8
 48151                           indf1	equ	0xFE7
 48152                           postinc1	equ	0xFE6
 48153                           postdec1	equ	0xFE5
 48154                           plusw1	equ	0xFE3
 48155                           fsr1h	equ	0xFE2
 48156                           fsr1l	equ	0xFE1
 48157                           indf2	equ	0xFDF
 48158                           postinc2	equ	0xFDE
 48159                           postdec2	equ	0xFDD
 48160                           plusw2	equ	0xFDB
 48161                           fsr2h	equ	0xFDA
 48162                           fsr2l	equ	0xFD9
 48163                           status	equ	0xFD8
 48164                           
 48165 ;; *************** function _USBCtrlEPService *****************
 48166 ;; Defined at:
 48167 ;;		line 2374 in file "usb_device.c"
 48168 ;; Parameters:    Size  Location     Type
 48169 ;;		None
 48170 ;; Auto vars:     Size  Location     Type
 48171 ;;		None
 48172 ;; Return value:  Size  Location     Type
 48173 ;;                  1    wreg      void 
 48174 ;; Registers used:
 48175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 48176 ;; Tracked objects:
 48177 ;;		On entry : 0/0
 48178 ;;		On exit  : 0/0
 48179 ;;		Unchanged: 0/0
 48180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48183 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48184 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48185 ;;Total ram usage:        1 bytes
 48186 ;; Hardware stack levels used:    1
 48187 ;; Hardware stack levels required when called:    7
 48188 ;; This function calls:
 48189 ;;		_USBCtrlTrfInHandler
 48190 ;;		_USBCtrlTrfOutHandler
 48191 ;;		_USBCtrlTrfSetupHandler
 48192 ;;		i2_memcpy
 48193 ;; This function is called by:
 48194 ;;		_USBDeviceTasks
 48195 ;; This function uses a non-reentrant model
 48196 ;;
 48197                           
 48198                           	psect	text200
 48199  01308C                     __ptext200:
 48200                           	opt stack 0
 48201  01308C                     _USBCtrlEPService:
 48202                           	opt stack 9
 48203                           
 48204                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 48205                           
 48206                           ; BSR set to: 1
 48207                           ;incstack = 0
 48208  01308C  0E2D               	movlw	45
 48209  01308E  0101               	movlb	1	; () banked
 48210  013090  6F6A               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 48211                           
 48212                           ; BSR set to: 1
 48213                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 48214  013092  C1C1  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 48215  013096  0EFD               	movlw	253
 48216  013098  161E               	andwf	??_USBCtrlEPService,f,c
 48217  01309A  A4D8               	btfss	status,2,c
 48218  01309C  D03B               	goto	i2l321
 48219                           
 48220                           ; BSR set to: 1
 48221                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 48222  01309E  C1C1  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 48223  0130A2  90D8               	bcf	status,0,c
 48224  0130A4  321E               	rrcf	??_USBCtrlEPService,f,c
 48225  0130A6  0E3F               	movlw	63
 48226  0130A8  161E               	andwf	??_USBCtrlEPService,f,c
 48227  0130AA  501E               	movf	??_USBCtrlEPService,w,c
 48228  0130AC  0D04               	mullw	4
 48229  0130AE  0E00               	movlw	0
 48230  0130B0  24F3               	addwf	prodl,w,c
 48231  0130B2  6F51               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 48232  0130B4  0E0D               	movlw	13
 48233  0130B6  20F4               	addwfc	prodh,w,c
 48234  0130B8  6F52               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 48235                           
 48236                           ; BSR set to: 1
 48237                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 48238  0130BA  C151  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 48239  0130BE  C152  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 48240                           
 48241                           ; BSR set to: 1
 48242                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 48243  0130C2  0E04               	movlw	4
 48244  0130C4  185C               	xorwf	_pBDTEntryEP0OutNext,w,c
 48245  0130C6  6E5C               	movwf	_pBDTEntryEP0OutNext,c
 48246  0130C8  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 48247  0130CA  6E5D               	movwf	_pBDTEntryEP0OutNext+1,c
 48248                           
 48249                           ; BSR set to: 1
 48250                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 48251  0130CC  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48252  0130D0  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48253  0130D4  30DF               	rrcf	223,w,c
 48254  0130D6  32E8               	rrcf	wreg,f,c
 48255  0130D8  0B0F               	andlw	15
 48256  0130DA  0A0D               	xorlw	13
 48257  0130DC  A4D8               	btfss	status,2,c
 48258  0130DE  D017               	goto	i2l322
 48259                           
 48260                           ; BSR set to: 1
 48261                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 48262  0130E0  0E30               	movlw	48
 48263  0130E2  6E01               	movwf	i2memcpy@d1,c
 48264  0130E4  0E0D               	movlw	13
 48265  0130E6  6E02               	movwf	i2memcpy@d1+1,c
 48266  0130E8  EE20 F002          	lfsr	2,2
 48267  0130EC  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 48268  0130EE  26D9               	addwf	fsr2l,f,c
 48269  0130F0  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 48270  0130F2  22DA               	addwfc	fsr2h,f,c
 48271  0130F4  CFDE F003          	movff	postinc2,i2memcpy@s1
 48272  0130F8  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 48273  0130FC  0E00               	movlw	0
 48274  0130FE  6E06               	movwf	i2memcpy@n+1,c
 48275  013100  0E08               	movlw	8
 48276  013102  6E05               	movwf	i2memcpy@n,c
 48277  013104  EC5E  F0A1         	call	i2_memcpy	;wreg free
 48278                           
 48279                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 48280  013108  EC31  F09B         	call	_USBCtrlTrfSetupHandler	;wreg free
 48281                           
 48282                           ;usb_device.c: 2411: }
 48283  01310C  0012               	return	
 48284  01310E                     i2l322:
 48285                           
 48286                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 48287  01310E  ECFF  F0A0         	call	_USBCtrlTrfOutHandler	;wreg free
 48288                           
 48289                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 48290  013112  0012               	return	
 48291  013114                     i2l321:
 48292                           
 48293                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 48294  013114  0101               	movlb	1	; () banked
 48295  013116  51C1               	movf	_USTATcopy& (0+255),w,b	;volatile
 48296  013118  0BFD               	andlw	253
 48297  01311A  0A04               	xorlw	4
 48298  01311C  A4D8               	btfss	status,2,c
 48299  01311E  0012               	return	
 48300                           
 48301                           ; BSR set to: 1
 48302                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 48303  013120  EC6B  F093         	call	_USBCtrlTrfInHandler	;wreg free
 48304  013124  0012               	return	
 48305  013126                     __end_of_USBCtrlEPService:
 48306                           	opt stack 0
 48307                           tosu	equ	0xFFF
 48308                           tosh	equ	0xFFE
 48309                           tosl	equ	0xFFD
 48310                           pclatu	equ	0xFFB
 48311                           pclath	equ	0xFFA
 48312                           tblptru	equ	0xFF8
 48313                           tblptrh	equ	0xFF7
 48314                           tblptrl	equ	0xFF6
 48315                           tablat	equ	0xFF5
 48316                           prodh	equ	0xFF4
 48317                           prodl	equ	0xFF3
 48318                           intcon	equ	0xFF2
 48319                           indf0	equ	0xFEF
 48320                           postinc0	equ	0xFEE
 48321                           fsr0h	equ	0xFEA
 48322                           fsr0l	equ	0xFE9
 48323                           wreg	equ	0xFE8
 48324                           indf1	equ	0xFE7
 48325                           postinc1	equ	0xFE6
 48326                           postdec1	equ	0xFE5
 48327                           plusw1	equ	0xFE3
 48328                           fsr1h	equ	0xFE2
 48329                           fsr1l	equ	0xFE1
 48330                           indf2	equ	0xFDF
 48331                           postinc2	equ	0xFDE
 48332                           postdec2	equ	0xFDD
 48333                           plusw2	equ	0xFDB
 48334                           fsr2h	equ	0xFDA
 48335                           fsr2l	equ	0xFD9
 48336                           status	equ	0xFD8
 48337                           
 48338 ;; *************** function i2_memcpy *****************
 48339 ;; Defined at:
 48340 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 48341 ;; Parameters:    Size  Location     Type
 48342 ;;  d1              2    0[COMRAM] PTR void 
 48343 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 48344 ;;		 -> msd_buffer(512), SetupPkt(8), 
 48345 ;;  s1              2    2[COMRAM] PTR const void 
 48346 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 48347 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 48348 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 48349 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 48350 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 48351 ;;		 -> config(28), ReceivedDataBuffer(64), os(48), inq_resp(36), 
 48352 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 48353 ;;  n               2    4[COMRAM] unsigned int 
 48354 ;; Auto vars:     Size  Location     Type
 48355 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 48356 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 48357 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 48358 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 48359 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 48360 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 48361 ;;		 -> config(28), ReceivedDataBuffer(64), os(48), inq_resp(36), 
 48362 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 48363 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 48364 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 48365 ;;		 -> msd_buffer(512), SetupPkt(8), 
 48366 ;;  memcpy          1   10[COMRAM] unsigned char 
 48367 ;; Return value:  Size  Location     Type
 48368 ;;                  2    0[COMRAM] PTR void 
 48369 ;; Registers used:
 48370 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 48371 ;; Tracked objects:
 48372 ;;		On entry : 0/0
 48373 ;;		On exit  : 0/0
 48374 ;;		Unchanged: 0/0
 48375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48376 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48377 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48379 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48380 ;;Total ram usage:       11 bytes
 48381 ;; Hardware stack levels used:    1
 48382 ;; This function calls:
 48383 ;;		Nothing
 48384 ;; This function is called by:
 48385 ;;		_USBCtrlEPService
 48386 ;; This function uses a non-reentrant model
 48387 ;;
 48388                           
 48389                           	psect	text201
 48390  0142BC                     __ptext201:
 48391                           	opt stack 0
 48392  0142BC                     i2_memcpy:
 48393                           	opt stack 15
 48394                           
 48395                           ;incstack = 0
 48396  0142BC  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 48397  0142C0  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 48398  0142C4  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 48399  0142C8  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 48400  0142CC  D01C               	goto	i2l3714
 48401  0142CE                     i2l16310:
 48402  0142CE  C009  FFF6         	movff	i2memcpy@s,tblptrl
 48403  0142D2  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 48404  0142D6  0E00               	movlw	low (__mediumconst shr (0+16))
 48405  0142D8  6EF8               	movwf	tblptru,c
 48406  0142DA  0E0E               	movlw	(high __ramtop+-1)
 48407  0142DC  64F7               	cpfsgt	tblptrh,c
 48408  0142DE  D003               	bra	i2u1554_47
 48409  0142E0  0008               	tblrd		*
 48410  0142E2  50F5               	movf	tablat,w,c
 48411  0142E4  D005               	bra	i2u1554_40
 48412  0142E6                     i2u1554_47:
 48413  0142E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 48414  0142EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 48415  0142EE  50EF               	movf	indf0,w,c
 48416  0142F0                     i2u1554_40:
 48417  0142F0  6E0B               	movwf	i2memcpy@tmp,c
 48418  0142F2  4A09               	infsnz	i2memcpy@s,f,c
 48419  0142F4  2A0A               	incf	i2memcpy@s+1,f,c
 48420  0142F6  C007  FFD9         	movff	i2memcpy@d,fsr2l
 48421  0142FA  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 48422  0142FE  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 48423  014302  4A07               	infsnz	i2memcpy@d,f,c
 48424  014304  2A08               	incf	i2memcpy@d+1,f,c
 48425  014306                     i2l3714:
 48426  014306  0605               	decf	i2memcpy@n,f,c
 48427  014308  A0D8               	btfss	status,0,c
 48428  01430A  0606               	decf	i2memcpy@n+1,f,c
 48429  01430C  2805               	incf	i2memcpy@n,w,c
 48430  01430E  E1DF               	bnz	i2l16310
 48431  014310  2806               	incf	i2memcpy@n+1,w,c
 48432  014312  B4D8               	btfsc	status,2,c
 48433  014314  0012               	return	
 48434  014316  D7DB               	goto	i2l3715
 48435  014318                     __end_ofi2_memcpy:
 48436                           	opt stack 0
 48437                           tosu	equ	0xFFF
 48438                           tosh	equ	0xFFE
 48439                           tosl	equ	0xFFD
 48440                           pclatu	equ	0xFFB
 48441                           pclath	equ	0xFFA
 48442                           tblptru	equ	0xFF8
 48443                           tblptrh	equ	0xFF7
 48444                           tblptrl	equ	0xFF6
 48445                           tablat	equ	0xFF5
 48446                           prodh	equ	0xFF4
 48447                           prodl	equ	0xFF3
 48448                           intcon	equ	0xFF2
 48449                           indf0	equ	0xFEF
 48450                           postinc0	equ	0xFEE
 48451                           fsr0h	equ	0xFEA
 48452                           fsr0l	equ	0xFE9
 48453                           wreg	equ	0xFE8
 48454                           indf1	equ	0xFE7
 48455                           postinc1	equ	0xFE6
 48456                           postdec1	equ	0xFE5
 48457                           plusw1	equ	0xFE3
 48458                           fsr1h	equ	0xFE2
 48459                           fsr1l	equ	0xFE1
 48460                           indf2	equ	0xFDF
 48461                           postinc2	equ	0xFDE
 48462                           postdec2	equ	0xFDD
 48463                           plusw2	equ	0xFDB
 48464                           fsr2h	equ	0xFDA
 48465                           fsr2l	equ	0xFD9
 48466                           status	equ	0xFD8
 48467                           
 48468 ;; *************** function _USBCtrlTrfSetupHandler *****************
 48469 ;; Defined at:
 48470 ;;		line 2467 in file "usb_device.c"
 48471 ;; Parameters:    Size  Location     Type
 48472 ;;		None
 48473 ;; Auto vars:     Size  Location     Type
 48474 ;;		None
 48475 ;; Return value:  Size  Location     Type
 48476 ;;                  1    wreg      void 
 48477 ;; Registers used:
 48478 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48479 ;; Tracked objects:
 48480 ;;		On entry : 0/0
 48481 ;;		On exit  : 0/0
 48482 ;;		Unchanged: 0/0
 48483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48488 ;;Total ram usage:        0 bytes
 48489 ;; Hardware stack levels used:    1
 48490 ;; Hardware stack levels required when called:    6
 48491 ;; This function calls:
 48492 ;;		_USBCheckStdRequest
 48493 ;;		_USBCtrlEPServiceComplete
 48494 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48495 ;; This function is called by:
 48496 ;;		_USBCtrlEPService
 48497 ;; This function uses a non-reentrant model
 48498 ;;
 48499                           
 48500                           	psect	text202
 48501  013662                     __ptext202:
 48502                           	opt stack 0
 48503  013662                     _USBCtrlTrfSetupHandler:
 48504                           	opt stack 9
 48505                           
 48506                           ;usb_device.c: 2472: shortPacketStatus = 0;
 48507                           
 48508                           ;incstack = 0
 48509  013662  0E00               	movlw	0
 48510  013664  0101               	movlb	1	; () banked
 48511  013666  6F70               	movwf	_shortPacketStatus& (0+255),b	;volatile
 48512                           
 48513                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 48514  013668  0E00               	movlw	0
 48515  01366A  6F69               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 48516                           
 48517                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 48518  01366C  0E00               	movlw	0
 48519  01366E  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 48520                           
 48521                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 48522  013670  0E00               	movlw	0
 48523  013672  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 48524                           
 48525                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 48526  013674  0E00               	movlw	0
 48527  013676  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 48528                           
 48529                           ;usb_device.c: 2477: controlTransferState = 0;
 48530  013678  0E00               	movlw	0
 48531  01367A  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 48532                           
 48533                           ; BSR set to: 1
 48534                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 48535  01367C  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48536  013680  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48537  013684  0E7F               	movlw	127
 48538  013686  16DF               	andwf	indf2,f,c
 48539                           
 48540                           ; BSR set to: 1
 48541                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 48542  013688  0E04               	movlw	4
 48543  01368A  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 48544  01368C  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 48545  01368E  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 48546  013690  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 48547                           
 48548                           ; BSR set to: 1
 48549                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 48550  013692  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48551  013696  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48552  01369A  0E7F               	movlw	127
 48553  01369C  16DF               	andwf	indf2,f,c
 48554                           
 48555                           ; BSR set to: 1
 48556                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 48557  01369E  0E04               	movlw	4
 48558  0136A0  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 48559  0136A2  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 48560  0136A4  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 48561  0136A6  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 48562                           
 48563                           ; BSR set to: 1
 48564                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 48565  0136A8  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 48566  0136AC  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 48567  0136B0  0E7F               	movlw	127
 48568  0136B2  16DF               	andwf	indf2,f,c
 48569                           
 48570                           ; BSR set to: 1
 48571                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 48572  0136B4  0E00               	movlw	0
 48573  0136B6  6E55               	movwf	_inPipes+3,c	;volatile
 48574                           
 48575                           ; BSR set to: 1
 48576                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 48577  0136B8  0E00               	movlw	0
 48578  0136BA  6E57               	movwf	_inPipes+5,c	;volatile
 48579  0136BC  0E00               	movlw	0
 48580  0136BE  6E56               	movwf	_inPipes+4,c	;volatile
 48581                           
 48582                           ; BSR set to: 1
 48583                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 48584  0136C0  0E00               	movlw	0
 48585  0136C2  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 48586                           
 48587                           ; BSR set to: 1
 48588                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 48589  0136C4  0E00               	movlw	0
 48590  0136C6  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 48591  0136C8  0E00               	movlw	0
 48592  0136CA  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 48593                           
 48594                           ; BSR set to: 1
 48595                           ;usb_device.c: 2502: USBCheckStdRequest();
 48596  0136CC  EC2D  F090         	call	_USBCheckStdRequest	;wreg free
 48597                           
 48598                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 48599  0136D0  0E00               	movlw	0
 48600  0136D2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48601  0136D4  0E03               	movlw	3
 48602  0136D6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48603  0136D8  0E00               	movlw	0
 48604  0136DA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48605  0136DC  0E00               	movlw	0
 48606  0136DE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48607  0136E0  0E00               	movlw	0
 48608  0136E2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48609  0136E4  0E00               	movlw	0
 48610  0136E6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48611  0136E8  EC79  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48612                           
 48613                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 48614  0136EC  ECDE  F089         	call	_USBCtrlEPServiceComplete	;wreg free
 48615  0136F0  0012               	return		;funcret
 48616  0136F2                     __end_of_USBCtrlTrfSetupHandler:
 48617                           	opt stack 0
 48618                           tosu	equ	0xFFF
 48619                           tosh	equ	0xFFE
 48620                           tosl	equ	0xFFD
 48621                           pclatu	equ	0xFFB
 48622                           pclath	equ	0xFFA
 48623                           tblptru	equ	0xFF8
 48624                           tblptrh	equ	0xFF7
 48625                           tblptrl	equ	0xFF6
 48626                           tablat	equ	0xFF5
 48627                           prodh	equ	0xFF4
 48628                           prodl	equ	0xFF3
 48629                           intcon	equ	0xFF2
 48630                           indf0	equ	0xFEF
 48631                           postinc0	equ	0xFEE
 48632                           fsr0h	equ	0xFEA
 48633                           fsr0l	equ	0xFE9
 48634                           wreg	equ	0xFE8
 48635                           indf1	equ	0xFE7
 48636                           postinc1	equ	0xFE6
 48637                           postdec1	equ	0xFE5
 48638                           plusw1	equ	0xFE3
 48639                           fsr1h	equ	0xFE2
 48640                           fsr1l	equ	0xFE1
 48641                           indf2	equ	0xFDF
 48642                           postinc2	equ	0xFDE
 48643                           postdec2	equ	0xFDD
 48644                           plusw2	equ	0xFDB
 48645                           fsr2h	equ	0xFDA
 48646                           fsr2l	equ	0xFD9
 48647                           status	equ	0xFD8
 48648                           
 48649 ;; *************** function _USBCtrlEPServiceComplete *****************
 48650 ;; Defined at:
 48651 ;;		line 1618 in file "usb_device.c"
 48652 ;; Parameters:    Size  Location     Type
 48653 ;;		None
 48654 ;; Auto vars:     Size  Location     Type
 48655 ;;		None
 48656 ;; Return value:  Size  Location     Type
 48657 ;;                  1    wreg      void 
 48658 ;; Registers used:
 48659 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 48660 ;; Tracked objects:
 48661 ;;		On entry : 0/0
 48662 ;;		On exit  : 0/0
 48663 ;;		Unchanged: 0/0
 48664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48669 ;;Total ram usage:        0 bytes
 48670 ;; Hardware stack levels used:    1
 48671 ;; Hardware stack levels required when called:    2
 48672 ;; This function calls:
 48673 ;;		_USBCtrlEPAllowDataStage
 48674 ;;		_USBCtrlEPAllowStatusStage
 48675 ;; This function is called by:
 48676 ;;		_USBCtrlTrfSetupHandler
 48677 ;; This function uses a non-reentrant model
 48678 ;;
 48679                           
 48680                           	psect	text203
 48681  0113BC                     __ptext203:
 48682                           	opt stack 0
 48683  0113BC                     _USBCtrlEPServiceComplete:
 48684                           	opt stack 12
 48685                           
 48686                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 48687                           
 48688                           ;incstack = 0
 48689  0113BC  9865               	bcf	3941,4,c	;volatile
 48690                           
 48691                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 48692  0113BE  BE55               	btfsc	_inPipes+3,7,c	;volatile
 48693  0113C0  D03A               	goto	i2l231
 48694                           
 48695                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 48696  0113C2  0101               	movlb	1	; () banked
 48697  0113C4  AF15               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 48698  0113C6  D00C               	goto	i2l232
 48699                           
 48700                           ; BSR set to: 1
 48701                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 48702  0113C8  0E02               	movlw	2
 48703  0113CA  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 48704                           
 48705                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 48706  0113CC  5165               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 48707  0113CE  B4D8               	btfsc	status,2,c
 48708                           
 48709                           ; BSR set to: 1
 48710                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 48711  0113D0  EC93  F098         	call	_USBCtrlEPAllowDataStage	;wreg free
 48712                           
 48713                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 48714  0113D4  0E00               	movlw	0
 48715  0113D6  0101               	movlb	1	; () banked
 48716  0113D8  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 48717                           
 48718                           ; BSR set to: 1
 48719                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 48720  0113DA  0E00               	movlw	0
 48721  0113DC  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 48722                           
 48723                           ;usb_device.c: 1654: }
 48724  0113DE  0012               	return	
 48725  0113E0                     i2l232:
 48726                           
 48727                           ; BSR set to: 1
 48728                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 48729                           
 48730                           ; BSR set to: 1
 48731  0113E0  EE20 F001          	lfsr	2,1
 48732  0113E4  505C               	movf	_pBDTEntryEP0OutNext,w,c
 48733  0113E6  26D9               	addwf	fsr2l,f,c
 48734  0113E8  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 48735  0113EA  22DA               	addwfc	fsr2h,f,c
 48736  0113EC  0E08               	movlw	8
 48737  0113EE  6EDF               	movwf	indf2,c
 48738                           
 48739                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 48740  0113F0  EE20 F002          	lfsr	2,2
 48741  0113F4  505C               	movf	_pBDTEntryEP0OutNext,w,c
 48742  0113F6  26D9               	addwf	fsr2l,f,c
 48743  0113F8  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 48744  0113FA  22DA               	addwfc	fsr2h,f,c
 48745  0113FC  0E30               	movlw	48
 48746  0113FE  6EDE               	movwf	postinc2,c
 48747  011400  0E0D               	movlw	13
 48748  011402  6EDD               	movwf	postdec2,c
 48749                           
 48750                           ; BSR set to: 1
 48751                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 48752  011404  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 48753  011408  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 48754  01140C  0E0C               	movlw	12
 48755  01140E  6EDF               	movwf	indf2,c
 48756                           
 48757                           ; BSR set to: 1
 48758                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 48759  011410  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 48760  011414  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 48761  011418  0E00               	movlw	0
 48762  01141A  8EDB               	bsf	plusw2,7,c
 48763                           
 48764                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 48765  01141C  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48766  011420  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48767  011424  0E04               	movlw	4
 48768  011426  6EDF               	movwf	indf2,c
 48769                           
 48770                           ; BSR set to: 1
 48771                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 48772  011428  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48773  01142C  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48774  011430  0E00               	movlw	0
 48775  011432  8EDB               	bsf	plusw2,7,c
 48776                           
 48777                           ; BSR set to: 1
 48778                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 48779  011434  0012               	return	
 48780  011436                     i2l231:
 48781                           
 48782                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 48783  011436  010D               	movlb	13	; () banked
 48784  011438  AF30               	btfss	48,7,b	;volatile
 48785  01143A  D012               	goto	i2l236
 48786                           
 48787                           ; BSR set to: 13
 48788                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 48789  01143C  0E01               	movlw	1
 48790  01143E  0101               	movlb	1	; () banked
 48791  011440  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 48792                           
 48793                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 48794  011442  5166               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 48795  011444  B4D8               	btfsc	status,2,c
 48796                           
 48797                           ; BSR set to: 1
 48798                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 48799  011446  EC93  F098         	call	_USBCtrlEPAllowDataStage	;wreg free
 48800                           
 48801                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 48802  01144A  0E00               	movlw	0
 48803  01144C  0101               	movlb	1	; () banked
 48804  01144E  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 48805                           
 48806                           ; BSR set to: 1
 48807                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 48808  011450  0E00               	movlw	0
 48809  011452  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 48810                           
 48811                           ; BSR set to: 1
 48812                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 48813  011454  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 48814  011456  A4D8               	btfss	status,2,c
 48815  011458  0012               	return	
 48816                           
 48817                           ; BSR set to: 1
 48818                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 48819  01145A  EC09  F093         	call	_USBCtrlEPAllowStatusStage	;wreg free
 48820                           
 48821                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 48822  01145E  0012               	return	
 48823  011460                     i2l236:
 48824                           
 48825                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 48826  011460  0E02               	movlw	2
 48827  011462  0101               	movlb	1	; () banked
 48828  011464  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 48829                           
 48830                           ; BSR set to: 1
 48831                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 48832  011466  EE20 F001          	lfsr	2,1
 48833  01146A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 48834  01146C  26D9               	addwf	fsr2l,f,c
 48835  01146E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 48836  011470  22DA               	addwfc	fsr2h,f,c
 48837  011472  0E08               	movlw	8
 48838  011474  6EDF               	movwf	indf2,c
 48839                           
 48840                           ; BSR set to: 1
 48841                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 48842  011476  EE20 F002          	lfsr	2,2
 48843  01147A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 48844  01147C  26D9               	addwf	fsr2l,f,c
 48845  01147E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 48846  011480  22DA               	addwfc	fsr2h,f,c
 48847  011482  0E30               	movlw	48
 48848  011484  6EDE               	movwf	postinc2,c
 48849  011486  0E0D               	movlw	13
 48850  011488  6EDD               	movwf	postdec2,c
 48851                           
 48852                           ; BSR set to: 1
 48853                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 48854  01148A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 48855  01148E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 48856  011492  0E04               	movlw	4
 48857  011494  6EDF               	movwf	indf2,c
 48858                           
 48859                           ; BSR set to: 1
 48860                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 48861  011496  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 48862  01149A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 48863  01149E  0E00               	movlw	0
 48864  0114A0  8EDB               	bsf	plusw2,7,c
 48865                           
 48866                           ; BSR set to: 1
 48867                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 48868  0114A2  0E00               	movlw	0
 48869  0114A4  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 48870                           
 48871                           ; BSR set to: 1
 48872                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 48873  0114A6  0E00               	movlw	0
 48874  0114A8  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 48875                           
 48876                           ; BSR set to: 1
 48877                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 48878  0114AA  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 48879  0114AC  A4D8               	btfss	status,2,c
 48880  0114AE  0012               	return	
 48881                           
 48882                           ; BSR set to: 1
 48883                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 48884  0114B0  EC09  F093         	call	_USBCtrlEPAllowStatusStage	;wreg free
 48885  0114B4  0012               	return	
 48886  0114B6                     __end_of_USBCtrlEPServiceComplete:
 48887                           	opt stack 0
 48888                           tosu	equ	0xFFF
 48889                           tosh	equ	0xFFE
 48890                           tosl	equ	0xFFD
 48891                           pclatu	equ	0xFFB
 48892                           pclath	equ	0xFFA
 48893                           tblptru	equ	0xFF8
 48894                           tblptrh	equ	0xFF7
 48895                           tblptrl	equ	0xFF6
 48896                           tablat	equ	0xFF5
 48897                           prodh	equ	0xFF4
 48898                           prodl	equ	0xFF3
 48899                           intcon	equ	0xFF2
 48900                           indf0	equ	0xFEF
 48901                           postinc0	equ	0xFEE
 48902                           fsr0h	equ	0xFEA
 48903                           fsr0l	equ	0xFE9
 48904                           wreg	equ	0xFE8
 48905                           indf1	equ	0xFE7
 48906                           postinc1	equ	0xFE6
 48907                           postdec1	equ	0xFE5
 48908                           plusw1	equ	0xFE3
 48909                           fsr1h	equ	0xFE2
 48910                           fsr1l	equ	0xFE1
 48911                           indf2	equ	0xFDF
 48912                           postinc2	equ	0xFDE
 48913                           postdec2	equ	0xFDD
 48914                           plusw2	equ	0xFDB
 48915                           fsr2h	equ	0xFDA
 48916                           fsr2l	equ	0xFD9
 48917                           status	equ	0xFD8
 48918                           
 48919 ;; *************** function _USBCtrlEPAllowDataStage *****************
 48920 ;; Defined at:
 48921 ;;		line 1490 in file "usb_device.c"
 48922 ;; Parameters:    Size  Location     Type
 48923 ;;		None
 48924 ;; Auto vars:     Size  Location     Type
 48925 ;;		None
 48926 ;; Return value:  Size  Location     Type
 48927 ;;                  1    wreg      void 
 48928 ;; Registers used:
 48929 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 48930 ;; Tracked objects:
 48931 ;;		On entry : 0/0
 48932 ;;		On exit  : 0/0
 48933 ;;		Unchanged: 0/0
 48934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48939 ;;Total ram usage:        0 bytes
 48940 ;; Hardware stack levels used:    1
 48941 ;; Hardware stack levels required when called:    1
 48942 ;; This function calls:
 48943 ;;		_USBCtrlTrfTxService
 48944 ;; This function is called by:
 48945 ;;		_USBCtrlEPServiceComplete
 48946 ;; This function uses a non-reentrant model
 48947 ;;
 48948                           
 48949                           	psect	text204
 48950  013126                     __ptext204:
 48951                           	opt stack 0
 48952  013126                     _USBCtrlEPAllowDataStage:
 48953                           	opt stack 12
 48954                           
 48955                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 48956                           
 48957                           ;incstack = 0
 48958  013126  0E00               	movlw	0
 48959  013128  0101               	movlb	1	; () banked
 48960  01312A  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 48961                           
 48962                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 48963  01312C  0E00               	movlw	0
 48964  01312E  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 48965                           
 48966                           ; BSR set to: 1
 48967                           ;usb_device.c: 1495: if(controlTransferState == 2)
 48968  013130  0E02               	movlw	2
 48969  013132  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 48970  013134  A4D8               	btfss	status,2,c
 48971  013136  D01F               	goto	i2l220
 48972                           
 48973                           ; BSR set to: 1
 48974                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 48975  013138  EE20 F001          	lfsr	2,1
 48976  01313C  505C               	movf	_pBDTEntryEP0OutNext,w,c
 48977  01313E  26D9               	addwf	fsr2l,f,c
 48978  013140  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 48979  013142  22DA               	addwfc	fsr2h,f,c
 48980  013144  0E08               	movlw	8
 48981  013146  6EDF               	movwf	indf2,c
 48982                           
 48983                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 48984  013148  EE20 F002          	lfsr	2,2
 48985  01314C  505C               	movf	_pBDTEntryEP0OutNext,w,c
 48986  01314E  26D9               	addwf	fsr2l,f,c
 48987  013150  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 48988  013152  22DA               	addwfc	fsr2h,f,c
 48989  013154  0E38               	movlw	56
 48990  013156  6EDE               	movwf	postinc2,c
 48991  013158  0E0D               	movlw	13
 48992  01315A  6EDD               	movwf	postdec2,c
 48993                           
 48994                           ; BSR set to: 1
 48995                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 48996  01315C  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 48997  013160  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 48998  013164  0E48               	movlw	72
 48999  013166  6EDF               	movwf	indf2,c
 49000                           
 49001                           ; BSR set to: 1
 49002                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49003  013168  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49004  01316C  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49005  013170  0E00               	movlw	0
 49006  013172  8EDB               	bsf	plusw2,7,c
 49007                           
 49008                           ;usb_device.c: 1502: }
 49009  013174  0012               	return	
 49010  013176                     i2l220:
 49011                           
 49012                           ; BSR set to: 1
 49013                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 49014                           
 49015                           ; BSR set to: 1
 49016  013176  5056               	movf	_inPipes+4,w,c	;volatile
 49017  013178  010D               	movlb	13	; () banked
 49018  01317A  5D36               	subwf	54,w,b	;volatile
 49019  01317C  5057               	movf	_inPipes+5,w,c	;volatile
 49020  01317E  5937               	subwfb	55,w,b	;volatile
 49021  013180  B0D8               	btfsc	status,0,c
 49022  013182  D004               	goto	i2l222
 49023                           
 49024                           ; BSR set to: 13
 49025                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 49026  013184  CD36 F056          	movff	3382,_inPipes+4	;volatile
 49027  013188  CD37 F057          	movff	3383,_inPipes+5	;volatile
 49028  01318C                     i2l222:
 49029                           
 49030                           ; BSR set to: 13
 49031                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 49032                           
 49033                           ; BSR set to: 13
 49034  01318C  EC04  F091         	call	_USBCtrlTrfTxService	;wreg free
 49035                           
 49036                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 49037  013190  0101               	movlb	1	; () banked
 49038  013192  EE20 F002          	lfsr	2,2
 49039  013196  511B               	movf	_pBDTEntryIn& (0+255),w,b
 49040  013198  26D9               	addwf	fsr2l,f,c
 49041  01319A  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49042  01319C  22DA               	addwfc	fsr2h,f,c
 49043  01319E  0E38               	movlw	56
 49044  0131A0  6EDE               	movwf	postinc2,c
 49045  0131A2  0E0D               	movlw	13
 49046  0131A4  6EDD               	movwf	postdec2,c
 49047                           
 49048                           ; BSR set to: 1
 49049                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 49050  0131A6  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49051  0131AA  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49052  0131AE  0E48               	movlw	72
 49053  0131B0  6EDF               	movwf	indf2,c
 49054                           
 49055                           ; BSR set to: 1
 49056                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49057  0131B2  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49058  0131B6  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49059  0131BA  0E00               	movlw	0
 49060  0131BC  8EDB               	bsf	plusw2,7,c
 49061  0131BE  0012               	return	
 49062  0131C0                     __end_of_USBCtrlEPAllowDataStage:
 49063                           	opt stack 0
 49064                           tosu	equ	0xFFF
 49065                           tosh	equ	0xFFE
 49066                           tosl	equ	0xFFD
 49067                           pclatu	equ	0xFFB
 49068                           pclath	equ	0xFFA
 49069                           tblptru	equ	0xFF8
 49070                           tblptrh	equ	0xFF7
 49071                           tblptrl	equ	0xFF6
 49072                           tablat	equ	0xFF5
 49073                           prodh	equ	0xFF4
 49074                           prodl	equ	0xFF3
 49075                           intcon	equ	0xFF2
 49076                           indf0	equ	0xFEF
 49077                           postinc0	equ	0xFEE
 49078                           fsr0h	equ	0xFEA
 49079                           fsr0l	equ	0xFE9
 49080                           wreg	equ	0xFE8
 49081                           indf1	equ	0xFE7
 49082                           postinc1	equ	0xFE6
 49083                           postdec1	equ	0xFE5
 49084                           plusw1	equ	0xFE3
 49085                           fsr1h	equ	0xFE2
 49086                           fsr1l	equ	0xFE1
 49087                           indf2	equ	0xFDF
 49088                           postinc2	equ	0xFDE
 49089                           postdec2	equ	0xFDD
 49090                           plusw2	equ	0xFDB
 49091                           fsr2h	equ	0xFDA
 49092                           fsr2l	equ	0xFD9
 49093                           status	equ	0xFD8
 49094                           
 49095 ;; *************** function _USBCheckStdRequest *****************
 49096 ;; Defined at:
 49097 ;;		line 2688 in file "usb_device.c"
 49098 ;; Parameters:    Size  Location     Type
 49099 ;;		None
 49100 ;; Auto vars:     Size  Location     Type
 49101 ;;		None
 49102 ;; Return value:  Size  Location     Type
 49103 ;;                  1    wreg      void 
 49104 ;; Registers used:
 49105 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49106 ;; Tracked objects:
 49107 ;;		On entry : 0/0
 49108 ;;		On exit  : 0/0
 49109 ;;		Unchanged: 0/0
 49110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49115 ;;Total ram usage:        0 bytes
 49116 ;; Hardware stack levels used:    1
 49117 ;; Hardware stack levels required when called:    5
 49118 ;; This function calls:
 49119 ;;		_USBStdFeatureReqHandler
 49120 ;;		_USBStdGetDscHandler
 49121 ;;		_USBStdGetStatusHandler
 49122 ;;		_USBStdSetCfgHandler
 49123 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49124 ;; This function is called by:
 49125 ;;		_USBCtrlTrfSetupHandler
 49126 ;; This function uses a non-reentrant model
 49127 ;;
 49128                           
 49129                           	psect	text205
 49130  01205A                     __ptext205:
 49131                           	opt stack 0
 49132  01205A                     _USBCheckStdRequest:
 49133                           	opt stack 9
 49134                           
 49135                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 49136                           
 49137                           ; BSR set to: 1
 49138                           ;incstack = 0
 49139  01205A  010D               	movlb	13	; () banked
 49140  01205C  3930               	swapf	48,w,b	;volatile
 49141  01205E  32E8               	rrcf	wreg,f,c
 49142  012060  0B03               	andlw	3
 49143  012062  0900               	iorlw	0
 49144  012064  A4D8               	btfss	status,2,c
 49145  012066  0012               	return	
 49146  012068  D042               	goto	i2l355
 49147  01206A                     i2l356:
 49148                           
 49149                           ; BSR set to: 13
 49150                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 49151  01206A  8E55               	bsf	_inPipes+3,7,c	;volatile
 49152                           
 49153                           ; BSR set to: 13
 49154                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 49155  01206C  0E08               	movlw	8
 49156  01206E  6E5E               	movwf	_USBDeviceState,c	;volatile
 49157                           
 49158                           ;usb_device.c: 2698: break;
 49159  012070  0012               	return	
 49160  012072                     
 49161                           ; BSR set to: 13
 49162                           ;usb_device.c: 2700: USBStdGetDscHandler();
 49163                           
 49164                           ; BSR set to: 13
 49165  012072  EC01  F082         	call	_USBStdGetDscHandler	;wreg free
 49166                           
 49167                           ;usb_device.c: 2701: break;
 49168  012076  0012               	return	
 49169  012078                     
 49170                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 49171  012078  EC52  F08F         	call	_USBStdSetCfgHandler	;wreg free
 49172                           
 49173                           ;usb_device.c: 2704: break;
 49174  01207C  0012               	return	
 49175  01207E                     
 49176                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 49177  01207E  0EC2               	movlw	low _USBActiveConfiguration
 49178  012080  6E52               	movwf	_inPipes,c	;volatile
 49179  012082  0E01               	movlw	high _USBActiveConfiguration
 49180  012084  6E53               	movwf	_inPipes+1,c	;volatile
 49181                           
 49182                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 49183  012086  8055               	bsf	_inPipes+3,0,c	;volatile
 49184                           
 49185                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 49186  012088  0E01               	movlw	1
 49187  01208A  6E56               	movwf	_inPipes+4,c	;volatile
 49188                           
 49189                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 49190  01208C  8E55               	bsf	_inPipes+3,7,c	;volatile
 49191                           
 49192                           ;usb_device.c: 2710: break;
 49193  01208E  0012               	return	
 49194  012090                     
 49195                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 49196  012090  ECF6  F097         	call	_USBStdGetStatusHandler	;wreg free
 49197                           
 49198                           ;usb_device.c: 2713: break;
 49199  012094  0012               	return	
 49200  012096                     
 49201                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 49202  012096  EC59  F06F         	call	_USBStdFeatureReqHandler	;wreg free
 49203                           
 49204                           ;usb_device.c: 2717: break;
 49205  01209A  0012               	return	
 49206  01209C                     
 49207                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 49208  01209C  010D               	movlb	13	; () banked
 49209  01209E  5134               	movf	52,w,b	;volatile
 49210  0120A0  0D01               	mullw	1
 49211  0120A2  0EBD               	movlw	low _USBAlternateInterface
 49212  0120A4  24F3               	addwf	prodl,w,c
 49213  0120A6  6E52               	movwf	_inPipes,c	;volatile
 49214  0120A8  0E01               	movlw	high _USBAlternateInterface
 49215  0120AA  20F4               	addwfc	prodh,w,c
 49216  0120AC  6E53               	movwf	_inPipes+1,c	;volatile
 49217                           
 49218                           ; BSR set to: 13
 49219                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 49220  0120AE  8055               	bsf	_inPipes+3,0,c	;volatile
 49221                           
 49222                           ; BSR set to: 13
 49223                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 49224  0120B0  0E01               	movlw	1
 49225  0120B2  6E56               	movwf	_inPipes+4,c	;volatile
 49226                           
 49227                           ; BSR set to: 13
 49228                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 49229  0120B4  8E55               	bsf	_inPipes+3,7,c	;volatile
 49230                           
 49231                           ;usb_device.c: 2723: break;
 49232  0120B6  0012               	return	
 49233  0120B8                     i2l365:
 49234                           
 49235                           ; BSR set to: 13
 49236                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 49237  0120B8  8E55               	bsf	_inPipes+3,7,c	;volatile
 49238                           
 49239                           ; BSR set to: 13
 49240                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 49241  0120BA  5134               	movf	52,w,b	;volatile
 49242  0120BC  0D01               	mullw	1
 49243  0120BE  0EBD               	movlw	low _USBAlternateInterface
 49244  0120C0  24F3               	addwf	prodl,w,c
 49245  0120C2  6ED9               	movwf	fsr2l,c
 49246  0120C4  0E01               	movlw	high _USBAlternateInterface
 49247  0120C6  20F4               	addwfc	prodh,w,c
 49248  0120C8  6EDA               	movwf	fsr2h,c
 49249  0120CA  CD32 FFDF          	movff	3378,indf2	;volatile
 49250                           
 49251                           ;usb_device.c: 2727: break;
 49252  0120CE  0012               	return	
 49253  0120D0                     
 49254                           ; BSR set to: 13
 49255                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 49256                           
 49257                           ; BSR set to: 13
 49258  0120D0  0E00               	movlw	0
 49259  0120D2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49260  0120D4  0E02               	movlw	2
 49261  0120D6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49262  0120D8  0E00               	movlw	0
 49263  0120DA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49264  0120DC  0E00               	movlw	0
 49265  0120DE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49266  0120E0  0E00               	movlw	0
 49267  0120E2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49268  0120E4  0E00               	movlw	0
 49269  0120E6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49270  0120E8  EC79  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49271                           
 49272                           ;usb_device.c: 2734: }
 49273                           
 49274                           ;usb_device.c: 2733: break;
 49275                           
 49276                           ;usb_device.c: 2732: default:
 49277                           
 49278                           ;usb_device.c: 2731: case 12:
 49279                           
 49280                           ;usb_device.c: 2730: break;
 49281  0120EC  0012               	return	
 49282  0120EE                     i2l355:
 49283  0120EE  010D               	movlb	13	; () banked
 49284  0120F0  5131               	movf	49,w,b	;volatile
 49285                           
 49286                           ; Switch size 1, requested type "space"
 49287                           ; Number of cases is 11, Range of values is 0 to 12
 49288                           ; switch strategies available:
 49289                           ; Name         Instructions Cycles
 49290                           ; simple_byte           34    18 (average)
 49291                           ;	Chosen strategy is simple_byte
 49292  0120F2  0A00               	xorlw	0	; case 0
 49293  0120F4  B4D8               	btfsc	status,2,c
 49294  0120F6  D7CC               	goto	i2l361
 49295  0120F8  0A01               	xorlw	1	; case 1
 49296  0120FA  B4D8               	btfsc	status,2,c
 49297  0120FC  D7CC               	goto	i2l362
 49298  0120FE  0A02               	xorlw	2	; case 3
 49299  012100  B4D8               	btfsc	status,2,c
 49300  012102  D7C9               	goto	i2l362
 49301  012104  0A06               	xorlw	6	; case 5
 49302  012106  B4D8               	btfsc	status,2,c
 49303  012108  D7B0               	goto	i2l356
 49304  01210A  0A03               	xorlw	3	; case 6
 49305  01210C  B4D8               	btfsc	status,2,c
 49306  01210E  D7B1               	goto	i2l358
 49307  012110  0A01               	xorlw	1	; case 7
 49308  012112  B4D8               	btfsc	status,2,c
 49309  012114  D7DD               	goto	i2l366
 49310  012116  0A0F               	xorlw	15	; case 8
 49311  012118  B4D8               	btfsc	status,2,c
 49312  01211A  D7B1               	goto	i2l360
 49313  01211C  0A01               	xorlw	1	; case 9
 49314  01211E  B4D8               	btfsc	status,2,c
 49315  012120  D7AB               	goto	i2l359
 49316  012122  0A03               	xorlw	3	; case 10
 49317  012124  B4D8               	btfsc	status,2,c
 49318  012126  D7BA               	goto	i2l364
 49319  012128  0A01               	xorlw	1	; case 11
 49320  01212A  B4D8               	btfsc	status,2,c
 49321  01212C  D7C5               	goto	i2l365
 49322  01212E  0A07               	xorlw	7	; case 12
 49323  012130  0012               	return	
 49324  012132                     __end_of_USBCheckStdRequest:
 49325                           	opt stack 0
 49326                           tosu	equ	0xFFF
 49327                           tosh	equ	0xFFE
 49328                           tosl	equ	0xFFD
 49329                           pclatu	equ	0xFFB
 49330                           pclath	equ	0xFFA
 49331                           tblptru	equ	0xFF8
 49332                           tblptrh	equ	0xFF7
 49333                           tblptrl	equ	0xFF6
 49334                           tablat	equ	0xFF5
 49335                           prodh	equ	0xFF4
 49336                           prodl	equ	0xFF3
 49337                           intcon	equ	0xFF2
 49338                           indf0	equ	0xFEF
 49339                           postinc0	equ	0xFEE
 49340                           fsr0h	equ	0xFEA
 49341                           fsr0l	equ	0xFE9
 49342                           wreg	equ	0xFE8
 49343                           indf1	equ	0xFE7
 49344                           postinc1	equ	0xFE6
 49345                           postdec1	equ	0xFE5
 49346                           plusw1	equ	0xFE3
 49347                           fsr1h	equ	0xFE2
 49348                           fsr1l	equ	0xFE1
 49349                           indf2	equ	0xFDF
 49350                           postinc2	equ	0xFDE
 49351                           postdec2	equ	0xFDD
 49352                           plusw2	equ	0xFDB
 49353                           fsr2h	equ	0xFDA
 49354                           fsr2l	equ	0xFD9
 49355                           status	equ	0xFD8
 49356                           
 49357 ;; *************** function _USBStdSetCfgHandler *****************
 49358 ;; Defined at:
 49359 ;;		line 1970 in file "usb_device.c"
 49360 ;; Parameters:    Size  Location     Type
 49361 ;;		None
 49362 ;; Auto vars:     Size  Location     Type
 49363 ;;  i               1   23[COMRAM] unsigned char 
 49364 ;; Return value:  Size  Location     Type
 49365 ;;                  1    wreg      void 
 49366 ;; Registers used:
 49367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 49368 ;; Tracked objects:
 49369 ;;		On entry : 0/0
 49370 ;;		On exit  : 0/0
 49371 ;;		Unchanged: 0/0
 49372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49376 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49377 ;;Total ram usage:        1 bytes
 49378 ;; Hardware stack levels used:    1
 49379 ;; Hardware stack levels required when called:    4
 49380 ;; This function calls:
 49381 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49382 ;;		i2_memset
 49383 ;; This function is called by:
 49384 ;;		_USBCheckStdRequest
 49385 ;; This function uses a non-reentrant model
 49386 ;;
 49387                           
 49388                           	psect	text206
 49389  011EA4                     __ptext206:
 49390                           	opt stack 0
 49391  011EA4                     _USBStdSetCfgHandler:
 49392                           	opt stack 9
 49393                           
 49394                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 49395                           
 49396                           ;incstack = 0
 49397  011EA4  8E55               	bsf	_inPipes+3,7,c	;volatile
 49398                           
 49399                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 49400  011EA6  0E27               	movlw	39
 49401  011EA8  6E01               	movwf	i2memset@p1,c
 49402  011EAA  0E0F               	movlw	15
 49403  011EAC  6E02               	movwf	i2memset@p1+1,c
 49404  011EAE  0E00               	movlw	0
 49405  011EB0  6E04               	movwf	i2memset@c+1,c
 49406  011EB2  0E00               	movlw	0
 49407  011EB4  6E03               	movwf	i2memset@c,c
 49408  011EB6  0E00               	movlw	0
 49409  011EB8  6E06               	movwf	i2memset@n+1,c
 49410  011EBA  0E02               	movlw	2
 49411  011EBC  6E05               	movwf	i2memset@n,c
 49412  011EBE  EC24  F0A9         	call	i2_memset	;wreg free
 49413                           
 49414                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 49415  011EC2  0E00               	movlw	0
 49416  011EC4  6E01               	movwf	i2memset@p1,c
 49417  011EC6  0E0D               	movlw	13
 49418  011EC8  6E02               	movwf	i2memset@p1+1,c
 49419  011ECA  0E00               	movlw	0
 49420  011ECC  6E04               	movwf	i2memset@c+1,c
 49421  011ECE  0E00               	movlw	0
 49422  011ED0  6E03               	movwf	i2memset@c,c
 49423  011ED2  0E00               	movlw	0
 49424  011ED4  6E06               	movwf	i2memset@n+1,c
 49425  011ED6  0E30               	movlw	48
 49426  011ED8  6E05               	movwf	i2memset@n,c
 49427  011EDA  EC24  F0A9         	call	i2_memset	;wreg free
 49428                           
 49429                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 49430  011EDE  8C65               	bsf	3941,6,c	;volatile
 49431                           
 49432                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 49433  011EE0  0E00               	movlw	0
 49434  011EE2  6E18               	movwf	USBStdSetCfgHandler@i,c
 49435  011EE4                     i2l13392:
 49436  011EE4  0E02               	movlw	2
 49437  011EE6  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 49438  011EE8  D001               	goto	i2l272
 49439  011EEA  D016               	goto	i2u1204_40
 49440  011EEC                     i2l272:
 49441                           
 49442                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 49443  011EEC  5018               	movf	USBStdSetCfgHandler@i,w,c
 49444  011EEE  0D01               	mullw	1
 49445  011EF0  0E3C               	movlw	low _ep_data_in
 49446  011EF2  24F3               	addwf	prodl,w,c
 49447  011EF4  6ED9               	movwf	fsr2l,c
 49448  011EF6  0E01               	movlw	high _ep_data_in
 49449  011EF8  20F4               	addwfc	prodh,w,c
 49450  011EFA  6EDA               	movwf	fsr2h,c
 49451  011EFC  0E00               	movlw	0
 49452  011EFE  6EDF               	movwf	indf2,c
 49453                           
 49454                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 49455  011F00  5018               	movf	USBStdSetCfgHandler@i,w,c
 49456  011F02  0D01               	mullw	1
 49457  011F04  0E39               	movlw	low _ep_data_out
 49458  011F06  24F3               	addwf	prodl,w,c
 49459  011F08  6ED9               	movwf	fsr2l,c
 49460  011F0A  0E01               	movlw	high _ep_data_out
 49461  011F0C  20F4               	addwfc	prodh,w,c
 49462  011F0E  6EDA               	movwf	fsr2h,c
 49463  011F10  0E00               	movlw	0
 49464  011F12  6EDF               	movwf	indf2,c
 49465  011F14  2A18               	incf	USBStdSetCfgHandler@i,f,c
 49466  011F16  D7E6               	goto	i2l13392
 49467  011F18                     i2u1204_40:
 49468                           
 49469                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 49470  011F18  0EBD               	movlw	low _USBAlternateInterface
 49471  011F1A  6E01               	movwf	i2memset@p1,c
 49472  011F1C  0E01               	movlw	high _USBAlternateInterface
 49473  011F1E  6E02               	movwf	i2memset@p1+1,c
 49474  011F20  0E00               	movlw	0
 49475  011F22  6E04               	movwf	i2memset@c+1,c
 49476  011F24  0E00               	movlw	0
 49477  011F26  6E03               	movwf	i2memset@c,c
 49478  011F28  0E00               	movlw	0
 49479  011F2A  6E06               	movwf	i2memset@n+1,c
 49480  011F2C  0E02               	movlw	2
 49481  011F2E  6E05               	movwf	i2memset@n,c
 49482  011F30  EC24  F0A9         	call	i2_memset	;wreg free
 49483                           
 49484                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 49485  011F34  9C65               	bcf	3941,6,c	;volatile
 49486                           
 49487                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 49488  011F36  0E08               	movlw	8
 49489  011F38  0101               	movlb	1	; () banked
 49490  011F3A  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 49491  011F3C  0E0D               	movlw	13
 49492  011F3E  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49493                           
 49494                           ; BSR set to: 1
 49495                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 49496  011F40  0E00               	movlw	0
 49497  011F42  6F51               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 49498  011F44  0E0D               	movlw	13
 49499  011F46  6F52               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 49500                           
 49501                           ; BSR set to: 1
 49502                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 49503  011F48  C151  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 49504  011F4C  C152  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 49505                           
 49506                           ; BSR set to: 1
 49507                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 49508  011F50  CD32 F1C2          	movff	3378,_USBActiveConfiguration	;volatile
 49509                           
 49510                           ; BSR set to: 1
 49511                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 49512  011F54  51C2               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 49513  011F56  A4D8               	btfss	status,2,c
 49514  011F58  D003               	goto	i2l274
 49515                           
 49516                           ; BSR set to: 1
 49517                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 49518  011F5A  0E10               	movlw	16
 49519  011F5C  6E5E               	movwf	_USBDeviceState,c	;volatile
 49520                           
 49521                           ;usb_device.c: 2015: }
 49522  011F5E  0012               	return	
 49523  011F60                     i2l274:
 49524                           
 49525                           ; BSR set to: 1
 49526                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 49527                           
 49528                           ; BSR set to: 1
 49529  011F60  0E00               	movlw	0
 49530  011F62  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49531  011F64  0E01               	movlw	1
 49532  011F66  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49533  011F68  0EC2               	movlw	low _USBActiveConfiguration
 49534  011F6A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49535  011F6C  0E01               	movlw	high _USBActiveConfiguration
 49536  011F6E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49537  011F70  0E00               	movlw	0
 49538  011F72  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49539  011F74  0E01               	movlw	1
 49540  011F76  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49541  011F78  EC79  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49542                           
 49543                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 49544  011F7C  0E20               	movlw	32
 49545  011F7E  6E5E               	movwf	_USBDeviceState,c	;volatile
 49546  011F80  0012               	return	
 49547  011F82                     __end_of_USBStdSetCfgHandler:
 49548                           	opt stack 0
 49549                           tosu	equ	0xFFF
 49550                           tosh	equ	0xFFE
 49551                           tosl	equ	0xFFD
 49552                           pclatu	equ	0xFFB
 49553                           pclath	equ	0xFFA
 49554                           tblptru	equ	0xFF8
 49555                           tblptrh	equ	0xFF7
 49556                           tblptrl	equ	0xFF6
 49557                           tablat	equ	0xFF5
 49558                           prodh	equ	0xFF4
 49559                           prodl	equ	0xFF3
 49560                           intcon	equ	0xFF2
 49561                           indf0	equ	0xFEF
 49562                           postinc0	equ	0xFEE
 49563                           fsr0h	equ	0xFEA
 49564                           fsr0l	equ	0xFE9
 49565                           wreg	equ	0xFE8
 49566                           indf1	equ	0xFE7
 49567                           postinc1	equ	0xFE6
 49568                           postdec1	equ	0xFE5
 49569                           plusw1	equ	0xFE3
 49570                           fsr1h	equ	0xFE2
 49571                           fsr1l	equ	0xFE1
 49572                           indf2	equ	0xFDF
 49573                           postinc2	equ	0xFDE
 49574                           postdec2	equ	0xFDD
 49575                           plusw2	equ	0xFDB
 49576                           fsr2h	equ	0xFDA
 49577                           fsr2l	equ	0xFD9
 49578                           status	equ	0xFD8
 49579                           
 49580 ;; *************** function i2_memset *****************
 49581 ;; Defined at:
 49582 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 49583 ;; Parameters:    Size  Location     Type
 49584 ;;  p1              2    0[COMRAM] PTR void 
 49585 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 49586 ;;  c               2    2[COMRAM] int 
 49587 ;;  n               2    4[COMRAM] unsigned int 
 49588 ;; Auto vars:     Size  Location     Type
 49589 ;;  memset          2    6[COMRAM] PTR unsigned char 
 49590 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 49591 ;; Return value:  Size  Location     Type
 49592 ;;                  2    0[COMRAM] PTR void 
 49593 ;; Registers used:
 49594 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49595 ;; Tracked objects:
 49596 ;;		On entry : 0/0
 49597 ;;		On exit  : 0/0
 49598 ;;		Unchanged: 0/0
 49599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49600 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49601 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49603 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49604 ;;Total ram usage:        8 bytes
 49605 ;; Hardware stack levels used:    1
 49606 ;; This function calls:
 49607 ;;		Nothing
 49608 ;; This function is called by:
 49609 ;;		_USBStdSetCfgHandler
 49610 ;;		i2_USBDeviceInit
 49611 ;; This function uses a non-reentrant model
 49612 ;;
 49613                           
 49614                           	psect	text207
 49615  015248                     __ptext207:
 49616                           	opt stack 0
 49617  015248                     i2_memset:
 49618                           	opt stack 15
 49619                           
 49620                           ;incstack = 0
 49621  015248  C001  F007         	movff	i2memset@p1,i2memset@p
 49622  01524C  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 49623  015250  D008               	goto	i2l3720
 49624  015252                     i2l13322:
 49625  015252  C007  FFD9         	movff	i2memset@p,fsr2l
 49626  015256  C008  FFDA         	movff	i2memset@p+1,fsr2h
 49627  01525A  C003  FFDF         	movff	i2memset@c,indf2
 49628  01525E  4A07               	infsnz	i2memset@p,f,c
 49629  015260  2A08               	incf	i2memset@p+1,f,c
 49630  015262                     i2l3720:
 49631  015262  0605               	decf	i2memset@n,f,c
 49632  015264  A0D8               	btfss	status,0,c
 49633  015266  0606               	decf	i2memset@n+1,f,c
 49634  015268  2805               	incf	i2memset@n,w,c
 49635  01526A  E1F3               	bnz	i2l13322
 49636  01526C  2806               	incf	i2memset@n+1,w,c
 49637  01526E  B4D8               	btfsc	status,2,c
 49638  015270  0012               	return	
 49639  015272  D7EF               	goto	i2l3721
 49640  015274                     __end_ofi2_memset:
 49641                           	opt stack 0
 49642                           tosu	equ	0xFFF
 49643                           tosh	equ	0xFFE
 49644                           tosl	equ	0xFFD
 49645                           pclatu	equ	0xFFB
 49646                           pclath	equ	0xFFA
 49647                           tblptru	equ	0xFF8
 49648                           tblptrh	equ	0xFF7
 49649                           tblptrl	equ	0xFF6
 49650                           tablat	equ	0xFF5
 49651                           prodh	equ	0xFF4
 49652                           prodl	equ	0xFF3
 49653                           intcon	equ	0xFF2
 49654                           indf0	equ	0xFEF
 49655                           postinc0	equ	0xFEE
 49656                           fsr0h	equ	0xFEA
 49657                           fsr0l	equ	0xFE9
 49658                           wreg	equ	0xFE8
 49659                           indf1	equ	0xFE7
 49660                           postinc1	equ	0xFE6
 49661                           postdec1	equ	0xFE5
 49662                           plusw1	equ	0xFE3
 49663                           fsr1h	equ	0xFE2
 49664                           fsr1l	equ	0xFE1
 49665                           indf2	equ	0xFDF
 49666                           postinc2	equ	0xFDE
 49667                           postdec2	equ	0xFDD
 49668                           plusw2	equ	0xFDB
 49669                           fsr2h	equ	0xFDA
 49670                           fsr2l	equ	0xFD9
 49671                           status	equ	0xFD8
 49672                           
 49673 ;; *************** function _USBStdGetStatusHandler *****************
 49674 ;; Defined at:
 49675 ;;		line 2131 in file "usb_device.c"
 49676 ;; Parameters:    Size  Location     Type
 49677 ;;		None
 49678 ;; Auto vars:     Size  Location     Type
 49679 ;;  p               2    1[COMRAM] PTR struct __BDT
 49680 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 49681 ;; Return value:  Size  Location     Type
 49682 ;;                  1    wreg      void 
 49683 ;; Registers used:
 49684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 49685 ;; Tracked objects:
 49686 ;;		On entry : 0/0
 49687 ;;		On exit  : 0/0
 49688 ;;		Unchanged: 0/0
 49689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49693 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49694 ;;Total ram usage:        3 bytes
 49695 ;; Hardware stack levels used:    1
 49696 ;; This function calls:
 49697 ;;		Nothing
 49698 ;; This function is called by:
 49699 ;;		_USBCheckStdRequest
 49700 ;; This function uses a non-reentrant model
 49701 ;;
 49702                           
 49703                           	psect	text208
 49704  012FEC                     __ptext208:
 49705                           	opt stack 0
 49706  012FEC                     _USBStdGetStatusHandler:
 49707                           	opt stack 13
 49708                           
 49709                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 49710                           
 49711                           ;incstack = 0
 49712  012FEC  0E00               	movlw	0
 49713  012FEE  010D               	movlb	13	; () banked
 49714  012FF0  6F38               	movwf	56,b	;volatile
 49715                           
 49716                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 49717  012FF2  0E00               	movlw	0
 49718  012FF4  6F39               	movwf	57,b	;volatile
 49719                           
 49720                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 49721  012FF6  D035               	goto	i2l293
 49722  012FF8                     i2l294:
 49723                           
 49724                           ; BSR set to: 13
 49725                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 49726  012FF8  8E55               	bsf	_inPipes+3,7,c	;volatile
 49727                           
 49728                           ; BSR set to: 13
 49729                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 49730                           
 49731                           ; BSR set to: 13
 49732                           
 49733                           ; BSR set to: 13
 49734                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 49735                           
 49736                           ;usb_device.c: 2144: if(0 == 1)
 49737  012FFA  0101               	movlb	1	; () banked
 49738  012FFC  056E               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 49739  012FFE  A4D8               	btfss	status,2,c
 49740  013000  D03B               	goto	i2l297
 49741                           
 49742                           ; BSR set to: 1
 49743                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 49744  013002  010D               	movlb	13	; () banked
 49745  013004  8338               	bsf	56,1,b	;volatile
 49746                           
 49747                           ; BSR set to: 13
 49748                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 49749  013006  D038               	goto	i2l297
 49750  013008                     i2l298:
 49751                           
 49752                           ; BSR set to: 13
 49753                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 49754  013008  8E55               	bsf	_inPipes+3,7,c	;volatile
 49755                           
 49756                           ;usb_device.c: 2156: break;
 49757  01300A  D036               	goto	i2l297
 49758  01300C                     i2l299:
 49759                           
 49760                           ; BSR set to: 13
 49761                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 49762  01300C  8E55               	bsf	_inPipes+3,7,c	;volatile
 49763                           
 49764                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 49765  01300E  BF34               	btfsc	52,7,b	;volatile
 49766  013010  D00A               	goto	i2l300
 49767                           
 49768                           ; BSR set to: 13
 49769                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 49770  013012  5134               	movf	52,w,b	;volatile
 49771  013014  0B0F               	andlw	15
 49772  013016  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 49773  013018  5001               	movf	??_USBStdGetStatusHandler,w,c
 49774  01301A  0D02               	mullw	2
 49775  01301C  0E21               	movlw	low _pBDTEntryOut
 49776  01301E  24F3               	addwf	prodl,w,c
 49777  013020  6ED9               	movwf	fsr2l,c
 49778  013022  0E01               	movlw	high _pBDTEntryOut
 49779  013024  D009               	goto	L77
 49780  013026                     i2l300:
 49781                           
 49782                           ; BSR set to: 13
 49783                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 49784                           
 49785                           ; BSR set to: 13
 49786  013026  5134               	movf	52,w,b	;volatile
 49787  013028  0B0F               	andlw	15
 49788  01302A  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 49789  01302C  5001               	movf	??_USBStdGetStatusHandler,w,c
 49790  01302E  0D02               	mullw	2
 49791  013030  0E1B               	movlw	low _pBDTEntryIn
 49792  013032  24F3               	addwf	prodl,w,c
 49793  013034  6ED9               	movwf	fsr2l,c
 49794  013036  0E01               	movlw	high _pBDTEntryIn
 49795  013038                     L77:
 49796  013038  20F4               	addwfc	prodh,w,c
 49797  01303A  6EDA               	movwf	fsr2h,c
 49798  01303C  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 49799  013040  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 49800                           
 49801                           ; BSR set to: 13
 49802                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 49803                           
 49804                           ; BSR set to: 13
 49805  013044  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 49806  013048  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 49807  01304C  AEDF               	btfss	indf2,7,c
 49808  01304E  D014               	goto	i2l297
 49809                           
 49810                           ; BSR set to: 13
 49811  013050  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 49812  013054  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 49813  013058  A4DF               	btfss	indf2,2,c
 49814  01305A  D00E               	goto	i2l297
 49815                           
 49816                           ; BSR set to: 13
 49817                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 49818  01305C  0E01               	movlw	1
 49819  01305E  6F38               	movwf	56,b	;volatile
 49820                           
 49821                           ; BSR set to: 13
 49822                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 49823                           
 49824                           ; BSR set to: 13
 49825                           ;usb_device.c: 2176: break;
 49826  013060  D00B               	goto	i2l297
 49827  013062                     i2l293:
 49828                           
 49829                           ; BSR set to: 13
 49830                           
 49831                           ; BSR set to: 13
 49832  013062  5130               	movf	48,w,b	;volatile
 49833  013064  0B1F               	andlw	31
 49834                           
 49835                           ; Switch size 1, requested type "space"
 49836                           ; Number of cases is 3, Range of values is 0 to 2
 49837                           ; switch strategies available:
 49838                           ; Name         Instructions Cycles
 49839                           ; simple_byte           10     6 (average)
 49840                           ;	Chosen strategy is simple_byte
 49841  013066  0A00               	xorlw	0	; case 0
 49842  013068  B4D8               	btfsc	status,2,c
 49843  01306A  D7C6               	goto	i2l294
 49844  01306C  0A01               	xorlw	1	; case 1
 49845  01306E  B4D8               	btfsc	status,2,c
 49846  013070  D7CB               	goto	i2l298
 49847  013072  0A03               	xorlw	3	; case 2
 49848  013074  B4D8               	btfsc	status,2,c
 49849  013076  D7CA               	goto	i2l299
 49850  013078                     i2l297:
 49851                           
 49852                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 49853  013078  AE55               	btfss	_inPipes+3,7,c	;volatile
 49854  01307A  0012               	return	
 49855                           
 49856                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 49857  01307C  0E38               	movlw	56
 49858  01307E  6E52               	movwf	_inPipes,c	;volatile
 49859  013080  0E0D               	movlw	13
 49860  013082  6E53               	movwf	_inPipes+1,c	;volatile
 49861                           
 49862                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 49863  013084  8055               	bsf	_inPipes+3,0,c	;volatile
 49864                           
 49865                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 49866  013086  0E02               	movlw	2
 49867  013088  6E56               	movwf	_inPipes+4,c	;volatile
 49868  01308A  0012               	return	
 49869  01308C                     __end_of_USBStdGetStatusHandler:
 49870                           	opt stack 0
 49871                           tosu	equ	0xFFF
 49872                           tosh	equ	0xFFE
 49873                           tosl	equ	0xFFD
 49874                           pclatu	equ	0xFFB
 49875                           pclath	equ	0xFFA
 49876                           tblptru	equ	0xFF8
 49877                           tblptrh	equ	0xFF7
 49878                           tblptrl	equ	0xFF6
 49879                           tablat	equ	0xFF5
 49880                           prodh	equ	0xFF4
 49881                           prodl	equ	0xFF3
 49882                           intcon	equ	0xFF2
 49883                           indf0	equ	0xFEF
 49884                           postinc0	equ	0xFEE
 49885                           fsr0h	equ	0xFEA
 49886                           fsr0l	equ	0xFE9
 49887                           wreg	equ	0xFE8
 49888                           indf1	equ	0xFE7
 49889                           postinc1	equ	0xFE6
 49890                           postdec1	equ	0xFE5
 49891                           plusw1	equ	0xFE3
 49892                           fsr1h	equ	0xFE2
 49893                           fsr1l	equ	0xFE1
 49894                           indf2	equ	0xFDF
 49895                           postinc2	equ	0xFDE
 49896                           postdec2	equ	0xFDD
 49897                           plusw2	equ	0xFDB
 49898                           fsr2h	equ	0xFDA
 49899                           fsr2l	equ	0xFD9
 49900                           status	equ	0xFD8
 49901                           
 49902 ;; *************** function _USBStdGetDscHandler *****************
 49903 ;; Defined at:
 49904 ;;		line 2045 in file "usb_device.c"
 49905 ;; Parameters:    Size  Location     Type
 49906 ;;		None
 49907 ;; Auto vars:     Size  Location     Type
 49908 ;;		None
 49909 ;; Return value:  Size  Location     Type
 49910 ;;                  1    wreg      void 
 49911 ;; Registers used:
 49912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 49913 ;; Tracked objects:
 49914 ;;		On entry : 0/0
 49915 ;;		On exit  : 0/0
 49916 ;;		Unchanged: 0/0
 49917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49920 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49921 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49922 ;;Total ram usage:        2 bytes
 49923 ;; Hardware stack levels used:    1
 49924 ;; This function calls:
 49925 ;;		Nothing
 49926 ;; This function is called by:
 49927 ;;		_USBCheckStdRequest
 49928 ;; This function uses a non-reentrant model
 49929 ;;
 49930                           
 49931                           	psect	text209
 49932  010402                     __ptext209:
 49933                           	opt stack 0
 49934  010402                     _USBStdGetDscHandler:
 49935                           	opt stack 13
 49936                           
 49937                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 49938                           
 49939                           ;incstack = 0
 49940  010402  0E80               	movlw	128
 49941  010404  010D               	movlb	13	; () banked
 49942  010406  1930               	xorwf	48,w,b	;volatile
 49943  010408  A4D8               	btfss	status,2,c
 49944  01040A  0012               	return	
 49945                           
 49946                           ; BSR set to: 13
 49947                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 49948  01040C  0EC0               	movlw	192
 49949  01040E  6E55               	movwf	_inPipes+3,c	;volatile
 49950                           
 49951                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 49952  010410  D082               	goto	i2l280
 49953  010412                     
 49954                           ; BSR set to: 13
 49955                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 49956                           
 49957                           ; BSR set to: 13
 49958  010412  0E5B               	movlw	low _device_dsc
 49959  010414  6E52               	movwf	_inPipes,c	;volatile
 49960  010416  0EA2               	movlw	high _device_dsc
 49961  010418  6E53               	movwf	_inPipes+1,c	;volatile
 49962                           
 49963                           ; BSR set to: 13
 49964                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 49965  01041A  0E00               	movlw	0
 49966  01041C  6E57               	movwf	_inPipes+5,c	;volatile
 49967  01041E  0E12               	movlw	18
 49968  010420  6E56               	movwf	_inPipes+4,c	;volatile
 49969                           
 49970                           ;usb_device.c: 2060: break;
 49971  010422  0012               	return	
 49972  010424                     
 49973                           ; BSR set to: 13
 49974                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 49975                           
 49976                           ; BSR set to: 13
 49977  010424  5132               	movf	50,w,b	;volatile
 49978  010426  A4D8               	btfss	status,2,c
 49979  010428  D042               	goto	i2l284
 49980                           
 49981                           ; BSR set to: 13
 49982                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 49983  01042A  5132               	movf	50,w,b	;volatile
 49984  01042C  0D02               	mullw	2
 49985  01042E  0EEC               	movlw	low _USB_CD_Ptr
 49986  010430  24F3               	addwf	prodl,w,c
 49987  010432  6EF6               	movwf	tblptrl,c
 49988  010434  0E9D               	movlw	high _USB_CD_Ptr
 49989  010436  20F4               	addwfc	prodh,w,c
 49990  010438  6EF7               	movwf	tblptrh,c
 49991  01043A                     	if	1	;There are 3 active tblptr bytes
 49992  01043A  6AF8               	clrf	tblptru,c
 49993  01043C  0E00               	movlw	low (__mediumconst shr (0+16))
 49994  01043E  22F8               	addwfc	tblptru,f,c
 49995  010440                     	endif
 49996  010440  0009               	tblrd		*+
 49997  010442  CFF5 F052          	movff	tablat,_inPipes	;volatile
 49998  010446  000A               	tblrd		*-
 49999  010448  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 50000                           
 50001                           ; BSR set to: 13
 50002                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 50003  01044C  0E02               	movlw	2
 50004  01044E  2452               	addwf	_inPipes,w,c	;volatile
 50005  010450  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50006  010452  0E00               	movlw	0
 50007  010454  2053               	addwfc	_inPipes+1,w,c	;volatile
 50008  010456  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 50009  010458  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 50010  01045C  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 50011  010460  0E00               	movlw	low (__mediumconst shr (0+16))
 50012  010462  6EF8               	movwf	tblptru,c
 50013  010464  0E0E               	movlw	(high __ramtop+-1)
 50014  010466  64F7               	cpfsgt	tblptrh,c
 50015  010468  D003               	bra	i2u1208_47
 50016  01046A  0008               	tblrd		*
 50017  01046C  50F5               	movf	tablat,w,c
 50018  01046E  D005               	bra	i2u1208_40
 50019  010470                     i2u1208_47:
 50020  010470  CFF6 FFE9          	movff	tblptrl,fsr0l
 50021  010474  CFF7 FFEA          	movff	tblptrh,fsr0h
 50022  010478  50EF               	movf	indf0,w,c
 50023  01047A                     i2u1208_40:
 50024  01047A  6E56               	movwf	_inPipes+4,c	;volatile
 50025                           
 50026                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 50027  01047C  0E03               	movlw	3
 50028  01047E  2452               	addwf	_inPipes,w,c	;volatile
 50029  010480  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50030  010482  0E00               	movlw	0
 50031  010484  2053               	addwfc	_inPipes+1,w,c	;volatile
 50032  010486  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 50033  010488  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 50034  01048C  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 50035  010490  0E00               	movlw	low (__mediumconst shr (0+16))
 50036  010492  6EF8               	movwf	tblptru,c
 50037  010494  0E0E               	movlw	(high __ramtop+-1)
 50038  010496  64F7               	cpfsgt	tblptrh,c
 50039  010498  D003               	bra	i2u1209_47
 50040  01049A  0008               	tblrd		*
 50041  01049C  50F5               	movf	tablat,w,c
 50042  01049E  D005               	bra	i2u1209_40
 50043  0104A0                     i2u1209_47:
 50044  0104A0  CFF6 FFE9          	movff	tblptrl,fsr0l
 50045  0104A4  CFF7 FFEA          	movff	tblptrh,fsr0h
 50046  0104A8  50EF               	movf	indf0,w,c
 50047  0104AA                     i2u1209_40:
 50048  0104AA  6E57               	movwf	_inPipes+5,c	;volatile
 50049                           
 50050                           ;usb_device.c: 2078: }
 50051  0104AC  0012               	return	
 50052  0104AE                     i2l284:
 50053                           
 50054                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 50055  0104AE  0E00               	movlw	0
 50056  0104B0  6E55               	movwf	_inPipes+3,c	;volatile
 50057                           
 50058                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 50059  0104B2  0012               	return	
 50060  0104B4                     
 50061                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 50062  0104B4  0E04               	movlw	4
 50063  0104B6  010D               	movlb	13	; () banked
 50064  0104B8  6132               	cpfslt	50,b	;volatile
 50065  0104BA  D027               	goto	i2l287
 50066                           
 50067                           ; BSR set to: 13
 50068                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 50069  0104BC  5132               	movf	50,w,b	;volatile
 50070  0104BE  0D02               	mullw	2
 50071  0104C0  0EE4               	movlw	low _USB_SD_Ptr
 50072  0104C2  24F3               	addwf	prodl,w,c
 50073  0104C4  6EF6               	movwf	tblptrl,c
 50074  0104C6  0E9D               	movlw	high _USB_SD_Ptr
 50075  0104C8  20F4               	addwfc	prodh,w,c
 50076  0104CA  6EF7               	movwf	tblptrh,c
 50077  0104CC                     	if	1	;There are 3 active tblptr bytes
 50078  0104CC  6AF8               	clrf	tblptru,c
 50079  0104CE  0E00               	movlw	low (__mediumconst shr (0+16))
 50080  0104D0  22F8               	addwfc	tblptru,f,c
 50081  0104D2                     	endif
 50082  0104D2  0009               	tblrd		*+
 50083  0104D4  CFF5 F052          	movff	tablat,_inPipes	;volatile
 50084  0104D8  000A               	tblrd		*-
 50085  0104DA  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 50086                           
 50087                           ; BSR set to: 13
 50088                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 50089  0104DE  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 50090  0104E2  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 50091  0104E6  0E00               	movlw	low (__mediumconst shr (0+16))
 50092  0104E8  6EF8               	movwf	tblptru,c
 50093  0104EA  0E0E               	movlw	(high __ramtop+-1)
 50094  0104EC  64F7               	cpfsgt	tblptrh,c
 50095  0104EE  D003               	bra	i2u1211_47
 50096  0104F0  0008               	tblrd		*
 50097  0104F2  50F5               	movf	tablat,w,c
 50098  0104F4  D005               	bra	i2u1211_40
 50099  0104F6                     i2u1211_47:
 50100  0104F6  CFF6 FFE9          	movff	tblptrl,fsr0l
 50101  0104FA  CFF7 FFEA          	movff	tblptrh,fsr0h
 50102  0104FE  50EF               	movf	indf0,w,c
 50103  010500                     i2u1211_40:
 50104  010500  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50105  010502  5001               	movf	??_USBStdGetDscHandler,w,c
 50106  010504  6E56               	movwf	_inPipes+4,c	;volatile
 50107  010506  6A57               	clrf	_inPipes+5,c	;volatile
 50108                           
 50109                           ;usb_device.c: 2094: }
 50110  010508  0012               	return	
 50111  01050A                     i2l287:
 50112                           
 50113                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 50114  01050A  0E00               	movlw	0
 50115  01050C  6E55               	movwf	_inPipes+3,c	;volatile
 50116                           
 50117                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 50118  01050E  0012               	return	
 50119  010510                     
 50120                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 50121  010510  0E00               	movlw	0
 50122  010512  6E55               	movwf	_inPipes+3,c	;volatile
 50123                           
 50124                           ;usb_device.c: 2112: }
 50125                           
 50126                           ;usb_device.c: 2111: break;
 50127  010514  0012               	return	
 50128  010516                     i2l280:
 50129  010516  010D               	movlb	13	; () banked
 50130  010518  5133               	movf	51,w,b	;volatile
 50131                           
 50132                           ; Switch size 1, requested type "space"
 50133                           ; Number of cases is 3, Range of values is 1 to 3
 50134                           ; switch strategies available:
 50135                           ; Name         Instructions Cycles
 50136                           ; simple_byte           10     6 (average)
 50137                           ;	Chosen strategy is simple_byte
 50138  01051A  0A01               	xorlw	1	; case 1
 50139  01051C  B4D8               	btfsc	status,2,c
 50140  01051E  D779               	goto	i2l281
 50141  010520  0A03               	xorlw	3	; case 2
 50142  010522  B4D8               	btfsc	status,2,c
 50143  010524  D77F               	goto	i2l283
 50144  010526  0A01               	xorlw	1	; case 3
 50145  010528  B4D8               	btfsc	status,2,c
 50146  01052A  D7C4               	goto	i2l286
 50147  01052C  D7F1               	goto	i2l289
 50148  01052E                     __end_of_USBStdGetDscHandler:
 50149                           	opt stack 0
 50150                           tosu	equ	0xFFF
 50151                           tosh	equ	0xFFE
 50152                           tosl	equ	0xFFD
 50153                           pclatu	equ	0xFFB
 50154                           pclath	equ	0xFFA
 50155                           tblptru	equ	0xFF8
 50156                           tblptrh	equ	0xFF7
 50157                           tblptrl	equ	0xFF6
 50158                           tablat	equ	0xFF5
 50159                           prodh	equ	0xFF4
 50160                           prodl	equ	0xFF3
 50161                           intcon	equ	0xFF2
 50162                           indf0	equ	0xFEF
 50163                           postinc0	equ	0xFEE
 50164                           fsr0h	equ	0xFEA
 50165                           fsr0l	equ	0xFE9
 50166                           wreg	equ	0xFE8
 50167                           indf1	equ	0xFE7
 50168                           postinc1	equ	0xFE6
 50169                           postdec1	equ	0xFE5
 50170                           plusw1	equ	0xFE3
 50171                           fsr1h	equ	0xFE2
 50172                           fsr1l	equ	0xFE1
 50173                           indf2	equ	0xFDF
 50174                           postinc2	equ	0xFDE
 50175                           postdec2	equ	0xFDD
 50176                           plusw2	equ	0xFDB
 50177                           fsr2h	equ	0xFDA
 50178                           fsr2l	equ	0xFD9
 50179                           status	equ	0xFD8
 50180                           
 50181 ;; *************** function _USBStdFeatureReqHandler *****************
 50182 ;; Defined at:
 50183 ;;		line 2756 in file "usb_device.c"
 50184 ;; Parameters:    Size  Location     Type
 50185 ;;		None
 50186 ;; Auto vars:     Size  Location     Type
 50187 ;;  p               2   27[COMRAM] PTR struct __BDT
 50188 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 50189 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 50190 ;;		 -> UEP0(1), 
 50191 ;;  current_ep_d    1   26[COMRAM] struct .
 50192 ;; Return value:  Size  Location     Type
 50193 ;;                  1    wreg      void 
 50194 ;; Registers used:
 50195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50196 ;; Tracked objects:
 50197 ;;		On entry : 0/0
 50198 ;;		On exit  : 0/0
 50199 ;;		Unchanged: 0/0
 50200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50202 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50204 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50205 ;;Total ram usage:        6 bytes
 50206 ;; Hardware stack levels used:    1
 50207 ;; Hardware stack levels required when called:    4
 50208 ;; This function calls:
 50209 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50210 ;; This function is called by:
 50211 ;;		_USBCheckStdRequest
 50212 ;; This function uses a non-reentrant model
 50213 ;;
 50214                           
 50215                           	psect	text210
 50216  00DEB2                     __ptext210:
 50217                           	opt stack 0
 50218  00DEB2                     _USBStdFeatureReqHandler:
 50219                           	opt stack 9
 50220                           
 50221                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 50222                           
 50223                           ;incstack = 0
 50224  00DEB2  010D               	movlb	13	; () banked
 50225  00DEB4  0532               	decf	50,w,b	;volatile
 50226  00DEB6  A4D8               	btfss	status,2,c
 50227  00DEB8  D00F               	goto	i2l373
 50228                           
 50229                           ; BSR set to: 13
 50230  00DEBA  5130               	movf	48,w,b	;volatile
 50231  00DEBC  0B1F               	andlw	31
 50232  00DEBE  0900               	iorlw	0
 50233  00DEC0  A4D8               	btfss	status,2,c
 50234  00DEC2  D00A               	goto	i2l373
 50235                           
 50236                           ; BSR set to: 13
 50237                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 50238  00DEC4  8E55               	bsf	_inPipes+3,7,c	;volatile
 50239                           
 50240                           ; BSR set to: 13
 50241                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 50242  00DEC6  0E03               	movlw	3
 50243  00DEC8  1931               	xorwf	49,w,b	;volatile
 50244  00DECA  A4D8               	btfss	status,2,c
 50245  00DECC  D002               	goto	i2l372
 50246                           
 50247                           ; BSR set to: 13
 50248                           ;usb_device.c: 2806: RemoteWakeup = 1;
 50249  00DECE  0E01               	movlw	1
 50250  00DED0  D001               	goto	L78
 50251  00DED2                     i2l372:
 50252                           
 50253                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 50254                           
 50255                           ; BSR set to: 1
 50256  00DED2  0E00               	movlw	0
 50257  00DED4                     L78:
 50258  00DED4  0101               	movlb	1	; () banked
 50259  00DED6  6F6E               	movwf	_RemoteWakeup& (0+255),b	;volatile
 50260  00DED8                     i2l373:
 50261                           
 50262                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 50263                           
 50264                           ; BSR set to: 1
 50265  00DED8  010D               	movlb	13	; () banked
 50266  00DEDA  5132               	movf	50,w,b	;volatile
 50267  00DEDC  A4D8               	btfss	status,2,c
 50268  00DEDE  0012               	return	
 50269                           
 50270                           ; BSR set to: 13
 50271  00DEE0  5130               	movf	48,w,b	;volatile
 50272  00DEE2  0B1F               	andlw	31
 50273  00DEE4  0A02               	xorlw	2
 50274  00DEE6  A4D8               	btfss	status,2,c
 50275  00DEE8  0012               	return	
 50276                           
 50277                           ; BSR set to: 13
 50278  00DEEA  5134               	movf	52,w,b	;volatile
 50279  00DEEC  0B0F               	andlw	15
 50280  00DEEE  0900               	iorlw	0
 50281  00DEF0  B4D8               	btfsc	status,2,c
 50282  00DEF2  0012               	return	
 50283                           
 50284                           ; BSR set to: 13
 50285  00DEF4  5134               	movf	52,w,b	;volatile
 50286  00DEF6  0B0F               	andlw	15
 50287  00DEF8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50288  00DEFA  0E03               	movlw	3
 50289  00DEFC  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 50290  00DEFE  0012               	return	
 50291                           
 50292                           ; BSR set to: 13
 50293  00DF00  0E20               	movlw	32
 50294  00DF02  185E               	xorwf	_USBDeviceState,w,c	;volatile
 50295  00DF04  A4D8               	btfss	status,2,c
 50296  00DF06  0012               	return	
 50297                           
 50298                           ; BSR set to: 13
 50299                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 50300  00DF08  8E55               	bsf	_inPipes+3,7,c	;volatile
 50301                           
 50302                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 50303  00DF0A  BF34               	btfsc	52,7,b	;volatile
 50304  00DF0C  D019               	goto	i2l375
 50305                           
 50306                           ; BSR set to: 13
 50307                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 50308  00DF0E  5134               	movf	52,w,b	;volatile
 50309  00DF10  0B0F               	andlw	15
 50310  00DF12  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50311  00DF14  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50312  00DF16  0D02               	mullw	2
 50313  00DF18  0E21               	movlw	low _pBDTEntryOut
 50314  00DF1A  24F3               	addwf	prodl,w,c
 50315  00DF1C  6ED9               	movwf	fsr2l,c
 50316  00DF1E  0E01               	movlw	high _pBDTEntryOut
 50317  00DF20  20F4               	addwfc	prodh,w,c
 50318  00DF22  6EDA               	movwf	fsr2h,c
 50319  00DF24  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 50320  00DF28  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 50321                           
 50322                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 50323  00DF2C  5134               	movf	52,w,b	;volatile
 50324  00DF2E  0B0F               	andlw	15
 50325  00DF30  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50326  00DF32  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50327  00DF34  0D01               	mullw	1
 50328  00DF36  0E39               	movlw	low _ep_data_out
 50329  00DF38  24F3               	addwf	prodl,w,c
 50330  00DF3A  6ED9               	movwf	fsr2l,c
 50331  00DF3C  0E01               	movlw	high _ep_data_out
 50332  00DF3E  D018               	goto	L79
 50333  00DF40                     i2l375:
 50334                           
 50335                           ; BSR set to: 13
 50336                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 50337                           
 50338                           ; BSR set to: 13
 50339  00DF40  5134               	movf	52,w,b	;volatile
 50340  00DF42  0B0F               	andlw	15
 50341  00DF44  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50342  00DF46  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50343  00DF48  0D02               	mullw	2
 50344  00DF4A  0E1B               	movlw	low _pBDTEntryIn
 50345  00DF4C  24F3               	addwf	prodl,w,c
 50346  00DF4E  6ED9               	movwf	fsr2l,c
 50347  00DF50  0E01               	movlw	high _pBDTEntryIn
 50348  00DF52  20F4               	addwfc	prodh,w,c
 50349  00DF54  6EDA               	movwf	fsr2h,c
 50350  00DF56  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 50351  00DF5A  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 50352                           
 50353                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 50354  00DF5E  5134               	movf	52,w,b	;volatile
 50355  00DF60  0B0F               	andlw	15
 50356  00DF62  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50357  00DF64  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50358  00DF66  0D01               	mullw	1
 50359  00DF68  0E3C               	movlw	low _ep_data_in
 50360  00DF6A  24F3               	addwf	prodl,w,c
 50361  00DF6C  6ED9               	movwf	fsr2l,c
 50362  00DF6E  0E01               	movlw	high _ep_data_in
 50363  00DF70                     L79:
 50364  00DF70  20F4               	addwfc	prodh,w,c
 50365  00DF72  6EDA               	movwf	fsr2h,c
 50366  00DF74  50DF               	movf	indf2,w,c
 50367  00DF76  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 50368                           
 50369                           ; BSR set to: 13
 50370                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 50371                           
 50372                           ; BSR set to: 13
 50373  00DF78  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 50374  00DF7A  D006               	goto	i2l377
 50375                           
 50376                           ; BSR set to: 13
 50377                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 50378  00DF7C  0EFB               	movlw	251
 50379  00DF7E  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 50380  00DF80  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 50381  00DF82  0EFF               	movlw	255
 50382  00DF84  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 50383  00DF86  D004               	goto	L80
 50384  00DF88                     i2l377:
 50385                           
 50386                           ; BSR set to: 13
 50387                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 50388                           
 50389                           ; BSR set to: 13
 50390  00DF88  0E04               	movlw	4
 50391  00DF8A  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 50392  00DF8C  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 50393  00DF8E  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 50394  00DF90                     L80:
 50395  00DF90  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 50396                           
 50397                           ; BSR set to: 13
 50398                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 50399                           
 50400                           ; BSR set to: 13
 50401  00DF92  BF34               	btfsc	52,7,b	;volatile
 50402  00DF94  D00A               	goto	i2l379
 50403                           
 50404                           ; BSR set to: 13
 50405                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 50406  00DF96  5134               	movf	52,w,b	;volatile
 50407  00DF98  0B0F               	andlw	15
 50408  00DF9A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50409  00DF9C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50410  00DF9E  0D02               	mullw	2
 50411  00DFA0  0E21               	movlw	low _pBDTEntryOut
 50412  00DFA2  24F3               	addwf	prodl,w,c
 50413  00DFA4  6ED9               	movwf	fsr2l,c
 50414  00DFA6  0E01               	movlw	high _pBDTEntryOut
 50415  00DFA8  D009               	goto	L81
 50416  00DFAA                     i2l379:
 50417                           
 50418                           ; BSR set to: 13
 50419                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 50420                           
 50421                           ; BSR set to: 13
 50422  00DFAA  5134               	movf	52,w,b	;volatile
 50423  00DFAC  0B0F               	andlw	15
 50424  00DFAE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50425  00DFB0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50426  00DFB2  0D02               	mullw	2
 50427  00DFB4  0E1B               	movlw	low _pBDTEntryIn
 50428  00DFB6  24F3               	addwf	prodl,w,c
 50429  00DFB8  6ED9               	movwf	fsr2l,c
 50430  00DFBA  0E01               	movlw	high _pBDTEntryIn
 50431  00DFBC                     L81:
 50432  00DFBC  20F4               	addwfc	prodh,w,c
 50433  00DFBE  6EDA               	movwf	fsr2h,c
 50434  00DFC0  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 50435  00DFC4  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 50436                           
 50437                           ; BSR set to: 13
 50438                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 50439                           
 50440                           ; BSR set to: 13
 50441  00DFC8  0E03               	movlw	3
 50442  00DFCA  1931               	xorwf	49,w,b	;volatile
 50443  00DFCC  A4D8               	btfss	status,2,c
 50444  00DFCE  D02D               	goto	i2l381
 50445                           
 50446                           ; BSR set to: 13
 50447                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 50448  00DFD0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50449  00DFD4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50450  00DFD8  AEDF               	btfss	indf2,7,c
 50451  00DFDA  D01A               	goto	i2l384
 50452                           
 50453                           ; BSR set to: 13
 50454                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 50455  00DFDC  BF34               	btfsc	52,7,b	;volatile
 50456  00DFDE  D00A               	goto	i2l383
 50457                           
 50458                           ; BSR set to: 13
 50459                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 50460  00DFE0  5134               	movf	52,w,b	;volatile
 50461  00DFE2  0B0F               	andlw	15
 50462  00DFE4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50463  00DFE6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50464  00DFE8  0D01               	mullw	1
 50465  00DFEA  0E39               	movlw	low _ep_data_out
 50466  00DFEC  24F3               	addwf	prodl,w,c
 50467  00DFEE  6ED9               	movwf	fsr2l,c
 50468  00DFF0  0E01               	movlw	high _ep_data_out
 50469  00DFF2  D00A               	goto	L82
 50470  00DFF4                     i2l383:
 50471                           
 50472                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 50473                           
 50474                           ; BSR set to: 1
 50475  00DFF4  010D               	movlb	13	; () banked
 50476  00DFF6  5134               	movf	52,w,b	;volatile
 50477  00DFF8  0B0F               	andlw	15
 50478  00DFFA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50479  00DFFC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50480  00DFFE  0D01               	mullw	1
 50481  00E000  0E3C               	movlw	low _ep_data_in
 50482  00E002  24F3               	addwf	prodl,w,c
 50483  00E004  6ED9               	movwf	fsr2l,c
 50484  00E006  0E01               	movlw	high _ep_data_in
 50485  00E008                     L82:
 50486  00E008  20F4               	addwfc	prodh,w,c
 50487  00E00A  6EDA               	movwf	fsr2h,c
 50488  00E00C  0101               	movlb	1	; () banked
 50489  00E00E  82DF               	bsf	indf2,1,c
 50490  00E010                     i2l384:
 50491                           
 50492                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 50493                           
 50494                           ; BSR set to: 1
 50495                           
 50496                           ; BSR set to: 1
 50497  00E010  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50498  00E014  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50499  00E018  0E00               	movlw	0
 50500  00E01A  84DB               	bsf	plusw2,2,c
 50501                           
 50502                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 50503  00E01C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50504  00E020  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50505  00E024  0E00               	movlw	0
 50506  00E026  8EDB               	bsf	plusw2,7,c
 50507                           
 50508                           ;usb_device.c: 2878: }
 50509  00E028  0012               	return	
 50510  00E02A                     i2l381:
 50511                           
 50512                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 50513  00E02A  0E04               	movlw	4
 50514  00E02C  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 50515  00E02E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 50516  00E030  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 50517  00E032  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 50518                           
 50519                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 50520  00E034  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50521  00E038  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50522  00E03C  AEDF               	btfss	indf2,7,c
 50523  00E03E  D01B               	goto	i2l386
 50524                           
 50525                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 50526  00E040  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50527  00E044  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50528  00E048  0E7F               	movlw	127
 50529  00E04A  16DF               	andwf	indf2,f,c
 50530                           
 50531                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 50532  00E04C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50533  00E050  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50534  00E054  0E00               	movlw	0
 50535  00E056  8CDB               	bsf	plusw2,6,c
 50536                           
 50537                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 50538  00E058  0E00               	movlw	0
 50539  00E05A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50540  00E05C  0E05               	movlw	5
 50541  00E05E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50542  00E060  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 50543  00E064  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 50544  00E068  0E00               	movlw	0
 50545  00E06A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50546  00E06C  0E02               	movlw	2
 50547  00E06E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50548  00E070  EC79  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50549                           
 50550                           ;usb_device.c: 2893: }
 50551  00E074  D006               	goto	i2l387
 50552  00E076                     i2l386:
 50553                           
 50554                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 50555  00E076  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50556  00E07A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50557  00E07E  0E00               	movlw	0
 50558  00E080  8CDB               	bsf	plusw2,6,c
 50559  00E082                     i2l387:
 50560                           
 50561                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 50562  00E082  0E04               	movlw	4
 50563  00E084  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 50564  00E086  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 50565  00E088  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 50566  00E08A  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 50567                           
 50568                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 50569  00E08C  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 50570  00E08E  D006               	goto	i2u1233_40
 50571  00E090  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50572  00E094  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50573  00E098  AEDF               	btfss	indf2,7,c
 50574  00E09A  D030               	goto	i2l388
 50575  00E09C                     i2u1233_40:
 50576                           
 50577                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 50578  00E09C  010D               	movlb	13	; () banked
 50579  00E09E  BF34               	btfsc	52,7,b	;volatile
 50580  00E0A0  D00A               	goto	i2l391
 50581                           
 50582                           ; BSR set to: 13
 50583                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 50584  00E0A2  5134               	movf	52,w,b	;volatile
 50585  00E0A4  0B0F               	andlw	15
 50586  00E0A6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50587  00E0A8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50588  00E0AA  0D01               	mullw	1
 50589  00E0AC  0E39               	movlw	low _ep_data_out
 50590  00E0AE  24F3               	addwf	prodl,w,c
 50591  00E0B0  6ED9               	movwf	fsr2l,c
 50592  00E0B2  0E01               	movlw	high _ep_data_out
 50593  00E0B4  D00A               	goto	L83
 50594  00E0B6                     i2l391:
 50595                           
 50596                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 50597                           
 50598                           ; BSR set to: 1
 50599  00E0B6  010D               	movlb	13	; () banked
 50600  00E0B8  5134               	movf	52,w,b	;volatile
 50601  00E0BA  0B0F               	andlw	15
 50602  00E0BC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50603  00E0BE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50604  00E0C0  0D01               	mullw	1
 50605  00E0C2  0E3C               	movlw	low _ep_data_in
 50606  00E0C4  24F3               	addwf	prodl,w,c
 50607  00E0C6  6ED9               	movwf	fsr2l,c
 50608  00E0C8  0E01               	movlw	high _ep_data_in
 50609  00E0CA                     L83:
 50610  00E0CA  20F4               	addwfc	prodh,w,c
 50611  00E0CC  6EDA               	movwf	fsr2h,c
 50612  00E0CE  0101               	movlb	1	; () banked
 50613  00E0D0  92DF               	bcf	indf2,1,c
 50614                           
 50615                           ; BSR set to: 1
 50616                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 50617                           
 50618                           ; BSR set to: 1
 50619  00E0D2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50620  00E0D6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50621  00E0DA  0E3B               	movlw	59
 50622  00E0DC  16DF               	andwf	indf2,f,c
 50623                           
 50624                           ; BSR set to: 1
 50625                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 50626  00E0DE  0E00               	movlw	0
 50627  00E0E0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50628  00E0E2  0E05               	movlw	5
 50629  00E0E4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50630  00E0E6  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 50631  00E0EA  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 50632  00E0EE  0E00               	movlw	0
 50633  00E0F0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50634  00E0F2  0E02               	movlw	2
 50635  00E0F4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50636  00E0F6  EC79  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50637                           
 50638                           ;usb_device.c: 2923: }
 50639  00E0FA  D006               	goto	i2l393
 50640  00E0FC                     i2l388:
 50641                           
 50642                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 50643  00E0FC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 50644  00E100  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 50645  00E104  0E3B               	movlw	59
 50646  00E106  16DF               	andwf	indf2,f,c
 50647  00E108                     i2l393:
 50648                           
 50649                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 50650  00E108  010D               	movlb	13	; () banked
 50651  00E10A  5134               	movf	52,w,b	;volatile
 50652  00E10C  0B0F               	andlw	15
 50653  00E10E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 50654  00E110  5018               	movf	??_USBStdFeatureReqHandler,w,c
 50655  00E112  0D01               	mullw	1
 50656  00E114  0E26               	movlw	38
 50657  00E116  24F3               	addwf	prodl,w,c
 50658  00E118  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 50659  00E11A  0E0F               	movlw	15
 50660  00E11C  20F4               	addwfc	prodh,w,c
 50661  00E11E  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 50662                           
 50663                           ; BSR set to: 13
 50664                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 50665  00E120  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 50666  00E124  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 50667  00E128  0EFE               	movlw	254
 50668  00E12A  16DF               	andwf	indf2,f,c
 50669                           
 50670                           ; BSR set to: 13
 50671  00E12C  0012               	return	
 50672  00E12E                     __end_of_USBStdFeatureReqHandler:
 50673                           	opt stack 0
 50674                           tosu	equ	0xFFF
 50675                           tosh	equ	0xFFE
 50676                           tosl	equ	0xFFD
 50677                           pclatu	equ	0xFFB
 50678                           pclath	equ	0xFFA
 50679                           tblptru	equ	0xFF8
 50680                           tblptrh	equ	0xFF7
 50681                           tblptrl	equ	0xFF6
 50682                           tablat	equ	0xFF5
 50683                           prodh	equ	0xFF4
 50684                           prodl	equ	0xFF3
 50685                           intcon	equ	0xFF2
 50686                           indf0	equ	0xFEF
 50687                           postinc0	equ	0xFEE
 50688                           fsr0h	equ	0xFEA
 50689                           fsr0l	equ	0xFE9
 50690                           wreg	equ	0xFE8
 50691                           indf1	equ	0xFE7
 50692                           postinc1	equ	0xFE6
 50693                           postdec1	equ	0xFE5
 50694                           plusw1	equ	0xFE3
 50695                           fsr1h	equ	0xFE2
 50696                           fsr1l	equ	0xFE1
 50697                           indf2	equ	0xFDF
 50698                           postinc2	equ	0xFDE
 50699                           postdec2	equ	0xFDD
 50700                           plusw2	equ	0xFDB
 50701                           fsr2h	equ	0xFDA
 50702                           fsr2l	equ	0xFD9
 50703                           status	equ	0xFD8
 50704                           
 50705 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 50706 ;; Defined at:
 50707 ;;		line 54 in file "usb_events.c"
 50708 ;; Parameters:    Size  Location     Type
 50709 ;;  event           2   15[COMRAM] enum E6832
 50710 ;;  pdata           2   17[COMRAM] PTR void 
 50711 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 50712 ;;		 -> BDT(48), 
 50713 ;;  size            2   19[COMRAM] unsigned int 
 50714 ;; Auto vars:     Size  Location     Type
 50715 ;;		None
 50716 ;; Return value:  Size  Location     Type
 50717 ;;                  1    wreg      unsigned char 
 50718 ;; Registers used:
 50719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50720 ;; Tracked objects:
 50721 ;;		On entry : 0/0
 50722 ;;		On exit  : 0/0
 50723 ;;		Unchanged: 0/0
 50724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50725 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50727 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50728 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50729 ;;Total ram usage:        8 bytes
 50730 ;; Hardware stack levels used:    1
 50731 ;; Hardware stack levels required when called:    3
 50732 ;; This function calls:
 50733 ;;		_APP_DeviceCustomHIDInitialize
 50734 ;;		_APP_DeviceMSDInitialize
 50735 ;;		_MSDTransferTerminated
 50736 ;;		_USBCheckHIDRequest
 50737 ;;		_USBCheckMSDRequest
 50738 ;;		i2_SYSTEM_Initialize
 50739 ;; This function is called by:
 50740 ;;		_USBDeviceTasks
 50741 ;;		_USBStdSetCfgHandler
 50742 ;;		_USBSuspend
 50743 ;;		_USBWakeFromSuspend
 50744 ;;		_USBCtrlTrfSetupHandler
 50745 ;;		_USBCheckStdRequest
 50746 ;;		_USBStdFeatureReqHandler
 50747 ;; This function uses a non-reentrant model
 50748 ;;
 50749                           
 50750                           	psect	text211
 50751  0136F2                     __ptext211:
 50752                           	opt stack 0
 50753  0136F2                     _USER_USB_CALLBACK_EVENT_HANDLER:
 50754                           	opt stack 13
 50755                           
 50756                           ;usb_events.c: 56: switch((int)event)
 50757                           
 50758                           ;incstack = 0
 50759  0136F2  D019               	goto	i2l816
 50760  0136F4                     
 50761                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 50762  0136F4  0E01               	movlw	1
 50763  0136F6  EC1D  F0A4         	call	i2_SYSTEM_Initialize
 50764                           
 50765                           ;usb_events.c: 79: break;
 50766  0136FA  0012               	return	
 50767  0136FC                     
 50768                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 50769  0136FC  0E02               	movlw	2
 50770  0136FE  EC1D  F0A4         	call	i2_SYSTEM_Initialize
 50771                           
 50772                           ;usb_events.c: 90: break;
 50773  013702  0012               	return	
 50774  013704                     
 50775                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 50776  013704  EC37  F0A8         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 50777                           
 50778                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 50779  013708  EC11  F0AB         	call	_APP_DeviceMSDInitialize	;wreg free
 50780                           
 50781                           ;usb_events.c: 100: break;
 50782                           
 50783                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 50784                           
 50785                           ;usb_events.c: 97: break;
 50786  01370C  0012               	return	
 50787  01370E                     
 50788                           ;usb_events.c: 105: USBCheckHIDRequest();
 50789  01370E  EC99  F090         	call	_USBCheckHIDRequest	;wreg free
 50790                           
 50791                           ;usb_events.c: 108: USBCheckMSDRequest();
 50792  013712  EC2D  F094         	call	_USBCheckMSDRequest	;wreg free
 50793                           
 50794                           ;usb_events.c: 112: break;
 50795                           
 50796                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 50797                           
 50798                           ;usb_events.c: 109: break;
 50799  013716  0012               	return	
 50800  013718                     
 50801                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 50802  013718  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 50803  01371C  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 50804  013720  EC74  F0A3         	call	_MSDTransferTerminated	;wreg free
 50805                           
 50806                           ;usb_events.c: 129: }
 50807                           
 50808                           ;usb_events.c: 128: break;
 50809                           
 50810                           ;usb_events.c: 127: default:
 50811                           
 50812                           ;usb_events.c: 125: break;
 50813  013724  0012               	return	
 50814  013726                     i2l816:
 50815  013726  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 50816  01372A  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 50817                           
 50818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 50819                           ; Switch size 1, requested type "space"
 50820                           ; Number of cases is 2, Range of values is 0 to 127
 50821                           ; switch strategies available:
 50822                           ; Name         Instructions Cycles
 50823                           ; simple_byte            7     4 (average)
 50824                           ;	Chosen strategy is simple_byte
 50825  01372E  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 50826  013730  0A00               	xorlw	0	; case 0
 50827  013732  B4D8               	btfsc	status,2,c
 50828  013734  D004               	goto	i2l19222
 50829  013736  0A7F               	xorlw	127	; case 127
 50830  013738  A4D8               	btfss	status,2,c
 50831  01373A  0012               	return	
 50832  01373C  D01A               	goto	i2l19224
 50833  01373E                     i2l19222:
 50834                           
 50835                           ; Switch size 1, requested type "space"
 50836                           ; Number of cases is 8, Range of values is 1 to 117
 50837                           ; switch strategies available:
 50838                           ; Name         Instructions Cycles
 50839                           ; simple_byte           25    13 (average)
 50840                           ;	Chosen strategy is simple_byte
 50841  01373E  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 50842  013740  0A01               	xorlw	1	; case 1
 50843  013742  B4D8               	btfsc	status,2,c
 50844  013744  D7DF               	goto	i2l822
 50845  013746  0A03               	xorlw	3	; case 2
 50846  013748  B4D8               	btfsc	status,2,c
 50847  01374A  0012               	return	
 50848  01374C  0A01               	xorlw	1	; case 3
 50849  01374E  B4D8               	btfsc	status,2,c
 50850  013750  D7DE               	goto	i2l824
 50851  013752  0A06               	xorlw	6	; case 5
 50852  013754  B4D8               	btfsc	status,2,c
 50853  013756  D7E0               	goto	i2l826
 50854  013758  0A77               	xorlw	119	; case 114
 50855  01375A  B4D8               	btfsc	status,2,c
 50856  01375C  0012               	return	
 50857  01375E  0A01               	xorlw	1	; case 115
 50858  013760  B4D8               	btfsc	status,2,c
 50859  013762  0012               	return	
 50860  013764  0A07               	xorlw	7	; case 116
 50861  013766  B4D8               	btfsc	status,2,c
 50862  013768  D7C9               	goto	i2l821
 50863  01376A  0A01               	xorlw	1	; case 117
 50864  01376C  A4D8               	btfss	status,2,c
 50865  01376E  0012               	return	
 50866  013770  D7C1               	goto	i2l820
 50867  013772                     i2l19224:
 50868                           
 50869                           ; Switch size 1, requested type "space"
 50870                           ; Number of cases is 1, Range of values is 255 to 255
 50871                           ; switch strategies available:
 50872                           ; Name         Instructions Cycles
 50873                           ; simple_byte            4     3 (average)
 50874                           ;	Chosen strategy is simple_byte
 50875  013772  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 50876  013774  0AFF               	xorlw	255	; case 255
 50877  013776  0012               	return	
 50878  013778                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 50879                           	opt stack 0
 50880                           tosu	equ	0xFFF
 50881                           tosh	equ	0xFFE
 50882                           tosl	equ	0xFFD
 50883                           pclatu	equ	0xFFB
 50884                           pclath	equ	0xFFA
 50885                           tblptru	equ	0xFF8
 50886                           tblptrh	equ	0xFF7
 50887                           tblptrl	equ	0xFF6
 50888                           tablat	equ	0xFF5
 50889                           prodh	equ	0xFF4
 50890                           prodl	equ	0xFF3
 50891                           intcon	equ	0xFF2
 50892                           indf0	equ	0xFEF
 50893                           postinc0	equ	0xFEE
 50894                           fsr0h	equ	0xFEA
 50895                           fsr0l	equ	0xFE9
 50896                           wreg	equ	0xFE8
 50897                           indf1	equ	0xFE7
 50898                           postinc1	equ	0xFE6
 50899                           postdec1	equ	0xFE5
 50900                           plusw1	equ	0xFE3
 50901                           fsr1h	equ	0xFE2
 50902                           fsr1l	equ	0xFE1
 50903                           indf2	equ	0xFDF
 50904                           postinc2	equ	0xFDE
 50905                           postdec2	equ	0xFDD
 50906                           plusw2	equ	0xFDB
 50907                           fsr2h	equ	0xFDA
 50908                           fsr2l	equ	0xFD9
 50909                           status	equ	0xFD8
 50910                           
 50911 ;; *************** function i2_SYSTEM_Initialize *****************
 50912 ;; Defined at:
 50913 ;;		line 39 in file "system.c"
 50914 ;; Parameters:    Size  Location     Type
 50915 ;;  state           1    wreg     enum E6623
 50916 ;; Auto vars:     Size  Location     Type
 50917 ;;  state           1    4[COMRAM] enum E6623
 50918 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 50919 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 50920 ;; Return value:  Size  Location     Type
 50921 ;;                  1    wreg      void 
 50922 ;; Registers used:
 50923 ;;		wreg, status,2, status,0
 50924 ;; Tracked objects:
 50925 ;;		On entry : 0/0
 50926 ;;		On exit  : 0/0
 50927 ;;		Unchanged: 0/0
 50928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50930 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50932 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50933 ;;Total ram usage:        5 bytes
 50934 ;; Hardware stack levels used:    1
 50935 ;; This function calls:
 50936 ;;		Nothing
 50937 ;; This function is called by:
 50938 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50939 ;; This function uses a non-reentrant model
 50940 ;;
 50941                           
 50942                           	psect	text212
 50943  01483A                     __ptext212:
 50944                           	opt stack 0
 50945  01483A                     i2_SYSTEM_Initialize:
 50946                           	opt stack 15
 50947                           
 50948                           ;incstack = 0
 50949                           ;i2SYSTEM_Initialize@state stored from wreg
 50950  01483A  6E05               	movwf	i2SYSTEM_Initialize@state,c
 50951                           
 50952                           ;system.c: 41: switch(state)
 50953  01483C  D01D               	goto	i2l897
 50954  01483E                     
 50955                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 50956  01483E  0E02               	movlw	2
 50957  014840  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 50958  014842  0E58               	movlw	88
 50959  014844  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 50960                           
 50961                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 50962  014846  8C9B               	bsf	3995,6,c	;volatile
 50963  014848                     i2l12762:
 50964  014848  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 50965  01484A  A0D8               	btfss	status,0,c
 50966  01484C  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 50967  01484E  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 50968  014850  E1FB               	bnz	i2l12762
 50969  014852  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 50970  014854  B4D8               	btfsc	status,2,c
 50971  014856  0012               	return	
 50972  014858  D7F7               	goto	i2l900
 50973  01485A                     
 50974                           ;system.c: 78: OSCCON = 0x70;
 50975  01485A  0E70               	movlw	112
 50976  01485C  6ED3               	movwf	4051,c	;volatile
 50977                           
 50978                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 50979  01485E  0E03               	movlw	3
 50980  014860  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,c
 50981  014862  0E20               	movlw	32
 50982  014864  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3132,c
 50983  014866                     i2l12766:
 50984  014866  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3132,f,c
 50985  014868  A0D8               	btfss	status,0,c
 50986  01486A  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,f,c
 50987  01486C  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3132,w,c
 50988  01486E  E1FB               	bnz	i2l12766
 50989  014870  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,w,c
 50990  014872  B4D8               	btfsc	status,2,c
 50991  014874  0012               	return	
 50992  014876  D7F7               	goto	i2l906
 50993  014878                     i2l897:
 50994  014878  5005               	movf	i2SYSTEM_Initialize@state,w,c
 50995                           
 50996                           ; Switch size 1, requested type "space"
 50997                           ; Number of cases is 3, Range of values is 0 to 2
 50998                           ; switch strategies available:
 50999                           ; Name         Instructions Cycles
 51000                           ; simple_byte           10     6 (average)
 51001                           ;	Chosen strategy is simple_byte
 51002  01487A  0A00               	xorlw	0	; case 0
 51003  01487C  B4D8               	btfsc	status,2,c
 51004  01487E  D7DF               	goto	i2l898
 51005  014880  0A01               	xorlw	1	; case 1
 51006  014882  B4D8               	btfsc	status,2,c
 51007  014884  0012               	return	
 51008  014886  0A03               	xorlw	3	; case 2
 51009  014888  A4D8               	btfss	status,2,c
 51010  01488A  0012               	return	
 51011  01488C  D7E6               	goto	i2l904
 51012  01488E                     __end_ofi2_SYSTEM_Initialize:
 51013                           	opt stack 0
 51014                           tosu	equ	0xFFF
 51015                           tosh	equ	0xFFE
 51016                           tosl	equ	0xFFD
 51017                           pclatu	equ	0xFFB
 51018                           pclath	equ	0xFFA
 51019                           tblptru	equ	0xFF8
 51020                           tblptrh	equ	0xFF7
 51021                           tblptrl	equ	0xFF6
 51022                           tablat	equ	0xFF5
 51023                           prodh	equ	0xFF4
 51024                           prodl	equ	0xFF3
 51025                           intcon	equ	0xFF2
 51026                           indf0	equ	0xFEF
 51027                           postinc0	equ	0xFEE
 51028                           fsr0h	equ	0xFEA
 51029                           fsr0l	equ	0xFE9
 51030                           wreg	equ	0xFE8
 51031                           indf1	equ	0xFE7
 51032                           postinc1	equ	0xFE6
 51033                           postdec1	equ	0xFE5
 51034                           plusw1	equ	0xFE3
 51035                           fsr1h	equ	0xFE2
 51036                           fsr1l	equ	0xFE1
 51037                           indf2	equ	0xFDF
 51038                           postinc2	equ	0xFDE
 51039                           postdec2	equ	0xFDD
 51040                           plusw2	equ	0xFDB
 51041                           fsr2h	equ	0xFDA
 51042                           fsr2l	equ	0xFD9
 51043                           status	equ	0xFD8
 51044                           
 51045 ;; *************** function _USBCheckMSDRequest *****************
 51046 ;; Defined at:
 51047 ;;		line 218 in file "usb_device_msd.c"
 51048 ;; Parameters:    Size  Location     Type
 51049 ;;		None
 51050 ;; Auto vars:     Size  Location     Type
 51051 ;;		None
 51052 ;; Return value:  Size  Location     Type
 51053 ;;                  1    wreg      void 
 51054 ;; Registers used:
 51055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51056 ;; Tracked objects:
 51057 ;;		On entry : 0/0
 51058 ;;		On exit  : 0/0
 51059 ;;		Unchanged: 0/0
 51060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51062 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51064 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51065 ;;Total ram usage:        4 bytes
 51066 ;; Hardware stack levels used:    1
 51067 ;; Hardware stack levels required when called:    1
 51068 ;; This function calls:
 51069 ;;		i2_USBTransferOnePacket
 51070 ;; This function is called by:
 51071 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51072 ;; This function uses a non-reentrant model
 51073 ;;
 51074                           
 51075                           	psect	text213
 51076  01285A                     __ptext213:
 51077                           	opt stack 0
 51078  01285A                     _USBCheckMSDRequest:
 51079                           	opt stack 14
 51080                           
 51081                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 51082                           
 51083                           ;incstack = 0
 51084  01285A  010D               	movlb	13	; () banked
 51085  01285C  5130               	movf	48,w,b	;volatile
 51086  01285E  0B1F               	andlw	31
 51087  012860  06E8               	decf	wreg,f,c
 51088  012862  A4D8               	btfss	status,2,c
 51089  012864  0012               	return	
 51090                           
 51091                           ; BSR set to: 13
 51092                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 51093                           
 51094                           ; BSR set to: 13
 51095                           
 51096                           ; BSR set to: 13
 51097                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 51098  012866  5134               	movf	52,w,b	;volatile
 51099  012868  A4D8               	btfss	status,2,c
 51100  01286A  0012               	return	
 51101  01286C  D04C               	goto	i2l545
 51102  01286E                     
 51103                           ; BSR set to: 13
 51104                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 51105                           
 51106                           ; BSR set to: 13
 51107  01286E  5132               	movf	50,w,b	;volatile
 51108  012870  1133               	iorwf	51,w,b	;volatile
 51109  012872  A4D8               	btfss	status,2,c
 51110  012874  0012               	return	
 51111                           
 51112                           ; BSR set to: 13
 51113  012876  5136               	movf	54,w,b	;volatile
 51114  012878  1137               	iorwf	55,w,b	;volatile
 51115  01287A  A4D8               	btfss	status,2,c
 51116  01287C  0012               	return	
 51117                           
 51118                           ; BSR set to: 13
 51119                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 51120                           
 51121                           ; BSR set to: 13
 51122                           
 51123                           ; BSR set to: 13
 51124                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 51125  01287E  0E00               	movlw	0
 51126  012880  0101               	movlb	1	; () banked
 51127  012882  6F63               	movwf	_MSD_State& (0+255),b
 51128                           
 51129                           ; BSR set to: 1
 51130                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 51131  012884  6962               	setf	_MSDCommandState& (0+255),b
 51132                           
 51133                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 51134  012886  0E00               	movlw	0
 51135  012888  6F61               	movwf	_MSDReadState& (0+255),b
 51136                           
 51137                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 51138  01288A  0E00               	movlw	0
 51139  01288C  6F60               	movwf	_MSDWriteState& (0+255),b
 51140                           
 51141                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 51142  01288E  0E01               	movlw	1
 51143  012890  6F5B               	movwf	_MSDCBWValid& (0+255),b
 51144                           
 51145                           ; BSR set to: 1
 51146                           
 51147                           ; BSR set to: 1
 51148                           
 51149                           ; BSR set to: 1
 51150                           
 51151                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 51152  012892  C125  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 51153  012896  C126  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 51154                           
 51155                           ; BSR set to: 1
 51156  01289A  500C               	movf	_USBCheckMSDRequest$2534,w,c
 51157  01289C  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 51158  01289E  B4D8               	btfsc	status,2,c
 51159  0128A0  D00A               	goto	i2u1076_40
 51160                           
 51161                           ; BSR set to: 1
 51162                           
 51163                           ; BSR set to: 1
 51164                           
 51165                           ; BSR set to: 1
 51166                           
 51167                           ; BSR set to: 1
 51168  0128A2  C125  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 51169  0128A6  C126  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 51170                           
 51171                           ; BSR set to: 1
 51172                           
 51173                           ; BSR set to: 1
 51174  0128AA  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 51175  0128AE  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 51176  0128B2  BEDF               	btfsc	indf2,7,c
 51177  0128B4  D00F               	goto	i2l550
 51178  0128B6                     i2u1076_40:
 51179                           
 51180                           ; BSR set to: 1
 51181                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 51182                           
 51183                           ; BSR set to: 1
 51184  0128B6  0E00               	movlw	0
 51185  0128B8  6E01               	movwf	i2USBTransferOnePacket@dir,c
 51186  0128BA  0E40               	movlw	64
 51187  0128BC  6E02               	movwf	i2USBTransferOnePacket@data,c
 51188  0128BE  0E0D               	movlw	13
 51189  0128C0  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 51190  0128C2  0E40               	movlw	64
 51191  0128C4  6E04               	movwf	i2USBTransferOnePacket@len,c
 51192  0128C6  0E02               	movlw	2
 51193  0128C8  EC64  F087         	call	i2_USBTransferOnePacket
 51194  0128CC  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 51195  0128D0  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 51196  0128D4                     i2l550:
 51197                           
 51198                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 51199  0128D4  0E80               	movlw	128
 51200  0128D6  6E55               	movwf	_inPipes+3,c	;volatile
 51201                           
 51202                           ;usb_device_msd.c: 263: break;
 51203  0128D8  0012               	return	
 51204  0128DA                     
 51205                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 51206  0128DA  010D               	movlb	13	; () banked
 51207  0128DC  5132               	movf	50,w,b	;volatile
 51208  0128DE  1133               	iorwf	51,w,b	;volatile
 51209  0128E0  A4D8               	btfss	status,2,c
 51210  0128E2  0012               	return	
 51211                           
 51212                           ; BSR set to: 13
 51213  0128E4  0536               	decf	54,w,b	;volatile
 51214  0128E6  1137               	iorwf	55,w,b	;volatile
 51215  0128E8  A4D8               	btfss	status,2,c
 51216  0128EA  0012               	return	
 51217                           
 51218                           ; BSR set to: 13
 51219                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 51220                           
 51221                           ; BSR set to: 13
 51222                           
 51223                           ; BSR set to: 13
 51224                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 51225  0128EC  0E00               	movlw	0
 51226  0128EE  6F38               	movwf	56,b	;volatile
 51227                           
 51228                           ; BSR set to: 13
 51229                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 51230  0128F0  0E38               	movlw	56
 51231  0128F2  6E52               	movwf	_inPipes,c	;volatile
 51232  0128F4  0E0D               	movlw	13
 51233  0128F6  6E53               	movwf	_inPipes+1,c	;volatile
 51234                           
 51235                           ; BSR set to: 13
 51236  0128F8  0E00               	movlw	0
 51237  0128FA  6E57               	movwf	_inPipes+5,c	;volatile
 51238  0128FC  0E01               	movlw	1
 51239  0128FE  6E56               	movwf	_inPipes+4,c	;volatile
 51240                           
 51241                           ; BSR set to: 13
 51242  012900  0EC1               	movlw	193
 51243  012902  6E55               	movwf	_inPipes+3,c	;volatile
 51244                           
 51245                           ; BSR set to: 13
 51246                           ;usb_device_msd.c: 278: }
 51247                           
 51248                           ;usb_device_msd.c: 277: break;
 51249  012904  0012               	return	
 51250  012906                     i2l545:
 51251                           
 51252                           ; BSR set to: 13
 51253                           
 51254                           ; BSR set to: 13
 51255  012906  5131               	movf	49,w,b	;volatile
 51256                           
 51257                           ; Switch size 1, requested type "space"
 51258                           ; Number of cases is 2, Range of values is 254 to 255
 51259                           ; switch strategies available:
 51260                           ; Name         Instructions Cycles
 51261                           ; simple_byte            7     4 (average)
 51262                           ;	Chosen strategy is simple_byte
 51263  012908  0AFE               	xorlw	254	; case 254
 51264  01290A  B4D8               	btfsc	status,2,c
 51265  01290C  D7E6               	goto	i2l562
 51266  01290E  0A01               	xorlw	1	; case 255
 51267  012910  A4D8               	btfss	status,2,c
 51268  012912  0012               	return	
 51269  012914  D7AC               	goto	i2l546
 51270  012916                     __end_of_USBCheckMSDRequest:
 51271                           	opt stack 0
 51272                           tosu	equ	0xFFF
 51273                           tosh	equ	0xFFE
 51274                           tosl	equ	0xFFD
 51275                           pclatu	equ	0xFFB
 51276                           pclath	equ	0xFFA
 51277                           tblptru	equ	0xFF8
 51278                           tblptrh	equ	0xFF7
 51279                           tblptrl	equ	0xFF6
 51280                           tablat	equ	0xFF5
 51281                           prodh	equ	0xFF4
 51282                           prodl	equ	0xFF3
 51283                           intcon	equ	0xFF2
 51284                           indf0	equ	0xFEF
 51285                           postinc0	equ	0xFEE
 51286                           fsr0h	equ	0xFEA
 51287                           fsr0l	equ	0xFE9
 51288                           wreg	equ	0xFE8
 51289                           indf1	equ	0xFE7
 51290                           postinc1	equ	0xFE6
 51291                           postdec1	equ	0xFE5
 51292                           plusw1	equ	0xFE3
 51293                           fsr1h	equ	0xFE2
 51294                           fsr1l	equ	0xFE1
 51295                           indf2	equ	0xFDF
 51296                           postinc2	equ	0xFDE
 51297                           postdec2	equ	0xFDD
 51298                           plusw2	equ	0xFDB
 51299                           fsr2h	equ	0xFDA
 51300                           fsr2l	equ	0xFD9
 51301                           status	equ	0xFD8
 51302                           
 51303 ;; *************** function _USBCheckHIDRequest *****************
 51304 ;; Defined at:
 51305 ;;		line 153 in file "usb_device_hid.c"
 51306 ;; Parameters:    Size  Location     Type
 51307 ;;		None
 51308 ;; Auto vars:     Size  Location     Type
 51309 ;;		None
 51310 ;; Return value:  Size  Location     Type
 51311 ;;                  1    wreg      void 
 51312 ;; Registers used:
 51313 ;;		wreg, status,2, status,0
 51314 ;; Tracked objects:
 51315 ;;		On entry : 0/0
 51316 ;;		On exit  : 0/0
 51317 ;;		Unchanged: 0/0
 51318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51323 ;;Total ram usage:        0 bytes
 51324 ;; Hardware stack levels used:    1
 51325 ;; This function calls:
 51326 ;;		Nothing
 51327 ;; This function is called by:
 51328 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51329 ;; This function uses a non-reentrant model
 51330 ;;
 51331                           
 51332                           	psect	text214
 51333  012132                     __ptext214:
 51334                           	opt stack 0
 51335  012132                     _USBCheckHIDRequest:
 51336                           	opt stack 15
 51337                           
 51338                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 51339                           
 51340                           ;incstack = 0
 51341  012132  010D               	movlb	13	; () banked
 51342  012134  5130               	movf	48,w,b	;volatile
 51343  012136  0B1F               	andlw	31
 51344  012138  06E8               	decf	wreg,f,c
 51345  01213A  A4D8               	btfss	status,2,c
 51346  01213C  0012               	return	
 51347                           
 51348                           ; BSR set to: 13
 51349                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 51350                           
 51351                           ; BSR set to: 13
 51352                           
 51353                           ; BSR set to: 13
 51354  01213E  5134               	movf	52,w,b	;volatile
 51355  012140  A4D8               	btfss	status,2,c
 51356  012142  0012               	return	
 51357                           
 51358                           ; BSR set to: 13
 51359                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 51360                           
 51361                           ; BSR set to: 13
 51362                           
 51363                           ; BSR set to: 13
 51364  012144  0E06               	movlw	6
 51365  012146  1931               	xorwf	49,w,b	;volatile
 51366  012148  B4D8               	btfsc	status,2,c
 51367  01214A  D019               	goto	i2l425
 51368  01214C  D021               	goto	i2l428
 51369  01214E                     
 51370                           ; BSR set to: 13
 51371                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 51372                           
 51373                           ; BSR set to: 13
 51374  01214E  0101               	movlb	1	; () banked
 51375  012150  05C2               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 51376  012152  A4D8               	btfss	status,2,c
 51377  012154  D01D               	goto	i2l428
 51378                           
 51379                           ; BSR set to: 1
 51380                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 51381  012156  0ED0               	movlw	low (_configDescriptor1+18)
 51382  012158  6E52               	movwf	_inPipes,c	;volatile
 51383  01215A  0EA0               	movlw	high (_configDescriptor1+18)
 51384  01215C  6E53               	movwf	_inPipes+1,c	;volatile
 51385                           
 51386                           ; BSR set to: 1
 51387  01215E  0E00               	movlw	0
 51388  012160  6E57               	movwf	_inPipes+5,c	;volatile
 51389  012162  0E09               	movlw	9
 51390  012164  D00A               	goto	L84
 51391  012166                     i2l12450:
 51392                           
 51393                           ; BSR set to: 1
 51394  012166  0EC0               	movlw	192
 51395  012168  6E55               	movwf	_inPipes+3,c	;volatile
 51396                           
 51397                           ; BSR set to: 1
 51398                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 51399  01216A  D012               	goto	i2l428
 51400  01216C                     
 51401                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 51402                           
 51403                           ; BSR set to: 1
 51404  01216C  0E84               	movlw	low _hid_rpt01
 51405  01216E  6E52               	movwf	_inPipes,c	;volatile
 51406  012170  0EA1               	movlw	high _hid_rpt01
 51407  012172  6E53               	movwf	_inPipes+1,c	;volatile
 51408  012174  0E00               	movlw	0
 51409  012176  6E57               	movwf	_inPipes+5,c	;volatile
 51410  012178  0E1D               	movlw	29
 51411  01217A                     L84:
 51412  01217A  6E56               	movwf	_inPipes+4,c	;volatile
 51413  01217C  D7F4               	goto	i2l12450
 51414  01217E                     i2l425:
 51415  01217E  010D               	movlb	13	; () banked
 51416  012180  5133               	movf	51,w,b	;volatile
 51417                           
 51418                           ; Switch size 1, requested type "space"
 51419                           ; Number of cases is 3, Range of values is 33 to 35
 51420                           ; switch strategies available:
 51421                           ; Name         Instructions Cycles
 51422                           ; simple_byte           10     6 (average)
 51423                           ;	Chosen strategy is simple_byte
 51424  012182  0A21               	xorlw	33	; case 33
 51425  012184  B4D8               	btfsc	status,2,c
 51426  012186  D7E3               	goto	i2l426
 51427  012188  0A03               	xorlw	3	; case 34
 51428  01218A  B4D8               	btfsc	status,2,c
 51429  01218C  D7EF               	goto	i2l429
 51430  01218E  0A01               	xorlw	1	; case 35
 51431  012190                     i2l428:
 51432                           
 51433                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 51434                           
 51435                           ; BSR set to: 13
 51436                           
 51437                           ; BSR set to: 13
 51438  012190  010D               	movlb	13	; () banked
 51439  012192  3930               	swapf	48,w,b	;volatile
 51440  012194  32E8               	rrcf	wreg,f,c
 51441  012196  0B03               	andlw	3
 51442  012198  06E8               	decf	wreg,f,c
 51443  01219A  A4D8               	btfss	status,2,c
 51444  01219C  0012               	return	
 51445  01219E  D020               	goto	i2l432
 51446  0121A0                     
 51447                           ; BSR set to: 13
 51448                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 51449                           
 51450                           ; BSR set to: 13
 51451  0121A0  0EC0               	movlw	low _idle_rate
 51452  0121A2  6E52               	movwf	_inPipes,c	;volatile
 51453  0121A4  0E01               	movlw	high _idle_rate
 51454  0121A6  6E53               	movwf	_inPipes+1,c	;volatile
 51455                           
 51456                           ; BSR set to: 13
 51457  0121A8  0E00               	movlw	0
 51458  0121AA  6E57               	movwf	_inPipes+5,c	;volatile
 51459  0121AC  0E01               	movlw	1
 51460  0121AE  6E56               	movwf	_inPipes+4,c	;volatile
 51461                           
 51462                           ; BSR set to: 13
 51463  0121B0  0EC1               	movlw	193
 51464  0121B2  6E55               	movwf	_inPipes+3,c	;volatile
 51465                           
 51466                           ;usb_device_hid.c: 223: break;
 51467  0121B4  0012               	return	
 51468  0121B6                     
 51469                           ; BSR set to: 13
 51470                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 51471                           
 51472                           ; BSR set to: 13
 51473  0121B6  0E80               	movlw	128
 51474  0121B8  6E55               	movwf	_inPipes+3,c	;volatile
 51475                           
 51476                           ; BSR set to: 13
 51477                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 51478  0121BA  CD33 F1C0          	movff	3379,_idle_rate	;volatile
 51479                           
 51480                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 51481  0121BE  0012               	return	
 51482  0121C0                     
 51483                           ; BSR set to: 13
 51484                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 51485                           
 51486                           ; BSR set to: 13
 51487  0121C0  0EBF               	movlw	low _active_protocol
 51488  0121C2  6E52               	movwf	_inPipes,c	;volatile
 51489  0121C4  0E01               	movlw	high _active_protocol
 51490  0121C6  6E53               	movwf	_inPipes+1,c	;volatile
 51491                           
 51492                           ; BSR set to: 13
 51493  0121C8  0E00               	movlw	0
 51494  0121CA  6E57               	movwf	_inPipes+5,c	;volatile
 51495  0121CC  0E01               	movlw	1
 51496  0121CE  6E56               	movwf	_inPipes+4,c	;volatile
 51497                           
 51498                           ; BSR set to: 13
 51499  0121D0  0E81               	movlw	129
 51500  0121D2  6E55               	movwf	_inPipes+3,c	;volatile
 51501                           
 51502                           ;usb_device_hid.c: 234: break;
 51503  0121D4  0012               	return	
 51504  0121D6                     
 51505                           ; BSR set to: 13
 51506                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 51507                           
 51508                           ; BSR set to: 13
 51509  0121D6  0E80               	movlw	128
 51510  0121D8  6E55               	movwf	_inPipes+3,c	;volatile
 51511                           
 51512                           ; BSR set to: 13
 51513                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 51514  0121DA  CD32 F1BF          	movff	3378,_active_protocol	;volatile
 51515                           
 51516                           ; BSR set to: 13
 51517                           ;usb_device_hid.c: 239: }
 51518                           
 51519                           ;usb_device_hid.c: 238: break;
 51520  0121DE  0012               	return	
 51521  0121E0                     i2l432:
 51522                           
 51523                           ; BSR set to: 13
 51524                           
 51525                           ; BSR set to: 13
 51526  0121E0  5131               	movf	49,w,b	;volatile
 51527                           
 51528                           ; Switch size 1, requested type "space"
 51529                           ; Number of cases is 6, Range of values is 1 to 11
 51530                           ; switch strategies available:
 51531                           ; Name         Instructions Cycles
 51532                           ; simple_byte           19    10 (average)
 51533                           ;	Chosen strategy is simple_byte
 51534  0121E2  0A01               	xorlw	1	; case 1
 51535  0121E4  B4D8               	btfsc	status,2,c
 51536  0121E6  0012               	return	
 51537  0121E8  0A03               	xorlw	3	; case 2
 51538  0121EA  B4D8               	btfsc	status,2,c
 51539  0121EC  D7D9               	goto	i2l436
 51540  0121EE  0A01               	xorlw	1	; case 3
 51541  0121F0  B4D8               	btfsc	status,2,c
 51542  0121F2  D7E6               	goto	i2l438
 51543  0121F4  0A0A               	xorlw	10	; case 9
 51544  0121F6  B4D8               	btfsc	status,2,c
 51545  0121F8  0012               	return	
 51546  0121FA  0A03               	xorlw	3	; case 10
 51547  0121FC  B4D8               	btfsc	status,2,c
 51548  0121FE  D7DB               	goto	i2l437
 51549  012200  0A01               	xorlw	1	; case 11
 51550  012202  A4D8               	btfss	status,2,c
 51551  012204  0012               	return	
 51552  012206  D7E7               	goto	i2l439
 51553  012208                     __end_of_USBCheckHIDRequest:
 51554                           	opt stack 0
 51555                           tosu	equ	0xFFF
 51556                           tosh	equ	0xFFE
 51557                           tosl	equ	0xFFD
 51558                           pclatu	equ	0xFFB
 51559                           pclath	equ	0xFFA
 51560                           tblptru	equ	0xFF8
 51561                           tblptrh	equ	0xFF7
 51562                           tblptrl	equ	0xFF6
 51563                           tablat	equ	0xFF5
 51564                           prodh	equ	0xFF4
 51565                           prodl	equ	0xFF3
 51566                           intcon	equ	0xFF2
 51567                           indf0	equ	0xFEF
 51568                           postinc0	equ	0xFEE
 51569                           fsr0h	equ	0xFEA
 51570                           fsr0l	equ	0xFE9
 51571                           wreg	equ	0xFE8
 51572                           indf1	equ	0xFE7
 51573                           postinc1	equ	0xFE6
 51574                           postdec1	equ	0xFE5
 51575                           plusw1	equ	0xFE3
 51576                           fsr1h	equ	0xFE2
 51577                           fsr1l	equ	0xFE1
 51578                           indf2	equ	0xFDF
 51579                           postinc2	equ	0xFDE
 51580                           postdec2	equ	0xFDD
 51581                           plusw2	equ	0xFDB
 51582                           fsr2h	equ	0xFDA
 51583                           fsr2l	equ	0xFD9
 51584                           status	equ	0xFD8
 51585                           
 51586 ;; *************** function _MSDTransferTerminated *****************
 51587 ;; Defined at:
 51588 ;;		line 1674 in file "usb_device_msd.c"
 51589 ;; Parameters:    Size  Location     Type
 51590 ;;  handle          2   11[COMRAM] PTR void 
 51591 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 51592 ;;		 -> BDT(48), 
 51593 ;; Auto vars:     Size  Location     Type
 51594 ;;		None
 51595 ;; Return value:  Size  Location     Type
 51596 ;;                  1    wreg      void 
 51597 ;; Registers used:
 51598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51599 ;; Tracked objects:
 51600 ;;		On entry : 0/0
 51601 ;;		On exit  : 0/0
 51602 ;;		Unchanged: 0/0
 51603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51607 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51608 ;;Total ram usage:        4 bytes
 51609 ;; Hardware stack levels used:    1
 51610 ;; Hardware stack levels required when called:    1
 51611 ;; This function calls:
 51612 ;;		i2_USBStallEndpoint
 51613 ;;		i2_USBTransferOnePacket
 51614 ;; This function is called by:
 51615 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51616 ;; This function uses a non-reentrant model
 51617 ;;
 51618                           
 51619                           	psect	text215
 51620  0146E8                     __ptext215:
 51621                           	opt stack 0
 51622  0146E8                     _MSDTransferTerminated:
 51623                           	opt stack 14
 51624                           
 51625                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 51626                           
 51627                           ; BSR set to: 13
 51628                           ;incstack = 0
 51629  0146E8  0101               	movlb	1	; () banked
 51630  0146EA  515B               	movf	_MSDCBWValid& (0+255),w,b
 51631  0146EC  A4D8               	btfss	status,2,c
 51632  0146EE  D00B               	goto	i2l780
 51633                           
 51634                           ; BSR set to: 1
 51635                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 51636  0146F0  0E01               	movlw	1
 51637  0146F2  6E01               	movwf	i2USBStallEndpoint@dir,c
 51638  0146F4  0E02               	movlw	2
 51639  0146F6  ECE1  F086         	call	i2_USBStallEndpoint
 51640                           
 51641                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 51642  0146FA  0E00               	movlw	0
 51643  0146FC  6E01               	movwf	i2USBStallEndpoint@dir,c
 51644  0146FE  0E02               	movlw	2
 51645  014700  ECE1  F086         	call	i2_USBStallEndpoint
 51646                           
 51647                           ;usb_device_msd.c: 1681: }
 51648  014704  0012               	return	
 51649  014706                     i2l780:
 51650  014706  C125  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 51651  01470A  C126  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 51652  01470E  500E               	movf	_MSDTransferTerminated$2623,w,c
 51653  014710  180C               	xorwf	MSDTransferTerminated@handle,w,c
 51654  014712  E114               	bnz	i2l783
 51655  014714  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 51656  014716  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 51657  014718  A4D8               	btfss	status,2,c
 51658  01471A  0012               	return	
 51659                           
 51660                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 51661  01471C  0E00               	movlw	0
 51662  01471E  6E01               	movwf	i2USBTransferOnePacket@dir,c
 51663  014720  0E40               	movlw	64
 51664  014722  6E02               	movwf	i2USBTransferOnePacket@data,c
 51665  014724  0E0D               	movlw	13
 51666  014726  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 51667  014728  0E40               	movlw	64
 51668  01472A  6E04               	movwf	i2USBTransferOnePacket@len,c
 51669  01472C  0E02               	movlw	2
 51670  01472E  EC64  F087         	call	i2_USBTransferOnePacket
 51671  014732  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 51672  014736  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 51673  01473A  0012               	return	
 51674  01473C                     i2l783:
 51675  01473C  0012               	return		;funcret
 51676  01473E                     __end_of_MSDTransferTerminated:
 51677                           	opt stack 0
 51678                           tosu	equ	0xFFF
 51679                           tosh	equ	0xFFE
 51680                           tosl	equ	0xFFD
 51681                           pclatu	equ	0xFFB
 51682                           pclath	equ	0xFFA
 51683                           tblptru	equ	0xFF8
 51684                           tblptrh	equ	0xFF7
 51685                           tblptrl	equ	0xFF6
 51686                           tablat	equ	0xFF5
 51687                           prodh	equ	0xFF4
 51688                           prodl	equ	0xFF3
 51689                           intcon	equ	0xFF2
 51690                           indf0	equ	0xFEF
 51691                           postinc0	equ	0xFEE
 51692                           fsr0h	equ	0xFEA
 51693                           fsr0l	equ	0xFE9
 51694                           wreg	equ	0xFE8
 51695                           indf1	equ	0xFE7
 51696                           postinc1	equ	0xFE6
 51697                           postdec1	equ	0xFE5
 51698                           plusw1	equ	0xFE3
 51699                           fsr1h	equ	0xFE2
 51700                           fsr1l	equ	0xFE1
 51701                           indf2	equ	0xFDF
 51702                           postinc2	equ	0xFDE
 51703                           postdec2	equ	0xFDD
 51704                           plusw2	equ	0xFDB
 51705                           fsr2h	equ	0xFDA
 51706                           fsr2l	equ	0xFD9
 51707                           status	equ	0xFD8
 51708                           
 51709 ;; *************** function i2_USBStallEndpoint *****************
 51710 ;; Defined at:
 51711 ;;		line 1073 in file "usb_device.c"
 51712 ;; Parameters:    Size  Location     Type
 51713 ;;  ep              1    wreg     unsigned char 
 51714 ;;  dir             1    0[COMRAM] unsigned char 
 51715 ;; Auto vars:     Size  Location     Type
 51716 ;;  ep              1    5[COMRAM] unsigned char 
 51717 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 51718 ;;		 -> BDT(48), 
 51719 ;; Return value:  Size  Location     Type
 51720 ;;                  1    wreg      void 
 51721 ;; Registers used:
 51722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51723 ;; Tracked objects:
 51724 ;;		On entry : 0/0
 51725 ;;		On exit  : 0/0
 51726 ;;		Unchanged: 0/0
 51727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51728 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51729 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51730 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51731 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51732 ;;Total ram usage:        8 bytes
 51733 ;; Hardware stack levels used:    1
 51734 ;; This function calls:
 51735 ;;		Nothing
 51736 ;; This function is called by:
 51737 ;;		_MSDTransferTerminated
 51738 ;; This function uses a non-reentrant model
 51739 ;;
 51740                           
 51741                           	psect	text216
 51742  010DC2                     __ptext216:
 51743                           	opt stack 0
 51744  010DC2                     i2_USBStallEndpoint:
 51745                           	opt stack 14
 51746                           
 51747                           ;incstack = 0
 51748                           ;i2USBStallEndpoint@ep stored from wreg
 51749  010DC2  6E06               	movwf	i2USBStallEndpoint@ep,c
 51750                           
 51751                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 51752  010DC4  5006               	movf	i2USBStallEndpoint@ep,w,c
 51753  010DC6  A4D8               	btfss	status,2,c
 51754  010DC8  D02B               	goto	i2l192
 51755                           
 51756                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 51757  010DCA  EE20 F001          	lfsr	2,1
 51758  010DCE  505C               	movf	_pBDTEntryEP0OutNext,w,c
 51759  010DD0  26D9               	addwf	fsr2l,f,c
 51760  010DD2  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 51761  010DD4  22DA               	addwfc	fsr2h,f,c
 51762  010DD6  0E08               	movlw	8
 51763  010DD8  6EDF               	movwf	indf2,c
 51764                           
 51765                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 51766  010DDA  EE20 F002          	lfsr	2,2
 51767  010DDE  505C               	movf	_pBDTEntryEP0OutNext,w,c
 51768  010DE0  26D9               	addwf	fsr2l,f,c
 51769  010DE2  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 51770  010DE4  22DA               	addwfc	fsr2h,f,c
 51771  010DE6  0E30               	movlw	48
 51772  010DE8  6EDE               	movwf	postinc2,c
 51773  010DEA  0E0D               	movlw	13
 51774  010DEC  6EDD               	movwf	postdec2,c
 51775                           
 51776                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 51777  010DEE  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51778  010DF2  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51779  010DF6  0E0C               	movlw	12
 51780  010DF8  6EDF               	movwf	indf2,c
 51781                           
 51782                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51783  010DFA  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51784  010DFE  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51785  010E02  0E00               	movlw	0
 51786  010E04  8EDB               	bsf	plusw2,7,c
 51787                           
 51788                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 51789  010E06  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 51790  010E0A  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51791  010E0E  0E04               	movlw	4
 51792  010E10  6EDF               	movwf	indf2,c
 51793                           
 51794                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 51795  010E12  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 51796  010E16  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51797  010E1A  0E00               	movlw	0
 51798  010E1C  8EDB               	bsf	plusw2,7,c
 51799                           
 51800                           ;usb_device.c: 1089: }
 51801  010E1E  0012               	return	
 51802  010E20                     i2l192:
 51803                           
 51804                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 51805  010E20  5001               	movf	i2USBStallEndpoint@dir,w,c
 51806  010E22  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 51807  010E24  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 51808  010E26  90D8               	bcf	status,0,c
 51809  010E28  3602               	rlcf	??i2_USBStallEndpoint,f,c
 51810  010E2A  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 51811  010E2C  5006               	movf	i2USBStallEndpoint@ep,w,c
 51812  010E2E  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 51813  010E30  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 51814  010E32  90D8               	bcf	status,0,c
 51815  010E34  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 51816  010E36  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 51817  010E38  90D8               	bcf	status,0,c
 51818  010E3A  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 51819  010E3C  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 51820  010E3E  5002               	movf	??i2_USBStallEndpoint,w,c
 51821  010E40  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 51822  010E42  5003               	movf	??i2_USBStallEndpoint+1,w,c
 51823  010E44  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 51824  010E46  90D8               	bcf	status,0,c
 51825  010E48  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 51826  010E4A  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 51827  010E4C  90D8               	bcf	status,0,c
 51828  010E4E  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 51829  010E50  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 51830  010E52  0E00               	movlw	0
 51831  010E54  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 51832  010E56  6E07               	movwf	i2USBStallEndpoint@p,c
 51833  010E58  0E0D               	movlw	13
 51834  010E5A  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 51835  010E5C  6E08               	movwf	i2USBStallEndpoint@p+1,c
 51836                           
 51837                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 51838  010E5E  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 51839  010E62  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 51840  010E66  0E00               	movlw	0
 51841  010E68  84DB               	bsf	plusw2,2,c
 51842                           
 51843                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 51844  010E6A  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 51845  010E6E  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 51846  010E72  0E00               	movlw	0
 51847  010E74  8EDB               	bsf	plusw2,7,c
 51848                           
 51849                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 51850  010E76  5006               	movf	i2USBStallEndpoint@ep,w,c
 51851  010E78  0D04               	mullw	4
 51852  010E7A  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 51853  010E7E  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 51854  010E82  5001               	movf	i2USBStallEndpoint@dir,w,c
 51855  010E84  0D02               	mullw	2
 51856  010E86  50F3               	movf	prodl,w,c
 51857  010E88  2602               	addwf	??i2_USBStallEndpoint,f,c
 51858  010E8A  50F4               	movf	prodh,w,c
 51859  010E8C  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 51860  010E8E  90D8               	bcf	status,0,c
 51861  010E90  3602               	rlcf	??i2_USBStallEndpoint,f,c
 51862  010E92  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 51863  010E94  90D8               	bcf	status,0,c
 51864  010E96  3602               	rlcf	??i2_USBStallEndpoint,f,c
 51865  010E98  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 51866  010E9A  0E04               	movlw	4
 51867  010E9C  2602               	addwf	??i2_USBStallEndpoint,f,c
 51868  010E9E  0E00               	movlw	0
 51869  010EA0  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 51870  010EA2  0E00               	movlw	0
 51871  010EA4  2402               	addwf	??i2_USBStallEndpoint,w,c
 51872  010EA6  6E07               	movwf	i2USBStallEndpoint@p,c
 51873  010EA8  0E0D               	movlw	13
 51874  010EAA  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 51875  010EAC  6E08               	movwf	i2USBStallEndpoint@p+1,c
 51876                           
 51877                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 51878  010EAE  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 51879  010EB2  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 51880  010EB6  0E00               	movlw	0
 51881  010EB8  84DB               	bsf	plusw2,2,c
 51882                           
 51883                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 51884  010EBA  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 51885  010EBE  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 51886  010EC2  0E00               	movlw	0
 51887  010EC4  8EDB               	bsf	plusw2,7,c
 51888  010EC6  0012               	return	
 51889  010EC8                     __end_ofi2_USBStallEndpoint:
 51890                           	opt stack 0
 51891                           tosu	equ	0xFFF
 51892                           tosh	equ	0xFFE
 51893                           tosl	equ	0xFFD
 51894                           pclatu	equ	0xFFB
 51895                           pclath	equ	0xFFA
 51896                           tblptru	equ	0xFF8
 51897                           tblptrh	equ	0xFF7
 51898                           tblptrl	equ	0xFF6
 51899                           tablat	equ	0xFF5
 51900                           prodh	equ	0xFF4
 51901                           prodl	equ	0xFF3
 51902                           intcon	equ	0xFF2
 51903                           indf0	equ	0xFEF
 51904                           postinc0	equ	0xFEE
 51905                           fsr0h	equ	0xFEA
 51906                           fsr0l	equ	0xFE9
 51907                           wreg	equ	0xFE8
 51908                           indf1	equ	0xFE7
 51909                           postinc1	equ	0xFE6
 51910                           postdec1	equ	0xFE5
 51911                           plusw1	equ	0xFE3
 51912                           fsr1h	equ	0xFE2
 51913                           fsr1l	equ	0xFE1
 51914                           indf2	equ	0xFDF
 51915                           postinc2	equ	0xFDE
 51916                           postdec2	equ	0xFDD
 51917                           plusw2	equ	0xFDB
 51918                           fsr2h	equ	0xFDA
 51919                           fsr2l	equ	0xFD9
 51920                           status	equ	0xFD8
 51921                           
 51922 ;; *************** function _APP_DeviceMSDInitialize *****************
 51923 ;; Defined at:
 51924 ;;		line 84 in file "app_device_msd.c"
 51925 ;; Parameters:    Size  Location     Type
 51926 ;;		None
 51927 ;; Auto vars:     Size  Location     Type
 51928 ;;		None
 51929 ;; Return value:  Size  Location     Type
 51930 ;;                  1    wreg      void 
 51931 ;; Registers used:
 51932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51933 ;; Tracked objects:
 51934 ;;		On entry : 0/0
 51935 ;;		On exit  : 0/0
 51936 ;;		Unchanged: 0/0
 51937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51942 ;;Total ram usage:        0 bytes
 51943 ;; Hardware stack levels used:    1
 51944 ;; Hardware stack levels required when called:    2
 51945 ;; This function calls:
 51946 ;;		_USBEnableEndpoint
 51947 ;;		_USBMSDInit
 51948 ;; This function is called by:
 51949 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51950 ;; This function uses a non-reentrant model
 51951 ;;
 51952                           
 51953                           	psect	text217
 51954  015622                     __ptext217:
 51955                           	opt stack 0
 51956  015622                     _APP_DeviceMSDInitialize:
 51957                           	opt stack 13
 51958                           
 51959                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 51960                           
 51961                           ;incstack = 0
 51962  015622  0E1E               	movlw	30
 51963  015624  6E09               	movwf	USBEnableEndpoint@options,c
 51964  015626  0E02               	movlw	2
 51965  015628  EC22  F0A7         	call	_USBEnableEndpoint
 51966                           
 51967                           ;app_device_msd.c: 93: USBMSDInit();
 51968  01562C  ECCB  F084         	call	_USBMSDInit	;wreg free
 51969  015630  0012               	return		;funcret
 51970  015632                     __end_of_APP_DeviceMSDInitialize:
 51971                           	opt stack 0
 51972                           tosu	equ	0xFFF
 51973                           tosh	equ	0xFFE
 51974                           tosl	equ	0xFFD
 51975                           pclatu	equ	0xFFB
 51976                           pclath	equ	0xFFA
 51977                           tblptru	equ	0xFF8
 51978                           tblptrh	equ	0xFF7
 51979                           tblptrl	equ	0xFF6
 51980                           tablat	equ	0xFF5
 51981                           prodh	equ	0xFF4
 51982                           prodl	equ	0xFF3
 51983                           intcon	equ	0xFF2
 51984                           indf0	equ	0xFEF
 51985                           postinc0	equ	0xFEE
 51986                           fsr0h	equ	0xFEA
 51987                           fsr0l	equ	0xFE9
 51988                           wreg	equ	0xFE8
 51989                           indf1	equ	0xFE7
 51990                           postinc1	equ	0xFE6
 51991                           postdec1	equ	0xFE5
 51992                           plusw1	equ	0xFE3
 51993                           fsr1h	equ	0xFE2
 51994                           fsr1l	equ	0xFE1
 51995                           indf2	equ	0xFDF
 51996                           postinc2	equ	0xFDE
 51997                           postdec2	equ	0xFDD
 51998                           plusw2	equ	0xFDB
 51999                           fsr2h	equ	0xFDA
 52000                           fsr2l	equ	0xFD9
 52001                           status	equ	0xFD8
 52002                           
 52003 ;; *************** function _USBMSDInit *****************
 52004 ;; Defined at:
 52005 ;;		line 142 in file "usb_device_msd.c"
 52006 ;; Parameters:    Size  Location     Type
 52007 ;;		None
 52008 ;; Auto vars:     Size  Location     Type
 52009 ;;		None
 52010 ;; Return value:  Size  Location     Type
 52011 ;;                  1    wreg      void 
 52012 ;; Registers used:
 52013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52014 ;; Tracked objects:
 52015 ;;		On entry : 0/0
 52016 ;;		On exit  : 0/0
 52017 ;;		Unchanged: 0/0
 52018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52021 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52022 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52023 ;;Total ram usage:        3 bytes
 52024 ;; Hardware stack levels used:    1
 52025 ;; Hardware stack levels required when called:    1
 52026 ;; This function calls:
 52027 ;;		i2_ExternalFlash_MediaDetect
 52028 ;;		i2_ExternalFlash_MediaInitialize
 52029 ;;		i2_ResetSenseData
 52030 ;;		i2_USBTransferOnePacket
 52031 ;; This function is called by:
 52032 ;;		_APP_DeviceMSDInitialize
 52033 ;; This function uses a non-reentrant model
 52034 ;;
 52035                           
 52036                           	psect	text218
 52037  010996                     __ptext218:
 52038                           	opt stack 0
 52039  010996                     _USBMSDInit:
 52040                           	opt stack 13
 52041                           
 52042                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 52043                           
 52044                           ;incstack = 0
 52045  010996  0E00               	movlw	0
 52046  010998  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52047  01099A  0E40               	movlw	64
 52048  01099C  6E02               	movwf	i2USBTransferOnePacket@data,c
 52049  01099E  0E0D               	movlw	13
 52050  0109A0  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52051  0109A2  0E40               	movlw	64
 52052  0109A4  6E04               	movwf	i2USBTransferOnePacket@len,c
 52053  0109A6  0E02               	movlw	2
 52054  0109A8  EC64  F087         	call	i2_USBTransferOnePacket
 52055  0109AC  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52056  0109B0  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52057  0109B4  C11F  F149         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 52058  0109B8  C120  F14A         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 52059                           
 52060                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 52061  0109BC  0E00               	movlw	0
 52062  0109BE  0101               	movlb	1	; () banked
 52063  0109C0  6F63               	movwf	_MSD_State& (0+255),b
 52064                           
 52065                           ; BSR set to: 1
 52066                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 52067  0109C2  6962               	setf	_MSDCommandState& (0+255),b
 52068                           
 52069                           ; BSR set to: 1
 52070                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 52071  0109C4  0E00               	movlw	0
 52072  0109C6  6F61               	movwf	_MSDReadState& (0+255),b
 52073                           
 52074                           ; BSR set to: 1
 52075                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 52076  0109C8  0E00               	movlw	0
 52077  0109CA  6F60               	movwf	_MSDWriteState& (0+255),b
 52078                           
 52079                           ; BSR set to: 1
 52080                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 52081  0109CC  0E00               	movlw	0
 52082  0109CE  6F5C               	movwf	_MSDHostNoData& (0+255),b
 52083                           
 52084                           ; BSR set to: 1
 52085                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 52086  0109D0  0E00               	movlw	0
 52087  0109D2  0102               	movlb	2	; () banked
 52088  0109D4  6F2E               	movwf	_gblNumBLKS& (0+255),b
 52089  0109D6  0E00               	movlw	0
 52090  0109D8  6F2F               	movwf	(_gblNumBLKS+1)& (0+255),b
 52091  0109DA  0E00               	movlw	0
 52092  0109DC  6F30               	movwf	(_gblNumBLKS+2)& (0+255),b
 52093  0109DE  0E00               	movlw	0
 52094  0109E0  6F31               	movwf	(_gblNumBLKS+3)& (0+255),b
 52095                           
 52096                           ; BSR set to: 2
 52097                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 52098  0109E2  0E00               	movlw	0
 52099  0109E4  6F2A               	movwf	_gblBLKLen& (0+255),b
 52100  0109E6  0E00               	movlw	0
 52101  0109E8  6F2B               	movwf	(_gblBLKLen+1)& (0+255),b
 52102  0109EA  0E00               	movlw	0
 52103  0109EC  6F2C               	movwf	(_gblBLKLen+2)& (0+255),b
 52104  0109EE  0E00               	movlw	0
 52105  0109F0  6F2D               	movwf	(_gblBLKLen+3)& (0+255),b
 52106                           
 52107                           ; BSR set to: 2
 52108                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 52109  0109F2  0E01               	movlw	1
 52110  0109F4  0101               	movlb	1	; () banked
 52111  0109F6  6F5B               	movwf	_MSDCBWValid& (0+255),b
 52112                           
 52113                           ; BSR set to: 1
 52114                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 52115  0109F8  0E00               	movlw	0
 52116  0109FA  6F48               	movwf	(_gblMediaPresent+1)& (0+255),b
 52117  0109FC  0E00               	movlw	0
 52118  0109FE  6F47               	movwf	_gblMediaPresent& (0+255),b
 52119                           
 52120                           ; BSR set to: 1
 52121                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 52122  010A00  0E00               	movlw	0
 52123  010A02  0102               	movlb	2	; () banked
 52124  010A04  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 52125  010A06  D04A               	goto	i2l534
 52126  010A08                     
 52127                           ; BSR set to: 2
 52128                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 52129                           
 52130                           ; BSR set to: 2
 52131  010A08  510D               	movf	(_gblCBW+13)& (0+255),w,b
 52132  010A0A  0D01               	mullw	1
 52133  010A0C  0E5D               	movlw	low _SoftDetach
 52134  010A0E  24F3               	addwf	prodl,w,c
 52135  010A10  6ED9               	movwf	fsr2l,c
 52136  010A12  0E01               	movlw	high _SoftDetach
 52137  010A14  20F4               	addwfc	prodh,w,c
 52138  010A16  6EDA               	movwf	fsr2h,c
 52139  010A18  0E00               	movlw	0
 52140  010A1A  6EDF               	movwf	indf2,c
 52141                           
 52142                           ; BSR set to: 2
 52143                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 52144  010A1C  C29E  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 52145  010A20  C29F  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 52146  010A24  EE22  F092         	lfsr	2,_LUN+9
 52147  010A28  D801               	call	i2u990_48
 52148  010A2A  D00A               	goto	i2u990_49
 52149  010A2C                     i2u990_48:
 52150  010A2C  0005               	push	
 52151  010A2E  6EFA               	movwf	pclath,c
 52152  010A30  50DE               	movf	postinc2,w,c
 52153  010A32  6EFD               	movwf	tosl,c
 52154  010A34  50DE               	movf	postinc2,w,c
 52155  010A36  6EFE               	movwf	tosh,c
 52156  010A38  50DE               	movf	postinc2,w,c
 52157  010A3A  6EFF               	movwf	tosu,c
 52158  010A3C  50FA               	movf	pclath,w,c
 52159  010A3E  0012               	return		;indir
 52160  010A40                     i2u990_49:
 52161  010A40  0900               	iorlw	0
 52162  010A42  B4D8               	btfsc	status,2,c
 52163  010A44  D027               	goto	i2l537
 52164                           
 52165                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 52166  010A46  C29E  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 52167  010A4A  C29F  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 52168  010A4E  D801               	call	i2u992_48
 52169  010A50  D00B               	goto	i2u992_49
 52170  010A52                     i2u992_48:
 52171  010A52  0005               	push	
 52172  010A54  6EFA               	movwf	pclath,c
 52173  010A56  0102               	movlb	2	; () banked
 52174  010A58  5189               	movf	_LUN& (0+255),w,b
 52175  010A5A  6EFD               	movwf	tosl,c
 52176  010A5C  518A               	movf	(_LUN+1)& (0+255),w,b
 52177  010A5E  6EFE               	movwf	tosh,c
 52178  010A60  518B               	movf	(_LUN+2)& (0+255),w,b
 52179  010A62  6EFF               	movwf	tosu,c
 52180  010A64  50FA               	movf	pclath,w,c
 52181  010A66  0012               	return		;indir
 52182  010A68                     i2u992_49:
 52183  010A68  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 52184  010A6A  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 52185  010A6C  B4D8               	btfsc	status,2,c
 52186  010A6E  D012               	goto	i2l537
 52187                           
 52188                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 52189  010A70  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 52190  010A74  0E01               	movlw	1
 52191  010A76  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 52192  010A78  0E00               	movlw	0
 52193  010A7A  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 52194  010A7C  2A0C               	incf	??_USBMSDInit,f,c
 52195  010A7E  D003               	goto	i2u994_44
 52196  010A80                     i2u994_45:
 52197  010A80  90D8               	bcf	status,0,c
 52198  010A82  360D               	rlcf	??_USBMSDInit+1,f,c
 52199  010A84  360E               	rlcf	??_USBMSDInit+2,f,c
 52200  010A86                     i2u994_44:
 52201  010A86  2E0C               	decfsz	??_USBMSDInit,f,c
 52202  010A88  D7FB               	goto	i2u994_45
 52203  010A8A  500D               	movf	??_USBMSDInit+1,w,c
 52204  010A8C  0101               	movlb	1	; () banked
 52205  010A8E  1347               	iorwf	_gblMediaPresent& (0+255),f,b
 52206  010A90  500E               	movf	??_USBMSDInit+2,w,c
 52207  010A92  1348               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 52208  010A94                     i2l537:
 52209                           
 52210                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 52211                           
 52212                           ; BSR set to: 1
 52213                           
 52214                           ; BSR set to: 1
 52215  010A94  EC9E  F0A0         	call	i2_ResetSenseData	;wreg free
 52216  010A98  0102               	movlb	2	; () banked
 52217  010A9A  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 52218  010A9C                     i2l534:
 52219                           
 52220                           ; BSR set to: 2
 52221                           
 52222                           ; BSR set to: 2
 52223  010A9C  510D               	movf	(_gblCBW+13)& (0+255),w,b
 52224  010A9E  A4D8               	btfss	status,2,c
 52225  010AA0  0012               	return	
 52226  010AA2  D7B2               	goto	i2l535
 52227  010AA4                     __end_of_USBMSDInit:
 52228                           	opt stack 0
 52229                           tosu	equ	0xFFF
 52230                           tosh	equ	0xFFE
 52231                           tosl	equ	0xFFD
 52232                           pclatu	equ	0xFFB
 52233                           pclath	equ	0xFFA
 52234                           tblptru	equ	0xFF8
 52235                           tblptrh	equ	0xFF7
 52236                           tblptrl	equ	0xFF6
 52237                           tablat	equ	0xFF5
 52238                           prodh	equ	0xFF4
 52239                           prodl	equ	0xFF3
 52240                           intcon	equ	0xFF2
 52241                           indf0	equ	0xFEF
 52242                           postinc0	equ	0xFEE
 52243                           fsr0h	equ	0xFEA
 52244                           fsr0l	equ	0xFE9
 52245                           wreg	equ	0xFE8
 52246                           indf1	equ	0xFE7
 52247                           postinc1	equ	0xFE6
 52248                           postdec1	equ	0xFE5
 52249                           plusw1	equ	0xFE3
 52250                           fsr1h	equ	0xFE2
 52251                           fsr1l	equ	0xFE1
 52252                           indf2	equ	0xFDF
 52253                           postinc2	equ	0xFDE
 52254                           postdec2	equ	0xFDD
 52255                           plusw2	equ	0xFDB
 52256                           fsr2h	equ	0xFDA
 52257                           fsr2l	equ	0xFD9
 52258                           status	equ	0xFD8
 52259                           
 52260 ;; *************** function i2_ResetSenseData *****************
 52261 ;; Defined at:
 52262 ;;		line 1373 in file "usb_device_msd.c"
 52263 ;; Parameters:    Size  Location     Type
 52264 ;;		None
 52265 ;; Auto vars:     Size  Location     Type
 52266 ;;		None
 52267 ;; Return value:  Size  Location     Type
 52268 ;;                  1    wreg      void 
 52269 ;; Registers used:
 52270 ;;		wreg, status,2
 52271 ;; Tracked objects:
 52272 ;;		On entry : 0/0
 52273 ;;		On exit  : 0/0
 52274 ;;		Unchanged: 0/0
 52275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52280 ;;Total ram usage:        0 bytes
 52281 ;; Hardware stack levels used:    1
 52282 ;; This function calls:
 52283 ;;		Nothing
 52284 ;; This function is called by:
 52285 ;;		_USBMSDInit
 52286 ;; This function uses a non-reentrant model
 52287 ;;
 52288                           
 52289                           	psect	text219
 52290  01413C                     __ptext219:
 52291                           	opt stack 0
 52292  01413C                     i2_ResetSenseData:
 52293                           	opt stack 13
 52294                           
 52295                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 52296                           
 52297                           ; BSR set to: 2
 52298                           ;incstack = 0
 52299  01413C  0101               	movlb	1	; () banked
 52300  01413E  9100               	bcf	_gblSenseData& (0+255),0,b
 52301  014140  9300               	bcf	_gblSenseData& (0+255),1,b
 52302  014142  9500               	bcf	_gblSenseData& (0+255),2,b
 52303  014144  9700               	bcf	_gblSenseData& (0+255),3,b
 52304  014146  8900               	bsf	_gblSenseData& (0+255),4,b
 52305  014148  8B00               	bsf	_gblSenseData& (0+255),5,b
 52306  01414A  8D00               	bsf	_gblSenseData& (0+255),6,b
 52307                           
 52308                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 52309  01414C  9F00               	bcf	_gblSenseData& (0+255),7,b
 52310                           
 52311                           ; BSR set to: 1
 52312                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 52313  01414E  0E00               	movlw	0
 52314  014150  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 52315                           
 52316                           ; BSR set to: 1
 52317                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 52318  014152  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 52319  014154  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 52320  014156  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 52321  014158  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 52322                           
 52323                           ; BSR set to: 1
 52324                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 52325  01415A  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 52326                           
 52327                           ; BSR set to: 1
 52328                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 52329  01415C  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 52330                           
 52331                           ; BSR set to: 1
 52332                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 52333  01415E  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 52334                           
 52335                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 52336  014160  0E00               	movlw	0
 52337  014162  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 52338                           
 52339                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 52340  014164  0E00               	movlw	0
 52341  014166  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 52342                           
 52343                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 52344  014168  0E00               	movlw	0
 52345  01416A  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 52346                           
 52347                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 52348  01416C  0E00               	movlw	0
 52349  01416E  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 52350                           
 52351                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 52352  014170  0E0A               	movlw	10
 52353  014172  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 52354                           
 52355                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 52356  014174  0E00               	movlw	0
 52357  014176  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 52358  014178  0E00               	movlw	0
 52359  01417A  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 52360  01417C  0E00               	movlw	0
 52361  01417E  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 52362  014180  0E00               	movlw	0
 52363  014182  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 52364                           
 52365                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 52366  014184  0E00               	movlw	0
 52367  014186  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 52368                           
 52369                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 52370  014188  0E00               	movlw	0
 52371  01418A  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 52372                           
 52373                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 52374  01418C  0E00               	movlw	0
 52375  01418E  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 52376                           
 52377                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 52378  014190  0E00               	movlw	0
 52379  014192  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 52380                           
 52381                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 52382  014194  0E00               	movlw	0
 52383  014196  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 52384                           
 52385                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 52386  014198  0E00               	movlw	0
 52387  01419A  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 52388                           
 52389                           ; BSR set to: 1
 52390  01419C  0012               	return		;funcret
 52391  01419E                     __end_ofi2_ResetSenseData:
 52392                           	opt stack 0
 52393                           tosu	equ	0xFFF
 52394                           tosh	equ	0xFFE
 52395                           tosl	equ	0xFFD
 52396                           pclatu	equ	0xFFB
 52397                           pclath	equ	0xFFA
 52398                           tblptru	equ	0xFF8
 52399                           tblptrh	equ	0xFF7
 52400                           tblptrl	equ	0xFF6
 52401                           tablat	equ	0xFF5
 52402                           prodh	equ	0xFF4
 52403                           prodl	equ	0xFF3
 52404                           intcon	equ	0xFF2
 52405                           indf0	equ	0xFEF
 52406                           postinc0	equ	0xFEE
 52407                           fsr0h	equ	0xFEA
 52408                           fsr0l	equ	0xFE9
 52409                           wreg	equ	0xFE8
 52410                           indf1	equ	0xFE7
 52411                           postinc1	equ	0xFE6
 52412                           postdec1	equ	0xFE5
 52413                           plusw1	equ	0xFE3
 52414                           fsr1h	equ	0xFE2
 52415                           fsr1l	equ	0xFE1
 52416                           indf2	equ	0xFDF
 52417                           postinc2	equ	0xFDE
 52418                           postdec2	equ	0xFDD
 52419                           plusw2	equ	0xFDB
 52420                           fsr2h	equ	0xFDA
 52421                           fsr2l	equ	0xFD9
 52422                           status	equ	0xFD8
 52423                           
 52424 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 52425 ;; Defined at:
 52426 ;;		line 10 in file "external_flash.c"
 52427 ;; Parameters:    Size  Location     Type
 52428 ;;  config          2    0[COMRAM] PTR void 
 52429 ;;		 -> NULL(0), 
 52430 ;; Auto vars:     Size  Location     Type
 52431 ;;		None
 52432 ;; Return value:  Size  Location     Type
 52433 ;;                  2    0[COMRAM] PTR struct .
 52434 ;; Registers used:
 52435 ;;		wreg, status,2, status,0
 52436 ;; Tracked objects:
 52437 ;;		On entry : 0/0
 52438 ;;		On exit  : 0/0
 52439 ;;		Unchanged: 0/0
 52440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52445 ;;Total ram usage:        2 bytes
 52446 ;; Hardware stack levels used:    1
 52447 ;; This function calls:
 52448 ;;		Nothing
 52449 ;; This function is called by:
 52450 ;;		_USBMSDInit
 52451 ;;		_MSDProcessCommand
 52452 ;; This function uses a non-reentrant model
 52453 ;;
 52454                           
 52455                           	psect	text220
 52456  015594                     __ptext220:
 52457                           	opt stack 0
 52458  015594                     i2_ExternalFlash_MediaInitialize:
 52459                           	opt stack 13
 52460                           
 52461                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 52462                           
 52463                           ; BSR set to: 1
 52464                           ;incstack = 0
 52465  015594  0102               	movlb	2	; () banked
 52466  015596  8185               	bsf	(_mediaInformation+1)& (0+255),0,b
 52467                           
 52468                           ; BSR set to: 2
 52469                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 52470  015598  0E02               	movlw	2
 52471  01559A  6F87               	movwf	(_mediaInformation+3)& (0+255),b
 52472  01559C  0E00               	movlw	0
 52473  01559E  6F86               	movwf	(_mediaInformation+2)& (0+255),b
 52474                           
 52475                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 52476  0155A0  0E00               	movlw	0
 52477  0155A2  6F84               	movwf	_mediaInformation& (0+255),b
 52478                           
 52479                           ; BSR set to: 2
 52480                           ;external_flash.c: 15: return &mediaInformation;
 52481  0155A4  0E84               	movlw	low _mediaInformation
 52482  0155A6  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 52483  0155A8  0E02               	movlw	high _mediaInformation
 52484  0155AA  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 52485  0155AC  0012               	return	
 52486  0155AE                     __end_ofi2_ExternalFlash_MediaInitialize:
 52487                           	opt stack 0
 52488                           tosu	equ	0xFFF
 52489                           tosh	equ	0xFFE
 52490                           tosl	equ	0xFFD
 52491                           pclatu	equ	0xFFB
 52492                           pclath	equ	0xFFA
 52493                           tblptru	equ	0xFF8
 52494                           tblptrh	equ	0xFF7
 52495                           tblptrl	equ	0xFF6
 52496                           tablat	equ	0xFF5
 52497                           prodh	equ	0xFF4
 52498                           prodl	equ	0xFF3
 52499                           intcon	equ	0xFF2
 52500                           indf0	equ	0xFEF
 52501                           postinc0	equ	0xFEE
 52502                           fsr0h	equ	0xFEA
 52503                           fsr0l	equ	0xFE9
 52504                           wreg	equ	0xFE8
 52505                           indf1	equ	0xFE7
 52506                           postinc1	equ	0xFE6
 52507                           postdec1	equ	0xFE5
 52508                           plusw1	equ	0xFE3
 52509                           fsr1h	equ	0xFE2
 52510                           fsr1l	equ	0xFE1
 52511                           indf2	equ	0xFDF
 52512                           postinc2	equ	0xFDE
 52513                           postdec2	equ	0xFDD
 52514                           plusw2	equ	0xFDB
 52515                           fsr2h	equ	0xFDA
 52516                           fsr2l	equ	0xFD9
 52517                           status	equ	0xFD8
 52518                           
 52519 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 52520 ;; Defined at:
 52521 ;;		line 29 in file "external_flash.c"
 52522 ;; Parameters:    Size  Location     Type
 52523 ;;  config          2    0[COMRAM] PTR void 
 52524 ;;		 -> NULL(0), 
 52525 ;; Auto vars:     Size  Location     Type
 52526 ;;		None
 52527 ;; Return value:  Size  Location     Type
 52528 ;;                  1    wreg      unsigned char 
 52529 ;; Registers used:
 52530 ;;		wreg
 52531 ;; Tracked objects:
 52532 ;;		On entry : 0/0
 52533 ;;		On exit  : 0/0
 52534 ;;		Unchanged: 0/0
 52535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52540 ;;Total ram usage:        2 bytes
 52541 ;; Hardware stack levels used:    1
 52542 ;; This function calls:
 52543 ;;		Nothing
 52544 ;; This function is called by:
 52545 ;;		_USBMSDInit
 52546 ;;		_MSDProcessCommand
 52547 ;; This function uses a non-reentrant model
 52548 ;;
 52549                           
 52550                           	psect	text221
 52551  0156E2                     __ptext221:
 52552                           	opt stack 0
 52553  0156E2                     i2_ExternalFlash_MediaDetect:
 52554                           	opt stack 13
 52555                           
 52556                           ;external_flash.c: 31: return 1;
 52557                           
 52558                           ; BSR set to: 2
 52559                           ;incstack = 0
 52560  0156E2  0E01               	movlw	1
 52561  0156E4  0012               	return	
 52562  0156E6                     __end_ofi2_ExternalFlash_MediaDetect:
 52563                           	opt stack 0
 52564                           tosu	equ	0xFFF
 52565                           tosh	equ	0xFFE
 52566                           tosl	equ	0xFFD
 52567                           pclatu	equ	0xFFB
 52568                           pclath	equ	0xFFA
 52569                           tblptru	equ	0xFF8
 52570                           tblptrh	equ	0xFF7
 52571                           tblptrl	equ	0xFF6
 52572                           tablat	equ	0xFF5
 52573                           prodh	equ	0xFF4
 52574                           prodl	equ	0xFF3
 52575                           intcon	equ	0xFF2
 52576                           indf0	equ	0xFEF
 52577                           postinc0	equ	0xFEE
 52578                           fsr0h	equ	0xFEA
 52579                           fsr0l	equ	0xFE9
 52580                           wreg	equ	0xFE8
 52581                           indf1	equ	0xFE7
 52582                           postinc1	equ	0xFE6
 52583                           postdec1	equ	0xFE5
 52584                           plusw1	equ	0xFE3
 52585                           fsr1h	equ	0xFE2
 52586                           fsr1l	equ	0xFE1
 52587                           indf2	equ	0xFDF
 52588                           postinc2	equ	0xFDE
 52589                           postdec2	equ	0xFDD
 52590                           plusw2	equ	0xFDB
 52591                           fsr2h	equ	0xFDA
 52592                           fsr2l	equ	0xFD9
 52593                           status	equ	0xFD8
 52594                           
 52595 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 52596 ;; Defined at:
 52597 ;;		line 46 in file "app_device_custom_hid.c"
 52598 ;; Parameters:    Size  Location     Type
 52599 ;;		None
 52600 ;; Auto vars:     Size  Location     Type
 52601 ;;		None
 52602 ;; Return value:  Size  Location     Type
 52603 ;;                  1    wreg      void 
 52604 ;; Registers used:
 52605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52606 ;; Tracked objects:
 52607 ;;		On entry : 0/0
 52608 ;;		On exit  : 0/0
 52609 ;;		Unchanged: 0/0
 52610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52615 ;;Total ram usage:        0 bytes
 52616 ;; Hardware stack levels used:    1
 52617 ;; Hardware stack levels required when called:    2
 52618 ;; This function calls:
 52619 ;;		_USBEnableEndpoint
 52620 ;;		i2_USBTransferOnePacket
 52621 ;; This function is called by:
 52622 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52623 ;; This function uses a non-reentrant model
 52624 ;;
 52625                           
 52626                           	psect	text222
 52627  01506E                     __ptext222:
 52628                           	opt stack 0
 52629  01506E                     _APP_DeviceCustomHIDInitialize:
 52630                           	opt stack 13
 52631                           
 52632                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 52633                           
 52634                           ;incstack = 0
 52635  01506E  0E00               	movlw	0
 52636  015070  0101               	movlb	1	; () banked
 52637  015072  6F41               	movwf	_USBInHandle& (0+255),b
 52638  015074  0E00               	movlw	0
 52639  015076  6F42               	movwf	(_USBInHandle+1)& (0+255),b
 52640                           
 52641                           ; BSR set to: 1
 52642                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 52643  015078  0E1E               	movlw	30
 52644  01507A  6E09               	movwf	USBEnableEndpoint@options,c
 52645  01507C  0E01               	movlw	1
 52646  01507E  EC22  F0A7         	call	_USBEnableEndpoint
 52647                           
 52648                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 52649  015082  0E00               	movlw	0
 52650  015084  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52651  015086  0E80               	movlw	low _ReceivedDataBuffer
 52652  015088  6E02               	movwf	i2USBTransferOnePacket@data,c
 52653  01508A  0E03               	movlw	high _ReceivedDataBuffer
 52654  01508C  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52655  01508E  0E40               	movlw	64
 52656  015090  6E04               	movwf	i2USBTransferOnePacket@len,c
 52657  015092  0E01               	movlw	1
 52658  015094  EC64  F087         	call	i2_USBTransferOnePacket
 52659  015098  C001  F143         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 52660  01509C  C002  F144         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 52661  0150A0  0012               	return		;funcret
 52662  0150A2                     __end_of_APP_DeviceCustomHIDInitialize:
 52663                           	opt stack 0
 52664                           tosu	equ	0xFFF
 52665                           tosh	equ	0xFFE
 52666                           tosl	equ	0xFFD
 52667                           pclatu	equ	0xFFB
 52668                           pclath	equ	0xFFA
 52669                           tblptru	equ	0xFF8
 52670                           tblptrh	equ	0xFF7
 52671                           tblptrl	equ	0xFF6
 52672                           tablat	equ	0xFF5
 52673                           prodh	equ	0xFF4
 52674                           prodl	equ	0xFF3
 52675                           intcon	equ	0xFF2
 52676                           indf0	equ	0xFEF
 52677                           postinc0	equ	0xFEE
 52678                           fsr0h	equ	0xFEA
 52679                           fsr0l	equ	0xFE9
 52680                           wreg	equ	0xFE8
 52681                           indf1	equ	0xFE7
 52682                           postinc1	equ	0xFE6
 52683                           postdec1	equ	0xFE5
 52684                           plusw1	equ	0xFE3
 52685                           fsr1h	equ	0xFE2
 52686                           fsr1l	equ	0xFE1
 52687                           indf2	equ	0xFDF
 52688                           postinc2	equ	0xFDE
 52689                           postdec2	equ	0xFDD
 52690                           plusw2	equ	0xFDB
 52691                           fsr2h	equ	0xFDA
 52692                           fsr2l	equ	0xFD9
 52693                           status	equ	0xFD8
 52694                           
 52695 ;; *************** function i2_USBTransferOnePacket *****************
 52696 ;; Defined at:
 52697 ;;		line 995 in file "usb_device.c"
 52698 ;; Parameters:    Size  Location     Type
 52699 ;;  ep              1    wreg     unsigned char 
 52700 ;;  dir             1    0[COMRAM] unsigned char 
 52701 ;;  data            2    1[COMRAM] PTR unsigned char 
 52702 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 52703 ;;		 -> msd_cbw(31), NULL(0), 
 52704 ;;  len             1    3[COMRAM] unsigned char 
 52705 ;; Auto vars:     Size  Location     Type
 52706 ;;  ep              1    8[COMRAM] unsigned char 
 52707 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 52708 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 52709 ;; Return value:  Size  Location     Type
 52710 ;;                  2    0[COMRAM] PTR void 
 52711 ;; Registers used:
 52712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 52713 ;; Tracked objects:
 52714 ;;		On entry : 0/0
 52715 ;;		On exit  : 0/0
 52716 ;;		Unchanged: 0/0
 52717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52719 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52720 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52721 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52722 ;;Total ram usage:       11 bytes
 52723 ;; Hardware stack levels used:    1
 52724 ;; This function calls:
 52725 ;;		Nothing
 52726 ;; This function is called by:
 52727 ;;		_USBMSDInit
 52728 ;;		_USBCheckMSDRequest
 52729 ;;		_MSDTransferTerminated
 52730 ;;		_APP_DeviceCustomHIDInitialize
 52731 ;; This function uses a non-reentrant model
 52732 ;;
 52733                           
 52734                           	psect	text223
 52735  010EC8                     __ptext223:
 52736                           	opt stack 0
 52737  010EC8                     i2_USBTransferOnePacket:
 52738                           	opt stack 14
 52739                           
 52740                           ;incstack = 0
 52741                           ;i2USBTransferOnePacket@ep stored from wreg
 52742  010EC8  6E09               	movwf	i2USBTransferOnePacket@ep,c
 52743                           
 52744                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 52745  010ECA  5001               	movf	i2USBTransferOnePacket@dir,w,c
 52746  010ECC  B4D8               	btfsc	status,2,c
 52747  010ECE  D007               	goto	i2l184
 52748                           
 52749                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 52750  010ED0  5009               	movf	i2USBTransferOnePacket@ep,w,c
 52751  010ED2  0D02               	mullw	2
 52752  010ED4  0E1B               	movlw	low _pBDTEntryIn
 52753  010ED6  24F3               	addwf	prodl,w,c
 52754  010ED8  6ED9               	movwf	fsr2l,c
 52755  010EDA  0E01               	movlw	high _pBDTEntryIn
 52756  010EDC  D006               	goto	L85
 52757  010EDE                     i2l184:
 52758                           
 52759                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 52760  010EDE  5009               	movf	i2USBTransferOnePacket@ep,w,c
 52761  010EE0  0D02               	mullw	2
 52762  010EE2  0E21               	movlw	low _pBDTEntryOut
 52763  010EE4  24F3               	addwf	prodl,w,c
 52764  010EE6  6ED9               	movwf	fsr2l,c
 52765  010EE8  0E01               	movlw	high _pBDTEntryOut
 52766  010EEA                     L85:
 52767  010EEA  20F4               	addwfc	prodh,w,c
 52768  010EEC  6EDA               	movwf	fsr2h,c
 52769  010EEE  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 52770  010EF2  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 52771                           
 52772                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 52773  010EF6  500A               	movf	i2USBTransferOnePacket@handle,w,c
 52774  010EF8  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 52775  010EFA  A4D8               	btfss	status,2,c
 52776  010EFC  D005               	goto	i2l186
 52777                           
 52778                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 52779  010EFE  0E00               	movlw	0
 52780  010F00  6E01               	movwf	?i2_USBTransferOnePacket,c
 52781  010F02  0E00               	movlw	0
 52782  010F04  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 52783  010F06  0012               	return	
 52784  010F08                     i2l186:
 52785                           
 52786                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 52787  010F08  EE20 F002          	lfsr	2,2
 52788  010F0C  500A               	movf	i2USBTransferOnePacket@handle,w,c
 52789  010F0E  26D9               	addwf	fsr2l,f,c
 52790  010F10  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 52791  010F12  22DA               	addwfc	fsr2h,f,c
 52792  010F14  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 52793  010F18  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 52794                           
 52795                           ;usb_device.c: 1030: handle->CNT = len;
 52796  010F1C  EE20 F001          	lfsr	2,1
 52797  010F20  500A               	movf	i2USBTransferOnePacket@handle,w,c
 52798  010F22  26D9               	addwf	fsr2l,f,c
 52799  010F24  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 52800  010F26  22DA               	addwfc	fsr2h,f,c
 52801  010F28  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 52802                           
 52803                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 52804  010F2C  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 52805  010F30  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 52806  010F34  0E40               	movlw	64
 52807  010F36  16DF               	andwf	indf2,f,c
 52808                           
 52809                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 52810  010F38  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 52811  010F3C  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 52812  010F40  0E00               	movlw	0
 52813  010F42  86DB               	bsf	plusw2,3,c
 52814                           
 52815                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 52816  010F44  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 52817  010F48  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 52818  010F4C  0E00               	movlw	0
 52819  010F4E  8EDB               	bsf	plusw2,7,c
 52820                           
 52821                           ;usb_device.c: 1036: if(dir != 0)
 52822  010F50  5001               	movf	i2USBTransferOnePacket@dir,w,c
 52823  010F52  B4D8               	btfsc	status,2,c
 52824  010F54  D018               	goto	i2l188
 52825                           
 52826                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 52827  010F56  5009               	movf	i2USBTransferOnePacket@ep,w,c
 52828  010F58  0D02               	mullw	2
 52829  010F5A  0E1B               	movlw	low _pBDTEntryIn
 52830  010F5C  24F3               	addwf	prodl,w,c
 52831  010F5E  6ED9               	movwf	fsr2l,c
 52832  010F60  0E01               	movlw	high _pBDTEntryIn
 52833  010F62  20F4               	addwfc	prodh,w,c
 52834  010F64  6EDA               	movwf	fsr2h,c
 52835  010F66  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 52836  010F6A  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 52837  010F6E  0E04               	movlw	4
 52838  010F70  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 52839  010F72  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 52840  010F74  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 52841  010F76  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 52842  010F78  5009               	movf	i2USBTransferOnePacket@ep,w,c
 52843  010F7A  0D02               	mullw	2
 52844  010F7C  0E1B               	movlw	low _pBDTEntryIn
 52845  010F7E  24F3               	addwf	prodl,w,c
 52846  010F80  6ED9               	movwf	fsr2l,c
 52847  010F82  0E01               	movlw	high _pBDTEntryIn
 52848  010F84  D017               	goto	L86
 52849  010F86                     i2l188:
 52850                           
 52851                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 52852  010F86  5009               	movf	i2USBTransferOnePacket@ep,w,c
 52853  010F88  0D02               	mullw	2
 52854  010F8A  0E21               	movlw	low _pBDTEntryOut
 52855  010F8C  24F3               	addwf	prodl,w,c
 52856  010F8E  6ED9               	movwf	fsr2l,c
 52857  010F90  0E01               	movlw	high _pBDTEntryOut
 52858  010F92  20F4               	addwfc	prodh,w,c
 52859  010F94  6EDA               	movwf	fsr2h,c
 52860  010F96  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 52861  010F9A  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 52862  010F9E  0E04               	movlw	4
 52863  010FA0  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 52864  010FA2  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 52865  010FA4  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 52866  010FA6  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 52867  010FA8  5009               	movf	i2USBTransferOnePacket@ep,w,c
 52868  010FAA  0D02               	mullw	2
 52869  010FAC  0E21               	movlw	low _pBDTEntryOut
 52870  010FAE  24F3               	addwf	prodl,w,c
 52871  010FB0  6ED9               	movwf	fsr2l,c
 52872  010FB2  0E01               	movlw	high _pBDTEntryOut
 52873  010FB4                     L86:
 52874  010FB4  20F4               	addwfc	prodh,w,c
 52875  010FB6  6EDA               	movwf	fsr2h,c
 52876  010FB8  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 52877  010FBC  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 52878                           
 52879                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 52880  010FC0  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 52881  010FC4  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 52882  010FC8  0012               	return	
 52883  010FCA                     __end_ofi2_USBTransferOnePacket:
 52884                           	opt stack 0
 52885                           tosu	equ	0xFFF
 52886                           tosh	equ	0xFFE
 52887                           tosl	equ	0xFFD
 52888                           pclatu	equ	0xFFB
 52889                           pclath	equ	0xFFA
 52890                           tblptru	equ	0xFF8
 52891                           tblptrh	equ	0xFF7
 52892                           tblptrl	equ	0xFF6
 52893                           tablat	equ	0xFF5
 52894                           prodh	equ	0xFF4
 52895                           prodl	equ	0xFF3
 52896                           intcon	equ	0xFF2
 52897                           indf0	equ	0xFEF
 52898                           postinc0	equ	0xFEE
 52899                           fsr0h	equ	0xFEA
 52900                           fsr0l	equ	0xFE9
 52901                           wreg	equ	0xFE8
 52902                           indf1	equ	0xFE7
 52903                           postinc1	equ	0xFE6
 52904                           postdec1	equ	0xFE5
 52905                           plusw1	equ	0xFE3
 52906                           fsr1h	equ	0xFE2
 52907                           fsr1l	equ	0xFE1
 52908                           indf2	equ	0xFDF
 52909                           postinc2	equ	0xFDE
 52910                           postdec2	equ	0xFDD
 52911                           plusw2	equ	0xFDB
 52912                           fsr2h	equ	0xFDA
 52913                           fsr2l	equ	0xFD9
 52914                           status	equ	0xFD8
 52915                           
 52916 ;; *************** function _USBEnableEndpoint *****************
 52917 ;; Defined at:
 52918 ;;		line 878 in file "usb_device.c"
 52919 ;; Parameters:    Size  Location     Type
 52920 ;;  ep              1    wreg     unsigned char 
 52921 ;;  options         1    8[COMRAM] unsigned char 
 52922 ;; Auto vars:     Size  Location     Type
 52923 ;;  ep              1   11[COMRAM] unsigned char 
 52924 ;;  p               2    9[COMRAM] PTR unsigned char 
 52925 ;;		 -> UEP0(1), 
 52926 ;; Return value:  Size  Location     Type
 52927 ;;                  1    wreg      void 
 52928 ;; Registers used:
 52929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52930 ;; Tracked objects:
 52931 ;;		On entry : 0/0
 52932 ;;		On exit  : 0/0
 52933 ;;		Unchanged: 0/0
 52934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52935 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52936 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52938 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52939 ;;Total ram usage:        4 bytes
 52940 ;; Hardware stack levels used:    1
 52941 ;; Hardware stack levels required when called:    1
 52942 ;; This function calls:
 52943 ;;		_USBConfigureEndpoint
 52944 ;; This function is called by:
 52945 ;;		_APP_DeviceCustomHIDInitialize
 52946 ;;		_APP_DeviceMSDInitialize
 52947 ;; This function uses a non-reentrant model
 52948 ;;
 52949                           
 52950                           	psect	text224
 52951  014E44                     __ptext224:
 52952                           	opt stack 0
 52953  014E44                     _USBEnableEndpoint:
 52954                           	opt stack 13
 52955                           
 52956                           ;incstack = 0
 52957                           ;USBEnableEndpoint@ep stored from wreg
 52958  014E44  6E0C               	movwf	USBEnableEndpoint@ep,c
 52959                           
 52960                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 52961  014E46  A409               	btfss	USBEnableEndpoint@options,2,c
 52962  014E48  D005               	goto	i2l179
 52963                           
 52964                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 52965  014E4A  0E00               	movlw	0
 52966  014E4C  6E01               	movwf	USBConfigureEndpoint@direction,c
 52967  014E4E  500C               	movf	USBEnableEndpoint@ep,w,c
 52968  014E50  EC56  F09A         	call	_USBConfigureEndpoint
 52969  014E54                     i2l179:
 52970                           
 52971                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 52972  014E54  A209               	btfss	USBEnableEndpoint@options,1,c
 52973  014E56  D005               	goto	i2l180
 52974                           
 52975                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 52976  014E58  0E01               	movlw	1
 52977  014E5A  6E01               	movwf	USBConfigureEndpoint@direction,c
 52978  014E5C  500C               	movf	USBEnableEndpoint@ep,w,c
 52979  014E5E  EC56  F09A         	call	_USBConfigureEndpoint
 52980  014E62                     i2l180:
 52981                           
 52982                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 52983  014E62  500C               	movf	USBEnableEndpoint@ep,w,c
 52984  014E64  0D01               	mullw	1
 52985  014E66  0E26               	movlw	38
 52986  014E68  24F3               	addwf	prodl,w,c
 52987  014E6A  6E0A               	movwf	USBEnableEndpoint@p,c
 52988  014E6C  0E0F               	movlw	15
 52989  014E6E  20F4               	addwfc	prodh,w,c
 52990  014E70  6E0B               	movwf	USBEnableEndpoint@p+1,c
 52991                           
 52992                           ;usb_device.c: 901: *p = options;
 52993  014E72  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 52994  014E76  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 52995  014E7A  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 52996  014E7E  0012               	return		;funcret
 52997  014E80                     __end_of_USBEnableEndpoint:
 52998                           	opt stack 0
 52999                           tosu	equ	0xFFF
 53000                           tosh	equ	0xFFE
 53001                           tosl	equ	0xFFD
 53002                           pclatu	equ	0xFFB
 53003                           pclath	equ	0xFFA
 53004                           tblptru	equ	0xFF8
 53005                           tblptrh	equ	0xFF7
 53006                           tblptrl	equ	0xFF6
 53007                           tablat	equ	0xFF5
 53008                           prodh	equ	0xFF4
 53009                           prodl	equ	0xFF3
 53010                           intcon	equ	0xFF2
 53011                           indf0	equ	0xFEF
 53012                           postinc0	equ	0xFEE
 53013                           fsr0h	equ	0xFEA
 53014                           fsr0l	equ	0xFE9
 53015                           wreg	equ	0xFE8
 53016                           indf1	equ	0xFE7
 53017                           postinc1	equ	0xFE6
 53018                           postdec1	equ	0xFE5
 53019                           plusw1	equ	0xFE3
 53020                           fsr1h	equ	0xFE2
 53021                           fsr1l	equ	0xFE1
 53022                           indf2	equ	0xFDF
 53023                           postinc2	equ	0xFDE
 53024                           postdec2	equ	0xFDD
 53025                           plusw2	equ	0xFDB
 53026                           fsr2h	equ	0xFDA
 53027                           fsr2l	equ	0xFD9
 53028                           status	equ	0xFD8
 53029                           
 53030 ;; *************** function _USBConfigureEndpoint *****************
 53031 ;; Defined at:
 53032 ;;		line 1545 in file "usb_device.c"
 53033 ;; Parameters:    Size  Location     Type
 53034 ;;  EPNum           1    wreg     unsigned char 
 53035 ;;  direction       1    0[COMRAM] unsigned char 
 53036 ;; Auto vars:     Size  Location     Type
 53037 ;;  EPNum           1    5[COMRAM] unsigned char 
 53038 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 53039 ;;		 -> BDT(48), 
 53040 ;; Return value:  Size  Location     Type
 53041 ;;                  1    wreg      void 
 53042 ;; Registers used:
 53043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53044 ;; Tracked objects:
 53045 ;;		On entry : 0/0
 53046 ;;		On exit  : 0/0
 53047 ;;		Unchanged: 0/0
 53048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53049 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53050 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53051 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53052 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53053 ;;Total ram usage:        8 bytes
 53054 ;; Hardware stack levels used:    1
 53055 ;; This function calls:
 53056 ;;		Nothing
 53057 ;; This function is called by:
 53058 ;;		_USBEnableEndpoint
 53059 ;; This function uses a non-reentrant model
 53060 ;;
 53061                           
 53062                           	psect	text225
 53063  0134AC                     __ptext225:
 53064                           	opt stack 0
 53065  0134AC                     _USBConfigureEndpoint:
 53066                           	opt stack 13
 53067                           
 53068                           ;incstack = 0
 53069                           ;USBConfigureEndpoint@EPNum stored from wreg
 53070  0134AC  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 53071                           
 53072                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 53073  0134AE  0E00               	movlw	0
 53074  0134B0  6E07               	movwf	USBConfigureEndpoint@handle,c
 53075  0134B2  0E0D               	movlw	13
 53076  0134B4  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 53077                           
 53078                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 53079  0134B6  5001               	movf	USBConfigureEndpoint@direction,w,c
 53080  0134B8  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 53081  0134BA  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 53082  0134BC  90D8               	bcf	status,0,c
 53083  0134BE  3602               	rlcf	??_USBConfigureEndpoint,f,c
 53084  0134C0  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 53085  0134C2  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 53086  0134C4  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 53087  0134C6  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 53088  0134C8  90D8               	bcf	status,0,c
 53089  0134CA  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53090  0134CC  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53091  0134CE  90D8               	bcf	status,0,c
 53092  0134D0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53093  0134D2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53094  0134D4  5002               	movf	??_USBConfigureEndpoint,w,c
 53095  0134D6  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 53096  0134D8  5003               	movf	??_USBConfigureEndpoint+1,w,c
 53097  0134DA  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 53098  0134DC  90D8               	bcf	status,0,c
 53099  0134DE  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53100  0134E0  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53101  0134E2  90D8               	bcf	status,0,c
 53102  0134E4  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53103  0134E6  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53104  0134E8  5004               	movf	??_USBConfigureEndpoint+2,w,c
 53105  0134EA  2607               	addwf	USBConfigureEndpoint@handle,f,c
 53106  0134EC  5005               	movf	??_USBConfigureEndpoint+3,w,c
 53107  0134EE  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 53108                           
 53109                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 53110  0134F0  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 53111  0134F4  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 53112  0134F8  9EDF               	bcf	indf2,7,c
 53113                           
 53114                           ;usb_device.c: 1559: if(direction == 0)
 53115  0134FA  5001               	movf	USBConfigureEndpoint@direction,w,c
 53116  0134FC  A4D8               	btfss	status,2,c
 53117  0134FE  D007               	goto	i2l226
 53118                           
 53119                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 53120  013500  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 53121  013502  0D02               	mullw	2
 53122  013504  0E21               	movlw	low _pBDTEntryOut
 53123  013506  24F3               	addwf	prodl,w,c
 53124  013508  6ED9               	movwf	fsr2l,c
 53125  01350A  0E01               	movlw	high _pBDTEntryOut
 53126  01350C  D006               	goto	L87
 53127  01350E                     i2l226:
 53128                           
 53129                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 53130  01350E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 53131  013510  0D02               	mullw	2
 53132  013512  0E1B               	movlw	low _pBDTEntryIn
 53133  013514  24F3               	addwf	prodl,w,c
 53134  013516  6ED9               	movwf	fsr2l,c
 53135  013518  0E01               	movlw	high _pBDTEntryIn
 53136  01351A                     L87:
 53137  01351A  20F4               	addwfc	prodh,w,c
 53138  01351C  6EDA               	movwf	fsr2h,c
 53139  01351E  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 53140  013522  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 53141                           
 53142                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 53143  013526  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 53144  01352A  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 53145  01352E  9CDF               	bcf	indf2,6,c
 53146                           
 53147                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 53148  013530  EE20 F004          	lfsr	2,4
 53149  013534  5007               	movf	USBConfigureEndpoint@handle,w,c
 53150  013536  26D9               	addwf	fsr2l,f,c
 53151  013538  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 53152  01353A  22DA               	addwfc	fsr2h,f,c
 53153  01353C  8CDF               	bsf	indf2,6,c
 53154  01353E  0012               	return		;funcret
 53155  013540                     __end_of_USBConfigureEndpoint:
 53156                           	opt stack 0
 53157                           tosu	equ	0xFFF
 53158                           tosh	equ	0xFFE
 53159                           tosl	equ	0xFFD
 53160                           pclatu	equ	0xFFB
 53161                           pclath	equ	0xFFA
 53162                           tblptru	equ	0xFF8
 53163                           tblptrh	equ	0xFF7
 53164                           tblptrl	equ	0xFF6
 53165                           tablat	equ	0xFF5
 53166                           prodh	equ	0xFF4
 53167                           prodl	equ	0xFF3
 53168                           intcon	equ	0xFF2
 53169                           indf0	equ	0xFEF
 53170                           postinc0	equ	0xFEE
 53171                           fsr0h	equ	0xFEA
 53172                           fsr0l	equ	0xFE9
 53173                           wreg	equ	0xFE8
 53174                           indf1	equ	0xFE7
 53175                           postinc1	equ	0xFE6
 53176                           postdec1	equ	0xFE5
 53177                           plusw1	equ	0xFE3
 53178                           fsr1h	equ	0xFE2
 53179                           fsr1l	equ	0xFE1
 53180                           indf2	equ	0xFDF
 53181                           postinc2	equ	0xFDE
 53182                           postdec2	equ	0xFDD
 53183                           plusw2	equ	0xFDB
 53184                           fsr2h	equ	0xFDA
 53185                           fsr2l	equ	0xFD9
 53186                           status	equ	0xFD8
 53187                           
 53188 ;; *************** function _USBCtrlTrfOutHandler *****************
 53189 ;; Defined at:
 53190 ;;		line 2540 in file "usb_device.c"
 53191 ;; Parameters:    Size  Location     Type
 53192 ;;		None
 53193 ;; Auto vars:     Size  Location     Type
 53194 ;;		None
 53195 ;; Return value:  Size  Location     Type
 53196 ;;                  1    wreg      void 
 53197 ;; Registers used:
 53198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53199 ;; Tracked objects:
 53200 ;;		On entry : 0/0
 53201 ;;		On exit  : 0/0
 53202 ;;		Unchanged: 0/0
 53203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53208 ;;Total ram usage:        0 bytes
 53209 ;; Hardware stack levels used:    1
 53210 ;; Hardware stack levels required when called:    2
 53211 ;; This function calls:
 53212 ;;		_USBCtrlTrfRxService
 53213 ;; This function is called by:
 53214 ;;		_USBCtrlEPService
 53215 ;; This function uses a non-reentrant model
 53216 ;;
 53217                           
 53218                           	psect	text226
 53219  0141FE                     __ptext226:
 53220                           	opt stack 0
 53221  0141FE                     _USBCtrlTrfOutHandler:
 53222                           	opt stack 13
 53223                           
 53224                           ;usb_device.c: 2542: if(controlTransferState == 2)
 53225                           
 53226                           ;incstack = 0
 53227  0141FE  0E02               	movlw	2
 53228  014200  0101               	movlb	1	; () banked
 53229  014202  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 53230  014204  A4D8               	btfss	status,2,c
 53231  014206  D003               	goto	i2l332
 53232                           
 53233                           ; BSR set to: 1
 53234                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 53235  014208  EC52  F085         	call	_USBCtrlTrfRxService	;wreg free
 53236                           
 53237                           ;usb_device.c: 2545: }
 53238  01420C  0012               	return	
 53239  01420E                     i2l332:
 53240                           
 53241                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 53242  01420E  0E00               	movlw	0
 53243  014210  0101               	movlb	1	; () banked
 53244  014212  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 53245                           
 53246                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 53247  014214  516B               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 53248  014216  A4D8               	btfss	status,2,c
 53249  014218  D01F               	goto	i2l334
 53250                           
 53251                           ; BSR set to: 1
 53252                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 53253  01421A  EE20 F001          	lfsr	2,1
 53254  01421E  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53255  014220  26D9               	addwf	fsr2l,f,c
 53256  014222  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53257  014224  22DA               	addwfc	fsr2h,f,c
 53258  014226  0E08               	movlw	8
 53259  014228  6EDF               	movwf	indf2,c
 53260                           
 53261                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 53262  01422A  EE20 F002          	lfsr	2,2
 53263  01422E  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53264  014230  26D9               	addwf	fsr2l,f,c
 53265  014232  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53266  014234  22DA               	addwfc	fsr2h,f,c
 53267  014236  0E30               	movlw	48
 53268  014238  6EDE               	movwf	postinc2,c
 53269  01423A  0E0D               	movlw	13
 53270  01423C  6EDD               	movwf	postdec2,c
 53271                           
 53272                           ; BSR set to: 1
 53273                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 53274  01423E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53275  014242  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53276  014246  0E0C               	movlw	12
 53277  014248  6EDF               	movwf	indf2,c
 53278                           
 53279                           ; BSR set to: 1
 53280                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53281  01424A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53282  01424E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53283  014252  0E00               	movlw	0
 53284  014254  8EDB               	bsf	plusw2,7,c
 53285                           
 53286                           ;usb_device.c: 2563: }
 53287  014256  0012               	return	
 53288  014258                     i2l334:
 53289                           
 53290                           ; BSR set to: 1
 53291                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 53292                           
 53293                           ; BSR set to: 1
 53294  014258  0E00               	movlw	0
 53295  01425A  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 53296                           
 53297                           ; BSR set to: 1
 53298  01425C  0012               	return	
 53299  01425E                     __end_of_USBCtrlTrfOutHandler:
 53300                           	opt stack 0
 53301                           tosu	equ	0xFFF
 53302                           tosh	equ	0xFFE
 53303                           tosl	equ	0xFFD
 53304                           pclatu	equ	0xFFB
 53305                           pclath	equ	0xFFA
 53306                           tblptru	equ	0xFF8
 53307                           tblptrh	equ	0xFF7
 53308                           tblptrl	equ	0xFF6
 53309                           tablat	equ	0xFF5
 53310                           prodh	equ	0xFF4
 53311                           prodl	equ	0xFF3
 53312                           intcon	equ	0xFF2
 53313                           indf0	equ	0xFEF
 53314                           postinc0	equ	0xFEE
 53315                           fsr0h	equ	0xFEA
 53316                           fsr0l	equ	0xFE9
 53317                           wreg	equ	0xFE8
 53318                           indf1	equ	0xFE7
 53319                           postinc1	equ	0xFE6
 53320                           postdec1	equ	0xFE5
 53321                           plusw1	equ	0xFE3
 53322                           fsr1h	equ	0xFE2
 53323                           fsr1l	equ	0xFE1
 53324                           indf2	equ	0xFDF
 53325                           postinc2	equ	0xFDE
 53326                           postdec2	equ	0xFDD
 53327                           plusw2	equ	0xFDB
 53328                           fsr2h	equ	0xFDA
 53329                           fsr2l	equ	0xFD9
 53330                           status	equ	0xFD8
 53331                           
 53332 ;; *************** function _USBCtrlTrfRxService *****************
 53333 ;; Defined at:
 53334 ;;		line 1854 in file "usb_device.c"
 53335 ;; Parameters:    Size  Location     Type
 53336 ;;		None
 53337 ;; Auto vars:     Size  Location     Type
 53338 ;;  byteToRead      1    1[COMRAM] unsigned char 
 53339 ;;  i               1    0[COMRAM] unsigned char 
 53340 ;; Return value:  Size  Location     Type
 53341 ;;                  1    wreg      void 
 53342 ;; Registers used:
 53343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53344 ;; Tracked objects:
 53345 ;;		On entry : 0/0
 53346 ;;		On exit  : 0/0
 53347 ;;		Unchanged: 0/0
 53348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53353 ;;Total ram usage:        2 bytes
 53354 ;; Hardware stack levels used:    1
 53355 ;; Hardware stack levels required when called:    1
 53356 ;; This function calls:
 53357 ;;		_USBCtrlEPAllowStatusStage
 53358 ;; This function is called by:
 53359 ;;		_USBCtrlTrfOutHandler
 53360 ;; This function uses a non-reentrant model
 53361 ;;
 53362                           
 53363                           	psect	text227
 53364  010AA4                     __ptext227:
 53365                           	opt stack 0
 53366  010AA4                     _USBCtrlTrfRxService:
 53367                           	opt stack 13
 53368                           
 53369                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 53370                           
 53371                           ;incstack = 0
 53372  010AA4  0101               	movlb	1	; () banked
 53373  010AA6  EE20 F001          	lfsr	2,1
 53374  010AAA  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 53375  010AAC  26D9               	addwf	fsr2l,f,c
 53376  010AAE  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 53377  010AB0  22DA               	addwfc	fsr2h,f,c
 53378  010AB2  50DF               	movf	indf2,w,c
 53379  010AB4  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 53380                           
 53381                           ; BSR set to: 1
 53382                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 53383  010AB6  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 53384  010AB8  5D16               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 53385  010ABA  0E00               	movlw	0
 53386  010ABC  5917               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 53387  010ABE  A0D8               	btfss	status,0,c
 53388                           
 53389                           ; BSR set to: 1
 53390                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 53391  010AC0  C116  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 53392                           
 53393                           ; BSR set to: 1
 53394                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 53395                           
 53396                           ; BSR set to: 1
 53397  010AC4  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 53398  010AC6  5F16               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 53399  010AC8  0E00               	movlw	0
 53400  010ACA  5B17               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 53401                           
 53402                           ; BSR set to: 1
 53403                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 53404  010ACC  0E00               	movlw	0
 53405  010ACE  6E01               	movwf	USBCtrlTrfRxService@i,c
 53406  010AD0  D011               	goto	i2l260
 53407  010AD2                     
 53408                           ; BSR set to: 1
 53409                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 53410                           
 53411                           ; BSR set to: 1
 53412  010AD2  5001               	movf	USBCtrlTrfRxService@i,w,c
 53413  010AD4  0D01               	mullw	1
 53414  010AD6  0E38               	movlw	56
 53415  010AD8  24F3               	addwf	prodl,w,c
 53416  010ADA  6ED9               	movwf	fsr2l,c
 53417  010ADC  0E0D               	movlw	13
 53418  010ADE  20F4               	addwfc	prodh,w,c
 53419  010AE0  6EDA               	movwf	fsr2h,c
 53420  010AE2  C112  FFE1         	movff	_outPipes,fsr1l	;volatile
 53421  010AE6  C113  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 53422  010AEA  CFDF FFE7          	movff	indf2,indf1
 53423                           
 53424                           ; BSR set to: 1
 53425  010AEE  4B12               	infsnz	_outPipes& (0+255),f,b	;volatile
 53426  010AF0  2B13               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 53427                           
 53428                           ; BSR set to: 1
 53429  010AF2  2A01               	incf	USBCtrlTrfRxService@i,f,c
 53430  010AF4                     i2l260:
 53431                           
 53432                           ; BSR set to: 1
 53433                           
 53434                           ; BSR set to: 1
 53435  010AF4  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 53436  010AF6  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 53437  010AF8  A0D8               	btfss	status,0,c
 53438  010AFA  D7EB               	goto	i2l261
 53439                           
 53440                           ; BSR set to: 1
 53441                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 53442                           
 53443                           ; BSR set to: 1
 53444  010AFC  5116               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 53445  010AFE  1117               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 53446  010B00  B4D8               	btfsc	status,2,c
 53447  010B02  D032               	goto	i2l263
 53448                           
 53449                           ; BSR set to: 1
 53450                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 53451  010B04  EE20 F001          	lfsr	2,1
 53452  010B08  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53453  010B0A  26D9               	addwf	fsr2l,f,c
 53454  010B0C  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53455  010B0E  22DA               	addwfc	fsr2h,f,c
 53456  010B10  0E08               	movlw	8
 53457  010B12  6EDF               	movwf	indf2,c
 53458                           
 53459                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 53460  010B14  EE20 F002          	lfsr	2,2
 53461  010B18  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53462  010B1A  26D9               	addwf	fsr2l,f,c
 53463  010B1C  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53464  010B1E  22DA               	addwfc	fsr2h,f,c
 53465  010B20  0E38               	movlw	56
 53466  010B22  6EDE               	movwf	postinc2,c
 53467  010B24  0E0D               	movlw	13
 53468  010B26  6EDD               	movwf	postdec2,c
 53469                           
 53470                           ; BSR set to: 1
 53471                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 53472  010B28  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 53473  010B2C  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 53474  010B30  BCDF               	btfsc	indf2,6,c
 53475  010B32  D00D               	goto	i2l264
 53476                           
 53477                           ; BSR set to: 1
 53478                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 53479  010B34  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53480  010B38  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53481  010B3C  0E48               	movlw	72
 53482  010B3E  6EDF               	movwf	indf2,c
 53483                           
 53484                           ; BSR set to: 1
 53485                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53486  010B40  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53487  010B44  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53488  010B48  0E00               	movlw	0
 53489  010B4A  8EDB               	bsf	plusw2,7,c
 53490                           
 53491                           ;usb_device.c: 1891: }
 53492  010B4C  0012               	return	
 53493  010B4E                     i2l264:
 53494                           
 53495                           ; BSR set to: 1
 53496                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 53497                           
 53498                           ; BSR set to: 1
 53499  010B4E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53500  010B52  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53501  010B56  0E08               	movlw	8
 53502  010B58  6EDF               	movwf	indf2,c
 53503                           
 53504                           ; BSR set to: 1
 53505                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53506  010B5A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53507  010B5E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53508  010B62  0E00               	movlw	0
 53509  010B64  8EDB               	bsf	plusw2,7,c
 53510                           
 53511                           ; BSR set to: 1
 53512                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 53513  010B66  0012               	return	
 53514  010B68                     i2l263:
 53515                           
 53516                           ; BSR set to: 1
 53517                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 53518                           
 53519                           ; BSR set to: 1
 53520  010B68  EE20 F001          	lfsr	2,1
 53521  010B6C  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53522  010B6E  26D9               	addwf	fsr2l,f,c
 53523  010B70  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53524  010B72  22DA               	addwfc	fsr2h,f,c
 53525  010B74  0E08               	movlw	8
 53526  010B76  6EDF               	movwf	indf2,c
 53527                           
 53528                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 53529  010B78  EE20 F002          	lfsr	2,2
 53530  010B7C  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53531  010B7E  26D9               	addwf	fsr2l,f,c
 53532  010B80  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53533  010B82  22DA               	addwfc	fsr2h,f,c
 53534  010B84  0E30               	movlw	48
 53535  010B86  6EDE               	movwf	postinc2,c
 53536  010B88  0E0D               	movlw	13
 53537  010B8A  6EDD               	movwf	postdec2,c
 53538                           
 53539                           ; BSR set to: 1
 53540                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 53541  010B8C  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53542  010B90  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53543  010B94  0E04               	movlw	4
 53544  010B96  6EDF               	movwf	indf2,c
 53545                           
 53546                           ; BSR set to: 1
 53547                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53548  010B98  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53549  010B9C  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53550  010BA0  0E00               	movlw	0
 53551  010BA2  8EDB               	bsf	plusw2,7,c
 53552                           
 53553                           ; BSR set to: 1
 53554                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 53555                           
 53556                           ; BSR set to: 1
 53557                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 53558  010BA4  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 53559                           
 53560                           ; BSR set to: 1
 53561                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 53562  010BA6  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 53563  010BA8  A4D8               	btfss	status,2,c
 53564  010BAA  0012               	return	
 53565                           
 53566                           ; BSR set to: 1
 53567                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 53568  010BAC  EC09  F093         	call	_USBCtrlEPAllowStatusStage	;wreg free
 53569  010BB0  0012               	return	
 53570  010BB2                     __end_of_USBCtrlTrfRxService:
 53571                           	opt stack 0
 53572                           tosu	equ	0xFFF
 53573                           tosh	equ	0xFFE
 53574                           tosl	equ	0xFFD
 53575                           pclatu	equ	0xFFB
 53576                           pclath	equ	0xFFA
 53577                           tblptru	equ	0xFF8
 53578                           tblptrh	equ	0xFF7
 53579                           tblptrl	equ	0xFF6
 53580                           tablat	equ	0xFF5
 53581                           prodh	equ	0xFF4
 53582                           prodl	equ	0xFF3
 53583                           intcon	equ	0xFF2
 53584                           indf0	equ	0xFEF
 53585                           postinc0	equ	0xFEE
 53586                           fsr0h	equ	0xFEA
 53587                           fsr0l	equ	0xFE9
 53588                           wreg	equ	0xFE8
 53589                           indf1	equ	0xFE7
 53590                           postinc1	equ	0xFE6
 53591                           postdec1	equ	0xFE5
 53592                           plusw1	equ	0xFE3
 53593                           fsr1h	equ	0xFE2
 53594                           fsr1l	equ	0xFE1
 53595                           indf2	equ	0xFDF
 53596                           postinc2	equ	0xFDE
 53597                           postdec2	equ	0xFDD
 53598                           plusw2	equ	0xFDB
 53599                           fsr2h	equ	0xFDA
 53600                           fsr2l	equ	0xFD9
 53601                           status	equ	0xFD8
 53602                           
 53603 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 53604 ;; Defined at:
 53605 ;;		line 1418 in file "usb_device.c"
 53606 ;; Parameters:    Size  Location     Type
 53607 ;;		None
 53608 ;; Auto vars:     Size  Location     Type
 53609 ;;		None
 53610 ;; Return value:  Size  Location     Type
 53611 ;;                  1    wreg      void 
 53612 ;; Registers used:
 53613 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53614 ;; Tracked objects:
 53615 ;;		On entry : 0/0
 53616 ;;		On exit  : 0/0
 53617 ;;		Unchanged: 0/0
 53618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53623 ;;Total ram usage:        0 bytes
 53624 ;; Hardware stack levels used:    1
 53625 ;; This function calls:
 53626 ;;		Nothing
 53627 ;; This function is called by:
 53628 ;;		_USBDeviceTasks
 53629 ;;		_USBCtrlEPServiceComplete
 53630 ;;		_USBCtrlTrfRxService
 53631 ;; This function uses a non-reentrant model
 53632 ;;
 53633                           
 53634                           	psect	text228
 53635  012612                     __ptext228:
 53636                           	opt stack 0
 53637  012612                     _USBCtrlEPAllowStatusStage:
 53638                           	opt stack 13
 53639                           
 53640                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 53641                           
 53642                           ;incstack = 0
 53643  012612  0101               	movlb	1	; () banked
 53644  012614  5168               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 53645  012616  A4D8               	btfss	status,2,c
 53646  012618  0012               	return	
 53647                           
 53648                           ; BSR set to: 1
 53649                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 53650  01261A  0E01               	movlw	1
 53651  01261C  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 53652                           
 53653                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 53654  01261E  5167               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 53655  012620  A4D8               	btfss	status,2,c
 53656  012622  0012               	return	
 53657                           
 53658                           ; BSR set to: 1
 53659                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 53660  012624  0E01               	movlw	1
 53661  012626  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 53662                           
 53663                           ; BSR set to: 1
 53664                           ;usb_device.c: 1434: if(controlTransferState == 2)
 53665  012628  0E02               	movlw	2
 53666  01262A  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 53667  01262C  A4D8               	btfss	status,2,c
 53668  01262E  D015               	goto	i2l214
 53669                           
 53670                           ; BSR set to: 1
 53671                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 53672  012630  EE20 F001          	lfsr	2,1
 53673  012634  511B               	movf	_pBDTEntryIn& (0+255),w,b
 53674  012636  26D9               	addwf	fsr2l,f,c
 53675  012638  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 53676  01263A  22DA               	addwfc	fsr2h,f,c
 53677  01263C  0E00               	movlw	0
 53678  01263E  6EDF               	movwf	indf2,c
 53679                           
 53680                           ; BSR set to: 1
 53681                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 53682  012640  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 53683  012644  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53684  012648  0E48               	movlw	72
 53685  01264A  6EDF               	movwf	indf2,c
 53686                           
 53687                           ; BSR set to: 1
 53688                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 53689  01264C  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 53690  012650  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53691  012654  0E00               	movlw	0
 53692  012656  8EDB               	bsf	plusw2,7,c
 53693                           
 53694                           ;usb_device.c: 1439: }
 53695  012658  0012               	return	
 53696  01265A                     i2l214:
 53697                           
 53698                           ; BSR set to: 1
 53699                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 53700                           
 53701                           ; BSR set to: 1
 53702  01265A  056F               	decf	_controlTransferState& (0+255),w,b	;volatile
 53703  01265C  A4D8               	btfss	status,2,c
 53704  01265E  0012               	return	
 53705                           
 53706                           ; BSR set to: 1
 53707                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 53708  012660  0E00               	movlw	0
 53709  012662  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 53710                           
 53711                           ; BSR set to: 1
 53712                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 53713  012664  EE20 F001          	lfsr	2,1
 53714  012668  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 53715  01266A  26D9               	addwf	fsr2l,f,c
 53716  01266C  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 53717  01266E  22DA               	addwfc	fsr2h,f,c
 53718  012670  0E08               	movlw	8
 53719  012672  6EDF               	movwf	indf2,c
 53720                           
 53721                           ; BSR set to: 1
 53722                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 53723  012674  EE20 F002          	lfsr	2,2
 53724  012678  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 53725  01267A  26D9               	addwf	fsr2l,f,c
 53726  01267C  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 53727  01267E  22DA               	addwfc	fsr2h,f,c
 53728  012680  0E30               	movlw	48
 53729  012682  6EDE               	movwf	postinc2,c
 53730  012684  0E0D               	movlw	13
 53731  012686  6EDD               	movwf	postdec2,c
 53732                           
 53733                           ; BSR set to: 1
 53734                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 53735  012688  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 53736  01268C  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 53737  012690  0E04               	movlw	4
 53738  012692  6EDF               	movwf	indf2,c
 53739                           
 53740                           ; BSR set to: 1
 53741                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 53742  012694  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 53743  012698  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 53744  01269C  0E00               	movlw	0
 53745  01269E  8EDB               	bsf	plusw2,7,c
 53746                           
 53747                           ; BSR set to: 1
 53748                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 53749  0126A0  0E01               	movlw	1
 53750  0126A2  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 53751                           
 53752                           ; BSR set to: 1
 53753                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 53754  0126A4  EE20 F001          	lfsr	2,1
 53755  0126A8  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53756  0126AA  26D9               	addwf	fsr2l,f,c
 53757  0126AC  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53758  0126AE  22DA               	addwfc	fsr2h,f,c
 53759  0126B0  0E08               	movlw	8
 53760  0126B2  6EDF               	movwf	indf2,c
 53761                           
 53762                           ; BSR set to: 1
 53763                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 53764  0126B4  EE20 F002          	lfsr	2,2
 53765  0126B8  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53766  0126BA  26D9               	addwf	fsr2l,f,c
 53767  0126BC  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53768  0126BE  22DA               	addwfc	fsr2h,f,c
 53769  0126C0  0E30               	movlw	48
 53770  0126C2  6EDE               	movwf	postinc2,c
 53771  0126C4  0E0D               	movlw	13
 53772  0126C6  6EDD               	movwf	postdec2,c
 53773                           
 53774                           ; BSR set to: 1
 53775                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 53776  0126C8  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53777  0126CC  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53778  0126D0  0E80               	movlw	128
 53779  0126D2  6EDF               	movwf	indf2,c
 53780                           
 53781                           ; BSR set to: 1
 53782                           
 53783                           ; BSR set to: 1
 53784                           
 53785                           ; BSR set to: 1
 53786  0126D4  0012               	return	
 53787  0126D6                     __end_of_USBCtrlEPAllowStatusStage:
 53788                           	opt stack 0
 53789                           tosu	equ	0xFFF
 53790                           tosh	equ	0xFFE
 53791                           tosl	equ	0xFFD
 53792                           pclatu	equ	0xFFB
 53793                           pclath	equ	0xFFA
 53794                           tblptru	equ	0xFF8
 53795                           tblptrh	equ	0xFF7
 53796                           tblptrl	equ	0xFF6
 53797                           tablat	equ	0xFF5
 53798                           prodh	equ	0xFF4
 53799                           prodl	equ	0xFF3
 53800                           intcon	equ	0xFF2
 53801                           indf0	equ	0xFEF
 53802                           postinc0	equ	0xFEE
 53803                           fsr0h	equ	0xFEA
 53804                           fsr0l	equ	0xFE9
 53805                           wreg	equ	0xFE8
 53806                           indf1	equ	0xFE7
 53807                           postinc1	equ	0xFE6
 53808                           postdec1	equ	0xFE5
 53809                           plusw1	equ	0xFE3
 53810                           fsr1h	equ	0xFE2
 53811                           fsr1l	equ	0xFE1
 53812                           indf2	equ	0xFDF
 53813                           postinc2	equ	0xFDE
 53814                           postdec2	equ	0xFDD
 53815                           plusw2	equ	0xFDB
 53816                           fsr2h	equ	0xFDA
 53817                           fsr2l	equ	0xFD9
 53818                           status	equ	0xFD8
 53819                           
 53820 ;; *************** function _USBCtrlTrfInHandler *****************
 53821 ;; Defined at:
 53822 ;;		line 2594 in file "usb_device.c"
 53823 ;; Parameters:    Size  Location     Type
 53824 ;;		None
 53825 ;; Auto vars:     Size  Location     Type
 53826 ;;  lastDTS         1    1[COMRAM] unsigned char 
 53827 ;; Return value:  Size  Location     Type
 53828 ;;                  1    wreg      void 
 53829 ;; Registers used:
 53830 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 53831 ;; Tracked objects:
 53832 ;;		On entry : 0/0
 53833 ;;		On exit  : 0/0
 53834 ;;		Unchanged: 0/0
 53835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53840 ;;Total ram usage:        1 bytes
 53841 ;; Hardware stack levels used:    1
 53842 ;; Hardware stack levels required when called:    1
 53843 ;; This function calls:
 53844 ;;		_USBCtrlTrfTxService
 53845 ;; This function is called by:
 53846 ;;		_USBCtrlEPService
 53847 ;; This function uses a non-reentrant model
 53848 ;;
 53849                           
 53850                           	psect	text229
 53851  0126D6                     __ptext229:
 53852                           	opt stack 0
 53853  0126D6                     _USBCtrlTrfInHandler:
 53854                           	opt stack 14
 53855                           
 53856                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 53857                           
 53858                           ; BSR set to: 1
 53859                           ;incstack = 0
 53860  0126D6  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 53861  0126DA  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53862  0126DE  0101               	movlb	1	; () banked
 53863  0126E0  0E00               	movlw	0
 53864  0126E2  BCDF               	btfsc	indf2,6,c
 53865  0126E4  0E01               	movlw	1
 53866  0126E6  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 53867                           
 53868                           ; BSR set to: 1
 53869                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 53870  0126E8  0E04               	movlw	4
 53871  0126EA  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 53872  0126EC  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 53873  0126EE  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 53874  0126F0  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 53875                           
 53876                           ; BSR set to: 1
 53877                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 53878  0126F2  0E08               	movlw	8
 53879  0126F4  185E               	xorwf	_USBDeviceState,w,c	;volatile
 53880  0126F6  A4D8               	btfss	status,2,c
 53881  0126F8  D00C               	goto	i2l341
 53882                           
 53883                           ; BSR set to: 1
 53884                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 53885  0126FA  010D               	movlb	13	; () banked
 53886  0126FC  5132               	movf	50,w,b	;volatile
 53887  0126FE  0B7F               	andlw	127
 53888  012700  010F               	movlb	15	; () banked
 53889  012702  6F38               	movwf	56,b	;volatile
 53890                           
 53891                           ; BSR set to: 15
 53892                           ;usb_device.c: 2609: if(UADDR != 0u)
 53893  012704  5138               	movf	56,w,b	;volatile
 53894  012706  B4D8               	btfsc	status,2,c
 53895  012708  D002               	goto	i2l340
 53896                           
 53897                           ; BSR set to: 15
 53898                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 53899  01270A  0E10               	movlw	16
 53900  01270C  D001               	goto	L88
 53901  01270E                     i2l340:
 53902                           
 53903                           ; BSR set to: 15
 53904                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 53905                           
 53906                           ; BSR set to: 15
 53907  01270E  0E04               	movlw	4
 53908  012710                     L88:
 53909  012710  6E5E               	movwf	_USBDeviceState,c	;volatile
 53910  012712                     i2l341:
 53911                           
 53912                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 53913                           
 53914                           ; BSR set to: 15
 53915                           
 53916                           ; BSR set to: 15
 53917  012712  0101               	movlb	1	; () banked
 53918  012714  056F               	decf	_controlTransferState& (0+255),w,b	;volatile
 53919  012716  A4D8               	btfss	status,2,c
 53920  012718  D03B               	goto	i2l342
 53921                           
 53922                           ; BSR set to: 1
 53923                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 53924  01271A  EE20 F002          	lfsr	2,2
 53925  01271E  511B               	movf	_pBDTEntryIn& (0+255),w,b
 53926  012720  26D9               	addwf	fsr2l,f,c
 53927  012722  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 53928  012724  22DA               	addwfc	fsr2h,f,c
 53929  012726  0E38               	movlw	56
 53930  012728  6EDE               	movwf	postinc2,c
 53931  01272A  0E0D               	movlw	13
 53932  01272C  6EDD               	movwf	postdec2,c
 53933                           
 53934                           ; BSR set to: 1
 53935                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 53936  01272E  EC04  F091         	call	_USBCtrlTrfTxService	;wreg free
 53937                           
 53938                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 53939  012732  0E02               	movlw	2
 53940  012734  0101               	movlb	1	; () banked
 53941  012736  1970               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 53942  012738  A4D8               	btfss	status,2,c
 53943  01273A  D00D               	goto	i2l343
 53944                           
 53945                           ; BSR set to: 1
 53946                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 53947  01273C  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 53948  012740  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53949  012744  0E04               	movlw	4
 53950  012746  6EDF               	movwf	indf2,c
 53951                           
 53952                           ; BSR set to: 1
 53953                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 53954  012748  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 53955  01274C  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53956  012750  0E00               	movlw	0
 53957  012752  8EDB               	bsf	plusw2,7,c
 53958                           
 53959                           ;usb_device.c: 2635: }
 53960  012754  0012               	return	
 53961  012756                     i2l343:
 53962                           
 53963                           ; BSR set to: 1
 53964                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 53965                           
 53966                           ; BSR set to: 1
 53967  012756  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 53968  012758  A4D8               	btfss	status,2,c
 53969  01275A  D00D               	goto	i2l345
 53970                           
 53971                           ; BSR set to: 1
 53972                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 53973  01275C  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 53974  012760  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53975  012764  0E48               	movlw	72
 53976  012766  6EDF               	movwf	indf2,c
 53977                           
 53978                           ; BSR set to: 1
 53979                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 53980  012768  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 53981  01276C  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53982  012770  0E00               	movlw	0
 53983  012772  8EDB               	bsf	plusw2,7,c
 53984                           
 53985                           ;usb_device.c: 2642: }
 53986  012774  0012               	return	
 53987  012776                     i2l345:
 53988                           
 53989                           ; BSR set to: 1
 53990                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 53991                           
 53992                           ; BSR set to: 1
 53993  012776  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 53994  01277A  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53995  01277E  0E08               	movlw	8
 53996  012780  6EDF               	movwf	indf2,c
 53997                           
 53998                           ; BSR set to: 1
 53999                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54000  012782  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54001  012786  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54002  01278A  0E00               	movlw	0
 54003  01278C  8EDB               	bsf	plusw2,7,c
 54004                           
 54005                           ; BSR set to: 1
 54006                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 54007                           
 54008                           ; BSR set to: 1
 54009  01278E  0012               	return	
 54010  012790                     i2l342:
 54011                           
 54012                           ; BSR set to: 1
 54013                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 54014  012790  BF15               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 54015                           
 54016                           ; BSR set to: 1
 54017                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 54018                           
 54019                           ; BSR set to: 1
 54020                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 54021  012792  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 54022                           
 54023                           ; BSR set to: 1
 54024                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 54025                           
 54026                           ; BSR set to: 1
 54027  012794  0E00               	movlw	0
 54028  012796  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 54029  012798  0012               	return	
 54030  01279A                     __end_of_USBCtrlTrfInHandler:
 54031                           	opt stack 0
 54032                           tosu	equ	0xFFF
 54033                           tosh	equ	0xFFE
 54034                           tosl	equ	0xFFD
 54035                           pclatu	equ	0xFFB
 54036                           pclath	equ	0xFFA
 54037                           tblptru	equ	0xFF8
 54038                           tblptrh	equ	0xFF7
 54039                           tblptrl	equ	0xFF6
 54040                           tablat	equ	0xFF5
 54041                           prodh	equ	0xFF4
 54042                           prodl	equ	0xFF3
 54043                           intcon	equ	0xFF2
 54044                           indf0	equ	0xFEF
 54045                           postinc0	equ	0xFEE
 54046                           fsr0h	equ	0xFEA
 54047                           fsr0l	equ	0xFE9
 54048                           wreg	equ	0xFE8
 54049                           indf1	equ	0xFE7
 54050                           postinc1	equ	0xFE6
 54051                           postdec1	equ	0xFE5
 54052                           plusw1	equ	0xFE3
 54053                           fsr1h	equ	0xFE2
 54054                           fsr1l	equ	0xFE1
 54055                           indf2	equ	0xFDF
 54056                           postinc2	equ	0xFDE
 54057                           postdec2	equ	0xFDD
 54058                           plusw2	equ	0xFDB
 54059                           fsr2h	equ	0xFDA
 54060                           fsr2l	equ	0xFD9
 54061                           status	equ	0xFD8
 54062                           
 54063 ;; *************** function _USBCtrlTrfTxService *****************
 54064 ;; Defined at:
 54065 ;;		line 1773 in file "usb_device.c"
 54066 ;; Parameters:    Size  Location     Type
 54067 ;;		None
 54068 ;; Auto vars:     Size  Location     Type
 54069 ;;  byteToSend      1    0[COMRAM] unsigned char 
 54070 ;; Return value:  Size  Location     Type
 54071 ;;                  1    wreg      void 
 54072 ;; Registers used:
 54073 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 54074 ;; Tracked objects:
 54075 ;;		On entry : 0/0
 54076 ;;		On exit  : 0/0
 54077 ;;		Unchanged: 0/0
 54078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54083 ;;Total ram usage:        1 bytes
 54084 ;; Hardware stack levels used:    1
 54085 ;; This function calls:
 54086 ;;		Nothing
 54087 ;; This function is called by:
 54088 ;;		_USBCtrlEPAllowDataStage
 54089 ;;		_USBCtrlTrfInHandler
 54090 ;; This function uses a non-reentrant model
 54091 ;;
 54092                           
 54093                           	psect	text230
 54094  012208                     __ptext230:
 54095                           	opt stack 0
 54096  012208                     _USBCtrlTrfTxService:
 54097                           	opt stack 12
 54098                           
 54099                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 54100                           
 54101                           ; BSR set to: 1
 54102                           ;incstack = 0
 54103  012208  0E08               	movlw	8
 54104  01220A  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 54105                           
 54106                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 54107  01220C  5057               	movf	_inPipes+5,w,c	;volatile
 54108  01220E  E111               	bnz	i2l12814
 54109  012210  0E08               	movlw	8
 54110  012212  5C56               	subwf	_inPipes+4,w,c	;volatile
 54111  012214  B0D8               	btfsc	status,0,c
 54112  012216  D00D               	goto	i2l247
 54113                           
 54114                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 54115  012218  C056  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 54116                           
 54117                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 54118  01221C  0101               	movlb	1	; () banked
 54119  01221E  5170               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 54120  012220  A4D8               	btfss	status,2,c
 54121  012222  D002               	goto	i2l245
 54122                           
 54123                           ; BSR set to: 1
 54124                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 54125  012224  0E01               	movlw	1
 54126  012226  D004               	goto	L89
 54127  012228                     i2l245:
 54128                           
 54129                           ; BSR set to: 1
 54130                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 54131                           
 54132                           ; BSR set to: 1
 54133  012228  0570               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 54134  01222A  A4D8               	btfss	status,2,c
 54135  01222C  D002               	goto	i2l247
 54136                           
 54137                           ; BSR set to: 1
 54138                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 54139  01222E  0E02               	movlw	2
 54140  012230                     L89:
 54141  012230  6F70               	movwf	_shortPacketStatus& (0+255),b	;volatile
 54142  012232                     i2l247:
 54143  012232                     i2l12814:
 54144                           
 54145                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 54146  012232  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 54147  012234  5E56               	subwf	_inPipes+4,f,c	;volatile
 54148  012236  0E00               	movlw	0
 54149  012238  5A57               	subwfb	_inPipes+5,f,c	;volatile
 54150                           
 54151                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 54152  01223A  0101               	movlb	1	; () banked
 54153  01223C  EE20 F001          	lfsr	2,1
 54154  012240  511B               	movf	_pBDTEntryIn& (0+255),w,b
 54155  012242  26D9               	addwf	fsr2l,f,c
 54156  012244  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54157  012246  22DA               	addwfc	fsr2h,f,c
 54158  012248  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 54159                           
 54160                           ; BSR set to: 1
 54161                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 54162  01224C  0E38               	movlw	56
 54163  01224E  6F4F               	movwf	_pDst& (0+255),b
 54164  012250  0E0D               	movlw	13
 54165  012252  6F50               	movwf	(_pDst+1)& (0+255),b
 54166                           
 54167                           ; BSR set to: 1
 54168                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 54169  012254  A055               	btfss	_inPipes+3,0,c	;volatile
 54170  012256  D01D               	goto	i2l249
 54171  012258  D03C               	goto	i2l253
 54172  01225A                     
 54173                           ; BSR set to: 1
 54174                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 54175                           
 54176                           ; BSR set to: 1
 54177  01225A  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 54178  01225E  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 54179  012262  0E00               	movlw	low (__mediumconst shr (0+16))
 54180  012264  6EF8               	movwf	tblptru,c
 54181  012266  C14F  FFD9         	movff	_pDst,fsr2l
 54182  01226A  C150  FFDA         	movff	_pDst+1,fsr2h
 54183  01226E  0E0E               	movlw	(high __ramtop+-1)
 54184  012270  64F7               	cpfsgt	tblptrh,c
 54185  012272  D003               	bra	i2u1115_47
 54186  012274  0008               	tblrd		*
 54187  012276  50F5               	movf	tablat,w,c
 54188  012278  D005               	bra	i2u1115_40
 54189  01227A                     i2u1115_47:
 54190  01227A  CFF6 FFE9          	movff	tblptrl,fsr0l
 54191  01227E  CFF7 FFEA          	movff	tblptrh,fsr0h
 54192  012282  50EF               	movf	indf0,w,c
 54193  012284                     i2u1115_40:
 54194  012284  6EDF               	movwf	indf2,c
 54195  012286  4A52               	infsnz	_inPipes,f,c	;volatile
 54196  012288  2A53               	incf	_inPipes+1,f,c	;volatile
 54197  01228A  0101               	movlb	1	; () banked
 54198  01228C  4B4F               	infsnz	_pDst& (0+255),f,b
 54199  01228E  2B50               	incf	(_pDst+1)& (0+255),f,b
 54200                           
 54201                           ; BSR set to: 1
 54202                           ;usb_device.c: 1816: byteToSend--;
 54203  012290  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 54204  012292                     i2l249:
 54205                           
 54206                           ; BSR set to: 1
 54207                           
 54208                           ; BSR set to: 1
 54209  012292  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 54210  012294  B4D8               	btfsc	status,2,c
 54211  012296  0012               	return	
 54212  012298  D7E0               	goto	i2l250
 54213  01229A                     
 54214                           ; BSR set to: 1
 54215                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 54216                           
 54217                           ; BSR set to: 1
 54218  01229A  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 54219  01229E  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 54220  0122A2  0E00               	movlw	low (__mediumconst shr (0+16))
 54221  0122A4  6EF8               	movwf	tblptru,c
 54222  0122A6  C14F  FFD9         	movff	_pDst,fsr2l
 54223  0122AA  C150  FFDA         	movff	_pDst+1,fsr2h
 54224  0122AE  0E0E               	movlw	(high __ramtop+-1)
 54225  0122B0  64F7               	cpfsgt	tblptrh,c
 54226  0122B2  D003               	bra	i2u1117_47
 54227  0122B4  0008               	tblrd		*
 54228  0122B6  50F5               	movf	tablat,w,c
 54229  0122B8  D005               	bra	i2u1117_40
 54230  0122BA                     i2u1117_47:
 54231  0122BA  CFF6 FFE9          	movff	tblptrl,fsr0l
 54232  0122BE  CFF7 FFEA          	movff	tblptrh,fsr0h
 54233  0122C2  50EF               	movf	indf0,w,c
 54234  0122C4                     i2u1117_40:
 54235  0122C4  6EDF               	movwf	indf2,c
 54236  0122C6  4A52               	infsnz	_inPipes,f,c	;volatile
 54237  0122C8  2A53               	incf	_inPipes+1,f,c	;volatile
 54238  0122CA  0101               	movlb	1	; () banked
 54239  0122CC  4B4F               	infsnz	_pDst& (0+255),f,b
 54240  0122CE  2B50               	incf	(_pDst+1)& (0+255),f,b
 54241                           
 54242                           ; BSR set to: 1
 54243                           ;usb_device.c: 1824: byteToSend--;
 54244  0122D0  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 54245  0122D2                     i2l253:
 54246                           
 54247                           ; BSR set to: 1
 54248                           
 54249                           ; BSR set to: 1
 54250  0122D2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 54251  0122D4  B4D8               	btfsc	status,2,c
 54252  0122D6  0012               	return	
 54253  0122D8  D7E0               	goto	i2l254
 54254  0122DA                     __end_of_USBCtrlTrfTxService:
 54255                           	opt stack 0
 54256                           tosu	equ	0xFFF
 54257                           tosh	equ	0xFFE
 54258                           tosl	equ	0xFFD
 54259                           pclatu	equ	0xFFB
 54260                           pclath	equ	0xFFA
 54261                           tblptru	equ	0xFF8
 54262                           tblptrh	equ	0xFF7
 54263                           tblptrl	equ	0xFF6
 54264                           tablat	equ	0xFF5
 54265                           prodh	equ	0xFF4
 54266                           prodl	equ	0xFF3
 54267                           intcon	equ	0xFF2
 54268                           indf0	equ	0xFEF
 54269                           postinc0	equ	0xFEE
 54270                           fsr0h	equ	0xFEA
 54271                           fsr0l	equ	0xFE9
 54272                           wreg	equ	0xFE8
 54273                           indf1	equ	0xFE7
 54274                           postinc1	equ	0xFE6
 54275                           postdec1	equ	0xFE5
 54276                           plusw1	equ	0xFE3
 54277                           fsr1h	equ	0xFE2
 54278                           fsr1l	equ	0xFE1
 54279                           indf2	equ	0xFDF
 54280                           postinc2	equ	0xFDE
 54281                           postdec2	equ	0xFDD
 54282                           plusw2	equ	0xFDB
 54283                           fsr2h	equ	0xFDA
 54284                           fsr2l	equ	0xFD9
 54285                           status	equ	0xFD8
 54286                           tosu	equ	0xFFF
 54287                           tosh	equ	0xFFE
 54288                           tosl	equ	0xFFD
 54289                           pclatu	equ	0xFFB
 54290                           pclath	equ	0xFFA
 54291                           tblptru	equ	0xFF8
 54292                           tblptrh	equ	0xFF7
 54293                           tblptrl	equ	0xFF6
 54294                           tablat	equ	0xFF5
 54295                           prodh	equ	0xFF4
 54296                           prodl	equ	0xFF3
 54297                           intcon	equ	0xFF2
 54298                           indf0	equ	0xFEF
 54299                           postinc0	equ	0xFEE
 54300                           fsr0h	equ	0xFEA
 54301                           fsr0l	equ	0xFE9
 54302                           wreg	equ	0xFE8
 54303                           indf1	equ	0xFE7
 54304                           postinc1	equ	0xFE6
 54305                           postdec1	equ	0xFE5
 54306                           plusw1	equ	0xFE3
 54307                           fsr1h	equ	0xFE2
 54308                           fsr1l	equ	0xFE1
 54309                           indf2	equ	0xFDF
 54310                           postinc2	equ	0xFDE
 54311                           postdec2	equ	0xFDD
 54312                           plusw2	equ	0xFDB
 54313                           fsr2h	equ	0xFDA
 54314                           fsr2l	equ	0xFD9
 54315                           status	equ	0xFD8
 54316                           
 54317                           	psect	text231
 54318  000000                     __ptext231:
 54319                           	opt stack 0
 54320                           tosu	equ	0xFFF
 54321                           tosh	equ	0xFFE
 54322                           tosl	equ	0xFFD
 54323                           pclatu	equ	0xFFB
 54324                           pclath	equ	0xFFA
 54325                           tblptru	equ	0xFF8
 54326                           tblptrh	equ	0xFF7
 54327                           tblptrl	equ	0xFF6
 54328                           tablat	equ	0xFF5
 54329                           prodh	equ	0xFF4
 54330                           prodl	equ	0xFF3
 54331                           intcon	equ	0xFF2
 54332                           indf0	equ	0xFEF
 54333                           postinc0	equ	0xFEE
 54334                           fsr0h	equ	0xFEA
 54335                           fsr0l	equ	0xFE9
 54336                           wreg	equ	0xFE8
 54337                           indf1	equ	0xFE7
 54338                           postinc1	equ	0xFE6
 54339                           postdec1	equ	0xFE5
 54340                           plusw1	equ	0xFE3
 54341                           fsr1h	equ	0xFE2
 54342                           fsr1l	equ	0xFE1
 54343                           indf2	equ	0xFDF
 54344                           postinc2	equ	0xFDE
 54345                           postdec2	equ	0xFDD
 54346                           plusw2	equ	0xFDB
 54347                           fsr2h	equ	0xFDA
 54348                           fsr2l	equ	0xFD9
 54349                           status	equ	0xFD8
 54350                           
 54351                           	psect	rparam
 54352  0000                     tosu	equ	0xFFF
 54353                           tosh	equ	0xFFE
 54354                           tosl	equ	0xFFD
 54355                           pclatu	equ	0xFFB
 54356                           pclath	equ	0xFFA
 54357                           tblptru	equ	0xFF8
 54358                           tblptrh	equ	0xFF7
 54359                           tblptrl	equ	0xFF6
 54360                           tablat	equ	0xFF5
 54361                           prodh	equ	0xFF4
 54362                           prodl	equ	0xFF3
 54363                           intcon	equ	0xFF2
 54364                           indf0	equ	0xFEF
 54365                           postinc0	equ	0xFEE
 54366                           fsr0h	equ	0xFEA
 54367                           fsr0l	equ	0xFE9
 54368                           wreg	equ	0xFE8
 54369                           indf1	equ	0xFE7
 54370                           postinc1	equ	0xFE6
 54371                           postdec1	equ	0xFE5
 54372                           plusw1	equ	0xFE3
 54373                           fsr1h	equ	0xFE2
 54374                           fsr1l	equ	0xFE1
 54375                           indf2	equ	0xFDF
 54376                           postinc2	equ	0xFDE
 54377                           postdec2	equ	0xFDD
 54378                           plusw2	equ	0xFDB
 54379                           fsr2h	equ	0xFDA
 54380                           fsr2l	equ	0xFD9
 54381                           status	equ	0xFD8
 54382                           
 54383                           	psect	temp
 54384  00005F                     btemp:
 54385                           	opt stack 0
 54386  00005F                     	ds	1
 54387  0000                     int$flags	set	btemp
 54388  0000                     wtemp8	set	btemp+1
 54389  0000                     ttemp5	set	btemp+1
 54390  0000                     ttemp6	set	btemp+4
 54391  0000                     ttemp7	set	btemp+8
 54392                           tosu	equ	0xFFF
 54393                           tosh	equ	0xFFE
 54394                           tosl	equ	0xFFD
 54395                           pclatu	equ	0xFFB
 54396                           pclath	equ	0xFFA
 54397                           tblptru	equ	0xFF8
 54398                           tblptrh	equ	0xFF7
 54399                           tblptrl	equ	0xFF6
 54400                           tablat	equ	0xFF5
 54401                           prodh	equ	0xFF4
 54402                           prodl	equ	0xFF3
 54403                           intcon	equ	0xFF2
 54404                           indf0	equ	0xFEF
 54405                           postinc0	equ	0xFEE
 54406                           fsr0h	equ	0xFEA
 54407                           fsr0l	equ	0xFE9
 54408                           wreg	equ	0xFE8
 54409                           indf1	equ	0xFE7
 54410                           postinc1	equ	0xFE6
 54411                           postdec1	equ	0xFE5
 54412                           plusw1	equ	0xFE3
 54413                           fsr1h	equ	0xFE2
 54414                           fsr1l	equ	0xFE1
 54415                           indf2	equ	0xFDF
 54416                           postinc2	equ	0xFDE
 54417                           postdec2	equ	0xFDD
 54418                           plusw2	equ	0xFDB
 54419                           fsr2h	equ	0xFDA
 54420                           fsr2l	equ	0xFD9
 54421                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4694
    Data        157
    BSS         1563
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      94
    BANK0           160    158     160
    BANK1           256     60     255
    BANK2           256      0     214
    BANK3           256      0     192
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), os.current_position_in_degrees(BANK1[2]), dc_divide2(CODE[80]), 
		 -> dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), os.current_position_in_steps(BANK1[4]), config(BANK1[28]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), os.current_position_in_degrees(BANK1[2]), dc_divide2(CODE[80]), 
		 -> dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), os.current_position_in_steps(BANK1[4]), config(BANK1[28]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_set_manual_speed@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_set_manual_speed@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_set_manual_speed@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_readUint32@data(BANK0[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_readUint32@data(BANK0[4]), i2c_eeprom_readUint16@data(COMRAM[2]), i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _motor_isr->_i2c_eeprom_writeUint32
    _i2c_eeprom_writeUint32->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _i2c_eeprom_readUint32->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_restore_mbr_fbr->_flash_sector_write
    _fat_get_format_status->_flash_sector_read
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->_atol
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_nonzero_steps_from_degrees->_motor_steps_from_degrees
    _motor_increase_manual_speed->_motor_set_manual_speed
    _motor_divide_jump_to_nearest->_motor_go_to_steps_position
    _motor_divide_jump->_motor_go_to_steps_position
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_decrease_manual_speed->_motor_set_manual_speed
    _motor_arc_move->_motor_schedule_command
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___flneg->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_short
    __parse_command_short->_motor_go_to_steps_position
    _motor_set_zero->_motor_schedule_command
    _motor_go_to_steps_position->_motor_schedule_command
    __parse_command_long->__parse_jump_steps
    __parse_set_manual_speed->_motor_set_manual_speed
    _motor_set_manual_speed->_motor_change_speed
    __parse_jump_steps->_motor_schedule_command
    _motor_schedule_command->__motor_run
    __motor_run->_motor_steps_from_degrees
    _motor_steps_from_degrees->___fldiv
    _motor_steps_from_degrees->___flmul
    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  879795
                                            157 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0  378302
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
              _i2c_eeprom_readUint32
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readUint32                                8     4      4    3272
                                             25 BANK0      8     4      4
                    _i2c_eeprom_read
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3113
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   11368
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   11146
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   24913
              _fat_get_format_status
                _fat_restore_mbr_fbr
 ---------------------------------------------------------------------------------
 (3) _fat_restore_mbr_fbr                                  2     2      0   17966
                                             36 BANK0      2     2      0
                           __get_fbr
                           __get_mbr
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6947
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   16444
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   10287
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  231530
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75708
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   83356
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35886
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6260
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   80164
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   13915
                                             26 BANK0      4     0      4
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3006
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1700
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8327
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1132
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0   17416
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0  189437
                                            111 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
        _motor_decrease_manual_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
         _motor_go_to_steps_position
        _motor_increase_manual_speed
   _motor_nonzero_steps_from_degrees
             _motor_schedule_command
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_nonzero_steps_from_degrees                     8     4      4    8696
                                             47 BANK0      8     4      4
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (2) _motor_increase_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   43422
                                            101 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   32663
                                            101 BANK0      7     7      0
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4    8339
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_decrease_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       9     9      0   31650
                                             73 BANK0      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   43870
                                             92 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    6589
                                             51 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    6389
                                             39 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     778
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             77 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             53 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0    8400
                                             39 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     134
                                             14 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2644
                                             18 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  113476
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  113476
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  108676
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   55089
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   53383
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24725
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17553
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17208
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0  117059
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   16518
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    7690
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    7007
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   97540
                                            102 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   71207
                                            101 BANK0      1     1      0
            _motor_clear_command_cue
         _motor_go_to_steps_position
             _motor_schedule_command
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_set_zero                                       1     1      0   23510
                                             73 BANK0      1     1      0
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) _motor_go_to_steps_position                          28    24      4   24209
                                             73 BANK0     28    24      4
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (4) _motor_clear_command_cue                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   25587
                                             85 BANK0      7     1      6
                  __parse_jump_steps
            __parse_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) __parse_set_manual_speed                              9     3      6    1068
                                              4 BANK0      9     3      6
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (3) _motor_set_manual_speed                               2     0      2     644
                                              2 BANK0      2     0      2
                 _motor_change_speed
 ---------------------------------------------------------------------------------
 (4) _motor_change_speed                                   2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6   24073
                                             73 BANK0     12     6      6
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (3) _motor_schedule_command                               8     1      7   23466
                                             65 BANK0      8     1      7
                         __motor_run
                 _motor_items_in_cue
   _motor_nonzero_steps_from_degrees (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          18    11      7   17416
                                             47 BANK0     18    11      7
_motor_calculate_position_in_degrees
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (3) _motor_steps_from_degrees                             8     4      4    8450
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    8139
                                             39 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1746
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     941
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2864
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2519
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   55930
                                             67 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    1308
                                             43 COMRAM    24    24      0
             _i2c_eeprom_writeUint32
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_writeUint32                              6     0      6    1217
                                             37 COMRAM     6     0      6
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5     994
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54622
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31505
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         __parse_set_manual_speed
           _motor_set_manual_speed
             _motor_change_speed
       __parse_command_short
         _motor_clear_command_cue
         _motor_go_to_steps_position
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
         _motor_set_zero
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_stop
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___flneg
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___fltol
           ___lmul
           ___xxtofl
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___fltol
             ___lmul
             ___xxtofl
         _strlen (ARG)
       _strlen
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
         ___lmul
         ___xxtofl
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_change_speed
     _motor_decrease_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_divide_jump_to_nearest
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_go_to_steps_position
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_increase_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_nonzero_steps_from_degrees
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_schedule_command
       __motor_run
         _motor_calculate_position_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
       _motor_items_in_cue
       _motor_nonzero_steps_from_degrees (ARG)
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
     _motor_set_zero
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_stop
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _motor_process_cue
     __motor_run
       _motor_calculate_position_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_restore_mbr_fbr
         __get_fbr
         __get_mbr
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_readUint32
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_writeUint32
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D6       9       83.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C      FF       7       99.6%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3E3      31        0.0%
DATA                 0      0     7E3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jan 02 14:18:31 2020

                           __end_of_fat_read_from_file 1A44  
                               _motor_next_speed_check 0226  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0086  
                                         ___fldiv@bexp 0085  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 007E  
               motor_calculate_position_in_degrees@tmp 0087  
                                  __system_timer0_init 521C  
                      __size_of_configFile_readDefault 0064  
                            __end_of_motor_divide_jump 2DF4  
                              configFile_read@position 01FB  
                                                   _os 0171  
                                        _USBDeviceInit FB3E  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 2132  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 51C2  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 5194  
                                     __i2c_eeprom_busy 52F2  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init 178A  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 0FCA  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                  l206 50CA  
                                                  l207 50C8  
                                                  l145 FB88  
                                                  l147 FBB0  
                                                  l149 FBEA  
                          __end_of_USBStdGetDscHandler 052E  
                                                  l184 0CD6  
                                                  l192 0C14  
                                                  l186 0D00  
                                                  l602 E5CA  
                                                  l188 0D7E  
                                                  l700 D8F8  
                                                  l620 4018  
                                                  l612 03F8  
                                                  l701 D638  
                                                  l613 03F2  
                                                  l605 E5D2  
                                                  l710 D738  
                                                  l630 C15E  
                                                  l622 4034  
                                                  l703 D91C  
                                                  l711 D7A6  
                                                  l631 BDBE  
                                                  l615 03FC  
                                                  l720 D8DE  
                                                  l712 D7A2  
                                                  l704 D6E4  
                                                  l640 BF02  
                                                  l624 4040  
                                                  l608 034C  
                                                  l641 BF0C  
                                                  l625 4046  
                                                  l714 D7BA  
                                                  l706 D6EA  
                                                  l650 C004  
                                                  l642 BF30  
                                                  l634 BDCE  
                                                  l626 404C  
                                                  l570 E5EA  
                                                  l731 07DA  
                                                  l715 D83E  
                                                  l707 D6F6  
                                                  l619 4054  
                                                  l571 E3AE  
                                                  l708 D714  
                                                  l660 C0AA  
                                                  l652 C03A  
                                                  l644 BF60  
                                                  l636 BDDE  
                                                  l580 E4C0  
                                                  l900 43DE  
                                                  l709 D760  
                                                  l661 C0BE  
                                                  l637 BDE8  
                                                  l734 07E6  
                                                  l726 0784  
                                                  l718 D8AE  
                                                  l670 C156  
                                                  l662 C0E6  
                                                  l654 C056  
                                                  l646 BFA0  
                                                  l582 E4D8  
                                                  l735 080E  
                                                  l719 D8C6  
                                                  l639 BE3C  
                                                  l591 E54C  
                                                  l575 E3D2  
                                                  l728 079C  
                                                  l664 C11A  
                                                  l656 C06E  
                                                  l592 E550  
                                                  l904 43F0  
                                                  l753 0878  
                                                  l737 084A  
                                                  l681 F03A  
                                                  l665 C0EE  
                                                  l649 BFD8  
                                                  l593 E576  
                                                  l577 E4FE  
                                                  l770 06FE  
                                                  l738 0830  
                                                  l690 EF50  
                                                  l682 EE7C  
                                                  l666 C100  
                                                  l578 E4E4  
                                                  l586 E608  
                                                  l906 43FC  
                                                  l675 27E6  
                                                  l763 0748  
                                                  l771 073A  
                                                  l747 0858  
                                                  l691 EF7A  
                                                  l667 C116  
                                                  l587 E51E  
                                                  l579 E4B6  
                                                  l764 06B2  
                                                  l684 F05E  
                                                  l692 EFA8  
                                                  _BDT 000D00  
                                                  l677 2802  
                                                  l757 0686  
                                                  l749 0866  
                                                  l693 EFBA  
                                                  l685 EED6  
                                                  l589 E52A  
                                                  l950 2F0A  
                                                  l766 06BA  
                                                  l694 EFC0  
                                                  l686 EEE2  
                                                  l862 3272  
                                                  l767 06C8  
                                                  l695 EFD4  
                                                  l687 EEEC  
                                                  l871 32B4  
                                                  l863 328C  
                                                  l944 2EA6  
                                                  l768 06DC  
                                                  l696 F022  
                                                  l688 EF00  
                                                  l872 32B8  
                                                  l769 06EA  
                                                  l873 32BE  
                                                  l867 32C4  
                                                  l869 32E6  
                                                  l897 440E  
                                                  l986 55F8  
                                                  l898 43D2  
                                                  _LBA 012B  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 0289  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                     ??_motor_set_zero 00A9  
                                   api_prepare@command 0074  
                                           _USBSuspend 5164  
                               __end_of_display_update 4F64  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks FC8A  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005E  
                                         ___flmul@aexp 007F  
                                         ___flmul@bexp 0080  
                                         ?__write_root 0088  
                              __parse_item@item_string 007A  
                                         ___flmul@sign 007A  
                                         ___flmul@temp 0085  
                                         ___flmul@prod 0081  
                            __size_of_i2c_display_init 0050  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0146  
                             USBEnableEndpoint@options 0009  
                                    __find_nth_cluster 2F46  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l1141 56AE  
                                                 l1213 46B4  
                                                 l1310 4B64  
                                                 l1126 56B6  
                                                 l1135 567C  
                                                 l1312 4B70  
                                                 l1320 1BD4  
                                                 l3000 45B0  
                                                 l1400 A460  
                                                 l1321 1BA4  
                                                 l1401 A47E  
                                                 l1153 5674  
                                                 l1410 A560  
                                                 l1402 A4C2  
                                                 l2050 2C92  
                                                 l1082 1780  
                                                 l1331 EB44  
                                                 l1411 A5D0  
                                                 l1243 4784  
                                                 l1147 5688  
                                                 l1420 A740  
                                                 l1412 A5A0  
                                                 l1404 A510  
                                                 l1244 4766  
                                                 l1164 345C  
                                                 l2301 F72C  
                                                 l1341 EBB4  
                                                 l1317 1B76  
                                                 l1165 343E  
                                                 l2310 F78E  
                                                 l2302 F734  
                                                 l1342 EBC8  
                                                 l1318 1B60  
                                                 l1326 4C90  
                                                 l1430 A8C6  
                                                 l1422 A816  
                                                 l1414 A654  
                                                 l1406 A54C  
                                                 l3022 37DC  
                                                 l1158 49C2  
                                                 l2046 2C3E  
                                                 l2311 F794  
                                                 l2303 F73C  
                                                 l1343 EC28  
                                                 l1335 EB1C  
                                                 l1431 A896  
                                                 l1423 A7E6  
                                                 l1407 A538  
                                                 l3023 37EA  
                                                 l1159 49A4  
                                                 l2312 F79A  
                                                 l2304 F744  
                                                 l1344 EBE2  
                                                 l1336 EB3A  
                                                 l1440 A9B2  
                                                 l1416 A6E2  
                                                 l2313 F7A0  
                                                 l2305 F74C  
                                                 l2241 1CC0  
                                                 l1345 EC26  
                                                 l1353 08D8  
                                                 l1441 AA0C  
                                                 l1433 A924  
                                                 l1425 A82E  
                                                 l1417 A6B2  
                                                 l1409 A542  
                                                 l1249 39A4  
                                                 l2314 F7A6  
                                                 l2306 F754  
                                                 l1530 4628  
                                                 l1338 EBD0  
                                                 l1450 AB50  
                                                 l1442 A9BE  
                                                 l1426 A85C  
                                                 l3018 37A8  
                                                 l1362 2AE8  
                                                 l1522 3CFA  
                                                 l2170 4D8C  
                                                 l2331 F952  
                                                 l2315 F7AC  
                                                 l2307 F75C  
                                                 l1531 45E4  
                                                 l1347 EC62  
                                                 l1443 AA66  
                                                 l1435 A960  
                                                 l1427 A84C  
                                                 l1419 A770  
                                                 l2083 3A8A  
                                                 l3019 379C  
                                                 l1523 3D1E  
                                                 l2171 4DC0  
                                                 l2324 4122  
                                                 l2308 F764  
                                                 l2260 0618  
                                                 l2244 1C3C  
                                                 l3060 24AE  
                                                 l1348 EC32  
                                                 l1460 AC62  
                                                 l1452 AB98  
                                                 l1444 AA36  
                                                 l1436 A930  
                                                 l1428 A86C  
                                                 l2420 4B44  
                                                 l1540 432E  
                                                 l1364 2B08  
                                                 l2172 4D9E  
                                                 l2333 F9EC  
                                                 l2325 40E2  
                                                 l2317 F7DE  
                                                 l2309 F788  
                                                 l2261 05BA  
                                                 l2253 054C  
                                                 l2245 1C4A  
                                                 l1533 460E  
                                                 l1461 ACA0  
                                                 l1453 AC0A  
                                                 l1429 A854  
                                                 l1381 A35E  
                                                 l2085 3AF0  
                                                 l1541 4338  
                                                 l2326 4138  
                                                 l2262 064E  
                                                 l2246 1C5E  
                                                 l3062 24DC  
                                                 l1462 AD68  
                                                 l1454 ABDA  
                                                 l1446 AB0C  
                                                 l1438 A994  
                                                 l1390 A3E8  
                                                 l1366 2B28  
                                                 l2343 387C  
                                                 l2327 4100  
                                                 l2319 F810  
                                                 l2263 05D2  
                                                 l2247 1C72  
                                                 l1551 3A56  
                                                 l2183 3624  
                                                 l3063 24D0  
                                                 l1471 AE86  
                                                 l1463 AD30  
                                                 l1447 AAD4  
                                                 l1439 A9FC  
                                                 l1383 A368  
                                                 l1359 2AC8  
                                                 l2416 1A60  
                                                 l2264 05EE  
                                                 l2256 059A  
                                                 l2272 29E4  
                                                 l2248 1C80  
                                                 l2192 3212  
                                                 l3080 2D22  
                                                 l3072 2CBA  
                                                 l1376 AF1C  
                                                 l1456 AC38  
                                                 l3400 3EFA  
                                                 l2425 1DC4  
                                                 l2249 1CA0  
                                                 l2177 44D2  
                                                 l1553 3A76  
                                                 l3081 2D38  
                                                 l3073 2CCE  
                                                 l1473 AEB0  
                                                 l1465 ADDC  
                                                 l1457 ACDE  
                                                 l1449 AB80  
                                                 l1385 AF78  
                                                 l1377 A334  
                                                 l2169 4DB0  
                                                 l2530 4A62  
                                                 l2258 05A0  
                                                 l2274 2A1E  
                                                 l2186 365A  
                                                 l3066 2510  
                                                 l1466 ADAC  
                                                 l1458 AC56  
                                                 l1386 A392  
                                                 l1378 A372  
                                                 l2291 F312  
                                                 l2195 3250  
                                                 l3067 251E  
                                                 l3059 2496  
                                                 l3075 2CEC  
                                                 l1475 AEDC  
                                                 l1459 ACF4  
                                                 l1387 A3DC  
                                                 l1379 A354  
                                                 l3403 3F2E  
                                                 l2540 D3BC  
                                                 l2276 2A5E  
                                                 l2284 F3A2  
                                                 l1548 3A14  
                                                 l3500 D03C  
                                                 l3068 2534  
                                                 l3076 2CE0  
                                                 l1468 AE4E  
                                                 l1396 A436  
                                                 l2700 B01E  
                                                 l3404 3F3C  
                                                 l1900 0FDA  
                           USBConfigureEndpoint@handle 0007  
                                                 l2541 D40A  
                                                 l2277 2A28  
                                                 l1581 5446  
                                                 l1549 3A1E  
                                                 l3501 D038  
                                                 l1477 AEEA  
                                                 l1469 AE78  
                                                 l1397 A46A  
                                                 l1389 A418  
                                                 l2621 3C1E  
                                                 l2701 B02E  
                                                 l1741 426C  
                                                 l1485 4F3A  
                                                 l2470 C64A  
                                                 l2446 2584  
                                                 l2542 D4A6  
                                                 l2278 2A34  
                                                 l2294 F36C  
                                                 l3510 D104  
                                                 l1398 A456  
                                                 l2622 3BEA  
                                                 l2710 B0C8  
                                                 l1806 3E20  
                                                 l1814 52AC  
                                                 l1910 E686  
                                                 l1902 0FEA  
                                                 l2471 C67E  
                                                 l2527 4A3E  
                                                 l2543 D4F4  
                                                 l2287 F282  
                                                 l1575 443C  
                                                 l1567 48A4  
                                                 l3503 D098  
                                                 l3255 5122  
                                                 l3079 2D14  
                                                 l1479 AF14  
                                                 l2631 51AA  
                                                 l1743 42A6  
                                                 l1911 E81E  
                                                 l1903 10A6  
                                                 l3280 1E52  
                                                 l2480 C7CC  
                                                 l2448 2592  
                                                 l2544 D5B8  
                                                 l1576 4446  
                                                 l1568 48AE  
                                                 l3504 D05C  
                                                 l2640 3C8E  
                                                 l2632 519A  
                                                 l2624 3BF6  
                                                 l2560 2DBA  
                                                 l2712 B0EE  
                                                 l2704 B060  
                                                 l1808 3E78  
                                                 l1816 52BE  
                                                 l1760 245E  
                                                 l1912 E70C  
                                                 l1904 109E  
                                                 l3281 1E42  
                                                 l2473 C6C6  
                                                 l2465 C584  
                                                 l2529 4A5A  
                                                 l2545 D568  
                                                 l2289 F294  
                                                 l1681 4FEE  
                                                 l3521 D1F8  
                                                 l3513 D170  
                                                 l2641 3C5A  
                                                 l2625 3C00  
                                                 l2801 B682  
                                                 l2713 B0FE  
                                                 l1833 195A  
                                                 l1913 E734  
                                                 l1921 22E0  
                                                 l3610 CFAC  
                                                 l2466 C594  
                                                 l2298 F828  
                                                 l3530 D24C  
                                                 l3514 D138  
                                                 l2650 4DDC  
                                                 l2634 519E  
                                                 l2626 3C0A  
                                                 l2802 B61C  
                                                 l2730 B214  
                                                 l2722 B198  
                                                 l2706 B086  
                                                 l1842 1944  
                                                 l1762 2468  
                                                 l1914 E7DC  
                                                 l1930 2304  
                                                 l1922 22E4  
                                                 l2475 C748  
                                                 l2571 296C  
                                                 l2299 F724  
                                                 l3523 D208  
                                                 l3507 D114  
                                                 l2643 3C66  
                                                 l2635 51A2  
                                                 l2627 3C14  
                                                 l2811 B668  
                                                 l2803 B630  
                                                 l2707 B096  
                                                 l1851 008A  
                                                 l1931 2308  
                                                 l1923 22E8  
                                                 l3604 CF08  
                                                 l2484 C7D8  
                                                 l2468 C5DC  
                                                 l2572 29AC  
                                                 l3508 D0F2  
                                                 l2644 3C70  
                                                 l2636 51A6  
                                                 l2820 B794  
                                                 l2812 B67A  
                                                 l2732 B24E  
                                                 l2716 B130  
                                                 l1836 18CC  
                                                 l1780 DB08  
                                                 l1852 00E8  
                                                 l1932 230C  
                                                 l1924 22EC  
                                                 l2485 C7DA  
                                                 l2549 D5E6  
                                                 l1677 5022  
                                                 l3517 D15A  
                                                 l3509 D100  
                                                 l2645 3C7A  
                                                 l2557 2D96  
                                                 l2725 B7FC  
                                                 l2821 B6EA  
                                                 l2733 B21C  
                                                 l1845 3B12  
                                                 l1757 2404  
                                                 l1933 2310  
                                                 l1925 22F0  
                                                 l3606 CF4C  
                                                 l3286 1E76  
                                                 l3278 1DE6  
                                                 l2486 C842  
                                                 l2478 C76A  
                                                 l3542 D2D8  
                                                 l3526 D22C  
                                                 l3518 D15E  
                                                 l3470 4806  
                                                 l2646 3C84  
                                                 l2830 B778  
                                                 l2822 B71C  
                                                 l2814 B69A  
                                                 l2806 B63E  
                                                 l2734 B226  
                                                 l2718 B156  
                                                 l3702 47C0  
                                                 l1790 DB58  
                                                 l1774 D990  
                                                 l1942 E260  
                                                 l1950 E172  
                                                 l1918 2328  
                                                 l1934 2314  
                                                 l1926 22F4  
                                                 l3607 CF6A  
                                                 l3287 1E6A  
                                                 l2487 C86C  
                                                 l2479 C772  
                                                 l3543 D2E0  
                                                 l3535 D26C  
                                                 l3471 47FE  
                                                 l2655 3D4A  
                                                 l2815 B6C6  
                                                 l2807 B652  
                                                 l2743 B3BE  
                                                 l2751 B354  
                                                 l2727 B23E  
                                                 l2735 B234  
                                                 l2719 B166  
                                                 l1767 2FD8  
                                                 l1791 DBA0  
                                                 l1951 E184  
                                                 l1943 E130  
                                                 l1935 2318  
                                                 l1927 22F8  
                                                 l1919 22DC  
                                                 l3552 DC2A  
                                                 l3640 FFD6  
                                                 l3720 5150  
                                                 l3544 D2E2  
                                                 l3528 D242  
                                                 l3480 4D16  
                                                 l2832 B782  
                                                 l2760 B3E0  
                                                 l2752 B366  
                                                 l2744 B2E8  
                                                 l2728 B1E4  
                                                 l1768 2F6E  
                                                 l1880 E884  
                                                 l1784 DAD4  
                                                 l1960 E1E0  
                                                 l1952 E196  
                                                 l1936 231C  
                                                 l1928 22FC  
                                                 l3561 DCDC  
                                                 l3553 DC26  
                                                 l3609 CF8E  
                                                 l3289 1E92  
                                                 l3641 FFBE  
                                                 l3633 FF58  
                                                 l3721 513E  
                                                 l3481 4D0E  
                                                 l2825 B72A  
                                                 l2817 B6D0  
                                                 l2809 B660  
                                                 l2761 B3EE  
                                                 l2745 B2FC  
                                                 l2737 B268  
                                                 l2729 B206  
                                                 l1769 2FBA  
                                                 l1777 D99A  
                                                 l1849 0078  
                                                 l1961 E1E4  
                                                 l1953 E1A8  
                                                 l1945 E134  
                                                 l1937 2320  
                                                 l1929 2300  
                                                 l3570 DDA0  
                                                 l3562 DD8A  
                                                 l3634 FF68  
                                                 l3714 41EA  
                                                 l3538 D2B2  
                                                 l3474 4826  
                                                 l2690 B7B2  
                                                 l2826 B734  
                                                 l1882 EA4E  
                                                 l3706 10D8  
                                                 l1786 DAE2  
                                                 l1778 DA40  
                                                 l1970 E208  
                                                 l1962 E1E8  
                                                 l1954 E1BA  
                                                 l1946 E138  
                                                 l1938 2324  
                                                 l3563 DD3A  
                                                 l3643 0008  
                                                 l3635 FF86  
                                                 l3715 41B0  
                                                 l3475 4830  
                                                 l2827 B742  
                                                 l2771 B47E  
                                                 l2763 B428  
                                                 l2755 B398  
                                                 l2739 B2AA  
                                                 l1883 E93C  
                                                 l2931 1302  
                                                 l1795 DBDA  
                                                 l1787 DAEA  
                                                 l1779 D9EC  
                                                 l1971 E20C  
                                                 l1963 E1EC  
                                                 l1955 E1CC  
                                                 l1947 E13C  
                                                 l3580 DE88  
                                                 l3564 DD62  
                                                 l3556 DC6A  
                                                 l3644 FFFC  
                                                 l3484 4D2E  
                                                 l2780 B4B8  
                                                 l2764 B3F6  
                                                 l2748 B32E  
                                                 l2692 B1BE  
                                                 l2940 F5A2  
                                                 l3660 201C  
                                                 l1884 E964  
                                                 l3708 1134  
                                                 l2932 12CA  
                                                 l1796 DBEE  
                                                 l1980 E230  
                                                 l1972 E210  
                                                 l1964 E1F0  
                                                 l1956 E1D0  
                                                 l1948 E14E  
                                                 l3581 DE94  
                                                 l3557 DC66  
                                                 l3637 FF98  
                                                 l3485 4D38  
                                                 l2829 B74A  
                                                 l2781 B4C4  
                                                 l2773 B48A  
                                                 l2765 B400  
                                                 l2693 AFB6  
                                                 l3661 1FDE  
                                                 l1885 EA0C  
                                                 l1877 19F6  
                                                 l3709 11A2  
                                                 l1789 DB60  
                                                 l1973 E214  
                                                 l1965 E1F4  
                                                 l1957 E1D4  
                                                 l1949 E160  
                                                 l3582 DE96  
                                                 l3566 DD88  
                                                 l3590 CCE2  
                                                 l3638 FF8C  
                                                 l2862 F234  
                                                 l2782 B4D2  
                                                 l2774 B496  
                                                 l2758 B418  
                                                 l2766 B40E  
                                                 l2694 AFC6  
                                                 l3654 1F8A  
                                                 l3742 3966  
                                                 l2934 1374  
                                                 l1990 E254  
                                                 l1982 E234  
                                                 l1974 E218  
                                                 l1966 E1F8  
                                                 l1958 E1D8  
                                                 l3559 DCB4  
                                                 l3591 CCDE  
                                                 l3495 CFF4  
                                                 l2791 B56A  
                                                 l2759 B3D0  
                                                 l2943 F604  
                                                 l3663 2050  
                                                 l3655 1F84  
                                                 l3671 1208  
                                                 l3751 55C2  
                                                 l3743 3904  
                                                 l3399 3F06  
                                                 l2935 1370  
                                                 l1991 E258  
                                                 l1983 E238  
                                                 l1975 E21C  
                                                 l1967 E1FC  
                                                 l1959 E1DC  
                                                 l3576 DDF6  
                                                 l3592 CCF2  
                                                 l3496 CFF0  
                                                 l2856 F1F8  
                                                 l3736 4E16  
                                                 l2784 B50C  
                                                 l2768 B438  
                                                 l3728 437E  
                                                 l2960 CA54  
                                                 l3744 395C  
                                                 l1992 E25C  
                                                 l1984 E23C  
                                                 l1976 E220  
                                                 l1968 E200  
                                                 l3569 DDBE  
                                                 l3593 CD10  
                                                 l3649 0048  
                                                 l3737 4E10  
                                                 l2785 B4DA  
                                                 l2769 B44A  
                                                 l2697 AFF8  
                                                 l3657 1FCC  
                                                 l3729 4374  
                                                 l2961 CA8A  
                                                 l1985 E240  
                                                 l1977 E224  
                                                 l1969 E204  
                                                 l3578 DE3A  
                                                 l3586 CCA2  
                                                 l2794 B5C2  
                                                 l2786 B4E4  
                                                 l3682 5486  
                                                 l3674 126A  
                                                 l2962 CAC0  
                                                 l2954 C946  
                                                 l1986 E244  
                                                 l1978 E228  
                                                 l3579 DE5E  
                                                 l3587 CC9E  
                                                 l2859 F21E  
                                                 l2779 B4FC  
                                                 l2787 B4F2  
                                                 l3675 1212  
                                                 l2963 CAF6  
                                                 l1987 E248  
                                                 l1979 E22C  
                                                 l3588 CCB2  
                                                 l3692 2DFC  
                                                 l2796 B5DE  
                                                 l2964 CB2C  
                                                 l2956 C97C  
                                                 l2980 F4D0  
                                                 l1988 E24C  
                                                 l3597 CED0  
                                                 l2797 B5F0  
                                                 l2789 B526  
                                                 l3677 12B0  
                                                 l2965 CB62  
                                                 l2957 C9B2  
                                                 l2981 F502  
                                                 l1989 E250  
                            ?__offset_from_file_number 0060  
                                                 l3598 CEB2  
                                                 l3694 2E38  
                                                 l2966 CB98  
                                                 l2958 C9E8  
                                                 l3695 2E7A  
                                                 l2799 B608  
                                                 l2967 CBCE  
                                                 l2959 CA1E  
                                                 l3688 4CE0  
                                                 l2968 CC04  
                                                 l2969 CC3A  
                                                 l2985 C51A  
                                                 l2978 F546  
                                                 l2986 C530  
                                                 l2979 F43A  
                                                 l2999 459C  
                  __end_of__encoder_next_arc_step_size 3CC8  
                          __encoder_next_arc_step_size 3C58  
                        __size_of_encoder_statemachine 087C  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A314  
                                                 STR_2 A31D  
                                                 STR_3 A314  
                                                 STR_4 A31D  
                                                 STR_5 A314  
                                                 STR_6 A324  
                                                 STR_7 A30B  
                                                 STR_8 A30B  
                                                 STR_9 A30B  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02D3  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 u9735 3A2A  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 u9825 4452  
                                                 u9845 3B88  
                                                 u9970 0672  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                 __motor_run@maximum_distance_in_steps 009D  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00CD  
                                       _ResetSenseData 4078  
                          __end_of_fat_restore_mbr_fbr 35D2  
                                                 _enc1 0154  
                                                 _enc2 0153  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 014F  
                                                 _atoi 1F82  
                                                 _atol 11C6  
                                                 _main 3258  
                              _bit_pattern_verticalbar A2D5  
                                                 _itoa 4CBA  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A2A5  
                                                 _ltoa 4792  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AF94  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 50A2  
                                                 btemp 005F  
                                                 _utoa 2DF4  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                      __size_of_motor_schedule_command 00CC  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 5698  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 5632  
                         ?__motor_get_speed_in_degrees 0087  
                                      ___fldiv@new_exp 007F  
                                _display_get_character 51C2  
                        motor_steps_from_degrees@steps 008B  
                                 ??_USBCheckHIDRequest 0001  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file E840  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 2132  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 0143  
                     __end_of__fat_sector_from_cluster 5546  
                               __get_available_cluster 23AA  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 53DE  
                        __size_of__display_padded_itoa 00E2  
                      __end_of__parse_set_manual_speed 3880  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 503A  
                 __make_cluster_chain@sector_in_buffer 00A6  
                           i2c_eeprom_writeUint32@data 0028  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 0093  
                             _motor_steps_from_degrees 1A44  
                                        __CFG_PLLDIV$2 000000  
                                 _configFile_used_name 02C0  
                           __end_of_motor_speed_lookup 9461  
                        i2c_display_write_fixed@length 0067  
                                                l12144 DE88  
                                                l13212 C842  
                                                l13216 C86C  
                                                l15026 2018  
                                                l12568 07E6  
                                                l13624 BF28  
                                                l14416 18AE  
                                                l14450 195A  
                                                l12924 F034  
                                                l12846 41B0  
                                                l15318 EB5E  
                                                l13814 246E  
                                                l15432 00E8  
                                                l16322 513E  
                                                l14386 52A4  
                                                l15258 399C  
                                                l13860 3904  
                                                l15604 354A  
                                                l18006 A508  
                                                l13790 23CE  
                                                l15374 3CCC  
                                                l16408 E3CA  
                                                l16504 4F32  
                                         spi_tx@length 0062  
                                                l17218 FBE2  
                                                l15298 EAB4  
                                                l15618 3592  
                                                l14852 D330  
                                                l15708 2A2C  
                                                l17190 FB80  
                                                l15566 2C0E  
                                                l15584 2C62  
                                                l17370 43DE  
                                                l19210 3C4E  
                                                l15914 F68E  
                                                l19202 E27A  
                                                l19212 3CA8  
                                                l19204 E392  
                                                l16574 05E8  
                                                l17374 43FC  
                                                l19214 3CBE  
                                                l19208 3C38  
                                                l15878 F59A  
                                                l16864 4B68  
                                                l16858 4B5C  
                                                l15898 F5FC  
                                                l16894 08D8  
                                        ___fltol@sign1 0068  
                                                l17992 A4BA  
                                      __end_of___aldiv 2546  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                ?_atoi 0066  
                                      __end_of___almod 2D4A  
                                                ?_atol 006C  
                                      __end_of___fladd D2FE  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A1FD  
                          _initial_speed_manual_string A1E8  
                                      __end_of___fldiv DEB2  
                                                ?_itoa 0070  
                                      __end_of___flneg 5134  
                                                STR_10 A30B  
                                                ?_ltoa 007A  
                                                STR_11 A30B  
                                                STR_12 A30B  
                                                STR_13 A30B  
                                                STR_14 A30B  
                                                STR_15 A2F6  
                                                STR_16 A302  
                                                STR_17 A32A  
                                                STR_18 A2E9  
                                      __end_of___flmul CFC2  
                                     ??__display_clear 0060  
                                      _cw_limit_string A2BC  
                    __size_of_USBCtrlEPServiceComplete 00FA  
                                      __end_of___fltol 1EA4  
                                      __end_of___lldiv 37FC  
                                                ?_utoa 0067  
                                                u10200 DDF2  
                                                u11000 501E  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u11010 4FEA  
                                                u10230 DE48  
                                                u10240 DE6C  
                                                u11040 480A  
                                                u10330 CCFE  
                                                u10420 CF5A  
                                                u10340 CE74  
                                                u10500 1E7C  
                                                u10430 CF78  
                                                u11070 4D1A  
                                                u11215 EEA8  
                                                u10345 CE6A  
                                                u10460 1E04  
                                                u11325 D664  
                                                u10390 CF04  
                                                u11190 41D2  
                                                u11408 D770  
                                                u11520 3F5A  
                                                u10465 1DFA  
                                                u11409 D784  
                                      __end_of___llmod 3F4E  
                               __end_of_USBDeviceTasks FDD0  
                                                u11450 D87A  
                                                u14010 0312  
                                                u11530 3F68  
                                                u10580 0012  
                                                u11268 EF2A  
                                                u11460 D87C  
                                                u11348 D69C  
                                                u12500 C082  
                                                u11540 3F76  
                                                u11197 41C8  
                                                u11269 EF3E  
                                                u11349 D6B0  
                                                u12510 C094  
                                                u12430 BF58  
                                                u13310 DB38  
                                                u13230 D9D2  
                                                u11550 3F84  
                                                u10920 0846  
                                                u12408 BE80  
                                                u14024 032A  
                                                u11560 3F92  
                                                u11528 3F5E  
                                                u12409 BE94  
                                                u14025 0324  
                                                u14034 0364  
                                                u13330 DBB4  
                                                u13250 DA4C  
                                                u11570 3F9E  
                                                u11538 3F6C  
                                                u14035 035E  
                                                u14131 493A  
                                                u14115 46A4  
                                                u10940 0860  
                                                u12540 C122  
                                                u14220 EAC8  
                                                u13500 3AEC  
                                                u12700 2FA6  
                                                u13340 DBC0  
                                                u13260 DA76  
                                                u13180 2AF4  
                                                u11548 3F7A  
                                                u11645 4344  
                                                u11478 D888  
                                                u14230 EB3E  
                                                u13510 E860  
                                                u11910 3F0A  
                                                u13270 DA82  
                                                u13190 2B14  
                                                u11558 3F88  
                                                u11479 D89C  
                                                u11655 52DE  
                                                u11840 C7D4  
                                                u10960 0874  
                                                u12448 BF7C  
                                                u15120 2CF0  
                                                u13280 DAAE  
                                                u11576 3FA0  
                                                u11568 3F96  
                                                u14160 39EA  
                                                u12449 BF90  
                                                u10890 082C  
                                                u14074 03C2  
                                                u14058 038C  
                                                u14410 1026  
                                                u14075 03BC  
                                                u14059 03A2  
                                                u13515 E854  
                                                u13700 F92E  
                                                u15060 24E0  
                                                u14260 EB72  
                                                u13460 1950  
                                                u12740 3E74  
                                                u12660 242E  
                                                u14420 1058  
                                                u12398 BE4C  
                                                u14270 EBCC  
                                                u13470 195A  
                                                u13390 52C4  
                                                u14430 1072  
                                                u12399 BE60  
                                                u13535 E8F8  
                                                u14415 101C  
                                                u15240 D0C8  
                                                u12760 392A  
                                                u11880 37AC  
                                                u12680 246E  
                                                u14600 2C98  
                                                u14425 104E  
                                                u17010 2ED4  
                                                u15250 D0D8  
                                                u14370 00B0  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u15500 D2BE  
                                                u15420 D250  
                                                u15260 D0DA  
                                                u14620 3574  
                                                u17110 B02A  
                                                u14375 00A6  
                                                u18000 F1E2  
                                                u17200 B12A  
                                                u17120 B05A  
                                                u14480 E6AC  
                                                u14640 35BC  
                                                u15450 D268  
                                                u15290 D11C  
                                                u18010 F1F2  
                                                u13770 43C0  
                                                u14570 2C44  
                                                u16331 F592  
                                                u15700 E3FA  
                                                u18020 F208  
                                                u14820 F67A  
                                                u14485 E6A2  
                                                u18030 F218  
                                                u17230 B162  
                                                u17150 B092  
                                                u17070 AFC2  
                                                u14735 01CA  
                                                u14680 2A5C  
                                                u17240 B192  
                                                u17160 B0C2  
                                                u17080 AFF2  
                                                u16610 FBA4  
                                                u16370 4B9C  
                                                u17420 B360  
                                                u14780 F5E2  
                                                u16470 2D5A  
                                                u17430 B392  
                                                u17190 B0FA  
                                                u15680 E3C4  
                                                u16640 FC46  
                                                u18080 A4EA  
                                                u17380 B2F6  
                                                u13998 02E0  
                                                u15870 E5AA  
                                                u17390 B328  
                                                u13999 02F4  
                                      __end_of___lwdiv 483A  
                                                u19157 494C  
                                                u17670 B55A  
                                                u19167 4960  
                                                u19177 4600  
                                                u17690 B5B0  
                         __flash_write_to_buffer@start 0073  
                                                u19187 4612  
                                                u17691 B5AE  
                                                u18580 3294  
                                                u19197 461C  
                                                u16990 2EC0  
                          __size_of_motor_change_speed 000A  
                                      __end_of___lwmod 4D42  
                                                i2l300 3026  
                                                i2l220 3176  
                                                i2l214 265A  
                                                i2l222 318C  
                                                i2l231 1436  
                                                i2l232 13E0  
                                                i2l160 FCDA  
                                                i2l321 3114  
                                                i2l145 FE16  
                                                i2l250 225A  
                                                i2l226 350E  
                                                i2l322 310E  
                                                i2l162 FD00  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 4D82  
                                                i2l315 4F90  
                                                i2l147 FE3E  
                                                i2l155 FCA0  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 270E  
                                                i2l260 0AF4  
                                                i2l332 420E  
                                                i2l180 4E62  
                                                i2l236 1460  
                                                i2l308 4D80  
                                                i2l316 4F8E  
                                                i2l172 FD8E  
                                                i2l164 FD16  
                                                i2l156 FCB0  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 22D2  
                                                i2l245 2228  
                                                i2l341 2712  
                                                i2l261 0AD2  
                                                i2l149 FE76  
                                                i2l165 FD22  
                                                i2l157 FCB8  
                                                i2l254 229A  
                                                i2l342 2790  
                                                i2l334 4258  
                                                i2l174 FDAC  
                                                i2l166 FD4A  
                                                i2l247 2232  
                                                i2l343 2756  
                                                i2l263 0B68  
                                                i2l167 FD54  
                                                i2l159 FCCE  
                                                i2l264 0B4E  
                                                i2l184 0EDE  
                                                i2l192 0E20  
                                                i2l432 21E0  
                                                i2l280 0516  
                                                i2l272 1EEC  
                                                i2l360 207E  
                                                i2l176 FDC8  
                                                i2l249 2292  
                                                i2l345 2776  
                                                i2l425 217E  
                                                i2l281 0412  
                                                i2l361 2090  
                                                i2l169 FD66  
                                                i2l186 0F08  
                                                i2l426 214E  
                                                i2l274 1F60  
                                                i2l362 2096  
                                                i2l179 4E54  
                                                i2l283 0424  
                                                i2l355 20EE  
                                                i2l188 0F86  
                                                i2l436 21A0  
                                                i2l428 2190  
                                                i2l372 DED2  
                                                i2l284 04AE  
                                                i2l364 209C  
                                                i2l356 206A  
                                                i2l437 21B6  
                                                i2l429 216C  
                                                i2l381 E02A  
                                                i2l373 DED8  
                                                i2l293 3062  
                                                i2l365 20B8  
                                                i2l534 0A9C  
                                                i2l438 21C0  
                                                i2l550 28D4  
                                                i2l286 04B4  
                                                i2l294 2FF8  
                                                i2l366 20D0  
                                                i2l358 2072  
                                                i2l535 0A08  
                                                i2l439 21D6  
                                                i2l391 E0B6  
                                                i2l383 DFF4  
                                                i2l375 DF40  
                                                i2l287 050A  
                                                i2l359 2078  
                                                i2l384 E010  
                                                i2l537 0A94  
                                                i2l545 2906  
                                                i2l393 E108  
                                                i2l377 DF88  
                                                i2l289 0510  
                                                i2l297 3078  
                                                i2l562 28DA  
                                                i2l546 286E  
                                                i2l386 E076  
                                                i2l298 3008  
                                                i2l387 E082  
                                                i2l379 DFAA  
                                                i2l299 300C  
                                                i2l900 4848  
                                                i2l820 36F4  
                                                i2l388 E0FC  
                                                i2l821 36FC  
                                                i2l822 3704  
                                                i2l904 485A  
                                                i2l816 3726  
                                                i2l824 370E  
                                                i2l906 4866  
                                                i2l826 3718  
                                                i2l780 4706  
                                                i2l783 473C  
                                                _UADDR 000F38  
                                                i2l897 4878  
                                                i2l898 483E  
          __end_of_motor_calculate_position_in_degrees 1DC6  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0087  
                  _motor_calculate_position_in_degrees 1CE8  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                                     __i2c_read@length 0067  
                                 _beep_duration_string A27B  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00C4  
                                      _i2c_eeprom_read 4692  
                                  ___lmul@multiplicand 0064  
                            __end_of__find_nth_cluster 2FEC  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks E60C  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 285A  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 31C0  
            motor_divide_jump@target_position_in_steps 00C6  
                                                _sd000 A2E5  
                               __write_value_to_offset 4F9C  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                        __end_of_MSDTransferTerminated 473E  
                                         _gblCBWLength 015E  
                __i2c_display_send_init_sequence@F6948 02AF  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A26D  
                               _configFile_readDefault 3FB2  
                                      __end_of_isdigit 548E  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 40DA  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 56DE  
                                      __motor_run@type 0095  
                                                _ultoa 10C8  
                             __parse_command_long@data 00B5  
                            __data_sector_from_cluster 5612  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 0996  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0162  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 419E  
                motor_go_to_steps_position@overhead_cw 00B5  
                                      __end_of_stricmp 43CC  
                                      __end_of_strncmp 3982  
                                      __end_of_toupper 55C6  
                                     __end_ofi2_memcpy 4318  
                                     __end_ofi2_memset 5274  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 0368  
                                       _MSDReadHandler EE7A  
          i2c_display_program_custom_character@address 007F  
                         __size_of_USBStdSetCfgHandler 00DE  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain DBF8  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 3384  
                         ?_motor_decrease_manual_speed 0001  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 506E  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
              __end_ofi2_ExternalFlash_MediaInitialize 55AE  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 54D2  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 5594  
                        _ExternalFlash_MediaInitialize 54B0  
                 __offset_from_file_number@file_number 0062  
                                          _system_init 169E  
                              __end_of_fat_resize_file 10C8  
                                         __end_of_atoi 205A  
                                         __end_of_atol 12C2  
                                         __end_of_main 32EE  
                                         __end_of_itoa 4CFE  
               __end_of__ic2_display_set_ddram_address 5426  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 5402  
                                         __end_of_ltoa 47E6  
                      __end_of_i2c_display_write_fixed 4792  
                                         __end_of_utoa 2E9E  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 00C5  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 552C  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 568E  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00AA  
                         __motor_run@distance_in_steps 008F  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature F064  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 009A  
                 __end_of_motor_divide_jump_to_nearest FB3E  
                __size_of_motor_divide_jump_to_nearest 014E  
                         _motor_divide_jump_to_nearest F9F0  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FD  
                                     __end_of__i2c_get 5684  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                               _motor_schedule_command 2546  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
                             _fat_get_file_information 3A7A  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 56E2  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 56DE  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 0127  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 5664  
                        i2c_eeprom_writeUint32@address 0026  
                        __get_available_cluster@sector 0093  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 50D4  
                               __flash_write_to_buffer 488E  
               __end_of__ic2_display_set_cgram_address 529E  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 5274  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 5560  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A2B2  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 56B4  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 4980  
                                     __end_of_adc_init 458A  
                                               i2l1203 38DC  
                                               i2l1204 38AC  
                                               i2l1141 56BE  
                                               i2l1126 56C6  
                            fat_read_from_file@cluster 00D9  
                                  ?_motor_items_in_cue 0001  
                                               i2l1066 4EEA  
                                               i2l1158 4C22  
                                               i2l1159 4C06  
                                               i2l2501 B9DA  
                                               i2l2510 BC86  
                                               i2l2502 BA2E  
                                               i2l2503 BB50  
                                               i2l2512 BD8E  
                                               i2l2506 BBCA  
                                               i2l2509 BD30  
                                               i2l2491 B864  
                                               i2l2493 BDBA  
                                               i2l2494 B866  
                                               i2l2495 B8BC  
                                               i2l2671 160E  
                                               i2l2663 161C  
                                               i2l3720 5262  
                                               i2l2496 B8E6  
                                               i2l2672 1616  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l3721 5252  
                                               i2l2673 168C  
                                               i2l2681 167E  
                                               i2l3714 4306  
                                               i2l2498 BB90  
                                               i2l2682 1686  
                                               i2l2666 15D6  
                                               i2l3715 42CE  
                                               i2l2676 1646  
                                               i2l2669 15F8  
                                               i2l2679 1668  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fbr E3A2  
                                     __end_of__get_mbr 23AA  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                         ??_motor_go_to_steps_position 00AD  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00AB  
                               __end_of_MSDReadHandler F064  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 005A  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 0093  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                                     _configFile_write C1A8  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 5612  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0170  
                     __end_of_initial_speed_arc_string A249  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 3880  
                                     ?_fat_modify_file 00A1  
                                _i2c_eeprom_readUint32 51F0  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 00FE  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
                                    _motor_process_cue 32EE  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 3D36  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 458A  
                              __end_of_cw_limit_string A2C5  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                             ?_motor_clear_command_cue 0001  
                                    _fat_get_file_size 3AF4  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 007A  
                                               ___wmul 5342  
                                   __size_of__i2c_send 000A  
                           motor_schedule_command@type 00A7  
                                            ??___fldiv 0076  
                                            ??___flneg 0072  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0076  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                        ??_motor_decrease_manual_speed 0064  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3132 0003  
            SYSTEM_Initialize@pll_startup_counter_3132 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 015D  
                                            ??___lwmod 0064  
                                               _config 01A1  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 4E44  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00A0  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02D0  
                            i2c_eeprom_readUint32@data 007D  
                                               _memcpy 419E  
                                   ?_fat_get_file_size 0095  
                                               _memset 5134  
                     __end_of__sector_from_file_number 5104  
                              __end_of_i2c_eeprom_read 46E8  
                                               _params 021F  
                                               clear_0 33CC  
                                               clear_1 33DE  
                                               clear_2 33EA  
                                               clear_3 33F6  
                                               clear_4 3408  
                            _ExternalFlash_SectorWrite 4FD2  
                                    api_parse@inBuffer 00C6  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                     __motor_run@speed 0093  
                                 __end_of_encoder_init 5402  
                                               _spi_tx 4480  
                                   ?_USBEnableEndpoint 0009  
                                   _flash_partial_read 5392  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02B8  
                                i2c_display_init@F6951 02A6  
                                               _strlen 4E06  
                              _motor_current_stepcount 0058  
                           __parse_command_long@length 00BB  
             i2c_display_program_custom_character@cntr 0080  
                              motor_set_zero@direction 00A9  
                                     __end_of_tmr0_isr 4EF4  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 00A1  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 195E  
                 __size_of__motor_get_speed_in_degrees 013A  
                              ?_motor_set_manual_speed 0062  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00B7  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 017C  
                     __size_of__read_value_from_offset 0048  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                  __size_of_motor_go_to_steps_position 0338  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 4DC6  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 0155  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 4930  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 3E7C  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 3E7C  
                                            ??_strncmp 0066  
               motor_go_to_steps_position@overhead_ccw 00B9  
                                            ??_toupper 0060  
                                   __size_of__add_item 00FA  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 016F  
                           ??_APP_DeviceCustomHIDTasks 00D1  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 006A  
                                         ___xxtofl@exp 0069  
                                    _SYSTEM_Initialize 43CC  
                                         ___xxtofl@val 0060  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 531A  
                                           __accesstop 0060  
                              __end_of__initialization 340E  
                       __end_of_motor_speed_from_index 55DC  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 006E  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 4EBA  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 003E  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 567A  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 3384  
                          __end_of__parse_command_long 413C  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 3B6E  
                                   __size_of__get_item 018A  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 013F  
                                 ??_flash_partial_read 008F  
                  __end_of_motor_increase_manual_speed 557A  
                          _motor_increase_manual_speed 5560  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 4E80  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A2E9  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 4A70  
                                         __pidataBANK4 48E0  
                             __parse_item@value_string 007C  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 529E  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A2DD  
                     __size_of_USBCtrlEPAllowDataStage 009A  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01BF  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 279A  
                                        __end_of_ultoa 11C6  
                                  display_prepare@cntr 00C9  
                                  display_prepare@temp 00BE  
                                         _gblSenseData 0100  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 0658  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 0EC8  
                       __end_of_motor_set_manual_speed 4A70  
                                   __size_of_api_parse 012A  
                                   _flash_sector_write 49D0  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 195E  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C1A8  
               __size_of_MSDProcessCommandMediaPresent 03EC  
                        _MSDProcessCommandMediaPresent BDBC  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 3EE6  
                               flash_partial_read@page 0087  
                 __size_of_motor_decrease_manual_speed 0022  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0164  
                motor_nonzero_steps_from_degrees@steps 0093  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                            __end_of_SYSTEM_Initialize 4426  
                                    __end_of__i2c_read 34AC  
                                    __end_of__i2c_send 5698  
                               _USBStdGetStatusHandler 2FEC  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 56B4  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FE  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 0BB2  
                                           _gblNumBLKS 022E  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A212  
                                     _mediaInformation 0284  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 2C9C  
                                        __flash_wakeup 45E2  
                             __fill_buffer_get_display 29D0  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                           ??_motor_steps_from_degrees 008B  
                                          _pBDTEntryIn 011B  
                               ?_i2c_eeprom_readUint32 0079  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 14B6  
                __end_of_APP_DeviceCustomHIDInitialize 50A2  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 506E  
                          MSDTransferTerminated@handle 000C  
                   __size_of__data_sector_from_cluster 0010  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 0097  
                         __parse_jump_steps@out_buffer 00AB  
                               ??_adc_read_temperature 0087  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine B810  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 13BC  
                                            MSDTasks@i 00B1  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run C55A  
                                       ___lmul@product 0068  
               __motor_run@maximum_distance_in_degrees 009B  
                                           _device_dsc A25B  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 308C  
                                    ??_configFile_read 01C3  
                                           _ep_data_in 013C  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 0BB2  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa EA66  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 205A  
                                   __size_of_motor_isr 05AC  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l12450 2166  
                                              i2l13322 5252  
                                              i2l12814 2232  
                                              i2l13392 1EE4  
                                              i2l12762 4848  
                                              i2l12766 4866  
                                              i2l16310 42CE  
                                              i2l17118 FE0E  
                                              i2l17146 FE6E  
                                              i2l17324 FD5E  
                                              i2l19222 373E  
                                              i2l19224 3772  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l18374 BD8E  
                                              i2l18294 B8BC  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 0060  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 488E  
                                           ??i2_memcpy 0007  
                                           ??i2_memset 0007  
                                           _flash_init 5632  
                   __fill_buffer_get_display@outBuffer 0064  
                             ?__parse_set_manual_speed 0064  
                          __end_of_USBCtrlTrfTxService 22DA  
                                    __end_of__get_date 5658  
                                  _USBStdSetCfgHandler 1EA4  
                                    __end_of__get_item F71E  
                                   i2__i2c_eeprom_busy 53B8  
                                    __end_of__get_time 564C  
                     __end_of_maximum_speed_arc_string A237  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 1C0A  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 0EC8  
                       ??_motor_divide_jump_to_nearest 00C5  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 012C  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 3CC8  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
                         __parse_set_manual_speed@data 0064  
              motor_nonzero_steps_from_degrees@degrees 008F  
                   __end_of_motor_go_to_steps_position D636  
                           _motor_go_to_steps_position D2FE  
             __end_of_motor_nonzero_steps_from_degrees 4B56  
            __size_of_motor_nonzero_steps_from_degrees 004C  
                   ??_motor_nonzero_steps_from_degrees 0093  
                    ?_motor_nonzero_steps_from_degrees 008F  
                     _motor_nonzero_steps_from_degrees 4B0A  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 5602  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 4532  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 3A7A  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 39FE  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 2478  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 0658  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 02D0  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 0096  
                             fat_find_file@file_number 0091  
                                        __i2c_send@dat 0060  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 42BC  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 425E  
                                    __end_of__spi_init 4F2C  
                          __size_of_USBCheckHIDRequest 00D6  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 0098  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 0772  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                         __size_of_fat_restore_mbr_fbr 0092  
                             _inverse_direction_string A249  
                      motor_steps_from_degrees@degrees 0087  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 2478  
                                              ___almod 2C9C  
                                            ?_spi_init 0001  
                                              ___fladd CFC2  
                        __size_of_USBCtrlTrfOutHandler 0060  
                                   __display_itoa_long 0888  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv DBF8  
                                     _ToSendDataBuffer 0340  
                                              ___flneg 5104  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 5622  
                                              ___flmul CC70  
                                              ___fltol 1DC6  
                                              ___lldiv 3778  
                             __end_of_ccw_limit_string A2BC  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 3EE6  
                                              ___lwdiv 47E6  
                              ?_motor_schedule_command 00A1  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 4CFE  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
                          motor_schedule_command@speed 00A5  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 56AC  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00F4  
                                              __pcinit 3384  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A0FE  
                       __end_of__write_value_to_offset 4FD2  
                                  ??_MSDProcessCommand 00A7  
                                              __ramtop 0F00  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 3258  
                                              __ptext1 169E  
                                              __ptext2 54F2  
                                              __ptext3 5510  
                                              __ptext4 51F0  
                                              __ptext5 4692  
                                              __ptext6 3418  
                                              __ptext7 5670  
                                              __ptext8 567A  
                                              __ptext9 5684  
                                       ?__display_itoa 0095  
                                              _inPipes 0052  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 0165  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 4016  
                                  ?__display_itoa_long 00AD  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00CA  
                                 __motor_run@direction 009A  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 5248  
                              __read_value_from_offset 4BA0  
                              _fat_read_from_file_fast E840  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 0AA4  
                                              _isdigit 546C  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write C55A  
                                           ??___xxtofl 0064  
                              _APP_DeviceMSDInitialize 5622  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 5670  
                             __offset_from_file_number 52C8  
                             __end_of_i2c_eeprom_write 3902  
                          __display_itoa_long@decimals 00B1  
                                      i2_USBDeviceInit FDD0  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                    __parse_set_manual_speed@new_speed 006B  
                             ??_i2c_eeprom_writeUint32 002C  
                   __size_of_ExternalFlash_SectorWrite 0034  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                                           _msd_buffer 000600  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0090  
                                              _stricmp 4372  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 3902  
                                              _toupper 55AE  
                                  _flash_partial_write 3DA4  
                                 end_of_initialization 340E  
                  __end_of_maximum_speed_manual_string A1E8  
                          _maximum_speed_manual_string A1D3  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 46E8  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A2D5  
                                  i2__i2c_write@length 0008  
                              __size_of_motor_set_zero 00BA  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 007E  
              __motor_get_speed_in_degrees@speed_index 0087  
                                  _pBDTEntryEP0OutNext 005C  
                            __end_of_MSDProcessCommand 0402  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 53DE  
                                      _USB1msTickCount 012F  
                                 ??__display_itoa_long 00B4  
                             __flash_partial_read@data 0079  
                                            i2u1115_40 2284  
                                            i2u1211_40 0500  
                                            i2u1115_47 227A  
                                            i2u1211_47 04F6  
                                            i2u1204_40 1F18  
                                            i2u1117_40 22C4  
                                            i2u1117_47 22BA  
                             ?_USBStdFeatureReqHandler 0001  
                                            i2u1208_40 047A  
                             __flash_partial_read@page 0073  
                                            i2u1208_47 0470  
                                            i2u1233_40 E09C  
                                            i2u1209_40 04AA  
                                            i2u1209_47 04A0  
                                            i2u1076_40 28B6  
                        i2c_eeprom_write@slave_address 0024  
                                              ltoa@buf 007A  
                                            i2u1408_45 388C  
                                            i2u1409_40 38E4  
                                            i2u1292_40 4644  
                                            i2u1293_40 4650  
                                            i2u1292_48 4646  
                                              ltoa@val 007C  
                                            i2u1294_40 465C  
                                            i2u1293_48 4652  
                                            i2u1295_40 4668  
                                            i2u1294_48 465E  
                                            i2u1296_40 4674  
                                            i2u1295_48 466A  
                                            i2u1297_40 467E  
                                            i2u1296_48 4676  
                                            i2u1297_46 4680  
                                            i2u1554_40 42F0  
                                            i2u1554_47 42E6  
                                    __end_of_motor_isr BDBC  
                                            i2u1656_40 FE32  
                                            i2u1834_41 B838  
                                            i2u1659_40 FED2  
                                            i2u1844_40 BBA6  
                                            i2u1845_40 BBC6  
                                            i2u1837_41 B900  
                                ??_USBStdSetCfgHandler 0018  
                                            i2u1839_40 B9CA  
                                            i2u1688_40 FDCC  
                      __parse_command_long@out_idx_ptr 00B9  
                                      ___lldiv@divisor 0064  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
                                 __size_ofi2__i2c_stop 0008  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 5194  
                          __end_of_use_cw_limit_string A2B2  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 3126  
                         i2c_eeprom_readUint32@address 0079  
                                    __end_of_spi_tx_rx 3258  
                       __end_of_motor_schedule_command 2612  
                                    __end_of_spi_tx_tx 3662  
                             __end_of_i2c_display_init 4980  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 5664  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 5658  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                 ?_flash_partial_write 007F  
                     __size_of__fill_buffer_get_status 01F0  
                                              utoa@buf 0067  
                                           _motor_init 54F2  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0156  
                             _USBCtrlEPServiceComplete 13BC  
                                              utoa@val 0069  
                                            _MSD_State 0163  
                                           _motor_stop 4C30  
              __end_of__cluster_from_sector_and_offset 5342  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 531A  
                                          ?__motor_run 008F  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00BC  
                                        ??_api_prepare 0074  
                           _USBStatusStageEnabledFlag1 0168  
                           _USBStatusStageEnabledFlag2 0167  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A2C5  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 48E0  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 4E80  
motor_divide_jump_to_nearest@nearest_position_in_steps 00C5  
                                          ___fladd@grs 0085  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 008B  
                                        ___xxtofl@sign 0068  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00C9  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                     __size_of_motor_clear_command_cue 0006  
                                   _ReceivedDataBuffer 0380  
                                   _BothEP0OutUOWNsSet 016B  
                                          ___fldiv@grs 0081  
                                          ___fldiv@rem 007A  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 473E  
                           motor_arc_move@arc_in_steps 00AE  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine AF94  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 01C1  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0087  
                 __end_of__encoder_next_setup_stepsize 3C58  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 3BE8  
                                          ___flmul@grs 007B  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 0DC2  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 56E6  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 56E2  
                    __parse_jump_steps@number_of_steps 00B1  
                         __end_of__display_signed_itoa 4CBA  
                     __end_of_motor_steps_from_degrees 1B28  
                  __end_of__motor_get_speed_in_degrees 02D0  
                          __motor_get_speed_in_degrees 0196  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short F89A  
                                   ??__i2c_eeprom_busy 0065  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 3E10  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item CC70  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 3662  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                                 __display_padded_itoa 1B28  
                               __end_of_bit_pattern_ae A2CD  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0C64  
                        ??__motor_get_speed_in_degrees 0089  
                                __end_of_USBDeviceInit FC8A  
                __end_of_USBIncrement1msInternalTimers 54F2  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 54D2  
                                       __end_of___lmul 45E2  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 009A  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 536A  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 026A  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 0CBC  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0089  
                              __end_ofi2_USBDeviceInit FF16  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 41FE  
                                      _MSDRetryAttempt 015F  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 5164  
                                     __CFG_DSWDTEN$OFF 000000  
                                  _motor_arc_move$8822 00A9  
                                    _USBBusIsSuspended 016D  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 44DA  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 4E44  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 3384  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00C8  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 1CE8  
                    __end_of__get_available_root_entry 52C8  
                            __display_itoa_long@length 00B8  
  __step_position_from_divide_position@target_position 008B  
                           ??__fill_buffer_get_display 0067  
                      __size_of_i2c_eeprom_writeUint32 001A  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 014B  
                         __end_of_USBConfigureEndpoint 3540  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler E12E  
                                  __flash_partial_read 3B6E  
                                    USBStallEndpoint@p 0066  
                                        _MSDHostNoData 015C  
                                 ??__root_is_available 008F  
                    __end_of_USBCtrlEPAllowStatusStage 26D6  
                         ?__encoder_next_arc_step_size 0060  
                              ??_i2c_eeprom_readUint32 007D  
                             __end_of_USBCtrlEPService 3126  
                           __size_of_MSDProcessCommand 0132  
                                  __size_of__motor_run 03AE  
                                            __i2c_read 3418  
                                            __i2c_send 568E  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 56AC  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 54B6  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FA  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 0157  
                                      _configFile_name 02C8  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F3F0  
                                       USBDeviceInit@i 0068  
                  __end_of_motor_decrease_manual_speed 54B0  
                          _motor_decrease_manual_speed 548E  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 0151  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 3AF4  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 0FCA  
                          __size_of_flash_partial_read 0026  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 0402  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 169E  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 0289  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 0040  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 14B6  
                    __end_of_overshoot_in_steps_string A225  
                                 __size_of_system_init 00EC  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
                         __size_of__parse_command_long 0062  
                                   __end_of__i2c_start 56BC  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 49D0  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0076  
                                            ___fladd@b 0072  
  motor_divide_jump_to_nearest@nearest_divide_position 00C9  
                                            __add_item 12C2  
                               _USBActiveConfiguration 01C2  
                       __end_of_USBStdGetStatusHandler 308C  
                                            ___fldiv@a 0072  
                                            ___fldiv@b 006E  
                             __size_of_fat_resize_file 00FE  
                             __fat_sector_from_cluster 552C  
                          api_parse@receivedDataLength 00C8  
                                     api_parse@out_idx 00CF  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 0072  
                                            ___flmul@b 006E  
                                          __pbssCOMRAM 0052  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C3  
                         __size_of_USBCtrlTrfInHandler 00C4  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 0888  
                                  _fat_restore_mbr_fbr 3540  
                           fat_create_file@file_number 00BC  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 022A  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A2E5  
                           _flash_command_pagesize_512 A2E1  
                   __end_of_flash_command_pagesize_528 A2E1  
                           _flash_command_pagesize_528 A2DD  
                                       __flash_is_busy 5426  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8211 0061  
         __end_of_i2c_display_program_custom_character 39FE  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 3982  
                                            __get_date 564C  
                                    _flash_sector_read 536A  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 4BE8  
                                            __get_item F594  
                      __end_of_fat_read_from_file_fast EA66  
                                       _motor_set_zero 2916  
                          ?_motor_go_to_steps_position 00A9  
                                            __get_time 5640  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 463A  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 4B0A  
                                            _dc_manual 9DEE  
                           __end_of_USBWakeFromSuspend 4F9C  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 546C  
                                          __parse_item C908  
                  __end_of__divide_jump_size_decrement 3DA4  
                          __divide_jump_size_decrement 3D36  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 4D42  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 0121  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                                            __read_fat 44DA  
                          configFile_read@value_string 01EA  
                     __size_of__parse_set_manual_speed 0084  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 503A  
          __end_of__step_position_from_divide_position 1876  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 008B  
                 ?__step_position_from_divide_position 0087  
                  __step_position_from_divide_position 178A  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 0DC2  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 0158  
                                _fat_get_format_status 2BEE  
                    fat_read_from_file_fast@start_byte 00A1  
            motor_go_to_steps_position@target_position 00A9  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                 ?_fat_restore_mbr_fbr 0001  
                                  ??_flash_sector_read 008B  
                               _i2c_eeprom_writeUint32 557A  
                                            _api_parse 052E  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 15AA  
                              __fill_buffer_get_status EC8A  
                                   _APP_DeviceMSDTasks 55F0  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 0072  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 00A9  
                                             ?___fldiv 006E  
                                            __ptext100 A330  
                                            __ptext101 55C6  
                                            __ptext110 2DF4  
                                            __ptext102 0196  
                                             ?___flneg 006E  
                                            __ptext111 4CFE  
                                            __ptext103 458A  
                                            __ptext200 308C  
                                            __ptext120 5134  
                                            __ptext112 47E6  
                                            __ptext104 4C76  
                                            __ptext201 42BC  
                                            __ptext121 50A2  
                                            __ptext113 2C9C  
                                            __ptext105 1B28  
                                            __ptext210 DEB2  
                                            __ptext202 3662  
                                            __ptext130 4FD2  
                                            __ptext122 43CC  
                                            __ptext114 2478  
                                            __ptext106 0888  
                                            __ptext211 36F2  
                                            __ptext203 13BC  
                                            __ptext131 49D0  
                                            __ptext123 55F0  
                                            __ptext115 4B56  
                                            __ptext107 EA66  
                                            __ptext220 5594  
                                            __ptext212 483A  
                                            __ptext204 3126  
                                            __ptext140 4078  
                                            __ptext132 488E  
                                            __ptext124 E3A2  
                                            __ptext116 F064  
                                            __ptext108 4E06  
                                            __ptext221 56E2  
                                            __ptext213 285A  
                                            __ptext205 205A  
                                            __ptext141 5006  
                                            __ptext133 35D2  
                                            __ptext125 02D0  
                                            __ptext117 5104  
                                            __ptext109 4CBA  
                                            __ptext230 2208  
                                            __ptext222 506E  
                                            __ptext214 2132  
                                            __ptext206 1EA4  
                                            __ptext150 5658  
                                            __ptext142 536A  
                                            __ptext134 4426  
                                            __ptext126 4016  
                                            __ptext118 CFC2  
                                            __ptext231 0000  
                                            __ptext223 0EC8  
                                            __ptext215 46E8  
                                            __ptext207 5248  
                                            __ptext151 55DC  
                                            __ptext143 3B6E  
                                            __ptext135 39FE  
                                            __ptext127 BDBC  
                                            __ptext119 FB3E  
                                            __ptext224 4E44  
                                            __ptext216 0DC2  
                                            __ptext208 2FEC  
                                            __ptext160 51C2  
                                            __ptext152 54B0  
                                            __ptext144 5426  
                                            __ptext136 EE7A  
                                            __ptext128 D636  
                                            __ptext225 34AC  
                                            __ptext217 5622  
                                            __ptext209 0402  
                                            __ptext161 052E  
                                            __ptext153 5698  
                                            __ptext145 45E2  
                                            __ptext137 0772  
                                            __ptext129 56DE  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext226 41FE  
                                            __ptext218 0996  
                                            __ptext170 56A2  
                                            __ptext162 F71E  
                                            __ptext154 2E9E  
                                            __ptext146 4480  
                                            __ptext138 0658  
                                            __ptext227 0AA4  
                                            __ptext219 413C  
                                            __ptext171 F89A  
                                            __ptext163 4C30  
                                            __ptext155 1C0A  
                                            __ptext147 503A  
                                            __ptext139 0BB2  
                                            __ptext228 2612  
                                            __ptext180 DBF8  
                                            __ptext172 2546  
                                            __ptext164 2916  
                                            __ptext156 EC8A  
                                            __ptext148 31C0  
                                            __ptext229 26D6  
                                            __ptext181 0CBC  
                                            __ptext173 5664  
                                            __ptext165 D2FE  
                                            __ptext157 419E  
                                            __ptext149 279A  
                                            __ptext190 463A  
                                            __ptext174 C55A  
                                            __ptext166 56D4  
                                            __ptext158 F242  
                                            __ptext191 56BC  
                                            __ptext183 4EBA  
                                            __ptext175 1A44  
                                            __ptext167 40DA  
                                            __ptext159 29D0  
                                            __ptext192 56C4  
                                            __ptext184 15AA  
                                            __ptext176 1CE8  
                                            __ptext168 37FC  
                                            __ptext193 56CC  
                                            __ptext185 B810  
                                            __ptext177 FF16  
                                            __ptext169 4A20  
                                            __ptext194 FC8A  
                                            __ptext186 557A  
                                            __ptext178 1DC6  
                                            __ptext195 FDD0  
                                            __ptext187 3880  
                                            __ptext179 CC70  
                                            __ptext196 4F64  
                                            __ptext188 4BE8  
                                            __ptext197 5164  
                                            __ptext189 53B8  
                                            __ptext198 4D42  
                                            __ptext199 54D2  
                                             ?___flmul 006E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 4EF4  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 00AD  
                                            _idle_rate 01C0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 1C0A  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 0CBC  
                    __size_of_motor_steps_from_degrees 00E4  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                            ?_motor_steps_from_degrees 0087  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 4C76  
                  __end_of__divide_jump_size_increment 4E06  
                          __divide_jump_size_increment 4DC6  
                                    ??_display_prepare 00BC  
                                             ?_isdigit 0001  
                              _motor_clear_command_cue 56D4  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short F71E  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 544A  
                                        _fat_find_file 1876  
                                    __display_itoa@len 00AA  
                                    __display_itoa@pos 00AC  
                                    __display_itoa@tmp 00A0  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 2A88  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 425E  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00CF  
                             ??_motor_speed_from_index 0095  
                            __end_of_flash_sector_read 5392  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 0139  
                                     ___lwdiv@quotient 0064  
                               __end_of_motor_set_zero 29D0  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 56A2  
                                        _MSDWriteState 0160  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 4B56  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F594  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 0136  
                                           ?__get_time 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 0133  
                                       __display_start 2B3C  
                                  __size_of_motor_stop 0046  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D2  
                       __size_of_display_get_character 002E  
                                  __make_cluster_chain D922  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 51F0  
                                       ___wmul@product 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 2208  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 003C  
                           configFile_read@item_string 01CB  
                                          _encoder_run 15AA  
                             __fat_offset_from_cluster 5546  
                                ??_fat_restore_mbr_fbr 0084  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             i2u990_48 0A2C  
                                             i2u990_49 0A40  
                                             _RCONbits 000FD0  
                                             i2u992_48 0A52  
                                             i2u992_49 0A68  
                                           ?_api_parse 00C6  
                                             i2u994_44 0A86  
                                             i2u994_45 0A80  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks E3A2  
                                            _motor_isr B810  
                           _USBDeferINDataStagePackets 0166  
                                 _active_configuration 0159  
                             ??_motor_set_manual_speed 0064  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A2CD  
                          __size_of_USBCheckStdRequest 00D8  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F3F0  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F242  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 56CC  
                                 __end_ofi2__i2c_write 4C30  
                                 _USBConfigureEndpoint 34AC  
                                         ??__motor_run 0096  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 31C0  
                                            _spi_tx_tx 35D2  
                          __size_ofi2__i2c_eeprom_busy 0026  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 027C  
                                       _USBMSDInHandle 0149  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A237  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 569E  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 2B3C  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 016E  
                    __end_of_ExternalFlash_MediaDetect 56A2  
                                             i2_memcpy 42BC  
                                             i2_memset 5248  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 2A88  
                                          __write_root 4ABE  
                                   ?_SYS_InterruptHigh 0001  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 4BA0  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A1D3  
                       _overshoot_cost_in_steps_string A1BB  
                              __end_of_USBStallHandler 4D86  
                      motor_schedule_command@direction 00A8  
                             __sector_from_file_number 50D4  
                                      ?_motor_set_zero 0001  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
               motor_go_to_steps_position@distance_ccw 00C1  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A297  
                               __end_of__display_start 2BEE  
                         __end_of_minimum_speed_string A2A5  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 3398  
                                            copy_data1 33B8  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 1F82  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 5510  
                                  ??_SYS_InterruptHigh 0044  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0161  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run C908  
                                   __end_of_device_dsc A26D  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 567A  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 005A  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 0095  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps F89A  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 5640  
                                       _TransferLength 0145  
                                           ?_motor_isr 0001  
                         ?_motor_increase_manual_speed 0001  
                           __end_of_USBCheckMSDRequest 2916  
                                      api_parse@in_idx 00D0  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 5006  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 00A9  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 3F4E  
                                      _MSDWriteHandler D636  
                                     __size_of___fldiv 02BA  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00B9  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 015B  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                            ??_motor_clear_command_cue 0060  
                        __display_itoa_long@last_digit 00BB  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 4532  
                                             __get_fbr E12E  
                                             __get_mbr 22DA  
                                          ??__add_item 008C  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 00AF  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 55F0  
                           _ExternalFlash_CapacityRead 55DC  
                                             ___xxtofl FF16  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 5602  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 52F2  
                                             __ptext11 5632  
                                             __ptext20 53DE  
                                             __ptext12 4D86  
                                             __ptext21 4F2C  
                                             __ptext13 4EF4  
                                             __ptext30 3F4E  
                                             __ptext22 473E  
                                             __ptext14 3CC8  
                                             __ptext31 56AC  
                                             __ptext23 544A  
                                             __ptext15 5602  
                                             __ptext40 4ABE  
                                             __ptext32 56B4  
                                             __ptext24 5402  
                                             __ptext16 3540  
                                             __ptext41 3DA4  
                                             __ptext33 568E  
                                             __ptext25 4E80  
                                             __ptext17 2BEE  
                                             __ptext50 529E  
                                             __ptext42 4318  
                                             __ptext34 2B3C  
                                             __ptext26 3982  
                                             __ptext18 22DA  
                                             __ptext51 12C2  
                                             __ptext43 D922  
                                             __ptext35 2A88  
                                             __ptext27 5274  
                                             __ptext19 E12E  
                                             __ptext60 2F46  
                                             __ptext52 4792  
                                             __ptext44 4F9C  
                                             __ptext36 C1A8  
                                             __ptext28 4930  
                                             __ptext61 4BA0  
                                             __ptext53 10C8  
                                             __ptext45 23AA  
                                             __ptext37 0FCA  
                                             __ptext29 4980  
                                             __ptext70 50D4  
                                             __ptext62 44DA  
                                             __ptext54 3EE6  
                                             __ptext46 425E  
                                             __ptext38 E60C  
                                             __ptext71 52C8  
                                             __ptext63 552C  
                                             __ptext55 3778  
                                             __ptext47 531A  
                                             __ptext39 005A  
                                             __ptext80 5342  
                                             __ptext72 1876  
                                             __ptext64 5546  
                                             __ptext56 3FB2  
                                             __ptext48 5640  
                                             __ptext81 F594  
                                             __ptext73 3902  
                                             __ptext65 5612  
                                             __ptext57 F3F0  
                                             __ptext49 564C  
                                             __ptext90 F9F0  
                                             __ptext82 4532  
                                             __ptext74 C908  
                                             __ptext66 3A7A  
                                             __ptext58 195E  
                                             __ptext91 2D4A  
                                             __ptext83 521C  
                                             __ptext75 4372  
                                             __ptext67 3AF4  
                                             __ptext59 E840  
                                             __ptext92 178A  
                                             __ptext84 3E7C  
                                             __ptext76 55AE  
                                             __ptext68 3E10  
                                             __ptext93 548E  
                                             __ptext85 56DA  
                                             __ptext77 11C6  
                                             __ptext69 5392  
                                             __ptext94 14B6  
                                             __ptext86 32EE  
                                             __ptext78 1F82  
                                             __ptext95 3BE8  
                                             __ptext87 AF94  
                                             __ptext79 546C  
                                             __ptext96 5194  
                                             __ptext88 4B0A  
                                             __ptext97 3C58  
                                             __ptext89 5560  
                                             __ptext98 4DC6  
                                             __ptext99 3D36  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 4078  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 4016  
                                      ___almod@divisor 0064  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A25B  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 40DA  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 4372  
                           __flash_copy_page_to_buffer 4318  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 2F46  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 463A  
                              __parse_set_manual_speed 37FC  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 36F2  
                                        __size_of_main 0096  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_ltoa 0054  
                       __size_of_i2c_eeprom_readUint32 002C  
                                        __size_of_utoa 00AA  
                        __end_of_i2c_eeprom_readUint32 521C  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 3E10  
                                           strncmp@len 0064  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps F9F0  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 4EBA  
                                  _USBCtrlTrfInHandler 26D6  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                  __parse_set_manual_speed@out_idx_ptr 0068  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00CB  
                               __end_of__i2c_wait_idle 3FB2  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 56D4  
                           __end_of_motor_items_in_cue 5670  
                                             _outPipes 0112  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 56C4  
                                             _spi_init 4D86  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 41FE  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 52F2  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 2612  
                      __size_of_motor_set_manual_speed 0050  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                        ??_motor_increase_manual_speed 0064  
                                 ?__parse_command_long 00B5  
                                         _SSP1STATbits 000FC7  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 4692  
                                    main@startup_timer 00FD  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa EC8A  
                motor_go_to_steps_position@distance_cw 00BD  
                                     i2_ResetSenseData 413C  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 00C5  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 0169  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status EE7A  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __parse_jump_steps@return_value 00B0  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 008F  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 285A  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 279A  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 5684  
                              __end_of_fat_create_file 0196  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                              fat_restore_mbr_fbr@cntr 0084  
                               __size_of_USBDeviceInit 014C  
                      __end_of_motor_clear_command_cue 56DA  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3778  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 36F2  
              motor_schedule_command@distance_in_steps 00A1  
                                   __end_of_motor_init 5510  
                                         ?__parse_item 007A  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A212  
                          _full_circle_in_steps_string A1FD  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 5006  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 4C76  
                __end_of__flash_write_page_from_buffer 4480  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 4426  
                             ??_motor_schedule_command 00A8  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                              ?_i2c_eeprom_writeUint32 0026  
                             _maximum_speed_arc_string A225  
                         __end_of_beep_duration_string A289  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0234  
                           __end_of_flash_partial_read 53B8  
                              __end_of_MSDWriteHandler D922  
                                            strncmp@s1 0060  
                                            strncmp@s2 0062  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                   __parse_set_manual_speed@out_buffer 0066  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A27B  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 55C6  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                                      _display_prepare A330  
                                          ??_motor_isr 002C  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 0AA4  
                                   _USBWakeFromSuspend 4F64  
                                ??__parse_command_long 00BB  
                                 _maximum_speed_string A289  
                                   _i2c_display_cursor 544A  
                      motor_set_manual_speed@new_speed 0062  
                                 _minimum_speed_string A297  
                              _USBStdFeatureReqHandler DEB2  
                                      _fat_modify_file E60C  
                                  i2_SYSTEM_Initialize 483A  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 2208  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 008B  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 2D4A  
                                             ultoa@val 006F  
                                      _gblMediaPresent 0147  
                             configFile_read@file_size 01F6  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BD  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 014D  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 016C  
                                       _display_update 4F2C  
                  __get_available_cluster@first_sector 008B  
                               _motor_set_manual_speed 4A20  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                 __size_of_motor_increase_manual_speed 001A  
                                        ___fladd@signs 0082  
                         __end_of_adc_read_temperature F242  
                            ??__parse_set_manual_speed 006A  
                                _MSDCheckForErrorCases 0772  
                                  ??_motor_divide_jump 00C5  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 56C4  
                              motor_arc_move@direction 00AD  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 4BE8  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 0232  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                       __end_of_i2c_eeprom_writeUint32 5594  
                                         ___fladd@aexp 0083  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 0084  
                                           _USBMSDInit 0996  
                         _USBStatusStageTimeoutCounter 016A  
                                          i2__i2c_send 56CC  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 56BC  
                                     ??_motor_arc_move 00A9  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00AD  
                          __end_of__flash_partial_read 3BE8  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 56DA  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00CB  
                           __size_of__parse_jump_steps 0156  
                            __size_of_configFile_write 03B2  
                              __display_itoa_long@text 00B2  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 015A  
                                          _USBInHandle 0141  
                             _APP_DeviceCustomHIDTasks 2E9E  
                           __end_of_flash_sector_write 4A20  
