

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Feb 21 23:56:38 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   187                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   188                           	dabs	1,0x600,512,_msd_buffer
   189                           	dabs	1,0xD00,48,_BDT
   190                           	dabs	1,0xD40,31,_msd_cbw
   191                           	dabs	1,0xD80,13,_msd_csw
   192                           	dabs	1,0xD38,8,_CtrlTrfData
   193                           	dabs	1,0xD30,8,_SetupPkt
   194  0000                     
   195                           ; Version 2.00
   196                           ; Generated 27/05/2018 GMT
   197                           ; 
   198                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   199                           ; All rights reserved.
   200                           ; 
   201                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   202                           ; 
   203                           ; Redistribution and use in source and binary forms, with or without modification, are
   204                           ; permitted provided that the following conditions are met:
   205                           ; 
   206                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   207                           ;        conditions and the following disclaimer.
   208                           ; 
   209                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   210                           ;        of conditions and the following disclaimer in the documentation and/or other
   211                           ;        materials provided with the distribution.
   212                           ; 
   213                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   214                           ;        software without specific prior written permission.
   215                           ; 
   216                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   217                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   218                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   219                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   220                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   221                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   222                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   223                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   224                           ; 
   225                           ; 
   226                           ; Code-generator required, PIC18F47J53 Definitions
   227                           ; 
   228                           ; SFR Addresses
   229  0000                     
   230                           	psect	idataBANK1
   231  01281A                     __pidataBANK1:
   232                           	opt stack 0
   233                           
   234                           ;initializer for _LUN
   235  01281A  D8                 	db	low _ExternalFlash_MediaInitialize
   236  01281B  2B                 	db	high _ExternalFlash_MediaInitialize
   237  01281C  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   238  01281D  82                 	db	low _ExternalFlash_CapacityRead
   239  01281E  2C                 	db	high _ExternalFlash_CapacityRead
   240  01281F  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   241  012820  D6                 	db	low _ExternalFlash_SectorSizeRead
   242  012821  2C                 	db	high _ExternalFlash_SectorSizeRead
   243  012822  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   244  012823  F6                 	db	low _ExternalFlash_MediaDetect
   245  012824  2C                 	db	high _ExternalFlash_MediaDetect
   246  012825  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   247  012826  BE                 	db	low _ExternalFlash_SectorRead
   248  012827  28                 	db	high _ExternalFlash_SectorRead
   249  012828  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   250  012829  1E                 	db	low _ExternalFlash_WriteProtectStateGet
   251  01282A  2D                 	db	high _ExternalFlash_WriteProtectStateGet
   252  01282B  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   253  01282C  22                 	db	low _ExternalFlash_SectorWrite
   254  01282D  2D                 	db	high _ExternalFlash_SectorWrite
   255  01282E  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   256  01282F  00                 	db	0
   257  012830  00                 	db	0
   258  012831  00                 	db	0
   259  012832  00                 	db	0
   260  012833  00                 	db	0
   261  012834  00                 	db	0
   262  012835  00                 	db	0
   263  012836  00                 	db	0
   264                           
   265                           ;initializer for i2c_display_init@F6908
   266  012837  3A                 	db	58
   267  012838  1E                 	db	30
   268  012839  39                 	db	57
   269  01283A  0C                 	db	12
   270  01283B  74                 	db	116
   271  01283C  5C                 	db	92
   272  01283D  6D                 	db	109
   273  01283E  0C                 	db	12
   274  01283F  01                 	db	1
   275                           
   276                           ;initializer for __i2c_display_send_init_sequence@F6905
   277  012840  3A                 	db	58
   278  012841  1E                 	db	30
   279  012842  39                 	db	57
   280  012843  0C                 	db	12
   281  012844  74                 	db	116
   282  012845  5C                 	db	92
   283  012846  6D                 	db	109
   284  012847  0C                 	db	12
   285  012848  01                 	db	1
   286                           
   287                           ;initializer for _tx_buf
   288  012849  01                 	db	1
   289  01284A  02                 	db	2
   290  01284B  03                 	db	3
   291  01284C  04                 	db	4
   292  01284D  05                 	db	5
   293  01284E  06                 	db	6
   294  01284F  07                 	db	7
   295  012850  08                 	db	8
   296                           
   297                           	psect	idataBANK2
   298  012314                     __pidataBANK2:
   299                           	opt stack 0
   300                           
   301                           ;initializer for _display_content
   302  012314  2A                 	db	42
   303  012315  20                 	db	32
   304  012316  20                 	db	32
   305  012317  53                 	db	83
   306  012318  74                 	db	116
   307  012319  65                 	db	101
   308  01231A  70                 	db	112
   309  01231B  70                 	db	112
   310  01231C  65                 	db	101
   311  01231D  72                 	db	114
   312  01231E  20                 	db	32
   313  01231F  4D                 	db	77
   314  012320  6F                 	db	111
   315  012321  74                 	db	116
   316  012322  6F                 	db	111
   317  012323  72                 	db	114
   318  012324  20                 	db	32
   319  012325  20                 	db	32
   320  012326  20                 	db	32
   321  012327  2A                 	db	42
   322  012328  2A                 	db	42
   323  012329  20                 	db	32
   324  01232A  20                 	db	32
   325  01232B  20                 	db	32
   326  01232C  20                 	db	32
   327  01232D  43                 	db	67
   328  01232E  6F                 	db	111
   329  01232F  6E                 	db	110
   330  012330  74                 	db	116
   331  012331  72                 	db	114
   332  012332  6F                 	db	111
   333  012333  6C                 	db	108
   334  012334  6C                 	db	108
   335  012335  65                 	db	101
   336  012336  72                 	db	114
   337  012337  20                 	db	32
   338  012338  20                 	db	32
   339  012339  20                 	db	32
   340  01233A  20                 	db	32
   341  01233B  2A                 	db	42
   342  01233C  2A                 	db	42
   343  01233D  20                 	db	32
   344  01233E  20                 	db	32
   345  01233F  20                 	db	32
   346  012340  20                 	db	32
   347  012341  20                 	db	32
   348  012342  20                 	db	32
   349  012343  20                 	db	32
   350  012344  20                 	db	32
   351  012345  20                 	db	32
   352  012346  20                 	db	32
   353  012347  20                 	db	32
   354  012348  20                 	db	32
   355  012349  20                 	db	32
   356  01234A  20                 	db	32
   357  01234B  20                 	db	32
   358  01234C  20                 	db	32
   359  01234D  20                 	db	32
   360  01234E  20                 	db	32
   361  01234F  2A                 	db	42
   362  012350  2A                 	db	42
   363  012351  20                 	db	32
   364  012352  20                 	db	32
   365  012353  73                 	db	115
   366  012354  6F                 	db	111
   367  012355  6C                 	db	108
   368  012356  64                 	db	100
   369  012357  65                 	db	101
   370  012358  72                 	db	114
   371  012359  6E                 	db	110
   372  01235A  65                 	db	101
   373  01235B  72                 	db	114
   374  01235C  64                 	db	100
   375  01235D  2E                 	db	46
   376  01235E  63                 	db	99
   377  01235F  6F                 	db	111
   378  012360  6D                 	db	109
   379  012361  20                 	db	32
   380  012362  20                 	db	32
   381  012363  2A                 	db	42
   382                           
   383                           	psect	mediumconst
   384  009092                     __pmediumconst:
   385                           	opt stack 0
   386  009092  00                 	db	0
   387  009093                     _motor_speed_lookup:
   388                           	opt stack 0
   389  009093  0008               	dw	8
   390  009095  000C               	dw	12
   391  009097  0010               	dw	16
   392  009099  0013               	dw	19
   393  00909B  0016               	dw	22
   394  00909D  0019               	dw	25
   395  00909F  001C               	dw	28
   396  0090A1  001E               	dw	30
   397  0090A3  0021               	dw	33
   398  0090A5  0023               	dw	35
   399  0090A7  0026               	dw	38
   400  0090A9  0028               	dw	40
   401  0090AB  002A               	dw	42
   402  0090AD  002C               	dw	44
   403  0090AF  002E               	dw	46
   404  0090B1  0030               	dw	48
   405  0090B3  0032               	dw	50
   406  0090B5  0034               	dw	52
   407  0090B7  0036               	dw	54
   408  0090B9  0038               	dw	56
   409  0090BB  003A               	dw	58
   410  0090BD  003C               	dw	60
   411  0090BF  003D               	dw	61
   412  0090C1  003F               	dw	63
   413  0090C3  0041               	dw	65
   414  0090C5  0043               	dw	67
   415  0090C7  0045               	dw	69
   416  0090C9  0046               	dw	70
   417  0090CB  0048               	dw	72
   418  0090CD  0049               	dw	73
   419  0090CF  004B               	dw	75
   420  0090D1  004D               	dw	77
   421  0090D3  004E               	dw	78
   422  0090D5  0050               	dw	80
   423  0090D7  0051               	dw	81
   424  0090D9  0053               	dw	83
   425  0090DB  0054               	dw	84
   426  0090DD  0056               	dw	86
   427  0090DF  0057               	dw	87
   428  0090E1  0059               	dw	89
   429  0090E3  005A               	dw	90
   430  0090E5  005C               	dw	92
   431  0090E7  005D               	dw	93
   432  0090E9  005F               	dw	95
   433  0090EB  0060               	dw	96
   434  0090ED  0062               	dw	98
   435  0090EF  0063               	dw	99
   436  0090F1  0064               	dw	100
   437  0090F3  0066               	dw	102
   438  0090F5  0067               	dw	103
   439  0090F7  0069               	dw	105
   440  0090F9  006A               	dw	106
   441  0090FB  006C               	dw	108
   442  0090FD  006D               	dw	109
   443  0090FF  006E               	dw	110
   444  009101  0070               	dw	112
   445  009103  0071               	dw	113
   446  009105  0072               	dw	114
   447  009107  0073               	dw	115
   448  009109  0074               	dw	116
   449  00910B  0076               	dw	118
   450  00910D  0078               	dw	120
   451  00910F  0079               	dw	121
   452  009111  007A               	dw	122
   453  009113  007B               	dw	123
   454  009115  007D               	dw	125
   455  009117  007E               	dw	126
   456  009119  007F               	dw	127
   457  00911B  0082               	dw	130
   458  00911D  0085               	dw	133
   459  00911F  0087               	dw	135
   460  009121  008A               	dw	138
   461  009123  008C               	dw	140
   462  009125  008F               	dw	143
   463  009127  0091               	dw	145
   464  009129  0092               	dw	146
   465  00912B  0094               	dw	148
   466  00912D  0098               	dw	152
   467  00912F  009A               	dw	154
   468  009131  009C               	dw	156
   469  009133  009E               	dw	158
   470  009135  00A1               	dw	161
   471  009137  00A3               	dw	163
   472  009139  00A5               	dw	165
   473  00913B  00A7               	dw	167
   474  00913D  00AA               	dw	170
   475  00913F  00AC               	dw	172
   476  009141  00AF               	dw	175
   477  009143  00B2               	dw	178
   478  009145  00B4               	dw	180
   479  009147  00B7               	dw	183
   480  009149  00B8               	dw	184
   481  00914B  00BA               	dw	186
   482  00914D  00BC               	dw	188
   483  00914F  00BE               	dw	190
   484  009151  00C0               	dw	192
   485  009153  00C3               	dw	195
   486  009155  00C4               	dw	196
   487  009157  00C6               	dw	198
   488  009159  00C8               	dw	200
   489  00915B  00CA               	dw	202
   490  00915D  00CC               	dw	204
   491  00915F  00CE               	dw	206
   492  009161  00D0               	dw	208
   493  009163  00D2               	dw	210
   494  009165  00D4               	dw	212
   495  009167  00D6               	dw	214
   496  009169  00D8               	dw	216
   497  00916B  00D9               	dw	217
   498  00916D  00DB               	dw	219
   499  00916F  00DD               	dw	221
   500  009171  00DF               	dw	223
   501  009173  00E1               	dw	225
   502  009175  00E2               	dw	226
   503  009177  00E5               	dw	229
   504  009179  00E7               	dw	231
   505  00917B  00E8               	dw	232
   506  00917D  00EA               	dw	234
   507  00917F  00EC               	dw	236
   508  009181  00EE               	dw	238
   509  009183  00EF               	dw	239
   510  009185  00F2               	dw	242
   511  009187  00F3               	dw	243
   512  009189  00F5               	dw	245
   513  00918B  00F7               	dw	247
   514  00918D  00F8               	dw	248
   515  00918F  00FB               	dw	251
   516  009191  00FD               	dw	253
   517  009193  0100               	dw	256
   518  009195  0103               	dw	259
   519  009197  0104               	dw	260
   520  009199  0107               	dw	263
   521  00919B  010A               	dw	266
   522  00919D  010C               	dw	268
   523  00919F  010F               	dw	271
   524  0091A1  0112               	dw	274
   525  0091A3  0114               	dw	276
   526  0091A5  0117               	dw	279
   527  0091A7  0119               	dw	281
   528  0091A9  011C               	dw	284
   529  0091AB  011E               	dw	286
   530  0091AD  0121               	dw	289
   531  0091AF  0123               	dw	291
   532  0091B1  0125               	dw	293
   533  0091B3  0129               	dw	297
   534  0091B5  012B               	dw	299
   535  0091B7  012C               	dw	300
   536  0091B9  012E               	dw	302
   537  0091BB  0132               	dw	306
   538  0091BD  0134               	dw	308
   539  0091BF  0136               	dw	310
   540  0091C1  0138               	dw	312
   541  0091C3  013B               	dw	315
   542  0091C5  013D               	dw	317
   543  0091C7  013F               	dw	319
   544  0091C9  0143               	dw	323
   545  0091CB  0146               	dw	326
   546  0091CD  0148               	dw	328
   547  0091CF  014A               	dw	330
   548  0091D1  014C               	dw	332
   549  0091D3  014F               	dw	335
   550  0091D5  0151               	dw	337
   551  0091D7  0154               	dw	340
   552  0091D9  0156               	dw	342
   553  0091DB  0159               	dw	345
   554  0091DD  015B               	dw	347
   555  0091DF  015E               	dw	350
   556  0091E1  0160               	dw	352
   557  0091E3  0163               	dw	355
   558  0091E5  0166               	dw	358
   559  0091E7  0169               	dw	361
   560  0091E9  016B               	dw	363
   561  0091EB  016E               	dw	366
   562  0091ED  0171               	dw	369
   563  0091EF  0174               	dw	372
   564  0091F1  0177               	dw	375
   565  0091F3  017A               	dw	378
   566  0091F5  017D               	dw	381
   567  0091F7  0180               	dw	384
   568  0091F9  0183               	dw	387
   569  0091FB  0187               	dw	391
   570  0091FD  018A               	dw	394
   571  0091FF  018D               	dw	397
   572  009201  0191               	dw	401
   573  009203  0194               	dw	404
   574  009205  0198               	dw	408
   575  009207  019B               	dw	411
   576  009209  019F               	dw	415
   577  00920B  01A3               	dw	419
   578  00920D  01A6               	dw	422
   579  00920F  01AA               	dw	426
   580  009211  01AE               	dw	430
   581  009213  01B2               	dw	434
   582  009215  01B6               	dw	438
   583  009217  01BA               	dw	442
   584  009219  01BE               	dw	446
   585  00921B  01C3               	dw	451
   586  00921D  01C7               	dw	455
   587  00921F  01CC               	dw	460
   588  009221  01D0               	dw	464
   589  009223  01D5               	dw	469
   590  009225  01D9               	dw	473
   591  009227  01DE               	dw	478
   592  009229  01E3               	dw	483
   593  00922B  01E8               	dw	488
   594  00922D  01ED               	dw	493
   595  00922F  01F3               	dw	499
   596  009231  01F8               	dw	504
   597  009233  01FE               	dw	510
   598  009235  0203               	dw	515
   599  009237  0209               	dw	521
   600  009239  020F               	dw	527
   601  00923B  0215               	dw	533
   602  00923D  021B               	dw	539
   603  00923F  0221               	dw	545
   604  009241  0227               	dw	551
   605  009243  022E               	dw	558
   606  009245  0235               	dw	565
   607  009247  023C               	dw	572
   608  009249  0243               	dw	579
   609  00924B  024A               	dw	586
   610  00924D  0251               	dw	593
   611  00924F  0259               	dw	601
   612  009251  0261               	dw	609
   613  009253  0269               	dw	617
   614  009255  0271               	dw	625
   615  009257  0279               	dw	633
   616  009259  0282               	dw	642
   617  00925B  028B               	dw	651
   618  00925D  0294               	dw	660
   619  00925F  029E               	dw	670
   620  009261  02A7               	dw	679
   621  009263  02B1               	dw	689
   622  009265  02BC               	dw	700
   623  009267  02C6               	dw	710
   624  009269  02D1               	dw	721
   625  00926B  02DC               	dw	732
   626  00926D  02DC               	dw	732
   627  00926F  02DF               	dw	735
   628  009271  02E2               	dw	738
   629  009273  02E5               	dw	741
   630  009275  02E8               	dw	744
   631  009277  02EB               	dw	747
   632  009279  02EE               	dw	750
   633  00927B  02F1               	dw	753
   634  00927D  02F4               	dw	756
   635  00927F  02F7               	dw	759
   636  009281  02FA               	dw	762
   637  009283  02FD               	dw	765
   638  009285  0300               	dw	768
   639  009287  0304               	dw	772
   640  009289  0307               	dw	775
   641  00928B  030A               	dw	778
   642  00928D  030D               	dw	781
   643  00928F  0311               	dw	785
   644  009291  0314               	dw	788
   645  009293  0317               	dw	791
   646  009295  031A               	dw	794
   647  009297  031E               	dw	798
   648  009299  0321               	dw	801
   649  00929B  0325               	dw	805
   650  00929D  0328               	dw	808
   651  00929F  032C               	dw	812
   652  0092A1  032F               	dw	815
   653  0092A3  0333               	dw	819
   654  0092A5  0336               	dw	822
   655  0092A7  033A               	dw	826
   656  0092A9  033E               	dw	830
   657  0092AB  0341               	dw	833
   658  0092AD  0345               	dw	837
   659  0092AF  0349               	dw	841
   660  0092B1  034D               	dw	845
   661  0092B3  0350               	dw	848
   662  0092B5  0354               	dw	852
   663  0092B7  0358               	dw	856
   664  0092B9  035C               	dw	860
   665  0092BB  0360               	dw	864
   666  0092BD  0364               	dw	868
   667  0092BF  0368               	dw	872
   668  0092C1  036C               	dw	876
   669  0092C3  0370               	dw	880
   670  0092C5  0374               	dw	884
   671  0092C7  0379               	dw	889
   672  0092C9  037D               	dw	893
   673  0092CB  0381               	dw	897
   674  0092CD  0385               	dw	901
   675  0092CF  038A               	dw	906
   676  0092D1  038E               	dw	910
   677  0092D3  0393               	dw	915
   678  0092D5  0397               	dw	919
   679  0092D7  039C               	dw	924
   680  0092D9  03A0               	dw	928
   681  0092DB  03A5               	dw	933
   682  0092DD  03AA               	dw	938
   683  0092DF  03AE               	dw	942
   684  0092E1  03B3               	dw	947
   685  0092E3  03B8               	dw	952
   686  0092E5  03BD               	dw	957
   687  0092E7  03C2               	dw	962
   688  0092E9  03C6               	dw	966
   689  0092EB  03CC               	dw	972
   690  0092ED  03D1               	dw	977
   691  0092EF  03D6               	dw	982
   692  0092F1  03DB               	dw	987
   693  0092F3  03E0               	dw	992
   694  0092F5  03E5               	dw	997
   695  0092F7  03EB               	dw	1003
   696  0092F9  03F0               	dw	1008
   697  0092FB  03F6               	dw	1014
   698  0092FD  03FB               	dw	1019
   699  0092FF  0401               	dw	1025
   700  009301  0406               	dw	1030
   701  009303  040C               	dw	1036
   702  009305  0412               	dw	1042
   703  009307  0417               	dw	1047
   704  009309  041D               	dw	1053
   705  00930B  0423               	dw	1059
   706  00930D  0429               	dw	1065
   707  00930F  042F               	dw	1071
   708  009311  0436               	dw	1078
   709  009313  043C               	dw	1084
   710  009315  0442               	dw	1090
   711  009317  0448               	dw	1096
   712  009319  044F               	dw	1103
   713  00931B  0455               	dw	1109
   714  00931D  045C               	dw	1116
   715  00931F  0463               	dw	1123
   716  009321  046A               	dw	1130
   717  009323  0470               	dw	1136
   718  009325  0477               	dw	1143
   719  009327  047E               	dw	1150
   720  009329  0485               	dw	1157
   721  00932B  048D               	dw	1165
   722  00932D  0494               	dw	1172
   723  00932F  049B               	dw	1179
   724  009331  04A3               	dw	1187
   725  009333  04AA               	dw	1194
   726  009335  04B2               	dw	1202
   727  009337  04BA               	dw	1210
   728  009339  04C2               	dw	1218
   729  00933B  04C9               	dw	1225
   730  00933D  04D2               	dw	1234
   731  00933F  04DA               	dw	1242
   732  009341  04E2               	dw	1250
   733  009343  04EA               	dw	1258
   734  009345  04F3               	dw	1267
   735  009347  04FC               	dw	1276
   736  009349  0504               	dw	1284
   737  00934B  050D               	dw	1293
   738  00934D  0516               	dw	1302
   739  00934F  051F               	dw	1311
   740  009351  0528               	dw	1320
   741  009353  0532               	dw	1330
   742  009355  053B               	dw	1339
   743  009357  0545               	dw	1349
   744  009359  054F               	dw	1359
   745  00935B  0559               	dw	1369
   746  00935D  0563               	dw	1379
   747  00935F  056D               	dw	1389
   748  009361  0577               	dw	1399
   749  009363  0582               	dw	1410
   750  009365  058C               	dw	1420
   751  009367  0597               	dw	1431
   752  009369  05A2               	dw	1442
   753  00936B  05AD               	dw	1453
   754  00936D  05B9               	dw	1465
   755  00936F  05C4               	dw	1476
   756  009371  05D0               	dw	1488
   757  009373  05DC               	dw	1500
   758  009375  05E8               	dw	1512
   759  009377  05F4               	dw	1524
   760  009379  0601               	dw	1537
   761  00937B  060E               	dw	1550
   762  00937D  061A               	dw	1562
   763  00937F  0628               	dw	1576
   764  009381  0635               	dw	1589
   765  009383  0643               	dw	1603
   766  009385  0650               	dw	1616
   767  009387  065E               	dw	1630
   768  009389  066D               	dw	1645
   769  00938B  067B               	dw	1659
   770  00938D  068A               	dw	1674
   771  00938F  0699               	dw	1689
   772  009391  06A9               	dw	1705
   773  009393  06B8               	dw	1720
   774  009395  06C8               	dw	1736
   775  009397  06D8               	dw	1752
   776  009399  06E9               	dw	1769
   777  00939B  06FA               	dw	1786
   778  00939D  070B               	dw	1803
   779  00939F  071C               	dw	1820
   780  0093A1  072E               	dw	1838
   781  0093A3  0740               	dw	1856
   782  0093A5  0753               	dw	1875
   783  0093A7  0766               	dw	1894
   784  0093A9  0779               	dw	1913
   785  0093AB  078D               	dw	1933
   786  0093AD  07A1               	dw	1953
   787  0093AF  07B6               	dw	1974
   788  0093B1  07CB               	dw	1995
   789  0093B3  07E0               	dw	2016
   790  0093B5  07F6               	dw	2038
   791  0093B7  080C               	dw	2060
   792  0093B9  0823               	dw	2083
   793  0093BB  083B               	dw	2107
   794  0093BD  0853               	dw	2131
   795  0093BF  086B               	dw	2155
   796  0093C1  0884               	dw	2180
   797  0093C3  089E               	dw	2206
   798  0093C5  08B8               	dw	2232
   799  0093C7  08D3               	dw	2259
   800  0093C9  08EF               	dw	2287
   801  0093CB  090B               	dw	2315
   802  0093CD  0928               	dw	2344
   803  0093CF  0945               	dw	2373
   804  0093D1  0964               	dw	2404
   805  0093D3  0983               	dw	2435
   806  0093D5  09A3               	dw	2467
   807  0093D7  09C4               	dw	2500
   808  0093D9  09E6               	dw	2534
   809  0093DB  0A08               	dw	2568
   810  0093DD  0A2C               	dw	2604
   811  0093DF  0A51               	dw	2641
   812  0093E1  0A77               	dw	2679
   813  0093E3  0A9D               	dw	2717
   814  0093E5  0AC5               	dw	2757
   815  0093E7  0AEF               	dw	2799
   816  0093E9  0B19               	dw	2841
   817  0093EB  0B45               	dw	2885
   818  0093ED  0B72               	dw	2930
   819  0093EF  0B72               	dw	2930
   820  0093F1  0B7D               	dw	2941
   821  0093F3  0B89               	dw	2953
   822  0093F5  0B94               	dw	2964
   823  0093F7  0BA0               	dw	2976
   824  0093F9  0BAC               	dw	2988
   825  0093FB  0BB8               	dw	3000
   826  0093FD  0BC4               	dw	3012
   827  0093FF  0BD0               	dw	3024
   828  009401  0BDC               	dw	3036
   829  009403  0BE9               	dw	3049
   830  009405  0BF5               	dw	3061
   831  009407  0C02               	dw	3074
   832  009409  0C0E               	dw	3086
   833  00940B  0C1B               	dw	3099
   834  00940D  0C28               	dw	3112
   835  00940F  0C35               	dw	3125
   836  009411  0C42               	dw	3138
   837  009413  0C4F               	dw	3151
   838  009415  0C5D               	dw	3165
   839  009417  0C6A               	dw	3178
   840  009419  0C77               	dw	3191
   841  00941B  0C85               	dw	3205
   842  00941D  0C93               	dw	3219
   843  00941F  0CA1               	dw	3233
   844  009421  0CAF               	dw	3247
   845  009423  0CBD               	dw	3261
   846  009425  0CCB               	dw	3275
   847  009427  0CD9               	dw	3289
   848  009429  0CE8               	dw	3304
   849  00942B  0CF7               	dw	3319
   850  00942D  0D05               	dw	3333
   851  00942F  0D14               	dw	3348
   852  009431  0D23               	dw	3363
   853  009433  0D32               	dw	3378
   854  009435  0D42               	dw	3394
   855  009437  0D51               	dw	3409
   856  009439  0D61               	dw	3425
   857  00943B  0D70               	dw	3440
   858  00943D  0D80               	dw	3456
   859  00943F  0D90               	dw	3472
   860  009441  0DA0               	dw	3488
   861  009443  0DB1               	dw	3505
   862  009445  0DC1               	dw	3521
   863  009447  0DD2               	dw	3538
   864  009449  0DE3               	dw	3555
   865  00944B  0DF3               	dw	3571
   866  00944D  0E05               	dw	3589
   867  00944F  0E16               	dw	3606
   868  009451  0E27               	dw	3623
   869  009453  0E39               	dw	3641
   870  009455  0E4B               	dw	3659
   871  009457  0E5C               	dw	3676
   872  009459  0E6F               	dw	3695
   873  00945B  0E81               	dw	3713
   874  00945D  0E93               	dw	3731
   875  00945F  0EA6               	dw	3750
   876  009461                     __end_of_motor_speed_lookup:
   877                           	opt stack 0
   878  009461                     _motor_steps_lookup:
   879                           	opt stack 0
   880  009461  0001               	dw	1
   881  009463  0002               	dw	2
   882  009465  0003               	dw	3
   883  009467  0004               	dw	4
   884  009469  0005               	dw	5
   885  00946B  0006               	dw	6
   886  00946D  0007               	dw	7
   887  00946F  0008               	dw	8
   888  009471  0009               	dw	9
   889  009473  000A               	dw	10
   890  009475  000B               	dw	11
   891  009477  000C               	dw	12
   892  009479  000D               	dw	13
   893  00947B  000E               	dw	14
   894  00947D  000F               	dw	15
   895  00947F  0010               	dw	16
   896  009481  0011               	dw	17
   897  009483  0012               	dw	18
   898  009485  0013               	dw	19
   899  009487  0014               	dw	20
   900  009489  0015               	dw	21
   901  00948B  0016               	dw	22
   902  00948D  0017               	dw	23
   903  00948F  0018               	dw	24
   904  009491  0019               	dw	25
   905  009493  001A               	dw	26
   906  009495  001B               	dw	27
   907  009497  001C               	dw	28
   908  009499  001D               	dw	29
   909  00949B  001E               	dw	30
   910  00949D  001F               	dw	31
   911  00949F  0020               	dw	32
   912  0094A1  0021               	dw	33
   913  0094A3  0022               	dw	34
   914  0094A5  0023               	dw	35
   915  0094A7  0024               	dw	36
   916  0094A9  0025               	dw	37
   917  0094AB  0026               	dw	38
   918  0094AD  0027               	dw	39
   919  0094AF  0028               	dw	40
   920  0094B1  0029               	dw	41
   921  0094B3  002A               	dw	42
   922  0094B5  002B               	dw	43
   923  0094B7  002C               	dw	44
   924  0094B9  002D               	dw	45
   925  0094BB  002E               	dw	46
   926  0094BD  002F               	dw	47
   927  0094BF  0030               	dw	48
   928  0094C1  0031               	dw	49
   929  0094C3  0032               	dw	50
   930  0094C5  0033               	dw	51
   931  0094C7  0034               	dw	52
   932  0094C9  0035               	dw	53
   933  0094CB  0036               	dw	54
   934  0094CD  0037               	dw	55
   935  0094CF  0038               	dw	56
   936  0094D1  0039               	dw	57
   937  0094D3  003A               	dw	58
   938  0094D5  003B               	dw	59
   939  0094D7  003C               	dw	60
   940  0094D9  003D               	dw	61
   941  0094DB  003E               	dw	62
   942  0094DD  003F               	dw	63
   943  0094DF  0040               	dw	64
   944  0094E1  0041               	dw	65
   945  0094E3  0042               	dw	66
   946  0094E5  0043               	dw	67
   947  0094E7  0045               	dw	69
   948  0094E9  0047               	dw	71
   949  0094EB  0049               	dw	73
   950  0094ED  004B               	dw	75
   951  0094EF  004D               	dw	77
   952  0094F1  004F               	dw	79
   953  0094F3  0051               	dw	81
   954  0094F5  0053               	dw	83
   955  0094F7  0055               	dw	85
   956  0094F9  0057               	dw	87
   957  0094FB  0059               	dw	89
   958  0094FD  005B               	dw	91
   959  0094FF  005D               	dw	93
   960  009501  005F               	dw	95
   961  009503  0061               	dw	97
   962  009505  0063               	dw	99
   963  009507  0065               	dw	101
   964  009509  0067               	dw	103
   965  00950B  0069               	dw	105
   966  00950D  006B               	dw	107
   967  00950F  006E               	dw	110
   968  009511  0070               	dw	112
   969  009513  0073               	dw	115
   970  009515  0075               	dw	117
   971  009517  0077               	dw	119
   972  009519  0079               	dw	121
   973  00951B  007B               	dw	123
   974  00951D  007D               	dw	125
   975  00951F  007F               	dw	127
   976  009521  0081               	dw	129
   977  009523  0083               	dw	131
   978  009525  0085               	dw	133
   979  009527  0087               	dw	135
   980  009529  0089               	dw	137
   981  00952B  008B               	dw	139
   982  00952D  008D               	dw	141
   983  00952F  008F               	dw	143
   984  009531  0091               	dw	145
   985  009533  0093               	dw	147
   986  009535  0095               	dw	149
   987  009537  0097               	dw	151
   988  009539  0099               	dw	153
   989  00953B  009B               	dw	155
   990  00953D  009D               	dw	157
   991  00953F  009F               	dw	159
   992  009541  00A1               	dw	161
   993  009543  00A3               	dw	163
   994  009545  00A5               	dw	165
   995  009547  00A7               	dw	167
   996  009549  00A9               	dw	169
   997  00954B  00AB               	dw	171
   998  00954D  00AD               	dw	173
   999  00954F  00AF               	dw	175
  1000  009551  00B1               	dw	177
  1001  009553  00B3               	dw	179
  1002  009555  00B5               	dw	181
  1003  009557  00B7               	dw	183
  1004  009559  00B9               	dw	185
  1005  00955B  00BB               	dw	187
  1006  00955D  00BD               	dw	189
  1007  00955F  00C0               	dw	192
  1008  009561  00C3               	dw	195
  1009  009563  00C6               	dw	198
  1010  009565  00C9               	dw	201
  1011  009567  00CC               	dw	204
  1012  009569  00CF               	dw	207
  1013  00956B  00D2               	dw	210
  1014  00956D  00D5               	dw	213
  1015  00956F  00D8               	dw	216
  1016  009571  00DB               	dw	219
  1017  009573  00DE               	dw	222
  1018  009575  00E1               	dw	225
  1019  009577  00E4               	dw	228
  1020  009579  00E7               	dw	231
  1021  00957B  00EA               	dw	234
  1022  00957D  00ED               	dw	237
  1023  00957F  00F0               	dw	240
  1024  009581  00F3               	dw	243
  1025  009583  00F6               	dw	246
  1026  009585  00F9               	dw	249
  1027  009587  00FC               	dw	252
  1028  009589  00FF               	dw	255
  1029  00958B  0102               	dw	258
  1030  00958D  0105               	dw	261
  1031  00958F  0108               	dw	264
  1032  009591  010B               	dw	267
  1033  009593  010E               	dw	270
  1034  009595  0111               	dw	273
  1035  009597  0114               	dw	276
  1036  009599  0117               	dw	279
  1037  00959B  011A               	dw	282
  1038  00959D  011D               	dw	285
  1039  00959F  0120               	dw	288
  1040  0095A1  0123               	dw	291
  1041  0095A3  0126               	dw	294
  1042  0095A5  012A               	dw	298
  1043  0095A7  012D               	dw	301
  1044  0095A9  0130               	dw	304
  1045  0095AB  0133               	dw	307
  1046  0095AD  0137               	dw	311
  1047  0095AF  013A               	dw	314
  1048  0095B1  013E               	dw	318
  1049  0095B3  0142               	dw	322
  1050  0095B5  0145               	dw	325
  1051  0095B7  0149               	dw	329
  1052  0095B9  014D               	dw	333
  1053  0095BB  0151               	dw	337
  1054  0095BD  0155               	dw	341
  1055  0095BF  0159               	dw	345
  1056  0095C1  015D               	dw	349
  1057  0095C3  0161               	dw	353
  1058  0095C5  0166               	dw	358
  1059  0095C7  016A               	dw	362
  1060  0095C9  016E               	dw	366
  1061  0095CB  0173               	dw	371
  1062  0095CD  0178               	dw	376
  1063  0095CF  017D               	dw	381
  1064  0095D1  0182               	dw	386
  1065  0095D3  0187               	dw	391
  1066  0095D5  018C               	dw	396
  1067  0095D7  0191               	dw	401
  1068  0095D9  0196               	dw	406
  1069  0095DB  019C               	dw	412
  1070  0095DD  01A1               	dw	417
  1071  0095DF  01A7               	dw	423
  1072  0095E1  01AD               	dw	429
  1073  0095E3  01B3               	dw	435
  1074  0095E5  01B9               	dw	441
  1075  0095E7  01BF               	dw	447
  1076  0095E9  01C6               	dw	454
  1077  0095EB  01CC               	dw	460
  1078  0095ED  01D3               	dw	467
  1079  0095EF  01DA               	dw	474
  1080  0095F1  01E1               	dw	481
  1081  0095F3  01E8               	dw	488
  1082  0095F5  01F0               	dw	496
  1083  0095F7  01F7               	dw	503
  1084  0095F9  01FF               	dw	511
  1085  0095FB  0207               	dw	519
  1086  0095FD  020F               	dw	527
  1087  0095FF  0218               	dw	536
  1088  009601  0221               	dw	545
  1089  009603  022A               	dw	554
  1090  009605  0233               	dw	563
  1091  009607  023D               	dw	573
  1092  009609  0247               	dw	583
  1093  00960B  0251               	dw	593
  1094  00960D  025C               	dw	604
  1095  00960F  0267               	dw	615
  1096  009611  0272               	dw	626
  1097  009613  027E               	dw	638
  1098  009615  028A               	dw	650
  1099  009617  0297               	dw	663
  1100  009619  02A4               	dw	676
  1101  00961B  02B2               	dw	690
  1102  00961D  02C0               	dw	704
  1103  00961F  02CF               	dw	719
  1104  009621  02DF               	dw	735
  1105  009623  02EF               	dw	751
  1106  009625  02FF               	dw	767
  1107  009627  0311               	dw	785
  1108  009629  0323               	dw	803
  1109  00962B  0336               	dw	822
  1110  00962D  0349               	dw	841
  1111  00962F  035E               	dw	862
  1112  009631  0373               	dw	883
  1113  009633  0389               	dw	905
  1114  009635  03A1               	dw	929
  1115  009637  03B9               	dw	953
  1116  009639  03D3               	dw	979
  1117  00963B  03DD               	dw	989
  1118  00963D  03E4               	dw	996
  1119  00963F  03EA               	dw	1002
  1120  009641  03F1               	dw	1009
  1121  009643  03F8               	dw	1016
  1122  009645  03FF               	dw	1023
  1123  009647  0406               	dw	1030
  1124  009649  040D               	dw	1037
  1125  00964B  0415               	dw	1045
  1126  00964D  041C               	dw	1052
  1127  00964F  0424               	dw	1060
  1128  009651  042B               	dw	1067
  1129  009653  0433               	dw	1075
  1130  009655  043B               	dw	1083
  1131  009657  0442               	dw	1090
  1132  009659  044A               	dw	1098
  1133  00965B  0452               	dw	1106
  1134  00965D  045A               	dw	1114
  1135  00965F  0463               	dw	1123
  1136  009661  046B               	dw	1131
  1137  009663  0474               	dw	1140
  1138  009665  047C               	dw	1148
  1139  009667  0485               	dw	1157
  1140  009669  048E               	dw	1166
  1141  00966B  0496               	dw	1174
  1142  00966D  049F               	dw	1183
  1143  00966F  04A9               	dw	1193
  1144  009671  04B2               	dw	1202
  1145  009673  04BB               	dw	1211
  1146  009675  04C5               	dw	1221
  1147  009677  04CE               	dw	1230
  1148  009679  04D8               	dw	1240
  1149  00967B  04E2               	dw	1250
  1150  00967D  04EC               	dw	1260
  1151  00967F  04F6               	dw	1270
  1152  009681  0500               	dw	1280
  1153  009683  050B               	dw	1291
  1154  009685  0515               	dw	1301
  1155  009687  0520               	dw	1312
  1156  009689  052B               	dw	1323
  1157  00968B  0536               	dw	1334
  1158  00968D  0541               	dw	1345
  1159  00968F  054C               	dw	1356
  1160  009691  0558               	dw	1368
  1161  009693  0564               	dw	1380
  1162  009695  056F               	dw	1391
  1163  009697  057B               	dw	1403
  1164  009699  0587               	dw	1415
  1165  00969B  0594               	dw	1428
  1166  00969D  05A0               	dw	1440
  1167  00969F  05AD               	dw	1453
  1168  0096A1  05BA               	dw	1466
  1169  0096A3  05C7               	dw	1479
  1170  0096A5  05D4               	dw	1492
  1171  0096A7  05E2               	dw	1506
  1172  0096A9  05EF               	dw	1519
  1173  0096AB  05FD               	dw	1533
  1174  0096AD  060B               	dw	1547
  1175  0096AF  0619               	dw	1561
  1176  0096B1  0628               	dw	1576
  1177  0096B3  0637               	dw	1591
  1178  0096B5  0646               	dw	1606
  1179  0096B7  0655               	dw	1621
  1180  0096B9  0664               	dw	1636
  1181  0096BB  0674               	dw	1652
  1182  0096BD  0684               	dw	1668
  1183  0096BF  0694               	dw	1684
  1184  0096C1  06A4               	dw	1700
  1185  0096C3  06B5               	dw	1717
  1186  0096C5  06C6               	dw	1734
  1187  0096C7  06D7               	dw	1751
  1188  0096C9  06E9               	dw	1769
  1189  0096CB  06FA               	dw	1786
  1190  0096CD  070C               	dw	1804
  1191  0096CF  071F               	dw	1823
  1192  0096D1  0731               	dw	1841
  1193  0096D3  0744               	dw	1860
  1194  0096D5  0758               	dw	1880
  1195  0096D7  076B               	dw	1899
  1196  0096D9  077F               	dw	1919
  1197  0096DB  0793               	dw	1939
  1198  0096DD  07A8               	dw	1960
  1199  0096DF  07BD               	dw	1981
  1200  0096E1  07D2               	dw	2002
  1201  0096E3  07E8               	dw	2024
  1202  0096E5  07FE               	dw	2046
  1203  0096E7  0815               	dw	2069
  1204  0096E9  082C               	dw	2092
  1205  0096EB  0843               	dw	2115
  1206  0096ED  085B               	dw	2139
  1207  0096EF  0873               	dw	2163
  1208  0096F1  088B               	dw	2187
  1209  0096F3  08A5               	dw	2213
  1210  0096F5  08BE               	dw	2238
  1211  0096F7  08D8               	dw	2264
  1212  0096F9  08F2               	dw	2290
  1213  0096FB  090D               	dw	2317
  1214  0096FD  0929               	dw	2345
  1215  0096FF  0945               	dw	2373
  1216  009701  0961               	dw	2401
  1217  009703  097E               	dw	2430
  1218  009705  099C               	dw	2460
  1219  009707  09BA               	dw	2490
  1220  009709  09D9               	dw	2521
  1221  00970B  09F9               	dw	2553
  1222  00970D  0A19               	dw	2585
  1223  00970F  0A39               	dw	2617
  1224  009711  0A5B               	dw	2651
  1225  009713  0A7D               	dw	2685
  1226  009715  0A9F               	dw	2719
  1227  009717  0AC3               	dw	2755
  1228  009719  0AE7               	dw	2791
  1229  00971B  0B0C               	dw	2828
  1230  00971D  0B31               	dw	2865
  1231  00971F  0B58               	dw	2904
  1232  009721  0B7F               	dw	2943
  1233  009723  0BA7               	dw	2983
  1234  009725  0BD0               	dw	3024
  1235  009727  0BFA               	dw	3066
  1236  009729  0C25               	dw	3109
  1237  00972B  0C51               	dw	3153
  1238  00972D  0C7E               	dw	3198
  1239  00972F  0CAB               	dw	3243
  1240  009731  0CDA               	dw	3290
  1241  009733  0D0A               	dw	3338
  1242  009735  0D3B               	dw	3387
  1243  009737  0D6D               	dw	3437
  1244  009739  0DA0               	dw	3488
  1245  00973B  0DD4               	dw	3540
  1246  00973D  0E0A               	dw	3594
  1247  00973F  0E41               	dw	3649
  1248  009741  0E79               	dw	3705
  1249  009743  0EB3               	dw	3763
  1250  009745  0EEE               	dw	3822
  1251  009747  0F2A               	dw	3882
  1252  009749  0F68               	dw	3944
  1253  00974B  0FA8               	dw	4008
  1254  00974D  0FE9               	dw	4073
  1255  00974F  102C               	dw	4140
  1256  009751  1070               	dw	4208
  1257  009753  10B6               	dw	4278
  1258  009755  10FE               	dw	4350
  1259  009757  1148               	dw	4424
  1260  009759  1194               	dw	4500
  1261  00975B  11E2               	dw	4578
  1262  00975D  1232               	dw	4658
  1263  00975F  1285               	dw	4741
  1264  009761  12D9               	dw	4825
  1265  009763  1330               	dw	4912
  1266  009765  1389               	dw	5001
  1267  009767  13E5               	dw	5093
  1268  009769  1444               	dw	5188
  1269  00976B  14A5               	dw	5285
  1270  00976D  1509               	dw	5385
  1271  00976F  1570               	dw	5488
  1272  009771  15DA               	dw	5594
  1273  009773  1647               	dw	5703
  1274  009775  16B8               	dw	5816
  1275  009777  172B               	dw	5931
  1276  009779  17A3               	dw	6051
  1277  00977B  181E               	dw	6174
  1278  00977D  189D               	dw	6301
  1279  00977F  1921               	dw	6433
  1280  009781  19A8               	dw	6568
  1281  009783  1A34               	dw	6708
  1282  009785  1AC4               	dw	6852
  1283  009787  1B5A               	dw	7002
  1284  009789  1BF4               	dw	7156
  1285  00978B  1C94               	dw	7316
  1286  00978D  1D39               	dw	7481
  1287  00978F  1DE4               	dw	7652
  1288  009791  1E95               	dw	7829
  1289  009793  1F4C               	dw	8012
  1290  009795  200A               	dw	8202
  1291  009797  20CE               	dw	8398
  1292  009799  219A               	dw	8602
  1293  00979B  226E               	dw	8814
  1294  00979D  234A               	dw	9034
  1295  00979F  242E               	dw	9262
  1296  0097A1  251B               	dw	9499
  1297  0097A3  2612               	dw	9746
  1298  0097A5  2712               	dw	10002
  1299  0097A7  281D               	dw	10269
  1300  0097A9  2932               	dw	10546
  1301  0097AB  2A53               	dw	10835
  1302  0097AD  2B81               	dw	11137
  1303  0097AF  2CBB               	dw	11451
  1304  0097B1  2E03               	dw	11779
  1305  0097B3  2F5A               	dw	12122
  1306  0097B5  30C0               	dw	12480
  1307  0097B7  3236               	dw	12854
  1308  0097B9  33BD               	dw	13245
  1309  0097BB  3557               	dw	13655
  1310  0097BD  35F5               	dw	13813
  1311  0097BF  3661               	dw	13921
  1312  0097C1  36CD               	dw	14029
  1313  0097C3  373B               	dw	14139
  1314  0097C5  37AA               	dw	14250
  1315  0097C7  381B               	dw	14363
  1316  0097C9  388C               	dw	14476
  1317  0097CB  3900               	dw	14592
  1318  0097CD  3974               	dw	14708
  1319  0097CF  39EA               	dw	14826
  1320  0097D1  3A62               	dw	14946
  1321  0097D3  3ADB               	dw	15067
  1322  0097D5  3B55               	dw	15189
  1323  0097D7  3BD1               	dw	15313
  1324  0097D9  3C4E               	dw	15438
  1325  0097DB  3CCD               	dw	15565
  1326  0097DD  3D4E               	dw	15694
  1327  0097DF  3DD0               	dw	15824
  1328  0097E1  3E54               	dw	15956
  1329  0097E3  3EDA               	dw	16090
  1330  0097E5  3F61               	dw	16225
  1331  0097E7  3FEA               	dw	16362
  1332  0097E9  4074               	dw	16500
  1333  0097EB  4101               	dw	16641
  1334  0097ED  418F               	dw	16783
  1335  0097EF  421F               	dw	16927
  1336  0097F1  42B1               	dw	17073
  1337  0097F3  4345               	dw	17221
  1338  0097F5  43DB               	dw	17371
  1339  0097F7  4473               	dw	17523
  1340  0097F9  450D               	dw	17677
  1341  0097FB  45A9               	dw	17833
  1342  0097FD  4647               	dw	17991
  1343  0097FF  46E7               	dw	18151
  1344  009801  4789               	dw	18313
  1345  009803  482E               	dw	18478
  1346  009805  48D5               	dw	18645
  1347  009807  497E               	dw	18814
  1348  009809  4A29               	dw	18985
  1349  00980B  4AD7               	dw	19159
  1350  00980D  4B87               	dw	19335
  1351  00980F  4C3A               	dw	19514
  1352  009811  4CEF               	dw	19695
  1353  009813  4DA6               	dw	19878
  1354  009815  4E61               	dw	20065
  1355  009817  4F1E               	dw	20254
  1356  009819  4FDD               	dw	20445
  1357  00981B  50A0               	dw	20640
  1358  00981D  5165               	dw	20837
  1359  00981F  522D               	dw	21037
  1360  009821  52F8               	dw	21240
  1361  009823  53C6               	dw	21446
  1362  009825  5497               	dw	21655
  1363  009827  556B               	dw	21867
  1364  009829  5642               	dw	22082
  1365  00982B  571C               	dw	22300
  1366  00982D  57FA               	dw	22522
  1367  00982F                     __end_of_motor_steps_lookup:
  1368                           	opt stack 0
  1369  00982F                     _motor_postscaler_lookup:
  1370                           	opt stack 0
  1371  00982F  0C                 	db	12
  1372  009830  07                 	db	7
  1373  009831  05                 	db	5
  1374  009832  04                 	db	4
  1375  009833  04                 	db	4
  1376  009834  03                 	db	3
  1377  009835  03                 	db	3
  1378  009836  03                 	db	3
  1379  009837  02                 	db	2
  1380  009838  02                 	db	2
  1381  009839  02                 	db	2
  1382  00983A  02                 	db	2
  1383  00983B  02                 	db	2
  1384  00983C  02                 	db	2
  1385  00983D  01                 	db	1
  1386  00983E  01                 	db	1
  1387  00983F  01                 	db	1
  1388  009840  01                 	db	1
  1389  009841  01                 	db	1
  1390  009842  01                 	db	1
  1391  009843  01                 	db	1
  1392  009844  01                 	db	1
  1393  009845  01                 	db	1
  1394  009846  01                 	db	1
  1395  009847  01                 	db	1
  1396  009848  01                 	db	1
  1397  009849  01                 	db	1
  1398  00984A  01                 	db	1
  1399  00984B  01                 	db	1
  1400  00984C  01                 	db	1
  1401  00984D  01                 	db	1
  1402  00984E  01                 	db	1
  1403  00984F  01                 	db	1
  1404  009850  01                 	db	1
  1405  009851  01                 	db	1
  1406  009852  01                 	db	1
  1407  009853  01                 	db	1
  1408  009854  01                 	db	1
  1409  009855  01                 	db	1
  1410  009856  01                 	db	1
  1411  009857  01                 	db	1
  1412  009858  01                 	db	1
  1413  009859  01                 	db	1
  1414  00985A  01                 	db	1
  1415  00985B  01                 	db	1
  1416  00985C  01                 	db	1
  1417  00985D  01                 	db	1
  1418  00985E  01                 	db	1
  1419  00985F  01                 	db	1
  1420  009860  01                 	db	1
  1421  009861  01                 	db	1
  1422  009862  01                 	db	1
  1423  009863  01                 	db	1
  1424  009864  01                 	db	1
  1425  009865  01                 	db	1
  1426  009866  01                 	db	1
  1427  009867  01                 	db	1
  1428  009868  01                 	db	1
  1429  009869  01                 	db	1
  1430  00986A  01                 	db	1
  1431  00986B  01                 	db	1
  1432  00986C  01                 	db	1
  1433  00986D  01                 	db	1
  1434  00986E  01                 	db	1
  1435  00986F  01                 	db	1
  1436  009870  01                 	db	1
  1437  009871  01                 	db	1
  1438  009872  01                 	db	1
  1439  009873  01                 	db	1
  1440  009874  01                 	db	1
  1441  009875  01                 	db	1
  1442  009876  01                 	db	1
  1443  009877  01                 	db	1
  1444  009878  01                 	db	1
  1445  009879  01                 	db	1
  1446  00987A  01                 	db	1
  1447  00987B  01                 	db	1
  1448  00987C  01                 	db	1
  1449  00987D  01                 	db	1
  1450  00987E  01                 	db	1
  1451  00987F  01                 	db	1
  1452  009880  01                 	db	1
  1453  009881  01                 	db	1
  1454  009882  01                 	db	1
  1455  009883  01                 	db	1
  1456  009884  01                 	db	1
  1457  009885  01                 	db	1
  1458  009886  01                 	db	1
  1459  009887  01                 	db	1
  1460  009888  01                 	db	1
  1461  009889  01                 	db	1
  1462  00988A  00                 	db	0
  1463  00988B  00                 	db	0
  1464  00988C  00                 	db	0
  1465  00988D  00                 	db	0
  1466  00988E  00                 	db	0
  1467  00988F  00                 	db	0
  1468  009890  00                 	db	0
  1469  009891  00                 	db	0
  1470  009892  00                 	db	0
  1471  009893  00                 	db	0
  1472  009894  00                 	db	0
  1473  009895  00                 	db	0
  1474  009896  00                 	db	0
  1475  009897  00                 	db	0
  1476  009898  00                 	db	0
  1477  009899  00                 	db	0
  1478  00989A  00                 	db	0
  1479  00989B  00                 	db	0
  1480  00989C  00                 	db	0
  1481  00989D  00                 	db	0
  1482  00989E  00                 	db	0
  1483  00989F  00                 	db	0
  1484  0098A0  00                 	db	0
  1485  0098A1  00                 	db	0
  1486  0098A2  00                 	db	0
  1487  0098A3  00                 	db	0
  1488  0098A4  00                 	db	0
  1489  0098A5  00                 	db	0
  1490  0098A6  00                 	db	0
  1491  0098A7  00                 	db	0
  1492  0098A8  00                 	db	0
  1493  0098A9  00                 	db	0
  1494  0098AA  00                 	db	0
  1495  0098AB  00                 	db	0
  1496  0098AC  00                 	db	0
  1497  0098AD  00                 	db	0
  1498  0098AE  00                 	db	0
  1499  0098AF  00                 	db	0
  1500  0098B0  00                 	db	0
  1501  0098B1  00                 	db	0
  1502  0098B2  00                 	db	0
  1503  0098B3  00                 	db	0
  1504  0098B4  00                 	db	0
  1505  0098B5  00                 	db	0
  1506  0098B6  00                 	db	0
  1507  0098B7  00                 	db	0
  1508  0098B8  00                 	db	0
  1509  0098B9  00                 	db	0
  1510  0098BA  00                 	db	0
  1511  0098BB  00                 	db	0
  1512  0098BC  00                 	db	0
  1513  0098BD  00                 	db	0
  1514  0098BE  00                 	db	0
  1515  0098BF  00                 	db	0
  1516  0098C0  00                 	db	0
  1517  0098C1  00                 	db	0
  1518  0098C2  00                 	db	0
  1519  0098C3  00                 	db	0
  1520  0098C4  00                 	db	0
  1521  0098C5  00                 	db	0
  1522  0098C6  00                 	db	0
  1523  0098C7  00                 	db	0
  1524  0098C8  00                 	db	0
  1525  0098C9  00                 	db	0
  1526  0098CA  00                 	db	0
  1527  0098CB  00                 	db	0
  1528  0098CC  00                 	db	0
  1529  0098CD  00                 	db	0
  1530  0098CE  00                 	db	0
  1531  0098CF  00                 	db	0
  1532  0098D0  00                 	db	0
  1533  0098D1  00                 	db	0
  1534  0098D2  00                 	db	0
  1535  0098D3  00                 	db	0
  1536  0098D4  00                 	db	0
  1537  0098D5  00                 	db	0
  1538  0098D6  00                 	db	0
  1539  0098D7  00                 	db	0
  1540  0098D8  00                 	db	0
  1541  0098D9  00                 	db	0
  1542  0098DA  00                 	db	0
  1543  0098DB  00                 	db	0
  1544  0098DC  00                 	db	0
  1545  0098DD  00                 	db	0
  1546  0098DE  00                 	db	0
  1547  0098DF  00                 	db	0
  1548  0098E0  00                 	db	0
  1549  0098E1  00                 	db	0
  1550  0098E2  00                 	db	0
  1551  0098E3  00                 	db	0
  1552  0098E4  00                 	db	0
  1553  0098E5  00                 	db	0
  1554  0098E6  00                 	db	0
  1555  0098E7  00                 	db	0
  1556  0098E8  00                 	db	0
  1557  0098E9  00                 	db	0
  1558  0098EA  00                 	db	0
  1559  0098EB  00                 	db	0
  1560  0098EC  00                 	db	0
  1561  0098ED  00                 	db	0
  1562  0098EE  00                 	db	0
  1563  0098EF  00                 	db	0
  1564  0098F0  00                 	db	0
  1565  0098F1  00                 	db	0
  1566  0098F2  00                 	db	0
  1567  0098F3  00                 	db	0
  1568  0098F4  00                 	db	0
  1569  0098F5  00                 	db	0
  1570  0098F6  00                 	db	0
  1571  0098F7  00                 	db	0
  1572  0098F8  00                 	db	0
  1573  0098F9  00                 	db	0
  1574  0098FA  00                 	db	0
  1575  0098FB  00                 	db	0
  1576  0098FC  00                 	db	0
  1577  0098FD  00                 	db	0
  1578  0098FE  00                 	db	0
  1579  0098FF  00                 	db	0
  1580  009900  00                 	db	0
  1581  009901  00                 	db	0
  1582  009902  00                 	db	0
  1583  009903  00                 	db	0
  1584  009904  00                 	db	0
  1585  009905  00                 	db	0
  1586  009906  00                 	db	0
  1587  009907  00                 	db	0
  1588  009908  00                 	db	0
  1589  009909  00                 	db	0
  1590  00990A  00                 	db	0
  1591  00990B  00                 	db	0
  1592  00990C  00                 	db	0
  1593  00990D  00                 	db	0
  1594  00990E  00                 	db	0
  1595  00990F  00                 	db	0
  1596  009910  00                 	db	0
  1597  009911  00                 	db	0
  1598  009912  00                 	db	0
  1599  009913  00                 	db	0
  1600  009914  00                 	db	0
  1601  009915  00                 	db	0
  1602  009916  00                 	db	0
  1603  009917  00                 	db	0
  1604  009918  00                 	db	0
  1605  009919  00                 	db	0
  1606  00991A  00                 	db	0
  1607  00991B  00                 	db	0
  1608  00991C  00                 	db	0
  1609  00991D  00                 	db	0
  1610  00991E  00                 	db	0
  1611  00991F  00                 	db	0
  1612  009920  00                 	db	0
  1613  009921  00                 	db	0
  1614  009922  00                 	db	0
  1615  009923  00                 	db	0
  1616  009924  00                 	db	0
  1617  009925  00                 	db	0
  1618  009926  00                 	db	0
  1619  009927  00                 	db	0
  1620  009928  00                 	db	0
  1621  009929  00                 	db	0
  1622  00992A  00                 	db	0
  1623  00992B  00                 	db	0
  1624  00992C  00                 	db	0
  1625  00992D  00                 	db	0
  1626  00992E  00                 	db	0
  1627  00992F  00                 	db	0
  1628  009930  00                 	db	0
  1629  009931  00                 	db	0
  1630  009932  00                 	db	0
  1631  009933  00                 	db	0
  1632  009934  00                 	db	0
  1633  009935  00                 	db	0
  1634  009936  00                 	db	0
  1635  009937  00                 	db	0
  1636  009938  00                 	db	0
  1637  009939  00                 	db	0
  1638  00993A  00                 	db	0
  1639  00993B  00                 	db	0
  1640  00993C  00                 	db	0
  1641  00993D  00                 	db	0
  1642  00993E  00                 	db	0
  1643  00993F  00                 	db	0
  1644  009940  00                 	db	0
  1645  009941  00                 	db	0
  1646  009942  00                 	db	0
  1647  009943  00                 	db	0
  1648  009944  00                 	db	0
  1649  009945  00                 	db	0
  1650  009946  00                 	db	0
  1651  009947  00                 	db	0
  1652  009948  00                 	db	0
  1653  009949  00                 	db	0
  1654  00994A  00                 	db	0
  1655  00994B  00                 	db	0
  1656  00994C  00                 	db	0
  1657  00994D  00                 	db	0
  1658  00994E  00                 	db	0
  1659  00994F  00                 	db	0
  1660  009950  00                 	db	0
  1661  009951  00                 	db	0
  1662  009952  00                 	db	0
  1663  009953  00                 	db	0
  1664  009954  00                 	db	0
  1665  009955  00                 	db	0
  1666  009956  00                 	db	0
  1667  009957  00                 	db	0
  1668  009958  00                 	db	0
  1669  009959  00                 	db	0
  1670  00995A  00                 	db	0
  1671  00995B  00                 	db	0
  1672  00995C  00                 	db	0
  1673  00995D  00                 	db	0
  1674  00995E  00                 	db	0
  1675  00995F  00                 	db	0
  1676  009960  00                 	db	0
  1677  009961  00                 	db	0
  1678  009962  00                 	db	0
  1679  009963  00                 	db	0
  1680  009964  00                 	db	0
  1681  009965  00                 	db	0
  1682  009966  00                 	db	0
  1683  009967  00                 	db	0
  1684  009968  00                 	db	0
  1685  009969  00                 	db	0
  1686  00996A  00                 	db	0
  1687  00996B  00                 	db	0
  1688  00996C  00                 	db	0
  1689  00996D  00                 	db	0
  1690  00996E  00                 	db	0
  1691  00996F  00                 	db	0
  1692  009970  00                 	db	0
  1693  009971  00                 	db	0
  1694  009972  00                 	db	0
  1695  009973  00                 	db	0
  1696  009974  00                 	db	0
  1697  009975  00                 	db	0
  1698  009976  00                 	db	0
  1699  009977  00                 	db	0
  1700  009978  00                 	db	0
  1701  009979  00                 	db	0
  1702  00997A  00                 	db	0
  1703  00997B  00                 	db	0
  1704  00997C  00                 	db	0
  1705  00997D  00                 	db	0
  1706  00997E  00                 	db	0
  1707  00997F  00                 	db	0
  1708  009980  00                 	db	0
  1709  009981  00                 	db	0
  1710  009982  00                 	db	0
  1711  009983  00                 	db	0
  1712  009984  00                 	db	0
  1713  009985  00                 	db	0
  1714  009986  00                 	db	0
  1715  009987  00                 	db	0
  1716  009988  00                 	db	0
  1717  009989  00                 	db	0
  1718  00998A  00                 	db	0
  1719  00998B  00                 	db	0
  1720  00998C  00                 	db	0
  1721  00998D  00                 	db	0
  1722  00998E  00                 	db	0
  1723  00998F  00                 	db	0
  1724  009990  00                 	db	0
  1725  009991  00                 	db	0
  1726  009992  00                 	db	0
  1727  009993  00                 	db	0
  1728  009994  00                 	db	0
  1729  009995  00                 	db	0
  1730  009996  00                 	db	0
  1731  009997  00                 	db	0
  1732  009998  00                 	db	0
  1733  009999  00                 	db	0
  1734  00999A  00                 	db	0
  1735  00999B  00                 	db	0
  1736  00999C  00                 	db	0
  1737  00999D  00                 	db	0
  1738  00999E  00                 	db	0
  1739  00999F  00                 	db	0
  1740  0099A0  00                 	db	0
  1741  0099A1  00                 	db	0
  1742  0099A2  00                 	db	0
  1743  0099A3  00                 	db	0
  1744  0099A4  00                 	db	0
  1745  0099A5  00                 	db	0
  1746  0099A6  00                 	db	0
  1747  0099A7  00                 	db	0
  1748  0099A8  00                 	db	0
  1749  0099A9  00                 	db	0
  1750  0099AA  00                 	db	0
  1751  0099AB  00                 	db	0
  1752  0099AC  00                 	db	0
  1753  0099AD  00                 	db	0
  1754  0099AE  00                 	db	0
  1755  0099AF  00                 	db	0
  1756  0099B0  00                 	db	0
  1757  0099B1  00                 	db	0
  1758  0099B2  00                 	db	0
  1759  0099B3  00                 	db	0
  1760  0099B4  00                 	db	0
  1761  0099B5  00                 	db	0
  1762  0099B6  00                 	db	0
  1763  0099B7  00                 	db	0
  1764  0099B8  00                 	db	0
  1765  0099B9  00                 	db	0
  1766  0099BA  00                 	db	0
  1767  0099BB  00                 	db	0
  1768  0099BC  00                 	db	0
  1769  0099BD  00                 	db	0
  1770  0099BE  00                 	db	0
  1771  0099BF  00                 	db	0
  1772  0099C0  00                 	db	0
  1773  0099C1  00                 	db	0
  1774  0099C2  00                 	db	0
  1775  0099C3  00                 	db	0
  1776  0099C4  00                 	db	0
  1777  0099C5  00                 	db	0
  1778  0099C6  00                 	db	0
  1779  0099C7  00                 	db	0
  1780  0099C8  00                 	db	0
  1781  0099C9  00                 	db	0
  1782  0099CA  00                 	db	0
  1783  0099CB  00                 	db	0
  1784  0099CC  00                 	db	0
  1785  0099CD  00                 	db	0
  1786  0099CE  00                 	db	0
  1787  0099CF  00                 	db	0
  1788  0099D0  00                 	db	0
  1789  0099D1  00                 	db	0
  1790  0099D2  00                 	db	0
  1791  0099D3  00                 	db	0
  1792  0099D4  00                 	db	0
  1793  0099D5  00                 	db	0
  1794  0099D6  00                 	db	0
  1795  0099D7  00                 	db	0
  1796  0099D8  00                 	db	0
  1797  0099D9  00                 	db	0
  1798  0099DA  00                 	db	0
  1799  0099DB  00                 	db	0
  1800  0099DC  00                 	db	0
  1801  0099DD  00                 	db	0
  1802  0099DE  00                 	db	0
  1803  0099DF  00                 	db	0
  1804  0099E0  00                 	db	0
  1805  0099E1  00                 	db	0
  1806  0099E2  00                 	db	0
  1807  0099E3  00                 	db	0
  1808  0099E4  00                 	db	0
  1809  0099E5  00                 	db	0
  1810  0099E6  00                 	db	0
  1811  0099E7  00                 	db	0
  1812  0099E8  00                 	db	0
  1813  0099E9  00                 	db	0
  1814  0099EA  00                 	db	0
  1815  0099EB  00                 	db	0
  1816  0099EC  00                 	db	0
  1817  0099ED  00                 	db	0
  1818  0099EE  00                 	db	0
  1819  0099EF  00                 	db	0
  1820  0099F0  00                 	db	0
  1821  0099F1  00                 	db	0
  1822  0099F2  00                 	db	0
  1823  0099F3  00                 	db	0
  1824  0099F4  00                 	db	0
  1825  0099F5  00                 	db	0
  1826  0099F6  00                 	db	0
  1827  0099F7  00                 	db	0
  1828  0099F8  00                 	db	0
  1829  0099F9  00                 	db	0
  1830  0099FA  00                 	db	0
  1831  0099FB  00                 	db	0
  1832  0099FC  00                 	db	0
  1833  0099FD  00                 	db	0
  1834  0099FE  00                 	db	0
  1835  0099FF  00                 	db	0
  1836  009A00  00                 	db	0
  1837  009A01  00                 	db	0
  1838  009A02  00                 	db	0
  1839  009A03  00                 	db	0
  1840  009A04  00                 	db	0
  1841  009A05  00                 	db	0
  1842  009A06  00                 	db	0
  1843  009A07  00                 	db	0
  1844  009A08  00                 	db	0
  1845  009A09  00                 	db	0
  1846  009A0A  00                 	db	0
  1847  009A0B  00                 	db	0
  1848  009A0C  00                 	db	0
  1849  009A0D  00                 	db	0
  1850  009A0E  00                 	db	0
  1851  009A0F  00                 	db	0
  1852  009A10  00                 	db	0
  1853  009A11  00                 	db	0
  1854  009A12  00                 	db	0
  1855  009A13  00                 	db	0
  1856  009A14  00                 	db	0
  1857  009A15  00                 	db	0
  1858  009A16                     __end_of_motor_postscaler_lookup:
  1859                           	opt stack 0
  1860  009A16                     _motor_period_lookup:
  1861                           	opt stack 0
  1862  009A16  EC                 	db	236
  1863  009A17  F2                 	db	242
  1864  009A18  F6                 	db	246
  1865  009A19  F4                 	db	244
  1866  009A1A  D2                 	db	210
  1867  009A1B  E8                 	db	232
  1868  009A1C  D2                 	db	210
  1869  009A1D  C0                 	db	192
  1870  009A1E  EC                 	db	236
  1871  009A1F  DC                 	db	220
  1872  009A20  CF                 	db	207
  1873  009A21  C3                 	db	195
  1874  009A22  B9                 	db	185
  1875  009A23  B0                 	db	176
  1876  009A24  FC                 	db	252
  1877  009A25  F2                 	db	242
  1878  009A26  E8                 	db	232
  1879  009A27  DF                 	db	223
  1880  009A28  D7                 	db	215
  1881  009A29  D0                 	db	208
  1882  009A2A  CA                 	db	202
  1883  009A2B  C3                 	db	195
  1884  009A2C  BE                 	db	190
  1885  009A2D  B8                 	db	184
  1886  009A2E  B3                 	db	179
  1887  009A2F  AF                 	db	175
  1888  009A30  AA                 	db	170
  1889  009A31  A6                 	db	166
  1890  009A32  A2                 	db	162
  1891  009A33  9F                 	db	159
  1892  009A34  9B                 	db	155
  1893  009A35  98                 	db	152
  1894  009A36  95                 	db	149
  1895  009A37  92                 	db	146
  1896  009A38  8F                 	db	143
  1897  009A39  8C                 	db	140
  1898  009A3A  8A                 	db	138
  1899  009A3B  87                 	db	135
  1900  009A3C  85                 	db	133
  1901  009A3D  83                 	db	131
  1902  009A3E  81                 	db	129
  1903  009A3F  7F                 	db	127
  1904  009A40  7D                 	db	125
  1905  009A41  7B                 	db	123
  1906  009A42  79                 	db	121
  1907  009A43  77                 	db	119
  1908  009A44  75                 	db	117
  1909  009A45  74                 	db	116
  1910  009A46  72                 	db	114
  1911  009A47  71                 	db	113
  1912  009A48  6F                 	db	111
  1913  009A49  6E                 	db	110
  1914  009A4A  6C                 	db	108
  1915  009A4B  6B                 	db	107
  1916  009A4C  6A                 	db	106
  1917  009A4D  68                 	db	104
  1918  009A4E  67                 	db	103
  1919  009A4F  66                 	db	102
  1920  009A50  65                 	db	101
  1921  009A51  64                 	db	100
  1922  009A52  62                 	db	98
  1923  009A53  61                 	db	97
  1924  009A54  60                 	db	96
  1925  009A55  5F                 	db	95
  1926  009A56  5E                 	db	94
  1927  009A57  5D                 	db	93
  1928  009A58  5C                 	db	92
  1929  009A59  5B                 	db	91
  1930  009A5A  59                 	db	89
  1931  009A5B  57                 	db	87
  1932  009A5C  56                 	db	86
  1933  009A5D  54                 	db	84
  1934  009A5E  53                 	db	83
  1935  009A5F  51                 	db	81
  1936  009A60  50                 	db	80
  1937  009A61  4F                 	db	79
  1938  009A62  4E                 	db	78
  1939  009A63  4C                 	db	76
  1940  009A64  4B                 	db	75
  1941  009A65  4A                 	db	74
  1942  009A66  49                 	db	73
  1943  009A67  48                 	db	72
  1944  009A68  47                 	db	71
  1945  009A69  46                 	db	70
  1946  009A6A  45                 	db	69
  1947  009A6B  44                 	db	68
  1948  009A6C  43                 	db	67
  1949  009A6D  42                 	db	66
  1950  009A6E  41                 	db	65
  1951  009A6F  40                 	db	64
  1952  009A70  3F                 	db	63
  1953  009A71  FE                 	db	254
  1954  009A72  FB                 	db	251
  1955  009A73  F8                 	db	248
  1956  009A74  F6                 	db	246
  1957  009A75  F3                 	db	243
  1958  009A76  F0                 	db	240
  1959  009A77  EE                 	db	238
  1960  009A78  EC                 	db	236
  1961  009A79  E9                 	db	233
  1962  009A7A  E7                 	db	231
  1963  009A7B  E5                 	db	229
  1964  009A7C  E3                 	db	227
  1965  009A7D  E0                 	db	224
  1966  009A7E  DE                 	db	222
  1967  009A7F  DC                 	db	220
  1968  009A80  DA                 	db	218
  1969  009A81  D8                 	db	216
  1970  009A82  D7                 	db	215
  1971  009A83  D5                 	db	213
  1972  009A84  D3                 	db	211
  1973  009A85  D1                 	db	209
  1974  009A86  CF                 	db	207
  1975  009A87  CE                 	db	206
  1976  009A88  CC                 	db	204
  1977  009A89  CA                 	db	202
  1978  009A8A  C9                 	db	201
  1979  009A8B  C7                 	db	199
  1980  009A8C  C6                 	db	198
  1981  009A8D  C4                 	db	196
  1982  009A8E  C3                 	db	195
  1983  009A8F  C1                 	db	193
  1984  009A90  C0                 	db	192
  1985  009A91  BE                 	db	190
  1986  009A92  BD                 	db	189
  1987  009A93  BC                 	db	188
  1988  009A94  BA                 	db	186
  1989  009A95  B8                 	db	184
  1990  009A96  B6                 	db	182
  1991  009A97  B4                 	db	180
  1992  009A98  B3                 	db	179
  1993  009A99  B1                 	db	177
  1994  009A9A  AF                 	db	175
  1995  009A9B  AE                 	db	174
  1996  009A9C  AC                 	db	172
  1997  009A9D  AA                 	db	170
  1998  009A9E  A9                 	db	169
  1999  009A9F  A7                 	db	167
  2000  009AA0  A6                 	db	166
  2001  009AA1  A4                 	db	164
  2002  009AA2  A3                 	db	163
  2003  009AA3  A1                 	db	161
  2004  009AA4  A0                 	db	160
  2005  009AA5  9F                 	db	159
  2006  009AA6  9D                 	db	157
  2007  009AA7  9C                 	db	156
  2008  009AA8  9B                 	db	155
  2009  009AA9  9A                 	db	154
  2010  009AAA  98                 	db	152
  2011  009AAB  97                 	db	151
  2012  009AAC  96                 	db	150
  2013  009AAD  95                 	db	149
  2014  009AAE  94                 	db	148
  2015  009AAF  93                 	db	147
  2016  009AB0  92                 	db	146
  2017  009AB1  90                 	db	144
  2018  009AB2  8F                 	db	143
  2019  009AB3  8E                 	db	142
  2020  009AB4  8D                 	db	141
  2021  009AB5  8C                 	db	140
  2022  009AB6  8B                 	db	139
  2023  009AB7  8A                 	db	138
  2024  009AB8  89                 	db	137
  2025  009AB9  88                 	db	136
  2026  009ABA  87                 	db	135
  2027  009ABB  86                 	db	134
  2028  009ABC  85                 	db	133
  2029  009ABD  84                 	db	132
  2030  009ABE  83                 	db	131
  2031  009ABF  82                 	db	130
  2032  009AC0  81                 	db	129
  2033  009AC1  80                 	db	128
  2034  009AC2  7F                 	db	127
  2035  009AC3  7E                 	db	126
  2036  009AC4  7D                 	db	125
  2037  009AC5  7C                 	db	124
  2038  009AC6  7B                 	db	123
  2039  009AC7  7A                 	db	122
  2040  009AC8  79                 	db	121
  2041  009AC9  78                 	db	120
  2042  009ACA  77                 	db	119
  2043  009ACB  76                 	db	118
  2044  009ACC  75                 	db	117
  2045  009ACD  74                 	db	116
  2046  009ACE  73                 	db	115
  2047  009ACF  72                 	db	114
  2048  009AD0  71                 	db	113
  2049  009AD1  70                 	db	112
  2050  009AD2  6F                 	db	111
  2051  009AD3  6E                 	db	110
  2052  009AD4  6D                 	db	109
  2053  009AD5  6C                 	db	108
  2054  009AD6  6B                 	db	107
  2055  009AD7  6A                 	db	106
  2056  009AD8  69                 	db	105
  2057  009AD9  68                 	db	104
  2058  009ADA  67                 	db	103
  2059  009ADB  66                 	db	102
  2060  009ADC  65                 	db	101
  2061  009ADD  64                 	db	100
  2062  009ADE  63                 	db	99
  2063  009ADF  62                 	db	98
  2064  009AE0  61                 	db	97
  2065  009AE1  60                 	db	96
  2066  009AE2  5F                 	db	95
  2067  009AE3  5E                 	db	94
  2068  009AE4  5D                 	db	93
  2069  009AE5  5C                 	db	92
  2070  009AE6  5B                 	db	91
  2071  009AE7  5A                 	db	90
  2072  009AE8  59                 	db	89
  2073  009AE9  58                 	db	88
  2074  009AEA  57                 	db	87
  2075  009AEB  56                 	db	86
  2076  009AEC  55                 	db	85
  2077  009AED  54                 	db	84
  2078  009AEE  53                 	db	83
  2079  009AEF  52                 	db	82
  2080  009AF0  51                 	db	81
  2081  009AF1  50                 	db	80
  2082  009AF2  4F                 	db	79
  2083  009AF3  4E                 	db	78
  2084  009AF4  4D                 	db	77
  2085  009AF5  4C                 	db	76
  2086  009AF6  4B                 	db	75
  2087  009AF7  4A                 	db	74
  2088  009AF8  49                 	db	73
  2089  009AF9  48                 	db	72
  2090  009AFA  47                 	db	71
  2091  009AFB  46                 	db	70
  2092  009AFC  45                 	db	69
  2093  009AFD  44                 	db	68
  2094  009AFE  43                 	db	67
  2095  009AFF  42                 	db	66
  2096  009B00  41                 	db	65
  2097  009B01  40                 	db	64
  2098  009B02  3F                 	db	63
  2099  009B03  FF                 	db	255
  2100  009B04  FE                 	db	254
  2101  009B05  FD                 	db	253
  2102  009B06  FC                 	db	252
  2103  009B07  FB                 	db	251
  2104  009B08  FA                 	db	250
  2105  009B09  F9                 	db	249
  2106  009B0A  F8                 	db	248
  2107  009B0B  F7                 	db	247
  2108  009B0C  F6                 	db	246
  2109  009B0D  F5                 	db	245
  2110  009B0E  F4                 	db	244
  2111  009B0F  F3                 	db	243
  2112  009B10  F2                 	db	242
  2113  009B11  F1                 	db	241
  2114  009B12  F0                 	db	240
  2115  009B13  EF                 	db	239
  2116  009B14  EE                 	db	238
  2117  009B15  ED                 	db	237
  2118  009B16  EC                 	db	236
  2119  009B17  EB                 	db	235
  2120  009B18  EA                 	db	234
  2121  009B19  E9                 	db	233
  2122  009B1A  E8                 	db	232
  2123  009B1B  E7                 	db	231
  2124  009B1C  E6                 	db	230
  2125  009B1D  E5                 	db	229
  2126  009B1E  E4                 	db	228
  2127  009B1F  E3                 	db	227
  2128  009B20  E2                 	db	226
  2129  009B21  E1                 	db	225
  2130  009B22  E0                 	db	224
  2131  009B23  DF                 	db	223
  2132  009B24  DE                 	db	222
  2133  009B25  DD                 	db	221
  2134  009B26  DC                 	db	220
  2135  009B27  DB                 	db	219
  2136  009B28  DA                 	db	218
  2137  009B29  D9                 	db	217
  2138  009B2A  D8                 	db	216
  2139  009B2B  D7                 	db	215
  2140  009B2C  D6                 	db	214
  2141  009B2D  D5                 	db	213
  2142  009B2E  D4                 	db	212
  2143  009B2F  D3                 	db	211
  2144  009B30  D2                 	db	210
  2145  009B31  D1                 	db	209
  2146  009B32  D0                 	db	208
  2147  009B33  CF                 	db	207
  2148  009B34  CE                 	db	206
  2149  009B35  CD                 	db	205
  2150  009B36  CC                 	db	204
  2151  009B37  CB                 	db	203
  2152  009B38  CA                 	db	202
  2153  009B39  C9                 	db	201
  2154  009B3A  C8                 	db	200
  2155  009B3B  C7                 	db	199
  2156  009B3C  C6                 	db	198
  2157  009B3D  C5                 	db	197
  2158  009B3E  C4                 	db	196
  2159  009B3F  C3                 	db	195
  2160  009B40  C2                 	db	194
  2161  009B41  C1                 	db	193
  2162  009B42  C0                 	db	192
  2163  009B43  BF                 	db	191
  2164  009B44  BE                 	db	190
  2165  009B45  BD                 	db	189
  2166  009B46  BC                 	db	188
  2167  009B47  BB                 	db	187
  2168  009B48  BA                 	db	186
  2169  009B49  B9                 	db	185
  2170  009B4A  B8                 	db	184
  2171  009B4B  B7                 	db	183
  2172  009B4C  B6                 	db	182
  2173  009B4D  B5                 	db	181
  2174  009B4E  B4                 	db	180
  2175  009B4F  B3                 	db	179
  2176  009B50  B2                 	db	178
  2177  009B51  B1                 	db	177
  2178  009B52  B0                 	db	176
  2179  009B53  AF                 	db	175
  2180  009B54  AE                 	db	174
  2181  009B55  AD                 	db	173
  2182  009B56  AC                 	db	172
  2183  009B57  AB                 	db	171
  2184  009B58  AA                 	db	170
  2185  009B59  A9                 	db	169
  2186  009B5A  A8                 	db	168
  2187  009B5B  A7                 	db	167
  2188  009B5C  A6                 	db	166
  2189  009B5D  A5                 	db	165
  2190  009B5E  A4                 	db	164
  2191  009B5F  A3                 	db	163
  2192  009B60  A2                 	db	162
  2193  009B61  A1                 	db	161
  2194  009B62  A0                 	db	160
  2195  009B63  9F                 	db	159
  2196  009B64  9E                 	db	158
  2197  009B65  9D                 	db	157
  2198  009B66  9C                 	db	156
  2199  009B67  9B                 	db	155
  2200  009B68  9A                 	db	154
  2201  009B69  99                 	db	153
  2202  009B6A  98                 	db	152
  2203  009B6B  97                 	db	151
  2204  009B6C  96                 	db	150
  2205  009B6D  95                 	db	149
  2206  009B6E  94                 	db	148
  2207  009B6F  93                 	db	147
  2208  009B70  92                 	db	146
  2209  009B71  91                 	db	145
  2210  009B72  90                 	db	144
  2211  009B73  8F                 	db	143
  2212  009B74  8E                 	db	142
  2213  009B75  8D                 	db	141
  2214  009B76  8C                 	db	140
  2215  009B77  8B                 	db	139
  2216  009B78  8A                 	db	138
  2217  009B79  89                 	db	137
  2218  009B7A  88                 	db	136
  2219  009B7B  87                 	db	135
  2220  009B7C  86                 	db	134
  2221  009B7D  85                 	db	133
  2222  009B7E  84                 	db	132
  2223  009B7F  83                 	db	131
  2224  009B80  82                 	db	130
  2225  009B81  81                 	db	129
  2226  009B82  80                 	db	128
  2227  009B83  7F                 	db	127
  2228  009B84  7E                 	db	126
  2229  009B85  7D                 	db	125
  2230  009B86  7C                 	db	124
  2231  009B87  7B                 	db	123
  2232  009B88  7A                 	db	122
  2233  009B89  79                 	db	121
  2234  009B8A  78                 	db	120
  2235  009B8B  77                 	db	119
  2236  009B8C  76                 	db	118
  2237  009B8D  75                 	db	117
  2238  009B8E  74                 	db	116
  2239  009B8F  73                 	db	115
  2240  009B90  72                 	db	114
  2241  009B91  71                 	db	113
  2242  009B92  70                 	db	112
  2243  009B93  6F                 	db	111
  2244  009B94  6E                 	db	110
  2245  009B95  6D                 	db	109
  2246  009B96  6C                 	db	108
  2247  009B97  6B                 	db	107
  2248  009B98  6A                 	db	106
  2249  009B99  69                 	db	105
  2250  009B9A  68                 	db	104
  2251  009B9B  67                 	db	103
  2252  009B9C  66                 	db	102
  2253  009B9D  65                 	db	101
  2254  009B9E  64                 	db	100
  2255  009B9F  63                 	db	99
  2256  009BA0  62                 	db	98
  2257  009BA1  61                 	db	97
  2258  009BA2  60                 	db	96
  2259  009BA3  5F                 	db	95
  2260  009BA4  5E                 	db	94
  2261  009BA5  5D                 	db	93
  2262  009BA6  5C                 	db	92
  2263  009BA7  5B                 	db	91
  2264  009BA8  5A                 	db	90
  2265  009BA9  59                 	db	89
  2266  009BAA  58                 	db	88
  2267  009BAB  57                 	db	87
  2268  009BAC  56                 	db	86
  2269  009BAD  55                 	db	85
  2270  009BAE  54                 	db	84
  2271  009BAF  53                 	db	83
  2272  009BB0  52                 	db	82
  2273  009BB1  51                 	db	81
  2274  009BB2  50                 	db	80
  2275  009BB3  4F                 	db	79
  2276  009BB4  4E                 	db	78
  2277  009BB5  4D                 	db	77
  2278  009BB6  4C                 	db	76
  2279  009BB7  4B                 	db	75
  2280  009BB8  4A                 	db	74
  2281  009BB9  49                 	db	73
  2282  009BBA  48                 	db	72
  2283  009BBB  47                 	db	71
  2284  009BBC  46                 	db	70
  2285  009BBD  45                 	db	69
  2286  009BBE  44                 	db	68
  2287  009BBF  43                 	db	67
  2288  009BC0  42                 	db	66
  2289  009BC1  41                 	db	65
  2290  009BC2  40                 	db	64
  2291  009BC3  3F                 	db	63
  2292  009BC4  FF                 	db	255
  2293  009BC5  FE                 	db	254
  2294  009BC6  FD                 	db	253
  2295  009BC7  FC                 	db	252
  2296  009BC8  FB                 	db	251
  2297  009BC9  FA                 	db	250
  2298  009BCA  F9                 	db	249
  2299  009BCB  F8                 	db	248
  2300  009BCC  F7                 	db	247
  2301  009BCD  F6                 	db	246
  2302  009BCE  F5                 	db	245
  2303  009BCF  F4                 	db	244
  2304  009BD0  F3                 	db	243
  2305  009BD1  F2                 	db	242
  2306  009BD2  F1                 	db	241
  2307  009BD3  F0                 	db	240
  2308  009BD4  EF                 	db	239
  2309  009BD5  EE                 	db	238
  2310  009BD6  ED                 	db	237
  2311  009BD7  EC                 	db	236
  2312  009BD8  EB                 	db	235
  2313  009BD9  EA                 	db	234
  2314  009BDA  E9                 	db	233
  2315  009BDB  E8                 	db	232
  2316  009BDC  E7                 	db	231
  2317  009BDD  E6                 	db	230
  2318  009BDE  E5                 	db	229
  2319  009BDF  E4                 	db	228
  2320  009BE0  E3                 	db	227
  2321  009BE1  E2                 	db	226
  2322  009BE2  E1                 	db	225
  2323  009BE3  E0                 	db	224
  2324  009BE4  DF                 	db	223
  2325  009BE5  DE                 	db	222
  2326  009BE6  DD                 	db	221
  2327  009BE7  DC                 	db	220
  2328  009BE8  DB                 	db	219
  2329  009BE9  DA                 	db	218
  2330  009BEA  D9                 	db	217
  2331  009BEB  D8                 	db	216
  2332  009BEC  D7                 	db	215
  2333  009BED  D6                 	db	214
  2334  009BEE  D5                 	db	213
  2335  009BEF  D4                 	db	212
  2336  009BF0  D3                 	db	211
  2337  009BF1  D2                 	db	210
  2338  009BF2  D1                 	db	209
  2339  009BF3  D0                 	db	208
  2340  009BF4  CF                 	db	207
  2341  009BF5  CE                 	db	206
  2342  009BF6  CD                 	db	205
  2343  009BF7  CC                 	db	204
  2344  009BF8  CB                 	db	203
  2345  009BF9  CA                 	db	202
  2346  009BFA  C9                 	db	201
  2347  009BFB  C8                 	db	200
  2348  009BFC  C7                 	db	199
  2349  009BFD                     __end_of_motor_period_lookup:
  2350                           	opt stack 0
  2351  009BFD                     _motor_prescaler_lookup:
  2352                           	opt stack 0
  2353  009BFD  02                 	db	2
  2354  009BFE  02                 	db	2
  2355  009BFF  02                 	db	2
  2356  009C00  02                 	db	2
  2357  009C01  02                 	db	2
  2358  009C02  02                 	db	2
  2359  009C03  02                 	db	2
  2360  009C04  02                 	db	2
  2361  009C05  02                 	db	2
  2362  009C06  02                 	db	2
  2363  009C07  02                 	db	2
  2364  009C08  02                 	db	2
  2365  009C09  02                 	db	2
  2366  009C0A  02                 	db	2
  2367  009C0B  02                 	db	2
  2368  009C0C  02                 	db	2
  2369  009C0D  02                 	db	2
  2370  009C0E  02                 	db	2
  2371  009C0F  02                 	db	2
  2372  009C10  02                 	db	2
  2373  009C11  02                 	db	2
  2374  009C12  02                 	db	2
  2375  009C13  02                 	db	2
  2376  009C14  02                 	db	2
  2377  009C15  02                 	db	2
  2378  009C16  02                 	db	2
  2379  009C17  02                 	db	2
  2380  009C18  02                 	db	2
  2381  009C19  02                 	db	2
  2382  009C1A  02                 	db	2
  2383  009C1B  02                 	db	2
  2384  009C1C  02                 	db	2
  2385  009C1D  02                 	db	2
  2386  009C1E  02                 	db	2
  2387  009C1F  02                 	db	2
  2388  009C20  02                 	db	2
  2389  009C21  02                 	db	2
  2390  009C22  02                 	db	2
  2391  009C23  02                 	db	2
  2392  009C24  02                 	db	2
  2393  009C25  02                 	db	2
  2394  009C26  02                 	db	2
  2395  009C27  02                 	db	2
  2396  009C28  02                 	db	2
  2397  009C29  02                 	db	2
  2398  009C2A  02                 	db	2
  2399  009C2B  02                 	db	2
  2400  009C2C  02                 	db	2
  2401  009C2D  02                 	db	2
  2402  009C2E  02                 	db	2
  2403  009C2F  02                 	db	2
  2404  009C30  02                 	db	2
  2405  009C31  02                 	db	2
  2406  009C32  02                 	db	2
  2407  009C33  02                 	db	2
  2408  009C34  02                 	db	2
  2409  009C35  02                 	db	2
  2410  009C36  02                 	db	2
  2411  009C37  02                 	db	2
  2412  009C38  02                 	db	2
  2413  009C39  02                 	db	2
  2414  009C3A  02                 	db	2
  2415  009C3B  02                 	db	2
  2416  009C3C  02                 	db	2
  2417  009C3D  02                 	db	2
  2418  009C3E  02                 	db	2
  2419  009C3F  02                 	db	2
  2420  009C40  02                 	db	2
  2421  009C41  02                 	db	2
  2422  009C42  02                 	db	2
  2423  009C43  02                 	db	2
  2424  009C44  02                 	db	2
  2425  009C45  02                 	db	2
  2426  009C46  02                 	db	2
  2427  009C47  02                 	db	2
  2428  009C48  02                 	db	2
  2429  009C49  02                 	db	2
  2430  009C4A  02                 	db	2
  2431  009C4B  02                 	db	2
  2432  009C4C  02                 	db	2
  2433  009C4D  02                 	db	2
  2434  009C4E  02                 	db	2
  2435  009C4F  02                 	db	2
  2436  009C50  02                 	db	2
  2437  009C51  02                 	db	2
  2438  009C52  02                 	db	2
  2439  009C53  02                 	db	2
  2440  009C54  02                 	db	2
  2441  009C55  02                 	db	2
  2442  009C56  02                 	db	2
  2443  009C57  02                 	db	2
  2444  009C58  02                 	db	2
  2445  009C59  02                 	db	2
  2446  009C5A  02                 	db	2
  2447  009C5B  02                 	db	2
  2448  009C5C  02                 	db	2
  2449  009C5D  02                 	db	2
  2450  009C5E  02                 	db	2
  2451  009C5F  02                 	db	2
  2452  009C60  02                 	db	2
  2453  009C61  02                 	db	2
  2454  009C62  02                 	db	2
  2455  009C63  02                 	db	2
  2456  009C64  02                 	db	2
  2457  009C65  02                 	db	2
  2458  009C66  02                 	db	2
  2459  009C67  02                 	db	2
  2460  009C68  02                 	db	2
  2461  009C69  02                 	db	2
  2462  009C6A  02                 	db	2
  2463  009C6B  02                 	db	2
  2464  009C6C  02                 	db	2
  2465  009C6D  02                 	db	2
  2466  009C6E  02                 	db	2
  2467  009C6F  02                 	db	2
  2468  009C70  02                 	db	2
  2469  009C71  02                 	db	2
  2470  009C72  02                 	db	2
  2471  009C73  02                 	db	2
  2472  009C74  02                 	db	2
  2473  009C75  02                 	db	2
  2474  009C76  02                 	db	2
  2475  009C77  02                 	db	2
  2476  009C78  02                 	db	2
  2477  009C79  02                 	db	2
  2478  009C7A  02                 	db	2
  2479  009C7B  02                 	db	2
  2480  009C7C  02                 	db	2
  2481  009C7D  02                 	db	2
  2482  009C7E  02                 	db	2
  2483  009C7F  02                 	db	2
  2484  009C80  02                 	db	2
  2485  009C81  02                 	db	2
  2486  009C82  02                 	db	2
  2487  009C83  02                 	db	2
  2488  009C84  02                 	db	2
  2489  009C85  02                 	db	2
  2490  009C86  02                 	db	2
  2491  009C87  02                 	db	2
  2492  009C88  02                 	db	2
  2493  009C89  02                 	db	2
  2494  009C8A  02                 	db	2
  2495  009C8B  02                 	db	2
  2496  009C8C  02                 	db	2
  2497  009C8D  02                 	db	2
  2498  009C8E  02                 	db	2
  2499  009C8F  02                 	db	2
  2500  009C90  02                 	db	2
  2501  009C91  02                 	db	2
  2502  009C92  02                 	db	2
  2503  009C93  02                 	db	2
  2504  009C94  02                 	db	2
  2505  009C95  02                 	db	2
  2506  009C96  02                 	db	2
  2507  009C97  02                 	db	2
  2508  009C98  02                 	db	2
  2509  009C99  02                 	db	2
  2510  009C9A  02                 	db	2
  2511  009C9B  02                 	db	2
  2512  009C9C  02                 	db	2
  2513  009C9D  02                 	db	2
  2514  009C9E  02                 	db	2
  2515  009C9F  02                 	db	2
  2516  009CA0  02                 	db	2
  2517  009CA1  02                 	db	2
  2518  009CA2  02                 	db	2
  2519  009CA3  02                 	db	2
  2520  009CA4  02                 	db	2
  2521  009CA5  02                 	db	2
  2522  009CA6  02                 	db	2
  2523  009CA7  02                 	db	2
  2524  009CA8  02                 	db	2
  2525  009CA9  02                 	db	2
  2526  009CAA  02                 	db	2
  2527  009CAB  02                 	db	2
  2528  009CAC  02                 	db	2
  2529  009CAD  02                 	db	2
  2530  009CAE  02                 	db	2
  2531  009CAF  02                 	db	2
  2532  009CB0  02                 	db	2
  2533  009CB1  02                 	db	2
  2534  009CB2  02                 	db	2
  2535  009CB3  02                 	db	2
  2536  009CB4  02                 	db	2
  2537  009CB5  02                 	db	2
  2538  009CB6  02                 	db	2
  2539  009CB7  02                 	db	2
  2540  009CB8  02                 	db	2
  2541  009CB9  02                 	db	2
  2542  009CBA  02                 	db	2
  2543  009CBB  02                 	db	2
  2544  009CBC  02                 	db	2
  2545  009CBD  02                 	db	2
  2546  009CBE  02                 	db	2
  2547  009CBF  02                 	db	2
  2548  009CC0  02                 	db	2
  2549  009CC1  02                 	db	2
  2550  009CC2  02                 	db	2
  2551  009CC3  02                 	db	2
  2552  009CC4  02                 	db	2
  2553  009CC5  02                 	db	2
  2554  009CC6  02                 	db	2
  2555  009CC7  02                 	db	2
  2556  009CC8  02                 	db	2
  2557  009CC9  02                 	db	2
  2558  009CCA  02                 	db	2
  2559  009CCB  02                 	db	2
  2560  009CCC  02                 	db	2
  2561  009CCD  02                 	db	2
  2562  009CCE  02                 	db	2
  2563  009CCF  02                 	db	2
  2564  009CD0  02                 	db	2
  2565  009CD1  02                 	db	2
  2566  009CD2  02                 	db	2
  2567  009CD3  02                 	db	2
  2568  009CD4  02                 	db	2
  2569  009CD5  02                 	db	2
  2570  009CD6  02                 	db	2
  2571  009CD7  02                 	db	2
  2572  009CD8  02                 	db	2
  2573  009CD9  02                 	db	2
  2574  009CDA  02                 	db	2
  2575  009CDB  02                 	db	2
  2576  009CDC  02                 	db	2
  2577  009CDD  02                 	db	2
  2578  009CDE  02                 	db	2
  2579  009CDF  02                 	db	2
  2580  009CE0  02                 	db	2
  2581  009CE1  02                 	db	2
  2582  009CE2  02                 	db	2
  2583  009CE3  02                 	db	2
  2584  009CE4  02                 	db	2
  2585  009CE5  02                 	db	2
  2586  009CE6  02                 	db	2
  2587  009CE7  02                 	db	2
  2588  009CE8  02                 	db	2
  2589  009CE9  02                 	db	2
  2590  009CEA  01                 	db	1
  2591  009CEB  01                 	db	1
  2592  009CEC  01                 	db	1
  2593  009CED  01                 	db	1
  2594  009CEE  01                 	db	1
  2595  009CEF  01                 	db	1
  2596  009CF0  01                 	db	1
  2597  009CF1  01                 	db	1
  2598  009CF2  01                 	db	1
  2599  009CF3  01                 	db	1
  2600  009CF4  01                 	db	1
  2601  009CF5  01                 	db	1
  2602  009CF6  01                 	db	1
  2603  009CF7  01                 	db	1
  2604  009CF8  01                 	db	1
  2605  009CF9  01                 	db	1
  2606  009CFA  01                 	db	1
  2607  009CFB  01                 	db	1
  2608  009CFC  01                 	db	1
  2609  009CFD  01                 	db	1
  2610  009CFE  01                 	db	1
  2611  009CFF  01                 	db	1
  2612  009D00  01                 	db	1
  2613  009D01  01                 	db	1
  2614  009D02  01                 	db	1
  2615  009D03  01                 	db	1
  2616  009D04  01                 	db	1
  2617  009D05  01                 	db	1
  2618  009D06  01                 	db	1
  2619  009D07  01                 	db	1
  2620  009D08  01                 	db	1
  2621  009D09  01                 	db	1
  2622  009D0A  01                 	db	1
  2623  009D0B  01                 	db	1
  2624  009D0C  01                 	db	1
  2625  009D0D  01                 	db	1
  2626  009D0E  01                 	db	1
  2627  009D0F  01                 	db	1
  2628  009D10  01                 	db	1
  2629  009D11  01                 	db	1
  2630  009D12  01                 	db	1
  2631  009D13  01                 	db	1
  2632  009D14  01                 	db	1
  2633  009D15  01                 	db	1
  2634  009D16  01                 	db	1
  2635  009D17  01                 	db	1
  2636  009D18  01                 	db	1
  2637  009D19  01                 	db	1
  2638  009D1A  01                 	db	1
  2639  009D1B  01                 	db	1
  2640  009D1C  01                 	db	1
  2641  009D1D  01                 	db	1
  2642  009D1E  01                 	db	1
  2643  009D1F  01                 	db	1
  2644  009D20  01                 	db	1
  2645  009D21  01                 	db	1
  2646  009D22  01                 	db	1
  2647  009D23  01                 	db	1
  2648  009D24  01                 	db	1
  2649  009D25  01                 	db	1
  2650  009D26  01                 	db	1
  2651  009D27  01                 	db	1
  2652  009D28  01                 	db	1
  2653  009D29  01                 	db	1
  2654  009D2A  01                 	db	1
  2655  009D2B  01                 	db	1
  2656  009D2C  01                 	db	1
  2657  009D2D  01                 	db	1
  2658  009D2E  01                 	db	1
  2659  009D2F  01                 	db	1
  2660  009D30  01                 	db	1
  2661  009D31  01                 	db	1
  2662  009D32  01                 	db	1
  2663  009D33  01                 	db	1
  2664  009D34  01                 	db	1
  2665  009D35  01                 	db	1
  2666  009D36  01                 	db	1
  2667  009D37  01                 	db	1
  2668  009D38  01                 	db	1
  2669  009D39  01                 	db	1
  2670  009D3A  01                 	db	1
  2671  009D3B  01                 	db	1
  2672  009D3C  01                 	db	1
  2673  009D3D  01                 	db	1
  2674  009D3E  01                 	db	1
  2675  009D3F  01                 	db	1
  2676  009D40  01                 	db	1
  2677  009D41  01                 	db	1
  2678  009D42  01                 	db	1
  2679  009D43  01                 	db	1
  2680  009D44  01                 	db	1
  2681  009D45  01                 	db	1
  2682  009D46  01                 	db	1
  2683  009D47  01                 	db	1
  2684  009D48  01                 	db	1
  2685  009D49  01                 	db	1
  2686  009D4A  01                 	db	1
  2687  009D4B  01                 	db	1
  2688  009D4C  01                 	db	1
  2689  009D4D  01                 	db	1
  2690  009D4E  01                 	db	1
  2691  009D4F  01                 	db	1
  2692  009D50  01                 	db	1
  2693  009D51  01                 	db	1
  2694  009D52  01                 	db	1
  2695  009D53  01                 	db	1
  2696  009D54  01                 	db	1
  2697  009D55  01                 	db	1
  2698  009D56  01                 	db	1
  2699  009D57  01                 	db	1
  2700  009D58  01                 	db	1
  2701  009D59  01                 	db	1
  2702  009D5A  01                 	db	1
  2703  009D5B  01                 	db	1
  2704  009D5C  01                 	db	1
  2705  009D5D  01                 	db	1
  2706  009D5E  01                 	db	1
  2707  009D5F  01                 	db	1
  2708  009D60  01                 	db	1
  2709  009D61  01                 	db	1
  2710  009D62  01                 	db	1
  2711  009D63  01                 	db	1
  2712  009D64  01                 	db	1
  2713  009D65  01                 	db	1
  2714  009D66  01                 	db	1
  2715  009D67  01                 	db	1
  2716  009D68  01                 	db	1
  2717  009D69  01                 	db	1
  2718  009D6A  01                 	db	1
  2719  009D6B  01                 	db	1
  2720  009D6C  01                 	db	1
  2721  009D6D  01                 	db	1
  2722  009D6E  01                 	db	1
  2723  009D6F  01                 	db	1
  2724  009D70  01                 	db	1
  2725  009D71  01                 	db	1
  2726  009D72  01                 	db	1
  2727  009D73  01                 	db	1
  2728  009D74  01                 	db	1
  2729  009D75  01                 	db	1
  2730  009D76  01                 	db	1
  2731  009D77  01                 	db	1
  2732  009D78  01                 	db	1
  2733  009D79  01                 	db	1
  2734  009D7A  01                 	db	1
  2735  009D7B  01                 	db	1
  2736  009D7C  01                 	db	1
  2737  009D7D  01                 	db	1
  2738  009D7E  01                 	db	1
  2739  009D7F  01                 	db	1
  2740  009D80  01                 	db	1
  2741  009D81  01                 	db	1
  2742  009D82  01                 	db	1
  2743  009D83  01                 	db	1
  2744  009D84  01                 	db	1
  2745  009D85  01                 	db	1
  2746  009D86  01                 	db	1
  2747  009D87  01                 	db	1
  2748  009D88  01                 	db	1
  2749  009D89  01                 	db	1
  2750  009D8A  01                 	db	1
  2751  009D8B  01                 	db	1
  2752  009D8C  01                 	db	1
  2753  009D8D  01                 	db	1
  2754  009D8E  01                 	db	1
  2755  009D8F  01                 	db	1
  2756  009D90  01                 	db	1
  2757  009D91  01                 	db	1
  2758  009D92  01                 	db	1
  2759  009D93  01                 	db	1
  2760  009D94  01                 	db	1
  2761  009D95  01                 	db	1
  2762  009D96  01                 	db	1
  2763  009D97  01                 	db	1
  2764  009D98  01                 	db	1
  2765  009D99  01                 	db	1
  2766  009D9A  01                 	db	1
  2767  009D9B  01                 	db	1
  2768  009D9C  01                 	db	1
  2769  009D9D  01                 	db	1
  2770  009D9E  01                 	db	1
  2771  009D9F  01                 	db	1
  2772  009DA0  01                 	db	1
  2773  009DA1  01                 	db	1
  2774  009DA2  01                 	db	1
  2775  009DA3  01                 	db	1
  2776  009DA4  01                 	db	1
  2777  009DA5  01                 	db	1
  2778  009DA6  01                 	db	1
  2779  009DA7  01                 	db	1
  2780  009DA8  01                 	db	1
  2781  009DA9  01                 	db	1
  2782  009DAA  01                 	db	1
  2783  009DAB  00                 	db	0
  2784  009DAC  00                 	db	0
  2785  009DAD  00                 	db	0
  2786  009DAE  00                 	db	0
  2787  009DAF  00                 	db	0
  2788  009DB0  00                 	db	0
  2789  009DB1  00                 	db	0
  2790  009DB2  00                 	db	0
  2791  009DB3  00                 	db	0
  2792  009DB4  00                 	db	0
  2793  009DB5  00                 	db	0
  2794  009DB6  00                 	db	0
  2795  009DB7  00                 	db	0
  2796  009DB8  00                 	db	0
  2797  009DB9  00                 	db	0
  2798  009DBA  00                 	db	0
  2799  009DBB  00                 	db	0
  2800  009DBC  00                 	db	0
  2801  009DBD  00                 	db	0
  2802  009DBE  00                 	db	0
  2803  009DBF  00                 	db	0
  2804  009DC0  00                 	db	0
  2805  009DC1  00                 	db	0
  2806  009DC2  00                 	db	0
  2807  009DC3  00                 	db	0
  2808  009DC4  00                 	db	0
  2809  009DC5  00                 	db	0
  2810  009DC6  00                 	db	0
  2811  009DC7  00                 	db	0
  2812  009DC8  00                 	db	0
  2813  009DC9  00                 	db	0
  2814  009DCA  00                 	db	0
  2815  009DCB  00                 	db	0
  2816  009DCC  00                 	db	0
  2817  009DCD  00                 	db	0
  2818  009DCE  00                 	db	0
  2819  009DCF  00                 	db	0
  2820  009DD0  00                 	db	0
  2821  009DD1  00                 	db	0
  2822  009DD2  00                 	db	0
  2823  009DD3  00                 	db	0
  2824  009DD4  00                 	db	0
  2825  009DD5  00                 	db	0
  2826  009DD6  00                 	db	0
  2827  009DD7  00                 	db	0
  2828  009DD8  00                 	db	0
  2829  009DD9  00                 	db	0
  2830  009DDA  00                 	db	0
  2831  009DDB  00                 	db	0
  2832  009DDC  00                 	db	0
  2833  009DDD  00                 	db	0
  2834  009DDE  00                 	db	0
  2835  009DDF  00                 	db	0
  2836  009DE0  00                 	db	0
  2837  009DE1  00                 	db	0
  2838  009DE2  00                 	db	0
  2839  009DE3  00                 	db	0
  2840  009DE4                     __end_of_motor_prescaler_lookup:
  2841                           	opt stack 0
  2842  009DE4                     _USB_SD_Ptr:
  2843                           	opt stack 0
  2844  009DE4  ED                 	db	low _sd000
  2845  009DE5  A1                 	db	high _sd000
  2846  009DE6  FE                 	db	low _sd001
  2847  009DE7  A0                 	db	high _sd001
  2848  009DE8  32                 	db	low _sd002
  2849  009DE9  A1                 	db	high _sd002
  2850  009DEA  A1                 	db	low _sd003
  2851  009DEB  A1                 	db	high _sd003
  2852  009DEC                     __end_of_USB_SD_Ptr:
  2853                           	opt stack 0
  2854  009DEC                     _USB_CD_Ptr:
  2855                           	opt stack 0
  2856  009DEC  BE                 	db	low _configDescriptor1
  2857  009DED  A0                 	db	high _configDescriptor1
  2858  009DEE                     __end_of_USB_CD_Ptr:
  2859                           	opt stack 0
  2860  009DEE                     _dc_manual:
  2861                           	opt stack 0
  2862  009DEE  4D                 	db	77
  2863  009DEF  61                 	db	97
  2864  009DF0  6E                 	db	110
  2865  009DF1  75                 	db	117
  2866  009DF2  61                 	db	97
  2867  009DF3  6C                 	db	108
  2868  009DF4  20                 	db	32
  2869  009DF5  4D                 	db	77
  2870  009DF6  6F                 	db	111
  2871  009DF7  64                 	db	100
  2872  009DF8  65                 	db	101
  2873  009DF9  20                 	db	32
  2874  009DFA  20                 	db	32
  2875  009DFB  20                 	db	32
  2876  009DFC  20                 	db	32
  2877  009DFD  20                 	db	32
  2878  009DFE  20                 	db	32
  2879  009DFF  20                 	db	32
  2880  009E00  20                 	db	32
  2881  009E01  20                 	db	32
  2882  009E02  43                 	db	67
  2883  009E03  75                 	db	117
  2884  009E04  72                 	db	114
  2885  009E05  72                 	db	114
  2886  009E06  65                 	db	101
  2887  009E07  6E                 	db	110
  2888  009E08  74                 	db	116
  2889  009E09  20                 	db	32
  2890  009E0A  70                 	db	112
  2891  009E0B  6F                 	db	111
  2892  009E0C  73                 	db	115
  2893  009E0D  3A                 	db	58
  2894  009E0E  20                 	db	32
  2895  009E0F  20                 	db	32
  2896  009E10  20                 	db	32
  2897  009E11  20                 	db	32
  2898  009E12  20                 	db	32
  2899  009E13  20                 	db	32
  2900  009E14  20                 	db	32
  2901  009E15  01                 	db	1
  2902  009E16  54                 	db	84
  2903  009E17  75                 	db	117
  2904  009E18  72                 	db	114
  2905  009E19  6E                 	db	110
  2906  009E1A  20                 	db	32
  2907  009E1B  43                 	db	67
  2908  009E1C  43                 	db	67
  2909  009E1D  57                 	db	87
  2910  009E1E  20                 	db	32
  2911  009E1F  00                 	db	0
  2912  009E20  20                 	db	32
  2913  009E21  53                 	db	83
  2914  009E22  70                 	db	112
  2915  009E23  65                 	db	101
  2916  009E24  65                 	db	101
  2917  009E25  64                 	db	100
  2918  009E26  20                 	db	32
  2919  009E27  20                 	db	32
  2920  009E28  20                 	db	32
  2921  009E29  20                 	db	32
  2922  009E2A  53                 	db	83
  2923  009E2B  74                 	db	116
  2924  009E2C  61                 	db	97
  2925  009E2D  72                 	db	114
  2926  009E2E  74                 	db	116
  2927  009E2F  20                 	db	32
  2928  009E30  20                 	db	32
  2929  009E31  20                 	db	32
  2930  009E32  20                 	db	32
  2931  009E33  00                 	db	0
  2932  009E34  20                 	db	32
  2933  009E35  20                 	db	32
  2934  009E36  20                 	db	32
  2935  009E37  20                 	db	32
  2936  009E38  20                 	db	32
  2937  009E39  20                 	db	32
  2938  009E3A  20                 	db	32
  2939  009E3B  20                 	db	32
  2940  009E3C  20                 	db	32
  2941  009E3D  20                 	db	32
  2942  009E3E                     __end_of_dc_manual:
  2943                           	opt stack 0
  2944  009E3E                     _dc_zero:
  2945                           	opt stack 0
  2946  009E3E  52                 	db	82
  2947  009E3F  65                 	db	101
  2948  009E40  74                 	db	116
  2949  009E41  75                 	db	117
  2950  009E42  72                 	db	114
  2951  009E43  6E                 	db	110
  2952  009E44  20                 	db	32
  2953  009E45  74                 	db	116
  2954  009E46  6F                 	db	111
  2955  009E47  20                 	db	32
  2956  009E48  5A                 	db	90
  2957  009E49  65                 	db	101
  2958  009E4A  72                 	db	114
  2959  009E4B  6F                 	db	111
  2960  009E4C  3F                 	db	63
  2961  009E4D  20                 	db	32
  2962  009E4E  20                 	db	32
  2963  009E4F  20                 	db	32
  2964  009E50  20                 	db	32
  2965  009E51  20                 	db	32
  2966  009E52  43                 	db	67
  2967  009E53  75                 	db	117
  2968  009E54  72                 	db	114
  2969  009E55  72                 	db	114
  2970  009E56  65                 	db	101
  2971  009E57  6E                 	db	110
  2972  009E58  74                 	db	116
  2973  009E59  20                 	db	32
  2974  009E5A  70                 	db	112
  2975  009E5B  6F                 	db	111
  2976  009E5C  73                 	db	115
  2977  009E5D  3A                 	db	58
  2978  009E5E  20                 	db	32
  2979  009E5F  20                 	db	32
  2980  009E60  20                 	db	32
  2981  009E61  20                 	db	32
  2982  009E62  20                 	db	32
  2983  009E63  20                 	db	32
  2984  009E64  20                 	db	32
  2985  009E65  20                 	db	32
  2986  009E66  20                 	db	32
  2987  009E67  20                 	db	32
  2988  009E68  20                 	db	32
  2989  009E69  20                 	db	32
  2990  009E6A  20                 	db	32
  2991  009E6B  20                 	db	32
  2992  009E6C  20                 	db	32
  2993  009E6D  20                 	db	32
  2994  009E6E  20                 	db	32
  2995  009E6F  20                 	db	32
  2996  009E70  20                 	db	32
  2997  009E71  20                 	db	32
  2998  009E72  20                 	db	32
  2999  009E73  20                 	db	32
  3000  009E74  20                 	db	32
  3001  009E75  20                 	db	32
  3002  009E76  20                 	db	32
  3003  009E77  20                 	db	32
  3004  009E78  20                 	db	32
  3005  009E79  20                 	db	32
  3006  009E7A  20                 	db	32
  3007  009E7B  59                 	db	89
  3008  009E7C  65                 	db	101
  3009  009E7D  73                 	db	115
  3010  009E7E  20                 	db	32
  3011  009E7F  20                 	db	32
  3012  009E80  20                 	db	32
  3013  009E81  20                 	db	32
  3014  009E82  20                 	db	32
  3015  009E83  20                 	db	32
  3016  009E84  20                 	db	32
  3017  009E85  20                 	db	32
  3018  009E86  20                 	db	32
  3019  009E87  20                 	db	32
  3020  009E88  20                 	db	32
  3021  009E89  20                 	db	32
  3022  009E8A  4E                 	db	78
  3023  009E8B  6F                 	db	111
  3024  009E8C  20                 	db	32
  3025  009E8D  20                 	db	32
  3026  009E8E                     __end_of_dc_zero:
  3027                           	opt stack 0
  3028  009E8E                     _dc_arc2:
  3029                           	opt stack 0
  3030  009E8E  41                 	db	65
  3031  009E8F  72                 	db	114
  3032  009E90  63                 	db	99
  3033  009E91  3A                 	db	58
  3034  009E92  20                 	db	32
  3035  009E93  53                 	db	83
  3036  009E94  69                 	db	105
  3037  009E95  7A                 	db	122
  3038  009E96  65                 	db	101
  3039  009E97  3D                 	db	61
  3040  009E98  20                 	db	32
  3041  009E99  20                 	db	32
  3042  009E9A  20                 	db	32
  3043  009E9B  20                 	db	32
  3044  009E9C  20                 	db	32
  3045  009E9D  20                 	db	32
  3046  009E9E  20                 	db	32
  3047  009E9F  20                 	db	32
  3048  009EA0  20                 	db	32
  3049  009EA1  20                 	db	32
  3050  009EA2  43                 	db	67
  3051  009EA3  75                 	db	117
  3052  009EA4  72                 	db	114
  3053  009EA5  72                 	db	114
  3054  009EA6  65                 	db	101
  3055  009EA7  6E                 	db	110
  3056  009EA8  74                 	db	116
  3057  009EA9  20                 	db	32
  3058  009EAA  70                 	db	112
  3059  009EAB  6F                 	db	111
  3060  009EAC  73                 	db	115
  3061  009EAD  3A                 	db	58
  3062  009EAE  20                 	db	32
  3063  009EAF  20                 	db	32
  3064  009EB0  20                 	db	32
  3065  009EB1  20                 	db	32
  3066  009EB2  20                 	db	32
  3067  009EB3  20                 	db	32
  3068  009EB4  20                 	db	32
  3069  009EB5  01                 	db	1
  3070  009EB6  54                 	db	84
  3071  009EB7  75                 	db	117
  3072  009EB8  72                 	db	114
  3073  009EB9  6E                 	db	110
  3074  009EBA  20                 	db	32
  3075  009EBB  43                 	db	67
  3076  009EBC  43                 	db	67
  3077  009EBD  57                 	db	87
  3078  009EBE  20                 	db	32
  3079  009EBF  00                 	db	0
  3080  009EC0  20                 	db	32
  3081  009EC1  53                 	db	83
  3082  009EC2  70                 	db	112
  3083  009EC3  65                 	db	101
  3084  009EC4  65                 	db	101
  3085  009EC5  64                 	db	100
  3086  009EC6  20                 	db	32
  3087  009EC7  20                 	db	32
  3088  009EC8  20                 	db	32
  3089  009EC9  20                 	db	32
  3090  009ECA  53                 	db	83
  3091  009ECB  74                 	db	116
  3092  009ECC  61                 	db	97
  3093  009ECD  72                 	db	114
  3094  009ECE  74                 	db	116
  3095  009ECF  20                 	db	32
  3096  009ED0  20                 	db	32
  3097  009ED1  20                 	db	32
  3098  009ED2  20                 	db	32
  3099  009ED3  00                 	db	0
  3100  009ED4  20                 	db	32
  3101  009ED5  20                 	db	32
  3102  009ED6  20                 	db	32
  3103  009ED7  20                 	db	32
  3104  009ED8  20                 	db	32
  3105  009ED9  20                 	db	32
  3106  009EDA  20                 	db	32
  3107  009EDB  20                 	db	32
  3108  009EDC  20                 	db	32
  3109  009EDD  20                 	db	32
  3110  009EDE                     __end_of_dc_arc2:
  3111                           	opt stack 0
  3112  009EDE                     _dc_arc1:
  3113                           	opt stack 0
  3114  009EDE  41                 	db	65
  3115  009EDF  72                 	db	114
  3116  009EE0  63                 	db	99
  3117  009EE1  3A                 	db	58
  3118  009EE2  20                 	db	32
  3119  009EE3  53                 	db	83
  3120  009EE4  65                 	db	101
  3121  009EE5  74                 	db	116
  3122  009EE6  20                 	db	32
  3123  009EE7  61                 	db	97
  3124  009EE8  72                 	db	114
  3125  009EE9  63                 	db	99
  3126  009EEA  20                 	db	32
  3127  009EEB  73                 	db	115
  3128  009EEC  69                 	db	105
  3129  009EED  7A                 	db	122
  3130  009EEE  65                 	db	101
  3131  009EEF  20                 	db	32
  3132  009EF0  20                 	db	32
  3133  009EF1  20                 	db	32
  3134  009EF2  41                 	db	65
  3135  009EF3  72                 	db	114
  3136  009EF4  63                 	db	99
  3137  009EF5  20                 	db	32
  3138  009EF6  73                 	db	115
  3139  009EF7  69                 	db	105
  3140  009EF8  7A                 	db	122
  3141  009EF9  65                 	db	101
  3142  009EFA  3A                 	db	58
  3143  009EFB  20                 	db	32
  3144  009EFC  20                 	db	32
  3145  009EFD  20                 	db	32
  3146  009EFE  20                 	db	32
  3147  009EFF  20                 	db	32
  3148  009F00  20                 	db	32
  3149  009F01  20                 	db	32
  3150  009F02  20                 	db	32
  3151  009F03  20                 	db	32
  3152  009F04  20                 	db	32
  3153  009F05  20                 	db	32
  3154  009F06  53                 	db	83
  3155  009F07  74                 	db	116
  3156  009F08  65                 	db	101
  3157  009F09  70                 	db	112
  3158  009F0A  20                 	db	32
  3159  009F0B  73                 	db	115
  3160  009F0C  69                 	db	105
  3161  009F0D  7A                 	db	122
  3162  009F0E  65                 	db	101
  3163  009F0F  20                 	db	32
  3164  009F10  00                 	db	0
  3165  009F11  20                 	db	32
  3166  009F12  20                 	db	32
  3167  009F13  43                 	db	67
  3168  009F14  6F                 	db	111
  3169  009F15  6E                 	db	110
  3170  009F16  66                 	db	102
  3171  009F17  69                 	db	105
  3172  009F18  72                 	db	114
  3173  009F19  6D                 	db	109
  3174  009F1A  20                 	db	32
  3175  009F1B  20                 	db	32
  3176  009F1C  20                 	db	32
  3177  009F1D  20                 	db	32
  3178  009F1E  20                 	db	32
  3179  009F1F  20                 	db	32
  3180  009F20  20                 	db	32
  3181  009F21  20                 	db	32
  3182  009F22  20                 	db	32
  3183  009F23  20                 	db	32
  3184  009F24  00                 	db	0
  3185  009F25  20                 	db	32
  3186  009F26  20                 	db	32
  3187  009F27  43                 	db	67
  3188  009F28  61                 	db	97
  3189  009F29  6E                 	db	110
  3190  009F2A  63                 	db	99
  3191  009F2B  65                 	db	101
  3192  009F2C  6C                 	db	108
  3193  009F2D  20                 	db	32
  3194  009F2E                     __end_of_dc_arc1:
  3195                           	opt stack 0
  3196  009F2E                     _dc_divide2:
  3197                           	opt stack 0
  3198  009F2E  44                 	db	68
  3199  009F2F  69                 	db	105
  3200  009F30  76                 	db	118
  3201  009F31  69                 	db	105
  3202  009F32  64                 	db	100
  3203  009F33  65                 	db	101
  3204  009F34  3A                 	db	58
  3205  009F35  20                 	db	32
  3206  009F36  20                 	db	32
  3207  009F37  20                 	db	32
  3208  009F38  20                 	db	32
  3209  009F39  20                 	db	32
  3210  009F3A  20                 	db	32
  3211  009F3B  20                 	db	32
  3212  009F3C  20                 	db	32
  3213  009F3D  20                 	db	32
  3214  009F3E  20                 	db	32
  3215  009F3F  20                 	db	32
  3216  009F40  20                 	db	32
  3217  009F41  20                 	db	32
  3218  009F42  50                 	db	80
  3219  009F43  6F                 	db	111
  3220  009F44  73                 	db	115
  3221  009F45  3A                 	db	58
  3222  009F46  20                 	db	32
  3223  009F47  20                 	db	32
  3224  009F48  20                 	db	32
  3225  009F49  20                 	db	32
  3226  009F4A  20                 	db	32
  3227  009F4B  20                 	db	32
  3228  009F4C  20                 	db	32
  3229  009F4D  20                 	db	32
  3230  009F4E  20                 	db	32
  3231  009F4F  20                 	db	32
  3232  009F50  20                 	db	32
  3233  009F51  20                 	db	32
  3234  009F52  20                 	db	32
  3235  009F53  20                 	db	32
  3236  009F54  20                 	db	32
  3237  009F55  20                 	db	32
  3238  009F56  4A                 	db	74
  3239  009F57  75                 	db	117
  3240  009F58  6D                 	db	109
  3241  009F59  70                 	db	112
  3242  009F5A  20                 	db	32
  3243  009F5B  73                 	db	115
  3244  009F5C  69                 	db	105
  3245  009F5D  7A                 	db	122
  3246  009F5E  65                 	db	101
  3247  009F5F  3A                 	db	58
  3248  009F60  20                 	db	32
  3249  009F61  20                 	db	32
  3250  009F62  20                 	db	32
  3251  009F63  20                 	db	32
  3252  009F64  20                 	db	32
  3253  009F65  20                 	db	32
  3254  009F66  20                 	db	32
  3255  009F67  20                 	db	32
  3256  009F68  20                 	db	32
  3257  009F69  20                 	db	32
  3258  009F6A  50                 	db	80
  3259  009F6B  72                 	db	114
  3260  009F6C  65                 	db	101
  3261  009F6D  73                 	db	115
  3262  009F6E  73                 	db	115
  3263  009F6F  54                 	db	84
  3264  009F70  6F                 	db	111
  3265  009F71  4A                 	db	74
  3266  009F72  75                 	db	117
  3267  009F73  6D                 	db	109
  3268  009F74  70                 	db	112
  3269  009F75  20                 	db	32
  3270  009F76  00                 	db	0
  3271  009F77  20                 	db	32
  3272  009F78  43                 	db	67
  3273  009F79  61                 	db	97
  3274  009F7A  6E                 	db	110
  3275  009F7B  63                 	db	99
  3276  009F7C  65                 	db	101
  3277  009F7D  6C                 	db	108
  3278  009F7E                     __end_of_dc_divide2:
  3279                           	opt stack 0
  3280  009F7E                     _dc_divide1:
  3281                           	opt stack 0
  3282  009F7E  44                 	db	68
  3283  009F7F  69                 	db	105
  3284  009F80  76                 	db	118
  3285  009F81  69                 	db	105
  3286  009F82  64                 	db	100
  3287  009F83  65                 	db	101
  3288  009F84  3A                 	db	58
  3289  009F85  20                 	db	32
  3290  009F86  53                 	db	83
  3291  009F87  65                 	db	101
  3292  009F88  74                 	db	116
  3293  009F89  20                 	db	32
  3294  009F8A  64                 	db	100
  3295  009F8B  69                 	db	105
  3296  009F8C  76                 	db	118
  3297  009F8D  69                 	db	105
  3298  009F8E  73                 	db	115
  3299  009F8F  69                 	db	105
  3300  009F90  6F                 	db	111
  3301  009F91  6E                 	db	110
  3302  009F92  20                 	db	32
  3303  009F93  20                 	db	32
  3304  009F94  20                 	db	32
  3305  009F95  20                 	db	32
  3306  009F96  20                 	db	32
  3307  009F97  20                 	db	32
  3308  009F98  20                 	db	32
  3309  009F99  20                 	db	32
  3310  009F9A  20                 	db	32
  3311  009F9B  20                 	db	32
  3312  009F9C  20                 	db	32
  3313  009F9D  20                 	db	32
  3314  009F9E  20                 	db	32
  3315  009F9F  20                 	db	32
  3316  009FA0  20                 	db	32
  3317  009FA1  20                 	db	32
  3318  009FA2  20                 	db	32
  3319  009FA3  20                 	db	32
  3320  009FA4  20                 	db	32
  3321  009FA5  20                 	db	32
  3322  009FA6  20                 	db	32
  3323  009FA7  20                 	db	32
  3324  009FA8  20                 	db	32
  3325  009FA9  2F                 	db	47
  3326  009FAA  73                 	db	115
  3327  009FAB  74                 	db	116
  3328  009FAC  65                 	db	101
  3329  009FAD  70                 	db	112
  3330  009FAE  20                 	db	32
  3331  009FAF  20                 	db	32
  3332  009FB0  00                 	db	0
  3333  009FB1  20                 	db	32
  3334  009FB2  20                 	db	32
  3335  009FB3  43                 	db	67
  3336  009FB4  6F                 	db	111
  3337  009FB5  6E                 	db	110
  3338  009FB6  66                 	db	102
  3339  009FB7  69                 	db	105
  3340  009FB8  72                 	db	114
  3341  009FB9  6D                 	db	109
  3342  009FBA  31                 	db	49
  3343  009FBB  32                 	db	50
  3344  009FBC  33                 	db	51
  3345  009FBD  34                 	db	52
  3346  009FBE  20                 	db	32
  3347  009FBF  20                 	db	32
  3348  009FC0  20                 	db	32
  3349  009FC1  20                 	db	32
  3350  009FC2  20                 	db	32
  3351  009FC3  20                 	db	32
  3352  009FC4  00                 	db	0
  3353  009FC5  20                 	db	32
  3354  009FC6  20                 	db	32
  3355  009FC7  43                 	db	67
  3356  009FC8  61                 	db	97
  3357  009FC9  6E                 	db	110
  3358  009FCA  63                 	db	99
  3359  009FCB  65                 	db	101
  3360  009FCC  6C                 	db	108
  3361  009FCD  20                 	db	32
  3362  009FCE                     __end_of_dc_divide1:
  3363                           	opt stack 0
  3364  009FCE                     _dc_setup2:
  3365                           	opt stack 0
  3366  009FCE  53                 	db	83
  3367  009FCF  65                 	db	101
  3368  009FD0  74                 	db	116
  3369  009FD1  75                 	db	117
  3370  009FD2  70                 	db	112
  3371  009FD3  3A                 	db	58
  3372  009FD4  20                 	db	32
  3373  009FD5  53                 	db	83
  3374  009FD6  65                 	db	101
  3375  009FD7  74                 	db	116
  3376  009FD8  20                 	db	32
  3377  009FD9  64                 	db	100
  3378  009FDA  69                 	db	105
  3379  009FDB  72                 	db	114
  3380  009FDC  65                 	db	101
  3381  009FDD  63                 	db	99
  3382  009FDE  74                 	db	116
  3383  009FDF  69                 	db	105
  3384  009FE0  6F                 	db	111
  3385  009FE1  6E                 	db	110
  3386  009FE2  20                 	db	32
  3387  009FE3  20                 	db	32
  3388  009FE4  20                 	db	32
  3389  009FE5  20                 	db	32
  3390  009FE6  20                 	db	32
  3391  009FE7  20                 	db	32
  3392  009FE8  20                 	db	32
  3393  009FE9  20                 	db	32
  3394  009FEA  20                 	db	32
  3395  009FEB  20                 	db	32
  3396  009FEC  20                 	db	32
  3397  009FED  20                 	db	32
  3398  009FEE  20                 	db	32
  3399  009FEF  20                 	db	32
  3400  009FF0  20                 	db	32
  3401  009FF1  20                 	db	32
  3402  009FF2  20                 	db	32
  3403  009FF3  20                 	db	32
  3404  009FF4  20                 	db	32
  3405  009FF5  20                 	db	32
  3406  009FF6  20                 	db	32
  3407  009FF7  43                 	db	67
  3408  009FF8  6F                 	db	111
  3409  009FF9  75                 	db	117
  3410  009FFA  6E                 	db	110
  3411  009FFB  74                 	db	116
  3412  009FFC  65                 	db	101
  3413  009FFD  72                 	db	114
  3414  009FFE  43                 	db	67
  3415  009FFF  6C                 	db	108
  3416  00A000  6F                 	db	111
  3417  00A001  63                 	db	99
  3418  00A002  6B                 	db	107
  3419  00A003  77                 	db	119
  3420  00A004  69                 	db	105
  3421  00A005  73                 	db	115
  3422  00A006  65                 	db	101
  3423  00A007  20                 	db	32
  3424  00A008  20                 	db	32
  3425  00A009  20                 	db	32
  3426  00A00A  20                 	db	32
  3427  00A00B  43                 	db	67
  3428  00A00C  6C                 	db	108
  3429  00A00D  6F                 	db	111
  3430  00A00E  63                 	db	99
  3431  00A00F  6B                 	db	107
  3432  00A010  77                 	db	119
  3433  00A011  69                 	db	105
  3434  00A012  73                 	db	115
  3435  00A013  65                 	db	101
  3436  00A014  20                 	db	32
  3437  00A015  20                 	db	32
  3438  00A016  20                 	db	32
  3439  00A017  20                 	db	32
  3440  00A018  20                 	db	32
  3441  00A019  20                 	db	32
  3442  00A01A  20                 	db	32
  3443  00A01B  20                 	db	32
  3444  00A01C  20                 	db	32
  3445  00A01D  20                 	db	32
  3446  00A01E                     __end_of_dc_setup2:
  3447                           	opt stack 0
  3448  00A01E                     _dc_setup1:
  3449                           	opt stack 0
  3450  00A01E  53                 	db	83
  3451  00A01F  65                 	db	101
  3452  00A020  74                 	db	116
  3453  00A021  75                 	db	117
  3454  00A022  70                 	db	112
  3455  00A023  3A                 	db	58
  3456  00A024  20                 	db	32
  3457  00A025  53                 	db	83
  3458  00A026  65                 	db	101
  3459  00A027  74                 	db	116
  3460  00A028  20                 	db	32
  3461  00A029  7A                 	db	122
  3462  00A02A  65                 	db	101
  3463  00A02B  72                 	db	114
  3464  00A02C  6F                 	db	111
  3465  00A02D  20                 	db	32
  3466  00A02E  70                 	db	112
  3467  00A02F  6F                 	db	111
  3468  00A030  73                 	db	115
  3469  00A031  2E                 	db	46
  3470  00A032  20                 	db	32
  3471  00A033  20                 	db	32
  3472  00A034  20                 	db	32
  3473  00A035  20                 	db	32
  3474  00A036  20                 	db	32
  3475  00A037  20                 	db	32
  3476  00A038  20                 	db	32
  3477  00A039  20                 	db	32
  3478  00A03A  20                 	db	32
  3479  00A03B  20                 	db	32
  3480  00A03C  20                 	db	32
  3481  00A03D  20                 	db	32
  3482  00A03E  20                 	db	32
  3483  00A03F  20                 	db	32
  3484  00A040  20                 	db	32
  3485  00A041  20                 	db	32
  3486  00A042  20                 	db	32
  3487  00A043  20                 	db	32
  3488  00A044  20                 	db	32
  3489  00A045  20                 	db	32
  3490  00A046  53                 	db	83
  3491  00A047  74                 	db	116
  3492  00A048  65                 	db	101
  3493  00A049  70                 	db	112
  3494  00A04A  20                 	db	32
  3495  00A04B  73                 	db	115
  3496  00A04C  69                 	db	105
  3497  00A04D  7A                 	db	122
  3498  00A04E  65                 	db	101
  3499  00A04F  20                 	db	32
  3500  00A050  00                 	db	0
  3501  00A051  20                 	db	32
  3502  00A052  20                 	db	32
  3503  00A053  43                 	db	67
  3504  00A054  6F                 	db	111
  3505  00A055  6E                 	db	110
  3506  00A056  66                 	db	102
  3507  00A057  69                 	db	105
  3508  00A058  72                 	db	114
  3509  00A059  6D                 	db	109
  3510  00A05A  20                 	db	32
  3511  00A05B  78                 	db	120
  3512  00A05C  2E                 	db	46
  3513  00A05D  78                 	db	120
  3514  00A05E  78                 	db	120
  3515  00A05F  01                 	db	1
  3516  00A060  20                 	db	32
  3517  00A061  20                 	db	32
  3518  00A062  20                 	db	32
  3519  00A063  20                 	db	32
  3520  00A064  00                 	db	0
  3521  00A065  20                 	db	32
  3522  00A066  20                 	db	32
  3523  00A067  43                 	db	67
  3524  00A068  61                 	db	97
  3525  00A069  6E                 	db	110
  3526  00A06A  63                 	db	99
  3527  00A06B  65                 	db	101
  3528  00A06C  6C                 	db	108
  3529  00A06D  20                 	db	32
  3530  00A06E                     __end_of_dc_setup1:
  3531                           	opt stack 0
  3532  00A06E                     _dc_main:
  3533                           	opt stack 0
  3534  00A06E  4D                 	db	77
  3535  00A06F  61                 	db	97
  3536  00A070  69                 	db	105
  3537  00A071  6E                 	db	110
  3538  00A072  20                 	db	32
  3539  00A073  4D                 	db	77
  3540  00A074  65                 	db	101
  3541  00A075  6E                 	db	110
  3542  00A076  75                 	db	117
  3543  00A077  3A                 	db	58
  3544  00A078  20                 	db	32
  3545  00A079  20                 	db	32
  3546  00A07A  20                 	db	32
  3547  00A07B  20                 	db	32
  3548  00A07C  20                 	db	32
  3549  00A07D  20                 	db	32
  3550  00A07E  20                 	db	32
  3551  00A07F  20                 	db	32
  3552  00A080  20                 	db	32
  3553  00A081  20                 	db	32
  3554  00A082  20                 	db	32
  3555  00A083  53                 	db	83
  3556  00A084  65                 	db	101
  3557  00A085  74                 	db	116
  3558  00A086  75                 	db	117
  3559  00A087  70                 	db	112
  3560  00A088  20                 	db	32
  3561  00A089  20                 	db	32
  3562  00A08A  20                 	db	32
  3563  00A08B  20                 	db	32
  3564  00A08C  44                 	db	68
  3565  00A08D  69                 	db	105
  3566  00A08E  76                 	db	118
  3567  00A08F  69                 	db	105
  3568  00A090  64                 	db	100
  3569  00A091  65                 	db	101
  3570  00A092  20                 	db	32
  3571  00A093  20                 	db	32
  3572  00A094  20                 	db	32
  3573  00A095  20                 	db	32
  3574  00A096  20                 	db	32
  3575  00A097  41                 	db	65
  3576  00A098  72                 	db	114
  3577  00A099  63                 	db	99
  3578  00A09A  20                 	db	32
  3579  00A09B  20                 	db	32
  3580  00A09C  20                 	db	32
  3581  00A09D  20                 	db	32
  3582  00A09E  20                 	db	32
  3583  00A09F  20                 	db	32
  3584  00A0A0  4D                 	db	77
  3585  00A0A1  61                 	db	97
  3586  00A0A2  6E                 	db	110
  3587  00A0A3  75                 	db	117
  3588  00A0A4  61                 	db	97
  3589  00A0A5  6C                 	db	108
  3590  00A0A6  20                 	db	32
  3591  00A0A7  20                 	db	32
  3592  00A0A8  20                 	db	32
  3593  00A0A9  20                 	db	32
  3594  00A0AA  20                 	db	32
  3595  00A0AB  47                 	db	71
  3596  00A0AC  6F                 	db	111
  3597  00A0AD  32                 	db	50
  3598  00A0AE  5A                 	db	90
  3599  00A0AF  65                 	db	101
  3600  00A0B0  72                 	db	114
  3601  00A0B1  6F                 	db	111
  3602  00A0B2  20                 	db	32
  3603  00A0B3  20                 	db	32
  3604  00A0B4  20                 	db	32
  3605  00A0B5  20                 	db	32
  3606  00A0B6  20                 	db	32
  3607  00A0B7  20                 	db	32
  3608  00A0B8  20                 	db	32
  3609  00A0B9  20                 	db	32
  3610  00A0BA  20                 	db	32
  3611  00A0BB  20                 	db	32
  3612  00A0BC  20                 	db	32
  3613  00A0BD  20                 	db	32
  3614  00A0BE                     __end_of_dc_main:
  3615                           	opt stack 0
  3616  00A0BE                     _configDescriptor1:
  3617                           	opt stack 0
  3618  00A0BE  09                 	db	9
  3619  00A0BF  02                 	db	2
  3620  00A0C0  40                 	db	64
  3621  00A0C1  00                 	db	0
  3622  00A0C2  02                 	db	2
  3623  00A0C3  01                 	db	1
  3624  00A0C4  00                 	db	0
  3625  00A0C5  C0                 	db	192
  3626  00A0C6  32                 	db	50
  3627  00A0C7  09                 	db	9
  3628  00A0C8  04                 	db	4
  3629  00A0C9  00                 	db	0
  3630  00A0CA  00                 	db	0
  3631  00A0CB  02                 	db	2
  3632  00A0CC  03                 	db	3
  3633  00A0CD  00                 	db	0
  3634  00A0CE  00                 	db	0
  3635  00A0CF  00                 	db	0
  3636  00A0D0  09                 	db	9
  3637  00A0D1  21                 	db	33
  3638  00A0D2  11                 	db	17
  3639  00A0D3  01                 	db	1
  3640  00A0D4  00                 	db	0
  3641  00A0D5  01                 	db	1
  3642  00A0D6  22                 	db	34
  3643  00A0D7  1D                 	db	29
  3644  00A0D8  00                 	db	0
  3645  00A0D9  07                 	db	7
  3646  00A0DA  05                 	db	5
  3647  00A0DB  81                 	db	129
  3648  00A0DC  03                 	db	3
  3649  00A0DD  40                 	db	64
  3650  00A0DE  00                 	db	0
  3651  00A0DF  01                 	db	1
  3652  00A0E0  07                 	db	7
  3653  00A0E1  05                 	db	5
  3654  00A0E2  01                 	db	1
  3655  00A0E3  03                 	db	3
  3656  00A0E4  40                 	db	64
  3657  00A0E5  00                 	db	0
  3658  00A0E6  01                 	db	1
  3659  00A0E7  09                 	db	9
  3660  00A0E8  04                 	db	4
  3661  00A0E9  01                 	db	1
  3662  00A0EA  00                 	db	0
  3663  00A0EB  02                 	db	2
  3664  00A0EC  08                 	db	8
  3665  00A0ED  06                 	db	6
  3666  00A0EE  50                 	db	80
  3667  00A0EF  00                 	db	0
  3668  00A0F0  07                 	db	7
  3669  00A0F1  05                 	db	5
  3670  00A0F2  82                 	db	130
  3671  00A0F3  02                 	db	2
  3672  00A0F4  40                 	db	64
  3673  00A0F5  00                 	db	0
  3674  00A0F6  01                 	db	1
  3675  00A0F7  07                 	db	7
  3676  00A0F8  05                 	db	5
  3677  00A0F9  02                 	db	2
  3678  00A0FA  02                 	db	2
  3679  00A0FB  40                 	db	64
  3680  00A0FC  00                 	db	0
  3681  00A0FD  01                 	db	1
  3682  00A0FE                     __end_of_configDescriptor1:
  3683                           	opt stack 0
  3684  00A0FE                     _sd001:
  3685                           	opt stack 0
  3686  00A0FE  34                 	db	52
  3687  00A0FF  03                 	db	3
  3688  00A100  0053               	dw	83
  3689  00A102  006F               	dw	111
  3690  00A104  006C               	dw	108
  3691  00A106  0064               	dw	100
  3692  00A108  0065               	dw	101
  3693  00A10A  0072               	dw	114
  3694  00A10C  006E               	dw	110
  3695  00A10E  0065               	dw	101
  3696  00A110  0072               	dw	114
  3697  00A112  0064               	dw	100
  3698  00A114  002E               	dw	46
  3699  00A116  0063               	dw	99
  3700  00A118  006F               	dw	111
  3701  00A11A  006D               	dw	109
  3702  00A11C  0020               	dw	32
  3703  00A11E  0020               	dw	32
  3704  00A120  0020               	dw	32
  3705  00A122  0020               	dw	32
  3706  00A124  0020               	dw	32
  3707  00A126  0020               	dw	32
  3708  00A128  0020               	dw	32
  3709  00A12A  0020               	dw	32
  3710  00A12C  0020               	dw	32
  3711  00A12E  0020               	dw	32
  3712  00A130  0020               	dw	32
  3713  00A132                     __end_of_sd001:
  3714                           	opt stack 0
  3715  00A132                     _sd002:
  3716                           	opt stack 0
  3717  00A132  2E                 	db	46
  3718  00A133  03                 	db	3
  3719  00A134  0053               	dw	83
  3720  00A136  0074               	dw	116
  3721  00A138  0065               	dw	101
  3722  00A13A  0070               	dw	112
  3723  00A13C  0070               	dw	112
  3724  00A13E  0065               	dw	101
  3725  00A140  0072               	dw	114
  3726  00A142  004D               	dw	77
  3727  00A144  006F               	dw	111
  3728  00A146  0074               	dw	116
  3729  00A148  006F               	dw	111
  3730  00A14A  0072               	dw	114
  3731  00A14C  0043               	dw	67
  3732  00A14E  006F               	dw	111
  3733  00A150  006E               	dw	110
  3734  00A152  0074               	dw	116
  3735  00A154  0072               	dw	114
  3736  00A156  006F               	dw	111
  3737  00A158  006C               	dw	108
  3738  00A15A  006C               	dw	108
  3739  00A15C  0065               	dw	101
  3740  00A15E  0072               	dw	114
  3741  00A160                     __end_of_sd002:
  3742                           	opt stack 0
  3743  00A160                     _inq_resp:
  3744                           	opt stack 0
  3745  00A160  00                 	db	0
  3746  00A161  80                 	db	128
  3747  00A162  04                 	db	4
  3748  00A163  02                 	db	2
  3749  00A164  20                 	db	32
  3750  00A165  00                 	db	0
  3751  00A166  00                 	db	0
  3752  00A167  00                 	db	0
  3753  00A168  4D                 	db	77
  3754  00A169  69                 	db	105
  3755  00A16A  63                 	db	99
  3756  00A16B  72                 	db	114
  3757  00A16C  6F                 	db	111
  3758  00A16D  63                 	db	99
  3759  00A16E  68                 	db	104
  3760  00A16F  70                 	db	112
  3761  00A170  4D                 	db	77
  3762  00A171  61                 	db	97
  3763  00A172  73                 	db	115
  3764  00A173  73                 	db	115
  3765  00A174  20                 	db	32
  3766  00A175  53                 	db	83
  3767  00A176  74                 	db	116
  3768  00A177  6F                 	db	111
  3769  00A178  72                 	db	114
  3770  00A179  61                 	db	97
  3771  00A17A  67                 	db	103
  3772  00A17B  65                 	db	101
  3773  00A17C  20                 	db	32
  3774  00A17D  20                 	db	32
  3775  00A17E  20                 	db	32
  3776  00A17F  20                 	db	32
  3777  00A180  30                 	db	48
  3778  00A181  30                 	db	48
  3779  00A182  30                 	db	48
  3780  00A183  31                 	db	49
  3781  00A184                     __end_of_inq_resp:
  3782                           	opt stack 0
  3783  00A184                     _hid_rpt01:
  3784                           	opt stack 0
  3785  00A184  06                 	db	6
  3786  00A185  00                 	db	0
  3787  00A186  FF                 	db	255
  3788  00A187  09                 	db	9
  3789  00A188  01                 	db	1
  3790  00A189  A1                 	db	161
  3791  00A18A  01                 	db	1
  3792  00A18B  19                 	db	25
  3793  00A18C  01                 	db	1
  3794  00A18D  29                 	db	41
  3795  00A18E  40                 	db	64
  3796  00A18F  15                 	db	21
  3797  00A190  00                 	db	0
  3798  00A191  26                 	db	38
  3799  00A192  FF                 	db	255
  3800  00A193  00                 	db	0
  3801  00A194  75                 	db	117
  3802  00A195  08                 	db	8
  3803  00A196  95                 	db	149
  3804  00A197  40                 	db	64
  3805  00A198  81                 	db	129
  3806  00A199  00                 	db	0
  3807  00A19A  19                 	db	25
  3808  00A19B  01                 	db	1
  3809  00A19C  29                 	db	41
  3810  00A19D  40                 	db	64
  3811  00A19E  91                 	db	145
  3812  00A19F  00                 	db	0
  3813  00A1A0  C0                 	db	192
  3814  00A1A1                     __end_of_hid_rpt01:
  3815                           	opt stack 0
  3816  00A1A1                     _sd003:
  3817                           	opt stack 0
  3818  00A1A1  1A                 	db	26
  3819  00A1A2  03                 	db	3
  3820  00A1A3  0031               	dw	49
  3821  00A1A5  0032               	dw	50
  3822  00A1A7  0033               	dw	51
  3823  00A1A9  0034               	dw	52
  3824  00A1AB  0035               	dw	53
  3825  00A1AD  0036               	dw	54
  3826  00A1AF  0037               	dw	55
  3827  00A1B1  0038               	dw	56
  3828  00A1B3  0039               	dw	57
  3829  00A1B5  0030               	dw	48
  3830  00A1B7  0039               	dw	57
  3831  00A1B9  0039               	dw	57
  3832  00A1BB                     __end_of_sd003:
  3833                           	opt stack 0
  3834  00A1BB                     _device_dsc:
  3835                           	opt stack 0
  3836  00A1BB  12                 	db	18
  3837  00A1BC  01                 	db	1
  3838  00A1BD  0200               	dw	512
  3839  00A1BF  00                 	db	0
  3840  00A1C0  00                 	db	0
  3841  00A1C1  00                 	db	0
  3842  00A1C2  08                 	db	8
  3843  00A1C3  04D8               	dw	1240
  3844  00A1C5  EDCF               	dw	60879
  3845  00A1C7  0100               	dw	256
  3846  00A1C9  01                 	db	1
  3847  00A1CA  02                 	db	2
  3848  00A1CB  00                 	db	0
  3849  00A1CC  01                 	db	1
  3850  00A1CD                     __end_of_device_dsc:
  3851                           	opt stack 0
  3852  00A1CD                     _bit_pattern_ae:
  3853                           	opt stack 0
  3854  00A1CD  0A                 	db	10
  3855  00A1CE  00                 	db	0
  3856  00A1CF  0E                 	db	14
  3857  00A1D0  01                 	db	1
  3858  00A1D1  0F                 	db	15
  3859  00A1D2  11                 	db	17
  3860  00A1D3  0F                 	db	15
  3861  00A1D4  00                 	db	0
  3862  00A1D5                     __end_of_bit_pattern_ae:
  3863                           	opt stack 0
  3864  00A1D5                     _bit_pattern_degree:
  3865                           	opt stack 0
  3866  00A1D5  18                 	db	24
  3867  00A1D6  18                 	db	24
  3868  00A1D7  00                 	db	0
  3869  00A1D8  00                 	db	0
  3870  00A1D9  00                 	db	0
  3871  00A1DA  00                 	db	0
  3872  00A1DB  00                 	db	0
  3873  00A1DC  00                 	db	0
  3874  00A1DD                     __end_of_bit_pattern_degree:
  3875                           	opt stack 0
  3876  00A1DD                     _bit_pattern_verticalbar:
  3877                           	opt stack 0
  3878  00A1DD  04                 	db	4
  3879  00A1DE  04                 	db	4
  3880  00A1DF  04                 	db	4
  3881  00A1E0  04                 	db	4
  3882  00A1E1  04                 	db	4
  3883  00A1E2  04                 	db	4
  3884  00A1E3  04                 	db	4
  3885  00A1E4  04                 	db	4
  3886  00A1E5                     __end_of_bit_pattern_verticalbar:
  3887                           	opt stack 0
  3888  00A1E5                     _flash_command_pagesize_528:
  3889                           	opt stack 0
  3890  00A1E5  3D                 	db	61
  3891  00A1E6  2A                 	db	42
  3892  00A1E7  80                 	db	128
  3893  00A1E8  A7                 	db	167
  3894  00A1E9                     __end_of_flash_command_pagesize_528:
  3895                           	opt stack 0
  3896  00A1E9                     _flash_command_pagesize_512:
  3897                           	opt stack 0
  3898  00A1E9  3D                 	db	61
  3899  00A1EA  2A                 	db	42
  3900  00A1EB  80                 	db	128
  3901  00A1EC  A6                 	db	166
  3902  00A1ED                     __end_of_flash_command_pagesize_512:
  3903                           	opt stack 0
  3904  00A1ED                     _sd000:
  3905                           	opt stack 0
  3906  00A1ED  04                 	db	4
  3907  00A1EE  03                 	db	3
  3908  00A1EF  0409               	dw	1033
  3909  00A1F1                     __end_of_sd000:
  3910                           	opt stack 0
  3911  0000                     _RPINR22	set	3837
  3912  0000                     _RPOR23	set	3799
  3913  0000                     _RPOR21	set	3797
  3914  0000                     _RPINR21	set	3836
  3915  0000                     _RPOR4	set	3780
  3916  0000                     _PPSCONbits	set	3775
  3917  0000                     _CCPTMRS0bits	set	3922
  3918  0000                     _ANCON0bits	set	3912
  3919  0000                     _ANCON1bits	set	3913
  3920  0000                     _UEP0bits	set	3878
  3921  0000                     _UIEbits	set	3894
  3922  0000                     _UADDR	set	3896
  3923  0000                     _UIE	set	3894
  3924  0000                     _UEIE	set	3895
  3925  0000                     _UCFG	set	3897
  3926  0000                     _UEP1	set	3879
  3927  0000                     _UEP0	set	3878
  3928  0000                     _ADRESL	set	4035
  3929  0000                     _ADRESH	set	4036
  3930  0000                     _ADCON1bits	set	4033
  3931  0000                     _ADCON0bits	set	4034
  3932  0000                     _PORTA	set	3968
  3933  0000                     _PORTE	set	3972
  3934  0000                     _TMR2	set	4044
  3935  0000                     _PIE1bits	set	3997
  3936  0000                     _CCPR1L	set	4027
  3937  0000                     _PR2	set	4043
  3938  0000                     _T2CONbits	set	4042
  3939  0000                     _CCP1CONbits	set	4026
  3940  0000                     _RXADDRL	set	3945
  3941  0000                     _RXADDRH	set	3944
  3942  0000                     _DMABCL	set	3943
  3943  0000                     _DMABCH	set	3942
  3944  0000                     _TXADDRL	set	3947
  3945  0000                     _TXADDRH	set	3946
  3946  0000                     _DMACON2bits	set	3974
  3947  0000                     _DMACON1bits	set	3976
  3948  0000                     _SSP2CON1bits	set	3954
  3949  0000                     _SSP2STATbits	set	3955
  3950  0000                     _PORTDbits	set	3971
  3951  0000                     _PORTEbits	set	3972
  3952  0000                     _SSP1BUF	set	4041
  3953  0000                     _SSP1CON2bits	set	4037
  3954  0000                     _SSP1CON1bits	set	4038
  3955  0000                     _SSP1ADD	set	4040
  3956  0000                     _SSP1STATbits	set	4039
  3957  0000                     _PORTAbits	set	3968
  3958  0000                     _T0CONbits	set	4053
  3959  0000                     _TRISEbits	set	3990
  3960  0000                     _EECON2	set	4007
  3961  0000                     _LATBbits	set	3978
  3962  0000                     _LATAbits	set	3977
  3963  0000                     _TRISAbits	set	3986
  3964  0000                     _LATCbits	set	3979
  3965  0000                     _TRISCbits	set	3988
  3966  0000                     _TRISBbits	set	3987
  3967  0000                     _LATDbits	set	3980
  3968  0000                     _TRISDbits	set	3989
  3969  0000                     _TMR0L	set	4054
  3970  0000                     _TMR0H	set	4055
  3971  0000                     _PIR1bits	set	3998
  3972  0000                     _OSCCON	set	4051
  3973  0000                     _OSCTUNEbits	set	3995
  3974  0000                     _INTCONbits	set	4082
  3975  0000                     _IPR2bits	set	4002
  3976  0000                     _RCONbits	set	4048
  3977  0000                     _UCON	set	3941
  3978  0000                     _USTAT	set	3940
  3979  0000                     _PIR2bits	set	4001
  3980  0000                     _UIRbits	set	3938
  3981  0000                     _UCONbits	set	3941
  3982  0000                     _UIR	set	3938
  3983  0000                     _UEIR	set	3939
  3984  0000                     _PIE2bits	set	4000
  3985  00A1F1                     STR_18:
  3986                           
  3987                           ; BSR set to: 1
  3988  00A1F1  68                 	db	104	;'h'
  3989  00A1F2  65                 	db	101	;'e'
  3990  00A1F3  6C                 	db	108	;'l'
  3991  00A1F4  6C                 	db	108	;'l'
  3992  00A1F5  6F                 	db	111	;'o'
  3993  00A1F6  20                 	db	32
  3994  00A1F7  77                 	db	119	;'w'
  3995  00A1F8  6F                 	db	111	;'o'
  3996  00A1F9  72                 	db	114	;'r'
  3997  00A1FA  6C                 	db	108	;'l'
  3998  00A1FB  64                 	db	100	;'d'
  3999  00A1FC  21                 	db	33
  4000  00A1FD  00                 	db	0
  4001  00A1FE                     STR_15:
  4002                           
  4003                           ; BSR set to: 1
  4004  00A1FE  53                 	db	83	;'S'
  4005  00A1FF  6F                 	db	111	;'o'
  4006  00A200  6C                 	db	108	;'l'
  4007  00A201  61                 	db	97	;'a'
  4008  00A202  72                 	db	114	;'r'
  4009  00A203  43                 	db	67	;'C'
  4010  00A204  68                 	db	104	;'h'
  4011  00A205  61                 	db	97	;'a'
  4012  00A206  72                 	db	114	;'r'
  4013  00A207  67                 	db	103	;'g'
  4014  00A208  72                 	db	114	;'r'
  4015  00A209  00                 	db	0
  4016  00A20A                     STR_16:
  4017                           
  4018                           ; BSR set to: 1
  4019  00A20A  46                 	db	70	;'F'
  4020  00A20B  49                 	db	73	;'I'
  4021  00A20C  4C                 	db	76	;'L'
  4022  00A20D  45                 	db	69	;'E'
  4023  00A20E  20                 	db	32
  4024  00A20F  20                 	db	32
  4025  00A210  20                 	db	32
  4026  00A211  20                 	db	32
  4027  00A212  00                 	db	0
  4028  00A213                     STR_7:
  4029                           
  4030                           ; BSR set to: 1
  4031  00A213  4D                 	db	77	;'M'
  4032  00A214  53                 	db	83	;'S'
  4033  00A215  44                 	db	68	;'D'
  4034  00A216  4F                 	db	79	;'O'
  4035  00A217  53                 	db	83	;'S'
  4036  00A218  35                 	db	53	;'5'
  4037  00A219  2E                 	db	46
  4038  00A21A  30                 	db	48	;'0'
  4039  00A21B  00                 	db	0
  4040  00A21C                     STR_1:
  4041                           
  4042                           ; BSR set to: 1
  4043  00A21C  20                 	db	32
  4044  00A21D  20                 	db	32
  4045  00A21E  20                 	db	32
  4046  00A21F  20                 	db	32
  4047  00A220  20                 	db	32
  4048  00A221  20                 	db	32
  4049  00A222  20                 	db	32
  4050  00A223  20                 	db	32
  4051  00A224  00                 	db	0
  4052  00A225                     STR_2:
  4053                           
  4054                           ; BSR set to: 1
  4055  00A225  43                 	db	67	;'C'
  4056  00A226  61                 	db	97	;'a'
  4057  00A227  6E                 	db	110	;'n'
  4058  00A228  63                 	db	99	;'c'
  4059  00A229  65                 	db	101	;'e'
  4060  00A22A  6C                 	db	108	;'l'
  4061  00A22B  00                 	db	0
  4062  00A22C                     STR_6:
  4063                           
  4064                           ; BSR set to: 1
  4065  00A22C  53                 	db	83	;'S'
  4066  00A22D  74                 	db	116	;'t'
  4067  00A22E  6F                 	db	111	;'o'
  4068  00A22F  70                 	db	112	;'p'
  4069  00A230  20                 	db	32
  4070  00A231  00                 	db	0
  4071  00A232                     STR_17:
  4072                           
  4073                           ; BSR set to: 1
  4074  00A232  54                 	db	84	;'T'
  4075  00A233  58                 	db	88	;'X'
  4076  00A234  54                 	db	84	;'T'
  4077  00A235  00                 	db	0
  4078  0000                     
  4079                           ; #config settings
  4080  00A236  00                 	db	0	; dummy byte at the end
  4081  0000                     
  4082                           	psect	cinit
  4083  01133C                     __pcinit:
  4084                           	opt stack 0
  4085  01133C                     start_initialization:
  4086                           	opt stack 0
  4087  01133C                     __initialization:
  4088                           	opt stack 0
  4089                           
  4090                           ; Initialize objects allocated to BANK2 (80 bytes)
  4091                           ; load TBLPTR registers with __pidataBANK2
  4092  01133C  0E14               	movlw	low __pidataBANK2
  4093  01133E  6EF6               	movwf	tblptrl,c
  4094  011340  0E23               	movlw	high __pidataBANK2
  4095  011342  6EF7               	movwf	tblptrh,c
  4096  011344  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4097  011346  6EF8               	movwf	tblptru,c
  4098  011348  EE02  F078         	lfsr	0,__pdataBANK2
  4099  01134C  EE10 F050          	lfsr	1,80
  4100  011350                     copy_data0:
  4101  011350  0009               	tblrd		*+
  4102  011352  CFF5 FFEE          	movff	tablat,postinc0
  4103  011356  50E5               	movf	postdec1,w,c
  4104  011358  50E1               	movf	fsr1l,w,c
  4105  01135A  E1FA               	bnz	copy_data0
  4106                           
  4107                           ; Initialize objects allocated to BANK1 (55 bytes)
  4108                           ; load TBLPTR registers with __pidataBANK1
  4109  01135C  0E1A               	movlw	low __pidataBANK1
  4110  01135E  6EF6               	movwf	tblptrl,c
  4111  011360  0E28               	movlw	high __pidataBANK1
  4112  011362  6EF7               	movwf	tblptrh,c
  4113  011364  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  4114  011366  6EF8               	movwf	tblptru,c
  4115  011368  EE01  F0A2         	lfsr	0,__pdataBANK1
  4116  01136C  EE10 F037          	lfsr	1,55
  4117  011370                     copy_data1:
  4118  011370  0009               	tblrd		*+
  4119  011372  CFF5 FFEE          	movff	tablat,postinc0
  4120  011376  50E5               	movf	postdec1,w,c
  4121  011378  50E1               	movf	fsr1l,w,c
  4122  01137A  E1FA               	bnz	copy_data1
  4123                           
  4124                           ; Clear objects allocated to BIGRAMll (512 bytes)
  4125  01137C  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4126  011380  EE12 F000          	lfsr	1,512
  4127  011384                     clear_0:
  4128  011384  6AEE               	clrf	postinc0,c
  4129  011386  50E5               	movf	postdec1,w,c
  4130  011388  50E1               	movf	fsr1l,w,c
  4131  01138A  E1FC               	bnz	clear_0
  4132  01138C  50E2               	movf	fsr1h,w,c
  4133  01138E  E1FA               	bnz	clear_0
  4134                           
  4135                           ; Clear objects allocated to BANK3 (64 bytes)
  4136  011390  EE03  F000         	lfsr	0,__pbssBANK3
  4137  011394  0E40               	movlw	64
  4138  011396                     clear_1:
  4139  011396  6AEE               	clrf	postinc0,c
  4140  011398  06E8               	decf	wreg,f,c
  4141  01139A  E1FD               	bnz	clear_1
  4142                           
  4143                           ; Clear objects allocated to BANK2 (120 bytes)
  4144  01139C  EE02  F000         	lfsr	0,__pbssBANK2
  4145  0113A0  0E78               	movlw	120
  4146  0113A2                     clear_2:
  4147  0113A2  6AEE               	clrf	postinc0,c
  4148  0113A4  06E8               	decf	wreg,f,c
  4149  0113A6  E1FD               	bnz	clear_2
  4150                           
  4151                           ; Clear objects allocated to BANK1 (162 bytes)
  4152  0113A8  EE01  F000         	lfsr	0,__pbssBANK1
  4153  0113AC  0EA2               	movlw	162
  4154  0113AE                     clear_3:
  4155  0113AE  6AEE               	clrf	postinc0,c
  4156  0113B0  06E8               	decf	wreg,f,c
  4157  0113B2  E1FD               	bnz	clear_3
  4158                           
  4159                           ; Clear objects allocated to BANK0 (54 bytes)
  4160  0113B4  EE00  F0CA         	lfsr	0,__pbssBANK0
  4161  0113B8  0E36               	movlw	54
  4162  0113BA                     clear_4:
  4163  0113BA  6AEE               	clrf	postinc0,c
  4164  0113BC  06E8               	decf	wreg,f,c
  4165  0113BE  E1FD               	bnz	clear_4
  4166                           
  4167                           ; Clear objects allocated to COMRAM (45 bytes)
  4168  0113C0  EE00  F001         	lfsr	0,__pbssCOMRAM
  4169  0113C4  0E2D               	movlw	45
  4170  0113C6                     clear_5:
  4171  0113C6  6AEE               	clrf	postinc0,c
  4172  0113C8  06E8               	decf	wreg,f,c
  4173  0113CA  E1FD               	bnz	clear_5
  4174  0113CC                     end_of_initialization:
  4175                           	opt stack 0
  4176  0113CC                     __end_of__initialization:
  4177                           	opt stack 0
  4178  0113CC  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4179  0113CE  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4180  0113D0  0100               	movlb	0
  4181  0113D2  EF8F  F077         	goto	_main	;jump to C main() function
  4182                           tblptru	equ	0xFF8
  4183                           tblptrh	equ	0xFF7
  4184                           tblptrl	equ	0xFF6
  4185                           tablat	equ	0xFF5
  4186                           postinc0	equ	0xFEE
  4187                           wreg	equ	0xFE8
  4188                           postdec1	equ	0xFE5
  4189                           fsr1h	equ	0xFE2
  4190                           fsr1l	equ	0xFE1
  4191                           
  4192                           	psect	bssCOMRAM
  4193  000001                     __pbssCOMRAM:
  4194                           	opt stack 0
  4195  000001                     _inPipes:
  4196                           	opt stack 0
  4197  000001                     	ds	6
  4198  000007                     _pBDTEntryIn:
  4199                           	opt stack 0
  4200  000007                     	ds	6
  4201  00000D                     _motor_current_stepcount:
  4202                           	opt stack 0
  4203  00000D                     	ds	4
  4204  000011                     _TransferLength:
  4205                           	opt stack 0
  4206  000011                     	ds	2
  4207  000013                     _USBMSDInHandle:
  4208                           	opt stack 0
  4209  000013                     	ds	2
  4210  000015                     _pBDTEntryEP0OutNext:
  4211                           	opt stack 0
  4212  000015                     	ds	2
  4213  000017                     _pBDTEntryEP0OutCurrent:
  4214                           	opt stack 0
  4215  000017                     	ds	2
  4216  000019                     _enc2:
  4217                           	opt stack 0
  4218  000019                     	ds	1
  4219  00001A                     _enc1:
  4220                           	opt stack 0
  4221  00001A                     	ds	1
  4222  00001B                     _motor_direction:
  4223                           	opt stack 0
  4224  00001B                     	ds	1
  4225  00001C                     _motor_mode:
  4226                           	opt stack 0
  4227  00001C                     	ds	1
  4228  00001D                     _motor_cue_write_index:
  4229                           	opt stack 0
  4230  00001D                     	ds	1
  4231  00001E                     _motor_cue_read_index:
  4232                           	opt stack 0
  4233  00001E                     	ds	1
  4234  00001F                     _power_state:
  4235                           	opt stack 0
  4236  00001F                     	ds	1
  4237  000020                     _MSDWriteState:
  4238                           	opt stack 0
  4239  000020                     	ds	1
  4240  000021                     _MSD_State:
  4241                           	opt stack 0
  4242  000021                     	ds	1
  4243  000022                     _USBStatusStageEnabledFlag1:
  4244                           	opt stack 0
  4245  000022                     	ds	1
  4246  000023                     _USBDeferStatusStagePacket:
  4247                           	opt stack 0
  4248  000023                     	ds	1
  4249  000024                     _USBStatusStageTimeoutCounter:
  4250                           	opt stack 0
  4251  000024                     	ds	1
  4252  000025                     _BothEP0OutUOWNsSet:
  4253                           	opt stack 0
  4254  000025                     	ds	1
  4255  000026                     _endpoint_number:
  4256                           	opt stack 0
  4257  000026                     	ds	1
  4258  000027                     _USBBusIsSuspended:
  4259                           	opt stack 0
  4260  000027                     	ds	1
  4261  000028                     _RemoteWakeup:
  4262                           	opt stack 0
  4263  000028                     	ds	1
  4264  000029                     _controlTransferState:
  4265                           	opt stack 0
  4266  000029                     	ds	1
  4267  00002A                     _shortPacketStatus:
  4268                           	opt stack 0
  4269  00002A                     	ds	1
  4270  00002B                     _USBDeviceState:
  4271                           	opt stack 0
  4272  00002B                     	ds	1
  4273  00002C                     _USTATcopy:
  4274                           	opt stack 0
  4275  00002C                     	ds	1
  4276  00002D                     _USBActiveConfiguration:
  4277                           	opt stack 0
  4278  00002D                     	ds	1
  4279                           tblptru	equ	0xFF8
  4280                           tblptrh	equ	0xFF7
  4281                           tblptrl	equ	0xFF6
  4282                           tablat	equ	0xFF5
  4283                           postinc0	equ	0xFEE
  4284                           wreg	equ	0xFE8
  4285                           postdec1	equ	0xFE5
  4286                           fsr1h	equ	0xFE2
  4287                           fsr1l	equ	0xFE1
  4288                           
  4289                           	psect	bssBANK0
  4290  0000CA                     __pbssBANK0:
  4291                           	opt stack 0
  4292  0000CA                     _motor_current_speed:
  4293                           	opt stack 0
  4294  0000CA                     	ds	2
  4295  0000CC                     _USBMSDOutHandle:
  4296                           	opt stack 0
  4297  0000CC                     	ds	2
  4298  0000CE                     _MSDHostNoData:
  4299                           	opt stack 0
  4300  0000CE                     	ds	1
  4301  0000CF                     _MSDCommandState:
  4302                           	opt stack 0
  4303  0000CF                     	ds	1
  4304  0000D0                     _os:
  4305                           	opt stack 0
  4306  0000D0                     	ds	48
  4307                           tblptru	equ	0xFF8
  4308                           tblptrh	equ	0xFF7
  4309                           tblptrl	equ	0xFF6
  4310                           tablat	equ	0xFF5
  4311                           postinc0	equ	0xFEE
  4312                           wreg	equ	0xFE8
  4313                           postdec1	equ	0xFE5
  4314                           fsr1h	equ	0xFE2
  4315                           fsr1l	equ	0xFE1
  4316                           
  4317                           	psect	bssBANK1
  4318  000100                     __pbssBANK1:
  4319                           	opt stack 0
  4320  000100                     _gblCBW:
  4321                           	opt stack 0
  4322  000100                     	ds	31
  4323  00011F                     _gblSenseData:
  4324                           	opt stack 0
  4325  00011F                     	ds	18
  4326  000131                     _outPipes:
  4327                           	opt stack 0
  4328  000131                     	ds	9
  4329  00013A                     _params:
  4330                           	opt stack 0
  4331  00013A                     	ds	7
  4332  000141                     _pBDTEntryOut:
  4333                           	opt stack 0
  4334  000141                     	ds	6
  4335  000147                     _motor_next_speed_check:
  4336                           	opt stack 0
  4337  000147                     	ds	4
  4338  00014B                     _motor_final_stepcount:
  4339                           	opt stack 0
  4340  00014B                     	ds	4
  4341  00014F                     _gblBLKLen:
  4342                           	opt stack 0
  4343  00014F                     	ds	4
  4344  000153                     _gblNumBLKS:
  4345                           	opt stack 0
  4346  000153                     	ds	4
  4347  000157                     _LBA:
  4348                           	opt stack 0
  4349  000157                     	ds	4
  4350  00015B                     _USB1msTickCount:
  4351                           	opt stack 0
  4352  00015B                     	ds	4
  4353  00015F                     _config_external:
  4354                           	opt stack 0
  4355  00015F                     	ds	3
  4356  000162                     _config_internal:
  4357                           	opt stack 0
  4358  000162                     	ds	3
  4359  000165                     _ep_data_out:
  4360                           	opt stack 0
  4361  000165                     	ds	3
  4362  000168                     _ep_data_in:
  4363                           	opt stack 0
  4364  000168                     	ds	3
  4365  00016B                     _motor_maximum_speed:
  4366                           	opt stack 0
  4367  00016B                     	ds	2
  4368  00016D                     _USBInHandle:
  4369                           	opt stack 0
  4370  00016D                     	ds	2
  4371  00016F                     _USBOutHandle:
  4372                           	opt stack 0
  4373  00016F                     	ds	2
  4374  000171                     _gblMediaPresent:
  4375                           	opt stack 0
  4376  000171                     	ds	2
  4377  000173                     _MSBBufferIndex:
  4378                           	opt stack 0
  4379  000173                     	ds	2
  4380  000175                     _ptrNextData:
  4381                           	opt stack 0
  4382  000175                     	ds	2
  4383  000177                     _pDst:
  4384                           	opt stack 0
  4385  000177                     	ds	2
  4386  000179                     _active_configuration:
  4387                           	opt stack 0
  4388  000179                     	ds	1
  4389  00017A                     _MSDCBWValid:
  4390                           	opt stack 0
  4391  00017A                     	ds	1
  4392  00017B                     _SoftDetach:
  4393                           	opt stack 0
  4394  00017B                     	ds	1
  4395  00017C                     _gblCBWLength:
  4396                           	opt stack 0
  4397  00017C                     	ds	1
  4398  00017D                     _MSDRetryAttempt:
  4399                           	opt stack 0
  4400  00017D                     	ds	1
  4401  00017E                     _MSDReadState:
  4402                           	opt stack 0
  4403  00017E                     	ds	1
  4404  00017F                     _USBTicksSinceSuspendEnd:
  4405                           	opt stack 0
  4406  00017F                     	ds	1
  4407  000180                     _USBDeferOUTDataStagePackets:
  4408                           	opt stack 0
  4409  000180                     	ds	1
  4410  000181                     _USBDeferINDataStagePackets:
  4411                           	opt stack 0
  4412  000181                     	ds	1
  4413  000182                     _USBStatusStageEnabledFlag2:
  4414                           	opt stack 0
  4415  000182                     	ds	1
  4416  000183                     _config:
  4417                           	opt stack 0
  4418  000183                     	ds	22
  4419  000199                     _mediaInformation:
  4420                           	opt stack 0
  4421  000199                     	ds	5
  4422  00019E                     _USBAlternateInterface:
  4423                           	opt stack 0
  4424  00019E                     	ds	2
  4425  0001A0                     _active_protocol:
  4426                           	opt stack 0
  4427  0001A0                     	ds	1
  4428  0001A1                     _idle_rate:
  4429                           	opt stack 0
  4430  0001A1                     	ds	1
  4431                           tblptru	equ	0xFF8
  4432                           tblptrh	equ	0xFF7
  4433                           tblptrl	equ	0xFF6
  4434                           tablat	equ	0xFF5
  4435                           postinc0	equ	0xFEE
  4436                           wreg	equ	0xFE8
  4437                           postdec1	equ	0xFE5
  4438                           fsr1h	equ	0xFE2
  4439                           fsr1l	equ	0xFE1
  4440                           
  4441                           	psect	dataBANK1
  4442  0001A2                     __pdataBANK1:
  4443                           	opt stack 0
  4444  0001A2                     _LUN:
  4445                           	opt stack 0
  4446  0001A2                     	ds	29
  4447  0001BF                     i2c_display_init@F6908:
  4448                           	opt stack 0
  4449  0001BF                     	ds	9
  4450  0001C8                     __i2c_display_send_init_sequence@F6905:
  4451                           	opt stack 0
  4452  0001C8                     	ds	9
  4453  0001D1                     	ds	8
  4454                           tblptru	equ	0xFF8
  4455                           tblptrh	equ	0xFF7
  4456                           tblptrl	equ	0xFF6
  4457                           tablat	equ	0xFF5
  4458                           postinc0	equ	0xFEE
  4459                           wreg	equ	0xFE8
  4460                           postdec1	equ	0xFE5
  4461                           fsr1h	equ	0xFE2
  4462                           fsr1l	equ	0xFE1
  4463                           
  4464                           	psect	bssBANK2
  4465  000200                     __pbssBANK2:
  4466                           	opt stack 0
  4467  000200                     _motor_command_cue:
  4468                           	opt stack 0
  4469  000200                     	ds	56
  4470  000238                     _ReceivedDataBuffer:
  4471                           	opt stack 0
  4472  000238                     	ds	64
  4473                           tblptru	equ	0xFF8
  4474                           tblptrh	equ	0xFF7
  4475                           tblptrl	equ	0xFF6
  4476                           tablat	equ	0xFF5
  4477                           postinc0	equ	0xFEE
  4478                           wreg	equ	0xFE8
  4479                           postdec1	equ	0xFE5
  4480                           fsr1h	equ	0xFE2
  4481                           fsr1l	equ	0xFE1
  4482                           
  4483                           	psect	dataBANK2
  4484  000278                     __pdataBANK2:
  4485                           	opt stack 0
  4486  000278                     _display_content:
  4487                           	opt stack 0
  4488  000278                     	ds	80
  4489                           tblptru	equ	0xFF8
  4490                           tblptrh	equ	0xFF7
  4491                           tblptrl	equ	0xFF6
  4492                           tablat	equ	0xFF5
  4493                           postinc0	equ	0xFEE
  4494                           wreg	equ	0xFE8
  4495                           postdec1	equ	0xFE5
  4496                           fsr1h	equ	0xFE2
  4497                           fsr1l	equ	0xFE1
  4498                           
  4499                           	psect	bssBANK3
  4500  000300                     __pbssBANK3:
  4501                           	opt stack 0
  4502  000300                     _ToSendDataBuffer:
  4503                           	opt stack 0
  4504  000300                     	ds	64
  4505                           tblptru	equ	0xFF8
  4506                           tblptrh	equ	0xFF7
  4507                           tblptrl	equ	0xFF6
  4508                           tablat	equ	0xFF5
  4509                           postinc0	equ	0xFEE
  4510                           wreg	equ	0xFE8
  4511                           postdec1	equ	0xFE5
  4512                           fsr1h	equ	0xFE2
  4513                           fsr1l	equ	0xFE1
  4514                           
  4515                           	psect	bssBIGRAMll
  4516  000800                     __pbssBIGRAMll:
  4517                           	opt stack 0
  4518  000800                     _buffer:
  4519                           	opt stack 0
  4520  000800                     	ds	512
  4521                           tblptru	equ	0xFF8
  4522                           tblptrh	equ	0xFF7
  4523                           tblptrl	equ	0xFF6
  4524                           tablat	equ	0xFF5
  4525                           postinc0	equ	0xFEE
  4526                           wreg	equ	0xFE8
  4527                           postdec1	equ	0xFE5
  4528                           fsr1h	equ	0xFE2
  4529                           fsr1l	equ	0xFE1
  4530                           
  4531                           	psect	cstackBANK1
  4532  0001D9                     __pcstackBANK1:
  4533                           	opt stack 0
  4534  0001D9                     main@tmp:
  4535                           	opt stack 0
  4536                           
  4537                           ; 4 bytes @ 0x0
  4538  0001D9                     	ds	4
  4539                           tblptru	equ	0xFF8
  4540                           tblptrh	equ	0xFF7
  4541                           tblptrl	equ	0xFF6
  4542                           tablat	equ	0xFF5
  4543                           postinc0	equ	0xFEE
  4544                           wreg	equ	0xFE8
  4545                           postdec1	equ	0xFE5
  4546                           fsr1h	equ	0xFE2
  4547                           fsr1l	equ	0xFE1
  4548                           
  4549                           	psect	cstackBANK0
  4550  000060                     __pcstackBANK0:
  4551                           	opt stack 0
  4552  000060                     ??__i2c_wait_idle:
  4553  000060                     ??__display_clear:
  4554  000060                     ??_motor_stop:
  4555  000060                     ??__divide_jump_size_increment:
  4556  000060                     ??__divide_jump_size_decrement:
  4557  000060                     ?_USBTransferOnePacket:
  4558                           	opt stack 0
  4559  000060                     ?_ExternalFlash_MediaInitialize:
  4560                           	opt stack 0
  4561  000060                     ?_ExternalFlash_SectorSizeRead:
  4562                           	opt stack 0
  4563  000060                     ?_strlen:
  4564                           	opt stack 0
  4565  000060                     ?__encoder_next_setup_stepsize:
  4566                           	opt stack 0
  4567  000060                     ?__encoder_next_arc_step_size:
  4568                           	opt stack 0
  4569  000060                     ?___lwdiv:
  4570                           	opt stack 0
  4571  000060                     ?___lwmod:
  4572                           	opt stack 0
  4573  000060                     ?_ExternalFlash_CapacityRead:
  4574                           	opt stack 0
  4575  000060                     ?___lmul:
  4576                           	opt stack 0
  4577  000060                     ?___aldiv:
  4578                           	opt stack 0
  4579  000060                     ?___almod:
  4580                           	opt stack 0
  4581  000060                     ?___fltol:
  4582                           	opt stack 0
  4583  000060                     ?___xxtofl:
  4584                           	opt stack 0
  4585  000060                     USBTransferOnePacket@dir:
  4586                           	opt stack 0
  4587  000060                     USBStallEndpoint@dir:
  4588                           	opt stack 0
  4589  000060                     SYSTEM_Initialize@state:
  4590                           	opt stack 0
  4591  000060                     __i2c_send@dat:
  4592                           	opt stack 0
  4593  000060                     display_get_character@position:
  4594                           	opt stack 0
  4595  000060                     __encoder_next_divide_step_size@old_stepsize:
  4596                           	opt stack 0
  4597  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  4598                           	opt stack 0
  4599  000060                     ExternalFlash_MediaInitialize@config:
  4600                           	opt stack 0
  4601  000060                     ExternalFlash_SectorSizeRead@config:
  4602                           	opt stack 0
  4603  000060                     ExternalFlash_CapacityRead@config:
  4604                           	opt stack 0
  4605  000060                     ExternalFlash_MediaDetect@config:
  4606                           	opt stack 0
  4607  000060                     ExternalFlash_WriteProtectStateGet@config:
  4608                           	opt stack 0
  4609  000060                     ExternalFlash_SectorWrite@config:
  4610                           	opt stack 0
  4611  000060                     __get_mbr@idx:
  4612                           	opt stack 0
  4613  000060                     __get_fbr@idx:
  4614                           	opt stack 0
  4615  000060                     __get_fat@idx:
  4616                           	opt stack 0
  4617  000060                     __get_root@idx:
  4618                           	opt stack 0
  4619  000060                     __get_data@idx:
  4620                           	opt stack 0
  4621  000060                     spi_tx@data:
  4622                           	opt stack 0
  4623  000060                     spi_tx_tx@command:
  4624                           	opt stack 0
  4625  000060                     spi_tx_rx@command:
  4626                           	opt stack 0
  4627  000060                     __fill_buffer_get_mode_details@outBuffer:
  4628                           	opt stack 0
  4629  000060                     motor_change_speed@new_speed:
  4630                           	opt stack 0
  4631  000060                     __encoder_next_setup_stepsize@old_stepsize:
  4632                           	opt stack 0
  4633  000060                     __encoder_next_arc_step_size@old_stepsize:
  4634                           	opt stack 0
  4635  000060                     ___lwdiv@dividend:
  4636                           	opt stack 0
  4637  000060                     ___lwmod@dividend:
  4638                           	opt stack 0
  4639  000060                     memcpy@d1:
  4640                           	opt stack 0
  4641  000060                     memset@p1:
  4642                           	opt stack 0
  4643  000060                     strlen@s:
  4644                           	opt stack 0
  4645  000060                     __spi_init@details:
  4646                           	opt stack 0
  4647  000060                     __motor_run@distance_in_steps:
  4648                           	opt stack 0
  4649  000060                     ___lmul@multiplier:
  4650                           	opt stack 0
  4651  000060                     ___aldiv@dividend:
  4652                           	opt stack 0
  4653  000060                     ___almod@dividend:
  4654                           	opt stack 0
  4655  000060                     ___fltol@f1:
  4656                           	opt stack 0
  4657  000060                     ___xxtofl@val:
  4658                           	opt stack 0
  4659                           
  4660                           ; 4 bytes @ 0x0
  4661  000060                     	ds	1
  4662  000061                     ??_USBStallEndpoint:
  4663  000061                     ??_display_get_character:
  4664  000061                     USBTransferOnePacket@data:
  4665                           	opt stack 0
  4666  000061                     SYSTEM_Initialize@pll_startup_counter:
  4667                           	opt stack 0
  4668                           
  4669                           ; 2 bytes @ 0x1
  4670  000061                     	ds	1
  4671  000062                     ??_MSDComputeDeviceInAndResidue:
  4672  000062                     ??_strlen:
  4673  000062                     ??__fill_buffer_get_mode_details:
  4674  000062                     ??__get_mbr:
  4675  000062                     ??__get_fbr:
  4676  000062                     ??__get_fat:
  4677  000062                     ??__get_root:
  4678  000062                     ??__encoder_next_setup_stepsize:
  4679  000062                     ??__encoder_next_arc_step_size:
  4680  000062                     __display_clear@row:
  4681                           	opt stack 0
  4682  000062                     spi_tx@length:
  4683                           	opt stack 0
  4684  000062                     spi_tx_tx@command_length:
  4685                           	opt stack 0
  4686  000062                     spi_tx_rx@command_length:
  4687                           	opt stack 0
  4688  000062                     ___lwdiv@divisor:
  4689                           	opt stack 0
  4690  000062                     ___lwmod@divisor:
  4691                           	opt stack 0
  4692  000062                     memcpy@s1:
  4693                           	opt stack 0
  4694  000062                     memset@c:
  4695                           	opt stack 0
  4696  000062                     ExternalFlash_SectorWrite@sector_addr:
  4697                           	opt stack 0
  4698                           
  4699                           ; 4 bytes @ 0x2
  4700  000062                     	ds	1
  4701  000063                     USBTransferOnePacket@len:
  4702                           	opt stack 0
  4703  000063                     __display_clear@col:
  4704                           	opt stack 0
  4705  000063                     display_get_character@line:
  4706                           	opt stack 0
  4707  000063                     spi_init@configuration:
  4708                           	opt stack 0
  4709  000063                     SYSTEM_Initialize@pll_startup_counter_3117:
  4710                           	opt stack 0
  4711                           
  4712                           ; 2 bytes @ 0x3
  4713  000063                     	ds	1
  4714  000064                     ??_USBTransferOnePacket:
  4715  000064                     ??_spi_tx:
  4716  000064                     ??___fltol:
  4717  000064                     ??___xxtofl:
  4718  000064                     ___lwdiv@counter:
  4719                           	opt stack 0
  4720  000064                     ___lwmod@counter:
  4721                           	opt stack 0
  4722  000064                     spi_tx_tx@data:
  4723                           	opt stack 0
  4724  000064                     spi_tx_rx@data:
  4725                           	opt stack 0
  4726  000064                     __fill_buffer_get_display@outBuffer:
  4727                           	opt stack 0
  4728  000064                     __motor_run@speed:
  4729                           	opt stack 0
  4730  000064                     memcpy@n:
  4731                           	opt stack 0
  4732  000064                     memset@n:
  4733                           	opt stack 0
  4734  000064                     strlen@cp:
  4735                           	opt stack 0
  4736  000064                     ___lmul@multiplicand:
  4737                           	opt stack 0
  4738  000064                     ___aldiv@divisor:
  4739                           	opt stack 0
  4740  000064                     ___almod@divisor:
  4741                           	opt stack 0
  4742                           
  4743                           ; 4 bytes @ 0x4
  4744  000064                     	ds	1
  4745  000065                     USBStallEndpoint@ep:
  4746                           	opt stack 0
  4747  000065                     __i2c_write@data:
  4748                           	opt stack 0
  4749  000065                     i2c_display_write_fixed@data:
  4750                           	opt stack 0
  4751  000065                     ___lwdiv@quotient:
  4752                           	opt stack 0
  4753                           
  4754                           ; 2 bytes @ 0x5
  4755  000065                     	ds	1
  4756  000066                     ??__motor_run:
  4757  000066                     __fill_buffer_get_display@secondHalf:
  4758                           	opt stack 0
  4759  000066                     memcpy@tmp:
  4760                           	opt stack 0
  4761  000066                     USBStallEndpoint@p:
  4762                           	opt stack 0
  4763  000066                     ExternalFlash_SectorWrite@buffer:
  4764                           	opt stack 0
  4765  000066                     spi_tx_tx@data_length:
  4766                           	opt stack 0
  4767  000066                     spi_tx_rx@data_length:
  4768                           	opt stack 0
  4769  000066                     memset@p:
  4770                           	opt stack 0
  4771                           
  4772                           ; 2 bytes @ 0x6
  4773  000066                     	ds	1
  4774  000067                     ??__fill_buffer_get_display:
  4775  000067                     __i2c_write@length:
  4776                           	opt stack 0
  4777  000067                     i2c_display_write_fixed@length:
  4778                           	opt stack 0
  4779  000067                     utoa@buf:
  4780                           	opt stack 0
  4781  000067                     memcpy@d:
  4782                           	opt stack 0
  4783                           
  4784                           ; 2 bytes @ 0x7
  4785  000067                     	ds	1
  4786  000068                     ??_spi_tx_rx:
  4787  000068                     ??_spi_tx_tx:
  4788  000068                     USBDeviceInit@i:
  4789                           	opt stack 0
  4790  000068                     USBTransferOnePacket@ep:
  4791                           	opt stack 0
  4792  000068                     MSDErrorHandler@ErrorCase:
  4793                           	opt stack 0
  4794  000068                     __i2c_write@slave_address:
  4795                           	opt stack 0
  4796  000068                     i2c_display_write_fixed@pos:
  4797                           	opt stack 0
  4798  000068                     __flash_wakeup@command:
  4799                           	opt stack 0
  4800  000068                     ExternalFlash_SectorWrite@allowWriteToZero:
  4801                           	opt stack 0
  4802  000068                     ___aldiv@counter:
  4803                           	opt stack 0
  4804  000068                     ___almod@counter:
  4805                           	opt stack 0
  4806  000068                     ___fltol@sign1:
  4807                           	opt stack 0
  4808  000068                     ___xxtofl@sign:
  4809                           	opt stack 0
  4810  000068                     ___lmul@product:
  4811                           	opt stack 0
  4812                           
  4813                           ; 4 bytes @ 0x8
  4814  000068                     	ds	1
  4815  000069                     MSDErrorHandler@OldMSD_State:
  4816                           	opt stack 0
  4817  000069                     __i2c_write@cntr:
  4818                           	opt stack 0
  4819  000069                     ___aldiv@sign:
  4820                           	opt stack 0
  4821  000069                     ___almod@sign:
  4822                           	opt stack 0
  4823  000069                     ___fltol@exp1:
  4824                           	opt stack 0
  4825  000069                     ___xxtofl@exp:
  4826                           	opt stack 0
  4827  000069                     USBTransferOnePacket@handle:
  4828                           	opt stack 0
  4829  000069                     utoa@val:
  4830                           	opt stack 0
  4831  000069                     memcpy@s:
  4832                           	opt stack 0
  4833                           
  4834                           ; 2 bytes @ 0x9
  4835  000069                     	ds	1
  4836  00006A                     ??_i2c_display_init:
  4837  00006A                     __ic2_display_set_ddram_address@address:
  4838                           	opt stack 0
  4839  00006A                     __motor_run@direction:
  4840                           	opt stack 0
  4841  00006A                     __ic2_display_set_cgram_address@data_array:
  4842                           	opt stack 0
  4843  00006A                     MSDCheckForErrorCases@DeviceBytes:
  4844                           	opt stack 0
  4845  00006A                     ___aldiv@quotient:
  4846                           	opt stack 0
  4847  00006A                     ___xxtofl@arg:
  4848                           	opt stack 0
  4849                           
  4850                           ; 4 bytes @ 0xA
  4851  00006A                     	ds	1
  4852  00006B                     __ic2_display_set_ddram_address@data_array:
  4853                           	opt stack 0
  4854  00006B                     __fill_buffer_get_status@outBuffer:
  4855                           	opt stack 0
  4856  00006B                     utoa@base:
  4857                           	opt stack 0
  4858  00006B                     i2c_display_init@init_sequence:
  4859                           	opt stack 0
  4860                           
  4861                           ; 9 bytes @ 0xB
  4862  00006B                     	ds	1
  4863  00006C                     ?__flash_get_status:
  4864                           	opt stack 0
  4865  00006C                     __fill_buffer_get_display@cntr:
  4866                           	opt stack 0
  4867                           
  4868                           ; 1 bytes @ 0xC
  4869  00006C                     	ds	1
  4870  00006D                     __ic2_display_set_cgram_address@address:
  4871                           	opt stack 0
  4872  00006D                     i2c_display_cursor@position:
  4873                           	opt stack 0
  4874  00006D                     __fill_buffer_get_display@line:
  4875                           	opt stack 0
  4876  00006D                     utoa@v:
  4877                           	opt stack 0
  4878                           
  4879                           ; 2 bytes @ 0xD
  4880  00006D                     	ds	1
  4881  00006E                     ?___fldiv:
  4882                           	opt stack 0
  4883  00006E                     ?___flmul:
  4884                           	opt stack 0
  4885  00006E                     ?___flneg:
  4886                           	opt stack 0
  4887  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  4888                           	opt stack 0
  4889  00006E                     i2c_display_cursor@line:
  4890                           	opt stack 0
  4891  00006E                     __flash_get_status@command:
  4892                           	opt stack 0
  4893  00006E                     __fill_buffer_get_display@start_line:
  4894                           	opt stack 0
  4895  00006E                     i2c_display_program_custom_character@bit_pattern:
  4896                           	opt stack 0
  4897  00006E                     ___flneg@f1:
  4898                           	opt stack 0
  4899  00006E                     ___fldiv@b:
  4900                           	opt stack 0
  4901  00006E                     ___flmul@b:
  4902                           	opt stack 0
  4903                           
  4904                           ; 4 bytes @ 0xE
  4905  00006E                     	ds	1
  4906  00006F                     MSDCheckForErrorCases@DeviceNoData:
  4907                           	opt stack 0
  4908  00006F                     i2c_display_cursor@address:
  4909                           	opt stack 0
  4910  00006F                     __fill_buffer_get_display@position:
  4911                           	opt stack 0
  4912  00006F                     utoa@c:
  4913                           	opt stack 0
  4914  00006F                     __flash_get_status@status:
  4915                           	opt stack 0
  4916                           
  4917                           ; 2 bytes @ 0xF
  4918  00006F                     	ds	1
  4919  000070                     ??_i2c_display_program_custom_character:
  4920  000070                     MSDCheckForErrorCases@MSDErrorCase:
  4921                           	opt stack 0
  4922  000070                     display_update@line:
  4923                           	opt stack 0
  4924  000070                     api_prepare@inBuffer:
  4925                           	opt stack 0
  4926  000070                     itoa@buf:
  4927                           	opt stack 0
  4928                           
  4929                           ; 2 bytes @ 0x10
  4930  000070                     	ds	1
  4931  000071                     ??_MSDWriteHandler:
  4932  000071                     __flash_is_busy@status:
  4933                           	opt stack 0
  4934                           
  4935                           ; 2 bytes @ 0x11
  4936  000071                     	ds	1
  4937  000072                     ?___fladd:
  4938                           	opt stack 0
  4939  000072                     api_prepare@outBuffer:
  4940                           	opt stack 0
  4941  000072                     itoa@val:
  4942                           	opt stack 0
  4943  000072                     ___fladd@b:
  4944                           	opt stack 0
  4945  000072                     ___fldiv@a:
  4946                           	opt stack 0
  4947  000072                     ___flmul@a:
  4948                           	opt stack 0
  4949                           
  4950                           ; 4 bytes @ 0x12
  4951  000072                     	ds	1
  4952  000073                     __flash_compare_page_to_buffer@page:
  4953                           	opt stack 0
  4954  000073                     __flash_write_to_buffer@start:
  4955                           	opt stack 0
  4956  000073                     __flash_write_page_from_buffer@page:
  4957                           	opt stack 0
  4958  000073                     __flash_partial_read@page:
  4959                           	opt stack 0
  4960  000073                     __flash_set_page_size@command:
  4961                           	opt stack 0
  4962                           
  4963                           ; 4 bytes @ 0x13
  4964  000073                     	ds	1
  4965  000074                     api_prepare@command:
  4966                           	opt stack 0
  4967  000074                     itoa@base:
  4968                           	opt stack 0
  4969  000074                     i2c_display_program_custom_character@data_array:
  4970                           	opt stack 0
  4971                           
  4972                           ; 11 bytes @ 0x14
  4973  000074                     	ds	1
  4974  000075                     __flash_compare_page_to_buffer@buffer:
  4975                           	opt stack 0
  4976  000075                     __flash_write_page_from_buffer@buffer:
  4977                           	opt stack 0
  4978  000075                     __flash_write_to_buffer@data:
  4979                           	opt stack 0
  4980  000075                     __flash_partial_read@start:
  4981                           	opt stack 0
  4982                           
  4983                           ; 2 bytes @ 0x15
  4984  000075                     	ds	1
  4985  000076                     ??___fldiv:
  4986  000076                     ??___flmul:
  4987  000076                     ??__flash_compare_page_to_buffer:
  4988  000076                     ??__flash_write_page_from_buffer:
  4989  000076                     itoa@cp:
  4990                           	opt stack 0
  4991  000076                     ___fladd@a:
  4992                           	opt stack 0
  4993                           
  4994                           ; 4 bytes @ 0x16
  4995  000076                     	ds	1
  4996  000077                     __flash_set_page_size@size:
  4997                           	opt stack 0
  4998  000077                     __flash_write_to_buffer@data_length:
  4999                           	opt stack 0
  5000  000077                     __flash_partial_read@length:
  5001                           	opt stack 0
  5002                           
  5003                           ; 2 bytes @ 0x17
  5004  000077                     	ds	1
  5005  000078                     __display_padded_itoa@value:
  5006                           	opt stack 0
  5007                           
  5008                           ; 2 bytes @ 0x18
  5009  000078                     	ds	1
  5010  000079                     __flash_write_to_buffer@buffer:
  5011                           	opt stack 0
  5012  000079                     __flash_compare_page_to_buffer@status:
  5013                           	opt stack 0
  5014  000079                     __flash_partial_read@data:
  5015                           	opt stack 0
  5016  000079                     __flash_write_page_from_buffer@command:
  5017                           	opt stack 0
  5018                           
  5019                           ; 4 bytes @ 0x19
  5020  000079                     	ds	1
  5021  00007A                     ??___fladd:
  5022  00007A                     __display_padded_itoa@length:
  5023                           	opt stack 0
  5024  00007A                     ___flmul@sign:
  5025                           	opt stack 0
  5026  00007A                     __flash_write_to_buffer@command:
  5027                           	opt stack 0
  5028  00007A                     ___fldiv@rem:
  5029                           	opt stack 0
  5030                           
  5031                           ; 4 bytes @ 0x1A
  5032  00007A                     	ds	1
  5033  00007B                     ??__flash_partial_read:
  5034  00007B                     ___flmul@aexp:
  5035                           	opt stack 0
  5036  00007B                     __display_padded_itoa@text:
  5037                           	opt stack 0
  5038  00007B                     __flash_compare_page_to_buffer@command:
  5039                           	opt stack 0
  5040                           
  5041                           ; 4 bytes @ 0x1B
  5042  00007B                     	ds	1
  5043  00007C                     ___flmul@grs:
  5044                           	opt stack 0
  5045                           
  5046                           ; 4 bytes @ 0x1C
  5047  00007C                     	ds	1
  5048  00007D                     ??__display_padded_itoa:
  5049                           
  5050                           ; 1 bytes @ 0x1D
  5051  00007D                     	ds	1
  5052  00007E                     ___fldiv@sign:
  5053                           	opt stack 0
  5054                           
  5055                           ; 1 bytes @ 0x1E
  5056  00007E                     	ds	1
  5057  00007F                     i2c_display_program_custom_character@address:
  5058                           	opt stack 0
  5059  00007F                     flash_sector_write@page:
  5060                           	opt stack 0
  5061  00007F                     ___fldiv@new_exp:
  5062                           	opt stack 0
  5063  00007F                     __flash_partial_read@command:
  5064                           	opt stack 0
  5065                           
  5066                           ; 4 bytes @ 0x1F
  5067  00007F                     	ds	1
  5068  000080                     i2c_display_program_custom_character@cntr:
  5069                           	opt stack 0
  5070  000080                     ___flmul@bexp:
  5071                           	opt stack 0
  5072                           
  5073                           ; 1 bytes @ 0x20
  5074  000080                     	ds	1
  5075  000081                     flash_sector_write@data:
  5076                           	opt stack 0
  5077  000081                     ___fldiv@grs:
  5078                           	opt stack 0
  5079  000081                     ___flmul@prod:
  5080                           	opt stack 0
  5081                           
  5082                           ; 4 bytes @ 0x21
  5083  000081                     	ds	1
  5084  000082                     ___fladd@signs:
  5085                           	opt stack 0
  5086  000082                     __display_padded_itoa@tmp:
  5087                           	opt stack 0
  5088                           
  5089                           ; 10 bytes @ 0x22
  5090  000082                     	ds	1
  5091  000083                     flash_sector_write@match:
  5092                           	opt stack 0
  5093  000083                     ___fladd@aexp:
  5094                           	opt stack 0
  5095  000083                     __flash_partial_read@address:
  5096                           	opt stack 0
  5097                           
  5098                           ; 4 bytes @ 0x23
  5099  000083                     	ds	1
  5100  000084                     ___fladd@bexp:
  5101                           	opt stack 0
  5102  000084                     fat_format@cntr:
  5103                           	opt stack 0
  5104                           
  5105                           ; 2 bytes @ 0x24
  5106  000084                     	ds	1
  5107  000085                     ___fladd@grs:
  5108                           	opt stack 0
  5109  000085                     ___fldiv@bexp:
  5110                           	opt stack 0
  5111  000085                     ___flmul@temp:
  5112                           	opt stack 0
  5113                           
  5114                           ; 2 bytes @ 0x25
  5115  000085                     	ds	1
  5116  000086                     ___fldiv@aexp:
  5117                           	opt stack 0
  5118                           
  5119                           ; 1 bytes @ 0x26
  5120  000086                     	ds	1
  5121  000087                     ??_adc_read_temperature:
  5122  000087                     ?__motor_get_speed_in_degrees:
  5123                           	opt stack 0
  5124  000087                     ?_motor_steps_from_degrees:
  5125                           	opt stack 0
  5126  000087                     ?__step_position_from_divide_position:
  5127                           	opt stack 0
  5128  000087                     flash_sector_read@page:
  5129                           	opt stack 0
  5130  000087                     motor_steps_from_degrees@degrees:
  5131                           	opt stack 0
  5132  000087                     __motor_get_speed_in_degrees@speed_index:
  5133                           	opt stack 0
  5134  000087                     __step_position_from_divide_position@divide_position:
  5135                           	opt stack 0
  5136                           
  5137                           ; 2 bytes @ 0x27
  5138  000087                     	ds	2
  5139  000089                     ??__motor_get_speed_in_degrees:
  5140  000089                     flash_sector_read@data:
  5141                           	opt stack 0
  5142  000089                     adc_read_temperature@adc_result:
  5143                           	opt stack 0
  5144                           
  5145                           ; 2 bytes @ 0x29
  5146  000089                     	ds	2
  5147  00008B                     ??_fat_get_format_status:
  5148  00008B                     ExternalFlash_SectorRead@config:
  5149                           	opt stack 0
  5150  00008B                     motor_steps_from_degrees@steps:
  5151                           	opt stack 0
  5152  00008B                     __motor_get_speed_in_degrees@speed:
  5153                           	opt stack 0
  5154  00008B                     __step_position_from_divide_position@target_position:
  5155                           	opt stack 0
  5156  00008B                     adc_read_temperature@temperature:
  5157                           	opt stack 0
  5158                           
  5159                           ; 4 bytes @ 0x2B
  5160  00008B                     	ds	1
  5161  00008C                     __display_padded_itoa@len:
  5162                           	opt stack 0
  5163                           
  5164                           ; 1 bytes @ 0x2C
  5165  00008C                     	ds	1
  5166  00008D                     __display_padded_itoa@pos:
  5167                           	opt stack 0
  5168  00008D                     fat_get_format_status@cntr:
  5169                           	opt stack 0
  5170  00008D                     ExternalFlash_SectorRead@sector_addr:
  5171                           	opt stack 0
  5172                           
  5173                           ; 4 bytes @ 0x2D
  5174  00008D                     	ds	1
  5175  00008E                     __display_padded_itoa@padding:
  5176                           	opt stack 0
  5177                           
  5178                           ; 1 bytes @ 0x2E
  5179  00008E                     	ds	1
  5180  00008F                     ?_motor_nonzero_steps_from_degrees:
  5181                           	opt stack 0
  5182  00008F                     __display_signed_itoa@value:
  5183                           	opt stack 0
  5184  00008F                     motor_nonzero_steps_from_degrees@degrees:
  5185                           	opt stack 0
  5186  00008F                     __motor_get_speed_in_degrees@lookup:
  5187                           	opt stack 0
  5188                           
  5189                           ; 4 bytes @ 0x2F
  5190  00008F                     	ds	2
  5191  000091                     __display_signed_itoa@text:
  5192                           	opt stack 0
  5193  000091                     ExternalFlash_SectorRead@buffer:
  5194                           	opt stack 0
  5195                           
  5196                           ; 2 bytes @ 0x31
  5197  000091                     	ds	2
  5198  000093                     ?_motor_speed_from_index:
  5199                           	opt stack 0
  5200  000093                     ExternalFlash_SectorRead@page:
  5201                           	opt stack 0
  5202  000093                     motor_speed_from_index@speed_index:
  5203                           	opt stack 0
  5204  000093                     motor_nonzero_steps_from_degrees@steps:
  5205                           	opt stack 0
  5206                           
  5207                           ; 4 bytes @ 0x33
  5208  000093                     	ds	2
  5209  000095                     ??_MSDReadHandler:
  5210  000095                     __display_itoa@value:
  5211                           	opt stack 0
  5212                           
  5213                           ; 2 bytes @ 0x35
  5214  000095                     	ds	2
  5215  000097                     __display_itoa@decimals:
  5216                           	opt stack 0
  5217  000097                     motor_schedule_command@distance_in_steps:
  5218                           	opt stack 0
  5219                           
  5220                           ; 4 bytes @ 0x37
  5221  000097                     	ds	1
  5222  000098                     __display_itoa@text:
  5223                           	opt stack 0
  5224                           
  5225                           ; 2 bytes @ 0x38
  5226  000098                     	ds	1
  5227  000099                     ??_MSDProcessCommandMediaPresent:
  5228                           
  5229                           ; 1 bytes @ 0x39
  5230  000099                     	ds	1
  5231  00009A                     ??__display_itoa:
  5232                           
  5233                           ; 1 bytes @ 0x3A
  5234  00009A                     	ds	1
  5235  00009B                     _MSDProcessCommandMediaPresent$2606:
  5236                           	opt stack 0
  5237  00009B                     motor_schedule_command@speed:
  5238                           	opt stack 0
  5239                           
  5240                           ; 2 bytes @ 0x3B
  5241  00009B                     	ds	2
  5242  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  5243                           	opt stack 0
  5244  00009D                     motor_schedule_command@direction:
  5245                           	opt stack 0
  5246                           
  5247                           ; 1 bytes @ 0x3D
  5248  00009D                     	ds	1
  5249  00009E                     motor_arc_move@direction:
  5250                           	opt stack 0
  5251  00009E                     __parse_jump_steps@data:
  5252                           	opt stack 0
  5253  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  5254                           	opt stack 0
  5255  00009E                     motor_go_to_steps_position@target_position:
  5256                           	opt stack 0
  5257                           
  5258                           ; 4 bytes @ 0x3E
  5259  00009E                     	ds	1
  5260  00009F                     motor_arc_move@arc_in_steps:
  5261                           	opt stack 0
  5262                           
  5263                           ; 4 bytes @ 0x3F
  5264  00009F                     	ds	1
  5265  0000A0                     __parse_jump_steps@out_buffer:
  5266                           	opt stack 0
  5267  0000A0                     __display_itoa@tmp:
  5268                           	opt stack 0
  5269                           
  5270                           ; 10 bytes @ 0x40
  5271  0000A0                     	ds	2
  5272  0000A2                     ??_motor_go_to_steps_position:
  5273  0000A2                     __parse_jump_steps@out_idx_ptr:
  5274                           	opt stack 0
  5275  0000A2                     MSDProcessCommandMediaPresent@capacity:
  5276                           	opt stack 0
  5277                           
  5278                           ; 4 bytes @ 0x42
  5279  0000A2                     	ds	2
  5280  0000A4                     ??__parse_jump_steps:
  5281                           
  5282                           ; 1 bytes @ 0x44
  5283  0000A4                     	ds	1
  5284  0000A5                     __parse_jump_steps@return_value:
  5285                           	opt stack 0
  5286                           
  5287                           ; 1 bytes @ 0x45
  5288  0000A5                     	ds	1
  5289  0000A6                     MSDProcessCommandMediaPresent@i:
  5290                           	opt stack 0
  5291  0000A6                     __parse_jump_steps@number_of_steps:
  5292                           	opt stack 0
  5293                           
  5294                           ; 4 bytes @ 0x46
  5295  0000A6                     	ds	1
  5296  0000A7                     ??_MSDProcessCommand:
  5297  0000A7                     
  5298                           ; 1 bytes @ 0x47
  5299  0000A7                     	ds	3
  5300  0000AA                     __display_itoa@len:
  5301                           	opt stack 0
  5302  0000AA                     __parse_command_long@data:
  5303                           	opt stack 0
  5304  0000AA                     motor_go_to_steps_position@overhead_cw:
  5305                           	opt stack 0
  5306                           
  5307                           ; 4 bytes @ 0x4A
  5308  0000AA                     	ds	1
  5309  0000AB                     __display_itoa@missing:
  5310                           	opt stack 0
  5311                           
  5312                           ; 1 bytes @ 0x4B
  5313  0000AB                     	ds	1
  5314  0000AC                     ??_MSDTasks:
  5315  0000AC                     __display_itoa@pos:
  5316                           	opt stack 0
  5317  0000AC                     __parse_command_long@out_buffer:
  5318                           	opt stack 0
  5319                           
  5320                           ; 2 bytes @ 0x4C
  5321  0000AC                     	ds	1
  5322  0000AD                     _MSDTasks$2588:
  5323                           	opt stack 0
  5324  0000AD                     __display_itoa_long@value:
  5325                           	opt stack 0
  5326                           
  5327                           ; 4 bytes @ 0x4D
  5328  0000AD                     	ds	1
  5329  0000AE                     __parse_command_long@out_idx_ptr:
  5330                           	opt stack 0
  5331  0000AE                     motor_go_to_steps_position@overhead_ccw:
  5332                           	opt stack 0
  5333                           
  5334                           ; 4 bytes @ 0x4E
  5335  0000AE                     	ds	1
  5336  0000AF                     _MSDTasks$2589:
  5337                           	opt stack 0
  5338                           
  5339                           ; 2 bytes @ 0x4F
  5340  0000AF                     	ds	1
  5341  0000B0                     __parse_command_long@length:
  5342                           	opt stack 0
  5343                           
  5344                           ; 1 bytes @ 0x50
  5345  0000B0                     	ds	1
  5346  0000B1                     MSDTasks@i:
  5347                           	opt stack 0
  5348  0000B1                     __display_itoa_long@decimals:
  5349                           	opt stack 0
  5350                           
  5351                           ; 1 bytes @ 0x51
  5352  0000B1                     	ds	1
  5353  0000B2                     __display_itoa_long@text:
  5354                           	opt stack 0
  5355  0000B2                     motor_go_to_steps_position@distance_cw:
  5356                           	opt stack 0
  5357                           
  5358                           ; 4 bytes @ 0x52
  5359  0000B2                     	ds	2
  5360  0000B4                     ??__display_itoa_long:
  5361                           
  5362                           ; 1 bytes @ 0x54
  5363  0000B4                     	ds	2
  5364  0000B6                     motor_go_to_steps_position@distance_ccw:
  5365                           	opt stack 0
  5366                           
  5367                           ; 4 bytes @ 0x56
  5368  0000B6                     	ds	2
  5369  0000B8                     __display_itoa_long@length:
  5370                           	opt stack 0
  5371                           
  5372                           ; 1 bytes @ 0x58
  5373  0000B8                     	ds	1
  5374  0000B9                     __display_itoa_long@short_value:
  5375                           	opt stack 0
  5376                           
  5377                           ; 2 bytes @ 0x59
  5378  0000B9                     	ds	1
  5379  0000BA                     ??_motor_divide_jump:
  5380  0000BA                     __parse_command_short@cmd:
  5381                           	opt stack 0
  5382  0000BA                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  5383                           	opt stack 0
  5384                           
  5385                           ; 4 bytes @ 0x5A
  5386  0000BA                     	ds	1
  5387  0000BB                     __display_itoa_long@last_digit:
  5388                           	opt stack 0
  5389  0000BB                     api_parse@inBuffer:
  5390                           	opt stack 0
  5391  0000BB                     motor_divide_jump@target_position_in_steps:
  5392                           	opt stack 0
  5393                           
  5394                           ; 4 bytes @ 0x5B
  5395  0000BB                     	ds	1
  5396  0000BC                     ??_display_prepare:
  5397                           
  5398                           ; 1 bytes @ 0x5C
  5399  0000BC                     	ds	1
  5400  0000BD                     api_parse@receivedDataLength:
  5401                           	opt stack 0
  5402                           
  5403                           ; 1 bytes @ 0x5D
  5404  0000BD                     	ds	1
  5405  0000BE                     api_parse@outBuffer:
  5406                           	opt stack 0
  5407  0000BE                     motor_divide_jump_to_nearest@nearest_divide_position:
  5408                           	opt stack 0
  5409  0000BE                     display_prepare@temp:
  5410                           	opt stack 0
  5411                           
  5412                           ; 10 bytes @ 0x5E
  5413  0000BE                     	ds	1
  5414  0000BF                     motor_divide_jump@target_divide_position:
  5415                           	opt stack 0
  5416                           
  5417                           ; 2 bytes @ 0x5F
  5418  0000BF                     	ds	1
  5419  0000C0                     ??_api_parse:
  5420  0000C0                     motor_divide_jump_to_nearest@divide_position_float:
  5421                           	opt stack 0
  5422                           
  5423                           ; 4 bytes @ 0x60
  5424  0000C0                     	ds	2
  5425  0000C2                     api_parse@out_idx_ptr:
  5426                           	opt stack 0
  5427                           
  5428                           ; 2 bytes @ 0x62
  5429  0000C2                     	ds	2
  5430  0000C4                     ??_encoder_statemachine:
  5431  0000C4                     api_parse@out_idx:
  5432                           	opt stack 0
  5433                           
  5434                           ; 1 bytes @ 0x64
  5435  0000C4                     	ds	1
  5436  0000C5                     api_parse@in_idx:
  5437                           	opt stack 0
  5438                           
  5439                           ; 1 bytes @ 0x65
  5440  0000C5                     	ds	1
  5441  0000C6                     
  5442                           ; 1 bytes @ 0x66
  5443  0000C6                     	ds	2
  5444  0000C8                     display_prepare@space:
  5445                           	opt stack 0
  5446                           
  5447                           ; 1 bytes @ 0x68
  5448  0000C8                     	ds	1
  5449  0000C9                     display_prepare@cntr:
  5450                           	opt stack 0
  5451                           
  5452                           ; 1 bytes @ 0x69
  5453  0000C9                     	ds	1
  5454  0000CA                     tblptru	equ	0xFF8
  5455                           tblptrh	equ	0xFF7
  5456                           tblptrl	equ	0xFF6
  5457                           tablat	equ	0xFF5
  5458                           postinc0	equ	0xFEE
  5459                           wreg	equ	0xFE8
  5460                           postdec1	equ	0xFE5
  5461                           fsr1h	equ	0xFE2
  5462                           fsr1l	equ	0xFE1
  5463                           
  5464                           ; 1 bytes @ 0x6A
  5465                           
  5466                           	psect	cstackCOMRAM
  5467  00002E                     __pcstackCOMRAM:
  5468                           	opt stack 0
  5469  00002E                     ??_motor_isr:
  5470  00002E                     ??_USBStdGetDscHandler:
  5471  00002E                     ??_USBStdGetStatusHandler:
  5472  00002E                     ?i2_USBTransferOnePacket:
  5473                           	opt stack 0
  5474  00002E                     ?i2_ExternalFlash_MediaInitialize:
  5475                           	opt stack 0
  5476  00002E                     USBConfigureEndpoint@direction:
  5477                           	opt stack 0
  5478  00002E                     USBCtrlTrfTxService@byteToSend:
  5479                           	opt stack 0
  5480  00002E                     USBCtrlTrfRxService@i:
  5481                           	opt stack 0
  5482  00002E                     i2USBTransferOnePacket@dir:
  5483                           	opt stack 0
  5484  00002E                     i2USBStallEndpoint@dir:
  5485                           	opt stack 0
  5486  00002E                     i2SYSTEM_Initialize@pll_startup_counter:
  5487                           	opt stack 0
  5488  00002E                     i2ExternalFlash_MediaInitialize@config:
  5489                           	opt stack 0
  5490  00002E                     i2ExternalFlash_MediaDetect@config:
  5491                           	opt stack 0
  5492  00002E                     i2memcpy@d1:
  5493                           	opt stack 0
  5494  00002E                     i2memset@p1:
  5495                           	opt stack 0
  5496                           
  5497                           ; 2 bytes @ 0x0
  5498  00002E                     	ds	1
  5499  00002F                     ??_USBConfigureEndpoint:
  5500  00002F                     ??i2_USBStallEndpoint:
  5501  00002F                     USBCtrlTrfRxService@byteToRead:
  5502                           	opt stack 0
  5503  00002F                     USBCtrlTrfInHandler@lastDTS:
  5504                           	opt stack 0
  5505  00002F                     USBStdGetStatusHandler@p:
  5506                           	opt stack 0
  5507  00002F                     i2USBTransferOnePacket@data:
  5508                           	opt stack 0
  5509                           
  5510                           ; 2 bytes @ 0x1
  5511  00002F                     	ds	1
  5512  000030                     i2SYSTEM_Initialize@pll_startup_counter_3117:
  5513                           	opt stack 0
  5514  000030                     i2memcpy@s1:
  5515                           	opt stack 0
  5516  000030                     i2memset@c:
  5517                           	opt stack 0
  5518                           
  5519                           ; 2 bytes @ 0x2
  5520  000030                     	ds	1
  5521  000031                     i2USBTransferOnePacket@len:
  5522                           	opt stack 0
  5523                           
  5524                           ; 1 bytes @ 0x3
  5525  000031                     	ds	1
  5526  000032                     ??i2_USBTransferOnePacket:
  5527  000032                     i2SYSTEM_Initialize@state:
  5528                           	opt stack 0
  5529  000032                     i2memcpy@n:
  5530                           	opt stack 0
  5531  000032                     i2memset@n:
  5532                           	opt stack 0
  5533                           
  5534                           ; 2 bytes @ 0x4
  5535  000032                     	ds	1
  5536  000033                     USBConfigureEndpoint@EPNum:
  5537                           	opt stack 0
  5538  000033                     i2USBStallEndpoint@ep:
  5539                           	opt stack 0
  5540                           
  5541                           ; 1 bytes @ 0x5
  5542  000033                     	ds	1
  5543  000034                     USBConfigureEndpoint@handle:
  5544                           	opt stack 0
  5545  000034                     i2USBStallEndpoint@p:
  5546                           	opt stack 0
  5547  000034                     i2memcpy@d:
  5548                           	opt stack 0
  5549  000034                     i2memset@p:
  5550                           	opt stack 0
  5551                           
  5552                           ; 2 bytes @ 0x6
  5553  000034                     	ds	2
  5554  000036                     USBEnableEndpoint@options:
  5555                           	opt stack 0
  5556  000036                     i2USBDeviceInit@i:
  5557                           	opt stack 0
  5558  000036                     i2USBTransferOnePacket@ep:
  5559                           	opt stack 0
  5560  000036                     i2memcpy@s:
  5561                           	opt stack 0
  5562                           
  5563                           ; 2 bytes @ 0x8
  5564  000036                     	ds	1
  5565  000037                     USBEnableEndpoint@p:
  5566                           	opt stack 0
  5567  000037                     i2USBTransferOnePacket@handle:
  5568                           	opt stack 0
  5569                           
  5570                           ; 2 bytes @ 0x9
  5571  000037                     	ds	1
  5572  000038                     i2memcpy@tmp:
  5573                           	opt stack 0
  5574                           
  5575                           ; 1 bytes @ 0xA
  5576  000038                     	ds	1
  5577  000039                     ??_USBMSDInit:
  5578  000039                     USBEnableEndpoint@ep:
  5579                           	opt stack 0
  5580  000039                     _USBCheckMSDRequest$2534:
  5581                           	opt stack 0
  5582  000039                     MSDTransferTerminated@handle:
  5583                           	opt stack 0
  5584                           
  5585                           ; 2 bytes @ 0xB
  5586  000039                     	ds	1
  5587  00003A                     
  5588                           ; 1 bytes @ 0xC
  5589  00003A                     	ds	1
  5590  00003B                     _USBCheckMSDRequest$2535:
  5591                           	opt stack 0
  5592  00003B                     _MSDTransferTerminated$2623:
  5593                           	opt stack 0
  5594                           
  5595                           ; 2 bytes @ 0xD
  5596  00003B                     	ds	1
  5597  00003C                     
  5598                           ; 1 bytes @ 0xE
  5599  00003C                     	ds	1
  5600  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  5601                           	opt stack 0
  5602                           
  5603                           ; 2 bytes @ 0xF
  5604  00003D                     	ds	1
  5605  00003E                     motor_isr@steps_until_standstill:
  5606                           	opt stack 0
  5607                           
  5608                           ; 2 bytes @ 0x10
  5609  00003E                     	ds	1
  5610  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  5611                           	opt stack 0
  5612                           
  5613                           ; 2 bytes @ 0x11
  5614  00003F                     	ds	1
  5615  000040                     motor_isr@steps_until_standstill_if_accelerate:
  5616                           	opt stack 0
  5617                           
  5618                           ; 2 bytes @ 0x12
  5619  000040                     	ds	1
  5620  000041                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  5621                           	opt stack 0
  5622                           
  5623                           ; 2 bytes @ 0x13
  5624  000041                     	ds	1
  5625  000042                     motor_isr@steps_remaining:
  5626                           	opt stack 0
  5627                           
  5628                           ; 4 bytes @ 0x14
  5629  000042                     	ds	1
  5630  000043                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  5631                           
  5632                           ; 1 bytes @ 0x15
  5633  000043                     	ds	2
  5634  000045                     ??_USBStdFeatureReqHandler:
  5635  000045                     USBStdSetCfgHandler@i:
  5636                           	opt stack 0
  5637                           
  5638                           ; 1 bytes @ 0x17
  5639  000045                     	ds	1
  5640  000046                     USBStdFeatureReqHandler@pUEP:
  5641                           	opt stack 0
  5642                           
  5643                           ; 2 bytes @ 0x18
  5644  000046                     	ds	2
  5645  000048                     USBStdFeatureReqHandler@current_ep_data:
  5646                           	opt stack 0
  5647                           
  5648                           ; 1 bytes @ 0x1A
  5649  000048                     	ds	1
  5650  000049                     USBStdFeatureReqHandler@p:
  5651                           	opt stack 0
  5652                           
  5653                           ; 2 bytes @ 0x1B
  5654  000049                     	ds	2
  5655  00004B                     ??_USBCtrlEPService:
  5656  00004B                     
  5657                           ; 1 bytes @ 0x1D
  5658  00004B                     	ds	1
  5659  00004C                     USBDeviceTasks@i:
  5660                           	opt stack 0
  5661                           
  5662                           ; 1 bytes @ 0x1E
  5663  00004C                     	ds	1
  5664  00004D                     ??_SYS_InterruptHigh:
  5665                           
  5666                           ; 1 bytes @ 0x1F
  5667  00004D                     	ds	14
  5668                           tblptru	equ	0xFF8
  5669                           tblptrh	equ	0xFF7
  5670                           tblptrl	equ	0xFF6
  5671                           tablat	equ	0xFF5
  5672                           postinc0	equ	0xFEE
  5673                           wreg	equ	0xFE8
  5674                           postdec1	equ	0xFE5
  5675                           fsr1h	equ	0xFE2
  5676                           fsr1l	equ	0xFE1
  5677                           
  5678 ;;
  5679 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5680 ;;
  5681 ;; *************** function _main *****************
  5682 ;; Defined at:
  5683 ;;		line 48 in file "main.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;		None
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;  tmp             4    0[BANK1 ] float 
  5688 ;;  startup_time    1    0        unsigned char 
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  1    wreg      void 
  5691 ;; Registers used:
  5692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5699 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5701 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5702 ;;Total ram usage:        4 bytes
  5703 ;; Hardware stack levels required when called:   22
  5704 ;; This function calls:
  5705 ;;		_APP_DeviceCustomHIDTasks
  5706 ;;		_APP_DeviceMSDTasks
  5707 ;;		_SYSTEM_Initialize
  5708 ;;		_USBDeviceAttach
  5709 ;;		_USBDeviceInit
  5710 ;;		___fldiv
  5711 ;;		___flmul
  5712 ;;		___fltol
  5713 ;;		___xxtofl
  5714 ;;		_adc_read_temperature
  5715 ;;		_display_prepare
  5716 ;;		_display_update
  5717 ;;		_encoder_statemachine
  5718 ;;		_motor_process_cue
  5719 ;;		_system_init
  5720 ;; This function is called by:
  5721 ;;		Startup code after reset
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text0
  5726  00EF1E                     __ptext0:
  5727                           	opt stack 0
  5728  00EF1E                     _main:
  5729                           	opt stack 9
  5730                           
  5731                           ;main.c: 50: uint8_t startup_timer;;main.c: 51: float tmp;;main.c: 54: system_init();
  5732                           
  5733                           ;incstack = 0
  5734  00EF1E  EC43  F080         	call	_system_init	;wreg free
  5735                           
  5736                           ;main.c: 56: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  5737  00EF22  0E00               	movlw	0
  5738  00EF24  ECB1  F08F         	call	_SYSTEM_Initialize
  5739                           
  5740                           ;main.c: 58: USBDeviceInit();
  5741  00EF28  EC04  F075         	call	_USBDeviceInit	;wreg free
  5742                           
  5743                           ;main.c: 59: USBDeviceAttach();
  5744  00EF2C  ECAD  F094         	call	_USBDeviceAttach	;wreg free
  5745  00EF30                     
  5746                           ;main.c: 62: {;main.c: 64: APP_DeviceMSDTasks();
  5747  00EF30  EC4B  F096         	call	_APP_DeviceMSDTasks	;wreg free
  5748                           
  5749                           ;main.c: 66: if(!os.done)
  5750  00EF34  0100               	movlb	0	; () banked
  5751  00EF36  51D2               	movf	(_os+2)& (0+255),w,b	;volatile
  5752  00EF38  A4D8               	btfss	status,2,c
  5753  00EF3A  D7FA               	goto	l859
  5754                           
  5755                           ; BSR set to: 0
  5756  00EF3C  0004               	clrwdt		;# 
  5757                           
  5758                           ;main.c: 72: APP_DeviceCustomHIDTasks();
  5759  00EF3E  ECA8  F088         	call	_APP_DeviceCustomHIDTasks	;wreg free
  5760                           
  5761                           ;main.c: 75: encoder_statemachine();
  5762  00EF42  EC40  F057         	call	_encoder_statemachine	;wreg free
  5763                           
  5764                           ;main.c: 78: motor_process_cue();
  5765  00EF46  ECEE  F08C         	call	_motor_process_cue	;wreg free
  5766                           
  5767                           ;main.c: 81: adc_read_temperature();
  5768  00EF4A  EC9E  F06F         	call	_adc_read_temperature	;wreg free
  5769                           
  5770                           ;main.c: 84: switch(os.timeSlot)
  5771  00EF4E  D073               	goto	l861
  5772  00EF50                     
  5773                           ;main.c: 95: tmp = (float) os.current_position_in_steps;
  5774  00EF50  C0D7  F060         	movff	_os+7,___xxtofl@val	;volatile
  5775  00EF54  C0D8  F061         	movff	_os+8,___xxtofl@val+1	;volatile
  5776  00EF58  C0D9  F062         	movff	_os+9,___xxtofl@val+2	;volatile
  5777  00EF5C  C0DA  F063         	movff	_os+10,___xxtofl@val+3	;volatile
  5778  00EF60  0E00               	movlw	0
  5779  00EF62  ECA9  F075         	call	___xxtofl
  5780  00EF66  C060  F1D9         	movff	?___xxtofl,main@tmp
  5781  00EF6A  C061  F1DA         	movff	?___xxtofl+1,main@tmp+1
  5782  00EF6E  C062  F1DB         	movff	?___xxtofl+2,main@tmp+2
  5783  00EF72  C063  F1DC         	movff	?___xxtofl+3,main@tmp+3
  5784                           
  5785                           ;main.c: 96: tmp *= 36000;
  5786  00EF76  C1D9  F06E         	movff	main@tmp,___flmul@b
  5787  00EF7A  C1DA  F06F         	movff	main@tmp+1,___flmul@b+1
  5788  00EF7E  C1DB  F070         	movff	main@tmp+2,___flmul@b+2
  5789  00EF82  C1DC  F071         	movff	main@tmp+3,___flmul@b+3
  5790  00EF86  0E00               	movlw	0
  5791  00EF88  0100               	movlb	0	; () banked
  5792  00EF8A  6F72               	movwf	___flmul@a& (0+255),b
  5793  00EF8C  0EA0               	movlw	160
  5794  00EF8E  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5795  00EF90  0E0C               	movlw	12
  5796  00EF92  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5797  00EF94  0E47               	movlw	71
  5798  00EF96  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5799  00EF98  EC71  F060         	call	___flmul	;wreg free
  5800  00EF9C  C06E  F1D9         	movff	?___flmul,main@tmp
  5801  00EFA0  C06F  F1DA         	movff	?___flmul+1,main@tmp+1
  5802  00EFA4  C070  F1DB         	movff	?___flmul+2,main@tmp+2
  5803  00EFA8  C071  F1DC         	movff	?___flmul+3,main@tmp+3
  5804                           
  5805                           ;main.c: 97: tmp /= config.full_circle_in_steps;
  5806  00EFAC  C1D9  F06E         	movff	main@tmp,___fldiv@b
  5807  00EFB0  C1DA  F06F         	movff	main@tmp+1,___fldiv@b+1
  5808  00EFB4  C1DB  F070         	movff	main@tmp+2,___fldiv@b+2
  5809  00EFB8  C1DC  F071         	movff	main@tmp+3,___fldiv@b+3
  5810  00EFBC  C183  F060         	movff	_config,___xxtofl@val
  5811  00EFC0  C184  F061         	movff	_config+1,___xxtofl@val+1
  5812  00EFC4  C185  F062         	movff	_config+2,___xxtofl@val+2
  5813  00EFC8  C186  F063         	movff	_config+3,___xxtofl@val+3
  5814  00EFCC  0E00               	movlw	0
  5815  00EFCE  ECA9  F075         	call	___xxtofl
  5816  00EFD2  C060  F072         	movff	?___xxtofl,___fldiv@a
  5817  00EFD6  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
  5818  00EFDA  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
  5819  00EFDE  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
  5820  00EFE2  EC95  F066         	call	___fldiv	;wreg free
  5821  00EFE6  C06E  F1D9         	movff	?___fldiv,main@tmp
  5822  00EFEA  C06F  F1DA         	movff	?___fldiv+1,main@tmp+1
  5823  00EFEE  C070  F1DB         	movff	?___fldiv+2,main@tmp+2
  5824  00EFF2  C071  F1DC         	movff	?___fldiv+3,main@tmp+3
  5825                           
  5826                           ;main.c: 99: os.current_position_in_degrees = (uint16_t) tmp;
  5827  00EFF6  C1D9  F060         	movff	main@tmp,___fltol@f1
  5828  00EFFA  C1DA  F061         	movff	main@tmp+1,___fltol@f1+1
  5829  00EFFE  C1DB  F062         	movff	main@tmp+2,___fltol@f1+2
  5830  00F002  C1DC  F063         	movff	main@tmp+3,___fltol@f1+3
  5831  00F006  EC13  F082         	call	___fltol	;wreg free
  5832  00F00A  C060  F0DB         	movff	?___fltol,_os+11	;volatile
  5833  00F00E  C061  F0DC         	movff	?___fltol+1,_os+12	;volatile
  5834                           
  5835                           ;main.c: 100: if(os.current_position_in_degrees==36000)
  5836  00F012  0EA0               	movlw	160
  5837  00F014  0100               	movlb	0	; () banked
  5838  00F016  19DB               	xorwf	(_os+11)& (0+255),w,b	;volatile
  5839  00F018  E108               	bnz	l22750
  5840  00F01A  0E8C               	movlw	140
  5841  00F01C  19DC               	xorwf	(_os+12)& (0+255),w,b	;volatile
  5842  00F01E  A4D8               	btfss	status,2,c
  5843  00F020  D004               	goto	l866
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;main.c: 101: {;main.c: 103: os.current_position_in_degrees = 0;
  5847  00F022  0E00               	movlw	0
  5848  00F024  6FDC               	movwf	(_os+12)& (0+255),b	;volatile
  5849  00F026  0E00               	movlw	0
  5850  00F028  6FDB               	movwf	(_os+11)& (0+255),b	;volatile
  5851  00F02A                     l866:
  5852  00F02A                     l22750:
  5853                           
  5854                           ; BSR set to: 0
  5855                           ;main.c: 107: display_prepare();
  5856  00F02A  EC1C  F051         	call	_display_prepare	;wreg free
  5857                           
  5858                           ;main.c: 108: break;
  5859  00F02E  D014               	goto	l863
  5860  00F030                     
  5861                           ;main.c: 111: display_update();
  5862  00F030  ECD5  F093         	call	_display_update	;wreg free
  5863                           
  5864                           ;main.c: 113: }
  5865                           
  5866                           ;main.c: 112: break;
  5867  00F034  D011               	goto	l863
  5868  00F036                     l861:
  5869  00F036  0100               	movlb	0	; () banked
  5870  00F038  51D1               	movf	(_os+1)& (0+255),w,b	;volatile
  5871                           
  5872                           ; Switch size 1, requested type "space"
  5873                           ; Number of cases is 5, Range of values is 0 to 7
  5874                           ; switch strategies available:
  5875                           ; Name         Instructions Cycles
  5876                           ; simple_byte           16     9 (average)
  5877                           ;	Chosen strategy is simple_byte
  5878  00F03A  0A00               	xorlw	0	; case 0
  5879  00F03C  B4D8               	btfsc	status,2,c
  5880  00F03E  D00C               	goto	l863
  5881  00F040  0A01               	xorlw	1	; case 1
  5882  00F042  B4D8               	btfsc	status,2,c
  5883  00F044  D009               	goto	l863
  5884  00F046  0A04               	xorlw	4	; case 5
  5885  00F048  B4D8               	btfsc	status,2,c
  5886  00F04A  D782               	goto	l865
  5887  00F04C  0A03               	xorlw	3	; case 6
  5888  00F04E  B4D8               	btfsc	status,2,c
  5889  00F050  D7EC               	goto	l866
  5890  00F052  0A01               	xorlw	1	; case 7
  5891  00F054  B4D8               	btfsc	status,2,c
  5892  00F056  D7EC               	goto	l868
  5893  00F058                     l863:
  5894                           
  5895                           ;main.c: 115: os.done = 1;
  5896                           
  5897                           ; BSR set to: 0
  5898  00F058  0E01               	movlw	1
  5899  00F05A  0100               	movlb	0	; () banked
  5900  00F05C  6FD2               	movwf	(_os+2)& (0+255),b	;volatile
  5901                           
  5902                           ; BSR set to: 0
  5903                           
  5904                           ; BSR set to: 0
  5905  00F05E  D768               	goto	l859
  5906  00F060                     __end_of_main:
  5907                           	opt stack 0
  5908                           tblptru	equ	0xFF8
  5909                           tblptrh	equ	0xFF7
  5910                           tblptrl	equ	0xFF6
  5911                           tablat	equ	0xFF5
  5912                           postinc0	equ	0xFEE
  5913                           wreg	equ	0xFE8
  5914                           postdec1	equ	0xFE5
  5915                           fsr1h	equ	0xFE2
  5916                           fsr1l	equ	0xFE1
  5917                           status	equ	0xFD8
  5918                           
  5919 ;; *************** function _system_init *****************
  5920 ;; Defined at:
  5921 ;;		line 194 in file "os.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;		None
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;		None
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      void 
  5928 ;; Registers used:
  5929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5939 ;;Total ram usage:        0 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:   17
  5942 ;; This function calls:
  5943 ;;		__backlight_init
  5944 ;;		__system_pin_setup
  5945 ;;		__system_timer0_init
  5946 ;;		_adc_init
  5947 ;;		_display_init
  5948 ;;		_display_update
  5949 ;;		_encoder_init
  5950 ;;		_fat_init
  5951 ;;		_flash_init
  5952 ;;		_i2c_init
  5953 ;;		_motor_init
  5954 ;; This function is called by:
  5955 ;;		_main
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           	psect	text1
  5960  010086                     __ptext1:
  5961                           	opt stack 0
  5962  010086                     _system_init:
  5963                           	opt stack 13
  5964                           
  5965                           ;os.c: 197: _system_pin_setup();
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;incstack = 0
  5969  010086  ECCF  F08D         	call	__system_pin_setup	;wreg free
  5970                           
  5971                           ;os.c: 200: adc_init();
  5972  01008A  EC37  F090         	call	_adc_init	;wreg free
  5973                           
  5974                           ;os.c: 203: flash_init();
  5975  01008E  EC64  F096         	call	_flash_init	;wreg free
  5976                           
  5977                           ;os.c: 206: fat_init();
  5978  010092  EC54  F096         	call	_fat_init	;wreg free
  5979                           
  5980                           ;os.c: 209: encoder_init();
  5981  010096  ECA6  F095         	call	_encoder_init	;wreg free
  5982                           
  5983                           ;os.c: 212: i2c_init();
  5984  01009A  EC1B  F096         	call	_i2c_init	;wreg free
  5985                           
  5986                           ;os.c: 215: display_init();
  5987  01009E  EC29  F094         	call	_display_init	;wreg free
  5988                           
  5989                           ;os.c: 216: display_update();
  5990  0100A2  ECD5  F093         	call	_display_update	;wreg free
  5991                           
  5992                           ;os.c: 217: _backlight_init();
  5993  0100A6  EC8D  F096         	call	__backlight_init	;wreg free
  5994                           
  5995                           ;os.c: 220: motor_init();
  5996  0100AA  EC0D  F096         	call	_motor_init	;wreg free
  5997                           
  5998                           ;os.c: 223: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  5999  0100AE  0E01               	movlw	1
  6000  0100B0  0100               	movlb	0	; () banked
  6001  0100B2  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;os.c: 224: os.busy = 0;
  6005  0100B4  0E00               	movlw	0
  6006  0100B6  6FDE               	movwf	(_os+14)& (0+255),b	;volatile
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;os.c: 225: os.current_position_in_steps = 0;
  6010  0100B8  0E00               	movlw	0
  6011  0100BA  6FD7               	movwf	(_os+7)& (0+255),b	;volatile
  6012  0100BC  0E00               	movlw	0
  6013  0100BE  6FD8               	movwf	(_os+8)& (0+255),b	;volatile
  6014  0100C0  0E00               	movlw	0
  6015  0100C2  6FD9               	movwf	(_os+9)& (0+255),b	;volatile
  6016  0100C4  0E00               	movlw	0
  6017  0100C6  6FDA               	movwf	(_os+10)& (0+255),b	;volatile
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;os.c: 226: os.last_approach_direction = MOTOR_DIRECTION_CW;
  6021  0100C8  0E01               	movlw	1
  6022  0100CA  6FDF               	movwf	(_os+15)& (0+255),b	;volatile
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;os.c: 227: os.setup_step_size = 1000;
  6026  0100CC  0E03               	movlw	3
  6027  0100CE  6FE1               	movwf	(_os+17)& (0+255),b	;volatile
  6028  0100D0  0EE8               	movlw	232
  6029  0100D2  6FE0               	movwf	(_os+16)& (0+255),b	;volatile
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;os.c: 228: os.approach_direction = MOTOR_DIRECTION_CW;
  6033  0100D4  0E01               	movlw	1
  6034  0100D6  6FE2               	movwf	(_os+18)& (0+255),b	;volatile
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;os.c: 229: os.division = 36;
  6038  0100D8  0E00               	movlw	0
  6039  0100DA  6FE4               	movwf	(_os+20)& (0+255),b	;volatile
  6040  0100DC  0E24               	movlw	36
  6041  0100DE  6FE3               	movwf	(_os+19)& (0+255),b	;volatile
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;os.c: 230: os.divide_step_size = 10;
  6045  0100E0  0E0A               	movlw	10
  6046  0100E2  6FE5               	movwf	(_os+21)& (0+255),b	;volatile
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;os.c: 231: os.divide_position = 0;
  6050  0100E4  0E00               	movlw	0
  6051  0100E6  6FE7               	movwf	(_os+23)& (0+255),b	;volatile
  6052  0100E8  0E00               	movlw	0
  6053  0100EA  6FE6               	movwf	(_os+22)& (0+255),b	;volatile
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;os.c: 232: os.divide_jump_size = 1;
  6057  0100EC  0E00               	movlw	0
  6058  0100EE  6FE9               	movwf	(_os+25)& (0+255),b	;volatile
  6059  0100F0  0E01               	movlw	1
  6060  0100F2  6FE8               	movwf	(_os+24)& (0+255),b	;volatile
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;os.c: 233: os.arc_step_size = 1000;
  6064  0100F4  0E03               	movlw	3
  6065  0100F6  6FEB               	movwf	(_os+27)& (0+255),b	;volatile
  6066  0100F8  0EE8               	movlw	232
  6067  0100FA  6FEA               	movwf	(_os+26)& (0+255),b	;volatile
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;os.c: 234: os.arc_size = 1000;
  6071  0100FC  0EE8               	movlw	232
  6072  0100FE  6FEC               	movwf	(_os+28)& (0+255),b	;volatile
  6073  010100  0E03               	movlw	3
  6074  010102  6FED               	movwf	(_os+29)& (0+255),b	;volatile
  6075  010104  0E00               	movlw	0
  6076  010106  6FEE               	movwf	(_os+30)& (0+255),b	;volatile
  6077  010108  0E00               	movlw	0
  6078  01010A  6FEF               	movwf	(_os+31)& (0+255),b	;volatile
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;os.c: 235: os.arc_speed = 30;
  6082  01010C  0E00               	movlw	0
  6083  01010E  6FF1               	movwf	(_os+33)& (0+255),b	;volatile
  6084  010110  0E1E               	movlw	30
  6085  010112  6FF0               	movwf	(_os+32)& (0+255),b	;volatile
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;os.c: 236: os.arc_direction = MOTOR_DIRECTION_CW;
  6089  010114  0E01               	movlw	1
  6090  010116  6FF2               	movwf	(_os+34)& (0+255),b	;volatile
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;os.c: 237: os.manual_speed = 30;
  6094  010118  0E00               	movlw	0
  6095  01011A  6FF4               	movwf	(_os+36)& (0+255),b	;volatile
  6096  01011C  0E1E               	movlw	30
  6097  01011E  6FF3               	movwf	(_os+35)& (0+255),b	;volatile
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;os.c: 238: os.manual_direction = MOTOR_DIRECTION_CW;
  6101  010120  0E01               	movlw	1
  6102  010122  6FF5               	movwf	(_os+37)& (0+255),b	;volatile
  6103                           
  6104                           ; BSR set to: 0
  6105                           ;os.c: 239: os.beep_count = 0;
  6106  010124  0E00               	movlw	0
  6107  010126  6FF6               	movwf	(_os+38)& (0+255),b	;volatile
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;os.c: 241: config.full_circle_in_steps = 576000;
  6111  010128  0E00               	movlw	0
  6112  01012A  0101               	movlb	1	; () banked
  6113  01012C  6F83               	movwf	_config& (0+255),b
  6114  01012E  0ECA               	movlw	202
  6115  010130  6F84               	movwf	(_config+1)& (0+255),b
  6116  010132  0E08               	movlw	8
  6117  010134  6F85               	movwf	(_config+2)& (0+255),b
  6118  010136  0E00               	movlw	0
  6119  010138  6F86               	movwf	(_config+3)& (0+255),b
  6120                           
  6121                           ; BSR set to: 1
  6122                           ;os.c: 242: config.inverse_direction = 1;
  6123  01013A  0E01               	movlw	1
  6124  01013C  6F87               	movwf	(_config+4)& (0+255),b
  6125                           
  6126                           ; BSR set to: 1
  6127                           ;os.c: 243: config.overshoot_in_steps = 6400;
  6128  01013E  0E19               	movlw	25
  6129  010140  6F89               	movwf	(_config+6)& (0+255),b
  6130  010142  0E00               	movlw	0
  6131  010144  6F88               	movwf	(_config+5)& (0+255),b
  6132                           
  6133                           ; BSR set to: 1
  6134                           ;os.c: 244: config.overshoot_cost_in_steps = 3000;
  6135  010146  0E0B               	movlw	11
  6136  010148  6F8B               	movwf	(_config+8)& (0+255),b
  6137  01014A  0EB8               	movlw	184
  6138  01014C  6F8A               	movwf	(_config+7)& (0+255),b
  6139                           
  6140                           ; BSR set to: 1
  6141                           ;os.c: 245: config.minimum_speed = 1;
  6142  01014E  0E00               	movlw	0
  6143  010150  6F8D               	movwf	(_config+10)& (0+255),b
  6144  010152  0E01               	movlw	1
  6145  010154  6F8C               	movwf	(_config+9)& (0+255),b
  6146                           
  6147                           ; BSR set to: 1
  6148                           ;os.c: 246: config.maximum_speed = 380;
  6149  010156  0E01               	movlw	1
  6150  010158  6F8F               	movwf	(_config+12)& (0+255),b
  6151  01015A  0E7C               	movlw	124
  6152  01015C  6F8E               	movwf	(_config+11)& (0+255),b
  6153                           
  6154                           ; BSR set to: 1
  6155                           ;os.c: 247: config.maximum_speed_arc = 305;
  6156  01015E  0E01               	movlw	1
  6157  010160  6F93               	movwf	(_config+16)& (0+255),b
  6158  010162  0E31               	movlw	49
  6159  010164  6F92               	movwf	(_config+15)& (0+255),b
  6160                           
  6161                           ; BSR set to: 1
  6162                           ;os.c: 248: config.maximum_speed_manual = 305;
  6163  010166  0E01               	movlw	1
  6164  010168  6F97               	movwf	(_config+20)& (0+255),b
  6165  01016A  0E31               	movlw	49
  6166  01016C  6F96               	movwf	(_config+19)& (0+255),b
  6167                           
  6168                           ; BSR set to: 1
  6169                           ;os.c: 249: config.beep_duration = 10;
  6170  01016E  0E0A               	movlw	10
  6171  010170  6F98               	movwf	(_config+21)& (0+255),b
  6172                           
  6173                           ; BSR set to: 1
  6174                           ;os.c: 252: _system_timer0_init();
  6175  010172  EC3C  F095         	call	__system_timer0_init	;wreg free
  6176  010176  0012               	return		;funcret
  6177  010178                     __end_of_system_init:
  6178                           	opt stack 0
  6179                           tblptru	equ	0xFF8
  6180                           tblptrh	equ	0xFF7
  6181                           tblptrl	equ	0xFF6
  6182                           tablat	equ	0xFF5
  6183                           postinc0	equ	0xFEE
  6184                           wreg	equ	0xFE8
  6185                           postdec1	equ	0xFE5
  6186                           fsr1h	equ	0xFE2
  6187                           fsr1l	equ	0xFE1
  6188                           status	equ	0xFD8
  6189                           
  6190 ;; *************** function _motor_init *****************
  6191 ;; Defined at:
  6192 ;;		line 153 in file "motor.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;		None
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;		None
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  1    wreg      void 
  6199 ;; Registers used:
  6200 ;;		wreg, status,2
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/0
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6210 ;;Total ram usage:        0 bytes
  6211 ;; Hardware stack levels used:    1
  6212 ;; Hardware stack levels required when called:   10
  6213 ;; This function calls:
  6214 ;;		Nothing
  6215 ;; This function is called by:
  6216 ;;		_system_init
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           	psect	text2
  6221  012C1A                     __ptext2:
  6222                           	opt stack 0
  6223  012C1A                     _motor_init:
  6224                           	opt stack 19
  6225                           
  6226                           ;motor.c: 156: motor_cue_read_index = 0;
  6227                           
  6228                           ;incstack = 0
  6229  012C1A  0E00               	movlw	0
  6230  012C1C  6E1E               	movwf	_motor_cue_read_index,c
  6231                           
  6232                           ;motor.c: 157: motor_cue_write_index = 0;
  6233  012C1E  0E00               	movlw	0
  6234  012C20  6E1D               	movwf	_motor_cue_write_index,c
  6235                           
  6236                           ;motor.c: 163: CCPTMRS0bits.C2TSEL = 0b000;
  6237  012C22  010F               	movlb	15	; () banked
  6238  012C24  9752               	bcf	82,3,b	;volatile
  6239  012C26  9952               	bcf	82,4,b	;volatile
  6240  012C28  9B52               	bcf	82,5,b	;volatile
  6241                           
  6242                           ;motor.c: 168: CCP1CONbits.P1M = 0b00;
  6243  012C2A  0E3F               	movlw	-193
  6244  012C2C  16BA               	andwf	4026,f,c	;volatile
  6245                           
  6246                           ;motor.c: 171: CCP1CONbits.DC1B = 0b00;
  6247  012C2E  0ECF               	movlw	-49
  6248  012C30  16BA               	andwf	4026,f,c	;volatile
  6249                           
  6250                           ; BSR set to: 15
  6251                           ;motor.c: 174: LATBbits.LB0 = 0;
  6252  012C32  908A               	bcf	3978,0,c	;volatile
  6253                           
  6254                           ; BSR set to: 15
  6255  012C34  0012               	return		;funcret
  6256  012C36                     __end_of_motor_init:
  6257                           	opt stack 0
  6258                           tblptru	equ	0xFF8
  6259                           tblptrh	equ	0xFF7
  6260                           tblptrl	equ	0xFF6
  6261                           tablat	equ	0xFF5
  6262                           postinc0	equ	0xFEE
  6263                           wreg	equ	0xFE8
  6264                           postdec1	equ	0xFE5
  6265                           fsr1h	equ	0xFE2
  6266                           fsr1l	equ	0xFE1
  6267                           status	equ	0xFD8
  6268                           
  6269 ;; *************** function _i2c_init *****************
  6270 ;; Defined at:
  6271 ;;		line 24 in file "i2c.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;		None
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      void 
  6278 ;; Registers used:
  6279 ;;		wreg, status,2
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6289 ;;Total ram usage:        0 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:   10
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_system_init
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           	psect	text3
  6300  012C36                     __ptext3:
  6301                           	opt stack 0
  6302  012C36                     _i2c_init:
  6303                           	opt stack 19
  6304                           
  6305                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  6306                           
  6307                           ; BSR set to: 15
  6308                           ;incstack = 0
  6309  012C36  8A93               	bsf	3987,5,c	;volatile
  6310                           
  6311                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  6312  012C38  8893               	bsf	3987,4,c	;volatile
  6313                           
  6314                           ;i2c.c: 28: SSP1STATbits.SMP = 0;
  6315  012C3A  9EC7               	bcf	4039,7,c	;volatile
  6316                           
  6317                           ;i2c.c: 29: SSP1STATbits.CKE = 0;
  6318  012C3C  9CC7               	bcf	4039,6,c	;volatile
  6319                           
  6320                           ;i2c.c: 31: SSP1ADD = 119;
  6321  012C3E  0E77               	movlw	119
  6322  012C40  6EC8               	movwf	4040,c	;volatile
  6323                           
  6324                           ;i2c.c: 33: SSP1CON1bits.WCOL = 0;
  6325  012C42  9EC6               	bcf	4038,7,c	;volatile
  6326                           
  6327                           ;i2c.c: 34: SSP1CON1bits.SSPOV = 0;
  6328  012C44  9CC6               	bcf	4038,6,c	;volatile
  6329                           
  6330                           ;i2c.c: 35: SSP1CON1bits.SSPM = 0b1000;
  6331  012C46  50C6               	movf	4038,w,c	;volatile
  6332  012C48  0BF0               	andlw	-16
  6333  012C4A  0908               	iorlw	8
  6334  012C4C  6EC6               	movwf	4038,c	;volatile
  6335                           
  6336                           ;i2c.c: 36: SSP1CON1bits.SSPEN = 1;
  6337  012C4E  8AC6               	bsf	4038,5,c	;volatile
  6338  012C50  0012               	return		;funcret
  6339  012C52                     __end_of_i2c_init:
  6340                           	opt stack 0
  6341                           tblptru	equ	0xFF8
  6342                           tblptrh	equ	0xFF7
  6343                           tblptrl	equ	0xFF6
  6344                           tablat	equ	0xFF5
  6345                           postinc0	equ	0xFEE
  6346                           wreg	equ	0xFE8
  6347                           postdec1	equ	0xFE5
  6348                           fsr1h	equ	0xFE2
  6349                           fsr1l	equ	0xFE1
  6350                           status	equ	0xFD8
  6351                           
  6352 ;; *************** function _flash_init *****************
  6353 ;; Defined at:
  6354 ;;		line 361 in file "flash.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;		None
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;		None
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      void 
  6361 ;; Registers used:
  6362 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6372 ;;Total ram usage:        0 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; Hardware stack levels required when called:   14
  6375 ;; This function calls:
  6376 ;;		__flash_set_page_size
  6377 ;;		_spi_init
  6378 ;; This function is called by:
  6379 ;;		_system_init
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           	psect	text4
  6384  012CC8                     __ptext4:
  6385                           	opt stack 0
  6386  012CC8                     _flash_init:
  6387                           	opt stack 15
  6388                           
  6389                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  6390                           
  6391                           ;incstack = 0
  6392  012CC8  0E00               	movlw	0
  6393  012CCA  EC20  F093         	call	_spi_init
  6394                           
  6395                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  6396  012CCE  0E00               	movlw	0
  6397  012CD0  EC98  F08D         	call	__flash_set_page_size
  6398  012CD4  0012               	return		;funcret
  6399  012CD6                     __end_of_flash_init:
  6400                           	opt stack 0
  6401                           tblptru	equ	0xFF8
  6402                           tblptrh	equ	0xFF7
  6403                           tblptrl	equ	0xFF6
  6404                           tablat	equ	0xFF5
  6405                           postinc0	equ	0xFEE
  6406                           wreg	equ	0xFE8
  6407                           postdec1	equ	0xFE5
  6408                           fsr1h	equ	0xFE2
  6409                           fsr1l	equ	0xFE1
  6410                           status	equ	0xFD8
  6411                           
  6412 ;; *************** function _spi_init *****************
  6413 ;; Defined at:
  6414 ;;		line 89 in file "spi.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  configuratio    1    wreg     enum E6801
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;  configuratio    1    3[BANK0 ] enum E6801
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  1    wreg      void 
  6421 ;; Registers used:
  6422 ;;		wreg, status,2, status,0, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6429 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6431 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6432 ;;Total ram usage:        1 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:   11
  6435 ;; This function calls:
  6436 ;;		__spi_init
  6437 ;; This function is called by:
  6438 ;;		_flash_init
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text5
  6443  012640                     __ptext5:
  6444                           	opt stack 0
  6445  012640                     _spi_init:
  6446                           	opt stack 17
  6447                           
  6448                           ;incstack = 0
  6449                           ;spi_init@configuration stored from wreg
  6450  012640  0100               	movlb	0	; () banked
  6451  012642  6F63               	movwf	spi_init@configuration& (0+255),b
  6452                           
  6453                           ;spi.c: 91: switch(configuration)
  6454  012644  D012               	goto	l2111
  6455  012646                     
  6456                           ;spi.c: 94: _spi_init(config_internal);
  6457  012646  C162  F060         	movff	_config_internal,__spi_init@details
  6458  01264A  C163  F061         	movff	_config_internal+1,__spi_init@details+1
  6459  01264E  C164  F062         	movff	_config_internal+2,__spi_init@details+2
  6460  012652  ECB9  F093         	call	__spi_init	;wreg free
  6461                           
  6462                           ;spi.c: 95: break;
  6463  012656  D011               	goto	l2113
  6464  012658                     
  6465                           ;spi.c: 98: _spi_init(config_external);
  6466  012658  C15F  F060         	movff	_config_external,__spi_init@details
  6467  01265C  C160  F061         	movff	_config_external+1,__spi_init@details+1
  6468  012660  C161  F062         	movff	_config_external+2,__spi_init@details+2
  6469  012664  ECB9  F093         	call	__spi_init	;wreg free
  6470                           
  6471                           ;spi.c: 100: }
  6472                           
  6473                           ;spi.c: 99: break;
  6474  012668  D008               	goto	l2113
  6475  01266A                     l2111:
  6476  01266A  0100               	movlb	0	; () banked
  6477  01266C  5163               	movf	spi_init@configuration& (0+255),w,b
  6478                           
  6479                           ; Switch size 1, requested type "space"
  6480                           ; Number of cases is 2, Range of values is 0 to 1
  6481                           ; switch strategies available:
  6482                           ; Name         Instructions Cycles
  6483                           ; simple_byte            7     4 (average)
  6484                           ;	Chosen strategy is simple_byte
  6485  01266E  0A00               	xorlw	0	; case 0
  6486  012670  B4D8               	btfsc	status,2,c
  6487  012672  D7E9               	goto	l2112
  6488  012674  0A01               	xorlw	1	; case 1
  6489  012676  B4D8               	btfsc	status,2,c
  6490  012678  D7EF               	goto	l2114
  6491  01267A                     l2113:
  6492                           
  6493                           ;spi.c: 102: active_configuration = configuration;
  6494  01267A  C063  F179         	movff	spi_init@configuration,_active_configuration
  6495  01267E  0012               	return		;funcret
  6496  012680                     __end_of_spi_init:
  6497                           	opt stack 0
  6498                           tblptru	equ	0xFF8
  6499                           tblptrh	equ	0xFF7
  6500                           tblptrl	equ	0xFF6
  6501                           tablat	equ	0xFF5
  6502                           postinc0	equ	0xFEE
  6503                           wreg	equ	0xFE8
  6504                           postdec1	equ	0xFE5
  6505                           fsr1h	equ	0xFE2
  6506                           fsr1l	equ	0xFE1
  6507                           status	equ	0xFD8
  6508                           
  6509 ;; *************** function __spi_init *****************
  6510 ;; Defined at:
  6511 ;;		line 24 in file "spi.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  details         3    0[BANK0 ] struct .
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;		None
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  1    wreg      void 
  6518 ;; Registers used:
  6519 ;;		wreg, status,2
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6525 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6528 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6529 ;;Total ram usage:        3 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:   10
  6532 ;; This function calls:
  6533 ;;		Nothing
  6534 ;; This function is called by:
  6535 ;;		_spi_init
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text6
  6540  012772                     __ptext6:
  6541                           	opt stack 0
  6542  012772                     __spi_init:
  6543                           	opt stack 17
  6544                           
  6545                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6546                           
  6547                           ;incstack = 0
  6548  012772  0E55               	movlw	85
  6549  012774  6EA7               	movwf	4007,c	;volsfr
  6550  012776  0EAA               	movlw	170
  6551  012778  6EA7               	movwf	4007,c	;volsfr
  6552  01277A  010E               	movlb	14	; () banked
  6553  01277C  91BF               	bcf	191,0,b	;volatile
  6554                           
  6555                           ;spi.c: 31: RPINR21 = 22;
  6556  01277E  0E16               	movlw	22
  6557  012780  6FFC               	movwf	252,b	;volatile
  6558                           
  6559                           ;spi.c: 32: RPOR21 = 10;
  6560  012782  0E0A               	movlw	10
  6561  012784  6FD5               	movwf	213,b	;volatile
  6562                           
  6563                           ;spi.c: 34: RPOR23 = 11;
  6564  012786  0E0B               	movlw	11
  6565  012788  6FD7               	movwf	215,b	;volatile
  6566                           
  6567                           ;spi.c: 35: RPINR22 = 23;
  6568  01278A  0E17               	movlw	23
  6569  01278C  6FFD               	movwf	253,b	;volatile
  6570                           
  6571                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  6572  01278E  0E55               	movlw	85
  6573  012790  6EA7               	movwf	4007,c	;volsfr
  6574  012792  0EAA               	movlw	170
  6575  012794  6EA7               	movwf	4007,c	;volsfr
  6576                           
  6577                           ; BSR set to: 14
  6578  012796  81BF               	bsf	191,0,b	;volatile
  6579                           
  6580                           ; BSR set to: 14
  6581                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  6582  012798  8E73               	bsf	3955,7,c	;volatile
  6583                           
  6584                           ; BSR set to: 14
  6585                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  6586  01279A  8C73               	bsf	3955,6,c	;volatile
  6587                           
  6588                           ; BSR set to: 14
  6589                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  6590  01279C  9872               	bcf	3954,4,c	;volatile
  6591                           
  6592                           ; BSR set to: 14
  6593                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  6594  01279E  9072               	bcf	3954,0,c	;volatile
  6595  0127A0  9272               	bcf	3954,1,c	;volatile
  6596  0127A2  9472               	bcf	3954,2,c	;volatile
  6597  0127A4  9672               	bcf	3954,3,c	;volatile
  6598                           
  6599                           ; BSR set to: 14
  6600                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  6601  0127A6  8A72               	bsf	3954,5,c	;volatile
  6602                           
  6603                           ; BSR set to: 14
  6604  0127A8  0012               	return		;funcret
  6605  0127AA                     __end_of__spi_init:
  6606                           	opt stack 0
  6607                           tblptru	equ	0xFF8
  6608                           tblptrh	equ	0xFF7
  6609                           tblptrl	equ	0xFF6
  6610                           tablat	equ	0xFF5
  6611                           postinc0	equ	0xFEE
  6612                           wreg	equ	0xFE8
  6613                           postdec1	equ	0xFE5
  6614                           fsr1h	equ	0xFE2
  6615                           fsr1l	equ	0xFE1
  6616                           status	equ	0xFD8
  6617                           
  6618 ;; *************** function __flash_set_page_size *****************
  6619 ;; Defined at:
  6620 ;;		line 99 in file "flash.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;  size            1    wreg     enum E6970
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;  size            1   23[BANK0 ] enum E6970
  6625 ;;  command         4   19[BANK0 ] unsigned char [4]
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      void 
  6628 ;; Registers used:
  6629 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6636 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6638 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6639 ;;Total ram usage:        5 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:   13
  6642 ;; This function calls:
  6643 ;;		__flash_is_busy
  6644 ;;		_memcpy
  6645 ;;		_spi_tx
  6646 ;; This function is called by:
  6647 ;;		_flash_init
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text7
  6652  011B30                     __ptext7:
  6653                           	opt stack 0
  6654  011B30                     __flash_set_page_size:
  6655                           	opt stack 15
  6656                           
  6657                           ; BSR set to: 14
  6658                           ;incstack = 0
  6659                           ;__flash_set_page_size@size stored from wreg
  6660  011B30  0100               	movlb	0	; () banked
  6661  011B32  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  6662  011B34                     
  6663                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  6664  011B34  ECDB  F095         	call	__flash_is_busy	;wreg free
  6665  011B38  0900               	iorlw	0
  6666  011B3A  A4D8               	btfss	status,2,c
  6667  011B3C  D7FB               	goto	l19916
  6668                           
  6669                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  6670  011B3E  0100               	movlb	0	; () banked
  6671  011B40  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  6672  011B42  A4D8               	btfss	status,2,c
  6673  011B44  D00E               	goto	l1472
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  6677  011B46  0E73               	movlw	low __flash_set_page_size@command
  6678  011B48  6F60               	movwf	memcpy@d1& (0+255),b
  6679  011B4A  0E00               	movlw	high __flash_set_page_size@command
  6680  011B4C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  6681  011B4E  0EE9               	movlw	low _flash_command_pagesize_512
  6682  011B50  6F62               	movwf	memcpy@s1& (0+255),b
  6683  011B52  0EA1               	movlw	high _flash_command_pagesize_512
  6684  011B54  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  6685  011B56  0E00               	movlw	0
  6686  011B58  6F65               	movwf	(memcpy@n+1)& (0+255),b
  6687  011B5A  0E04               	movlw	4
  6688  011B5C  6F64               	movwf	memcpy@n& (0+255),b
  6689  011B5E  ECC9  F08E         	call	_memcpy	;wreg free
  6690  011B62                     l1472:
  6691                           
  6692                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  6693  011B62  0100               	movlb	0	; () banked
  6694  011B64  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  6695  011B66  A4D8               	btfss	status,2,c
  6696  011B68  D00E               	goto	l1473
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  6700  011B6A  0E73               	movlw	low __flash_set_page_size@command
  6701  011B6C  6F60               	movwf	memcpy@d1& (0+255),b
  6702  011B6E  0E00               	movlw	high __flash_set_page_size@command
  6703  011B70  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  6704  011B72  0EE5               	movlw	low _flash_command_pagesize_528
  6705  011B74  6F62               	movwf	memcpy@s1& (0+255),b
  6706  011B76  0EA1               	movlw	high _flash_command_pagesize_528
  6707  011B78  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  6708  011B7A  0E00               	movlw	0
  6709  011B7C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  6710  011B7E  0E04               	movlw	4
  6711  011B80  6F64               	movwf	memcpy@n& (0+255),b
  6712  011B82  ECC9  F08E         	call	_memcpy	;wreg free
  6713  011B86                     l1473:
  6714                           
  6715                           ;flash.c: 113: spi_tx(command, 4);
  6716  011B86  0E73               	movlw	low __flash_set_page_size@command
  6717  011B88  0100               	movlb	0	; () banked
  6718  011B8A  6F60               	movwf	spi_tx@data& (0+255),b
  6719  011B8C  0E00               	movlw	high __flash_set_page_size@command
  6720  011B8E  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  6721  011B90  0E00               	movlw	0
  6722  011B92  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  6723  011B94  0E04               	movlw	4
  6724  011B96  6F62               	movwf	spi_tx@length& (0+255),b
  6725  011B98  ECDE  F08F         	call	_spi_tx	;wreg free
  6726  011B9C  0012               	return		;funcret
  6727  011B9E                     __end_of__flash_set_page_size:
  6728                           	opt stack 0
  6729                           tblptru	equ	0xFF8
  6730                           tblptrh	equ	0xFF7
  6731                           tblptrl	equ	0xFF6
  6732                           tablat	equ	0xFF5
  6733                           postinc0	equ	0xFEE
  6734                           wreg	equ	0xFE8
  6735                           postdec1	equ	0xFE5
  6736                           fsr1h	equ	0xFE2
  6737                           fsr1l	equ	0xFE1
  6738                           status	equ	0xFD8
  6739                           
  6740 ;; *************** function _fat_init *****************
  6741 ;; Defined at:
  6742 ;;		line 1382 in file "fat16.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;		None
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;		None
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  1    wreg      void 
  6749 ;; Registers used:
  6750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6760 ;;Total ram usage:        0 bytes
  6761 ;; Hardware stack levels used:    1
  6762 ;; Hardware stack levels required when called:   16
  6763 ;; This function calls:
  6764 ;;		_fat_format
  6765 ;;		_fat_get_format_status
  6766 ;; This function is called by:
  6767 ;;		_system_init
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           	psect	text8
  6772  012CA8                     __ptext8:
  6773                           	opt stack 0
  6774  012CA8                     _fat_init:
  6775                           	opt stack 13
  6776                           
  6777                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  6778                           
  6779                           ;incstack = 0
  6780  012CA8  ECA5  F087         	call	_fat_get_format_status	;wreg free
  6781  012CAC  0900               	iorlw	0
  6782  012CAE  A4D8               	btfss	status,2,c
  6783  012CB0  0012               	return	
  6784                           
  6785                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  6786  012CB2  ECA4  F06C         	call	_fat_format	;wreg free
  6787  012CB6  0012               	return	
  6788  012CB8                     __end_of_fat_init:
  6789                           	opt stack 0
  6790                           tblptru	equ	0xFF8
  6791                           tblptrh	equ	0xFF7
  6792                           tblptrl	equ	0xFF6
  6793                           tablat	equ	0xFF5
  6794                           postinc0	equ	0xFEE
  6795                           wreg	equ	0xFE8
  6796                           postdec1	equ	0xFE5
  6797                           fsr1h	equ	0xFE2
  6798                           fsr1l	equ	0xFE1
  6799                           status	equ	0xFD8
  6800                           
  6801 ;; *************** function _fat_get_format_status *****************
  6802 ;; Defined at:
  6803 ;;		line 1292 in file "fat16.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;		None
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  cntr            2   45[BANK0 ] unsigned int 
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  1    wreg      enum E6944
  6810 ;; Registers used:
  6811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6818 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6819 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6820 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6821 ;;Total ram usage:        4 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; Hardware stack levels required when called:   15
  6824 ;; This function calls:
  6825 ;;		__get_fbr
  6826 ;;		__get_mbr
  6827 ;;		_flash_sector_read
  6828 ;; This function is called by:
  6829 ;;		_fat_init
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           	psect	text9
  6834  010F4A                     __ptext9:
  6835                           	opt stack 0
  6836  010F4A                     _fat_get_format_status:
  6837                           	opt stack 13
  6838                           
  6839                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  6840                           
  6841                           ;incstack = 0
  6842  010F4A  0E00               	movlw	0
  6843  010F4C  0100               	movlb	0	; () banked
  6844  010F4E  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  6845  010F50  0E00               	movlw	0
  6846  010F52  6F87               	movwf	flash_sector_read@page& (0+255),b
  6847  010F54  0E00               	movlw	low _buffer
  6848  010F56  6F89               	movwf	flash_sector_read@data& (0+255),b
  6849  010F58  0E08               	movlw	high _buffer
  6850  010F5A  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  6851  010F5C  EC92  F095         	call	_flash_sector_read	;wreg free
  6852                           
  6853                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  6854  010F60  0E00               	movlw	0
  6855  010F62  0100               	movlb	0	; () banked
  6856  010F64  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  6857  010F66  0E00               	movlw	0
  6858  010F68  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  6859  010F6A                     l19946:
  6860                           
  6861                           ; BSR set to: 0
  6862  010F6A  0E02               	movlw	2
  6863  010F6C  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  6864  010F6E  B0D8               	btfsc	status,0,c
  6865  010F70  D017               	goto	u19770
  6866                           
  6867                           ; BSR set to: 0
  6868                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  6869                           
  6870                           ; BSR set to: 0
  6871                           
  6872                           ; BSR set to: 0
  6873  010F72  0E00               	movlw	low _buffer
  6874  010F74  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  6875  010F76  6ED9               	movwf	fsr2l,c
  6876  010F78  0E08               	movlw	high _buffer
  6877  010F7A  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  6878  010F7C  6EDA               	movwf	fsr2h,c
  6879  010F7E  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6880  010F82  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6881  010F86  ECCB  F083         	call	__get_mbr	;wreg free
  6882  010F8A  0100               	movlb	0	; () banked
  6883  010F8C  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  6884  010F8E  50DE               	movf	postinc2,w,c
  6885  010F90  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  6886  010F92  B4D8               	btfsc	status,2,c
  6887  010F94  D002               	goto	l1993
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  6891  010F96  0E00               	movlw	0
  6892                           
  6893                           ; BSR set to: 0
  6894  010F98  0012               	return	
  6895  010F9A                     l1993:
  6896                           
  6897                           ; BSR set to: 0
  6898                           
  6899                           ; BSR set to: 0
  6900  010F9A  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  6901  010F9C  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  6902  010F9E  D7E5               	goto	l19946
  6903  010FA0                     u19770:
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  6907                           
  6908                           ; BSR set to: 0
  6909  010FA0  0E00               	movlw	0
  6910  010FA2  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  6911  010FA4  0E01               	movlw	1
  6912  010FA6  6F87               	movwf	flash_sector_read@page& (0+255),b
  6913  010FA8  0E00               	movlw	low _buffer
  6914  010FAA  6F89               	movwf	flash_sector_read@data& (0+255),b
  6915  010FAC  0E08               	movlw	high _buffer
  6916  010FAE  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  6917  010FB0  EC92  F095         	call	_flash_sector_read	;wreg free
  6918                           
  6919                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  6920  010FB4  0E00               	movlw	0
  6921  010FB6  0100               	movlb	0	; () banked
  6922  010FB8  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  6923  010FBA  0E00               	movlw	0
  6924  010FBC  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  6925  010FBE                     l19964:
  6926                           
  6927                           ; BSR set to: 0
  6928  010FBE  0E02               	movlw	2
  6929  010FC0  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  6930  010FC2  B0D8               	btfsc	status,0,c
  6931  010FC4  D017               	goto	u19800
  6932                           
  6933                           ; BSR set to: 0
  6934                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  6935                           
  6936                           ; BSR set to: 0
  6937                           
  6938                           ; BSR set to: 0
  6939  010FC6  0E00               	movlw	low _buffer
  6940  010FC8  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  6941  010FCA  6ED9               	movwf	fsr2l,c
  6942  010FCC  0E08               	movlw	high _buffer
  6943  010FCE  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  6944  010FD0  6EDA               	movwf	fsr2h,c
  6945  010FD2  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6946  010FD6  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6947  010FDA  EC2E  F069         	call	__get_fbr	;wreg free
  6948  010FDE  0100               	movlb	0	; () banked
  6949  010FE0  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  6950  010FE2  50DE               	movf	postinc2,w,c
  6951  010FE4  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  6952  010FE6  B4D8               	btfsc	status,2,c
  6953  010FE8  D002               	goto	l1997
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  6957  010FEA  0E00               	movlw	0
  6958                           
  6959                           ; BSR set to: 0
  6960  010FEC  0012               	return	
  6961  010FEE                     l1997:
  6962                           
  6963                           ; BSR set to: 0
  6964                           
  6965                           ; BSR set to: 0
  6966  010FEE  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  6967  010FF0  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  6968  010FF2  D7E5               	goto	l19964
  6969  010FF4                     u19800:
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  6973                           
  6974                           ; BSR set to: 0
  6975  010FF4  0E01               	movlw	1
  6976  010FF6  0012               	return	
  6977  010FF8                     __end_of_fat_get_format_status:
  6978                           	opt stack 0
  6979                           tblptru	equ	0xFF8
  6980                           tblptrh	equ	0xFF7
  6981                           tblptrl	equ	0xFF6
  6982                           tablat	equ	0xFF5
  6983                           postinc0	equ	0xFEE
  6984                           wreg	equ	0xFE8
  6985                           postdec1	equ	0xFE5
  6986                           fsr1h	equ	0xFE2
  6987                           fsr1l	equ	0xFE1
  6988                           postinc2	equ	0xFDE
  6989                           fsr2h	equ	0xFDA
  6990                           fsr2l	equ	0xFD9
  6991                           status	equ	0xFD8
  6992                           
  6993 ;; *************** function _fat_format *****************
  6994 ;; Defined at:
  6995 ;;		line 1320 in file "fat16.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;		None
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;  cntr            2   36[BANK0 ] unsigned int 
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  1    wreg      unsigned char 
  7002 ;; Registers used:
  7003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7010 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7012 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7013 ;;Total ram usage:        2 bytes
  7014 ;; Hardware stack levels used:    1
  7015 ;; Hardware stack levels required when called:   15
  7016 ;; This function calls:
  7017 ;;		__get_data
  7018 ;;		__get_fat
  7019 ;;		__get_fbr
  7020 ;;		__get_mbr
  7021 ;;		__get_root
  7022 ;;		_flash_sector_write
  7023 ;; This function is called by:
  7024 ;;		_fat_init
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text10
  7029  00D948                     __ptext10:
  7030                           	opt stack 0
  7031  00D948                     _fat_format:
  7032                           	opt stack 13
  7033                           
  7034                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;incstack = 0
  7038  00D948  0E00               	movlw	0
  7039  00D94A  0100               	movlb	0	; () banked
  7040  00D94C  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7041  00D94E  0E00               	movlw	0
  7042  00D950  6F84               	movwf	fat_format@cntr& (0+255),b
  7043  00D952                     l19984:
  7044                           
  7045                           ; BSR set to: 0
  7046  00D952  0E02               	movlw	2
  7047  00D954  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7048  00D956  B0D8               	btfsc	status,0,c
  7049  00D958  D011               	goto	u19820
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
  7053                           
  7054                           ; BSR set to: 0
  7055                           
  7056                           ; BSR set to: 0
  7057  00D95A  0E00               	movlw	low _buffer
  7058  00D95C  2584               	addwf	fat_format@cntr& (0+255),w,b
  7059  00D95E  6ED9               	movwf	fsr2l,c
  7060  00D960  0E08               	movlw	high _buffer
  7061  00D962  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7062  00D964  6EDA               	movwf	fsr2h,c
  7063  00D966  C084  F060         	movff	fat_format@cntr,__get_mbr@idx
  7064  00D96A  C085  F061         	movff	fat_format@cntr+1,__get_mbr@idx+1
  7065  00D96E  ECCB  F083         	call	__get_mbr	;wreg free
  7066  00D972  6EDF               	movwf	indf2,c
  7067  00D974  0100               	movlb	0	; () banked
  7068  00D976  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7069  00D978  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7070  00D97A  D7EB               	goto	l19984
  7071  00D97C                     u19820:
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
  7075                           
  7076                           ; BSR set to: 0
  7077  00D97C  0E00               	movlw	0
  7078  00D97E  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7079  00D980  0E00               	movlw	0
  7080  00D982  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7081  00D984  0E00               	movlw	low _buffer
  7082  00D986  6F81               	movwf	flash_sector_write@data& (0+255),b
  7083  00D988  0E08               	movlw	high _buffer
  7084  00D98A  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7085  00D98C  ECB2  F091         	call	_flash_sector_write	;wreg free
  7086                           
  7087                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
  7088  00D990  0E00               	movlw	0
  7089  00D992  0100               	movlb	0	; () banked
  7090  00D994  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7091  00D996  0E00               	movlw	0
  7092  00D998  6F84               	movwf	fat_format@cntr& (0+255),b
  7093  00D99A                     l19998:
  7094                           
  7095                           ; BSR set to: 0
  7096  00D99A  0E02               	movlw	2
  7097  00D99C  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7098  00D99E  B0D8               	btfsc	status,0,c
  7099  00D9A0  D011               	goto	u19840
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
  7103                           
  7104                           ; BSR set to: 0
  7105                           
  7106                           ; BSR set to: 0
  7107  00D9A2  0E00               	movlw	low _buffer
  7108  00D9A4  2584               	addwf	fat_format@cntr& (0+255),w,b
  7109  00D9A6  6ED9               	movwf	fsr2l,c
  7110  00D9A8  0E08               	movlw	high _buffer
  7111  00D9AA  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7112  00D9AC  6EDA               	movwf	fsr2h,c
  7113  00D9AE  C084  F060         	movff	fat_format@cntr,__get_fbr@idx
  7114  00D9B2  C085  F061         	movff	fat_format@cntr+1,__get_fbr@idx+1
  7115  00D9B6  EC2E  F069         	call	__get_fbr	;wreg free
  7116  00D9BA  6EDF               	movwf	indf2,c
  7117  00D9BC  0100               	movlb	0	; () banked
  7118  00D9BE  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7119  00D9C0  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7120  00D9C2  D7EB               	goto	l19998
  7121  00D9C4                     u19840:
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
  7125                           
  7126                           ; BSR set to: 0
  7127  00D9C4  0E00               	movlw	0
  7128  00D9C6  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7129  00D9C8  0E01               	movlw	1
  7130  00D9CA  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7131  00D9CC  0E00               	movlw	low _buffer
  7132  00D9CE  6F81               	movwf	flash_sector_write@data& (0+255),b
  7133  00D9D0  0E08               	movlw	high _buffer
  7134  00D9D2  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7135  00D9D4  ECB2  F091         	call	_flash_sector_write	;wreg free
  7136                           
  7137                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
  7138  00D9D8  0E00               	movlw	0
  7139  00D9DA  0100               	movlb	0	; () banked
  7140  00D9DC  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7141  00D9DE  0E00               	movlw	0
  7142  00D9E0  6F84               	movwf	fat_format@cntr& (0+255),b
  7143  00D9E2                     l20012:
  7144                           
  7145                           ; BSR set to: 0
  7146  00D9E2  0E02               	movlw	2
  7147  00D9E4  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7148  00D9E6  B0D8               	btfsc	status,0,c
  7149  00D9E8  D011               	goto	u19860
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
  7153                           
  7154                           ; BSR set to: 0
  7155                           
  7156                           ; BSR set to: 0
  7157  00D9EA  0E00               	movlw	low _buffer
  7158  00D9EC  2584               	addwf	fat_format@cntr& (0+255),w,b
  7159  00D9EE  6ED9               	movwf	fsr2l,c
  7160  00D9F0  0E08               	movlw	high _buffer
  7161  00D9F2  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7162  00D9F4  6EDA               	movwf	fsr2h,c
  7163  00D9F6  C084  F060         	movff	fat_format@cntr,__get_fat@idx
  7164  00D9FA  C085  F061         	movff	fat_format@cntr+1,__get_fat@idx+1
  7165  00D9FE  EC0B  F090         	call	__get_fat	;wreg free
  7166  00DA02  6EDF               	movwf	indf2,c
  7167  00DA04  0100               	movlb	0	; () banked
  7168  00DA06  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7169  00DA08  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7170  00DA0A  D7EB               	goto	l20012
  7171  00DA0C                     u19860:
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
  7175                           
  7176                           ; BSR set to: 0
  7177  00DA0C  0E00               	movlw	0
  7178  00DA0E  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7179  00DA10  0E02               	movlw	2
  7180  00DA12  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7181  00DA14  0E00               	movlw	low _buffer
  7182  00DA16  6F81               	movwf	flash_sector_write@data& (0+255),b
  7183  00DA18  0E08               	movlw	high _buffer
  7184  00DA1A  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7185  00DA1C  ECB2  F091         	call	_flash_sector_write	;wreg free
  7186                           
  7187                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
  7188  00DA20  0E00               	movlw	0
  7189  00DA22  0100               	movlb	0	; () banked
  7190  00DA24  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7191  00DA26  0E00               	movlw	0
  7192  00DA28  6F84               	movwf	fat_format@cntr& (0+255),b
  7193  00DA2A                     l20026:
  7194                           
  7195                           ; BSR set to: 0
  7196  00DA2A  0E02               	movlw	2
  7197  00DA2C  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7198  00DA2E  B0D8               	btfsc	status,0,c
  7199  00DA30  D00B               	goto	u19880
  7200                           
  7201                           ; BSR set to: 0
  7202                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
  7203                           
  7204                           ; BSR set to: 0
  7205                           
  7206                           ; BSR set to: 0
  7207  00DA32  0E00               	movlw	low _buffer
  7208  00DA34  2584               	addwf	fat_format@cntr& (0+255),w,b
  7209  00DA36  6ED9               	movwf	fsr2l,c
  7210  00DA38  0E08               	movlw	high _buffer
  7211  00DA3A  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7212  00DA3C  6EDA               	movwf	fsr2h,c
  7213  00DA3E  0E00               	movlw	0
  7214  00DA40  6EDF               	movwf	indf2,c
  7215                           
  7216                           ; BSR set to: 0
  7217  00DA42  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7218  00DA44  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7219  00DA46  D7F1               	goto	l20026
  7220  00DA48                     u19880:
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
  7224                           
  7225                           ; BSR set to: 0
  7226  00DA48  0E00               	movlw	0
  7227  00DA4A  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7228  00DA4C  0E03               	movlw	3
  7229  00DA4E  6F84               	movwf	fat_format@cntr& (0+255),b
  7230  00DA50                     l20038:
  7231                           
  7232                           ; BSR set to: 0
  7233  00DA50  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  7234  00DA52  E112               	bnz	l20048
  7235  00DA54  0E22               	movlw	34
  7236  00DA56  5D84               	subwf	fat_format@cntr& (0+255),w,b
  7237  00DA58  B0D8               	btfsc	status,0,c
  7238  00DA5A  D00E               	goto	u19900
  7239                           
  7240                           ; BSR set to: 0
  7241                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
  7242                           
  7243                           ; BSR set to: 0
  7244                           
  7245                           ; BSR set to: 0
  7246  00DA5C  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  7247  00DA60  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  7248  00DA64  0E00               	movlw	low _buffer
  7249  00DA66  6F81               	movwf	flash_sector_write@data& (0+255),b
  7250  00DA68  0E08               	movlw	high _buffer
  7251  00DA6A  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7252  00DA6C  ECB2  F091         	call	_flash_sector_write	;wreg free
  7253  00DA70  0100               	movlb	0	; () banked
  7254  00DA72  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7255  00DA74  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7256  00DA76  D7EC               	goto	l20038
  7257  00DA78                     u19900:
  7258  00DA78                     l20048:
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
  7262  00DA78  0E00               	movlw	0
  7263  00DA7A  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7264  00DA7C  0E00               	movlw	0
  7265  00DA7E  6F84               	movwf	fat_format@cntr& (0+255),b
  7266  00DA80                     l20050:
  7267                           
  7268                           ; BSR set to: 0
  7269  00DA80  0E02               	movlw	2
  7270  00DA82  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7271  00DA84  B0D8               	btfsc	status,0,c
  7272  00DA86  D011               	goto	u19920
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
  7276                           
  7277                           ; BSR set to: 0
  7278                           
  7279                           ; BSR set to: 0
  7280  00DA88  0E00               	movlw	low _buffer
  7281  00DA8A  2584               	addwf	fat_format@cntr& (0+255),w,b
  7282  00DA8C  6ED9               	movwf	fsr2l,c
  7283  00DA8E  0E08               	movlw	high _buffer
  7284  00DA90  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7285  00DA92  6EDA               	movwf	fsr2h,c
  7286  00DA94  C084  F060         	movff	fat_format@cntr,__get_root@idx
  7287  00DA98  C085  F061         	movff	fat_format@cntr+1,__get_root@idx+1
  7288  00DA9C  EC6F  F071         	call	__get_root	;wreg free
  7289  00DAA0  6EDF               	movwf	indf2,c
  7290  00DAA2  0100               	movlb	0	; () banked
  7291  00DAA4  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7292  00DAA6  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7293  00DAA8  D7EB               	goto	l20050
  7294  00DAAA                     u19920:
  7295                           
  7296                           ; BSR set to: 0
  7297                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
  7298                           
  7299                           ; BSR set to: 0
  7300  00DAAA  0E00               	movlw	0
  7301  00DAAC  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7302  00DAAE  0E22               	movlw	34
  7303  00DAB0  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7304  00DAB2  0E00               	movlw	low _buffer
  7305  00DAB4  6F81               	movwf	flash_sector_write@data& (0+255),b
  7306  00DAB6  0E08               	movlw	high _buffer
  7307  00DAB8  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7308  00DABA  ECB2  F091         	call	_flash_sector_write	;wreg free
  7309                           
  7310                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
  7311  00DABE  0E00               	movlw	0
  7312  00DAC0  0100               	movlb	0	; () banked
  7313  00DAC2  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7314  00DAC4  0E00               	movlw	0
  7315  00DAC6  6F84               	movwf	fat_format@cntr& (0+255),b
  7316  00DAC8                     l20064:
  7317                           
  7318                           ; BSR set to: 0
  7319  00DAC8  0E02               	movlw	2
  7320  00DACA  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7321  00DACC  B0D8               	btfsc	status,0,c
  7322  00DACE  D00B               	goto	u19940
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
  7326                           
  7327                           ; BSR set to: 0
  7328                           
  7329                           ; BSR set to: 0
  7330  00DAD0  0E00               	movlw	low _buffer
  7331  00DAD2  2584               	addwf	fat_format@cntr& (0+255),w,b
  7332  00DAD4  6ED9               	movwf	fsr2l,c
  7333  00DAD6  0E08               	movlw	high _buffer
  7334  00DAD8  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7335  00DADA  6EDA               	movwf	fsr2h,c
  7336  00DADC  0E00               	movlw	0
  7337  00DADE  6EDF               	movwf	indf2,c
  7338                           
  7339                           ; BSR set to: 0
  7340  00DAE0  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7341  00DAE2  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7342  00DAE4  D7F1               	goto	l20064
  7343  00DAE6                     u19940:
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
  7347                           
  7348                           ; BSR set to: 0
  7349  00DAE6  0E00               	movlw	0
  7350  00DAE8  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7351  00DAEA  0E23               	movlw	35
  7352  00DAEC  6F84               	movwf	fat_format@cntr& (0+255),b
  7353  00DAEE                     l20076:
  7354                           
  7355                           ; BSR set to: 0
  7356  00DAEE  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  7357  00DAF0  E112               	bnz	l20086
  7358  00DAF2  0E26               	movlw	38
  7359  00DAF4  5D84               	subwf	fat_format@cntr& (0+255),w,b
  7360  00DAF6  B0D8               	btfsc	status,0,c
  7361  00DAF8  D00E               	goto	u19960
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
  7365                           
  7366                           ; BSR set to: 0
  7367                           
  7368                           ; BSR set to: 0
  7369  00DAFA  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  7370  00DAFE  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  7371  00DB02  0E00               	movlw	low _buffer
  7372  00DB04  6F81               	movwf	flash_sector_write@data& (0+255),b
  7373  00DB06  0E08               	movlw	high _buffer
  7374  00DB08  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7375  00DB0A  ECB2  F091         	call	_flash_sector_write	;wreg free
  7376  00DB0E  0100               	movlb	0	; () banked
  7377  00DB10  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7378  00DB12  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7379  00DB14  D7EC               	goto	l20076
  7380  00DB16                     u19960:
  7381  00DB16                     l20086:
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
  7385  00DB16  0E00               	movlw	0
  7386  00DB18  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  7387  00DB1A  0E00               	movlw	0
  7388  00DB1C  6F84               	movwf	fat_format@cntr& (0+255),b
  7389  00DB1E                     l20088:
  7390                           
  7391                           ; BSR set to: 0
  7392  00DB1E  0E02               	movlw	2
  7393  00DB20  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  7394  00DB22  B0D8               	btfsc	status,0,c
  7395  00DB24  D011               	goto	u19980
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
  7399                           
  7400                           ; BSR set to: 0
  7401                           
  7402                           ; BSR set to: 0
  7403  00DB26  0E00               	movlw	low _buffer
  7404  00DB28  2584               	addwf	fat_format@cntr& (0+255),w,b
  7405  00DB2A  6ED9               	movwf	fsr2l,c
  7406  00DB2C  0E08               	movlw	high _buffer
  7407  00DB2E  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  7408  00DB30  6EDA               	movwf	fsr2h,c
  7409  00DB32  C084  F060         	movff	fat_format@cntr,__get_data@idx
  7410  00DB36  C085  F061         	movff	fat_format@cntr+1,__get_data@idx+1
  7411  00DB3A  EC68  F095         	call	__get_data	;wreg free
  7412  00DB3E  6EDF               	movwf	indf2,c
  7413  00DB40  0100               	movlb	0	; () banked
  7414  00DB42  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  7415  00DB44  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  7416  00DB46  D7EB               	goto	l20088
  7417  00DB48                     u19980:
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
  7421                           
  7422                           ; BSR set to: 0
  7423  00DB48  0E00               	movlw	0
  7424  00DB4A  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  7425  00DB4C  0E26               	movlw	38
  7426  00DB4E  6F7F               	movwf	flash_sector_write@page& (0+255),b
  7427  00DB50  0E00               	movlw	low _buffer
  7428  00DB52  6F81               	movwf	flash_sector_write@data& (0+255),b
  7429  00DB54  0E08               	movlw	high _buffer
  7430  00DB56  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  7431  00DB58  ECB2  F091         	call	_flash_sector_write	;wreg free
  7432  00DB5C  0012               	return	
  7433  00DB5E                     __end_of_fat_format:
  7434                           	opt stack 0
  7435                           tblptru	equ	0xFF8
  7436                           tblptrh	equ	0xFF7
  7437                           tblptrl	equ	0xFF6
  7438                           tablat	equ	0xFF5
  7439                           postinc0	equ	0xFEE
  7440                           wreg	equ	0xFE8
  7441                           postdec1	equ	0xFE5
  7442                           fsr1h	equ	0xFE2
  7443                           fsr1l	equ	0xFE1
  7444                           indf2	equ	0xFDF
  7445                           postinc2	equ	0xFDE
  7446                           fsr2h	equ	0xFDA
  7447                           fsr2l	equ	0xFD9
  7448                           status	equ	0xFD8
  7449                           
  7450 ;; *************** function _flash_sector_write *****************
  7451 ;; Defined at:
  7452 ;;		line 434 in file "flash.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  page            2   31[BANK0 ] unsigned int 
  7455 ;;  data            2   33[BANK0 ] PTR unsigned char 
  7456 ;;		 -> buffer(512), 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  match           1   35[BANK0 ] enum E6978
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, status,2, status,0, cstack
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7468 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7471 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7472 ;;Total ram usage:        5 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:   14
  7475 ;; This function calls:
  7476 ;;		__flash_compare_page_to_buffer
  7477 ;;		__flash_write_page_from_buffer
  7478 ;;		__flash_write_to_buffer
  7479 ;; This function is called by:
  7480 ;;		_fat_format
  7481 ;;		__make_cluster_chain
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           	psect	text11
  7486  012364                     __ptext11:
  7487                           	opt stack 0
  7488  012364                     _flash_sector_write:
  7489                           	opt stack 13
  7490                           
  7491                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
  7492                           
  7493                           ;incstack = 0
  7494  012364  0E00               	movlw	0
  7495  012366  0100               	movlb	0	; () banked
  7496  012368  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
  7497  01236A  0E00               	movlw	0
  7498  01236C  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
  7499  01236E  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
  7500  012372  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
  7501  012376  0E02               	movlw	2
  7502  012378  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
  7503  01237A  0E00               	movlw	0
  7504  01237C  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
  7505  01237E  0E00               	movlw	0
  7506  012380  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
  7507  012382  EC38  F091         	call	__flash_write_to_buffer	;wreg free
  7508                           
  7509                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
  7510  012386  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
  7511  01238A  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
  7512  01238E  0E00               	movlw	0
  7513  012390  0100               	movlb	0	; () banked
  7514  012392  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
  7515  012394  EC35  F08C         	call	__flash_compare_page_to_buffer	;wreg free
  7516  012398  0100               	movlb	0	; () banked
  7517  01239A  6F83               	movwf	flash_sector_write@match& (0+255),b
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
  7521  01239C  0583               	decf	flash_sector_write@match& (0+255),w,b
  7522  01239E  A4D8               	btfss	status,2,c
  7523  0123A0  0012               	return	
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
  7527  0123A2  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
  7528  0123A6  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
  7529  0123AA  0E00               	movlw	0
  7530  0123AC  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
  7531  0123AE  EC84  F08F         	call	__flash_write_page_from_buffer	;wreg free
  7532  0123B2  0012               	return	
  7533  0123B4                     __end_of_flash_sector_write:
  7534                           	opt stack 0
  7535                           tblptru	equ	0xFF8
  7536                           tblptrh	equ	0xFF7
  7537                           tblptrl	equ	0xFF6
  7538                           tablat	equ	0xFF5
  7539                           postinc0	equ	0xFEE
  7540                           wreg	equ	0xFE8
  7541                           postdec1	equ	0xFE5
  7542                           fsr1h	equ	0xFE2
  7543                           fsr1l	equ	0xFE1
  7544                           indf2	equ	0xFDF
  7545                           postinc2	equ	0xFDE
  7546                           fsr2h	equ	0xFDA
  7547                           fsr2l	equ	0xFD9
  7548                           status	equ	0xFD8
  7549                           
  7550 ;; *************** function __flash_write_to_buffer *****************
  7551 ;; Defined at:
  7552 ;;		line 236 in file "flash.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  start           2   19[BANK0 ] unsigned int 
  7555 ;;  data            2   21[BANK0 ] PTR unsigned char 
  7556 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
  7557 ;;		 -> buffer(512), 
  7558 ;;  data_length     2   23[BANK0 ] unsigned int 
  7559 ;;  buffer          1   25[BANK0 ] enum E6974
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  command         4   26[BANK0 ] unsigned char [4]
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  1    wreg      void 
  7564 ;; Registers used:
  7565 ;;		wreg, status,2, status,0, cstack
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7571 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7572 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7574 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7575 ;;Total ram usage:       11 bytes
  7576 ;; Hardware stack levels used:    1
  7577 ;; Hardware stack levels required when called:   13
  7578 ;; This function calls:
  7579 ;;		__flash_is_busy
  7580 ;;		_spi_tx_tx
  7581 ;; This function is called by:
  7582 ;;		_flash_sector_write
  7583 ;;		_flash_partial_write
  7584 ;;		_flash_write_to_buffer
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           	psect	text12
  7589  012270                     __ptext12:
  7590                           	opt stack 0
  7591  012270                     __flash_write_to_buffer:
  7592                           	opt stack 13
  7593                           
  7594                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
  7595                           
  7596                           ;incstack = 0
  7597  012270  ECDB  F095         	call	__flash_is_busy	;wreg free
  7598  012274  0900               	iorlw	0
  7599  012276  A4D8               	btfss	status,2,c
  7600  012278  D7FB               	goto	__flash_write_to_buffer
  7601                           
  7602                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
  7603  01227A  0100               	movlb	0	; () banked
  7604  01227C  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
  7605  01227E  A4D8               	btfss	status,2,c
  7606  012280  D002               	goto	l1517
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;flash.c: 245: command[0] = 0x84;
  7610  012282  0E84               	movlw	132
  7611  012284  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
  7612  012286                     l1517:
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
  7616                           
  7617                           ; BSR set to: 0
  7618  012286  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
  7619  012288  A4D8               	btfss	status,2,c
  7620  01228A  D002               	goto	l1518
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;flash.c: 247: command[0] = 0x87;
  7624  01228C  0E87               	movlw	135
  7625  01228E  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
  7626  012290                     l1518:
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;flash.c: 249: command[1] = 0x00;
  7630  012290  0E00               	movlw	0
  7631  012292  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
  7632                           
  7633                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
  7634  012294  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
  7635  012296  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
  7639  012298  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
  7643  01229C  0E7A               	movlw	low __flash_write_to_buffer@command
  7644  01229E  6F60               	movwf	spi_tx_tx@command& (0+255),b
  7645  0122A0  0E00               	movlw	high __flash_write_to_buffer@command
  7646  0122A2  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
  7647  0122A4  0E00               	movlw	0
  7648  0122A6  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
  7649  0122A8  0E04               	movlw	4
  7650  0122AA  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
  7651  0122AC  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
  7652  0122B0  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
  7653  0122B4  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
  7654  0122B8  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
  7655  0122BC  EC62  F08B         	call	_spi_tx_tx	;wreg free
  7656  0122C0  0012               	return		;funcret
  7657  0122C2                     __end_of__flash_write_to_buffer:
  7658                           	opt stack 0
  7659                           tblptru	equ	0xFF8
  7660                           tblptrh	equ	0xFF7
  7661                           tblptrl	equ	0xFF6
  7662                           tablat	equ	0xFF5
  7663                           postinc0	equ	0xFEE
  7664                           wreg	equ	0xFE8
  7665                           postdec1	equ	0xFE5
  7666                           fsr1h	equ	0xFE2
  7667                           fsr1l	equ	0xFE1
  7668                           indf2	equ	0xFDF
  7669                           postinc2	equ	0xFDE
  7670                           fsr2h	equ	0xFDA
  7671                           fsr2l	equ	0xFD9
  7672                           status	equ	0xFD8
  7673                           
  7674 ;; *************** function _spi_tx_tx *****************
  7675 ;; Defined at:
  7676 ;;		line 146 in file "spi.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  command         2    0[BANK0 ] PTR unsigned char 
  7679 ;;		 -> _flash_write_to_buffer@command(4), 
  7680 ;;  command_leng    2    2[BANK0 ] unsigned int 
  7681 ;;  data            2    4[BANK0 ] PTR unsigned char 
  7682 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
  7683 ;;		 -> buffer(512), 
  7684 ;;  data_length     2    6[BANK0 ] unsigned int 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;		None
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  1    wreg      void 
  7689 ;; Registers used:
  7690 ;;		wreg, status,2, status,0
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7696 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7698 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7699 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7700 ;;Total ram usage:       12 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:   10
  7703 ;; This function calls:
  7704 ;;		Nothing
  7705 ;; This function is called by:
  7706 ;;		__flash_write_to_buffer
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text13
  7711  0116C4                     __ptext13:
  7712                           	opt stack 0
  7713  0116C4                     _spi_tx_tx:
  7714                           	opt stack 15
  7715                           
  7716                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
  7717                           
  7718                           ;incstack = 0
  7719  0116C4  9E88               	bcf	3976,7,c	;volatile
  7720                           
  7721                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
  7722  0116C6  9C88               	bcf	3976,6,c	;volatile
  7723                           
  7724                           ;spi.c: 152: DMACON1bits.TXINC = 1;
  7725  0116C8  8A88               	bsf	3976,5,c	;volatile
  7726                           
  7727                           ;spi.c: 154: DMACON1bits.RXINC = 0;
  7728  0116CA  9888               	bcf	3976,4,c	;volatile
  7729                           
  7730                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
  7731  0116CC  9688               	bcf	3976,3,c	;volatile
  7732                           
  7733                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
  7734  0116CE  8488               	bsf	3976,2,c	;volatile
  7735                           
  7736                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
  7737  0116D0  9288               	bcf	3976,1,c	;volatile
  7738                           
  7739                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
  7740  0116D2  9886               	bcf	3974,4,c	;volatile
  7741  0116D4  9A86               	bcf	3974,5,c	;volatile
  7742  0116D6  9C86               	bcf	3974,6,c	;volatile
  7743  0116D8  9E86               	bcf	3974,7,c	;volatile
  7744                           
  7745                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
  7746  0116DA  9086               	bcf	3974,0,c	;volatile
  7747  0116DC  9286               	bcf	3974,1,c	;volatile
  7748  0116DE  9486               	bcf	3974,2,c	;volatile
  7749  0116E0  9686               	bcf	3974,3,c	;volatile
  7750                           
  7751                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
  7752  0116E2  0100               	movlb	0	; () banked
  7753  0116E4  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
  7754  0116E6  6E6A               	movwf	3946,c	;volatile
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
  7758  0116E8  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
  7762  0116EC  0EFF               	movlw	255
  7763  0116EE  6F68               	movwf	??_spi_tx_tx& (0+255),b
  7764  0116F0  0EFF               	movlw	255
  7765  0116F2  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
  7766  0116F4  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
  7767  0116F8  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
  7768  0116FC  5168               	movf	??_spi_tx_tx& (0+255),w,b
  7769  0116FE  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
  7770  011700  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
  7771  011702  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
  7772  011704  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
  7773  011708  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
  7774  01170A  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
  7775  01170C  6E66               	movwf	3942,c	;volatile
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
  7779  01170E  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
  7780  011710  6E67               	movwf	3943,c	;volatile
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;spi.c: 174: LATDbits.LD7 = 0;
  7784  011712  9E8C               	bcf	3980,7,c	;volatile
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
  7788  011714  8088               	bsf	3976,0,c	;volatile
  7789  011716                     
  7790                           ; BSR set to: 0
  7791  011716  B088               	btfsc	3976,0,c	;volatile
  7792  011718  D7FE               	goto	l2125
  7793                           
  7794                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
  7795  01171A  0100               	movlb	0	; () banked
  7796  01171C  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
  7797  01171E  6E6A               	movwf	3946,c	;volatile
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
  7801  011720  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
  7805  011724  0EFF               	movlw	255
  7806  011726  6F68               	movwf	??_spi_tx_tx& (0+255),b
  7807  011728  0EFF               	movlw	255
  7808  01172A  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
  7809  01172C  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
  7810  011730  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
  7811  011734  5168               	movf	??_spi_tx_tx& (0+255),w,b
  7812  011736  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
  7813  011738  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
  7814  01173A  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
  7815  01173C  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
  7816  011740  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
  7817  011742  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
  7818  011744  6E66               	movwf	3942,c	;volatile
  7819                           
  7820                           ; BSR set to: 0
  7821                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
  7822  011746  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
  7823  011748  6E67               	movwf	3943,c	;volatile
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
  7827  01174A  8088               	bsf	3976,0,c	;volatile
  7828  01174C                     
  7829                           ; BSR set to: 0
  7830  01174C  B088               	btfsc	3976,0,c	;volatile
  7831  01174E  D7FE               	goto	l2128
  7832                           
  7833                           ;spi.c: 193: LATDbits.LD7 = 1;
  7834  011750  8E8C               	bsf	3980,7,c	;volatile
  7835  011752  0012               	return		;funcret
  7836  011754                     __end_of_spi_tx_tx:
  7837                           	opt stack 0
  7838                           tblptru	equ	0xFF8
  7839                           tblptrh	equ	0xFF7
  7840                           tblptrl	equ	0xFF6
  7841                           tablat	equ	0xFF5
  7842                           postinc0	equ	0xFEE
  7843                           wreg	equ	0xFE8
  7844                           postdec1	equ	0xFE5
  7845                           fsr1h	equ	0xFE2
  7846                           fsr1l	equ	0xFE1
  7847                           indf2	equ	0xFDF
  7848                           postinc2	equ	0xFDE
  7849                           fsr2h	equ	0xFDA
  7850                           fsr2l	equ	0xFD9
  7851                           status	equ	0xFD8
  7852                           
  7853 ;; *************** function __flash_write_page_from_buffer *****************
  7854 ;; Defined at:
  7855 ;;		line 258 in file "flash.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  page            2   19[BANK0 ] unsigned int 
  7858 ;;  buffer          1   21[BANK0 ] enum E6974
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;  command         4   25[BANK0 ] unsigned char [4]
  7861 ;; Return value:  Size  Location     Type
  7862 ;;                  1    wreg      void 
  7863 ;; Registers used:
  7864 ;;		wreg, status,2, status,0, cstack
  7865 ;; Tracked objects:
  7866 ;;		On entry : 0/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7870 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7871 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7872 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7873 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7874 ;;Total ram usage:       10 bytes
  7875 ;; Hardware stack levels used:    1
  7876 ;; Hardware stack levels required when called:   13
  7877 ;; This function calls:
  7878 ;;		__flash_is_busy
  7879 ;;		_spi_tx
  7880 ;; This function is called by:
  7881 ;;		_flash_sector_write
  7882 ;;		_flash_partial_write
  7883 ;;		_flash_write_page_from_buffer
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           	psect	text14
  7888  011F08                     __ptext14:
  7889                           	opt stack 0
  7890  011F08                     __flash_write_page_from_buffer:
  7891                           	opt stack 13
  7892                           
  7893                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
  7894                           
  7895                           ;incstack = 0
  7896  011F08  ECDB  F095         	call	__flash_is_busy	;wreg free
  7897  011F0C  0900               	iorlw	0
  7898  011F0E  A4D8               	btfss	status,2,c
  7899  011F10  D7FB               	goto	__flash_write_page_from_buffer
  7900                           
  7901                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
  7902  011F12  0100               	movlb	0	; () banked
  7903  011F14  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
  7904  011F16  A4D8               	btfss	status,2,c
  7905  011F18  D002               	goto	l1525
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;flash.c: 267: command[0] = 0x83;
  7909  011F1A  0E83               	movlw	131
  7910  011F1C  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
  7911  011F1E                     l1525:
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
  7915                           
  7916                           ; BSR set to: 0
  7917  011F1E  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
  7918  011F20  A4D8               	btfss	status,2,c
  7919  011F22  D002               	goto	l1526
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;flash.c: 269: command[0] = 0x86;
  7923  011F24  0E86               	movlw	134
  7924  011F26  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
  7925  011F28                     l1526:
  7926                           
  7927                           ; BSR set to: 0
  7928                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
  7929                           
  7930                           ; BSR set to: 0
  7931  011F28  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
  7932  011F2C  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
  7933  011F30  0E07               	movlw	7
  7934  011F32  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
  7935  011F34                     u18545:
  7936  011F34  90D8               	bcf	status,0,c
  7937  011F36  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
  7938  011F38  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
  7939  011F3A  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
  7940  011F3C  D7FB               	goto	u18545
  7941  011F3E  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
  7942  011F40  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
  7943                           
  7944                           ; BSR set to: 0
  7945                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
  7946  011F42  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
  7947  011F44  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
  7948  011F46  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
  7949                           
  7950                           ;flash.c: 273: command[3] = 0x00;
  7951  011F48  0E00               	movlw	0
  7952  011F4A  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;flash.c: 276: spi_tx(command, 4);
  7956  011F4C  0E79               	movlw	low __flash_write_page_from_buffer@command
  7957  011F4E  6F60               	movwf	spi_tx@data& (0+255),b
  7958  011F50  0E00               	movlw	high __flash_write_page_from_buffer@command
  7959  011F52  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  7960  011F54  0E00               	movlw	0
  7961  011F56  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  7962  011F58  0E04               	movlw	4
  7963  011F5A  6F62               	movwf	spi_tx@length& (0+255),b
  7964  011F5C  ECDE  F08F         	call	_spi_tx	;wreg free
  7965  011F60  0012               	return		;funcret
  7966  011F62                     __end_of__flash_write_page_from_buffer:
  7967                           	opt stack 0
  7968                           tblptru	equ	0xFF8
  7969                           tblptrh	equ	0xFF7
  7970                           tblptrl	equ	0xFF6
  7971                           tablat	equ	0xFF5
  7972                           postinc0	equ	0xFEE
  7973                           wreg	equ	0xFE8
  7974                           postdec1	equ	0xFE5
  7975                           fsr1h	equ	0xFE2
  7976                           fsr1l	equ	0xFE1
  7977                           indf2	equ	0xFDF
  7978                           postinc2	equ	0xFDE
  7979                           fsr2h	equ	0xFDA
  7980                           fsr2l	equ	0xFD9
  7981                           status	equ	0xFD8
  7982                           
  7983 ;; *************** function __flash_compare_page_to_buffer *****************
  7984 ;; Defined at:
  7985 ;;		line 176 in file "flash.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;  page            2   19[BANK0 ] unsigned int 
  7988 ;;  buffer          1   21[BANK0 ] enum E6974
  7989 ;; Auto vars:     Size  Location     Type
  7990 ;;  command         4   27[BANK0 ] unsigned char [4]
  7991 ;;  status          2   25[BANK0 ] unsigned int 
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  1    wreg      enum E6978
  7994 ;; Registers used:
  7995 ;;		wreg, status,2, status,0, cstack
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8001 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8002 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8003 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8004 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8005 ;;Total ram usage:       12 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; Hardware stack levels required when called:   13
  8008 ;; This function calls:
  8009 ;;		__flash_get_status
  8010 ;;		__flash_is_busy
  8011 ;;		_spi_tx
  8012 ;; This function is called by:
  8013 ;;		_flash_sector_write
  8014 ;;		_flash_partial_write
  8015 ;; This function uses a non-reentrant model
  8016 ;;
  8017                           
  8018                           	psect	text15
  8019  01186A                     __ptext15:
  8020                           	opt stack 0
  8021  01186A                     __flash_compare_page_to_buffer:
  8022                           	opt stack 13
  8023                           
  8024                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
  8025                           
  8026                           ;incstack = 0
  8027  01186A  ECDB  F095         	call	__flash_is_busy	;wreg free
  8028  01186E  0900               	iorlw	0
  8029  011870  A4D8               	btfss	status,2,c
  8030  011872  D7FB               	goto	__flash_compare_page_to_buffer
  8031                           
  8032                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
  8033  011874  0100               	movlb	0	; () banked
  8034  011876  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
  8035  011878  A4D8               	btfss	status,2,c
  8036  01187A  D002               	goto	l1498
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;flash.c: 186: command[0] = 0x60;
  8040  01187C  0E60               	movlw	96
  8041  01187E  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
  8042  011880                     l1498:
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
  8046                           
  8047                           ; BSR set to: 0
  8048  011880  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
  8049  011882  A4D8               	btfss	status,2,c
  8050  011884  D002               	goto	l1499
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;flash.c: 188: command[0] = 0x60;
  8054  011886  0E60               	movlw	96
  8055  011888  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
  8056  01188A                     l1499:
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
  8060                           
  8061                           ; BSR set to: 0
  8062  01188A  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
  8063  01188E  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
  8064  011892  0E07               	movlw	7
  8065  011894  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
  8066  011896                     u18455:
  8067  011896  90D8               	bcf	status,0,c
  8068  011898  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
  8069  01189A  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
  8070  01189C  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
  8071  01189E  D7FB               	goto	u18455
  8072  0118A0  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
  8073  0118A2  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
  8074                           
  8075                           ; BSR set to: 0
  8076                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
  8077  0118A4  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
  8078  0118A6  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
  8079  0118A8  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
  8080                           
  8081                           ;flash.c: 192: command[3] = 0x00;
  8082  0118AA  0E00               	movlw	0
  8083  0118AC  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;flash.c: 195: spi_tx(command, 4);
  8087  0118AE  0E7B               	movlw	low __flash_compare_page_to_buffer@command
  8088  0118B0  6F60               	movwf	spi_tx@data& (0+255),b
  8089  0118B2  0E00               	movlw	high __flash_compare_page_to_buffer@command
  8090  0118B4  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8091  0118B6  0E00               	movlw	0
  8092  0118B8  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8093  0118BA  0E04               	movlw	4
  8094  0118BC  6F62               	movwf	spi_tx@length& (0+255),b
  8095  0118BE  ECDE  F08F         	call	_spi_tx	;wreg free
  8096  0118C2  ECDB  F095         	call	__flash_is_busy	;wreg free
  8097  0118C6  0900               	iorlw	0
  8098  0118C8  A4D8               	btfss	status,2,c
  8099  0118CA  D7FB               	goto	l1501
  8100                           
  8101                           ;flash.c: 201: status = _flash_get_status();
  8102  0118CC  EC79  F094         	call	__flash_get_status	;wreg free
  8103  0118D0  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
  8104  0118D4  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
  8105                           
  8106                           ;flash.c: 204: if(status & 0b0000000001000000)
  8107  0118D8  0100               	movlb	0	; () banked
  8108  0118DA  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
  8109  0118DC  D002               	goto	l1503
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
  8113  0118DE  0E01               	movlw	1
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;flash.c: 208: }
  8117                           
  8118                           ; BSR set to: 0
  8119  0118E0  0012               	return	
  8120  0118E2                     l1503:
  8121                           
  8122                           ; BSR set to: 0
  8123                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
  8124                           
  8125                           ; BSR set to: 0
  8126  0118E2  0E00               	movlw	0
  8127                           
  8128                           ; BSR set to: 0
  8129  0118E4  0012               	return	
  8130  0118E6                     __end_of__flash_compare_page_to_buffer:
  8131                           	opt stack 0
  8132                           tblptru	equ	0xFF8
  8133                           tblptrh	equ	0xFF7
  8134                           tblptrl	equ	0xFF6
  8135                           tablat	equ	0xFF5
  8136                           postinc0	equ	0xFEE
  8137                           wreg	equ	0xFE8
  8138                           postdec1	equ	0xFE5
  8139                           fsr1h	equ	0xFE2
  8140                           fsr1l	equ	0xFE1
  8141                           indf2	equ	0xFDF
  8142                           postinc2	equ	0xFDE
  8143                           fsr2h	equ	0xFDA
  8144                           fsr2l	equ	0xFD9
  8145                           status	equ	0xFD8
  8146                           
  8147 ;; *************** function __get_root *****************
  8148 ;; Defined at:
  8149 ;;		line 1210 in file "fat16.c"
  8150 ;; Parameters:    Size  Location     Type
  8151 ;;  idx             2    0[BANK0 ] unsigned int 
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;		None
  8154 ;; Return value:  Size  Location     Type
  8155 ;;                  1    wreg      unsigned char 
  8156 ;; Registers used:
  8157 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8158 ;; Tracked objects:
  8159 ;;		On entry : 0/0
  8160 ;;		On exit  : 0/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8165 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8166 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8167 ;;Total ram usage:        6 bytes
  8168 ;; Hardware stack levels used:    1
  8169 ;; Hardware stack levels required when called:   10
  8170 ;; This function calls:
  8171 ;;		Nothing
  8172 ;; This function is called by:
  8173 ;;		_fat_format
  8174 ;; This function uses a non-reentrant model
  8175 ;;
  8176                           
  8177                           	psect	text16
  8178  00E2DE                     __ptext16:
  8179                           	opt stack 0
  8180  00E2DE                     __get_root:
  8181                           	opt stack 17
  8182                           
  8183                           ;fat16.c: 1212: if(idx < 0x20)
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;incstack = 0
  8187  00E2DE  0100               	movlb	0	; () banked
  8188  00E2E0  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8189  00E2E2  E11D               	bnz	l19136
  8190  00E2E4  0E20               	movlw	32
  8191  00E2E6  5D60               	subwf	__get_root@idx& (0+255),w,b
  8192  00E2E8  B0D8               	btfsc	status,0,c
  8193  00E2EA  D019               	goto	l1958
  8194                           
  8195                           ; BSR set to: 0
  8196                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
  8197  00E2EC  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8198  00E2EE  E110               	bnz	l19130
  8199  00E2F0  0E0B               	movlw	11
  8200  00E2F2  5D60               	subwf	__get_root@idx& (0+255),w,b
  8201  00E2F4  B0D8               	btfsc	status,0,c
  8202  00E2F6  D00C               	goto	l1956
  8203                           
  8204                           ; BSR set to: 0
  8205                           ;fat16.c: 1215: {;fat16.c: 1216: return "SolarChargr"[idx];
  8206  00E2F8  0EFE               	movlw	low STR_15
  8207  00E2FA  2560               	addwf	__get_root@idx& (0+255),w,b
  8208  00E2FC  6EF6               	movwf	tblptrl,c
  8209  00E2FE  0EA1               	movlw	high STR_15
  8210  00E300  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  8211  00E302  6EF7               	movwf	tblptrh,c
  8212  00E304                     	if	1	;There are 3 active tblptr bytes
  8213  00E304  6AF8               	clrf	tblptru,c
  8214  00E306  0E00               	movlw	low (__mediumconst shr (0+16))
  8215  00E308  22F8               	addwfc	tblptru,f,c
  8216  00E30A                     	endif
  8217  00E30A  0008               	tblrd		*
  8218  00E30C  50F5               	movf	tablat,w,c
  8219                           
  8220                           ; BSR set to: 0
  8221  00E30E  0012               	return	
  8222  00E310                     l1956:
  8223  00E310                     l19130:
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
  8227  00E310  0E0B               	movlw	11
  8228  00E312  1960               	xorwf	__get_root@idx& (0+255),w,b
  8229  00E314  1161               	iorwf	(__get_root@idx+1)& (0+255),w,b
  8230  00E316  A4D8               	btfss	status,2,c
  8231  00E318  D002               	goto	l1958
  8232                           
  8233                           ; BSR set to: 0
  8234                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
  8235  00E31A  0E08               	movlw	8
  8236                           
  8237                           ; BSR set to: 0
  8238  00E31C  0012               	return	
  8239  00E31E                     l1958:
  8240  00E31E                     l19136:
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
  8244  00E31E  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8245  00E320  E103               	bnz	u18681
  8246  00E322  0E40               	movlw	64
  8247  00E324  5D60               	subwf	__get_root@idx& (0+255),w,b
  8248  00E326  B0D8               	btfsc	status,0,c
  8249  00E328                     u18681:
  8250  00E328  D0A4               	goto	l1984
  8251                           
  8252                           ; BSR set to: 0
  8253                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
  8254  00E32A  0E20               	movlw	32
  8255  00E32C  5F60               	subwf	__get_root@idx& (0+255),f,b
  8256  00E32E  0E00               	movlw	0
  8257  00E330  5B61               	subwfb	(__get_root@idx+1)& (0+255),f,b
  8258                           
  8259                           ;fat16.c: 1226: if(idx < 0+8)
  8260  00E332  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8261  00E334  E110               	bnz	l19144
  8262  00E336  0E08               	movlw	8
  8263  00E338  5D60               	subwf	__get_root@idx& (0+255),w,b
  8264  00E33A  B0D8               	btfsc	status,0,c
  8265  00E33C  D00C               	goto	l1960
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
  8269  00E33E  0E0A               	movlw	low STR_16
  8270  00E340  2560               	addwf	__get_root@idx& (0+255),w,b
  8271  00E342  6EF6               	movwf	tblptrl,c
  8272  00E344  0EA2               	movlw	high STR_16
  8273  00E346  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  8274  00E348  6EF7               	movwf	tblptrh,c
  8275  00E34A                     	if	1	;There are 3 active tblptr bytes
  8276  00E34A  6AF8               	clrf	tblptru,c
  8277  00E34C  0E00               	movlw	low (__mediumconst shr (0+16))
  8278  00E34E  22F8               	addwfc	tblptru,f,c
  8279  00E350                     	endif
  8280  00E350  0008               	tblrd		*
  8281  00E352  50F5               	movf	tablat,w,c
  8282                           
  8283                           ; BSR set to: 0
  8284  00E354  0012               	return	
  8285  00E356                     l1960:
  8286  00E356                     l19144:
  8287                           
  8288                           ; BSR set to: 0
  8289                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
  8290  00E356  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  8291  00E358  E146               	bnz	l19236
  8292  00E35A  0E0B               	movlw	11
  8293  00E35C  5D60               	subwf	__get_root@idx& (0+255),w,b
  8294  00E35E  B0D8               	btfsc	status,0,c
  8295  00E360  D042               	goto	l1962
  8296                           
  8297                           ; BSR set to: 0
  8298                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
  8299  00E362  0EF8               	movlw	248
  8300  00E364  6F62               	movwf	??__get_root& (0+255),b
  8301  00E366  0EFF               	movlw	255
  8302  00E368  6F63               	movwf	(??__get_root+1)& (0+255),b
  8303  00E36A  C060  F064         	movff	__get_root@idx,??__get_root+2
  8304  00E36E  C061  F065         	movff	__get_root@idx+1,??__get_root+3
  8305  00E372  5162               	movf	??__get_root& (0+255),w,b
  8306  00E374  2764               	addwf	(??__get_root+2)& (0+255),f,b
  8307  00E376  5163               	movf	(??__get_root+1)& (0+255),w,b
  8308  00E378  2365               	addwfc	(??__get_root+3)& (0+255),f,b
  8309  00E37A  0E32               	movlw	low STR_17
  8310  00E37C  2564               	addwf	(??__get_root+2)& (0+255),w,b
  8311  00E37E  6EF6               	movwf	tblptrl,c
  8312  00E380  0EA2               	movlw	high STR_17
  8313  00E382  2165               	addwfc	(??__get_root+3)& (0+255),w,b
  8314  00E384  6EF7               	movwf	tblptrh,c
  8315  00E386                     	if	1	;There are 3 active tblptr bytes
  8316  00E386  6AF8               	clrf	tblptru,c
  8317  00E388  0E00               	movlw	low (__mediumconst shr (0+16))
  8318  00E38A  22F8               	addwfc	tblptru,f,c
  8319  00E38C                     	endif
  8320  00E38C  0008               	tblrd		*
  8321  00E38E  50F5               	movf	tablat,w,c
  8322                           
  8323                           ; BSR set to: 0
  8324  00E390  0012               	return	
  8325  00E392                     
  8326                           ; BSR set to: 0
  8327                           ;fat16.c: 1237: return 0x20;
  8328                           
  8329                           ; BSR set to: 0
  8330  00E392  0E20               	movlw	32
  8331                           
  8332                           ; BSR set to: 0
  8333  00E394  0012               	return	
  8334  00E396                     
  8335                           ; BSR set to: 0
  8336                           ;fat16.c: 1239: return 0x06;
  8337                           
  8338                           ; BSR set to: 0
  8339  00E396  0E06               	movlw	6
  8340                           
  8341                           ; BSR set to: 0
  8342  00E398  0012               	return	
  8343  00E39A                     
  8344                           ; BSR set to: 0
  8345                           ;fat16.c: 1241: return 0x28;
  8346                           
  8347                           ; BSR set to: 0
  8348  00E39A  0E28               	movlw	40
  8349                           
  8350                           ; BSR set to: 0
  8351  00E39C  0012               	return	
  8352  00E39E                     
  8353                           ; BSR set to: 0
  8354                           ;fat16.c: 1243: return 0x78;
  8355                           
  8356                           ; BSR set to: 0
  8357  00E39E  0E78               	movlw	120
  8358                           
  8359                           ; BSR set to: 0
  8360  00E3A0  0012               	return	
  8361  00E3A2                     
  8362                           ; BSR set to: 0
  8363                           ;fat16.c: 1245: return 0xDE;
  8364                           
  8365                           ; BSR set to: 0
  8366  00E3A2  0EDE               	movlw	222
  8367                           
  8368                           ; BSR set to: 0
  8369  00E3A4  0012               	return	
  8370  00E3A6                     
  8371                           ; BSR set to: 0
  8372                           ;fat16.c: 1247: return 0x38;
  8373                           
  8374                           ; BSR set to: 0
  8375  00E3A6  0E38               	movlw	56
  8376                           
  8377                           ; BSR set to: 0
  8378  00E3A8  0012               	return	
  8379  00E3AA                     
  8380                           ; BSR set to: 0
  8381                           ;fat16.c: 1249: return 0x5F;
  8382                           
  8383                           ; BSR set to: 0
  8384  00E3AA  0E5F               	movlw	95
  8385                           
  8386                           ; BSR set to: 0
  8387  00E3AC  0012               	return	
  8388  00E3AE                     
  8389                           ; BSR set to: 0
  8390                           ;fat16.c: 1251: return 0x4B;
  8391                           
  8392                           ; BSR set to: 0
  8393  00E3AE  0E4B               	movlw	75
  8394                           
  8395                           ; BSR set to: 0
  8396  00E3B0  0012               	return	
  8397  00E3B2                     
  8398                           ; BSR set to: 0
  8399                           ;fat16.c: 1253: return 0x00;
  8400                           
  8401                           ; BSR set to: 0
  8402  00E3B2  0E00               	movlw	0
  8403                           
  8404                           ; BSR set to: 0
  8405  00E3B4  0012               	return	
  8406  00E3B6                     
  8407                           ; BSR set to: 0
  8408                           ;fat16.c: 1255: return 0x00;
  8409                           
  8410                           ; BSR set to: 0
  8411  00E3B6  0E00               	movlw	0
  8412                           
  8413                           ; BSR set to: 0
  8414  00E3B8  0012               	return	
  8415  00E3BA                     
  8416                           ; BSR set to: 0
  8417                           ;fat16.c: 1257: return 0x04;
  8418                           
  8419                           ; BSR set to: 0
  8420  00E3BA  0E04               	movlw	4
  8421                           
  8422                           ; BSR set to: 0
  8423  00E3BC  0012               	return	
  8424  00E3BE                     
  8425                           ; BSR set to: 0
  8426                           ;fat16.c: 1259: return 0x77;
  8427                           
  8428                           ; BSR set to: 0
  8429  00E3BE  0E77               	movlw	119
  8430                           
  8431                           ; BSR set to: 0
  8432  00E3C0  0012               	return	
  8433  00E3C2                     
  8434                           ; BSR set to: 0
  8435                           ;fat16.c: 1261: return 0xDE;
  8436                           
  8437                           ; BSR set to: 0
  8438  00E3C2  0EDE               	movlw	222
  8439                           
  8440                           ; BSR set to: 0
  8441  00E3C4  0012               	return	
  8442  00E3C6                     
  8443                           ; BSR set to: 0
  8444                           ;fat16.c: 1263: return 0x38;
  8445                           
  8446                           ; BSR set to: 0
  8447  00E3C6  0E38               	movlw	56
  8448                           
  8449                           ; BSR set to: 0
  8450  00E3C8  0012               	return	
  8451  00E3CA                     
  8452                           ; BSR set to: 0
  8453                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
  8454                           
  8455                           ; BSR set to: 0
  8456  00E3CA  0E02               	movlw	2
  8457                           
  8458                           ; BSR set to: 0
  8459  00E3CC  0012               	return	
  8460  00E3CE                     
  8461                           ; BSR set to: 0
  8462                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  8463                           
  8464                           ; BSR set to: 0
  8465  00E3CE  0E00               	movlw	0
  8466                           
  8467                           ; BSR set to: 0
  8468  00E3D0  0012               	return	
  8469  00E3D2                     
  8470                           ; BSR set to: 0
  8471                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
  8472                           
  8473                           ; BSR set to: 0
  8474  00E3D2  0E0C               	movlw	12
  8475                           
  8476                           ; BSR set to: 0
  8477  00E3D4  0012               	return	
  8478  00E3D6                     
  8479                           ; BSR set to: 0
  8480                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
  8481                           
  8482                           ; BSR set to: 0
  8483  00E3D6  0E00               	movlw	0
  8484                           
  8485                           ; BSR set to: 0
  8486  00E3D8  0012               	return	
  8487  00E3DA                     
  8488                           ; BSR set to: 0
  8489                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
  8490                           
  8491                           ; BSR set to: 0
  8492  00E3DA  0E00               	movlw	0
  8493                           
  8494                           ; BSR set to: 0
  8495  00E3DC  0012               	return	
  8496  00E3DE                     
  8497                           ; BSR set to: 0
  8498                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  8499                           
  8500                           ; BSR set to: 0
  8501  00E3DE  0E00               	movlw	0
  8502                           
  8503                           ; BSR set to: 0
  8504  00E3E0  0012               	return	
  8505  00E3E2                     
  8506                           ; BSR set to: 0
  8507                           ;fat16.c: 1277: return 0x00;
  8508                           
  8509                           ; BSR set to: 0
  8510  00E3E2  0E00               	movlw	0
  8511                           
  8512                           ; BSR set to: 0
  8513  00E3E4  0012               	return	
  8514  00E3E6                     l1962:
  8515  00E3E6                     l19236:
  8516                           
  8517                           ; BSR set to: 0
  8518  00E3E6  C060  F062         	movff	__get_root@idx,??__get_root
  8519  00E3EA  C061  F063         	movff	__get_root@idx+1,??__get_root+1
  8520                           
  8521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8522                           ; Switch size 1, requested type "space"
  8523                           ; Number of cases is 1, Range of values is 0 to 0
  8524                           ; switch strategies available:
  8525                           ; Name         Instructions Cycles
  8526                           ; simple_byte            4     3 (average)
  8527                           ;	Chosen strategy is simple_byte
  8528  00E3EE  5163               	movf	(??__get_root+1)& (0+255),w,b
  8529  00E3F0  0A00               	xorlw	0	; case 0
  8530  00E3F2  A4D8               	btfss	status,2,c
  8531  00E3F4  D7F6               	goto	l1983
  8532                           
  8533                           ; BSR set to: 0
  8534                           ; Switch size 1, requested type "space"
  8535                           ; Number of cases is 20, Range of values is 11 to 31
  8536                           ; switch strategies available:
  8537                           ; Name         Instructions Cycles
  8538                           ; simple_byte           61    31 (average)
  8539                           ;	Chosen strategy is simple_byte
  8540  00E3F6  5162               	movf	??__get_root& (0+255),w,b
  8541  00E3F8  0A0B               	xorlw	11	; case 11
  8542  00E3FA  B4D8               	btfsc	status,2,c
  8543  00E3FC  D7CA               	goto	l1963
  8544  00E3FE  0A06               	xorlw	6	; case 13
  8545  00E400  B4D8               	btfsc	status,2,c
  8546  00E402  D7C9               	goto	l1964
  8547  00E404  0A03               	xorlw	3	; case 14
  8548  00E406  B4D8               	btfsc	status,2,c
  8549  00E408  D7C8               	goto	l1965
  8550  00E40A  0A01               	xorlw	1	; case 15
  8551  00E40C  B4D8               	btfsc	status,2,c
  8552  00E40E  D7C7               	goto	l1966
  8553  00E410  0A1F               	xorlw	31	; case 16
  8554  00E412  B4D8               	btfsc	status,2,c
  8555  00E414  D7C6               	goto	l1967
  8556  00E416  0A01               	xorlw	1	; case 17
  8557  00E418  B4D8               	btfsc	status,2,c
  8558  00E41A  D7C5               	goto	l1968
  8559  00E41C  0A03               	xorlw	3	; case 18
  8560  00E41E  B4D8               	btfsc	status,2,c
  8561  00E420  D7C4               	goto	l1969
  8562  00E422  0A01               	xorlw	1	; case 19
  8563  00E424  B4D8               	btfsc	status,2,c
  8564  00E426  D7C3               	goto	l1970
  8565  00E428  0A07               	xorlw	7	; case 20
  8566  00E42A  B4D8               	btfsc	status,2,c
  8567  00E42C  D7C2               	goto	l1971
  8568  00E42E  0A01               	xorlw	1	; case 21
  8569  00E430  B4D8               	btfsc	status,2,c
  8570  00E432  D7C1               	goto	l1972
  8571  00E434  0A03               	xorlw	3	; case 22
  8572  00E436  B4D8               	btfsc	status,2,c
  8573  00E438  D7C0               	goto	l1973
  8574  00E43A  0A01               	xorlw	1	; case 23
  8575  00E43C  B4D8               	btfsc	status,2,c
  8576  00E43E  D7BF               	goto	l1974
  8577  00E440  0A0F               	xorlw	15	; case 24
  8578  00E442  B4D8               	btfsc	status,2,c
  8579  00E444  D7BE               	goto	l1975
  8580  00E446  0A01               	xorlw	1	; case 25
  8581  00E448  B4D8               	btfsc	status,2,c
  8582  00E44A  D7BD               	goto	l1976
  8583  00E44C  0A03               	xorlw	3	; case 26
  8584  00E44E  B4D8               	btfsc	status,2,c
  8585  00E450  D7BC               	goto	l1977
  8586  00E452  0A01               	xorlw	1	; case 27
  8587  00E454  B4D8               	btfsc	status,2,c
  8588  00E456  D7BB               	goto	l1978
  8589  00E458  0A07               	xorlw	7	; case 28
  8590  00E45A  B4D8               	btfsc	status,2,c
  8591  00E45C  D7BA               	goto	l1979
  8592  00E45E  0A01               	xorlw	1	; case 29
  8593  00E460  B4D8               	btfsc	status,2,c
  8594  00E462  D7B9               	goto	l1980
  8595  00E464  0A03               	xorlw	3	; case 30
  8596  00E466  B4D8               	btfsc	status,2,c
  8597  00E468  D7B8               	goto	l1981
  8598  00E46A  0A01               	xorlw	1	; case 31
  8599  00E46C  B4D8               	btfsc	status,2,c
  8600  00E46E  D7B7               	goto	l1982
  8601  00E470  D7B8               	goto	l1983
  8602  00E472                     l1984:
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
  8606                           
  8607                           ; BSR set to: 0
  8608                           
  8609                           ; BSR set to: 0
  8610  00E472  0E00               	movlw	0
  8611  00E474  0012               	return	
  8612  00E476                     __end_of__get_root:
  8613                           	opt stack 0
  8614                           tblptru	equ	0xFF8
  8615                           tblptrh	equ	0xFF7
  8616                           tblptrl	equ	0xFF6
  8617                           tablat	equ	0xFF5
  8618                           postinc0	equ	0xFEE
  8619                           wreg	equ	0xFE8
  8620                           postdec1	equ	0xFE5
  8621                           fsr1h	equ	0xFE2
  8622                           fsr1l	equ	0xFE1
  8623                           indf2	equ	0xFDF
  8624                           postinc2	equ	0xFDE
  8625                           fsr2h	equ	0xFDA
  8626                           fsr2l	equ	0xFD9
  8627                           status	equ	0xFD8
  8628                           
  8629 ;; *************** function __get_mbr *****************
  8630 ;; Defined at:
  8631 ;;		line 1037 in file "fat16.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;  idx             2    0[BANK0 ] unsigned int 
  8634 ;; Auto vars:     Size  Location     Type
  8635 ;;		None
  8636 ;; Return value:  Size  Location     Type
  8637 ;;                  1    wreg      unsigned char 
  8638 ;; Registers used:
  8639 ;;		wreg, status,2, status,0
  8640 ;; Tracked objects:
  8641 ;;		On entry : 0/0
  8642 ;;		On exit  : 0/0
  8643 ;;		Unchanged: 0/0
  8644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8645 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8647 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8648 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8649 ;;Total ram usage:        4 bytes
  8650 ;; Hardware stack levels used:    1
  8651 ;; Hardware stack levels required when called:   10
  8652 ;; This function calls:
  8653 ;;		Nothing
  8654 ;; This function is called by:
  8655 ;;		_fat_get_format_status
  8656 ;;		_fat_format
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660                           	psect	text17
  8661  010796                     __ptext17:
  8662                           	opt stack 0
  8663  010796                     __get_mbr:
  8664                           	opt stack 17
  8665                           
  8666                           ;fat16.c: 1039: switch (idx)
  8667                           
  8668                           ; BSR set to: 0
  8669                           ;incstack = 0
  8670  010796  D026               	goto	l1865
  8671  010798                     
  8672                           ;fat16.c: 1042: return 0x80;
  8673  010798  0E80               	movlw	128
  8674  01079A  0012               	return	
  8675  01079C                     
  8676                           ;fat16.c: 1044: return 0;
  8677  01079C  0E00               	movlw	0
  8678  01079E  0012               	return	
  8679  0107A0                     
  8680                           ;fat16.c: 1046: return 2;
  8681  0107A0  0E02               	movlw	2
  8682  0107A2  0012               	return	
  8683  0107A4                     
  8684                           ;fat16.c: 1048: return 0;
  8685  0107A4  0E00               	movlw	0
  8686  0107A6  0012               	return	
  8687  0107A8                     
  8688                           ;fat16.c: 1050: return 0x04;
  8689  0107A8  0E04               	movlw	4
  8690  0107AA  0012               	return	
  8691  0107AC                     
  8692                           ;fat16.c: 1052: return 2;
  8693  0107AC  0E02               	movlw	2
  8694  0107AE  0012               	return	
  8695  0107B0                     
  8696                           ;fat16.c: 1054: return 3;
  8697  0107B0  0E03               	movlw	3
  8698  0107B2  0012               	return	
  8699  0107B4                     
  8700                           ;fat16.c: 1056: return 8;
  8701  0107B4  0E08               	movlw	8
  8702  0107B6  0012               	return	
  8703  0107B8                     
  8704                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  8705  0107B8  0E01               	movlw	1
  8706  0107BA  0012               	return	
  8707  0107BC                     
  8708                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  8709  0107BC  0E00               	movlw	0
  8710  0107BE  0012               	return	
  8711  0107C0                     
  8712                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  8713  0107C0  0E00               	movlw	0
  8714  0107C2  0012               	return	
  8715  0107C4                     
  8716                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  8717  0107C4  0E00               	movlw	0
  8718  0107C6  0012               	return	
  8719  0107C8                     
  8720                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  8721  0107C8  0EFF               	movlw	255
  8722  0107CA  0012               	return	
  8723  0107CC                     
  8724                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  8725  0107CC  0E1F               	movlw	31
  8726  0107CE  0012               	return	
  8727  0107D0                     
  8728                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  8729  0107D0  0E00               	movlw	0
  8730  0107D2  0012               	return	
  8731  0107D4                     
  8732                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  8733  0107D4  0E00               	movlw	0
  8734  0107D6  0012               	return	
  8735  0107D8                     
  8736                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  8737  0107D8  0E55               	movlw	85
  8738  0107DA  0012               	return	
  8739  0107DC                     
  8740                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  8741  0107DC  0EAA               	movlw	170
  8742  0107DE  0012               	return	
  8743  0107E0                     
  8744                           ;fat16.c: 1078: return 0X00;
  8745  0107E0  0E00               	movlw	0
  8746                           
  8747                           ;fat16.c: 1079: }
  8748  0107E2  0012               	return	
  8749  0107E4                     l1865:
  8750  0107E4  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  8751  0107E8  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  8752                           
  8753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8754                           ; Switch size 1, requested type "space"
  8755                           ; Number of cases is 1, Range of values is 1 to 1
  8756                           ; switch strategies available:
  8757                           ; Name         Instructions Cycles
  8758                           ; simple_byte            4     3 (average)
  8759                           ;	Chosen strategy is simple_byte
  8760  0107EC  0100               	movlb	0	; () banked
  8761  0107EE  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  8762  0107F0  0A01               	xorlw	1	; case 1
  8763  0107F2  A4D8               	btfss	status,2,c
  8764  0107F4  D7F5               	goto	l1885
  8765                           
  8766                           ; BSR set to: 0
  8767                           ; Switch size 1, requested type "space"
  8768                           ; Number of cases is 18, Range of values is 190 to 255
  8769                           ; switch strategies available:
  8770                           ; Name         Instructions Cycles
  8771                           ; simple_byte           55    28 (average)
  8772                           ;	Chosen strategy is simple_byte
  8773  0107F6  5162               	movf	??__get_mbr& (0+255),w,b
  8774  0107F8  0ABE               	xorlw	190	; case 190
  8775  0107FA  B4D8               	btfsc	status,2,c
  8776  0107FC  D7CD               	goto	l1866
  8777  0107FE  0A01               	xorlw	1	; case 191
  8778  010800  B4D8               	btfsc	status,2,c
  8779  010802  D7CC               	goto	l1868
  8780  010804  0A7F               	xorlw	127	; case 192
  8781  010806  B4D8               	btfsc	status,2,c
  8782  010808  D7CB               	goto	l1869
  8783  01080A  0A01               	xorlw	1	; case 193
  8784  01080C  B4D8               	btfsc	status,2,c
  8785  01080E  D7CA               	goto	l1870
  8786  010810  0A03               	xorlw	3	; case 194
  8787  010812  B4D8               	btfsc	status,2,c
  8788  010814  D7C9               	goto	l1871
  8789  010816  0A01               	xorlw	1	; case 195
  8790  010818  B4D8               	btfsc	status,2,c
  8791  01081A  D7C8               	goto	l1872
  8792  01081C  0A07               	xorlw	7	; case 196
  8793  01081E  B4D8               	btfsc	status,2,c
  8794  010820  D7C7               	goto	l1873
  8795  010822  0A01               	xorlw	1	; case 197
  8796  010824  B4D8               	btfsc	status,2,c
  8797  010826  D7C6               	goto	l1874
  8798  010828  0A03               	xorlw	3	; case 198
  8799  01082A  B4D8               	btfsc	status,2,c
  8800  01082C  D7C5               	goto	l1875
  8801  01082E  0A01               	xorlw	1	; case 199
  8802  010830  B4D8               	btfsc	status,2,c
  8803  010832  D7C4               	goto	l1876
  8804  010834  0A0F               	xorlw	15	; case 200
  8805  010836  B4D8               	btfsc	status,2,c
  8806  010838  D7C3               	goto	l1877
  8807  01083A  0A01               	xorlw	1	; case 201
  8808  01083C  B4D8               	btfsc	status,2,c
  8809  01083E  D7C2               	goto	l1878
  8810  010840  0A03               	xorlw	3	; case 202
  8811  010842  B4D8               	btfsc	status,2,c
  8812  010844  D7C1               	goto	l1879
  8813  010846  0A01               	xorlw	1	; case 203
  8814  010848  B4D8               	btfsc	status,2,c
  8815  01084A  D7C0               	goto	l1880
  8816  01084C  0A07               	xorlw	7	; case 204
  8817  01084E  B4D8               	btfsc	status,2,c
  8818  010850  D7BF               	goto	l1881
  8819  010852  0A01               	xorlw	1	; case 205
  8820  010854  B4D8               	btfsc	status,2,c
  8821  010856  D7BE               	goto	l1882
  8822  010858  0A33               	xorlw	51	; case 254
  8823  01085A  B4D8               	btfsc	status,2,c
  8824  01085C  D7BD               	goto	l1883
  8825  01085E  0A01               	xorlw	1	; case 255
  8826  010860  B4D8               	btfsc	status,2,c
  8827  010862  D7BC               	goto	l1884
  8828  010864  D7BD               	goto	l1885
  8829  010866                     __end_of__get_mbr:
  8830                           	opt stack 0
  8831                           tblptru	equ	0xFF8
  8832                           tblptrh	equ	0xFF7
  8833                           tblptrl	equ	0xFF6
  8834                           tablat	equ	0xFF5
  8835                           postinc0	equ	0xFEE
  8836                           wreg	equ	0xFE8
  8837                           postdec1	equ	0xFE5
  8838                           fsr1h	equ	0xFE2
  8839                           fsr1l	equ	0xFE1
  8840                           indf2	equ	0xFDF
  8841                           postinc2	equ	0xFDE
  8842                           fsr2h	equ	0xFDA
  8843                           fsr2l	equ	0xFD9
  8844                           status	equ	0xFD8
  8845                           
  8846 ;; *************** function __get_fbr *****************
  8847 ;; Defined at:
  8848 ;;		line 1082 in file "fat16.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;  idx             2    0[BANK0 ] unsigned int 
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;		None
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      unsigned char 
  8855 ;; Registers used:
  8856 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8862 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8864 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8865 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8866 ;;Total ram usage:        4 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; Hardware stack levels required when called:   10
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_fat_get_format_status
  8873 ;;		_fat_format
  8874 ;; This function uses a non-reentrant model
  8875 ;;
  8876                           
  8877                           	psect	text18
  8878  00D25C                     __ptext18:
  8879                           	opt stack 0
  8880  00D25C                     __get_fbr:
  8881                           	opt stack 17
  8882                           
  8883                           ;fat16.c: 1084: switch (idx)
  8884                           
  8885                           ;incstack = 0
  8886  00D25C  D098               	goto	l1889
  8887  00D25E                     
  8888                           ;fat16.c: 1087: return 0xEB;
  8889  00D25E  0EEB               	movlw	235
  8890  00D260  0012               	return	
  8891  00D262                     
  8892                           ;fat16.c: 1089: return 0x3C;
  8893  00D262  0E3C               	movlw	60
  8894  00D264  0012               	return	
  8895  00D266                     
  8896                           ;fat16.c: 1091: return 0x90;
  8897  00D266  0E90               	movlw	144
  8898  00D268  0012               	return	
  8899  00D26A                     
  8900                           ;fat16.c: 1093: return "MSDOS5.0"[0];
  8901  00D26A  0E13               	movlw	low STR_7
  8902  00D26C  6EF6               	movwf	tblptrl,c
  8903  00D26E                     	if	1	;There is more than 1 active tblptr byte
  8904  00D26E  0EA2               	movlw	high STR_7
  8905  00D270  6EF7               	movwf	tblptrh,c
  8906  00D272                     	endif
  8907  00D272                     	if	1	;There are 3 active tblptr bytes
  8908  00D272  0E00               	movlw	low (STR_7 shr (0+16))
  8909  00D274  6EF8               	movwf	tblptru,c
  8910  00D276                     	endif
  8911  00D276  0008               	tblrd		*
  8912  00D278  50F5               	movf	tablat,w,c
  8913  00D27A  0012               	return	
  8914  00D27C                     
  8915                           ;fat16.c: 1095: return "MSDOS5.0"[1];
  8916  00D27C  0E14               	movlw	low (STR_7+1)
  8917  00D27E  6EF6               	movwf	tblptrl,c
  8918  00D280  0EA2               	movlw	high (STR_7+1)
  8919  00D282  6EF7               	movwf	tblptrh,c
  8920  00D284                     	if	0	;tblptru may be non-zero
  8921  00D284                     	endif
  8922  00D284                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8923  00D284  0E00               	movlw	low (__mediumconst shr (0+16))
  8924  00D286  6EF8               	movwf	tblptru,c
  8925  00D288                     	endif
  8926  00D288  0008               	tblrd		*
  8927  00D28A  50F5               	movf	tablat,w,c
  8928  00D28C  0012               	return	
  8929  00D28E                     
  8930                           ;fat16.c: 1097: return "MSDOS5.0"[2];
  8931  00D28E  0E15               	movlw	low (STR_7+2)
  8932  00D290  6EF6               	movwf	tblptrl,c
  8933  00D292  0EA2               	movlw	high (STR_7+2)
  8934  00D294  6EF7               	movwf	tblptrh,c
  8935  00D296                     	if	0	;tblptru may be non-zero
  8936  00D296                     	endif
  8937  00D296                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8938  00D296  0E00               	movlw	low (__mediumconst shr (0+16))
  8939  00D298  6EF8               	movwf	tblptru,c
  8940  00D29A                     	endif
  8941  00D29A  0008               	tblrd		*
  8942  00D29C  50F5               	movf	tablat,w,c
  8943  00D29E  0012               	return	
  8944  00D2A0                     
  8945                           ;fat16.c: 1099: return "MSDOS5.0"[3];
  8946  00D2A0  0E16               	movlw	low (STR_7+3)
  8947  00D2A2  6EF6               	movwf	tblptrl,c
  8948  00D2A4  0EA2               	movlw	high (STR_7+3)
  8949  00D2A6  6EF7               	movwf	tblptrh,c
  8950  00D2A8                     	if	0	;tblptru may be non-zero
  8951  00D2A8                     	endif
  8952  00D2A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8953  00D2A8  0E00               	movlw	low (__mediumconst shr (0+16))
  8954  00D2AA  6EF8               	movwf	tblptru,c
  8955  00D2AC                     	endif
  8956  00D2AC  0008               	tblrd		*
  8957  00D2AE  50F5               	movf	tablat,w,c
  8958  00D2B0  0012               	return	
  8959  00D2B2                     
  8960                           ;fat16.c: 1101: return "MSDOS5.0"[4];
  8961  00D2B2  0E17               	movlw	low (STR_7+4)
  8962  00D2B4  6EF6               	movwf	tblptrl,c
  8963  00D2B6  0EA2               	movlw	high (STR_7+4)
  8964  00D2B8  6EF7               	movwf	tblptrh,c
  8965  00D2BA                     	if	0	;tblptru may be non-zero
  8966  00D2BA                     	endif
  8967  00D2BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8968  00D2BA  0E00               	movlw	low (__mediumconst shr (0+16))
  8969  00D2BC  6EF8               	movwf	tblptru,c
  8970  00D2BE                     	endif
  8971  00D2BE  0008               	tblrd		*
  8972  00D2C0  50F5               	movf	tablat,w,c
  8973  00D2C2  0012               	return	
  8974  00D2C4                     
  8975                           ;fat16.c: 1103: return "MSDOS5.0"[5];
  8976  00D2C4  0E18               	movlw	low (STR_7+5)
  8977  00D2C6  6EF6               	movwf	tblptrl,c
  8978  00D2C8  0EA2               	movlw	high (STR_7+5)
  8979  00D2CA  6EF7               	movwf	tblptrh,c
  8980  00D2CC                     	if	0	;tblptru may be non-zero
  8981  00D2CC                     	endif
  8982  00D2CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8983  00D2CC  0E00               	movlw	low (__mediumconst shr (0+16))
  8984  00D2CE  6EF8               	movwf	tblptru,c
  8985  00D2D0                     	endif
  8986  00D2D0  0008               	tblrd		*
  8987  00D2D2  50F5               	movf	tablat,w,c
  8988  00D2D4  0012               	return	
  8989  00D2D6                     
  8990                           ;fat16.c: 1105: return "MSDOS5.0"[6];
  8991  00D2D6  0E19               	movlw	low (STR_7+6)
  8992  00D2D8  6EF6               	movwf	tblptrl,c
  8993  00D2DA  0EA2               	movlw	high (STR_7+6)
  8994  00D2DC  6EF7               	movwf	tblptrh,c
  8995  00D2DE                     	if	0	;tblptru may be non-zero
  8996  00D2DE                     	endif
  8997  00D2DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8998  00D2DE  0E00               	movlw	low (__mediumconst shr (0+16))
  8999  00D2E0  6EF8               	movwf	tblptru,c
  9000  00D2E2                     	endif
  9001  00D2E2  0008               	tblrd		*
  9002  00D2E4  50F5               	movf	tablat,w,c
  9003  00D2E6  0012               	return	
  9004  00D2E8                     
  9005                           ;fat16.c: 1107: return "MSDOS5.0"[7];
  9006  00D2E8  0E1A               	movlw	low (STR_7+7)
  9007  00D2EA  6EF6               	movwf	tblptrl,c
  9008  00D2EC  0EA2               	movlw	high (STR_7+7)
  9009  00D2EE  6EF7               	movwf	tblptrh,c
  9010  00D2F0                     	if	0	;tblptru may be non-zero
  9011  00D2F0                     	endif
  9012  00D2F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9013  00D2F0  0E00               	movlw	low (__mediumconst shr (0+16))
  9014  00D2F2  6EF8               	movwf	tblptru,c
  9015  00D2F4                     	endif
  9016  00D2F4  0008               	tblrd		*
  9017  00D2F6  50F5               	movf	tablat,w,c
  9018  00D2F8  0012               	return	
  9019  00D2FA                     
  9020                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
  9021  00D2FA  0E00               	movlw	0
  9022  00D2FC  0012               	return	
  9023  00D2FE                     
  9024                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9025  00D2FE  0E02               	movlw	2
  9026  00D300  0012               	return	
  9027  00D302                     
  9028                           ;fat16.c: 1113: return 1;
  9029  00D302  0E01               	movlw	1
  9030  00D304  0012               	return	
  9031  00D306                     
  9032                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
  9033  00D306  0E01               	movlw	1
  9034  00D308  0012               	return	
  9035  00D30A                     
  9036                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9037  00D30A  0E00               	movlw	0
  9038  00D30C  0012               	return	
  9039  00D30E                     
  9040                           ;fat16.c: 1119: return 1;
  9041  00D30E  0E01               	movlw	1
  9042  00D310  0012               	return	
  9043  00D312                     
  9044                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
  9045  00D312  0E40               	movlw	64
  9046  00D314  0012               	return	
  9047  00D316                     
  9048                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9049  00D316  0E00               	movlw	0
  9050  00D318  0012               	return	
  9051  00D31A                     
  9052                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9053  00D31A  0EFF               	movlw	255
  9054  00D31C  0012               	return	
  9055  00D31E                     
  9056                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  9057  00D31E  0E1F               	movlw	31
  9058  00D320  0012               	return	
  9059  00D322                     
  9060                           ;fat16.c: 1129: return 0XF8;
  9061  00D322  0EF8               	movlw	248
  9062  00D324  0012               	return	
  9063  00D326                     
  9064                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
  9065  00D326  0E20               	movlw	32
  9066  00D328  0012               	return	
  9067  00D32A                     
  9068                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  9069  00D32A  0E00               	movlw	0
  9070  00D32C  0012               	return	
  9071  00D32E                     
  9072                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
  9073  00D32E  0E3F               	movlw	63
  9074  00D330  0012               	return	
  9075  00D332                     
  9076                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  9077  00D332  0E00               	movlw	0
  9078  00D334  0012               	return	
  9079  00D336                     
  9080                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
  9081  00D336  0E10               	movlw	16
  9082  00D338  0012               	return	
  9083  00D33A                     
  9084                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  9085  00D33A  0E00               	movlw	0
  9086  00D33C  0012               	return	
  9087  00D33E                     
  9088                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
  9089  00D33E  0E00               	movlw	0
  9090  00D340  0012               	return	
  9091  00D342                     
  9092                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
  9093  00D342  0E00               	movlw	0
  9094  00D344  0012               	return	
  9095  00D346                     
  9096                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
  9097  00D346  0E00               	movlw	0
  9098  00D348  0012               	return	
  9099  00D34A                     
  9100                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9101  00D34A  0E00               	movlw	0
  9102  00D34C  0012               	return	
  9103  00D34E                     
  9104                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  9105  00D34E  0E01               	movlw	1
  9106  00D350  0012               	return	
  9107  00D352                     
  9108                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  9109  00D352  0E00               	movlw	0
  9110  00D354  0012               	return	
  9111  00D356                     
  9112                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
  9113  00D356  0E22               	movlw	34
  9114  00D358  0012               	return	
  9115  00D35A                     
  9116                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
  9117  00D35A  0E00               	movlw	0
  9118  00D35C  0012               	return	
  9119  00D35E                     
  9120                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9121                           
  9122                           ;fat16.c: 1160: case 0x2F:
  9123  00D35E  0E00               	movlw	0
  9124  00D360  0012               	return	
  9125  00D362                     
  9126                           ;fat16.c: 1163: return 'F';
  9127  00D362  0E46               	movlw	70
  9128  00D364  0012               	return	
  9129  00D366                     
  9130                           ;fat16.c: 1165: return 'A';
  9131  00D366  0E41               	movlw	65
  9132  00D368  0012               	return	
  9133  00D36A                     
  9134                           ;fat16.c: 1167: return 'T';
  9135  00D36A  0E54               	movlw	84
  9136  00D36C  0012               	return	
  9137  00D36E                     
  9138                           ;fat16.c: 1169: return '1';
  9139  00D36E  0E31               	movlw	49
  9140  00D370  0012               	return	
  9141  00D372                     
  9142                           ;fat16.c: 1171: return '6';
  9143  00D372  0E36               	movlw	54
  9144  00D374  0012               	return	
  9145  00D376                     
  9146                           ;fat16.c: 1173: return ' ';
  9147  00D376  0E20               	movlw	32
  9148  00D378  0012               	return	
  9149  00D37A                     
  9150                           ;fat16.c: 1175: return ' ';
  9151  00D37A  0E20               	movlw	32
  9152  00D37C  0012               	return	
  9153  00D37E                     
  9154                           ;fat16.c: 1177: return ' ';
  9155  00D37E  0E20               	movlw	32
  9156  00D380  0012               	return	
  9157  00D382                     
  9158                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  9159  00D382  0E55               	movlw	85
  9160  00D384  0012               	return	
  9161  00D386                     
  9162                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  9163  00D386  0EAA               	movlw	170
  9164  00D388  0012               	return	
  9165  00D38A                     
  9166                           ;fat16.c: 1183: return 0X00;
  9167  00D38A  0E00               	movlw	0
  9168                           
  9169                           ;fat16.c: 1184: }
  9170  00D38C  0012               	return	
  9171  00D38E                     l1889:
  9172  00D38E  C060  F062         	movff	__get_fbr@idx,??__get_fbr
  9173  00D392  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
  9174                           
  9175                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9176                           ; Switch size 1, requested type "space"
  9177                           ; Number of cases is 2, Range of values is 0 to 1
  9178                           ; switch strategies available:
  9179                           ; Name         Instructions Cycles
  9180                           ; simple_byte            7     4 (average)
  9181                           ;	Chosen strategy is simple_byte
  9182  00D396  0100               	movlb	0	; () banked
  9183  00D398  5163               	movf	(??__get_fbr+1)& (0+255),w,b
  9184  00D39A  0A00               	xorlw	0	; case 0
  9185  00D39C  B4D8               	btfsc	status,2,c
  9186  00D39E  D004               	goto	l23574
  9187  00D3A0  0A01               	xorlw	1	; case 1
  9188  00D3A2  B4D8               	btfsc	status,2,c
  9189  00D3A4  D08D               	goto	l23576
  9190  00D3A6  D7F1               	goto	l1939
  9191  00D3A8                     l23574:
  9192                           
  9193                           ; BSR set to: 0
  9194                           ; Switch size 1, requested type "space"
  9195                           ; Number of cases is 46, Range of values is 0 to 61
  9196                           ; switch strategies available:
  9197                           ; Name         Instructions Cycles
  9198                           ; simple_byte          139    70 (average)
  9199                           ;	Chosen strategy is simple_byte
  9200  00D3A8  5162               	movf	??__get_fbr& (0+255),w,b
  9201  00D3AA  0A00               	xorlw	0	; case 0
  9202  00D3AC  B4D8               	btfsc	status,2,c
  9203  00D3AE  D757               	goto	l1890
  9204  00D3B0  0A01               	xorlw	1	; case 1
  9205  00D3B2  B4D8               	btfsc	status,2,c
  9206  00D3B4  D756               	goto	l1892
  9207  00D3B6  0A03               	xorlw	3	; case 2
  9208  00D3B8  B4D8               	btfsc	status,2,c
  9209  00D3BA  D755               	goto	l1893
  9210  00D3BC  0A01               	xorlw	1	; case 3
  9211  00D3BE  B4D8               	btfsc	status,2,c
  9212  00D3C0  D754               	goto	l1894
  9213  00D3C2  0A07               	xorlw	7	; case 4
  9214  00D3C4  B4D8               	btfsc	status,2,c
  9215  00D3C6  D75A               	goto	l1895
  9216  00D3C8  0A01               	xorlw	1	; case 5
  9217  00D3CA  B4D8               	btfsc	status,2,c
  9218  00D3CC  D760               	goto	l1896
  9219  00D3CE  0A03               	xorlw	3	; case 6
  9220  00D3D0  B4D8               	btfsc	status,2,c
  9221  00D3D2  D766               	goto	l1897
  9222  00D3D4  0A01               	xorlw	1	; case 7
  9223  00D3D6  B4D8               	btfsc	status,2,c
  9224  00D3D8  D76C               	goto	l1898
  9225  00D3DA  0A0F               	xorlw	15	; case 8
  9226  00D3DC  B4D8               	btfsc	status,2,c
  9227  00D3DE  D772               	goto	l1899
  9228  00D3E0  0A01               	xorlw	1	; case 9
  9229  00D3E2  B4D8               	btfsc	status,2,c
  9230  00D3E4  D778               	goto	l1900
  9231  00D3E6  0A03               	xorlw	3	; case 10
  9232  00D3E8  B4D8               	btfsc	status,2,c
  9233  00D3EA  D77E               	goto	l1901
  9234  00D3EC  0A01               	xorlw	1	; case 11
  9235  00D3EE  B4D8               	btfsc	status,2,c
  9236  00D3F0  D784               	goto	l1902
  9237  00D3F2  0A07               	xorlw	7	; case 12
  9238  00D3F4  B4D8               	btfsc	status,2,c
  9239  00D3F6  D783               	goto	l1903
  9240  00D3F8  0A01               	xorlw	1	; case 13
  9241  00D3FA  B4D8               	btfsc	status,2,c
  9242  00D3FC  D782               	goto	l1904
  9243  00D3FE  0A03               	xorlw	3	; case 14
  9244  00D400  B4D8               	btfsc	status,2,c
  9245  00D402  D781               	goto	l1905
  9246  00D404  0A01               	xorlw	1	; case 15
  9247  00D406  B4D8               	btfsc	status,2,c
  9248  00D408  D780               	goto	l1906
  9249  00D40A  0A1F               	xorlw	31	; case 16
  9250  00D40C  B4D8               	btfsc	status,2,c
  9251  00D40E  D77F               	goto	l1907
  9252  00D410  0A01               	xorlw	1	; case 17
  9253  00D412  B4D8               	btfsc	status,2,c
  9254  00D414  D77E               	goto	l1908
  9255  00D416  0A03               	xorlw	3	; case 18
  9256  00D418  B4D8               	btfsc	status,2,c
  9257  00D41A  D77D               	goto	l1909
  9258  00D41C  0A01               	xorlw	1	; case 19
  9259  00D41E  B4D8               	btfsc	status,2,c
  9260  00D420  D77C               	goto	l1910
  9261  00D422  0A07               	xorlw	7	; case 20
  9262  00D424  B4D8               	btfsc	status,2,c
  9263  00D426  D77B               	goto	l1911
  9264  00D428  0A01               	xorlw	1	; case 21
  9265  00D42A  B4D8               	btfsc	status,2,c
  9266  00D42C  D77A               	goto	l1912
  9267  00D42E  0A03               	xorlw	3	; case 22
  9268  00D430  B4D8               	btfsc	status,2,c
  9269  00D432  D779               	goto	l1913
  9270  00D434  0A01               	xorlw	1	; case 23
  9271  00D436  B4D8               	btfsc	status,2,c
  9272  00D438  D778               	goto	l1914
  9273  00D43A  0A0F               	xorlw	15	; case 24
  9274  00D43C  B4D8               	btfsc	status,2,c
  9275  00D43E  D777               	goto	l1915
  9276  00D440  0A01               	xorlw	1	; case 25
  9277  00D442  B4D8               	btfsc	status,2,c
  9278  00D444  D776               	goto	l1916
  9279  00D446  0A03               	xorlw	3	; case 26
  9280  00D448  B4D8               	btfsc	status,2,c
  9281  00D44A  D775               	goto	l1917
  9282  00D44C  0A01               	xorlw	1	; case 27
  9283  00D44E  B4D8               	btfsc	status,2,c
  9284  00D450  D774               	goto	l1918
  9285  00D452  0A07               	xorlw	7	; case 28
  9286  00D454  B4D8               	btfsc	status,2,c
  9287  00D456  D773               	goto	l1919
  9288  00D458  0A01               	xorlw	1	; case 29
  9289  00D45A  B4D8               	btfsc	status,2,c
  9290  00D45C  D772               	goto	l1920
  9291  00D45E  0A03               	xorlw	3	; case 30
  9292  00D460  B4D8               	btfsc	status,2,c
  9293  00D462  D771               	goto	l1921
  9294  00D464  0A01               	xorlw	1	; case 31
  9295  00D466  B4D8               	btfsc	status,2,c
  9296  00D468  D770               	goto	l1922
  9297  00D46A  0A37               	xorlw	55	; case 40
  9298  00D46C  B4D8               	btfsc	status,2,c
  9299  00D46E  D76F               	goto	l1923
  9300  00D470  0A01               	xorlw	1	; case 41
  9301  00D472  B4D8               	btfsc	status,2,c
  9302  00D474  D76E               	goto	l1924
  9303  00D476  0A05               	xorlw	5	; case 44
  9304  00D478  B4D8               	btfsc	status,2,c
  9305  00D47A  D76D               	goto	l1925
  9306  00D47C  0A01               	xorlw	1	; case 45
  9307  00D47E  B4D8               	btfsc	status,2,c
  9308  00D480  D76C               	goto	l1926
  9309  00D482  0A03               	xorlw	3	; case 46
  9310  00D484  B4D8               	btfsc	status,2,c
  9311  00D486  D76B               	goto	l1927
  9312  00D488  0A01               	xorlw	1	; case 47
  9313  00D48A  B4D8               	btfsc	status,2,c
  9314  00D48C  D768               	goto	l1927
  9315  00D48E  0A19               	xorlw	25	; case 54
  9316  00D490  B4D8               	btfsc	status,2,c
  9317  00D492  D767               	goto	l1929
  9318  00D494  0A01               	xorlw	1	; case 55
  9319  00D496  B4D8               	btfsc	status,2,c
  9320  00D498  D766               	goto	l1930
  9321  00D49A  0A0F               	xorlw	15	; case 56
  9322  00D49C  B4D8               	btfsc	status,2,c
  9323  00D49E  D765               	goto	l1931
  9324  00D4A0  0A01               	xorlw	1	; case 57
  9325  00D4A2  B4D8               	btfsc	status,2,c
  9326  00D4A4  D764               	goto	l1932
  9327  00D4A6  0A03               	xorlw	3	; case 58
  9328  00D4A8  B4D8               	btfsc	status,2,c
  9329  00D4AA  D763               	goto	l1933
  9330  00D4AC  0A01               	xorlw	1	; case 59
  9331  00D4AE  B4D8               	btfsc	status,2,c
  9332  00D4B0  D762               	goto	l1934
  9333  00D4B2  0A07               	xorlw	7	; case 60
  9334  00D4B4  B4D8               	btfsc	status,2,c
  9335  00D4B6  D761               	goto	l1935
  9336  00D4B8  0A01               	xorlw	1	; case 61
  9337  00D4BA  B4D8               	btfsc	status,2,c
  9338  00D4BC  D760               	goto	l1936
  9339  00D4BE  D765               	goto	l1939
  9340  00D4C0                     l23576:
  9341                           
  9342                           ; BSR set to: 0
  9343                           ; Switch size 1, requested type "space"
  9344                           ; Number of cases is 2, Range of values is 254 to 255
  9345                           ; switch strategies available:
  9346                           ; Name         Instructions Cycles
  9347                           ; simple_byte            7     4 (average)
  9348                           ;	Chosen strategy is simple_byte
  9349  00D4C0  5162               	movf	??__get_fbr& (0+255),w,b
  9350  00D4C2  0AFE               	xorlw	254	; case 254
  9351  00D4C4  B4D8               	btfsc	status,2,c
  9352  00D4C6  D75D               	goto	l1937
  9353  00D4C8  0A01               	xorlw	1	; case 255
  9354  00D4CA  B4D8               	btfsc	status,2,c
  9355  00D4CC  D75C               	goto	l1938
  9356  00D4CE  D75D               	goto	l1939
  9357  00D4D0                     __end_of__get_fbr:
  9358                           	opt stack 0
  9359                           tblptru	equ	0xFF8
  9360                           tblptrh	equ	0xFF7
  9361                           tblptrl	equ	0xFF6
  9362                           tablat	equ	0xFF5
  9363                           postinc0	equ	0xFEE
  9364                           wreg	equ	0xFE8
  9365                           postdec1	equ	0xFE5
  9366                           fsr1h	equ	0xFE2
  9367                           fsr1l	equ	0xFE1
  9368                           indf2	equ	0xFDF
  9369                           postinc2	equ	0xFDE
  9370                           fsr2h	equ	0xFDA
  9371                           fsr2l	equ	0xFD9
  9372                           status	equ	0xFD8
  9373                           
  9374 ;; *************** function __get_fat *****************
  9375 ;; Defined at:
  9376 ;;		line 1187 in file "fat16.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;  idx             2    0[BANK0 ] unsigned int 
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;		None
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  1    wreg      unsigned char 
  9383 ;; Registers used:
  9384 ;;		wreg, status,2, status,0
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/0
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9390 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9392 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9393 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9394 ;;Total ram usage:        4 bytes
  9395 ;; Hardware stack levels used:    1
  9396 ;; Hardware stack levels required when called:   10
  9397 ;; This function calls:
  9398 ;;		Nothing
  9399 ;; This function is called by:
  9400 ;;		_fat_format
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           
  9404                           	psect	text19
  9405  012016                     __ptext19:
  9406                           	opt stack 0
  9407  012016                     __get_fat:
  9408                           	opt stack 17
  9409                           
  9410                           ;fat16.c: 1189: switch (idx)
  9411                           
  9412                           ;incstack = 0
  9413  012016  D00E               	goto	l1943
  9414  012018                     
  9415                           ;fat16.c: 1193: return 0xF8;
  9416  012018  0EF8               	movlw	248
  9417  01201A  0012               	return	
  9418  01201C                     
  9419                           ;fat16.c: 1195: return 0xFF;
  9420  01201C  0EFF               	movlw	255
  9421  01201E  0012               	return	
  9422  012020                     
  9423                           ;fat16.c: 1197: return 0xFF;
  9424  012020  0EFF               	movlw	255
  9425  012022  0012               	return	
  9426  012024                     
  9427                           ;fat16.c: 1199: return 0xFF;
  9428  012024  0EFF               	movlw	255
  9429  012026  0012               	return	
  9430  012028                     
  9431                           ;fat16.c: 1202: return 0xFF;
  9432  012028  0EFF               	movlw	255
  9433  01202A  0012               	return	
  9434  01202C                     
  9435                           ;fat16.c: 1204: return 0xFF;
  9436  01202C  0EFF               	movlw	255
  9437  01202E  0012               	return	
  9438  012030                     
  9439                           ;fat16.c: 1206: return 0X00;
  9440  012030  0E00               	movlw	0
  9441                           
  9442                           ;fat16.c: 1207: }
  9443  012032  0012               	return	
  9444  012034                     l1943:
  9445  012034  C060  F062         	movff	__get_fat@idx,??__get_fat
  9446  012038  C061  F063         	movff	__get_fat@idx+1,??__get_fat+1
  9447                           
  9448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9449                           ; Switch size 1, requested type "space"
  9450                           ; Number of cases is 1, Range of values is 0 to 0
  9451                           ; switch strategies available:
  9452                           ; Name         Instructions Cycles
  9453                           ; simple_byte            4     3 (average)
  9454                           ;	Chosen strategy is simple_byte
  9455  01203C  0100               	movlb	0	; () banked
  9456  01203E  5163               	movf	(??__get_fat+1)& (0+255),w,b
  9457  012040  0A00               	xorlw	0	; case 0
  9458  012042  A4D8               	btfss	status,2,c
  9459  012044  D7F5               	goto	l1951
  9460                           
  9461                           ; BSR set to: 0
  9462                           ; Switch size 1, requested type "space"
  9463                           ; Number of cases is 6, Range of values is 0 to 5
  9464                           ; switch strategies available:
  9465                           ; Name         Instructions Cycles
  9466                           ; simple_byte           19    10 (average)
  9467                           ;	Chosen strategy is simple_byte
  9468  012046  5162               	movf	??__get_fat& (0+255),w,b
  9469  012048  0A00               	xorlw	0	; case 0
  9470  01204A  B4D8               	btfsc	status,2,c
  9471  01204C  D7E5               	goto	l1944
  9472  01204E  0A01               	xorlw	1	; case 1
  9473  012050  B4D8               	btfsc	status,2,c
  9474  012052  D7E4               	goto	l1946
  9475  012054  0A03               	xorlw	3	; case 2
  9476  012056  B4D8               	btfsc	status,2,c
  9477  012058  D7E3               	goto	l1947
  9478  01205A  0A01               	xorlw	1	; case 3
  9479  01205C  B4D8               	btfsc	status,2,c
  9480  01205E  D7E2               	goto	l1948
  9481  012060  0A07               	xorlw	7	; case 4
  9482  012062  B4D8               	btfsc	status,2,c
  9483  012064  D7E1               	goto	l1949
  9484  012066  0A01               	xorlw	1	; case 5
  9485  012068  B4D8               	btfsc	status,2,c
  9486  01206A  D7E0               	goto	l1950
  9487  01206C  D7E1               	goto	l1951
  9488  01206E                     __end_of__get_fat:
  9489                           	opt stack 0
  9490                           tblptru	equ	0xFF8
  9491                           tblptrh	equ	0xFF7
  9492                           tblptrl	equ	0xFF6
  9493                           tablat	equ	0xFF5
  9494                           postinc0	equ	0xFEE
  9495                           wreg	equ	0xFE8
  9496                           postdec1	equ	0xFE5
  9497                           fsr1h	equ	0xFE2
  9498                           fsr1l	equ	0xFE1
  9499                           indf2	equ	0xFDF
  9500                           postinc2	equ	0xFDE
  9501                           fsr2h	equ	0xFDA
  9502                           fsr2l	equ	0xFD9
  9503                           status	equ	0xFD8
  9504                           
  9505 ;; *************** function __get_data *****************
  9506 ;; Defined at:
  9507 ;;		line 1283 in file "fat16.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;  idx             2    0[BANK0 ] unsigned int 
  9510 ;; Auto vars:     Size  Location     Type
  9511 ;;		None
  9512 ;; Return value:  Size  Location     Type
  9513 ;;                  1    wreg      unsigned char 
  9514 ;; Registers used:
  9515 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9516 ;; Tracked objects:
  9517 ;;		On entry : 0/0
  9518 ;;		On exit  : 0/0
  9519 ;;		Unchanged: 0/0
  9520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9521 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9524 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9525 ;;Total ram usage:        2 bytes
  9526 ;; Hardware stack levels used:    1
  9527 ;; Hardware stack levels required when called:   10
  9528 ;; This function calls:
  9529 ;;		Nothing
  9530 ;; This function is called by:
  9531 ;;		_fat_format
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           	psect	text20
  9536  012AD0                     __ptext20:
  9537                           	opt stack 0
  9538  012AD0                     __get_data:
  9539                           	opt stack 17
  9540                           
  9541                           ;fat16.c: 1285: if(idx < 12)
  9542                           
  9543                           ;incstack = 0
  9544  012AD0  0100               	movlb	0	; () banked
  9545  012AD2  5161               	movf	(__get_data@idx+1)& (0+255),w,b
  9546  012AD4  E110               	bnz	l19254
  9547  012AD6  0E0C               	movlw	12
  9548  012AD8  5D60               	subwf	__get_data@idx& (0+255),w,b
  9549  012ADA  B0D8               	btfsc	status,0,c
  9550  012ADC  D00C               	goto	l1987
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
  9554  012ADE  0EF1               	movlw	low STR_18
  9555  012AE0  2560               	addwf	__get_data@idx& (0+255),w,b
  9556  012AE2  6EF6               	movwf	tblptrl,c
  9557  012AE4  0EA1               	movlw	high STR_18
  9558  012AE6  2161               	addwfc	(__get_data@idx+1)& (0+255),w,b
  9559  012AE8  6EF7               	movwf	tblptrh,c
  9560  012AEA                     	if	1	;There are 3 active tblptr bytes
  9561  012AEA  6AF8               	clrf	tblptru,c
  9562  012AEC  0E00               	movlw	low (__mediumconst shr (0+16))
  9563  012AEE  22F8               	addwfc	tblptru,f,c
  9564  012AF0                     	endif
  9565  012AF0  0008               	tblrd		*
  9566  012AF2  50F5               	movf	tablat,w,c
  9567                           
  9568                           ; BSR set to: 0
  9569  012AF4  0012               	return	
  9570  012AF6                     l1987:
  9571  012AF6                     l19254:
  9572                           
  9573                           ; BSR set to: 0
  9574                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
  9575  012AF6  0E00               	movlw	0
  9576  012AF8  0012               	return	
  9577  012AFA                     __end_of__get_data:
  9578                           	opt stack 0
  9579                           tblptru	equ	0xFF8
  9580                           tblptrh	equ	0xFF7
  9581                           tblptrl	equ	0xFF6
  9582                           tablat	equ	0xFF5
  9583                           postinc0	equ	0xFEE
  9584                           wreg	equ	0xFE8
  9585                           postdec1	equ	0xFE5
  9586                           fsr1h	equ	0xFE2
  9587                           fsr1l	equ	0xFE1
  9588                           indf2	equ	0xFDF
  9589                           postinc2	equ	0xFDE
  9590                           fsr2h	equ	0xFDA
  9591                           fsr2l	equ	0xFD9
  9592                           status	equ	0xFD8
  9593                           
  9594 ;; *************** function _encoder_init *****************
  9595 ;; Defined at:
  9596 ;;		line 92 in file "encoder.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;		None
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;		None
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  1    wreg      void 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9614 ;;Total ram usage:        0 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:   10
  9617 ;; This function calls:
  9618 ;;		Nothing
  9619 ;; This function is called by:
  9620 ;;		_system_init
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text21
  9625  012B4C                     __ptext21:
  9626                           	opt stack 0
  9627  012B4C                     _encoder_init:
  9628                           	opt stack 19
  9629                           
  9630                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;incstack = 0
  9634  012B4C  5084               	movf	3972,w,c	;volatile
  9635  012B4E  0B07               	andlw	7
  9636  012B50  6E1A               	movwf	_enc1,c
  9637                           
  9638                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
  9639  012B52  5080               	movf	3968,w,c	;volatile
  9640  012B54  0B07               	andlw	7
  9641  012B56  6E19               	movwf	_enc2,c
  9642                           
  9643                           ;encoder.c: 96: os.encoder1Count = 0;
  9644  012B58  0E00               	movlw	0
  9645  012B5A  0100               	movlb	0	; () banked
  9646  012B5C  6FD3               	movwf	(_os+3)& (0+255),b	;volatile
  9647                           
  9648                           ; BSR set to: 0
  9649                           ;encoder.c: 97: os.encoder2Count = 0;
  9650  012B5E  0E00               	movlw	0
  9651  012B60  6FD5               	movwf	(_os+5)& (0+255),b	;volatile
  9652                           
  9653                           ; BSR set to: 0
  9654                           ;encoder.c: 98: os.button1 = 0;
  9655  012B62  0E00               	movlw	0
  9656  012B64  6FD4               	movwf	(_os+4)& (0+255),b	;volatile
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;encoder.c: 99: os.button2 = 0;
  9660  012B66  0E00               	movlw	0
  9661  012B68  6FD6               	movwf	(_os+6)& (0+255),b	;volatile
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  9665  012B6A  0E01               	movlw	1
  9666  012B6C  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
  9667                           
  9668                           ; BSR set to: 0
  9669  012B6E  0012               	return		;funcret
  9670  012B70                     __end_of_encoder_init:
  9671                           	opt stack 0
  9672                           tblptru	equ	0xFF8
  9673                           tblptrh	equ	0xFF7
  9674                           tblptrl	equ	0xFF6
  9675                           tablat	equ	0xFF5
  9676                           postinc0	equ	0xFEE
  9677                           wreg	equ	0xFE8
  9678                           postdec1	equ	0xFE5
  9679                           fsr1h	equ	0xFE2
  9680                           fsr1l	equ	0xFE1
  9681                           indf2	equ	0xFDF
  9682                           postinc2	equ	0xFDE
  9683                           fsr2h	equ	0xFDA
  9684                           fsr2l	equ	0xFD9
  9685                           status	equ	0xFD8
  9686                           
  9687 ;; *************** function _display_update *****************
  9688 ;; Defined at:
  9689 ;;		line 570 in file "display.c"
  9690 ;; Parameters:    Size  Location     Type
  9691 ;;		None
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;  line            1   16[BANK0 ] unsigned char 
  9694 ;; Return value:  Size  Location     Type
  9695 ;;                  1    wreg      void 
  9696 ;; Registers used:
  9697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9698 ;; Tracked objects:
  9699 ;;		On entry : 0/0
  9700 ;;		On exit  : 0/0
  9701 ;;		Unchanged: 0/0
  9702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9704 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9706 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9707 ;;Total ram usage:        1 bytes
  9708 ;; Hardware stack levels used:    1
  9709 ;; Hardware stack levels required when called:   14
  9710 ;; This function calls:
  9711 ;;		_i2c_display_cursor
  9712 ;;		_i2c_display_write_fixed
  9713 ;; This function is called by:
  9714 ;;		_main
  9715 ;;		_system_init
  9716 ;; This function uses a non-reentrant model
  9717 ;;
  9718                           
  9719                           	psect	text22
  9720  0127AA                     __ptext22:
  9721                           	opt stack 0
  9722  0127AA                     _display_update:
  9723                           	opt stack 15
  9724                           
  9725                           ;display.c: 572: uint8_t line;;display.c: 573: for(line=0; line<4; ++line)
  9726                           
  9727                           ; BSR set to: 0
  9728                           ;incstack = 0
  9729  0127AA  0E00               	movlw	0
  9730  0127AC  0100               	movlb	0	; () banked
  9731  0127AE  6F70               	movwf	display_update@line& (0+255),b
  9732  0127B0                     l20752:
  9733                           
  9734                           ; BSR set to: 0
  9735  0127B0  0E03               	movlw	3
  9736  0127B2  6570               	cpfsgt	display_update@line& (0+255),b
  9737  0127B4  D001               	goto	l1435
  9738  0127B6  0012               	return	
  9739  0127B8                     l1435:
  9740                           
  9741                           ; BSR set to: 0
  9742                           ;display.c: 574: {;display.c: 575: i2c_display_cursor(line, 0);
  9743                           
  9744                           ; BSR set to: 0
  9745  0127B8  0E00               	movlw	0
  9746  0127BA  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
  9747  0127BC  5170               	movf	display_update@line& (0+255),w,b
  9748  0127BE  ECCA  F095         	call	_i2c_display_cursor
  9749                           
  9750                           ;display.c: 576: i2c_display_write_fixed(display_content[line], 20);
  9751  0127C2  0100               	movlb	0	; () banked
  9752  0127C4  5170               	movf	display_update@line& (0+255),w,b
  9753  0127C6  0D14               	mullw	20
  9754  0127C8  0E78               	movlw	low _display_content
  9755  0127CA  24F3               	addwf	prodl,w,c
  9756  0127CC  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
  9757  0127CE  0E02               	movlw	high _display_content
  9758  0127D0  20F4               	addwfc	prodh,w,c
  9759  0127D2  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
  9760  0127D4  0E14               	movlw	20
  9761  0127D6  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
  9762  0127D8  ECBA  F090         	call	_i2c_display_write_fixed	;wreg free
  9763  0127DC  0100               	movlb	0	; () banked
  9764  0127DE  2B70               	incf	display_update@line& (0+255),f,b
  9765  0127E0  D7E7               	goto	l20752
  9766  0127E2                     __end_of_display_update:
  9767                           	opt stack 0
  9768                           tblptru	equ	0xFF8
  9769                           tblptrh	equ	0xFF7
  9770                           tblptrl	equ	0xFF6
  9771                           tablat	equ	0xFF5
  9772                           prodh	equ	0xFF4
  9773                           prodl	equ	0xFF3
  9774                           postinc0	equ	0xFEE
  9775                           wreg	equ	0xFE8
  9776                           postdec1	equ	0xFE5
  9777                           fsr1h	equ	0xFE2
  9778                           fsr1l	equ	0xFE1
  9779                           indf2	equ	0xFDF
  9780                           postinc2	equ	0xFDE
  9781                           fsr2h	equ	0xFDA
  9782                           fsr2l	equ	0xFD9
  9783                           status	equ	0xFD8
  9784                           
  9785 ;; *************** function _i2c_display_write_fixed *****************
  9786 ;; Defined at:
  9787 ;;		line 395 in file "i2c.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;  data            2    5[BANK0 ] PTR unsigned char 
  9790 ;;		 -> display_content(80), 
  9791 ;;  length          1    7[BANK0 ] unsigned char 
  9792 ;; Auto vars:     Size  Location     Type
  9793 ;;  pos             1    8[BANK0 ] unsigned char 
  9794 ;; Return value:  Size  Location     Type
  9795 ;;                  1    wreg      void 
  9796 ;; Registers used:
  9797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9798 ;; Tracked objects:
  9799 ;;		On entry : 0/0
  9800 ;;		On exit  : 0/0
  9801 ;;		Unchanged: 0/0
  9802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9803 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9804 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9806 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9807 ;;Total ram usage:        4 bytes
  9808 ;; Hardware stack levels used:    1
  9809 ;; Hardware stack levels required when called:   11
  9810 ;; This function calls:
  9811 ;;		__i2c_send
  9812 ;;		__i2c_start
  9813 ;;		__i2c_stop
  9814 ;;		__i2c_wait_idle
  9815 ;; This function is called by:
  9816 ;;		_display_update
  9817 ;; This function uses a non-reentrant model
  9818 ;;
  9819                           
  9820                           	psect	text23
  9821  012174                     __ptext23:
  9822                           	opt stack 0
  9823  012174                     _i2c_display_write_fixed:
  9824                           	opt stack 17
  9825                           
  9826                           ;i2c.c: 397: uint8_t pos;;i2c.c: 402: _i2c_wait_idle();
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;incstack = 0
  9830  012174  EC04  F08E         	call	__i2c_wait_idle	;wreg free
  9831                           
  9832                           ;i2c.c: 403: _i2c_start();
  9833  012178  EC89  F096         	call	__i2c_start	;wreg free
  9834                           
  9835                           ;i2c.c: 404: _i2c_wait_idle();
  9836  01217C  EC04  F08E         	call	__i2c_wait_idle	;wreg free
  9837                           
  9838                           ;i2c.c: 405: _i2c_send(0b01111000);
  9839  012180  0E78               	movlw	120
  9840  012182  EC71  F096         	call	__i2c_send
  9841                           
  9842                           ;i2c.c: 406: _i2c_wait_idle();
  9843  012186  EC04  F08E         	call	__i2c_wait_idle	;wreg free
  9844                           
  9845                           ;i2c.c: 407: _i2c_send(0b01000000);
  9846  01218A  0E40               	movlw	64
  9847  01218C  EC71  F096         	call	__i2c_send
  9848                           
  9849                           ;i2c.c: 408: _i2c_wait_idle();
  9850  012190  EC04  F08E         	call	__i2c_wait_idle	;wreg free
  9851                           
  9852                           ;i2c.c: 411: for(pos=0; pos<length; ++pos)
  9853  012194  0E00               	movlw	0
  9854  012196  0100               	movlb	0	; () banked
  9855  012198  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
  9856  01219A  D00F               	goto	l1211
  9857  01219C                     
  9858                           ; BSR set to: 0
  9859                           ;i2c.c: 412: {;i2c.c: 413: _i2c_send(data[pos]);
  9860                           
  9861                           ; BSR set to: 0
  9862  01219C  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
  9863  01219E  0D01               	mullw	1
  9864  0121A0  50F3               	movf	prodl,w,c
  9865  0121A2  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
  9866  0121A4  6ED9               	movwf	fsr2l,c
  9867  0121A6  50F4               	movf	prodh,w,c
  9868  0121A8  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
  9869  0121AA  6EDA               	movwf	fsr2h,c
  9870  0121AC  50DF               	movf	indf2,w,c
  9871  0121AE  EC71  F096         	call	__i2c_send
  9872                           
  9873                           ;i2c.c: 414: _i2c_wait_idle();
  9874  0121B2  EC04  F08E         	call	__i2c_wait_idle	;wreg free
  9875  0121B6  0100               	movlb	0	; () banked
  9876  0121B8  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
  9877  0121BA                     l1211:
  9878                           
  9879                           ; BSR set to: 0
  9880                           
  9881                           ; BSR set to: 0
  9882  0121BA  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
  9883  0121BC  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
  9884  0121BE  A0D8               	btfss	status,0,c
  9885  0121C0  D7ED               	goto	l1212
  9886                           
  9887                           ; BSR set to: 0
  9888                           ;i2c.c: 415: };i2c.c: 417: _i2c_stop();
  9889                           
  9890                           ; BSR set to: 0
  9891  0121C2  EC85  F096         	call	__i2c_stop	;wreg free
  9892  0121C6  0012               	return		;funcret
  9893  0121C8                     __end_of_i2c_display_write_fixed:
  9894                           	opt stack 0
  9895                           tblptru	equ	0xFF8
  9896                           tblptrh	equ	0xFF7
  9897                           tblptrl	equ	0xFF6
  9898                           tablat	equ	0xFF5
  9899                           prodh	equ	0xFF4
  9900                           prodl	equ	0xFF3
  9901                           postinc0	equ	0xFEE
  9902                           wreg	equ	0xFE8
  9903                           postdec1	equ	0xFE5
  9904                           fsr1h	equ	0xFE2
  9905                           fsr1l	equ	0xFE1
  9906                           indf2	equ	0xFDF
  9907                           postinc2	equ	0xFDE
  9908                           fsr2h	equ	0xFDA
  9909                           fsr2l	equ	0xFD9
  9910                           status	equ	0xFD8
  9911                           
  9912 ;; *************** function _i2c_display_cursor *****************
  9913 ;; Defined at:
  9914 ;;		line 355 in file "i2c.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;  line            1    wreg     unsigned char 
  9917 ;;  position        1   13[BANK0 ] unsigned char 
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;  line            1   14[BANK0 ] unsigned char 
  9920 ;;  address         1   15[BANK0 ] unsigned char 
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  1    wreg      void 
  9923 ;; Registers used:
  9924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9930 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9931 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9933 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9934 ;;Total ram usage:        3 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; Hardware stack levels required when called:   13
  9937 ;; This function calls:
  9938 ;;		__ic2_display_set_ddram_address
  9939 ;; This function is called by:
  9940 ;;		_display_update
  9941 ;; This function uses a non-reentrant model
  9942 ;;
  9943                           
  9944                           	psect	text24
  9945  012B94                     __ptext24:
  9946                           	opt stack 0
  9947  012B94                     _i2c_display_cursor:
  9948                           	opt stack 15
  9949                           
  9950                           ;incstack = 0
  9951                           ;i2c_display_cursor@line stored from wreg
  9952  012B94  0100               	movlb	0	; () banked
  9953  012B96  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
  9954                           
  9955                           ;i2c.c: 357: uint8_t address;;i2c.c: 360: line &= 0b11;
  9956  012B98  0E03               	movlw	3
  9957  012B9A  0100               	movlb	0	; () banked
  9958  012B9C  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
  9959                           
  9960                           ;i2c.c: 361: address = line<<5;
  9961  012B9E  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
  9962  012BA0  46E8               	rlncf	wreg,f,c
  9963  012BA2  0BE0               	andlw	224
  9964  012BA4  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
  9965                           
  9966                           ;i2c.c: 362: position &= 0b11111;
  9967  012BA6  0E1F               	movlw	31
  9968  012BA8  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
  9969                           
  9970                           ;i2c.c: 363: address |= position;
  9971  012BAA  516D               	movf	i2c_display_cursor@position& (0+255),w,b
  9972  012BAC  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;i2c.c: 369: _ic2_display_set_ddram_address(address);
  9976  012BAE  516F               	movf	i2c_display_cursor@address& (0+255),w,b
  9977  012BB0  ECB8  F095         	call	__ic2_display_set_ddram_address
  9978  012BB4  0012               	return		;funcret
  9979  012BB6                     __end_of_i2c_display_cursor:
  9980                           	opt stack 0
  9981                           tblptru	equ	0xFF8
  9982                           tblptrh	equ	0xFF7
  9983                           tblptrl	equ	0xFF6
  9984                           tablat	equ	0xFF5
  9985                           prodh	equ	0xFF4
  9986                           prodl	equ	0xFF3
  9987                           postinc0	equ	0xFEE
  9988                           wreg	equ	0xFE8
  9989                           postdec1	equ	0xFE5
  9990                           fsr1h	equ	0xFE2
  9991                           fsr1l	equ	0xFE1
  9992                           indf2	equ	0xFDF
  9993                           postinc2	equ	0xFDE
  9994                           fsr2h	equ	0xFDA
  9995                           fsr2l	equ	0xFD9
  9996                           status	equ	0xFD8
  9997                           
  9998 ;; *************** function __ic2_display_set_ddram_address *****************
  9999 ;; Defined at:
 10000 ;;		line 326 in file "i2c.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;  address         1    wreg     unsigned char 
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;  address         1   10[BANK0 ] unsigned char 
 10005 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 10006 ;; Return value:  Size  Location     Type
 10007 ;;                  1    wreg      void 
 10008 ;; Registers used:
 10009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10010 ;; Tracked objects:
 10011 ;;		On entry : 0/0
 10012 ;;		On exit  : 0/0
 10013 ;;		Unchanged: 0/0
 10014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10016 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10018 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10019 ;;Total ram usage:        3 bytes
 10020 ;; Hardware stack levels used:    1
 10021 ;; Hardware stack levels required when called:   12
 10022 ;; This function calls:
 10023 ;;		__i2c_write
 10024 ;; This function is called by:
 10025 ;;		_i2c_display_cursor
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029                           	psect	text25
 10030  012B70                     __ptext25:
 10031                           	opt stack 0
 10032  012B70                     __ic2_display_set_ddram_address:
 10033                           	opt stack 15
 10034                           
 10035                           ;incstack = 0
 10036                           ;__ic2_display_set_ddram_address@address stored from wreg
 10037  012B70  0100               	movlb	0	; () banked
 10038  012B72  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10039                           
 10040                           ;i2c.c: 328: uint8_t data_array[2];;i2c.c: 329: data_array[0] = 0b00000000;
 10041  012B74  0E00               	movlw	0
 10042  012B76  0100               	movlb	0	; () banked
 10043  012B78  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 10044                           
 10045                           ; BSR set to: 0
 10046                           ;i2c.c: 330: data_array[1] = 0b10000000 | address;
 10047  012B7A  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 10048  012B7C  0980               	iorlw	128
 10049  012B7E  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;i2c.c: 336: _i2c_write(0b01111000, &data_array[0], 2);
 10053  012B80  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 10054  012B82  6F65               	movwf	__i2c_write@data& (0+255),b
 10055  012B84  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 10056  012B86  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10057  012B88  0E02               	movlw	2
 10058  012B8A  6F67               	movwf	__i2c_write@length& (0+255),b
 10059  012B8C  0E78               	movlw	120
 10060  012B8E  EC02  F092         	call	__i2c_write
 10061  012B92  0012               	return		;funcret
 10062  012B94                     __end_of__ic2_display_set_ddram_address:
 10063                           	opt stack 0
 10064                           tblptru	equ	0xFF8
 10065                           tblptrh	equ	0xFF7
 10066                           tblptrl	equ	0xFF6
 10067                           tablat	equ	0xFF5
 10068                           prodh	equ	0xFF4
 10069                           prodl	equ	0xFF3
 10070                           postinc0	equ	0xFEE
 10071                           wreg	equ	0xFE8
 10072                           postdec1	equ	0xFE5
 10073                           fsr1h	equ	0xFE2
 10074                           fsr1l	equ	0xFE1
 10075                           indf2	equ	0xFDF
 10076                           postinc2	equ	0xFDE
 10077                           fsr2h	equ	0xFDA
 10078                           fsr2l	equ	0xFD9
 10079                           status	equ	0xFD8
 10080                           
 10081 ;; *************** function _display_init *****************
 10082 ;; Defined at:
 10083 ;;		line 222 in file "display.c"
 10084 ;; Parameters:    Size  Location     Type
 10085 ;;		None
 10086 ;; Auto vars:     Size  Location     Type
 10087 ;;		None
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  1    wreg      void 
 10090 ;; Registers used:
 10091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10101 ;;Total ram usage:        0 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:   14
 10104 ;; This function calls:
 10105 ;;		_i2c_display_init
 10106 ;;		_i2c_display_program_custom_character
 10107 ;; This function is called by:
 10108 ;;		_system_init
 10109 ;; This function uses a non-reentrant model
 10110 ;;
 10111                           
 10112                           	psect	text26
 10113  012852                     __ptext26:
 10114                           	opt stack 0
 10115  012852                     _display_init:
 10116                           	opt stack 15
 10117                           
 10118                           ;display.c: 224: i2c_display_init();
 10119                           
 10120                           ;incstack = 0
 10121  012852  ECDA  F091         	call	_i2c_display_init	;wreg free
 10122                           
 10123                           ;display.c: 225: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 10124  012856  0EDD               	movlw	low _bit_pattern_verticalbar
 10125  012858  0100               	movlb	0	; () banked
 10126  01285A  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10127  01285C  0EA1               	movlw	high _bit_pattern_verticalbar
 10128  01285E  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10129  012860  0E00               	movlw	0
 10130  012862  EC73  F08C         	call	_i2c_display_program_custom_character
 10131                           
 10132                           ;display.c: 226: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 10133  012866  0ED5               	movlw	low _bit_pattern_degree
 10134  012868  0100               	movlb	0	; () banked
 10135  01286A  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10136  01286C  0EA1               	movlw	high _bit_pattern_degree
 10137  01286E  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10138  012870  0E01               	movlw	1
 10139  012872  EC73  F08C         	call	_i2c_display_program_custom_character
 10140                           
 10141                           ;display.c: 227: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 10142  012876  0ECD               	movlw	low _bit_pattern_ae
 10143  012878  0100               	movlb	0	; () banked
 10144  01287A  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10145  01287C  0EA1               	movlw	high _bit_pattern_ae
 10146  01287E  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10147  012880  0E02               	movlw	2
 10148  012882  EC73  F08C         	call	_i2c_display_program_custom_character
 10149  012886  0012               	return		;funcret
 10150  012888                     __end_of_display_init:
 10151                           	opt stack 0
 10152                           tblptru	equ	0xFF8
 10153                           tblptrh	equ	0xFF7
 10154                           tblptrl	equ	0xFF6
 10155                           tablat	equ	0xFF5
 10156                           prodh	equ	0xFF4
 10157                           prodl	equ	0xFF3
 10158                           postinc0	equ	0xFEE
 10159                           wreg	equ	0xFE8
 10160                           postdec1	equ	0xFE5
 10161                           fsr1h	equ	0xFE2
 10162                           fsr1l	equ	0xFE1
 10163                           indf2	equ	0xFDF
 10164                           postinc2	equ	0xFDE
 10165                           fsr2h	equ	0xFDA
 10166                           fsr2l	equ	0xFD9
 10167                           status	equ	0xFD8
 10168                           
 10169 ;; *************** function _i2c_display_program_custom_character *****************
 10170 ;; Defined at:
 10171 ;;		line 420 in file "i2c.c"
 10172 ;; Parameters:    Size  Location     Type
 10173 ;;  address         1    wreg     unsigned char 
 10174 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 10175 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;  address         1   31[BANK0 ] unsigned char 
 10178 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 10179 ;;  cntr            1   32[BANK0 ] unsigned char 
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  1    wreg      void 
 10182 ;; Registers used:
 10183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10189 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10190 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10191 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10192 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10193 ;;Total ram usage:       19 bytes
 10194 ;; Hardware stack levels used:    1
 10195 ;; Hardware stack levels required when called:   13
 10196 ;; This function calls:
 10197 ;;		__i2c_write
 10198 ;;		__ic2_display_set_cgram_address
 10199 ;; This function is called by:
 10200 ;;		_display_init
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           	psect	text27
 10205  0118E6                     __ptext27:
 10206                           	opt stack 0
 10207  0118E6                     _i2c_display_program_custom_character:
 10208                           	opt stack 15
 10209                           
 10210                           ;incstack = 0
 10211                           ;i2c_display_program_custom_character@address stored from wreg
 10212  0118E6  0100               	movlb	0	; () banked
 10213  0118E8  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 10214                           
 10215                           ;i2c.c: 422: uint8_t cntr;;i2c.c: 423: uint8_t data_array[11];;i2c.c: 426: _ic2_display_
      +                          set_cgram_address(address<<3);
 10216  0118EA  0100               	movlb	0	; () banked
 10217  0118EC  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 10218  0118EE  42E8               	rrncf	wreg,f,c
 10219  0118F0  0BF8               	andlw	248
 10220  0118F2  EC7D  F095         	call	__ic2_display_set_cgram_address
 10221                           
 10222                           ;i2c.c: 429: data_array[0] = 0b01000000;
 10223  0118F6  0E40               	movlw	64
 10224  0118F8  0100               	movlb	0	; () banked
 10225  0118FA  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;i2c.c: 430: for(cntr=0; cntr<8; ++cntr)
 10229  0118FC  0E00               	movlw	0
 10230  0118FE  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 10231  011900                     l19818:
 10232                           
 10233                           ; BSR set to: 0
 10234  011900  0E07               	movlw	7
 10235  011902  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 10236  011904  D001               	goto	l1217
 10237  011906  D023               	goto	u19570
 10238  011908                     l1217:
 10239                           
 10240                           ; BSR set to: 0
 10241                           ;i2c.c: 431: {;i2c.c: 432: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 10242                           
 10243                           ; BSR set to: 0
 10244  011908  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10245  01190A  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 10246  01190C  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 10247  01190E  0E01               	movlw	1
 10248  011910  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 10249  011912  0E00               	movlw	0
 10250  011914  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 10251  011916  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10252  011918  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 10253  01191A  6ED9               	movwf	fsr2l,c
 10254  01191C  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10255  01191E  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 10256  011920  6EDA               	movwf	fsr2h,c
 10257  011922  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10258  011924  0D01               	mullw	1
 10259  011926  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 10260  01192A  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 10261  01192E  50F3               	movf	prodl,w,c
 10262  011930  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 10263  011932  50F4               	movf	prodh,w,c
 10264  011934  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 10265  011936  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 10266  01193A  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 10267  01193E                     	if	0	;tblptru may be non-zero
 10268  01193E                     	endif
 10269  01193E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10270  01193E  0E00               	movlw	low (__mediumconst shr (0+16))
 10271  011940  6EF8               	movwf	tblptru,c
 10272  011942                     	endif
 10273  011942  0008               	tblrd		*
 10274  011944  50F5               	movf	tablat,w,c
 10275  011946  0B1F               	andlw	31
 10276  011948  6EDF               	movwf	indf2,c
 10277                           
 10278                           ; BSR set to: 0
 10279  01194A  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 10280  01194C  D7D9               	goto	l19818
 10281  01194E                     u19570:
 10282                           
 10283                           ; BSR set to: 0
 10284                           ;i2c.c: 433: };i2c.c: 434: _i2c_write(0b01111000, data_array, 9);
 10285                           
 10286                           ; BSR set to: 0
 10287  01194E  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10288  011950  6F65               	movwf	__i2c_write@data& (0+255),b
 10289  011952  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10290  011954  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10291  011956  0E09               	movlw	9
 10292  011958  6F67               	movwf	__i2c_write@length& (0+255),b
 10293  01195A  0E78               	movlw	120
 10294  01195C  EC02  F092         	call	__i2c_write
 10295  011960  0012               	return		;funcret
 10296  011962                     __end_of_i2c_display_program_custom_character:
 10297                           	opt stack 0
 10298                           tblptru	equ	0xFF8
 10299                           tblptrh	equ	0xFF7
 10300                           tblptrl	equ	0xFF6
 10301                           tablat	equ	0xFF5
 10302                           prodh	equ	0xFF4
 10303                           prodl	equ	0xFF3
 10304                           postinc0	equ	0xFEE
 10305                           wreg	equ	0xFE8
 10306                           postdec1	equ	0xFE5
 10307                           fsr1h	equ	0xFE2
 10308                           fsr1l	equ	0xFE1
 10309                           indf2	equ	0xFDF
 10310                           postinc2	equ	0xFDE
 10311                           fsr2h	equ	0xFDA
 10312                           fsr2l	equ	0xFD9
 10313                           status	equ	0xFD8
 10314                           
 10315 ;; *************** function __ic2_display_set_cgram_address *****************
 10316 ;; Defined at:
 10317 ;;		line 339 in file "i2c.c"
 10318 ;; Parameters:    Size  Location     Type
 10319 ;;  address         1    wreg     unsigned char 
 10320 ;; Auto vars:     Size  Location     Type
 10321 ;;  address         1   13[BANK0 ] unsigned char 
 10322 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  1    wreg      void 
 10325 ;; Registers used:
 10326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/0
 10329 ;;		On exit  : 0/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10333 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10335 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10336 ;;Total ram usage:        4 bytes
 10337 ;; Hardware stack levels used:    1
 10338 ;; Hardware stack levels required when called:   12
 10339 ;; This function calls:
 10340 ;;		__i2c_write
 10341 ;; This function is called by:
 10342 ;;		_i2c_display_program_custom_character
 10343 ;; This function uses a non-reentrant model
 10344 ;;
 10345                           
 10346                           	psect	text28
 10347  012AFA                     __ptext28:
 10348                           	opt stack 0
 10349  012AFA                     __ic2_display_set_cgram_address:
 10350                           	opt stack 15
 10351                           
 10352                           ;incstack = 0
 10353                           ;__ic2_display_set_cgram_address@address stored from wreg
 10354  012AFA  0100               	movlb	0	; () banked
 10355  012AFC  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 10356                           
 10357                           ;i2c.c: 341: uint8_t data_array[3];;i2c.c: 346: address &= 0b001111111;
 10358  012AFE  0100               	movlb	0	; () banked
 10359  012B00  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 10360                           
 10361                           ; BSR set to: 0
 10362                           ;i2c.c: 347: data_array[0] = 0b00000000;
 10363  012B02  0E00               	movlw	0
 10364  012B04  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;i2c.c: 348: data_array[1] = 0b00111000;
 10368  012B06  0E38               	movlw	56
 10369  012B08  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 10370                           
 10371                           ;i2c.c: 349: data_array[2] = 0b01000000 | address;
 10372  012B0A  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 10373  012B0C  0940               	iorlw	64
 10374  012B0E  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 10375                           
 10376                           ; BSR set to: 0
 10377                           ;i2c.c: 352: _i2c_write(0b01111000, data_array, 3);
 10378  012B10  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 10379  012B12  6F65               	movwf	__i2c_write@data& (0+255),b
 10380  012B14  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 10381  012B16  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10382  012B18  0E03               	movlw	3
 10383  012B1A  6F67               	movwf	__i2c_write@length& (0+255),b
 10384  012B1C  0E78               	movlw	120
 10385  012B1E  EC02  F092         	call	__i2c_write
 10386  012B22  0012               	return		;funcret
 10387  012B24                     __end_of__ic2_display_set_cgram_address:
 10388                           	opt stack 0
 10389                           tblptru	equ	0xFF8
 10390                           tblptrh	equ	0xFF7
 10391                           tblptrl	equ	0xFF6
 10392                           tablat	equ	0xFF5
 10393                           prodh	equ	0xFF4
 10394                           prodl	equ	0xFF3
 10395                           postinc0	equ	0xFEE
 10396                           wreg	equ	0xFE8
 10397                           postdec1	equ	0xFE5
 10398                           fsr1h	equ	0xFE2
 10399                           fsr1l	equ	0xFE1
 10400                           indf2	equ	0xFDF
 10401                           postinc2	equ	0xFDE
 10402                           fsr2h	equ	0xFDA
 10403                           fsr2l	equ	0xFD9
 10404                           status	equ	0xFD8
 10405                           
 10406 ;; *************** function _i2c_display_init *****************
 10407 ;; Defined at:
 10408 ;;		line 297 in file "i2c.c"
 10409 ;; Parameters:    Size  Location     Type
 10410 ;;		None
 10411 ;; Auto vars:     Size  Location     Type
 10412 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 10413 ;; Return value:  Size  Location     Type
 10414 ;;                  1    wreg      void 
 10415 ;; Registers used:
 10416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10417 ;; Tracked objects:
 10418 ;;		On entry : 0/0
 10419 ;;		On exit  : 0/0
 10420 ;;		Unchanged: 0/0
 10421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10423 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10424 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10425 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10426 ;;Total ram usage:       10 bytes
 10427 ;; Hardware stack levels used:    1
 10428 ;; Hardware stack levels required when called:   12
 10429 ;; This function calls:
 10430 ;;		__i2c_write
 10431 ;; This function is called by:
 10432 ;;		_display_init
 10433 ;; This function uses a non-reentrant model
 10434 ;;
 10435                           
 10436                           	psect	text29
 10437  0123B4                     __ptext29:
 10438                           	opt stack 0
 10439  0123B4                     _i2c_display_init:
 10440                           	opt stack 16
 10441                           
 10442                           ;i2c.c: 299: uint8_t init_sequence[9] = {;i2c.c: 300: 0x3A,;i2c.c: 302: 0b00011110,;i2c.
      +                          c: 303: 0x39,;i2c.c: 305: 0b00001100,;i2c.c: 306: 0x74,;i2c.c: 307: 0b1011100,;i2c.c: 30
      +                          8: 0x6d,;i2c.c: 309: 0x0c,;i2c.c: 310: 0x01;i2c.c: 311: };
 10443                           
 10444                           ;incstack = 0
 10445  0123B4  EE21  F0BF         	lfsr	2,i2c_display_init@F6908
 10446  0123B8  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 10447  0123BC  0E08               	movlw	8
 10448  0123BE                     u19541:
 10449  0123BE  CFDB FFE3          	movff	plusw2,plusw1
 10450  0123C2  06E8               	decf	wreg,f,c
 10451  0123C4  E2FC               	bc	u19541
 10452                           
 10453                           ;i2c.c: 314: LATAbits.LA3 = 0;
 10454  0123C6  9689               	bcf	3977,3,c	;volatile
 10455                           
 10456                           ;i2c.c: 315: _delay((unsigned long)((10)*(8000000/4000.0)));
 10457  0123C8  0E1A               	movlw	26
 10458  0123CA  0100               	movlb	0	; () banked
 10459  0123CC  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10460  0123CE  0EF8               	movlw	248
 10461  0123D0                     u24057:
 10462  0123D0  2EE8               	decfsz	wreg,f,c
 10463  0123D2  D7FE               	bra	u24057
 10464  0123D4  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10465  0123D6  D7FC               	bra	u24057
 10466  0123D8  F000               	nop	
 10467                           
 10468                           ;i2c.c: 316: LATAbits.LA3 = 1;
 10469  0123DA  8689               	bsf	3977,3,c	;volatile
 10470                           
 10471                           ;i2c.c: 317: _delay((unsigned long)((50)*(8000000/4000.0)));
 10472  0123DC  0E82               	movlw	130
 10473  0123DE  0100               	movlb	0	; () banked
 10474  0123E0  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10475  0123E2  0EDD               	movlw	221
 10476  0123E4                     u24067:
 10477  0123E4  2EE8               	decfsz	wreg,f,c
 10478  0123E6  D7FE               	bra	u24067
 10479  0123E8  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10480  0123EA  D7FC               	bra	u24067
 10481  0123EC  D000               	nop2	
 10482                           
 10483                           ;i2c.c: 323: _i2c_write(0b01111000, &init_sequence[0], 9);
 10484  0123EE  0E6B               	movlw	low i2c_display_init@init_sequence
 10485  0123F0  0100               	movlb	0	; () banked
 10486  0123F2  6F65               	movwf	__i2c_write@data& (0+255),b
 10487  0123F4  0E00               	movlw	high i2c_display_init@init_sequence
 10488  0123F6  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10489  0123F8  0E09               	movlw	9
 10490  0123FA  6F67               	movwf	__i2c_write@length& (0+255),b
 10491  0123FC  0E78               	movlw	120
 10492  0123FE  EC02  F092         	call	__i2c_write
 10493  012402  0012               	return		;funcret
 10494  012404                     __end_of_i2c_display_init:
 10495                           	opt stack 0
 10496                           tblptru	equ	0xFF8
 10497                           tblptrh	equ	0xFF7
 10498                           tblptrl	equ	0xFF6
 10499                           tablat	equ	0xFF5
 10500                           prodh	equ	0xFF4
 10501                           prodl	equ	0xFF3
 10502                           postinc0	equ	0xFEE
 10503                           wreg	equ	0xFE8
 10504                           postdec1	equ	0xFE5
 10505                           plusw1	equ	0xFE3
 10506                           fsr1h	equ	0xFE2
 10507                           fsr1l	equ	0xFE1
 10508                           indf2	equ	0xFDF
 10509                           postinc2	equ	0xFDE
 10510                           plusw2	equ	0xFDB
 10511                           fsr2h	equ	0xFDA
 10512                           fsr2l	equ	0xFD9
 10513                           status	equ	0xFD8
 10514                           
 10515 ;; *************** function __i2c_write *****************
 10516 ;; Defined at:
 10517 ;;		line 83 in file "i2c.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;  slave_addres    1    wreg     unsigned char 
 10520 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10521 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 10522 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 10523 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 10524 ;;  length          1    7[BANK0 ] unsigned char 
 10525 ;; Auto vars:     Size  Location     Type
 10526 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 10527 ;;  cntr            1    9[BANK0 ] unsigned char 
 10528 ;; Return value:  Size  Location     Type
 10529 ;;                  1    wreg      void 
 10530 ;; Registers used:
 10531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10532 ;; Tracked objects:
 10533 ;;		On entry : 0/0
 10534 ;;		On exit  : 0/0
 10535 ;;		Unchanged: 0/0
 10536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10537 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10538 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10540 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10541 ;;Total ram usage:        5 bytes
 10542 ;; Hardware stack levels used:    1
 10543 ;; Hardware stack levels required when called:   11
 10544 ;; This function calls:
 10545 ;;		__i2c_send
 10546 ;;		__i2c_start
 10547 ;;		__i2c_stop
 10548 ;;		__i2c_wait_idle
 10549 ;; This function is called by:
 10550 ;;		_i2c_display_init
 10551 ;;		__ic2_display_set_ddram_address
 10552 ;;		__ic2_display_set_cgram_address
 10553 ;;		_i2c_display_program_custom_character
 10554 ;;		_i2c_adc_start
 10555 ;;		_i2c_eeprom_writeByte
 10556 ;;		_i2c_eeprom_readByte
 10557 ;;		_i2c_eeprom_write
 10558 ;;		_i2c_eeprom_read
 10559 ;;		__i2c_display_send_init_sequence
 10560 ;; This function uses a non-reentrant model
 10561 ;;
 10562                           
 10563                           	psect	text30
 10564  012404                     __ptext30:
 10565                           	opt stack 0
 10566  012404                     __i2c_write:
 10567                           	opt stack 15
 10568                           
 10569                           ;incstack = 0
 10570                           ;__i2c_write@slave_address stored from wreg
 10571  012404  0100               	movlb	0	; () banked
 10572  012406  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 10573                           
 10574                           ;i2c.c: 85: uint8_t cntr;;i2c.c: 87: _i2c_wait_idle();
 10575  012408  EC04  F08E         	call	__i2c_wait_idle	;wreg free
 10576                           
 10577                           ;i2c.c: 88: _i2c_start();
 10578  01240C  EC89  F096         	call	__i2c_start	;wreg free
 10579                           
 10580                           ;i2c.c: 89: _i2c_wait_idle();
 10581  012410  EC04  F08E         	call	__i2c_wait_idle	;wreg free
 10582                           
 10583                           ;i2c.c: 90: _i2c_send(slave_address);
 10584  012414  0100               	movlb	0	; () banked
 10585  012416  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 10586  012418  EC71  F096         	call	__i2c_send
 10587                           
 10588                           ;i2c.c: 91: _i2c_wait_idle();
 10589  01241C  EC04  F08E         	call	__i2c_wait_idle	;wreg free
 10590                           
 10591                           ;i2c.c: 93: for(cntr=0; cntr<length; ++cntr)
 10592  012420  0E00               	movlw	0
 10593  012422  0100               	movlb	0	; () banked
 10594  012424  6F69               	movwf	__i2c_write@cntr& (0+255),b
 10595  012426  D00F               	goto	l1138
 10596  012428                     
 10597                           ; BSR set to: 0
 10598                           ;i2c.c: 94: {;i2c.c: 95: _i2c_send(data[cntr]);
 10599                           
 10600                           ; BSR set to: 0
 10601  012428  5169               	movf	__i2c_write@cntr& (0+255),w,b
 10602  01242A  0D01               	mullw	1
 10603  01242C  50F3               	movf	prodl,w,c
 10604  01242E  2565               	addwf	__i2c_write@data& (0+255),w,b
 10605  012430  6ED9               	movwf	fsr2l,c
 10606  012432  50F4               	movf	prodh,w,c
 10607  012434  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 10608  012436  6EDA               	movwf	fsr2h,c
 10609  012438  50DF               	movf	indf2,w,c
 10610  01243A  EC71  F096         	call	__i2c_send
 10611                           
 10612                           ;i2c.c: 96: _i2c_wait_idle();
 10613  01243E  EC04  F08E         	call	__i2c_wait_idle	;wreg free
 10614  012442  0100               	movlb	0	; () banked
 10615  012444  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 10616  012446                     l1138:
 10617                           
 10618                           ; BSR set to: 0
 10619                           
 10620                           ; BSR set to: 0
 10621  012446  5167               	movf	__i2c_write@length& (0+255),w,b
 10622  012448  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 10623  01244A  A0D8               	btfss	status,0,c
 10624  01244C  D7ED               	goto	l1139
 10625                           
 10626                           ; BSR set to: 0
 10627                           ;i2c.c: 97: };i2c.c: 99: _i2c_stop();
 10628                           
 10629                           ; BSR set to: 0
 10630  01244E  EC85  F096         	call	__i2c_stop	;wreg free
 10631  012452  0012               	return		;funcret
 10632  012454                     __end_of__i2c_write:
 10633                           	opt stack 0
 10634                           tblptru	equ	0xFF8
 10635                           tblptrh	equ	0xFF7
 10636                           tblptrl	equ	0xFF6
 10637                           tablat	equ	0xFF5
 10638                           prodh	equ	0xFF4
 10639                           prodl	equ	0xFF3
 10640                           postinc0	equ	0xFEE
 10641                           wreg	equ	0xFE8
 10642                           postdec1	equ	0xFE5
 10643                           plusw1	equ	0xFE3
 10644                           fsr1h	equ	0xFE2
 10645                           fsr1l	equ	0xFE1
 10646                           indf2	equ	0xFDF
 10647                           postinc2	equ	0xFDE
 10648                           plusw2	equ	0xFDB
 10649                           fsr2h	equ	0xFDA
 10650                           fsr2l	equ	0xFD9
 10651                           status	equ	0xFD8
 10652                           
 10653 ;; *************** function __i2c_wait_idle *****************
 10654 ;; Defined at:
 10655 ;;		line 39 in file "i2c.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;		None
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;		None
 10660 ;; Return value:  Size  Location     Type
 10661 ;;                  1    wreg      void 
 10662 ;; Registers used:
 10663 ;;		wreg, status,2, status,0
 10664 ;; Tracked objects:
 10665 ;;		On entry : 0/0
 10666 ;;		On exit  : 0/0
 10667 ;;		Unchanged: 0/0
 10668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10671 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10672 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10673 ;;Total ram usage:        5 bytes
 10674 ;; Hardware stack levels used:    1
 10675 ;; Hardware stack levels required when called:   10
 10676 ;; This function calls:
 10677 ;;		Nothing
 10678 ;; This function is called by:
 10679 ;;		__i2c_write
 10680 ;;		_i2c_display_write_fixed
 10681 ;;		__i2c_read
 10682 ;;		_i2c_adc_read
 10683 ;;		__i2c_eeprom_busy
 10684 ;;		_i2c_display_write
 10685 ;; This function uses a non-reentrant model
 10686 ;;
 10687                           
 10688                           	psect	text31
 10689  011C08                     __ptext31:
 10690                           	opt stack 0
 10691  011C08                     __i2c_wait_idle:
 10692                           	opt stack 17
 10693                           
 10694                           ;i2c.c: 41: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 10695                           
 10696                           ;incstack = 0
 10697  011C08  A4C7               	btfss	4039,2,c	;volatile
 10698  011C0A  D004               	goto	u17750
 10699  011C0C  0100               	movlb	0	; () banked
 10700  011C0E  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 10701  011C10  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 10702  011C12  D002               	goto	u17758
 10703  011C14                     u17750:
 10704  011C14  0100               	movlb	0	; () banked
 10705  011C16  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 10706  011C18                     u17758:
 10707  011C18  A0C5               	btfss	4037,0,c	;volatile
 10708  011C1A  D003               	goto	u17760
 10709  011C1C  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 10710  011C1E  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 10711  011C20  D002               	goto	u17768
 10712  011C22                     u17760:
 10713  011C22  0100               	movlb	0	; () banked
 10714  011C24  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 10715  011C26                     u17768:
 10716  011C26  A2C5               	btfss	4037,1,c	;volatile
 10717  011C28  D003               	goto	u17770
 10718  011C2A  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 10719  011C2C  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 10720  011C2E  D002               	goto	u17778
 10721  011C30                     u17770:
 10722  011C30  0100               	movlb	0	; () banked
 10723  011C32  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 10724  011C34                     u17778:
 10725  011C34  A4C5               	btfss	4037,2,c	;volatile
 10726  011C36  D003               	goto	u17780
 10727  011C38  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 10728  011C3A  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 10729  011C3C  D002               	goto	u17788
 10730  011C3E                     u17780:
 10731  011C3E  0100               	movlb	0	; () banked
 10732  011C40  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 10733  011C42                     u17788:
 10734  011C42  A6C5               	btfss	4037,3,c	;volatile
 10735  011C44  D003               	goto	u17790
 10736  011C46  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 10737  011C48  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 10738  011C4A  D002               	goto	u17798
 10739  011C4C                     u17790:
 10740  011C4C  0100               	movlb	0	; () banked
 10741  011C4E  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 10742  011C50                     u17798:
 10743  011C50  A8C5               	btfss	4037,4,c	;volatile
 10744  011C52  D002               	goto	u17800
 10745  011C54  0E01               	movlw	1
 10746  011C56  D001               	goto	u17806
 10747  011C58                     u17800:
 10748  011C58  0E00               	movlw	0
 10749  011C5A                     u17806:
 10750  011C5A  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 10751  011C5C  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 10752  011C5E  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 10753  011C60  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 10754  011C62  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 10755  011C64  0900               	iorlw	0
 10756  011C66  B4D8               	btfsc	status,2,c
 10757  011C68  0012               	return	
 10758  011C6A  D7CE               	goto	__i2c_wait_idle
 10759  011C6C                     __end_of__i2c_wait_idle:
 10760                           	opt stack 0
 10761                           tblptru	equ	0xFF8
 10762                           tblptrh	equ	0xFF7
 10763                           tblptrl	equ	0xFF6
 10764                           tablat	equ	0xFF5
 10765                           prodh	equ	0xFF4
 10766                           prodl	equ	0xFF3
 10767                           postinc0	equ	0xFEE
 10768                           wreg	equ	0xFE8
 10769                           postdec1	equ	0xFE5
 10770                           plusw1	equ	0xFE3
 10771                           fsr1h	equ	0xFE2
 10772                           fsr1l	equ	0xFE1
 10773                           indf2	equ	0xFDF
 10774                           postinc2	equ	0xFDE
 10775                           plusw2	equ	0xFDB
 10776                           fsr2h	equ	0xFDA
 10777                           fsr2l	equ	0xFD9
 10778                           status	equ	0xFD8
 10779                           
 10780 ;; *************** function __i2c_stop *****************
 10781 ;; Defined at:
 10782 ;;		line 62 in file "i2c.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;		None
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;		None
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  1    wreg      void 
 10789 ;; Registers used:
 10790 ;;		None
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10800 ;;Total ram usage:        0 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; Hardware stack levels required when called:   10
 10803 ;; This function calls:
 10804 ;;		Nothing
 10805 ;; This function is called by:
 10806 ;;		__i2c_write
 10807 ;;		_i2c_display_write_fixed
 10808 ;;		__i2c_read
 10809 ;;		_i2c_adc_read
 10810 ;;		__i2c_eeprom_busy
 10811 ;;		_i2c_display_write
 10812 ;; This function uses a non-reentrant model
 10813 ;;
 10814                           
 10815                           	psect	text32
 10816  012D0A                     __ptext32:
 10817                           	opt stack 0
 10818  012D0A                     __i2c_stop:
 10819                           	opt stack 17
 10820                           
 10821                           ;i2c.c: 64: SSP1CON2bits.PEN = 1;
 10822                           
 10823                           ; BSR set to: 0
 10824                           ;incstack = 0
 10825  012D0A  84C5               	bsf	4037,2,c	;volatile
 10826  012D0C  A4C5               	btfss	4037,2,c	;volatile
 10827  012D0E  0012               	return	
 10828  012D10  D7FD               	goto	l1121
 10829  012D12                     __end_of__i2c_stop:
 10830                           	opt stack 0
 10831                           tblptru	equ	0xFF8
 10832                           tblptrh	equ	0xFF7
 10833                           tblptrl	equ	0xFF6
 10834                           tablat	equ	0xFF5
 10835                           prodh	equ	0xFF4
 10836                           prodl	equ	0xFF3
 10837                           postinc0	equ	0xFEE
 10838                           wreg	equ	0xFE8
 10839                           postdec1	equ	0xFE5
 10840                           plusw1	equ	0xFE3
 10841                           fsr1h	equ	0xFE2
 10842                           fsr1l	equ	0xFE1
 10843                           indf2	equ	0xFDF
 10844                           postinc2	equ	0xFDE
 10845                           plusw2	equ	0xFDB
 10846                           fsr2h	equ	0xFDA
 10847                           fsr2l	equ	0xFD9
 10848                           status	equ	0xFD8
 10849                           
 10850 ;; *************** function __i2c_start *****************
 10851 ;; Defined at:
 10852 ;;		line 44 in file "i2c.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;		None
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;		None
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  1    wreg      void 
 10859 ;; Registers used:
 10860 ;;		None
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10870 ;;Total ram usage:        0 bytes
 10871 ;; Hardware stack levels used:    1
 10872 ;; Hardware stack levels required when called:   10
 10873 ;; This function calls:
 10874 ;;		Nothing
 10875 ;; This function is called by:
 10876 ;;		__i2c_write
 10877 ;;		_i2c_display_write_fixed
 10878 ;;		__i2c_read
 10879 ;;		_i2c_adc_read
 10880 ;;		__i2c_eeprom_busy
 10881 ;;		_i2c_display_write
 10882 ;; This function uses a non-reentrant model
 10883 ;;
 10884                           
 10885                           	psect	text33
 10886  012D12                     __ptext33:
 10887                           	opt stack 0
 10888  012D12                     __i2c_start:
 10889                           	opt stack 17
 10890                           
 10891                           ;i2c.c: 46: SSP1CON2bits.SEN=1;
 10892                           
 10893                           ;incstack = 0
 10894  012D12  80C5               	bsf	4037,0,c	;volatile
 10895  012D14  A0C5               	btfss	4037,0,c	;volatile
 10896  012D16  0012               	return	
 10897  012D18  D7FD               	goto	l1106
 10898  012D1A                     __end_of__i2c_start:
 10899                           	opt stack 0
 10900                           tblptru	equ	0xFF8
 10901                           tblptrh	equ	0xFF7
 10902                           tblptrl	equ	0xFF6
 10903                           tablat	equ	0xFF5
 10904                           prodh	equ	0xFF4
 10905                           prodl	equ	0xFF3
 10906                           postinc0	equ	0xFEE
 10907                           wreg	equ	0xFE8
 10908                           postdec1	equ	0xFE5
 10909                           plusw1	equ	0xFE3
 10910                           fsr1h	equ	0xFE2
 10911                           fsr1l	equ	0xFE1
 10912                           indf2	equ	0xFDF
 10913                           postinc2	equ	0xFDE
 10914                           plusw2	equ	0xFDB
 10915                           fsr2h	equ	0xFDA
 10916                           fsr2l	equ	0xFD9
 10917                           status	equ	0xFD8
 10918                           
 10919 ;; *************** function __i2c_send *****************
 10920 ;; Defined at:
 10921 ;;		line 50 in file "i2c.c"
 10922 ;; Parameters:    Size  Location     Type
 10923 ;;  dat             1    wreg     unsigned char 
 10924 ;; Auto vars:     Size  Location     Type
 10925 ;;  dat             1    0[BANK0 ] unsigned char 
 10926 ;; Return value:  Size  Location     Type
 10927 ;;                  1    wreg      void 
 10928 ;; Registers used:
 10929 ;;		wreg
 10930 ;; Tracked objects:
 10931 ;;		On entry : 0/0
 10932 ;;		On exit  : 0/0
 10933 ;;		Unchanged: 0/0
 10934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10938 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10939 ;;Total ram usage:        1 bytes
 10940 ;; Hardware stack levels used:    1
 10941 ;; Hardware stack levels required when called:   10
 10942 ;; This function calls:
 10943 ;;		Nothing
 10944 ;; This function is called by:
 10945 ;;		__i2c_write
 10946 ;;		_i2c_display_write_fixed
 10947 ;;		__i2c_read
 10948 ;;		_i2c_adc_read
 10949 ;;		__i2c_eeprom_busy
 10950 ;;		_i2c_display_write
 10951 ;; This function uses a non-reentrant model
 10952 ;;
 10953                           
 10954                           	psect	text34
 10955  012CE2                     __ptext34:
 10956                           	opt stack 0
 10957  012CE2                     __i2c_send:
 10958                           	opt stack 17
 10959                           
 10960                           ;incstack = 0
 10961                           ;__i2c_send@dat stored from wreg
 10962  012CE2  0100               	movlb	0	; () banked
 10963  012CE4  6F60               	movwf	__i2c_send@dat& (0+255),b
 10964                           
 10965                           ;i2c.c: 52: SSP1BUF = dat;
 10966  012CE6  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 10967  012CEA  0012               	return		;funcret
 10968  012CEC                     __end_of__i2c_send:
 10969                           	opt stack 0
 10970                           tblptru	equ	0xFF8
 10971                           tblptrh	equ	0xFF7
 10972                           tblptrl	equ	0xFF6
 10973                           tablat	equ	0xFF5
 10974                           prodh	equ	0xFF4
 10975                           prodl	equ	0xFF3
 10976                           postinc0	equ	0xFEE
 10977                           wreg	equ	0xFE8
 10978                           postdec1	equ	0xFE5
 10979                           plusw1	equ	0xFE3
 10980                           fsr1h	equ	0xFE2
 10981                           fsr1l	equ	0xFE1
 10982                           indf2	equ	0xFDF
 10983                           postinc2	equ	0xFDE
 10984                           plusw2	equ	0xFDB
 10985                           fsr2h	equ	0xFDA
 10986                           fsr2l	equ	0xFD9
 10987                           status	equ	0xFD8
 10988                           
 10989 ;; *************** function _adc_init *****************
 10990 ;; Defined at:
 10991 ;;		line 19 in file "adc.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;		None
 10994 ;; Auto vars:     Size  Location     Type
 10995 ;;		None
 10996 ;; Return value:  Size  Location     Type
 10997 ;;                  1    wreg      void 
 10998 ;; Registers used:
 10999 ;;		wreg, status,2
 11000 ;; Tracked objects:
 11001 ;;		On entry : 0/0
 11002 ;;		On exit  : 0/0
 11003 ;;		Unchanged: 0/0
 11004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11009 ;;Total ram usage:        0 bytes
 11010 ;; Hardware stack levels used:    1
 11011 ;; Hardware stack levels required when called:   10
 11012 ;; This function calls:
 11013 ;;		Nothing
 11014 ;; This function is called by:
 11015 ;;		_system_init
 11016 ;; This function uses a non-reentrant model
 11017 ;;
 11018                           
 11019                           	psect	text35
 11020  01206E                     __ptext35:
 11021                           	opt stack 0
 11022  01206E                     _adc_init:
 11023                           	opt stack 19
 11024                           
 11025                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 11026                           
 11027                           ;incstack = 0
 11028  01206E  0E00               	movlw	0
 11029  012070  0100               	movlb	0	; () banked
 11030  012072  6FF8               	movwf	(_os+40)& (0+255),b	;volatile
 11031  012074  0E00               	movlw	0
 11032  012076  6FF7               	movwf	(_os+39)& (0+255),b	;volatile
 11033                           
 11034                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 11035  012078  0E00               	movlw	0
 11036  01207A  6FFA               	movwf	(_os+42)& (0+255),b	;volatile
 11037  01207C  0E00               	movlw	0
 11038  01207E  6FF9               	movwf	(_os+41)& (0+255),b	;volatile
 11039                           
 11040                           ;adc.c: 24: os.fan_on = 0;
 11041  012080  0E00               	movlw	0
 11042  012082  6FFE               	movwf	(_os+46)& (0+255),b	;volatile
 11043                           
 11044                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 11045  012084  0E00               	movlw	0
 11046  012086  0101               	movlb	1	; () banked
 11047  012088  6F3A               	movwf	_params& (0+255),b
 11048                           
 11049                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 11050  01208A  0E00               	movlw	0
 11051  01208C  6F3C               	movwf	(_params+2)& (0+255),b
 11052  01208E  0E00               	movlw	0
 11053  012090  6F3B               	movwf	(_params+1)& (0+255),b
 11054                           
 11055                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 11056  012092  0E00               	movlw	0
 11057  012094  6F3F               	movwf	(_params+5)& (0+255),b
 11058                           
 11059                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 11060  012096  0E00               	movlw	0
 11061  012098  6F3E               	movwf	(_params+4)& (0+255),b
 11062  01209A  0E00               	movlw	0
 11063  01209C  6F3D               	movwf	(_params+3)& (0+255),b
 11064                           
 11065                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 11066  01209E  0E00               	movlw	0
 11067  0120A0  6F40               	movwf	(_params+6)& (0+255),b
 11068                           
 11069                           ; BSR set to: 1
 11070                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 11071  0120A2  9EC2               	bcf	4034,7,c	;volatile
 11072                           
 11073                           ; BSR set to: 1
 11074                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 11075  0120A4  9CC2               	bcf	4034,6,c	;volatile
 11076                           
 11077                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 11078  0120A6  50C2               	movf	4034,w,c	;volatile
 11079  0120A8  0BC3               	andlw	-61
 11080  0120AA  0924               	iorlw	36
 11081  0120AC  6EC2               	movwf	4034,c	;volatile
 11082                           
 11083                           ; BSR set to: 1
 11084                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 11085  0120AE  8EC1               	bsf	4033,7,c	;volatile
 11086                           
 11087                           ; BSR set to: 1
 11088                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 11089  0120B0  9CC1               	bcf	4033,6,c	;volatile
 11090                           
 11091                           ; BSR set to: 1
 11092                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 11093  0120B2  86C1               	bsf	4033,3,c	;volatile
 11094  0120B4  88C1               	bsf	4033,4,c	;volatile
 11095  0120B6  8AC1               	bsf	4033,5,c	;volatile
 11096                           
 11097                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 11098  0120B8  50C1               	movf	4033,w,c	;volatile
 11099  0120BA  0BF8               	andlw	-8
 11100  0120BC  0906               	iorlw	6
 11101  0120BE  6EC1               	movwf	4033,c	;volatile
 11102                           
 11103                           ; BSR set to: 1
 11104                           ;adc.c: 40: ADCON0bits.ADON = 1;
 11105  0120C0  80C2               	bsf	4034,0,c	;volatile
 11106                           
 11107                           ; BSR set to: 1
 11108                           ;adc.c: 41: ADCON0bits.GO = 1;
 11109  0120C2  82C2               	bsf	4034,1,c	;volatile
 11110                           
 11111                           ; BSR set to: 1
 11112  0120C4  0012               	return		;funcret
 11113  0120C6                     __end_of_adc_init:
 11114                           	opt stack 0
 11115                           tblptru	equ	0xFF8
 11116                           tblptrh	equ	0xFF7
 11117                           tblptrl	equ	0xFF6
 11118                           tablat	equ	0xFF5
 11119                           prodh	equ	0xFF4
 11120                           prodl	equ	0xFF3
 11121                           postinc0	equ	0xFEE
 11122                           wreg	equ	0xFE8
 11123                           postdec1	equ	0xFE5
 11124                           plusw1	equ	0xFE3
 11125                           fsr1h	equ	0xFE2
 11126                           fsr1l	equ	0xFE1
 11127                           indf2	equ	0xFDF
 11128                           postinc2	equ	0xFDE
 11129                           plusw2	equ	0xFDB
 11130                           fsr2h	equ	0xFDA
 11131                           fsr2l	equ	0xFD9
 11132                           status	equ	0xFD8
 11133                           
 11134 ;; *************** function __system_timer0_init *****************
 11135 ;; Defined at:
 11136 ;;		line 122 in file "os.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;		None
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;		None
 11141 ;; Return value:  Size  Location     Type
 11142 ;;                  1    wreg      void 
 11143 ;; Registers used:
 11144 ;;		wreg, status,2
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11154 ;;Total ram usage:        0 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; Hardware stack levels required when called:   10
 11157 ;; This function calls:
 11158 ;;		Nothing
 11159 ;; This function is called by:
 11160 ;;		_system_init
 11161 ;; This function uses a non-reentrant model
 11162 ;;
 11163                           
 11164                           	psect	text36
 11165  012A78                     __ptext36:
 11166                           	opt stack 0
 11167  012A78                     __system_timer0_init:
 11168                           	opt stack 19
 11169                           
 11170                           ;os.c: 127: T0CONbits.T0CS = 0;
 11171                           
 11172                           ; BSR set to: 1
 11173                           ;incstack = 0
 11174  012A78  9AD5               	bcf	4053,5,c	;volatile
 11175                           
 11176                           ;os.c: 129: T0CONbits.T08BIT = 0;
 11177  012A7A  9CD5               	bcf	4053,6,c	;volatile
 11178                           
 11179                           ;os.c: 131: T0CONbits.T0PS2 = 0;
 11180  012A7C  94D5               	bcf	4053,2,c	;volatile
 11181                           
 11182                           ;os.c: 132: T0CONbits.T0PS1 = 1;
 11183  012A7E  82D5               	bsf	4053,1,c	;volatile
 11184                           
 11185                           ;os.c: 133: T0CONbits.T0PS0 = 0;
 11186  012A80  90D5               	bcf	4053,0,c	;volatile
 11187                           
 11188                           ;os.c: 135: T0CONbits.PSA = 0;
 11189  012A82  96D5               	bcf	4053,3,c	;volatile
 11190                           
 11191                           ;os.c: 137: TMR0H = 0xFA;
 11192  012A84  0EFA               	movlw	250
 11193  012A86  6ED7               	movwf	4055,c	;volatile
 11194                           
 11195                           ;os.c: 138: TMR0L = 0x24;
 11196  012A88  0E24               	movlw	36
 11197  012A8A  6ED6               	movwf	4054,c	;volatile
 11198                           
 11199                           ;os.c: 140: T0CONbits.TMR0ON = 1;
 11200  012A8C  8ED5               	bsf	4053,7,c	;volatile
 11201                           
 11202                           ;os.c: 143: INTCONbits.TMR0IF = 0;
 11203  012A8E  94F2               	bcf	intcon,2,c	;volatile
 11204                           
 11205                           ;os.c: 144: INTCONbits.TMR0IE = 1;
 11206  012A90  8AF2               	bsf	intcon,5,c	;volatile
 11207                           
 11208                           ;os.c: 145: INTCONbits.GIE = 1;
 11209  012A92  8EF2               	bsf	intcon,7,c	;volatile
 11210                           
 11211                           ;os.c: 148: os.subTimeSlot = 0;
 11212  012A94  0E00               	movlw	0
 11213  012A96  0100               	movlb	0	; () banked
 11214  012A98  6FD0               	movwf	_os& (0+255),b	;volatile
 11215                           
 11216                           ;os.c: 149: os.timeSlot = 0;
 11217  012A9A  0E00               	movlw	0
 11218  012A9C  6FD1               	movwf	(_os+1)& (0+255),b	;volatile
 11219                           
 11220                           ;os.c: 150: os.done = 0;
 11221  012A9E  0E00               	movlw	0
 11222  012AA0  6FD2               	movwf	(_os+2)& (0+255),b	;volatile
 11223                           
 11224                           ; BSR set to: 0
 11225  012AA2  0012               	return		;funcret
 11226  012AA4                     __end_of__system_timer0_init:
 11227                           	opt stack 0
 11228                           tblptru	equ	0xFF8
 11229                           tblptrh	equ	0xFF7
 11230                           tblptrl	equ	0xFF6
 11231                           tablat	equ	0xFF5
 11232                           prodh	equ	0xFF4
 11233                           prodl	equ	0xFF3
 11234                           intcon	equ	0xFF2
 11235                           postinc0	equ	0xFEE
 11236                           wreg	equ	0xFE8
 11237                           postdec1	equ	0xFE5
 11238                           plusw1	equ	0xFE3
 11239                           fsr1h	equ	0xFE2
 11240                           fsr1l	equ	0xFE1
 11241                           indf2	equ	0xFDF
 11242                           postinc2	equ	0xFDE
 11243                           plusw2	equ	0xFDB
 11244                           fsr2h	equ	0xFDA
 11245                           fsr2l	equ	0xFD9
 11246                           status	equ	0xFD8
 11247                           
 11248 ;; *************** function __system_pin_setup *****************
 11249 ;; Defined at:
 11250 ;;		line 56 in file "os.c"
 11251 ;; Parameters:    Size  Location     Type
 11252 ;;		None
 11253 ;; Auto vars:     Size  Location     Type
 11254 ;;		None
 11255 ;; Return value:  Size  Location     Type
 11256 ;;                  1    wreg      void 
 11257 ;; Registers used:
 11258 ;;		wreg, status,2
 11259 ;; Tracked objects:
 11260 ;;		On entry : 0/0
 11261 ;;		On exit  : 0/0
 11262 ;;		Unchanged: 0/0
 11263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11268 ;;Total ram usage:        0 bytes
 11269 ;; Hardware stack levels used:    1
 11270 ;; Hardware stack levels required when called:   10
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_system_init
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278                           	psect	text37
 11279  011B9E                     __ptext37:
 11280                           	opt stack 0
 11281  011B9E                     __system_pin_setup:
 11282                           	opt stack 19
 11283                           
 11284                           ;os.c: 59: TRISDbits.TRISD5 = 1;
 11285                           
 11286                           ; BSR set to: 0
 11287                           ;incstack = 0
 11288  011B9E  8A95               	bsf	3989,5,c	;volatile
 11289                           
 11290                           ;os.c: 60: TRISDbits.TRISD4 = 0;
 11291  011BA0  9895               	bcf	3989,4,c	;volatile
 11292                           
 11293                           ;os.c: 61: TRISDbits.TRISD6 = 0;
 11294  011BA2  9C95               	bcf	3989,6,c	;volatile
 11295                           
 11296                           ;os.c: 62: TRISDbits.TRISD7 = 0;
 11297  011BA4  9E95               	bcf	3989,7,c	;volatile
 11298                           
 11299                           ;os.c: 63: LATDbits.LD7 = 1;
 11300  011BA6  8E8C               	bsf	3980,7,c	;volatile
 11301                           
 11302                           ;os.c: 65: TRISBbits.TRISB3 = 1;
 11303  011BA8  8693               	bsf	3987,3,c	;volatile
 11304                           
 11305                           ;os.c: 66: ANCON1bits.PCFG9 = 0;
 11306  011BAA  010F               	movlb	15	; () banked
 11307  011BAC  9349               	bcf	73,1,b	;volatile
 11308                           
 11309                           ;os.c: 68: TRISCbits.TRISC7 = 0;
 11310  011BAE  9E94               	bcf	3988,7,c	;volatile
 11311                           
 11312                           ;os.c: 69: LATCbits.LC7 = 0;
 11313  011BB0  9E8B               	bcf	3979,7,c	;volatile
 11314                           
 11315                           ;os.c: 71: TRISCbits.TRISC6 = 0;
 11316  011BB2  9C94               	bcf	3988,6,c	;volatile
 11317                           
 11318                           ;os.c: 72: LATCbits.LC6 = 0;
 11319  011BB4  9C8B               	bcf	3979,6,c	;volatile
 11320                           
 11321                           ;os.c: 74: TRISAbits.TRISA3 = 0;
 11322  011BB6  9692               	bcf	3986,3,c	;volatile
 11323                           
 11324                           ;os.c: 75: LATAbits.LA3 = 0;
 11325  011BB8  9689               	bcf	3977,3,c	;volatile
 11326                           
 11327                           ;os.c: 77: TRISCbits.TRISC1 = 0;
 11328  011BBA  9294               	bcf	3988,1,c	;volatile
 11329                           
 11330                           ;os.c: 78: LATCbits.LC1 = 0;
 11331  011BBC  928B               	bcf	3979,1,c	;volatile
 11332                           
 11333                           ;os.c: 83: TRISBbits.TRISB5 = 1;
 11334  011BBE  8A93               	bsf	3987,5,c	;volatile
 11335                           
 11336                           ;os.c: 84: TRISBbits.TRISB4 = 1;
 11337  011BC0  8893               	bsf	3987,4,c	;volatile
 11338                           
 11339                           ;os.c: 86: TRISBbits.TRISB0 = 0;
 11340  011BC2  9093               	bcf	3987,0,c	;volatile
 11341                           
 11342                           ;os.c: 87: LATBbits.LB0 = 1;
 11343  011BC4  808A               	bsf	3978,0,c	;volatile
 11344                           
 11345                           ;os.c: 89: TRISBbits.TRISB2 = 0;
 11346  011BC6  9493               	bcf	3987,2,c	;volatile
 11347                           
 11348                           ;os.c: 90: LATBbits.LB2 = 0;
 11349  011BC8  948A               	bcf	3978,2,c	;volatile
 11350                           
 11351                           ;os.c: 92: TRISBbits.TRISB1 = 0;
 11352  011BCA  9293               	bcf	3987,1,c	;volatile
 11353                           
 11354                           ;os.c: 93: ANCON1bits.PCFG10 = 1;
 11355  011BCC  8549               	bsf	73,2,b	;volatile
 11356                           
 11357                           ;os.c: 94: LATBbits.LB1 = 0;
 11358  011BCE  928A               	bcf	3978,1,c	;volatile
 11359                           
 11360                           ; BSR set to: 15
 11361                           ;os.c: 95: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11362  011BD0  0E55               	movlw	85
 11363  011BD2  6EA7               	movwf	4007,c	;volsfr
 11364  011BD4  0EAA               	movlw	170
 11365  011BD6  6EA7               	movwf	4007,c	;volsfr
 11366                           
 11367                           ; BSR set to: 15
 11368  011BD8  010E               	movlb	14	; () banked
 11369  011BDA  91BF               	bcf	191,0,b	;volatile
 11370                           
 11371                           ;os.c: 96: RPOR4 = 14;
 11372  011BDC  0E0E               	movlw	14
 11373  011BDE  6FC4               	movwf	196,b	;volatile
 11374                           
 11375                           ;os.c: 97: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 11376  011BE0  0E55               	movlw	85
 11377  011BE2  6EA7               	movwf	4007,c	;volsfr
 11378  011BE4  0EAA               	movlw	170
 11379  011BE6  6EA7               	movwf	4007,c	;volsfr
 11380                           
 11381                           ; BSR set to: 14
 11382  011BE8  81BF               	bsf	191,0,b	;volatile
 11383                           
 11384                           ; BSR set to: 14
 11385                           ;os.c: 99: TRISDbits.TRISD2 = 1;
 11386  011BEA  8495               	bsf	3989,2,c	;volatile
 11387                           
 11388                           ; BSR set to: 14
 11389                           ;os.c: 101: TRISEbits.TRISE2 = 1;
 11390  011BEC  8496               	bsf	3990,2,c	;volatile
 11391                           
 11392                           ; BSR set to: 14
 11393                           ;os.c: 102: ANCON0bits.PCFG7 = 1;
 11394  011BEE  010F               	movlb	15	; () banked
 11395  011BF0  8F48               	bsf	72,7,b	;volatile
 11396                           
 11397                           ; BSR set to: 15
 11398                           ;os.c: 104: TRISEbits.TRISE0 = 1;
 11399  011BF2  8096               	bsf	3990,0,c	;volatile
 11400                           
 11401                           ; BSR set to: 15
 11402                           ;os.c: 105: ANCON0bits.PCFG5 = 1;
 11403  011BF4  8B48               	bsf	72,5,b	;volatile
 11404                           
 11405                           ; BSR set to: 15
 11406                           ;os.c: 107: TRISEbits.TRISE1 = 1;
 11407  011BF6  8296               	bsf	3990,1,c	;volatile
 11408                           
 11409                           ; BSR set to: 15
 11410                           ;os.c: 108: ANCON0bits.PCFG6 = 1;
 11411  011BF8  8D48               	bsf	72,6,b	;volatile
 11412                           
 11413                           ; BSR set to: 15
 11414                           ;os.c: 110: TRISAbits.TRISA0 = 1;
 11415  011BFA  8092               	bsf	3986,0,c	;volatile
 11416                           
 11417                           ; BSR set to: 15
 11418                           ;os.c: 111: ANCON0bits.PCFG0 = 1;
 11419  011BFC  8148               	bsf	72,0,b	;volatile
 11420                           
 11421                           ; BSR set to: 15
 11422                           ;os.c: 113: TRISAbits.TRISA2 = 1;
 11423  011BFE  8492               	bsf	3986,2,c	;volatile
 11424                           
 11425                           ; BSR set to: 15
 11426                           ;os.c: 114: ANCON0bits.PCFG2 = 1;
 11427  011C00  8548               	bsf	72,2,b	;volatile
 11428                           
 11429                           ; BSR set to: 15
 11430                           ;os.c: 116: TRISAbits.TRISA1 = 1;
 11431  011C02  8292               	bsf	3986,1,c	;volatile
 11432                           
 11433                           ; BSR set to: 15
 11434                           ;os.c: 117: ANCON0bits.PCFG1 = 1;
 11435  011C04  8348               	bsf	72,1,b	;volatile
 11436                           
 11437                           ; BSR set to: 15
 11438  011C06  0012               	return		;funcret
 11439  011C08                     __end_of__system_pin_setup:
 11440                           	opt stack 0
 11441                           tblptru	equ	0xFF8
 11442                           tblptrh	equ	0xFF7
 11443                           tblptrl	equ	0xFF6
 11444                           tablat	equ	0xFF5
 11445                           prodh	equ	0xFF4
 11446                           prodl	equ	0xFF3
 11447                           intcon	equ	0xFF2
 11448                           postinc0	equ	0xFEE
 11449                           wreg	equ	0xFE8
 11450                           postdec1	equ	0xFE5
 11451                           plusw1	equ	0xFE3
 11452                           fsr1h	equ	0xFE2
 11453                           fsr1l	equ	0xFE1
 11454                           indf2	equ	0xFDF
 11455                           postinc2	equ	0xFDE
 11456                           plusw2	equ	0xFDB
 11457                           fsr2h	equ	0xFDA
 11458                           fsr2l	equ	0xFD9
 11459                           status	equ	0xFD8
 11460                           
 11461 ;; *************** function __backlight_init *****************
 11462 ;; Defined at:
 11463 ;;		line 155 in file "os.c"
 11464 ;; Parameters:    Size  Location     Type
 11465 ;;		None
 11466 ;; Auto vars:     Size  Location     Type
 11467 ;;		None
 11468 ;; Return value:  Size  Location     Type
 11469 ;;                  1    wreg      void 
 11470 ;; Registers used:
 11471 ;;		None
 11472 ;; Tracked objects:
 11473 ;;		On entry : 0/0
 11474 ;;		On exit  : 0/0
 11475 ;;		Unchanged: 0/0
 11476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11481 ;;Total ram usage:        0 bytes
 11482 ;; Hardware stack levels used:    1
 11483 ;; Hardware stack levels required when called:   10
 11484 ;; This function calls:
 11485 ;;		Nothing
 11486 ;; This function is called by:
 11487 ;;		_system_init
 11488 ;; This function uses a non-reentrant model
 11489 ;;
 11490                           
 11491                           	psect	text38
 11492  012D1A                     __ptext38:
 11493                           	opt stack 0
 11494  012D1A                     __backlight_init:
 11495                           	opt stack 19
 11496                           
 11497                           ;os.c: 157: LATCbits.LC1 = 1;
 11498                           
 11499                           ; BSR set to: 15
 11500                           ;incstack = 0
 11501  012D1A  828B               	bsf	3979,1,c	;volatile
 11502  012D1C  0012               	return		;funcret
 11503  012D1E                     __end_of__backlight_init:
 11504                           	opt stack 0
 11505                           tblptru	equ	0xFF8
 11506                           tblptrh	equ	0xFF7
 11507                           tblptrl	equ	0xFF6
 11508                           tablat	equ	0xFF5
 11509                           prodh	equ	0xFF4
 11510                           prodl	equ	0xFF3
 11511                           intcon	equ	0xFF2
 11512                           postinc0	equ	0xFEE
 11513                           wreg	equ	0xFE8
 11514                           postdec1	equ	0xFE5
 11515                           plusw1	equ	0xFE3
 11516                           fsr1h	equ	0xFE2
 11517                           fsr1l	equ	0xFE1
 11518                           indf2	equ	0xFDF
 11519                           postinc2	equ	0xFDE
 11520                           plusw2	equ	0xFDB
 11521                           fsr2h	equ	0xFDA
 11522                           fsr2l	equ	0xFD9
 11523                           status	equ	0xFD8
 11524                           
 11525 ;; *************** function _motor_process_cue *****************
 11526 ;; Defined at:
 11527 ;;		line 128 in file "motor.c"
 11528 ;; Parameters:    Size  Location     Type
 11529 ;;		None
 11530 ;; Auto vars:     Size  Location     Type
 11531 ;;		None
 11532 ;; Return value:  Size  Location     Type
 11533 ;;                  1    wreg      void 
 11534 ;; Registers used:
 11535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11536 ;; Tracked objects:
 11537 ;;		On entry : 0/0
 11538 ;;		On exit  : 0/0
 11539 ;;		Unchanged: 0/0
 11540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11545 ;;Total ram usage:        0 bytes
 11546 ;; Hardware stack levels used:    1
 11547 ;; Hardware stack levels required when called:   11
 11548 ;; This function calls:
 11549 ;;		__motor_run
 11550 ;;		_motor_items_in_cue
 11551 ;; This function is called by:
 11552 ;;		_main
 11553 ;; This function uses a non-reentrant model
 11554 ;;
 11555                           
 11556                           	psect	text39
 11557  0119DC                     __ptext39:
 11558                           	opt stack 0
 11559  0119DC                     _motor_process_cue:
 11560                           	opt stack 19
 11561                           
 11562                           ;motor.c: 130: if(motor_items_in_cue()==0)
 11563                           
 11564                           ;incstack = 0
 11565  0119DC  EC80  F096         	call	_motor_items_in_cue	;wreg free
 11566  0119E0  0900               	iorlw	0
 11567  0119E2  B4D8               	btfsc	status,2,c
 11568  0119E4  0012               	return	
 11569                           
 11570                           ;motor.c: 135: else if(os.busy)
 11571                           
 11572                           ;motor.c: 134: }
 11573                           
 11574                           ;motor.c: 131: {;motor.c: 133: return;
 11575  0119E6  0100               	movlb	0	; () banked
 11576  0119E8  51DE               	movf	(_os+14)& (0+255),w,b	;volatile
 11577  0119EA  A4D8               	btfss	status,2,c
 11578  0119EC  0012               	return	
 11579                           
 11580                           ; BSR set to: 0
 11581                           ;motor.c: 140: else;motor.c: 141: {;motor.c: 143: _motor_run(;motor.c: 144: motor_comman
      +                          d_cue[motor_cue_read_index].direction,;motor.c: 145: motor_command_cue[motor_cue_read_in
      +                          dex].distance,;motor.c: 146: motor_command_cue[motor_cue_read_index].speed;motor.c: 147:
      +                           );
 11582                           
 11583                           ; BSR set to: 0
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;motor.c: 139: }
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;motor.c: 136: {;motor.c: 138: return;
 11590  0119EE  501E               	movf	_motor_cue_read_index,w,c
 11591  0119F0  0D07               	mullw	7
 11592  0119F2  0E01               	movlw	1
 11593  0119F4  26F3               	addwf	prodl,f,c
 11594  0119F6  0E00               	movlw	0
 11595  0119F8  22F4               	addwfc	prodh,f,c
 11596  0119FA  0E00               	movlw	low _motor_command_cue
 11597  0119FC  24F3               	addwf	prodl,w,c
 11598  0119FE  6ED9               	movwf	fsr2l,c
 11599  011A00  0E02               	movlw	high _motor_command_cue
 11600  011A02  20F4               	addwfc	prodh,w,c
 11601  011A04  6EDA               	movwf	fsr2h,c
 11602  011A06  CFDE F060          	movff	postinc2,__motor_run@distance_in_steps
 11603  011A0A  CFDE F061          	movff	postinc2,__motor_run@distance_in_steps+1
 11604  011A0E  CFDE F062          	movff	postinc2,__motor_run@distance_in_steps+2
 11605  011A12  CFDE F063          	movff	postinc2,__motor_run@distance_in_steps+3
 11606  011A16  501E               	movf	_motor_cue_read_index,w,c
 11607  011A18  0D07               	mullw	7
 11608  011A1A  0E05               	movlw	5
 11609  011A1C  26F3               	addwf	prodl,f,c
 11610  011A1E  0E00               	movlw	0
 11611  011A20  22F4               	addwfc	prodh,f,c
 11612  011A22  0E00               	movlw	low _motor_command_cue
 11613  011A24  24F3               	addwf	prodl,w,c
 11614  011A26  6ED9               	movwf	fsr2l,c
 11615  011A28  0E02               	movlw	high _motor_command_cue
 11616  011A2A  20F4               	addwfc	prodh,w,c
 11617  011A2C  6EDA               	movwf	fsr2h,c
 11618  011A2E  CFDE F064          	movff	postinc2,__motor_run@speed
 11619  011A32  CFDD F065          	movff	postdec2,__motor_run@speed+1
 11620  011A36  501E               	movf	_motor_cue_read_index,w,c
 11621  011A38  0D07               	mullw	7
 11622  011A3A  0E00               	movlw	low _motor_command_cue
 11623  011A3C  24F3               	addwf	prodl,w,c
 11624  011A3E  6ED9               	movwf	fsr2l,c
 11625  011A40  0E02               	movlw	high _motor_command_cue
 11626  011A42  20F4               	addwfc	prodh,w,c
 11627  011A44  6EDA               	movwf	fsr2h,c
 11628  011A46  50DF               	movf	indf2,w,c
 11629  011A48  ECAF  F06D         	call	__motor_run
 11630                           
 11631                           ;motor.c: 149: ++motor_cue_read_index;
 11632  011A4C  2A1E               	incf	_motor_cue_read_index,f,c
 11633  011A4E  0012               	return	
 11634  011A50                     __end_of_motor_process_cue:
 11635                           	opt stack 0
 11636                           tblptru	equ	0xFF8
 11637                           tblptrh	equ	0xFF7
 11638                           tblptrl	equ	0xFF6
 11639                           tablat	equ	0xFF5
 11640                           prodh	equ	0xFF4
 11641                           prodl	equ	0xFF3
 11642                           intcon	equ	0xFF2
 11643                           postinc0	equ	0xFEE
 11644                           wreg	equ	0xFE8
 11645                           postdec1	equ	0xFE5
 11646                           plusw1	equ	0xFE3
 11647                           fsr1h	equ	0xFE2
 11648                           fsr1l	equ	0xFE1
 11649                           indf2	equ	0xFDF
 11650                           postinc2	equ	0xFDE
 11651                           postdec2	equ	0xFDD
 11652                           plusw2	equ	0xFDB
 11653                           fsr2h	equ	0xFDA
 11654                           fsr2l	equ	0xFD9
 11655                           status	equ	0xFD8
 11656                           
 11657 ;; *************** function _encoder_statemachine *****************
 11658 ;; Defined at:
 11659 ;;		line 210 in file "encoder.c"
 11660 ;; Parameters:    Size  Location     Type
 11661 ;;		None
 11662 ;; Auto vars:     Size  Location     Type
 11663 ;;		None
 11664 ;; Return value:  Size  Location     Type
 11665 ;;                  1    wreg      void 
 11666 ;; Registers used:
 11667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11668 ;; Tracked objects:
 11669 ;;		On entry : 0/0
 11670 ;;		On exit  : 0/0
 11671 ;;		Unchanged: 0/0
 11672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11675 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11676 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11677 ;;Total ram usage:        4 bytes
 11678 ;; Hardware stack levels used:    1
 11679 ;; Hardware stack levels required when called:   14
 11680 ;; This function calls:
 11681 ;;		__divide_jump_size_decrement
 11682 ;;		__divide_jump_size_increment
 11683 ;;		__encoder_next_arc_step_size
 11684 ;;		__encoder_next_divide_step_size
 11685 ;;		__encoder_next_setup_stepsize
 11686 ;;		_motor_arc_move
 11687 ;;		_motor_change_speed
 11688 ;;		_motor_divide_jump
 11689 ;;		_motor_divide_jump_to_nearest
 11690 ;;		_motor_go_to_steps_position
 11691 ;;		_motor_nonzero_steps_from_degrees
 11692 ;;		_motor_schedule_command
 11693 ;;		_motor_stop
 11694 ;; This function is called by:
 11695 ;;		_main
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           	psect	text40
 11700  00AE80                     __ptext40:
 11701                           	opt stack 0
 11702  00AE80                     _encoder_statemachine:
 11703                           	opt stack 16
 11704                           
 11705                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 11706                           
 11707                           ;incstack = 0
 11708  00AE80  0100               	movlb	0	; () banked
 11709  00AE82  51D3               	movf	(_os+3)& (0+255),w,b	;volatile
 11710  00AE84  A4D8               	btfss	status,2,c
 11711  00AE86  EF7D  F05B         	goto	l2545
 11712                           
 11713                           ; BSR set to: 0
 11714  00AE8A  51D5               	movf	(_os+5)& (0+255),w,b	;volatile
 11715  00AE8C  A4D8               	btfss	status,2,c
 11716  00AE8E  EF7D  F05B         	goto	l2545
 11717                           
 11718                           ; BSR set to: 0
 11719  00AE92  51D4               	movf	(_os+4)& (0+255),w,b	;volatile
 11720  00AE94  A4D8               	btfss	status,2,c
 11721  00AE96  EF7D  F05B         	goto	l2545
 11722                           
 11723                           ; BSR set to: 0
 11724  00AE9A  51D6               	movf	(_os+6)& (0+255),w,b	;volatile
 11725  00AE9C  B4D8               	btfsc	status,2,c
 11726  00AE9E  0012               	return	
 11727  00AEA0  EF7D  F05B         	goto	l2545
 11728  00AEA4                     
 11729                           ; BSR set to: 0
 11730                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 11731                           
 11732                           ; BSR set to: 0
 11733  00AEA4  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 11734  00AEA6  B4D8               	btfsc	status,2,c
 11735  00AEA8  D003               	goto	u21810
 11736                           
 11737                           ; BSR set to: 0
 11738  00AEAA  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 11739  00AEAC  A4D8               	btfss	status,2,c
 11740  00AEAE  D002               	goto	l2549
 11741  00AEB0                     u21810:
 11742                           
 11743                           ; BSR set to: 0
 11744                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 11745                           
 11746                           ; BSR set to: 0
 11747  00AEB0  0E11               	movlw	17
 11748  00AEB2  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 11749  00AEB4                     l2549:
 11750                           
 11751                           ; BSR set to: 0
 11752                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 11753                           
 11754                           ; BSR set to: 0
 11755  00AEB4  C0D5  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11756  00AEB8  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11757  00AEBA  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11758  00AEBC  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11759  00AEBE  C0D3  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11760  00AEC2  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11761  00AEC4  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11762  00AEC6  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11763  00AEC8  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11764  00AECA  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11765  00AECC  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11766  00AECE  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11767  00AED0  BFC7               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 11768  00AED2  D007               	goto	l2552
 11769  00AED4  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 11770  00AED6  E103               	bnz	u21820
 11771  00AED8  05C6               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 11772  00AEDA  A0D8               	btfss	status,0,c
 11773  00AEDC  D002               	goto	l2552
 11774  00AEDE                     u21820:
 11775                           
 11776                           ; BSR set to: 0
 11777                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 11778  00AEDE  0E02               	movlw	2
 11779  00AEE0  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 11780  00AEE2                     l2552:
 11781                           
 11782                           ; BSR set to: 0
 11783                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 11784                           
 11785                           ; BSR set to: 0
 11786  00AEE2  C0D5  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11787  00AEE6  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11788  00AEE8  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11789  00AEEA  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11790  00AEEC  C0D3  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11791  00AEF0  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11792  00AEF2  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11793  00AEF4  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11794  00AEF6  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11795  00AEF8  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11796  00AEFA  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11797  00AEFC  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11798  00AEFE  AFC7               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 11799  00AF00  EFA1  F05B         	goto	l2580
 11800                           
 11801                           ; BSR set to: 0
 11802                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 11803  00AF04  0E05               	movlw	5
 11804  00AF06  D3E8               	goto	L17
 11805  00AF08                     
 11806                           ; BSR set to: 0
 11807                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 11808                           
 11809                           ; BSR set to: 0
 11810  00AF08  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 11811  00AF0A  B4D8               	btfsc	status,2,c
 11812  00AF0C  D003               	goto	u21850
 11813                           
 11814                           ; BSR set to: 0
 11815  00AF0E  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 11816  00AF10  A4D8               	btfss	status,2,c
 11817  00AF12  D002               	goto	l2556
 11818  00AF14                     u21850:
 11819                           
 11820                           ; BSR set to: 0
 11821                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 11822                           
 11823                           ; BSR set to: 0
 11824  00AF14  0E31               	movlw	49
 11825  00AF16  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 11826  00AF18                     l2556:
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 11830                           
 11831                           ; BSR set to: 0
 11832  00AF18  C0D5  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11833  00AF1C  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11834  00AF1E  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11835  00AF20  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11836  00AF22  C0D3  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11837  00AF26  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11838  00AF28  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11839  00AF2A  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11840  00AF2C  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11841  00AF2E  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11842  00AF30  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11843  00AF32  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11844  00AF34  BFC7               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 11845  00AF36  D007               	goto	l2559
 11846  00AF38  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 11847  00AF3A  E103               	bnz	u21860
 11848  00AF3C  05C6               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 11849  00AF3E  A0D8               	btfss	status,0,c
 11850  00AF40  D002               	goto	l2559
 11851  00AF42                     u21860:
 11852                           
 11853                           ; BSR set to: 0
 11854                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 11855  00AF42  0E03               	movlw	3
 11856  00AF44  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 11857  00AF46                     l2559:
 11858                           
 11859                           ; BSR set to: 0
 11860                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 11861                           
 11862                           ; BSR set to: 0
 11863  00AF46  C0D5  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11864  00AF4A  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11865  00AF4C  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11866  00AF4E  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11867  00AF50  C0D3  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11868  00AF54  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11869  00AF56  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11870  00AF58  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11871  00AF5A  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11872  00AF5C  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11873  00AF5E  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11874  00AF60  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11875  00AF62  AFC7               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 11876  00AF64  D3EE               	goto	l2580
 11877                           
 11878                           ; BSR set to: 0
 11879                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 11880  00AF66  0E01               	movlw	1
 11881  00AF68  D3B7               	goto	L17
 11882  00AF6A                     
 11883                           ; BSR set to: 0
 11884                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 11885                           
 11886                           ; BSR set to: 0
 11887  00AF6A  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 11888  00AF6C  B4D8               	btfsc	status,2,c
 11889  00AF6E  D003               	goto	u21890
 11890                           
 11891                           ; BSR set to: 0
 11892  00AF70  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 11893  00AF72  A4D8               	btfss	status,2,c
 11894  00AF74  D002               	goto	l2562
 11895  00AF76                     u21890:
 11896                           
 11897                           ; BSR set to: 0
 11898                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 11899                           
 11900                           ; BSR set to: 0
 11901  00AF76  0E51               	movlw	81
 11902  00AF78  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 11903  00AF7A                     l2562:
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 11907                           
 11908                           ; BSR set to: 0
 11909  00AF7A  C0D5  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11910  00AF7E  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11911  00AF80  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11912  00AF82  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11913  00AF84  C0D3  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11914  00AF88  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11915  00AF8A  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11916  00AF8C  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11917  00AF8E  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11918  00AF90  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11919  00AF92  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11920  00AF94  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11921  00AF96  BFC7               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 11922  00AF98  D007               	goto	l2565
 11923  00AF9A  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 11924  00AF9C  E103               	bnz	u21900
 11925  00AF9E  05C6               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 11926  00AFA0  A0D8               	btfss	status,0,c
 11927  00AFA2  D002               	goto	l2565
 11928  00AFA4                     u21900:
 11929                           
 11930                           ; BSR set to: 0
 11931                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 11932  00AFA4  0E04               	movlw	4
 11933  00AFA6  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 11934  00AFA8                     l2565:
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 11938                           
 11939                           ; BSR set to: 0
 11940  00AFA8  C0D5  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11941  00AFAC  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11942  00AFAE  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11943  00AFB0  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11944  00AFB2  C0D3  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11945  00AFB6  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11946  00AFB8  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11947  00AFBA  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11948  00AFBC  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11949  00AFBE  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11950  00AFC0  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11951  00AFC2  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11952  00AFC4  AFC7               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 11953  00AFC6  D3BD               	goto	l2580
 11954                           
 11955                           ; BSR set to: 0
 11956                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 11957  00AFC8  0E02               	movlw	2
 11958  00AFCA  D386               	goto	L17
 11959  00AFCC                     
 11960                           ; BSR set to: 0
 11961                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 11962                           
 11963                           ; BSR set to: 0
 11964  00AFCC  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 11965  00AFCE  B4D8               	btfsc	status,2,c
 11966  00AFD0  D003               	goto	u21930
 11967                           
 11968                           ; BSR set to: 0
 11969  00AFD2  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 11970  00AFD4  A4D8               	btfss	status,2,c
 11971  00AFD6  D002               	goto	l2568
 11972  00AFD8                     u21930:
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 11976                           
 11977                           ; BSR set to: 0
 11978  00AFD8  0E82               	movlw	130
 11979  00AFDA  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 11980  00AFDC                     l2568:
 11981                           
 11982                           ; BSR set to: 0
 11983                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 11984                           
 11985                           ; BSR set to: 0
 11986  00AFDC  C0D5  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 11987  00AFE0  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 11988  00AFE2  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 11989  00AFE4  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 11990  00AFE6  C0D3  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 11991  00AFEA  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 11992  00AFEC  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 11993  00AFEE  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 11994  00AFF0  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 11995  00AFF2  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 11996  00AFF4  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 11997  00AFF6  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 11998  00AFF8  BFC7               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 11999  00AFFA  D007               	goto	l2571
 12000  00AFFC  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 12001  00AFFE  E103               	bnz	u21940
 12002  00B000  05C6               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 12003  00B002  A0D8               	btfss	status,0,c
 12004  00B004  D002               	goto	l2571
 12005  00B006                     u21940:
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 12009  00B006  0E05               	movlw	5
 12010  00B008  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12011  00B00A                     l2571:
 12012                           
 12013                           ; BSR set to: 0
 12014                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 12015                           
 12016                           ; BSR set to: 0
 12017  00B00A  C0D5  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 12018  00B00E  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12019  00B010  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 12020  00B012  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12021  00B014  C0D3  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12022  00B018  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12023  00B01A  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12024  00B01C  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12025  00B01E  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 12026  00B020  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12027  00B022  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12028  00B024  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12029  00B026  AFC7               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 12030  00B028  D38C               	goto	l2580
 12031                           
 12032                           ; BSR set to: 0
 12033                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 12034  00B02A  0E03               	movlw	3
 12035  00B02C  D355               	goto	L17
 12036  00B02E                     
 12037                           ; BSR set to: 0
 12038                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 12039                           
 12040                           ; BSR set to: 0
 12041  00B02E  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 12042  00B030  B4D8               	btfsc	status,2,c
 12043  00B032  D003               	goto	u21970
 12044                           
 12045                           ; BSR set to: 0
 12046  00B034  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 12047  00B036  A4D8               	btfss	status,2,c
 12048  00B038  D002               	goto	l2574
 12049  00B03A                     u21970:
 12050                           
 12051                           ; BSR set to: 0
 12052                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 12053                           
 12054                           ; BSR set to: 0
 12055  00B03A  0E71               	movlw	113
 12056  00B03C  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12057  00B03E                     l2574:
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 12061                           
 12062                           ; BSR set to: 0
 12063  00B03E  C0D5  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 12064  00B042  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12065  00B044  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 12066  00B046  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12067  00B048  C0D3  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12068  00B04C  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12069  00B04E  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12070  00B050  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12071  00B052  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 12072  00B054  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12073  00B056  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12074  00B058  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12075  00B05A  BFC7               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 12076  00B05C  D007               	goto	l2577
 12077  00B05E  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 12078  00B060  E103               	bnz	u21980
 12079  00B062  05C6               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 12080  00B064  A0D8               	btfss	status,0,c
 12081  00B066  D002               	goto	l2577
 12082  00B068                     u21980:
 12083                           
 12084                           ; BSR set to: 0
 12085                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 12086  00B068  0E01               	movlw	1
 12087  00B06A  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12088  00B06C                     l2577:
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 12092                           
 12093                           ; BSR set to: 0
 12094  00B06C  C0D5  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 12095  00B070  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12096  00B072  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 12097  00B074  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12098  00B076  C0D3  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12099  00B07A  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12100  00B07C  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12101  00B07E  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12102  00B080  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 12103  00B082  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12104  00B084  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12105  00B086  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12106  00B088  AFC7               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 12107  00B08A  D35B               	goto	l2580
 12108                           
 12109                           ; BSR set to: 0
 12110                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 12111  00B08C  0E04               	movlw	4
 12112  00B08E  D324               	goto	L17
 12113  00B090                     
 12114                           ; BSR set to: 0
 12115                           
 12116                           ; BSR set to: 0
 12117  00B090  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 12118                           
 12119                           ; Switch size 1, requested type "space"
 12120                           ; Number of cases is 6, Range of values is 1 to 240
 12121                           ; switch strategies available:
 12122                           ; Name         Instructions Cycles
 12123                           ; simple_byte           19    10 (average)
 12124                           ;	Chosen strategy is simple_byte
 12125  00B092  0A01               	xorlw	1	; case 1
 12126  00B094  B4D8               	btfsc	status,2,c
 12127  00B096  D706               	goto	l2548
 12128  00B098  0A03               	xorlw	3	; case 2
 12129  00B09A  B4D8               	btfsc	status,2,c
 12130  00B09C  D735               	goto	l2555
 12131  00B09E  0A01               	xorlw	1	; case 3
 12132  00B0A0  B4D8               	btfsc	status,2,c
 12133  00B0A2  D763               	goto	l2561
 12134  00B0A4  0A07               	xorlw	7	; case 4
 12135  00B0A6  B4D8               	btfsc	status,2,c
 12136  00B0A8  D791               	goto	l2567
 12137  00B0AA  0A01               	xorlw	1	; case 5
 12138  00B0AC  B4D8               	btfsc	status,2,c
 12139  00B0AE  D7BF               	goto	l2573
 12140  00B0B0  0AF5               	xorlw	245	; case 240
 12141                           
 12142                           ; BSR set to: 0
 12143                           ;encoder.c: 268: break;
 12144  00B0B2  D347               	goto	l2580
 12145  00B0B4                     
 12146                           ; BSR set to: 0
 12147                           ;encoder.c: 274: if(os.button1==1)
 12148                           
 12149                           ; BSR set to: 0
 12150  00B0B4  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 12151  00B0B6  A4D8               	btfss	status,2,c
 12152  00B0B8  D00E               	goto	l2584
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 12156  00B0BA  0E00               	movlw	0
 12157  00B0BC  6FD7               	movwf	(_os+7)& (0+255),b	;volatile
 12158  00B0BE  0E00               	movlw	0
 12159  00B0C0  6FD8               	movwf	(_os+8)& (0+255),b	;volatile
 12160  00B0C2  0E00               	movlw	0
 12161  00B0C4  6FD9               	movwf	(_os+9)& (0+255),b	;volatile
 12162  00B0C6  0E00               	movlw	0
 12163  00B0C8  6FDA               	movwf	(_os+10)& (0+255),b	;volatile
 12164                           
 12165                           ;encoder.c: 277: os.divide_position = 0;
 12166  00B0CA  0E00               	movlw	0
 12167  00B0CC  6FE7               	movwf	(_os+23)& (0+255),b	;volatile
 12168  00B0CE  0E00               	movlw	0
 12169  00B0D0  6FE6               	movwf	(_os+22)& (0+255),b	;volatile
 12170                           
 12171                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 12172  00B0D2  0E21               	movlw	33
 12173  00B0D4  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12174  00B0D6                     l2584:
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 12178                           
 12179                           ; BSR set to: 0
 12180  00B0D6  51D3               	movf	(_os+3)& (0+255),w,b	;volatile
 12181  00B0D8  0A80               	xorlw	128
 12182  00B0DA  0F7F               	addlw	-129
 12183  00B0DC  A0D8               	btfss	status,0,c
 12184  00B0DE  D002               	goto	l2585
 12185                           
 12186                           ; BSR set to: 0
 12187                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 12188  00B0E0  0E12               	movlw	18
 12189  00B0E2  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12190  00B0E4                     l2585:
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;encoder.c: 282: if(os.encoder1Count<0)
 12194                           
 12195                           ; BSR set to: 0
 12196  00B0E4  AFD3               	btfss	(_os+3)& (0+255),7,b	;volatile
 12197  00B0E6  D01A               	goto	l2587
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 12201  00B0E8  0E12               	movlw	18
 12202  00B0EA  D00F               	goto	L6
 12203  00B0EC                     
 12204                           ; BSR set to: 0
 12205                           ;encoder.c: 286: if(os.button1==1)
 12206                           
 12207                           ; BSR set to: 0
 12208  00B0EC  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 12209  00B0EE  A4D8               	btfss	status,2,c
 12210  00B0F0  D002               	goto	l2589
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 12214  00B0F2  0E01               	movlw	1
 12215  00B0F4  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12216  00B0F6                     l2589:
 12217                           
 12218                           ; BSR set to: 0
 12219                           ;encoder.c: 288: if(os.encoder1Count>0)
 12220                           
 12221                           ; BSR set to: 0
 12222  00B0F6  51D3               	movf	(_os+3)& (0+255),w,b	;volatile
 12223  00B0F8  0A80               	xorlw	128
 12224  00B0FA  0F7F               	addlw	-129
 12225  00B0FC  A0D8               	btfss	status,0,c
 12226  00B0FE  D002               	goto	l2590
 12227                           
 12228                           ; BSR set to: 0
 12229                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 12230  00B100  0E11               	movlw	17
 12231  00B102  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12232  00B104                     l2590:
 12233                           
 12234                           ; BSR set to: 0
 12235                           ;encoder.c: 290: if(os.encoder1Count<0)
 12236                           
 12237                           ; BSR set to: 0
 12238  00B104  AFD3               	btfss	(_os+3)& (0+255),7,b	;volatile
 12239  00B106  D00A               	goto	l2587
 12240                           
 12241                           ; BSR set to: 0
 12242                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 12243  00B108  0E11               	movlw	17
 12244  00B10A                     L6:
 12245  00B10A  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;encoder.c: 293: }
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;encoder.c: 292: break;
 12252  00B10C  D007               	goto	l2587
 12253  00B10E                     
 12254                           ; BSR set to: 0
 12255                           
 12256                           ; BSR set to: 0
 12257  00B10E  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 12258                           
 12259                           ; Switch size 1, requested type "space"
 12260                           ; Number of cases is 2, Range of values is 17 to 18
 12261                           ; switch strategies available:
 12262                           ; Name         Instructions Cycles
 12263                           ; simple_byte            7     4 (average)
 12264                           ;	Chosen strategy is simple_byte
 12265  00B110  0A11               	xorlw	17	; case 17
 12266  00B112  B4D8               	btfsc	status,2,c
 12267  00B114  D7CF               	goto	l2583
 12268  00B116  0A03               	xorlw	3	; case 18
 12269  00B118  B4D8               	btfsc	status,2,c
 12270  00B11A  D7E8               	goto	l2588
 12271  00B11C                     l2587:
 12272                           
 12273                           ; BSR set to: 0
 12274                           ;encoder.c: 294: if(os.button2==1)
 12275                           
 12276                           ; BSR set to: 0
 12277  00B11C  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 12278  00B11E  A4D8               	btfss	status,2,c
 12279  00B120  D00A               	goto	l2592
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 12283  00B122  C0E0  F060         	movff	_os+16,__encoder_next_setup_stepsize@old_stepsize	;volatile
 12284  00B126  C0E1  F061         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 12285  00B12A  EC28  F08D         	call	__encoder_next_setup_stepsize	;wreg free
 12286  00B12E  C060  F0E0         	movff	?__encoder_next_setup_stepsize,_os+16	;volatile
 12287  00B132  C061  F0E1         	movff	?__encoder_next_setup_stepsize+1,_os+17	;volatile
 12288  00B136                     l2592:
 12289                           
 12290                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 12291  00B136  0100               	movlb	0	; () banked
 12292  00B138  51D5               	movf	(_os+5)& (0+255),w,b	;volatile
 12293  00B13A  0A80               	xorlw	128
 12294  00B13C  0F7F               	addlw	-129
 12295  00B13E  A0D8               	btfss	status,0,c
 12296  00B140  D019               	goto	l2594
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 12300  00B142  51DE               	movf	(_os+14)& (0+255),w,b	;volatile
 12301  00B144  A4D8               	btfss	status,2,c
 12302  00B146  D016               	goto	l2594
 12303                           
 12304                           ; BSR set to: 0
 12305                           ;encoder.c: 302: motor_schedule_command(MOTOR_DIRECTION_CW, motor_nonzero_steps_from_deg
      +                          rees(os.setup_step_size), 0);
 12306  00B148  C0E0  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 12307  00B14C  C0E1  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 12308  00B150  EC2A  F092         	call	_motor_nonzero_steps_from_degrees	;wreg free
 12309  00B154  C08F  F097         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 12310  00B158  C090  F098         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 12311  00B15C  C091  F099         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 12312  00B160  C092  F09A         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 12313  00B164  0E00               	movlw	0
 12314  00B166  0100               	movlb	0	; () banked
 12315  00B168  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12316  00B16A  0E00               	movlw	0
 12317  00B16C  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12318  00B16E  0E01               	movlw	1
 12319  00B170  ECFC  F088         	call	_motor_schedule_command
 12320  00B174                     l2594:
 12321                           
 12322                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 12323  00B174  0100               	movlb	0	; () banked
 12324  00B176  AFD5               	btfss	(_os+5)& (0+255),7,b	;volatile
 12325  00B178  D2E4               	goto	l2580
 12326                           
 12327                           ; BSR set to: 0
 12328                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 12329  00B17A  51DE               	movf	(_os+14)& (0+255),w,b	;volatile
 12330  00B17C  A4D8               	btfss	status,2,c
 12331  00B17E  D2E1               	goto	l2580
 12332                           
 12333                           ; BSR set to: 0
 12334                           ;encoder.c: 308: motor_schedule_command(MOTOR_DIRECTION_CCW, motor_nonzero_steps_from_de
      +                          grees(os.setup_step_size), 0);
 12335  00B180  C0E0  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 12336  00B184  C0E1  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 12337  00B188  EC2A  F092         	call	_motor_nonzero_steps_from_degrees	;wreg free
 12338  00B18C  C08F  F097         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 12339  00B190  C090  F098         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 12340  00B194  C091  F099         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 12341  00B198  C092  F09A         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 12342  00B19C  0E00               	movlw	0
 12343  00B19E  0100               	movlb	0	; () banked
 12344  00B1A0  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12345  00B1A2  0E00               	movlw	0
 12346  00B1A4  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12347  00B1A6  0EFF               	movlw	255
 12348  00B1A8  ECFC  F088         	call	_motor_schedule_command
 12349                           
 12350                           ;encoder.c: 309: };encoder.c: 310: break;
 12351  00B1AC  D2CA               	goto	l2580
 12352  00B1AE                     
 12353                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 12354  00B1AE  0100               	movlb	0	; () banked
 12355  00B1B0  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 12356  00B1B2  B4D8               	btfsc	status,2,c
 12357  00B1B4  D003               	goto	u22120
 12358                           
 12359                           ; BSR set to: 0
 12360  00B1B6  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 12361  00B1B8  A4D8               	btfss	status,2,c
 12362  00B1BA  D01F               	goto	l2600
 12363  00B1BC                     u22120:
 12364                           
 12365                           ; BSR set to: 0
 12366                           ;encoder.c: 317: {;encoder.c: 318: motor_schedule_command(MOTOR_DIRECTION_CW, config.ove
      +                          rshoot_in_steps, 0);
 12367                           
 12368                           ; BSR set to: 0
 12369  00B1BC  C188  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 12370  00B1C0  C189  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 12371  00B1C4  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 12372  00B1C6  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 12373  00B1C8  0E00               	movlw	0
 12374  00B1CA  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12375  00B1CC  0E00               	movlw	0
 12376  00B1CE  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12377  00B1D0  0E01               	movlw	1
 12378  00B1D2  ECFC  F088         	call	_motor_schedule_command
 12379                           
 12380                           ;encoder.c: 319: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 
      +                          0);
 12381  00B1D6  C188  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 12382  00B1DA  C189  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 12383  00B1DE  0100               	movlb	0	; () banked
 12384  00B1E0  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 12385  00B1E2  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 12386  00B1E4  0E00               	movlw	0
 12387  00B1E6  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12388  00B1E8  0E00               	movlw	0
 12389  00B1EA  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12390  00B1EC  0EFF               	movlw	255
 12391  00B1EE  ECFC  F088         	call	_motor_schedule_command
 12392                           
 12393                           ;encoder.c: 320: os.approach_direction = MOTOR_DIRECTION_CCW;
 12394  00B1F2  0100               	movlb	0	; () banked
 12395  00B1F4  69E2               	setf	(_os+18)& (0+255),b	;volatile
 12396                           
 12397                           ; BSR set to: 0
 12398                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 12399  00B1F6  0E01               	movlw	1
 12400  00B1F8  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12401  00B1FA                     l2600:
 12402                           
 12403                           ; BSR set to: 0
 12404                           ;encoder.c: 322: };encoder.c: 323: if(os.encoder1Count+os.encoder2Count>0)
 12405                           
 12406                           ; BSR set to: 0
 12407  00B1FA  C0D5  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 12408  00B1FE  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12409  00B200  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 12410  00B202  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12411  00B204  C0D3  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12412  00B208  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12413  00B20A  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12414  00B20C  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12415  00B20E  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 12416  00B210  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12417  00B212  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12418  00B214  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12419  00B216  BFC7               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 12420  00B218  D007               	goto	l2603
 12421  00B21A  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 12422  00B21C  E103               	bnz	u22130
 12423  00B21E  05C6               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 12424  00B220  A0D8               	btfss	status,0,c
 12425  00B222  D002               	goto	l2603
 12426  00B224                     u22130:
 12427                           
 12428                           ; BSR set to: 0
 12429                           ;encoder.c: 324: os.displayState = DISPLAY_STATE_SETUP2_CW;
 12430  00B224  0E22               	movlw	34
 12431  00B226  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12432  00B228                     l2603:
 12433                           
 12434                           ; BSR set to: 0
 12435                           ;encoder.c: 325: if(os.encoder1Count+os.encoder2Count<0)
 12436                           
 12437                           ; BSR set to: 0
 12438  00B228  C0D5  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 12439  00B22C  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12440  00B22E  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 12441  00B230  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12442  00B232  C0D3  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12443  00B236  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12444  00B238  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12445  00B23A  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12446  00B23C  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 12447  00B23E  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12448  00B240  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12449  00B242  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12450  00B244  AFC7               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 12451  00B246  D27D               	goto	l2580
 12452                           
 12453                           ; BSR set to: 0
 12454                           ;encoder.c: 326: os.displayState = DISPLAY_STATE_SETUP2_CW;
 12455  00B248  0E22               	movlw	34
 12456  00B24A  D246               	goto	L17
 12457  00B24C                     
 12458                           ; BSR set to: 0
 12459                           ;encoder.c: 329: if(os.button1==1 || os.button2==1)
 12460                           
 12461                           ; BSR set to: 0
 12462  00B24C  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 12463  00B24E  B4D8               	btfsc	status,2,c
 12464  00B250  D003               	goto	u22160
 12465                           
 12466                           ; BSR set to: 0
 12467  00B252  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 12468  00B254  A4D8               	btfss	status,2,c
 12469  00B256  D020               	goto	l2607
 12470  00B258                     u22160:
 12471                           
 12472                           ; BSR set to: 0
 12473                           ;encoder.c: 330: {;encoder.c: 331: motor_schedule_command(MOTOR_DIRECTION_CCW, config.ov
      +                          ershoot_in_steps, 0);
 12474                           
 12475                           ; BSR set to: 0
 12476  00B258  C188  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 12477  00B25C  C189  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 12478  00B260  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 12479  00B262  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 12480  00B264  0E00               	movlw	0
 12481  00B266  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12482  00B268  0E00               	movlw	0
 12483  00B26A  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12484  00B26C  0EFF               	movlw	255
 12485  00B26E  ECFC  F088         	call	_motor_schedule_command
 12486                           
 12487                           ;encoder.c: 332: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0
      +                          );
 12488  00B272  C188  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 12489  00B276  C189  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 12490  00B27A  0100               	movlb	0	; () banked
 12491  00B27C  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 12492  00B27E  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 12493  00B280  0E00               	movlw	0
 12494  00B282  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 12495  00B284  0E00               	movlw	0
 12496  00B286  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 12497  00B288  0E01               	movlw	1
 12498  00B28A  ECFC  F088         	call	_motor_schedule_command
 12499                           
 12500                           ;encoder.c: 333: os.approach_direction = MOTOR_DIRECTION_CW;
 12501  00B28E  0E01               	movlw	1
 12502  00B290  0100               	movlb	0	; () banked
 12503  00B292  6FE2               	movwf	(_os+18)& (0+255),b	;volatile
 12504                           
 12505                           ; BSR set to: 0
 12506                           ;encoder.c: 334: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 12507  00B294  0E01               	movlw	1
 12508  00B296  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12509  00B298                     l2607:
 12510                           
 12511                           ; BSR set to: 0
 12512                           ;encoder.c: 335: };encoder.c: 336: if(os.encoder1Count+os.encoder2Count>0)
 12513                           
 12514                           ; BSR set to: 0
 12515  00B298  C0D5  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 12516  00B29C  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12517  00B29E  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 12518  00B2A0  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12519  00B2A2  C0D3  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12520  00B2A6  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12521  00B2A8  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12522  00B2AA  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12523  00B2AC  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 12524  00B2AE  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12525  00B2B0  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12526  00B2B2  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12527  00B2B4  BFC7               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 12528  00B2B6  D007               	goto	l2610
 12529  00B2B8  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 12530  00B2BA  E103               	bnz	u22170
 12531  00B2BC  05C6               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 12532  00B2BE  A0D8               	btfss	status,0,c
 12533  00B2C0  D002               	goto	l2610
 12534  00B2C2                     u22170:
 12535                           
 12536                           ; BSR set to: 0
 12537                           ;encoder.c: 337: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 12538  00B2C2  0E21               	movlw	33
 12539  00B2C4  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12540  00B2C6                     l2610:
 12541                           
 12542                           ; BSR set to: 0
 12543                           ;encoder.c: 338: if(os.encoder1Count+os.encoder2Count<0)
 12544                           
 12545                           ; BSR set to: 0
 12546  00B2C6  C0D5  F0C4         	movff	_os+5,??_encoder_statemachine	;volatile
 12547  00B2CA  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12548  00B2CC  BFC4               	btfsc	??_encoder_statemachine& (0+255),7,b
 12549  00B2CE  07C5               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 12550  00B2D0  C0D3  F0C6         	movff	_os+3,??_encoder_statemachine+2	;volatile
 12551  00B2D4  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 12552  00B2D6  BFC6               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 12553  00B2D8  07C7               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 12554  00B2DA  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 12555  00B2DC  27C6               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 12556  00B2DE  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12557  00B2E0  23C7               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 12558  00B2E2  AFC7               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 12559  00B2E4  D22E               	goto	l2580
 12560                           
 12561                           ; BSR set to: 0
 12562                           ;encoder.c: 339: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 12563  00B2E6  0E21               	movlw	33
 12564  00B2E8  D1F7               	goto	L17
 12565  00B2EA                     
 12566                           ; BSR set to: 0
 12567  00B2EA  0100               	movlb	0	; () banked
 12568  00B2EC  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 12569                           
 12570                           ; Switch size 1, requested type "space"
 12571                           ; Number of cases is 2, Range of values is 33 to 34
 12572                           ; switch strategies available:
 12573                           ; Name         Instructions Cycles
 12574                           ; simple_byte            7     4 (average)
 12575                           ;	Chosen strategy is simple_byte
 12576  00B2EE  0A21               	xorlw	33	; case 33
 12577  00B2F0  B4D8               	btfsc	status,2,c
 12578  00B2F2  D75D               	goto	l2599
 12579  00B2F4  0A03               	xorlw	3	; case 34
 12580  00B2F6  B4D8               	btfsc	status,2,c
 12581  00B2F8  D7A9               	goto	l2606
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;encoder.c: 342: break;
 12585  00B2FA  D223               	goto	l2580
 12586  00B2FC                     
 12587                           ; BSR set to: 0
 12588                           ;encoder.c: 348: if(os.button1==1)
 12589                           
 12590                           ; BSR set to: 0
 12591  00B2FC  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 12592  00B2FE  A4D8               	btfss	status,2,c
 12593  00B300  D005               	goto	l2615
 12594                           
 12595                           ; BSR set to: 0
 12596                           ;encoder.c: 349: {;encoder.c: 351: motor_divide_jump_to_nearest();
 12597  00B302  ECB6  F073         	call	_motor_divide_jump_to_nearest	;wreg free
 12598                           
 12599                           ;encoder.c: 352: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 12600  00B306  0E41               	movlw	65
 12601  00B308  0100               	movlb	0	; () banked
 12602  00B30A  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12603  00B30C                     l2615:
 12604                           
 12605                           ; BSR set to: 0
 12606                           ;encoder.c: 353: };encoder.c: 354: if(os.encoder1Count>0)
 12607                           
 12608                           ; BSR set to: 0
 12609  00B30C  51D3               	movf	(_os+3)& (0+255),w,b	;volatile
 12610  00B30E  0A80               	xorlw	128
 12611  00B310  0F7F               	addlw	-129
 12612  00B312  A0D8               	btfss	status,0,c
 12613  00B314  D002               	goto	l2616
 12614                           
 12615                           ; BSR set to: 0
 12616                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 12617  00B316  0E32               	movlw	50
 12618  00B318  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12619  00B31A                     l2616:
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;encoder.c: 356: if(os.encoder1Count<0)
 12623                           
 12624                           ; BSR set to: 0
 12625  00B31A  AFD3               	btfss	(_os+3)& (0+255),7,b	;volatile
 12626  00B31C  D01A               	goto	l2618
 12627                           
 12628                           ; BSR set to: 0
 12629                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 12630  00B31E  0E32               	movlw	50
 12631  00B320  D00F               	goto	L9
 12632  00B322                     
 12633                           ; BSR set to: 0
 12634                           ;encoder.c: 360: if(os.button1==1)
 12635                           
 12636                           ; BSR set to: 0
 12637  00B322  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 12638  00B324  A4D8               	btfss	status,2,c
 12639  00B326  D002               	goto	l2620
 12640                           
 12641                           ; BSR set to: 0
 12642                           ;encoder.c: 361: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 12643  00B328  0E02               	movlw	2
 12644  00B32A  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12645  00B32C                     l2620:
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;encoder.c: 362: if(os.encoder1Count>0)
 12649                           
 12650                           ; BSR set to: 0
 12651  00B32C  51D3               	movf	(_os+3)& (0+255),w,b	;volatile
 12652  00B32E  0A80               	xorlw	128
 12653  00B330  0F7F               	addlw	-129
 12654  00B332  A0D8               	btfss	status,0,c
 12655  00B334  D002               	goto	l2621
 12656                           
 12657                           ; BSR set to: 0
 12658                           ;encoder.c: 363: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 12659  00B336  0E31               	movlw	49
 12660  00B338  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12661  00B33A                     l2621:
 12662                           
 12663                           ; BSR set to: 0
 12664                           ;encoder.c: 364: if(os.encoder1Count<0)
 12665                           
 12666                           ; BSR set to: 0
 12667  00B33A  AFD3               	btfss	(_os+3)& (0+255),7,b	;volatile
 12668  00B33C  D00A               	goto	l2618
 12669                           
 12670                           ; BSR set to: 0
 12671                           ;encoder.c: 365: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 12672  00B33E  0E31               	movlw	49
 12673  00B340                     L9:
 12674  00B340  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12675                           
 12676                           ; BSR set to: 0
 12677                           ;encoder.c: 367: }
 12678                           
 12679                           ; BSR set to: 0
 12680                           ;encoder.c: 366: break;
 12681  00B342  D007               	goto	l2618
 12682  00B344                     
 12683                           ; BSR set to: 0
 12684                           
 12685                           ; BSR set to: 0
 12686  00B344  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 12687                           
 12688                           ; Switch size 1, requested type "space"
 12689                           ; Number of cases is 2, Range of values is 49 to 50
 12690                           ; switch strategies available:
 12691                           ; Name         Instructions Cycles
 12692                           ; simple_byte            7     4 (average)
 12693                           ;	Chosen strategy is simple_byte
 12694  00B346  0A31               	xorlw	49	; case 49
 12695  00B348  B4D8               	btfsc	status,2,c
 12696  00B34A  D7D8               	goto	l2614
 12697  00B34C  0A03               	xorlw	3	; case 50
 12698  00B34E  B4D8               	btfsc	status,2,c
 12699  00B350  D7E8               	goto	l2619
 12700  00B352                     l2618:
 12701                           
 12702                           ; BSR set to: 0
 12703                           ;encoder.c: 368: if(os.button2==1)
 12704                           
 12705                           ; BSR set to: 0
 12706  00B352  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 12707  00B354  A4D8               	btfss	status,2,c
 12708  00B356  D005               	goto	l2623
 12709                           
 12710                           ; BSR set to: 0
 12711                           ;encoder.c: 369: {;encoder.c: 370: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 12712  00B358  51E5               	movf	(_os+21)& (0+255),w,b	;volatile
 12713  00B35A  EC0E  F095         	call	__encoder_next_divide_step_size
 12714  00B35E  0100               	movlb	0	; () banked
 12715  00B360  6FE5               	movwf	(_os+21)& (0+255),b	;volatile
 12716  00B362                     l2623:
 12717                           
 12718                           ; BSR set to: 0
 12719                           ;encoder.c: 371: };encoder.c: 372: if(os.encoder2Count>0)
 12720                           
 12721                           ; BSR set to: 0
 12722  00B362  51D5               	movf	(_os+5)& (0+255),w,b	;volatile
 12723  00B364  0A80               	xorlw	128
 12724  00B366  0F7F               	addlw	-129
 12725  00B368  A0D8               	btfss	status,0,c
 12726  00B36A  D004               	goto	l2624
 12727                           
 12728                           ; BSR set to: 0
 12729                           ;encoder.c: 373: {;encoder.c: 374: os.division += os.divide_step_size;
 12730  00B36C  51E5               	movf	(_os+21)& (0+255),w,b	;volatile
 12731  00B36E  27E3               	addwf	(_os+19)& (0+255),f,b	;volatile
 12732  00B370  0E00               	movlw	0
 12733  00B372  23E4               	addwfc	(_os+20)& (0+255),f,b	;volatile
 12734  00B374                     l2624:
 12735                           
 12736                           ; BSR set to: 0
 12737                           ;encoder.c: 375: };encoder.c: 376: if(os.encoder2Count<0)
 12738  00B374  AFD5               	btfss	(_os+5)& (0+255),7,b	;volatile
 12739  00B376  D1E5               	goto	l2580
 12740                           
 12741                           ; BSR set to: 0
 12742                           ;encoder.c: 377: {;encoder.c: 378: if(os.division>os.divide_step_size)
 12743  00B378  51E5               	movf	(_os+21)& (0+255),w,b	;volatile
 12744  00B37A  6FC4               	movwf	??_encoder_statemachine& (0+255),b
 12745  00B37C  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 12746  00B37E  51E3               	movf	(_os+19)& (0+255),w,b	;volatile
 12747  00B380  5DC4               	subwf	??_encoder_statemachine& (0+255),w,b
 12748  00B382  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 12749  00B384  0A80               	xorlw	128
 12750  00B386  6FC6               	movwf	(??_encoder_statemachine+2)& (0+255),b
 12751  00B388  51E4               	movf	(_os+20)& (0+255),w,b	;volatile
 12752  00B38A  0A80               	xorlw	128
 12753  00B38C  59C6               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 12754  00B38E  B0D8               	btfsc	status,0,c
 12755  00B390  D005               	goto	l2626
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;encoder.c: 379: {;encoder.c: 380: os.division -= os.divide_step_size;
 12759  00B392  51E5               	movf	(_os+21)& (0+255),w,b	;volatile
 12760  00B394  5FE3               	subwf	(_os+19)& (0+255),f,b	;volatile
 12761  00B396  0E00               	movlw	0
 12762  00B398  5BE4               	subwfb	(_os+20)& (0+255),f,b	;volatile
 12763                           
 12764                           ;encoder.c: 381: }
 12765  00B39A  D1D3               	goto	l2580
 12766  00B39C                     l2626:
 12767                           
 12768                           ; BSR set to: 0
 12769                           ;encoder.c: 382: else;encoder.c: 383: {;encoder.c: 384: os.division = 1;
 12770                           
 12771                           ; BSR set to: 0
 12772  00B39C  0E00               	movlw	0
 12773  00B39E  6FE4               	movwf	(_os+20)& (0+255),b	;volatile
 12774  00B3A0  0E01               	movlw	1
 12775  00B3A2  6FE3               	movwf	(_os+19)& (0+255),b	;volatile
 12776                           
 12777                           ; BSR set to: 0
 12778                           ;encoder.c: 385: };encoder.c: 386: };encoder.c: 387: break;
 12779                           
 12780                           ; BSR set to: 0
 12781  00B3A4  D1CE               	goto	l2580
 12782  00B3A6                     
 12783                           ; BSR set to: 0
 12784                           ;encoder.c: 390: if(os.button1==1)
 12785                           
 12786                           ; BSR set to: 0
 12787  00B3A6  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 12788  00B3A8  A4D8               	btfss	status,2,c
 12789  00B3AA  D002               	goto	l2629
 12790                           
 12791                           ; BSR set to: 0
 12792                           ;encoder.c: 391: {;encoder.c: 392: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 12793  00B3AC  0E02               	movlw	2
 12794  00B3AE  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12795  00B3B0                     l2629:
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;encoder.c: 393: };encoder.c: 394: if(os.button2==1)
 12799                           
 12800                           ; BSR set to: 0
 12801  00B3B0  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 12802  00B3B2  B4D8               	btfsc	status,2,c
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;encoder.c: 395: {;encoder.c: 396: motor_divide_jump();
 12806  00B3B4  ECCE  F08A         	call	_motor_divide_jump	;wreg free
 12807                           
 12808                           ;encoder.c: 397: };encoder.c: 398: if(os.encoder2Count>0)
 12809  00B3B8  0100               	movlb	0	; () banked
 12810  00B3BA  51D5               	movf	(_os+5)& (0+255),w,b	;volatile
 12811  00B3BC  0A80               	xorlw	128
 12812  00B3BE  0F7F               	addlw	-129
 12813  00B3C0  B0D8               	btfsc	status,0,c
 12814                           
 12815                           ; BSR set to: 0
 12816                           ;encoder.c: 399: {;encoder.c: 400: _divide_jump_size_increment();
 12817  00B3C2  ECF1  F093         	call	__divide_jump_size_increment	;wreg free
 12818                           
 12819                           ;encoder.c: 401: };encoder.c: 402: if(os.encoder2Count<0)
 12820  00B3C6  0100               	movlb	0	; () banked
 12821  00B3C8  AFD5               	btfss	(_os+5)& (0+255),7,b	;volatile
 12822  00B3CA  D1BB               	goto	l2580
 12823                           
 12824                           ; BSR set to: 0
 12825                           ;encoder.c: 403: {;encoder.c: 404: _divide_jump_size_decrement();
 12826  00B3CC  ECF9  F08E         	call	__divide_jump_size_decrement	;wreg free
 12827                           
 12828                           ;encoder.c: 405: };encoder.c: 406: break;
 12829  00B3D0  D1B8               	goto	l2580
 12830  00B3D2                     
 12831                           ;encoder.c: 412: if(os.button1==1)
 12832  00B3D2  0100               	movlb	0	; () banked
 12833  00B3D4  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 12834  00B3D6  A4D8               	btfss	status,2,c
 12835  00B3D8  D002               	goto	l2636
 12836                           
 12837                           ; BSR set to: 0
 12838                           ;encoder.c: 413: {;encoder.c: 414: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 12839  00B3DA  0E62               	movlw	98
 12840  00B3DC  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12841  00B3DE                     l2636:
 12842                           
 12843                           ; BSR set to: 0
 12844                           ;encoder.c: 415: };encoder.c: 416: if(os.encoder1Count>0)
 12845                           
 12846                           ; BSR set to: 0
 12847  00B3DE  51D3               	movf	(_os+3)& (0+255),w,b	;volatile
 12848  00B3E0  0A80               	xorlw	128
 12849  00B3E2  0F7F               	addlw	-129
 12850  00B3E4  A0D8               	btfss	status,0,c
 12851  00B3E6  D002               	goto	l2637
 12852                           
 12853                           ; BSR set to: 0
 12854                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 12855  00B3E8  0E52               	movlw	82
 12856  00B3EA  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12857  00B3EC                     l2637:
 12858                           
 12859                           ; BSR set to: 0
 12860                           ;encoder.c: 418: if(os.encoder1Count<0)
 12861                           
 12862                           ; BSR set to: 0
 12863  00B3EC  AFD3               	btfss	(_os+3)& (0+255),7,b	;volatile
 12864  00B3EE  D01B               	goto	l2639
 12865                           
 12866                           ; BSR set to: 0
 12867                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 12868  00B3F0  0E52               	movlw	82
 12869  00B3F2  D00F               	goto	L10
 12870  00B3F4                     
 12871                           ; BSR set to: 0
 12872                           ;encoder.c: 422: if(os.button1==1)
 12873                           
 12874                           ; BSR set to: 0
 12875  00B3F4  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 12876  00B3F6  A4D8               	btfss	status,2,c
 12877  00B3F8  D002               	goto	l2641
 12878                           
 12879                           ; BSR set to: 0
 12880                           ;encoder.c: 423: os.displayState = DISPLAY_STATE_MAIN_ARC;
 12881  00B3FA  0E03               	movlw	3
 12882  00B3FC  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12883  00B3FE                     l2641:
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;encoder.c: 424: if(os.encoder1Count>0)
 12887                           
 12888                           ; BSR set to: 0
 12889  00B3FE  51D3               	movf	(_os+3)& (0+255),w,b	;volatile
 12890  00B400  0A80               	xorlw	128
 12891  00B402  0F7F               	addlw	-129
 12892  00B404  A0D8               	btfss	status,0,c
 12893  00B406  D002               	goto	l2642
 12894                           
 12895                           ; BSR set to: 0
 12896                           ;encoder.c: 425: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 12897  00B408  0E51               	movlw	81
 12898  00B40A  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12899  00B40C                     l2642:
 12900                           
 12901                           ; BSR set to: 0
 12902                           ;encoder.c: 426: if(os.encoder1Count<0)
 12903                           
 12904                           ; BSR set to: 0
 12905  00B40C  AFD3               	btfss	(_os+3)& (0+255),7,b	;volatile
 12906  00B40E  D00B               	goto	l2639
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;encoder.c: 427: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 12910  00B410  0E51               	movlw	81
 12911  00B412                     L10:
 12912  00B412  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 12913                           
 12914                           ; BSR set to: 0
 12915                           ;encoder.c: 429: }
 12916                           
 12917                           ; BSR set to: 0
 12918                           ;encoder.c: 428: break;
 12919  00B414  D008               	goto	l2639
 12920  00B416                     
 12921                           ; BSR set to: 0
 12922  00B416  0100               	movlb	0	; () banked
 12923  00B418  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 12924                           
 12925                           ; Switch size 1, requested type "space"
 12926                           ; Number of cases is 2, Range of values is 81 to 82
 12927                           ; switch strategies available:
 12928                           ; Name         Instructions Cycles
 12929                           ; simple_byte            7     4 (average)
 12930                           ;	Chosen strategy is simple_byte
 12931  00B41A  0A51               	xorlw	81	; case 81
 12932  00B41C  B4D8               	btfsc	status,2,c
 12933  00B41E  D7D9               	goto	l2635
 12934  00B420  0A03               	xorlw	3	; case 82
 12935  00B422  B4D8               	btfsc	status,2,c
 12936  00B424  D7E7               	goto	l2640
 12937  00B426                     l2639:
 12938                           
 12939                           ; BSR set to: 0
 12940                           ;encoder.c: 430: if(os.button2==1)
 12941                           
 12942                           ; BSR set to: 0
 12943  00B426  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 12944  00B428  A4D8               	btfss	status,2,c
 12945  00B42A  D00A               	goto	l2644
 12946                           
 12947                           ; BSR set to: 0
 12948                           ;encoder.c: 431: {;encoder.c: 432: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 12949  00B42C  C0EA  F060         	movff	_os+26,__encoder_next_arc_step_size@old_stepsize	;volatile
 12950  00B430  C0EB  F061         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 12951  00B434  EC60  F08D         	call	__encoder_next_arc_step_size	;wreg free
 12952  00B438  C060  F0EA         	movff	?__encoder_next_arc_step_size,_os+26	;volatile
 12953  00B43C  C061  F0EB         	movff	?__encoder_next_arc_step_size+1,_os+27	;volatile
 12954  00B440                     l2644:
 12955                           
 12956                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count>0)
 12957  00B440  0100               	movlb	0	; () banked
 12958  00B442  51D5               	movf	(_os+5)& (0+255),w,b	;volatile
 12959  00B444  0A80               	xorlw	128
 12960  00B446  0F7F               	addlw	-129
 12961  00B448  A0D8               	btfss	status,0,c
 12962  00B44A  D01C               	goto	l2646
 12963                           
 12964                           ; BSR set to: 0
 12965                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size += os.arc_step_size;
 12966  00B44C  51EA               	movf	(_os+26)& (0+255),w,b	;volatile
 12967  00B44E  27EC               	addwf	(_os+28)& (0+255),f,b	;volatile
 12968  00B450  51EB               	movf	(_os+27)& (0+255),w,b	;volatile
 12969  00B452  23ED               	addwfc	(_os+29)& (0+255),f,b	;volatile
 12970  00B454  0E00               	movlw	0
 12971  00B456  23EE               	addwfc	(_os+30)& (0+255),f,b	;volatile
 12972  00B458  0E00               	movlw	0
 12973  00B45A  23EF               	addwfc	(_os+31)& (0+255),f,b	;volatile
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;encoder.c: 437: if(os.arc_size>100000)
 12977  00B45C  BFEF               	btfsc	(_os+31)& (0+255),7,b	;volatile
 12978  00B45E  D012               	goto	l2646
 12979  00B460  51EF               	movf	(_os+31)& (0+255),w,b	;volatile
 12980  00B462  E108               	bnz	u22410
 12981  00B464  0EA1               	movlw	161
 12982  00B466  5DEC               	subwf	(_os+28)& (0+255),w,b	;volatile
 12983  00B468  0E86               	movlw	134
 12984  00B46A  59ED               	subwfb	(_os+29)& (0+255),w,b	;volatile
 12985  00B46C  0E01               	movlw	1
 12986  00B46E  59EE               	subwfb	(_os+30)& (0+255),w,b	;volatile
 12987  00B470  A0D8               	btfss	status,0,c
 12988  00B472  D008               	goto	l2646
 12989  00B474                     u22410:
 12990                           
 12991                           ; BSR set to: 0
 12992                           ;encoder.c: 438: os.arc_size = 100000;
 12993  00B474  0EA0               	movlw	160
 12994  00B476  6FEC               	movwf	(_os+28)& (0+255),b	;volatile
 12995  00B478  0E86               	movlw	134
 12996  00B47A  6FED               	movwf	(_os+29)& (0+255),b	;volatile
 12997  00B47C  0E01               	movlw	1
 12998  00B47E  6FEE               	movwf	(_os+30)& (0+255),b	;volatile
 12999  00B480  0E00               	movlw	0
 13000  00B482  6FEF               	movwf	(_os+31)& (0+255),b	;volatile
 13001  00B484                     l2646:
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;encoder.c: 439: };encoder.c: 440: if(os.encoder2Count<0)
 13005                           
 13006                           ; BSR set to: 0
 13007                           
 13008                           ; BSR set to: 0
 13009  00B484  AFD5               	btfss	(_os+5)& (0+255),7,b	;volatile
 13010  00B486  D15D               	goto	l2580
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;encoder.c: 441: {;encoder.c: 442: os.arc_size -= os.arc_step_size;
 13014  00B488  51EA               	movf	(_os+26)& (0+255),w,b	;volatile
 13015  00B48A  6FC4               	movwf	??_encoder_statemachine& (0+255),b
 13016  00B48C  51EB               	movf	(_os+27)& (0+255),w,b	;volatile
 13017  00B48E  6FC5               	movwf	(??_encoder_statemachine+1)& (0+255),b
 13018  00B490  6BC6               	clrf	(??_encoder_statemachine+2)& (0+255),b
 13019  00B492  6BC7               	clrf	(??_encoder_statemachine+3)& (0+255),b
 13020  00B494  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 13021  00B496  5FEC               	subwf	(_os+28)& (0+255),f,b	;volatile
 13022  00B498  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 13023  00B49A  5BED               	subwfb	(_os+29)& (0+255),f,b	;volatile
 13024  00B49C  51C6               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 13025  00B49E  5BEE               	subwfb	(_os+30)& (0+255),f,b	;volatile
 13026  00B4A0  51C7               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 13027  00B4A2  5BEF               	subwfb	(_os+31)& (0+255),f,b	;volatile
 13028                           
 13029                           ;encoder.c: 443: if(os.arc_size<1)
 13030  00B4A4  BFEF               	btfsc	(_os+31)& (0+255),7,b	;volatile
 13031  00B4A6  D007               	goto	u22430
 13032  00B4A8  51EF               	movf	(_os+31)& (0+255),w,b	;volatile
 13033  00B4AA  11EE               	iorwf	(_os+30)& (0+255),w,b	;volatile
 13034  00B4AC  11ED               	iorwf	(_os+29)& (0+255),w,b	;volatile
 13035  00B4AE  E102               	bnz	u22431
 13036  00B4B0  05EC               	decf	(_os+28)& (0+255),w,b	;volatile
 13037  00B4B2  B0D8               	btfsc	status,0,c
 13038  00B4B4                     u22431:
 13039  00B4B4  D146               	goto	l2580
 13040  00B4B6                     u22430:
 13041                           
 13042                           ; BSR set to: 0
 13043                           ;encoder.c: 444: os.arc_size = 1;
 13044  00B4B6  0E01               	movlw	1
 13045  00B4B8  6FEC               	movwf	(_os+28)& (0+255),b	;volatile
 13046  00B4BA  0E00               	movlw	0
 13047  00B4BC  6FED               	movwf	(_os+29)& (0+255),b	;volatile
 13048  00B4BE  0E00               	movlw	0
 13049  00B4C0  6FEE               	movwf	(_os+30)& (0+255),b	;volatile
 13050  00B4C2  0E00               	movlw	0
 13051  00B4C4  6FEF               	movwf	(_os+31)& (0+255),b	;volatile
 13052                           
 13053                           ; BSR set to: 0
 13054                           ;encoder.c: 445: };encoder.c: 446: break;
 13055                           
 13056                           ; BSR set to: 0
 13057  00B4C6  D13D               	goto	l2580
 13058  00B4C8                     
 13059                           ; BSR set to: 0
 13060                           ;encoder.c: 449: if(os.encoder1Count>0)
 13061                           
 13062                           ; BSR set to: 0
 13063  00B4C8  51D3               	movf	(_os+3)& (0+255),w,b	;volatile
 13064  00B4CA  0A80               	xorlw	128
 13065  00B4CC  0F7F               	addlw	-129
 13066  00B4CE  A0D8               	btfss	status,0,c
 13067  00B4D0  D015               	goto	l2652
 13068                           
 13069                           ; BSR set to: 0
 13070                           ;encoder.c: 450: {;encoder.c: 451: if(os.arc_speed<config.maximum_speed_arc)
 13071  00B4D2  0101               	movlb	1	; () banked
 13072  00B4D4  5192               	movf	(_config+15)& (0+255),w,b
 13073  00B4D6  0100               	movlb	0	; () banked
 13074  00B4D8  5DF0               	subwf	(_os+32)& (0+255),w,b	;volatile
 13075  00B4DA  0101               	movlb	1	; () banked
 13076  00B4DC  5193               	movf	(_config+16)& (0+255),w,b
 13077  00B4DE  0100               	movlb	0	; () banked
 13078  00B4E0  59F1               	subwfb	(_os+33)& (0+255),w,b	;volatile
 13079  00B4E2  B0D8               	btfsc	status,0,c
 13080  00B4E4  D002               	goto	l2651
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;encoder.c: 452: ++os.arc_speed;
 13084  00B4E6  4BF0               	infsnz	(_os+32)& (0+255),f,b	;volatile
 13085  00B4E8  2BF1               	incf	(_os+33)& (0+255),f,b	;volatile
 13086  00B4EA                     l2651:
 13087                           
 13088                           ; BSR set to: 0
 13089                           ;encoder.c: 453: if(os.busy)
 13090                           
 13091                           ; BSR set to: 0
 13092  00B4EA  51DE               	movf	(_os+14)& (0+255),w,b	;volatile
 13093  00B4EC  B4D8               	btfsc	status,2,c
 13094  00B4EE  D006               	goto	l2652
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;encoder.c: 454: motor_change_speed(os.arc_speed);
 13098  00B4F0  C0F0  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 13099  00B4F4  C0F1  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 13100  00B4F8  EC76  F096         	call	_motor_change_speed	;wreg free
 13101  00B4FC                     l2652:
 13102                           
 13103                           ;encoder.c: 455: };encoder.c: 456: if(os.encoder1Count<0)
 13104  00B4FC  0100               	movlb	0	; () banked
 13105  00B4FE  AFD3               	btfss	(_os+3)& (0+255),7,b	;volatile
 13106  00B500  D04B               	goto	l2656
 13107                           
 13108                           ; BSR set to: 0
 13109                           ;encoder.c: 457: {;encoder.c: 458: if(os.arc_speed>config.minimum_speed)
 13110  00B502  51F0               	movf	(_os+32)& (0+255),w,b	;volatile
 13111  00B504  0101               	movlb	1	; () banked
 13112  00B506  5D8C               	subwf	(_config+9)& (0+255),w,b
 13113  00B508  0100               	movlb	0	; () banked
 13114  00B50A  51F1               	movf	(_os+33)& (0+255),w,b	;volatile
 13115  00B50C  0101               	movlb	1	; () banked
 13116  00B50E  598D               	subwfb	(_config+10)& (0+255),w,b
 13117  00B510  B0D8               	btfsc	status,0,c
 13118  00B512  D004               	goto	l2654
 13119                           
 13120                           ; BSR set to: 1
 13121                           ;encoder.c: 459: --os.arc_speed;
 13122  00B514  0100               	movlb	0	; () banked
 13123  00B516  07F0               	decf	(_os+32)& (0+255),f,b	;volatile
 13124  00B518  A0D8               	btfss	status,0,c
 13125  00B51A  07F1               	decf	(_os+33)& (0+255),f,b	;volatile
 13126  00B51C                     l2654:
 13127                           
 13128                           ;encoder.c: 460: if(os.busy)
 13129                           
 13130                           ; BSR set to: 0
 13131  00B51C  0100               	movlb	0	; () banked
 13132  00B51E  51DE               	movf	(_os+14)& (0+255),w,b	;volatile
 13133  00B520  B4D8               	btfsc	status,2,c
 13134  00B522  D03A               	goto	l2656
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;encoder.c: 461: motor_change_speed(os.arc_speed);
 13138  00B524  C0F0  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 13139  00B528  C0F1  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 13140  00B52C  EC76  F096         	call	_motor_change_speed	;wreg free
 13141                           
 13142                           ;encoder.c: 462: };encoder.c: 463: switch(os.displayState)
 13143  00B530  D033               	goto	l2656
 13144  00B532                     
 13145                           ;encoder.c: 466: if(os.button2==1)
 13146  00B532  0100               	movlb	0	; () banked
 13147  00B534  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 13148  00B536  A4D8               	btfss	status,2,c
 13149  00B538  D006               	goto	l2658
 13150                           
 13151                           ; BSR set to: 0
 13152                           ;encoder.c: 467: {;encoder.c: 468: motor_arc_move(MOTOR_DIRECTION_CCW);
 13153  00B53A  0EFF               	movlw	255
 13154  00B53C  ECA3  F081         	call	_motor_arc_move
 13155                           
 13156                           ;encoder.c: 469: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 13157  00B540  0E62               	movlw	98
 13158  00B542  0100               	movlb	0	; () banked
 13159  00B544  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 13160  00B546                     l2658:
 13161                           
 13162                           ; BSR set to: 0
 13163                           ;encoder.c: 470: };encoder.c: 471: if(os.encoder2Count>0)
 13164                           
 13165                           ; BSR set to: 0
 13166  00B546  51D5               	movf	(_os+5)& (0+255),w,b	;volatile
 13167  00B548  0A80               	xorlw	128
 13168  00B54A  0F7F               	addlw	-129
 13169  00B54C  A0D8               	btfss	status,0,c
 13170  00B54E  D0F9               	goto	l2580
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;encoder.c: 472: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 13174  00B550  0E62               	movlw	98
 13175  00B552  D0C2               	goto	L17
 13176  00B554                     
 13177                           ; BSR set to: 0
 13178                           ;encoder.c: 475: if(os.button2==1)
 13179                           
 13180                           ; BSR set to: 0
 13181  00B554  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 13182  00B556  A4D8               	btfss	status,2,c
 13183  00B558  D007               	goto	l2662
 13184                           
 13185                           ; BSR set to: 0
 13186                           ;encoder.c: 476: {;encoder.c: 477: if(os.busy)
 13187  00B55A  51DE               	movf	(_os+14)& (0+255),w,b	;volatile
 13188  00B55C  A4D8               	btfss	status,2,c
 13189                           
 13190                           ; BSR set to: 0
 13191                           ;encoder.c: 478: motor_stop();
 13192  00B55E  EC75  F092         	call	_motor_stop	;wreg free
 13193                           
 13194                           ;encoder.c: 479: os.displayState = DISPLAY_STATE_MAIN_ARC;
 13195  00B562  0E03               	movlw	3
 13196  00B564  0100               	movlb	0	; () banked
 13197  00B566  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 13198  00B568                     l2662:
 13199                           
 13200                           ; BSR set to: 0
 13201                           ;encoder.c: 480: };encoder.c: 481: if(os.encoder2Count>0)
 13202                           
 13203                           ; BSR set to: 0
 13204  00B568  51D5               	movf	(_os+5)& (0+255),w,b	;volatile
 13205  00B56A  0A80               	xorlw	128
 13206  00B56C  0F7F               	addlw	-129
 13207  00B56E  A0D8               	btfss	status,0,c
 13208  00B570  D002               	goto	l2664
 13209                           
 13210                           ; BSR set to: 0
 13211                           ;encoder.c: 482: os.displayState = DISPLAY_STATE_ARC2_CW;
 13212  00B572  0E63               	movlw	99
 13213  00B574  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 13214  00B576                     l2664:
 13215                           
 13216                           ; BSR set to: 0
 13217                           ;encoder.c: 483: if(os.encoder2Count<0)
 13218                           
 13219                           ; BSR set to: 0
 13220  00B576  AFD5               	btfss	(_os+5)& (0+255),7,b	;volatile
 13221  00B578  D0E4               	goto	l2580
 13222                           
 13223                           ; BSR set to: 0
 13224                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CCW;
 13225  00B57A  0E61               	movlw	97
 13226  00B57C  D0AD               	goto	L17
 13227  00B57E                     
 13228                           ; BSR set to: 0
 13229                           ;encoder.c: 487: if(os.button2==1)
 13230                           
 13231                           ; BSR set to: 0
 13232  00B57E  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 13233  00B580  A4D8               	btfss	status,2,c
 13234  00B582  D006               	goto	l2667
 13235                           
 13236                           ; BSR set to: 0
 13237                           ;encoder.c: 488: {;encoder.c: 489: motor_arc_move(MOTOR_DIRECTION_CW);
 13238  00B584  0E01               	movlw	1
 13239  00B586  ECA3  F081         	call	_motor_arc_move
 13240                           
 13241                           ;encoder.c: 490: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 13242  00B58A  0E62               	movlw	98
 13243  00B58C  0100               	movlb	0	; () banked
 13244  00B58E  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 13245  00B590                     l2667:
 13246                           
 13247                           ; BSR set to: 0
 13248                           ;encoder.c: 491: };encoder.c: 492: if(os.encoder2Count<0)
 13249                           
 13250                           ; BSR set to: 0
 13251  00B590  AFD5               	btfss	(_os+5)& (0+255),7,b	;volatile
 13252  00B592  D0D7               	goto	l2580
 13253                           
 13254                           ; BSR set to: 0
 13255                           ;encoder.c: 493: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 13256  00B594  0E62               	movlw	98
 13257  00B596  D0A0               	goto	L17
 13258  00B598                     l2656:
 13259                           
 13260                           ; BSR set to: 0
 13261  00B598  0100               	movlb	0	; () banked
 13262  00B59A  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 13263                           
 13264                           ; Switch size 1, requested type "space"
 13265                           ; Number of cases is 3, Range of values is 97 to 99
 13266                           ; switch strategies available:
 13267                           ; Name         Instructions Cycles
 13268                           ; simple_byte           10     6 (average)
 13269                           ;	Chosen strategy is simple_byte
 13270  00B59C  0A61               	xorlw	97	; case 97
 13271  00B59E  B4D8               	btfsc	status,2,c
 13272  00B5A0  D7C8               	goto	l2657
 13273  00B5A2  0A03               	xorlw	3	; case 98
 13274  00B5A4  B4D8               	btfsc	status,2,c
 13275  00B5A6  D7D6               	goto	l2661
 13276  00B5A8  0A01               	xorlw	1	; case 99
 13277  00B5AA  B4D8               	btfsc	status,2,c
 13278  00B5AC  D7E8               	goto	l2666
 13279                           
 13280                           ; BSR set to: 0
 13281                           ;encoder.c: 496: break;
 13282  00B5AE  D0C9               	goto	l2580
 13283  00B5B0                     
 13284                           ; BSR set to: 0
 13285                           ;encoder.c: 499: if(os.button2==1)
 13286                           
 13287                           ; BSR set to: 0
 13288  00B5B0  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 13289  00B5B2  A4D8               	btfss	status,2,c
 13290  00B5B4  D011               	goto	l2670
 13291                           
 13292                           ; BSR set to: 0
 13293                           ;encoder.c: 500: {;encoder.c: 502: motor_go_to_steps_position(0);
 13294  00B5B6  0E00               	movlw	0
 13295  00B5B8  6F9E               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 13296  00B5BA  0E00               	movlw	0
 13297  00B5BC  6F9F               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 13298  00B5BE  0E00               	movlw	0
 13299  00B5C0  6FA0               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 13300  00B5C2  0E00               	movlw	0
 13301  00B5C4  6FA1               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 13302  00B5C6  ECB8  F063         	call	_motor_go_to_steps_position	;wreg free
 13303                           
 13304                           ;encoder.c: 504: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 13305  00B5CA  0E05               	movlw	5
 13306  00B5CC  0100               	movlb	0	; () banked
 13307  00B5CE  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;encoder.c: 505: os.divide_position = 0;
 13311  00B5D0  0E00               	movlw	0
 13312  00B5D2  6FE7               	movwf	(_os+23)& (0+255),b	;volatile
 13313  00B5D4  0E00               	movlw	0
 13314  00B5D6  6FE6               	movwf	(_os+22)& (0+255),b	;volatile
 13315  00B5D8                     l2670:
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;encoder.c: 506: };encoder.c: 507: if(os.button1==1)
 13319                           
 13320                           ; BSR set to: 0
 13321  00B5D8  05D4               	decf	(_os+4)& (0+255),w,b	;volatile
 13322  00B5DA  A4D8               	btfss	status,2,c
 13323  00B5DC  D0B2               	goto	l2580
 13324                           
 13325                           ; BSR set to: 0
 13326                           ;encoder.c: 508: {;encoder.c: 509: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 13327  00B5DE  0E05               	movlw	5
 13328  00B5E0  D07B               	goto	L17
 13329  00B5E2                     
 13330                           ; BSR set to: 0
 13331                           ;encoder.c: 514: if(os.encoder1Count>0)
 13332                           
 13333                           ; BSR set to: 0
 13334  00B5E2  51D3               	movf	(_os+3)& (0+255),w,b	;volatile
 13335  00B5E4  0A80               	xorlw	128
 13336  00B5E6  0F7F               	addlw	-129
 13337  00B5E8  A0D8               	btfss	status,0,c
 13338  00B5EA  D012               	goto	l2674
 13339                           
 13340                           ; BSR set to: 0
 13341                           ;encoder.c: 515: {;encoder.c: 516: if(os.manual_speed<config.maximum_speed_manual)
 13342  00B5EC  0101               	movlb	1	; () banked
 13343  00B5EE  5196               	movf	(_config+19)& (0+255),w,b
 13344  00B5F0  0100               	movlb	0	; () banked
 13345  00B5F2  5DF3               	subwf	(_os+35)& (0+255),w,b	;volatile
 13346  00B5F4  0101               	movlb	1	; () banked
 13347  00B5F6  5197               	movf	(_config+20)& (0+255),w,b
 13348  00B5F8  0100               	movlb	0	; () banked
 13349  00B5FA  59F4               	subwfb	(_os+36)& (0+255),w,b	;volatile
 13350  00B5FC  B0D8               	btfsc	status,0,c
 13351  00B5FE  D008               	goto	l2674
 13352                           
 13353                           ; BSR set to: 0
 13354                           ;encoder.c: 517: {;encoder.c: 518: ++os.manual_speed;
 13355  00B600  4BF3               	infsnz	(_os+35)& (0+255),f,b	;volatile
 13356  00B602  2BF4               	incf	(_os+36)& (0+255),f,b	;volatile
 13357                           
 13358                           ; BSR set to: 0
 13359                           ;encoder.c: 519: motor_change_speed(os.manual_speed);
 13360  00B604  C0F3  F060         	movff	_os+35,motor_change_speed@new_speed	;volatile
 13361  00B608  C0F4  F061         	movff	_os+36,motor_change_speed@new_speed+1	;volatile
 13362  00B60C  EC76  F096         	call	_motor_change_speed	;wreg free
 13363  00B610                     l2674:
 13364                           
 13365                           ;encoder.c: 520: };encoder.c: 522: };encoder.c: 523: if(os.encoder1Count<0)
 13366  00B610  0100               	movlb	0	; () banked
 13367  00B612  AFD3               	btfss	(_os+3)& (0+255),7,b	;volatile
 13368  00B614  D063               	goto	l2677
 13369                           
 13370                           ; BSR set to: 0
 13371                           ;encoder.c: 524: {;encoder.c: 525: if(os.manual_speed>config.minimum_speed)
 13372  00B616  51F3               	movf	(_os+35)& (0+255),w,b	;volatile
 13373  00B618  0101               	movlb	1	; () banked
 13374  00B61A  5D8C               	subwf	(_config+9)& (0+255),w,b
 13375  00B61C  0100               	movlb	0	; () banked
 13376  00B61E  51F4               	movf	(_os+36)& (0+255),w,b	;volatile
 13377  00B620  0101               	movlb	1	; () banked
 13378  00B622  598D               	subwfb	(_config+10)& (0+255),w,b
 13379  00B624  B0D8               	btfsc	status,0,c
 13380  00B626  D05A               	goto	l2677
 13381                           
 13382                           ; BSR set to: 1
 13383                           ;encoder.c: 526: {;encoder.c: 527: --os.manual_speed;
 13384  00B628  0100               	movlb	0	; () banked
 13385  00B62A  07F3               	decf	(_os+35)& (0+255),f,b	;volatile
 13386  00B62C  A0D8               	btfss	status,0,c
 13387  00B62E  07F4               	decf	(_os+36)& (0+255),f,b	;volatile
 13388                           
 13389                           ; BSR set to: 0
 13390                           ;encoder.c: 528: motor_change_speed(os.manual_speed);
 13391  00B630  C0F3  F060         	movff	_os+35,motor_change_speed@new_speed	;volatile
 13392  00B634  C0F4  F061         	movff	_os+36,motor_change_speed@new_speed+1	;volatile
 13393  00B638  EC76  F096         	call	_motor_change_speed	;wreg free
 13394                           
 13395                           ;encoder.c: 529: };encoder.c: 530: };encoder.c: 531: switch(os.displayState)
 13396  00B63C  D04F               	goto	l2677
 13397  00B63E                     
 13398                           ;encoder.c: 534: if(os.button2==1)
 13399  00B63E  0100               	movlb	0	; () banked
 13400  00B640  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 13401  00B642  A4D8               	btfss	status,2,c
 13402  00B644  D012               	goto	l2679
 13403                           
 13404                           ; BSR set to: 0
 13405                           ;encoder.c: 535: {;encoder.c: 536: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.man
      +                          ual_speed);
 13406  00B646  0E00               	movlw	0
 13407  00B648  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 13408  00B64A  0E00               	movlw	0
 13409  00B64C  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 13410  00B64E  0E00               	movlw	0
 13411  00B650  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 13412  00B652  0E00               	movlw	0
 13413  00B654  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 13414  00B656  C0F3  F09B         	movff	_os+35,motor_schedule_command@speed	;volatile
 13415  00B65A  C0F4  F09C         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 13416  00B65E  0EFF               	movlw	255
 13417  00B660  ECFC  F088         	call	_motor_schedule_command
 13418                           
 13419                           ;encoder.c: 537: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 13420  00B664  0E84               	movlw	132
 13421  00B666  0100               	movlb	0	; () banked
 13422  00B668  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 13423  00B66A                     l2679:
 13424                           
 13425                           ; BSR set to: 0
 13426                           ;encoder.c: 538: };encoder.c: 539: if(os.encoder2Count>0)
 13427                           
 13428                           ; BSR set to: 0
 13429  00B66A  51D5               	movf	(_os+5)& (0+255),w,b	;volatile
 13430  00B66C  0A80               	xorlw	128
 13431  00B66E  0F7F               	addlw	-129
 13432  00B670  A0D8               	btfss	status,0,c
 13433  00B672  D067               	goto	l2580
 13434                           
 13435                           ; BSR set to: 0
 13436                           ;encoder.c: 540: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 13437  00B674  0E82               	movlw	130
 13438  00B676  D030               	goto	L17
 13439  00B678                     
 13440                           ; BSR set to: 0
 13441                           ;encoder.c: 543: if(os.button2==1)
 13442                           
 13443                           ; BSR set to: 0
 13444  00B678  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 13445  00B67A  A4D8               	btfss	status,2,c
 13446  00B67C  D002               	goto	l2683
 13447                           
 13448                           ; BSR set to: 0
 13449                           ;encoder.c: 544: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 13450  00B67E  0E04               	movlw	4
 13451  00B680  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 13452  00B682                     l2683:
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;encoder.c: 545: if(os.encoder2Count>0)
 13456                           
 13457                           ; BSR set to: 0
 13458  00B682  51D5               	movf	(_os+5)& (0+255),w,b	;volatile
 13459  00B684  0A80               	xorlw	128
 13460  00B686  0F7F               	addlw	-129
 13461  00B688  A0D8               	btfss	status,0,c
 13462  00B68A  D002               	goto	l2684
 13463                           
 13464                           ; BSR set to: 0
 13465                           ;encoder.c: 546: os.displayState = DISPLAY_STATE_MANUAL_CW;
 13466  00B68C  0E83               	movlw	131
 13467  00B68E  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 13468  00B690                     l2684:
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;encoder.c: 547: if(os.encoder2Count<0)
 13472                           
 13473                           ; BSR set to: 0
 13474  00B690  AFD5               	btfss	(_os+5)& (0+255),7,b	;volatile
 13475  00B692  D057               	goto	l2580
 13476                           
 13477                           ; BSR set to: 0
 13478                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 13479  00B694  0E81               	movlw	129
 13480  00B696  D020               	goto	L17
 13481  00B698                     
 13482                           ; BSR set to: 0
 13483                           ;encoder.c: 551: if(os.button2==1)
 13484                           
 13485                           ; BSR set to: 0
 13486  00B698  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 13487  00B69A  A4D8               	btfss	status,2,c
 13488  00B69C  D011               	goto	l2687
 13489                           
 13490                           ; BSR set to: 0
 13491                           ;encoder.c: 552: {;encoder.c: 553: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 13492  00B69E  0E84               	movlw	132
 13493  00B6A0  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 13494                           
 13495                           ; BSR set to: 0
 13496                           ;encoder.c: 554: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed);
 13497  00B6A2  0E00               	movlw	0
 13498  00B6A4  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 13499  00B6A6  0E00               	movlw	0
 13500  00B6A8  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 13501  00B6AA  0E00               	movlw	0
 13502  00B6AC  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 13503  00B6AE  0E00               	movlw	0
 13504  00B6B0  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 13505  00B6B2  C0F3  F09B         	movff	_os+35,motor_schedule_command@speed	;volatile
 13506  00B6B6  C0F4  F09C         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 13507  00B6BA  0E01               	movlw	1
 13508  00B6BC  ECFC  F088         	call	_motor_schedule_command
 13509  00B6C0                     l2687:
 13510                           
 13511                           ;encoder.c: 556: };encoder.c: 557: if(os.encoder2Count<0)
 13512  00B6C0  0100               	movlb	0	; () banked
 13513  00B6C2  AFD5               	btfss	(_os+5)& (0+255),7,b	;volatile
 13514  00B6C4  D03E               	goto	l2580
 13515                           
 13516                           ; BSR set to: 0
 13517                           ;encoder.c: 558: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 13518  00B6C6  0E82               	movlw	130
 13519  00B6C8  D007               	goto	L17
 13520  00B6CA                     
 13521                           ; BSR set to: 0
 13522                           ;encoder.c: 561: if(os.button2==1)
 13523                           
 13524                           ; BSR set to: 0
 13525  00B6CA  05D6               	decf	(_os+6)& (0+255),w,b	;volatile
 13526  00B6CC  A4D8               	btfss	status,2,c
 13527  00B6CE  D039               	goto	l2580
 13528                           
 13529                           ; BSR set to: 0
 13530                           ;encoder.c: 562: {;encoder.c: 563: motor_stop();
 13531  00B6D0  EC75  F092         	call	_motor_stop	;wreg free
 13532                           
 13533                           ;encoder.c: 564: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 13534  00B6D4  0E82               	movlw	130
 13535  00B6D6  0100               	movlb	0	; () banked
 13536  00B6D8                     L17:
 13537  00B6D8  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 13538                           
 13539                           ; BSR set to: 0
 13540                           ;encoder.c: 567: }
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;encoder.c: 565: };encoder.c: 566: break;
 13544  00B6DA  D033               	goto	l2580
 13545  00B6DC                     l2677:
 13546                           
 13547                           ; BSR set to: 0
 13548  00B6DC  0100               	movlb	0	; () banked
 13549  00B6DE  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 13550                           
 13551                           ; Switch size 1, requested type "space"
 13552                           ; Number of cases is 4, Range of values is 129 to 132
 13553                           ; switch strategies available:
 13554                           ; Name         Instructions Cycles
 13555                           ; simple_byte           13     7 (average)
 13556                           ;	Chosen strategy is simple_byte
 13557  00B6E0  0A81               	xorlw	129	; case 129
 13558  00B6E2  B4D8               	btfsc	status,2,c
 13559  00B6E4  D7AC               	goto	l2678
 13560  00B6E6  0A03               	xorlw	3	; case 130
 13561  00B6E8  B4D8               	btfsc	status,2,c
 13562  00B6EA  D7C6               	goto	l2682
 13563  00B6EC  0A01               	xorlw	1	; case 131
 13564  00B6EE  B4D8               	btfsc	status,2,c
 13565  00B6F0  D7D3               	goto	l2686
 13566  00B6F2  0A07               	xorlw	7	; case 132
 13567  00B6F4  B4D8               	btfsc	status,2,c
 13568  00B6F6  D7E9               	goto	l2689
 13569                           
 13570                           ; BSR set to: 0
 13571                           ;encoder.c: 569: }
 13572                           
 13573                           ; BSR set to: 0
 13574                           ;encoder.c: 568: break;
 13575  00B6F8  D024               	goto	l2580
 13576  00B6FA                     l2545:
 13577                           
 13578                           ; BSR set to: 0
 13579                           
 13580                           ; BSR set to: 0
 13581  00B6FA  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 13582  00B6FC  0BF0               	andlw	240
 13583  00B6FE  6FC4               	movwf	??_encoder_statemachine& (0+255),b
 13584  00B700  6BC5               	clrf	(??_encoder_statemachine+1)& (0+255),b
 13585                           
 13586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13587                           ; Switch size 1, requested type "space"
 13588                           ; Number of cases is 1, Range of values is 0 to 0
 13589                           ; switch strategies available:
 13590                           ; Name         Instructions Cycles
 13591                           ; simple_byte            4     3 (average)
 13592                           ;	Chosen strategy is simple_byte
 13593  00B702  51C5               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 13594  00B704  0A00               	xorlw	0	; case 0
 13595  00B706  A4D8               	btfss	status,2,c
 13596  00B708  D01C               	goto	l2580
 13597                           
 13598                           ; BSR set to: 0
 13599                           ; Switch size 1, requested type "space"
 13600                           ; Number of cases is 9, Range of values is 0 to 128
 13601                           ; switch strategies available:
 13602                           ; Name         Instructions Cycles
 13603                           ; simple_byte           28    15 (average)
 13604                           ;	Chosen strategy is simple_byte
 13605  00B70A  51C4               	movf	??_encoder_statemachine& (0+255),w,b
 13606  00B70C  0A00               	xorlw	0	; case 0
 13607  00B70E  B4D8               	btfsc	status,2,c
 13608  00B710  D4BF               	goto	l2547
 13609  00B712  0A10               	xorlw	16	; case 16
 13610  00B714  B4D8               	btfsc	status,2,c
 13611  00B716  D4FB               	goto	l2582
 13612  00B718  0A30               	xorlw	48	; case 32
 13613  00B71A  B4D8               	btfsc	status,2,c
 13614  00B71C  D5E6               	goto	l2598
 13615  00B71E  0A10               	xorlw	16	; case 48
 13616  00B720  B4D8               	btfsc	status,2,c
 13617  00B722  D610               	goto	l2613
 13618  00B724  0A70               	xorlw	112	; case 64
 13619  00B726  B4D8               	btfsc	status,2,c
 13620  00B728  D63E               	goto	l2628
 13621  00B72A  0A10               	xorlw	16	; case 80
 13622  00B72C  B4D8               	btfsc	status,2,c
 13623  00B72E  D673               	goto	l2634
 13624  00B730  0A30               	xorlw	48	; case 96
 13625  00B732  B4D8               	btfsc	status,2,c
 13626  00B734  D6C9               	goto	l2649
 13627  00B736  0A10               	xorlw	16	; case 112
 13628  00B738  B4D8               	btfsc	status,2,c
 13629  00B73A  D73A               	goto	l2669
 13630  00B73C  0AF0               	xorlw	240	; case 128
 13631  00B73E  B4D8               	btfsc	status,2,c
 13632  00B740  D750               	goto	l2672
 13633  00B742                     l2580:
 13634                           
 13635                           ;encoder.c: 572: os.encoder1Count = 0;
 13636                           
 13637                           ; BSR set to: 0
 13638  00B742  0E00               	movlw	0
 13639  00B744  0100               	movlb	0	; () banked
 13640  00B746  6FD3               	movwf	(_os+3)& (0+255),b	;volatile
 13641                           
 13642                           ;encoder.c: 573: os.encoder2Count = 0;
 13643  00B748  0E00               	movlw	0
 13644  00B74A  6FD5               	movwf	(_os+5)& (0+255),b	;volatile
 13645                           
 13646                           ;encoder.c: 574: os.button1 = 0;
 13647  00B74C  0E00               	movlw	0
 13648  00B74E  6FD4               	movwf	(_os+4)& (0+255),b	;volatile
 13649                           
 13650                           ;encoder.c: 575: os.button2 = 0;
 13651  00B750  0E00               	movlw	0
 13652  00B752  6FD6               	movwf	(_os+6)& (0+255),b	;volatile
 13653                           
 13654                           ; BSR set to: 0
 13655  00B754  0012               	return		;funcret
 13656  00B756                     __end_of_encoder_statemachine:
 13657                           	opt stack 0
 13658                           tblptru	equ	0xFF8
 13659                           tblptrh	equ	0xFF7
 13660                           tblptrl	equ	0xFF6
 13661                           tablat	equ	0xFF5
 13662                           prodh	equ	0xFF4
 13663                           prodl	equ	0xFF3
 13664                           intcon	equ	0xFF2
 13665                           postinc0	equ	0xFEE
 13666                           wreg	equ	0xFE8
 13667                           postdec1	equ	0xFE5
 13668                           plusw1	equ	0xFE3
 13669                           fsr1h	equ	0xFE2
 13670                           fsr1l	equ	0xFE1
 13671                           indf2	equ	0xFDF
 13672                           postinc2	equ	0xFDE
 13673                           postdec2	equ	0xFDD
 13674                           plusw2	equ	0xFDB
 13675                           fsr2h	equ	0xFDA
 13676                           fsr2l	equ	0xFD9
 13677                           status	equ	0xFD8
 13678                           
 13679 ;; *************** function _motor_stop *****************
 13680 ;; Defined at:
 13681 ;;		line 433 in file "motor.c"
 13682 ;; Parameters:    Size  Location     Type
 13683 ;;		None
 13684 ;; Auto vars:     Size  Location     Type
 13685 ;;		None
 13686 ;; Return value:  Size  Location     Type
 13687 ;;                  1    wreg      void 
 13688 ;; Registers used:
 13689 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 13690 ;; Tracked objects:
 13691 ;;		On entry : 0/0
 13692 ;;		On exit  : 0/0
 13693 ;;		Unchanged: 0/0
 13694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13697 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13698 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13699 ;;Total ram usage:        2 bytes
 13700 ;; Hardware stack levels used:    1
 13701 ;; Hardware stack levels required when called:   10
 13702 ;; This function calls:
 13703 ;;		Nothing
 13704 ;; This function is called by:
 13705 ;;		_encoder_statemachine
 13706 ;; This function uses a non-reentrant model
 13707 ;;
 13708                           
 13709                           	psect	text41
 13710  0124EA                     __ptext41:
 13711                           	opt stack 0
 13712  0124EA                     _motor_stop:
 13713                           	opt stack 19
 13714                           
 13715                           ;motor.c: 435: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;incstack = 0
 13719  0124EA  90D8               	bcf	status,0,c
 13720  0124EC  0100               	movlb	0	; () banked
 13721  0124EE  35CA               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 13722  0124F0  6EF6               	movwf	tblptrl,c
 13723  0124F2  35CB               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 13724  0124F4  6EF7               	movwf	tblptrh,c
 13725  0124F6  0E61               	movlw	low _motor_steps_lookup
 13726  0124F8  26F6               	addwf	tblptrl,f,c
 13727  0124FA  0E94               	movlw	high _motor_steps_lookup
 13728  0124FC  22F7               	addwfc	tblptrh,f,c
 13729  0124FE                     	if	1	;There are 3 active tblptr bytes
 13730  0124FE  6AF8               	clrf	tblptru,c
 13731  012500  0E00               	movlw	low (__mediumconst shr (0+16))
 13732  012502  22F8               	addwfc	tblptru,f,c
 13733  012504                     	endif
 13734  012504  0009               	tblrd		*+
 13735  012506  CFF5 F060          	movff	tablat,??_motor_stop
 13736  01250A  0009               	tblrd		*+
 13737  01250C  CFF5 F061          	movff	tablat,??_motor_stop+1
 13738  012510  5160               	movf	??_motor_stop& (0+255),w,b
 13739  012512  240D               	addwf	_motor_current_stepcount,w,c	;volatile
 13740  012514  0101               	movlb	1	; () banked
 13741  012516  6F4B               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 13742  012518  0100               	movlb	0	; () banked
 13743  01251A  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 13744  01251C  200E               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 13745  01251E  0101               	movlb	1	; () banked
 13746  012520  6F4C               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 13747  012522  0E00               	movlw	0
 13748  012524  200F               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 13749  012526  6F4D               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 13750  012528  0E00               	movlw	0
 13751  01252A  2010               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 13752  01252C  6F4E               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 13753                           
 13754                           ; BSR set to: 1
 13755  01252E  0012               	return		;funcret
 13756  012530                     __end_of_motor_stop:
 13757                           	opt stack 0
 13758                           tblptru	equ	0xFF8
 13759                           tblptrh	equ	0xFF7
 13760                           tblptrl	equ	0xFF6
 13761                           tablat	equ	0xFF5
 13762                           prodh	equ	0xFF4
 13763                           prodl	equ	0xFF3
 13764                           intcon	equ	0xFF2
 13765                           postinc0	equ	0xFEE
 13766                           wreg	equ	0xFE8
 13767                           postdec1	equ	0xFE5
 13768                           plusw1	equ	0xFE3
 13769                           fsr1h	equ	0xFE2
 13770                           fsr1l	equ	0xFE1
 13771                           indf2	equ	0xFDF
 13772                           postinc2	equ	0xFDE
 13773                           postdec2	equ	0xFDD
 13774                           plusw2	equ	0xFDB
 13775                           fsr2h	equ	0xFDA
 13776                           fsr2l	equ	0xFD9
 13777                           status	equ	0xFD8
 13778                           
 13779 ;; *************** function _motor_nonzero_steps_from_degrees *****************
 13780 ;; Defined at:
 13781 ;;		line 41 in file "motor.c"
 13782 ;; Parameters:    Size  Location     Type
 13783 ;;  degrees         2   47[BANK0 ] unsigned int 
 13784 ;; Auto vars:     Size  Location     Type
 13785 ;;  steps           4   51[BANK0 ] unsigned long 
 13786 ;; Return value:  Size  Location     Type
 13787 ;;                  4   47[BANK0 ] unsigned long 
 13788 ;; Registers used:
 13789 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13790 ;; Tracked objects:
 13791 ;;		On entry : 0/0
 13792 ;;		On exit  : 0/0
 13793 ;;		Unchanged: 0/0
 13794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13795 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13796 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13798 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13799 ;;Total ram usage:        8 bytes
 13800 ;; Hardware stack levels used:    1
 13801 ;; Hardware stack levels required when called:   12
 13802 ;; This function calls:
 13803 ;;		_motor_steps_from_degrees
 13804 ;; This function is called by:
 13805 ;;		_encoder_statemachine
 13806 ;; This function uses a non-reentrant model
 13807 ;;
 13808                           
 13809                           	psect	text42
 13810  012454                     __ptext42:
 13811                           	opt stack 0
 13812  012454                     _motor_nonzero_steps_from_degrees:
 13813                           	opt stack 17
 13814                           
 13815                           ;motor.c: 43: uint32_t steps;;motor.c: 44: steps = motor_steps_from_degrees(degrees);
 13816                           
 13817                           ; BSR set to: 1
 13818                           ;incstack = 0
 13819  012454  C08F  F087         	movff	motor_nonzero_steps_from_degrees@degrees,motor_steps_from_degrees@degrees
 13820  012458  C090  F088         	movff	motor_nonzero_steps_from_degrees@degrees+1,motor_steps_from_degrees@degrees+1
 13821  01245C  EC6A  F085         	call	_motor_steps_from_degrees	;wreg free
 13822  012460  C087  F093         	movff	?_motor_steps_from_degrees,motor_nonzero_steps_from_degrees@steps
 13823  012464  C088  F094         	movff	?_motor_steps_from_degrees+1,motor_nonzero_steps_from_degrees@steps+1
 13824  012468  C089  F095         	movff	?_motor_steps_from_degrees+2,motor_nonzero_steps_from_degrees@steps+2
 13825  01246C  C08A  F096         	movff	?_motor_steps_from_degrees+3,motor_nonzero_steps_from_degrees@steps+3
 13826                           
 13827                           ;motor.c: 45: if(steps==0)
 13828  012470  0100               	movlb	0	; () banked
 13829  012472  5193               	movf	motor_nonzero_steps_from_degrees@steps& (0+255),w,b
 13830  012474  1194               	iorwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),w,b
 13831  012476  1195               	iorwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),w,b
 13832  012478  1196               	iorwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),w,b
 13833  01247A  A4D8               	btfss	status,2,c
 13834  01247C  D008               	goto	l2326
 13835                           
 13836                           ; BSR set to: 0
 13837                           ;motor.c: 46: steps = 1;
 13838  01247E  0E01               	movlw	1
 13839  012480  6F93               	movwf	motor_nonzero_steps_from_degrees@steps& (0+255),b
 13840  012482  0E00               	movlw	0
 13841  012484  6F94               	movwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),b
 13842  012486  0E00               	movlw	0
 13843  012488  6F95               	movwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),b
 13844  01248A  0E00               	movlw	0
 13845  01248C  6F96               	movwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),b
 13846  01248E                     l2326:
 13847                           
 13848                           ; BSR set to: 0
 13849                           ;motor.c: 47: return steps;
 13850                           
 13851                           ; BSR set to: 0
 13852  01248E  C093  F08F         	movff	motor_nonzero_steps_from_degrees@steps,?_motor_nonzero_steps_from_degrees
 13853  012492  C094  F090         	movff	motor_nonzero_steps_from_degrees@steps+1,?_motor_nonzero_steps_from_degrees+1
 13854  012496  C095  F091         	movff	motor_nonzero_steps_from_degrees@steps+2,?_motor_nonzero_steps_from_degrees+2
 13855  01249A  C096  F092         	movff	motor_nonzero_steps_from_degrees@steps+3,?_motor_nonzero_steps_from_degrees+3
 13856  01249E  0012               	return	
 13857  0124A0                     __end_of_motor_nonzero_steps_from_degrees:
 13858                           	opt stack 0
 13859                           tblptru	equ	0xFF8
 13860                           tblptrh	equ	0xFF7
 13861                           tblptrl	equ	0xFF6
 13862                           tablat	equ	0xFF5
 13863                           prodh	equ	0xFF4
 13864                           prodl	equ	0xFF3
 13865                           intcon	equ	0xFF2
 13866                           postinc0	equ	0xFEE
 13867                           wreg	equ	0xFE8
 13868                           postdec1	equ	0xFE5
 13869                           plusw1	equ	0xFE3
 13870                           fsr1h	equ	0xFE2
 13871                           fsr1l	equ	0xFE1
 13872                           indf2	equ	0xFDF
 13873                           postinc2	equ	0xFDE
 13874                           postdec2	equ	0xFDD
 13875                           plusw2	equ	0xFDB
 13876                           fsr2h	equ	0xFDA
 13877                           fsr2l	equ	0xFD9
 13878                           status	equ	0xFD8
 13879                           
 13880 ;; *************** function _motor_steps_from_degrees *****************
 13881 ;; Defined at:
 13882 ;;		line 30 in file "motor.c"
 13883 ;; Parameters:    Size  Location     Type
 13884 ;;  degrees         2   39[BANK0 ] unsigned int 
 13885 ;; Auto vars:     Size  Location     Type
 13886 ;;  steps           4   43[BANK0 ] float 
 13887 ;; Return value:  Size  Location     Type
 13888 ;;                  4   39[BANK0 ] unsigned long 
 13889 ;; Registers used:
 13890 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13891 ;; Tracked objects:
 13892 ;;		On entry : 0/0
 13893 ;;		On exit  : 0/0
 13894 ;;		Unchanged: 0/0
 13895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13896 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13897 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13899 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13900 ;;Total ram usage:        8 bytes
 13901 ;; Hardware stack levels used:    1
 13902 ;; Hardware stack levels required when called:   11
 13903 ;; This function calls:
 13904 ;;		___fldiv
 13905 ;;		___flmul
 13906 ;;		___fltol
 13907 ;;		___xxtofl
 13908 ;; This function is called by:
 13909 ;;		_motor_nonzero_steps_from_degrees
 13910 ;; This function uses a non-reentrant model
 13911 ;;
 13912                           
 13913                           	psect	text43
 13914  010AD4                     __ptext43:
 13915                           	opt stack 0
 13916  010AD4                     _motor_steps_from_degrees:
 13917                           	opt stack 17
 13918                           
 13919                           ;motor.c: 32: float steps;;motor.c: 33: steps = (float) degrees;
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;incstack = 0
 13923  010AD4  C087  F060         	movff	motor_steps_from_degrees@degrees,___xxtofl@val
 13924  010AD8  C088  F061         	movff	motor_steps_from_degrees@degrees+1,___xxtofl@val+1
 13925  010ADC  0100               	movlb	0	; () banked
 13926  010ADE  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 13927  010AE0  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 13928  010AE2  0E00               	movlw	0
 13929  010AE4  ECA9  F075         	call	___xxtofl
 13930  010AE8  C060  F08B         	movff	?___xxtofl,motor_steps_from_degrees@steps
 13931  010AEC  C061  F08C         	movff	?___xxtofl+1,motor_steps_from_degrees@steps+1
 13932  010AF0  C062  F08D         	movff	?___xxtofl+2,motor_steps_from_degrees@steps+2
 13933  010AF4  C063  F08E         	movff	?___xxtofl+3,motor_steps_from_degrees@steps+3
 13934                           
 13935                           ;motor.c: 34: steps *= config.full_circle_in_steps;
 13936  010AF8  C08B  F06E         	movff	motor_steps_from_degrees@steps,___flmul@b
 13937  010AFC  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___flmul@b+1
 13938  010B00  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___flmul@b+2
 13939  010B04  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___flmul@b+3
 13940  010B08  C183  F060         	movff	_config,___xxtofl@val
 13941  010B0C  C184  F061         	movff	_config+1,___xxtofl@val+1
 13942  010B10  C185  F062         	movff	_config+2,___xxtofl@val+2
 13943  010B14  C186  F063         	movff	_config+3,___xxtofl@val+3
 13944  010B18  0E00               	movlw	0
 13945  010B1A  ECA9  F075         	call	___xxtofl
 13946  010B1E  C060  F072         	movff	?___xxtofl,___flmul@a
 13947  010B22  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 13948  010B26  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 13949  010B2A  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 13950  010B2E  EC71  F060         	call	___flmul	;wreg free
 13951  010B32  C06E  F08B         	movff	?___flmul,motor_steps_from_degrees@steps
 13952  010B36  C06F  F08C         	movff	?___flmul+1,motor_steps_from_degrees@steps+1
 13953  010B3A  C070  F08D         	movff	?___flmul+2,motor_steps_from_degrees@steps+2
 13954  010B3E  C071  F08E         	movff	?___flmul+3,motor_steps_from_degrees@steps+3
 13955                           
 13956                           ;motor.c: 35: steps /= 36000;
 13957  010B42  C08B  F06E         	movff	motor_steps_from_degrees@steps,___fldiv@b
 13958  010B46  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___fldiv@b+1
 13959  010B4A  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___fldiv@b+2
 13960  010B4E  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___fldiv@b+3
 13961  010B52  0E00               	movlw	0
 13962  010B54  0100               	movlb	0	; () banked
 13963  010B56  6F72               	movwf	___fldiv@a& (0+255),b
 13964  010B58  0EA0               	movlw	160
 13965  010B5A  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 13966  010B5C  0E0C               	movlw	12
 13967  010B5E  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 13968  010B60  0E47               	movlw	71
 13969  010B62  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 13970  010B64  EC95  F066         	call	___fldiv	;wreg free
 13971  010B68  C06E  F08B         	movff	?___fldiv,motor_steps_from_degrees@steps
 13972  010B6C  C06F  F08C         	movff	?___fldiv+1,motor_steps_from_degrees@steps+1
 13973  010B70  C070  F08D         	movff	?___fldiv+2,motor_steps_from_degrees@steps+2
 13974  010B74  C071  F08E         	movff	?___fldiv+3,motor_steps_from_degrees@steps+3
 13975                           
 13976                           ;motor.c: 37: return (uint32_t) steps;
 13977  010B78  C08B  F060         	movff	motor_steps_from_degrees@steps,___fltol@f1
 13978  010B7C  C08C  F061         	movff	motor_steps_from_degrees@steps+1,___fltol@f1+1
 13979  010B80  C08D  F062         	movff	motor_steps_from_degrees@steps+2,___fltol@f1+2
 13980  010B84  C08E  F063         	movff	motor_steps_from_degrees@steps+3,___fltol@f1+3
 13981  010B88  EC13  F082         	call	___fltol	;wreg free
 13982  010B8C  C060  F087         	movff	?___fltol,?_motor_steps_from_degrees
 13983  010B90  C061  F088         	movff	?___fltol+1,?_motor_steps_from_degrees+1
 13984  010B94  C062  F089         	movff	?___fltol+2,?_motor_steps_from_degrees+2
 13985  010B98  C063  F08A         	movff	?___fltol+3,?_motor_steps_from_degrees+3
 13986  010B9C  0012               	return	
 13987  010B9E                     __end_of_motor_steps_from_degrees:
 13988                           	opt stack 0
 13989                           tblptru	equ	0xFF8
 13990                           tblptrh	equ	0xFF7
 13991                           tblptrl	equ	0xFF6
 13992                           tablat	equ	0xFF5
 13993                           prodh	equ	0xFF4
 13994                           prodl	equ	0xFF3
 13995                           intcon	equ	0xFF2
 13996                           postinc0	equ	0xFEE
 13997                           wreg	equ	0xFE8
 13998                           postdec1	equ	0xFE5
 13999                           plusw1	equ	0xFE3
 14000                           fsr1h	equ	0xFE2
 14001                           fsr1l	equ	0xFE1
 14002                           indf2	equ	0xFDF
 14003                           postinc2	equ	0xFDE
 14004                           postdec2	equ	0xFDD
 14005                           plusw2	equ	0xFDB
 14006                           fsr2h	equ	0xFDA
 14007                           fsr2l	equ	0xFD9
 14008                           status	equ	0xFD8
 14009                           
 14010 ;; *************** function _motor_divide_jump_to_nearest *****************
 14011 ;; Defined at:
 14012 ;;		line 559 in file "motor.c"
 14013 ;; Parameters:    Size  Location     Type
 14014 ;;		None
 14015 ;; Auto vars:     Size  Location     Type
 14016 ;;  divide_posit    4   96[BANK0 ] float 
 14017 ;;  nearest_posi    4   90[BANK0 ] unsigned long 
 14018 ;;  nearest_divi    2   94[BANK0 ] int 
 14019 ;; Return value:  Size  Location     Type
 14020 ;;                  1    wreg      void 
 14021 ;; Registers used:
 14022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14023 ;; Tracked objects:
 14024 ;;		On entry : 0/0
 14025 ;;		On exit  : 0/0
 14026 ;;		Unchanged: 0/0
 14027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14029 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14031 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14032 ;;Total ram usage:       10 bytes
 14033 ;; Hardware stack levels used:    1
 14034 ;; Hardware stack levels required when called:   13
 14035 ;; This function calls:
 14036 ;;		___fladd
 14037 ;;		___fldiv
 14038 ;;		___flmul
 14039 ;;		___fltol
 14040 ;;		___xxtofl
 14041 ;;		__step_position_from_divide_position
 14042 ;;		_motor_go_to_steps_position
 14043 ;; This function is called by:
 14044 ;;		_encoder_statemachine
 14045 ;; This function uses a non-reentrant model
 14046 ;;
 14047                           
 14048                           	psect	text44
 14049  00E76C                     __ptext44:
 14050                           	opt stack 0
 14051  00E76C                     _motor_divide_jump_to_nearest:
 14052                           	opt stack 16
 14053                           
 14054                           ;motor.c: 561: float divide_position_float;;motor.c: 562: int16_t nearest_divide_positio
      +                          n;;motor.c: 563: uint32_t nearest_position_in_steps;;motor.c: 565: divide_position_float
      +                           = (float) os.current_position_in_steps;
 14055                           
 14056                           ;incstack = 0
 14057  00E76C  C0D7  F060         	movff	_os+7,___xxtofl@val	;volatile
 14058  00E770  C0D8  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 14059  00E774  C0D9  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 14060  00E778  C0DA  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 14061  00E77C  0E00               	movlw	0
 14062  00E77E  ECA9  F075         	call	___xxtofl
 14063  00E782  C060  F0C0         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 14064  00E786  C061  F0C1         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 14065  00E78A  C062  F0C2         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 14066  00E78E  C063  F0C3         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 14067                           
 14068                           ;motor.c: 566: divide_position_float *= (float) os.division;
 14069  00E792  C0C0  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 14070  00E796  C0C1  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 14071  00E79A  C0C2  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 14072  00E79E  C0C3  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 14073  00E7A2  EE20  F0E3         	lfsr	2,_os+19	;volatile
 14074  00E7A6  CFDE F060          	movff	postinc2,___xxtofl@val
 14075  00E7AA  CFDD F061          	movff	postdec2,___xxtofl@val+1
 14076  00E7AE  0100               	movlb	0	; () banked
 14077  00E7B0  0E00               	movlw	0
 14078  00E7B2  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 14079  00E7B4  0EFF               	movlw	-1
 14080  00E7B6  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 14081  00E7B8  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 14082  00E7BA  0E01               	movlw	1
 14083  00E7BC  ECA9  F075         	call	___xxtofl
 14084  00E7C0  C060  F072         	movff	?___xxtofl,___flmul@a
 14085  00E7C4  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 14086  00E7C8  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 14087  00E7CC  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 14088  00E7D0  EC71  F060         	call	___flmul	;wreg free
 14089  00E7D4  C06E  F0C0         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 14090  00E7D8  C06F  F0C1         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 14091  00E7DC  C070  F0C2         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 14092  00E7E0  C071  F0C3         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 14093                           
 14094                           ;motor.c: 567: divide_position_float /= (float) config.full_circle_in_steps;
 14095  00E7E4  C0C0  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 14096  00E7E8  C0C1  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 14097  00E7EC  C0C2  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 14098  00E7F0  C0C3  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 14099  00E7F4  C183  F060         	movff	_config,___xxtofl@val
 14100  00E7F8  C184  F061         	movff	_config+1,___xxtofl@val+1
 14101  00E7FC  C185  F062         	movff	_config+2,___xxtofl@val+2
 14102  00E800  C186  F063         	movff	_config+3,___xxtofl@val+3
 14103  00E804  0E00               	movlw	0
 14104  00E806  ECA9  F075         	call	___xxtofl
 14105  00E80A  C060  F072         	movff	?___xxtofl,___fldiv@a
 14106  00E80E  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 14107  00E812  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 14108  00E816  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 14109  00E81A  EC95  F066         	call	___fldiv	;wreg free
 14110  00E81E  C06E  F0C0         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 14111  00E822  C06F  F0C1         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 14112  00E826  C070  F0C2         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 14113  00E82A  C071  F0C3         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 14114                           
 14115                           ;motor.c: 568: divide_position_float += 0.5;
 14116  00E82E  C0C0  F072         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 14117  00E832  C0C1  F073         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 14118  00E836  C0C2  F074         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 14119  00E83A  C0C3  F075         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 14120  00E83E  0E00               	movlw	0
 14121  00E840  0100               	movlb	0	; () banked
 14122  00E842  6F76               	movwf	___fladd@a& (0+255),b
 14123  00E844  0E00               	movlw	0
 14124  00E846  6F77               	movwf	(___fladd@a+1)& (0+255),b
 14125  00E848  0E00               	movlw	0
 14126  00E84A  6F78               	movwf	(___fladd@a+2)& (0+255),b
 14127  00E84C  0E3F               	movlw	63
 14128  00E84E  6F79               	movwf	(___fladd@a+3)& (0+255),b
 14129  00E850  EC1A  F062         	call	___fladd	;wreg free
 14130  00E854  C072  F0C0         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 14131  00E858  C073  F0C1         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 14132  00E85C  C074  F0C2         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 14133  00E860  C075  F0C3         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 14134                           
 14135                           ;motor.c: 569: nearest_divide_position = (int16_t) divide_position_float;
 14136  00E864  C0C0  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 14137  00E868  C0C1  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 14138  00E86C  C0C2  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 14139  00E870  C0C3  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 14140  00E874  EC13  F082         	call	___fltol	;wreg free
 14141  00E878  C060  F0BE         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 14142  00E87C  C061  F0BF         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 14143                           
 14144                           ;motor.c: 572: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 14145  00E880  C0BE  F087         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 14146  00E884  C0BF  F088         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 14147  00E888  ECBC  F080         	call	__step_position_from_divide_position	;wreg free
 14148  00E88C  C087  F0BA         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 14149  00E890  C088  F0BB         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 14150  00E894  C089  F0BC         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 14151  00E898  C08A  F0BD         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 14152                           
 14153                           ;motor.c: 575: os.divide_position = nearest_divide_position;
 14154  00E89C  C0BE  F0E6         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+22	;volatile
 14155  00E8A0  C0BF  F0E7         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+23	;volatile
 14156                           
 14157                           ;motor.c: 576: motor_go_to_steps_position(nearest_position_in_steps);
 14158  00E8A4  C0BA  F09E         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_go_to_steps_position
      +                          @target_position
 14159  00E8A8  C0BB  F09F         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_go_to_steps_positi
      +                          on@target_position+1
 14160  00E8AC  C0BC  F0A0         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_go_to_steps_positi
      +                          on@target_position+2
 14161  00E8B0  C0BD  F0A1         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_go_to_steps_positi
      +                          on@target_position+3
 14162  00E8B4  ECB8  F063         	call	_motor_go_to_steps_position	;wreg free
 14163  00E8B8  0012               	return		;funcret
 14164  00E8BA                     __end_of_motor_divide_jump_to_nearest:
 14165                           	opt stack 0
 14166                           tblptru	equ	0xFF8
 14167                           tblptrh	equ	0xFF7
 14168                           tblptrl	equ	0xFF6
 14169                           tablat	equ	0xFF5
 14170                           prodh	equ	0xFF4
 14171                           prodl	equ	0xFF3
 14172                           intcon	equ	0xFF2
 14173                           postinc0	equ	0xFEE
 14174                           wreg	equ	0xFE8
 14175                           postdec1	equ	0xFE5
 14176                           plusw1	equ	0xFE3
 14177                           fsr1h	equ	0xFE2
 14178                           fsr1l	equ	0xFE1
 14179                           indf2	equ	0xFDF
 14180                           postinc2	equ	0xFDE
 14181                           postdec2	equ	0xFDD
 14182                           plusw2	equ	0xFDB
 14183                           fsr2h	equ	0xFDA
 14184                           fsr2l	equ	0xFD9
 14185                           status	equ	0xFD8
 14186                           
 14187 ;; *************** function _motor_divide_jump *****************
 14188 ;; Defined at:
 14189 ;;		line 528 in file "motor.c"
 14190 ;; Parameters:    Size  Location     Type
 14191 ;;		None
 14192 ;; Auto vars:     Size  Location     Type
 14193 ;;  target_posit    4   91[BANK0 ] unsigned long 
 14194 ;;  target_divid    2   95[BANK0 ] int 
 14195 ;; Return value:  Size  Location     Type
 14196 ;;                  1    wreg      void 
 14197 ;; Registers used:
 14198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14199 ;; Tracked objects:
 14200 ;;		On entry : 0/0
 14201 ;;		On exit  : 0/0
 14202 ;;		Unchanged: 0/0
 14203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14205 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14206 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14207 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14208 ;;Total ram usage:        7 bytes
 14209 ;; Hardware stack levels used:    1
 14210 ;; Hardware stack levels required when called:   13
 14211 ;; This function calls:
 14212 ;;		__step_position_from_divide_position
 14213 ;;		_motor_go_to_steps_position
 14214 ;; This function is called by:
 14215 ;;		_encoder_statemachine
 14216 ;; This function uses a non-reentrant model
 14217 ;;
 14218                           
 14219                           	psect	text45
 14220  01159C                     __ptext45:
 14221                           	opt stack 0
 14222  01159C                     _motor_divide_jump:
 14223                           	opt stack 16
 14224                           
 14225                           ;motor.c: 530: int16_t target_divide_position;;motor.c: 531: uint32_t target_position_in
      +                          _steps;;motor.c: 534: if(os.divide_jump_size>0)
 14226                           
 14227                           ;incstack = 0
 14228  01159C  0100               	movlb	0	; () banked
 14229  01159E  BFE9               	btfsc	(_os+25)& (0+255),7,b	;volatile
 14230  0115A0  D01C               	goto	l2429
 14231  0115A2  51E9               	movf	(_os+25)& (0+255),w,b	;volatile
 14232  0115A4  E103               	bnz	u21270
 14233  0115A6  05E8               	decf	(_os+24)& (0+255),w,b	;volatile
 14234  0115A8  A0D8               	btfss	status,0,c
 14235  0115AA  D017               	goto	l2429
 14236  0115AC                     u21270:
 14237                           
 14238                           ; BSR set to: 0
 14239                           ;motor.c: 535: {;motor.c: 536: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 14240  0115AC  51E8               	movf	(_os+24)& (0+255),w,b	;volatile
 14241  0115AE  25E6               	addwf	(_os+22)& (0+255),w,b	;volatile
 14242  0115B0  6FBF               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 14243  0115B2  51E9               	movf	(_os+25)& (0+255),w,b	;volatile
 14244  0115B4  21E7               	addwfc	(_os+23)& (0+255),w,b	;volatile
 14245  0115B6  6FC0               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 14246                           
 14247                           ;motor.c: 537: if(target_divide_position>=os.division)
 14248  0115B8  51E3               	movf	(_os+19)& (0+255),w,b	;volatile
 14249  0115BA  5DBF               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 14250  0115BC  51C0               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 14251  0115BE  0A80               	xorlw	128
 14252  0115C0  6FBA               	movwf	??_motor_divide_jump& (0+255),b
 14253  0115C2  51E4               	movf	(_os+20)& (0+255),w,b	;volatile
 14254  0115C4  0A80               	xorlw	128
 14255  0115C6  59BA               	subwfb	??_motor_divide_jump& (0+255),w,b
 14256  0115C8  A0D8               	btfss	status,0,c
 14257  0115CA  D015               	goto	l2432
 14258                           
 14259                           ; BSR set to: 0
 14260                           ;motor.c: 538: {;motor.c: 539: target_divide_position -= os.division;
 14261  0115CC  EE20  F0E3         	lfsr	2,_os+19	;volatile
 14262  0115D0  50DE               	movf	postinc2,w,c
 14263  0115D2  5FBF               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 14264  0115D4  50DD               	movf	postdec2,w,c
 14265  0115D6  5BC0               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 14266                           
 14267                           ; BSR set to: 0
 14268                           ;motor.c: 540: };motor.c: 541: }
 14269  0115D8  D00E               	goto	l2432
 14270  0115DA                     l2429:
 14271                           
 14272                           ; BSR set to: 0
 14273                           ;motor.c: 542: else;motor.c: 543: {;motor.c: 544: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 14274                           
 14275                           ; BSR set to: 0
 14276  0115DA  51E8               	movf	(_os+24)& (0+255),w,b	;volatile
 14277  0115DC  25E6               	addwf	(_os+22)& (0+255),w,b	;volatile
 14278  0115DE  6FBF               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 14279  0115E0  51E9               	movf	(_os+25)& (0+255),w,b	;volatile
 14280  0115E2  21E7               	addwfc	(_os+23)& (0+255),w,b	;volatile
 14281  0115E4  6FC0               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 14282                           
 14283                           ;motor.c: 545: if(target_divide_position<0)
 14284  0115E6  AFC0               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 14285  0115E8  D006               	goto	l2432
 14286                           
 14287                           ; BSR set to: 0
 14288                           ;motor.c: 546: {;motor.c: 547: target_divide_position += os.division;
 14289  0115EA  EE20  F0E3         	lfsr	2,_os+19	;volatile
 14290  0115EE  50DE               	movf	postinc2,w,c
 14291  0115F0  27BF               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 14292  0115F2  50DD               	movf	postdec2,w,c
 14293  0115F4  23C0               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 14294  0115F6                     l2432:
 14295                           
 14296                           ; BSR set to: 0
 14297                           ;motor.c: 548: };motor.c: 549: };motor.c: 552: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 14298                           
 14299                           ; BSR set to: 0
 14300                           
 14301                           ; BSR set to: 0
 14302  0115F6  C0BF  F087         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 14303  0115FA  C0C0  F088         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 14304  0115FE  ECBC  F080         	call	__step_position_from_divide_position	;wreg free
 14305  011602  C087  F0BB         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 14306  011606  C088  F0BC         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 14307  01160A  C089  F0BD         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 14308  01160E  C08A  F0BE         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 14309                           
 14310                           ;motor.c: 555: os.divide_position = target_divide_position;
 14311  011612  C0BF  F0E6         	movff	motor_divide_jump@target_divide_position,_os+22	;volatile
 14312  011616  C0C0  F0E7         	movff	motor_divide_jump@target_divide_position+1,_os+23	;volatile
 14313                           
 14314                           ;motor.c: 556: motor_go_to_steps_position(target_position_in_steps);
 14315  01161A  C0BB  F09E         	movff	motor_divide_jump@target_position_in_steps,motor_go_to_steps_position@target_posi
      +                          tion
 14316  01161E  C0BC  F09F         	movff	motor_divide_jump@target_position_in_steps+1,motor_go_to_steps_position@target_po
      +                          sition+1
 14317  011622  C0BD  F0A0         	movff	motor_divide_jump@target_position_in_steps+2,motor_go_to_steps_position@target_po
      +                          sition+2
 14318  011626  C0BE  F0A1         	movff	motor_divide_jump@target_position_in_steps+3,motor_go_to_steps_position@target_po
      +                          sition+3
 14319  01162A  ECB8  F063         	call	_motor_go_to_steps_position	;wreg free
 14320  01162E  0012               	return		;funcret
 14321  011630                     __end_of_motor_divide_jump:
 14322                           	opt stack 0
 14323                           tblptru	equ	0xFF8
 14324                           tblptrh	equ	0xFF7
 14325                           tblptrl	equ	0xFF6
 14326                           tablat	equ	0xFF5
 14327                           prodh	equ	0xFF4
 14328                           prodl	equ	0xFF3
 14329                           intcon	equ	0xFF2
 14330                           postinc0	equ	0xFEE
 14331                           wreg	equ	0xFE8
 14332                           postdec1	equ	0xFE5
 14333                           plusw1	equ	0xFE3
 14334                           fsr1h	equ	0xFE2
 14335                           fsr1l	equ	0xFE1
 14336                           indf2	equ	0xFDF
 14337                           postinc2	equ	0xFDE
 14338                           postdec2	equ	0xFDD
 14339                           plusw2	equ	0xFDB
 14340                           fsr2h	equ	0xFDA
 14341                           fsr2l	equ	0xFD9
 14342                           status	equ	0xFD8
 14343                           
 14344 ;; *************** function __step_position_from_divide_position *****************
 14345 ;; Defined at:
 14346 ;;		line 67 in file "motor.c"
 14347 ;; Parameters:    Size  Location     Type
 14348 ;;  divide_posit    2   39[BANK0 ] int 
 14349 ;; Auto vars:     Size  Location     Type
 14350 ;;  target_posit    4   43[BANK0 ] float 
 14351 ;; Return value:  Size  Location     Type
 14352 ;;                  4   39[BANK0 ] unsigned long 
 14353 ;; Registers used:
 14354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14355 ;; Tracked objects:
 14356 ;;		On entry : 0/0
 14357 ;;		On exit  : 0/0
 14358 ;;		Unchanged: 0/0
 14359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14360 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14361 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14363 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14364 ;;Total ram usage:        8 bytes
 14365 ;; Hardware stack levels used:    1
 14366 ;; Hardware stack levels required when called:   11
 14367 ;; This function calls:
 14368 ;;		___fldiv
 14369 ;;		___flmul
 14370 ;;		___fltol
 14371 ;;		___xxtofl
 14372 ;; This function is called by:
 14373 ;;		_motor_divide_jump
 14374 ;;		_motor_divide_jump_to_nearest
 14375 ;; This function uses a non-reentrant model
 14376 ;;
 14377                           
 14378                           	psect	text46
 14379  010178                     __ptext46:
 14380                           	opt stack 0
 14381  010178                     __step_position_from_divide_position:
 14382                           	opt stack 17
 14383                           
 14384                           ;motor.c: 69: float target_position;;motor.c: 72: target_position = (float) config.full_
      +                          circle_in_steps;
 14385                           
 14386                           ;incstack = 0
 14387  010178  C183  F060         	movff	_config,___xxtofl@val
 14388  01017C  C184  F061         	movff	_config+1,___xxtofl@val+1
 14389  010180  C185  F062         	movff	_config+2,___xxtofl@val+2
 14390  010184  C186  F063         	movff	_config+3,___xxtofl@val+3
 14391  010188  0E00               	movlw	0
 14392  01018A  ECA9  F075         	call	___xxtofl
 14393  01018E  C060  F08B         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 14394  010192  C061  F08C         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 14395  010196  C062  F08D         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 14396  01019A  C063  F08E         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 14397                           
 14398                           ;motor.c: 73: target_position *= (float) divide_position;
 14399  01019E  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___flmul@b
 14400  0101A2  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 14401  0101A6  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 14402  0101AA  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 14403  0101AE  C087  F060         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 14404  0101B2  C088  F061         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 14405  0101B6  0100               	movlb	0	; () banked
 14406  0101B8  0E00               	movlw	0
 14407  0101BA  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 14408  0101BC  0EFF               	movlw	-1
 14409  0101BE  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 14410  0101C0  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 14411  0101C2  0E01               	movlw	1
 14412  0101C4  ECA9  F075         	call	___xxtofl
 14413  0101C8  C060  F072         	movff	?___xxtofl,___flmul@a
 14414  0101CC  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 14415  0101D0  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 14416  0101D4  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 14417  0101D8  EC71  F060         	call	___flmul	;wreg free
 14418  0101DC  C06E  F08B         	movff	?___flmul,__step_position_from_divide_position@target_position
 14419  0101E0  C06F  F08C         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 14420  0101E4  C070  F08D         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 14421  0101E8  C071  F08E         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 14422                           
 14423                           ;motor.c: 74: target_position /= (float) os.division;
 14424  0101EC  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 14425  0101F0  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 14426  0101F4  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 14427  0101F8  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 14428  0101FC  EE20  F0E3         	lfsr	2,_os+19	;volatile
 14429  010200  CFDE F060          	movff	postinc2,___xxtofl@val
 14430  010204  CFDD F061          	movff	postdec2,___xxtofl@val+1
 14431  010208  0100               	movlb	0	; () banked
 14432  01020A  0E00               	movlw	0
 14433  01020C  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 14434  01020E  0EFF               	movlw	-1
 14435  010210  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 14436  010212  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 14437  010214  0E01               	movlw	1
 14438  010216  ECA9  F075         	call	___xxtofl
 14439  01021A  C060  F072         	movff	?___xxtofl,___fldiv@a
 14440  01021E  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 14441  010222  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 14442  010226  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 14443  01022A  EC95  F066         	call	___fldiv	;wreg free
 14444  01022E  C06E  F08B         	movff	?___fldiv,__step_position_from_divide_position@target_position
 14445  010232  C06F  F08C         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 14446  010236  C070  F08D         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 14447  01023A  C071  F08E         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 14448                           
 14449                           ;motor.c: 76: return (uint32_t) target_position;
 14450  01023E  C08B  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 14451  010242  C08C  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 14452  010246  C08D  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 14453  01024A  C08E  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 14454  01024E  EC13  F082         	call	___fltol	;wreg free
 14455  010252  C060  F087         	movff	?___fltol,?__step_position_from_divide_position
 14456  010256  C061  F088         	movff	?___fltol+1,?__step_position_from_divide_position+1
 14457  01025A  C062  F089         	movff	?___fltol+2,?__step_position_from_divide_position+2
 14458  01025E  C063  F08A         	movff	?___fltol+3,?__step_position_from_divide_position+3
 14459  010262  0012               	return	
 14460  010264                     __end_of__step_position_from_divide_position:
 14461                           	opt stack 0
 14462                           tblptru	equ	0xFF8
 14463                           tblptrh	equ	0xFF7
 14464                           tblptrl	equ	0xFF6
 14465                           tablat	equ	0xFF5
 14466                           prodh	equ	0xFF4
 14467                           prodl	equ	0xFF3
 14468                           intcon	equ	0xFF2
 14469                           postinc0	equ	0xFEE
 14470                           wreg	equ	0xFE8
 14471                           postdec1	equ	0xFE5
 14472                           plusw1	equ	0xFE3
 14473                           fsr1h	equ	0xFE2
 14474                           fsr1l	equ	0xFE1
 14475                           indf2	equ	0xFDF
 14476                           postinc2	equ	0xFDE
 14477                           postdec2	equ	0xFDD
 14478                           plusw2	equ	0xFDB
 14479                           fsr2h	equ	0xFDA
 14480                           fsr2l	equ	0xFD9
 14481                           status	equ	0xFD8
 14482                           
 14483 ;; *************** function _motor_change_speed *****************
 14484 ;; Defined at:
 14485 ;;		line 438 in file "motor.c"
 14486 ;; Parameters:    Size  Location     Type
 14487 ;;  new_speed       2    0[BANK0 ] unsigned int 
 14488 ;; Auto vars:     Size  Location     Type
 14489 ;;		None
 14490 ;; Return value:  Size  Location     Type
 14491 ;;                  1    wreg      void 
 14492 ;; Registers used:
 14493 ;;		None
 14494 ;; Tracked objects:
 14495 ;;		On entry : 0/0
 14496 ;;		On exit  : 0/0
 14497 ;;		Unchanged: 0/0
 14498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14499 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14502 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14503 ;;Total ram usage:        2 bytes
 14504 ;; Hardware stack levels used:    1
 14505 ;; Hardware stack levels required when called:   10
 14506 ;; This function calls:
 14507 ;;		Nothing
 14508 ;; This function is called by:
 14509 ;;		_encoder_statemachine
 14510 ;; This function uses a non-reentrant model
 14511 ;;
 14512                           
 14513                           	psect	text47
 14514  012CEC                     __ptext47:
 14515                           	opt stack 0
 14516  012CEC                     _motor_change_speed:
 14517                           	opt stack 19
 14518                           
 14519                           ;motor.c: 440: motor_maximum_speed = new_speed;
 14520                           
 14521                           ;incstack = 0
 14522  012CEC  C060  F16B         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 14523  012CF0  C061  F16C         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 14524  012CF4  0012               	return		;funcret
 14525  012CF6                     __end_of_motor_change_speed:
 14526                           	opt stack 0
 14527                           tblptru	equ	0xFF8
 14528                           tblptrh	equ	0xFF7
 14529                           tblptrl	equ	0xFF6
 14530                           tablat	equ	0xFF5
 14531                           prodh	equ	0xFF4
 14532                           prodl	equ	0xFF3
 14533                           intcon	equ	0xFF2
 14534                           postinc0	equ	0xFEE
 14535                           wreg	equ	0xFE8
 14536                           postdec1	equ	0xFE5
 14537                           plusw1	equ	0xFE3
 14538                           fsr1h	equ	0xFE2
 14539                           fsr1l	equ	0xFE1
 14540                           indf2	equ	0xFDF
 14541                           postinc2	equ	0xFDE
 14542                           postdec2	equ	0xFDD
 14543                           plusw2	equ	0xFDB
 14544                           fsr2h	equ	0xFDA
 14545                           fsr2l	equ	0xFD9
 14546                           status	equ	0xFD8
 14547                           
 14548 ;; *************** function _motor_arc_move *****************
 14549 ;; Defined at:
 14550 ;;		line 579 in file "motor.c"
 14551 ;; Parameters:    Size  Location     Type
 14552 ;;  direction       1    wreg     enum E6622
 14553 ;; Auto vars:     Size  Location     Type
 14554 ;;  direction       1   62[BANK0 ] enum E6622
 14555 ;;  arc_in_steps    4   63[BANK0 ] float 
 14556 ;; Return value:  Size  Location     Type
 14557 ;;                  1    wreg      void 
 14558 ;; Registers used:
 14559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14566 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14568 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14569 ;;Total ram usage:        5 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; Hardware stack levels required when called:   12
 14572 ;; This function calls:
 14573 ;;		___fldiv
 14574 ;;		___flmul
 14575 ;;		___fltol
 14576 ;;		___xxtofl
 14577 ;;		_motor_schedule_command
 14578 ;; This function is called by:
 14579 ;;		_encoder_statemachine
 14580 ;; This function uses a non-reentrant model
 14581 ;;
 14582                           
 14583                           	psect	text48
 14584  010346                     __ptext48:
 14585                           	opt stack 0
 14586  010346                     _motor_arc_move:
 14587                           	opt stack 17
 14588                           
 14589                           ;incstack = 0
 14590                           ;motor_arc_move@direction stored from wreg
 14591  010346  0100               	movlb	0	; () banked
 14592  010348  6F9E               	movwf	motor_arc_move@direction& (0+255),b
 14593                           
 14594                           ;motor.c: 581: float arc_in_steps;;motor.c: 583: arc_in_steps = (float) os.arc_size;
 14595  01034A  C0EC  F060         	movff	_os+28,___xxtofl@val	;volatile
 14596  01034E  C0ED  F061         	movff	_os+29,___xxtofl@val+1	;volatile
 14597  010352  C0EE  F062         	movff	_os+30,___xxtofl@val+2	;volatile
 14598  010356  C0EF  F063         	movff	_os+31,___xxtofl@val+3	;volatile
 14599  01035A  0E01               	movlw	1
 14600  01035C  ECA9  F075         	call	___xxtofl
 14601  010360  C060  F09F         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 14602  010364  C061  F0A0         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 14603  010368  C062  F0A1         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 14604  01036C  C063  F0A2         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 14605                           
 14606                           ;motor.c: 584: arc_in_steps *= (float) config.full_circle_in_steps;
 14607  010370  C09F  F06E         	movff	motor_arc_move@arc_in_steps,___flmul@b
 14608  010374  C0A0  F06F         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 14609  010378  C0A1  F070         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 14610  01037C  C0A2  F071         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 14611  010380  C183  F060         	movff	_config,___xxtofl@val
 14612  010384  C184  F061         	movff	_config+1,___xxtofl@val+1
 14613  010388  C185  F062         	movff	_config+2,___xxtofl@val+2
 14614  01038C  C186  F063         	movff	_config+3,___xxtofl@val+3
 14615  010390  0E00               	movlw	0
 14616  010392  ECA9  F075         	call	___xxtofl
 14617  010396  C060  F072         	movff	?___xxtofl,___flmul@a
 14618  01039A  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 14619  01039E  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 14620  0103A2  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 14621  0103A6  EC71  F060         	call	___flmul	;wreg free
 14622  0103AA  C06E  F09F         	movff	?___flmul,motor_arc_move@arc_in_steps
 14623  0103AE  C06F  F0A0         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 14624  0103B2  C070  F0A1         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 14625  0103B6  C071  F0A2         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 14626                           
 14627                           ;motor.c: 585: arc_in_steps /= (float) 36000;
 14628  0103BA  C09F  F06E         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 14629  0103BE  C0A0  F06F         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 14630  0103C2  C0A1  F070         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 14631  0103C6  C0A2  F071         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 14632  0103CA  0E00               	movlw	0
 14633  0103CC  0100               	movlb	0	; () banked
 14634  0103CE  6F72               	movwf	___fldiv@a& (0+255),b
 14635  0103D0  0EA0               	movlw	160
 14636  0103D2  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 14637  0103D4  0E0C               	movlw	12
 14638  0103D6  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 14639  0103D8  0E47               	movlw	71
 14640  0103DA  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 14641  0103DC  EC95  F066         	call	___fldiv	;wreg free
 14642  0103E0  C06E  F09F         	movff	?___fldiv,motor_arc_move@arc_in_steps
 14643  0103E4  C06F  F0A0         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 14644  0103E8  C070  F0A1         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 14645  0103EC  C071  F0A2         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 14646                           
 14647                           ;motor.c: 586: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed)
      +                          ;
 14648  0103F0  C09F  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 14649  0103F4  C0A0  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 14650  0103F8  C0A1  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 14651  0103FC  C0A2  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 14652  010400  EC13  F082         	call	___fltol	;wreg free
 14653  010404  C060  F097         	movff	?___fltol,motor_schedule_command@distance_in_steps
 14654  010408  C061  F098         	movff	?___fltol+1,motor_schedule_command@distance_in_steps+1
 14655  01040C  C062  F099         	movff	?___fltol+2,motor_schedule_command@distance_in_steps+2
 14656  010410  C063  F09A         	movff	?___fltol+3,motor_schedule_command@distance_in_steps+3
 14657  010414  C0F0  F09B         	movff	_os+32,motor_schedule_command@speed	;volatile
 14658  010418  C0F1  F09C         	movff	_os+33,motor_schedule_command@speed+1	;volatile
 14659  01041C  0100               	movlb	0	; () banked
 14660  01041E  519E               	movf	motor_arc_move@direction& (0+255),w,b
 14661  010420  ECFC  F088         	call	_motor_schedule_command
 14662  010424  0012               	return		;funcret
 14663  010426                     __end_of_motor_arc_move:
 14664                           	opt stack 0
 14665                           tblptru	equ	0xFF8
 14666                           tblptrh	equ	0xFF7
 14667                           tblptrl	equ	0xFF6
 14668                           tablat	equ	0xFF5
 14669                           prodh	equ	0xFF4
 14670                           prodl	equ	0xFF3
 14671                           intcon	equ	0xFF2
 14672                           postinc0	equ	0xFEE
 14673                           wreg	equ	0xFE8
 14674                           postdec1	equ	0xFE5
 14675                           plusw1	equ	0xFE3
 14676                           fsr1h	equ	0xFE2
 14677                           fsr1l	equ	0xFE1
 14678                           indf2	equ	0xFDF
 14679                           postinc2	equ	0xFDE
 14680                           postdec2	equ	0xFDD
 14681                           plusw2	equ	0xFDB
 14682                           fsr2h	equ	0xFDA
 14683                           fsr2l	equ	0xFD9
 14684                           status	equ	0xFD8
 14685                           
 14686 ;; *************** function __encoder_next_setup_stepsize *****************
 14687 ;; Defined at:
 14688 ;;		line 24 in file "encoder.c"
 14689 ;; Parameters:    Size  Location     Type
 14690 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 14691 ;; Auto vars:     Size  Location     Type
 14692 ;;		None
 14693 ;; Return value:  Size  Location     Type
 14694 ;;                  2    0[BANK0 ] unsigned int 
 14695 ;; Registers used:
 14696 ;;		wreg, status,2, status,0
 14697 ;; Tracked objects:
 14698 ;;		On entry : 0/0
 14699 ;;		On exit  : 0/0
 14700 ;;		Unchanged: 0/0
 14701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14702 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14704 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14705 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14706 ;;Total ram usage:        4 bytes
 14707 ;; Hardware stack levels used:    1
 14708 ;; Hardware stack levels required when called:   10
 14709 ;; This function calls:
 14710 ;;		Nothing
 14711 ;; This function is called by:
 14712 ;;		_encoder_statemachine
 14713 ;; This function uses a non-reentrant model
 14714 ;;
 14715                           
 14716                           	psect	text49
 14717  011A50                     __ptext49:
 14718                           	opt stack 0
 14719  011A50                     __encoder_next_setup_stepsize:
 14720                           	opt stack 19
 14721                           
 14722                           ;encoder.c: 26: switch(old_stepsize)
 14723                           
 14724                           ;incstack = 0
 14725  011A50  D01A               	goto	l2476
 14726  011A52                     
 14727                           ;encoder.c: 29: return 100;
 14728  011A52  0E00               	movlw	0
 14729  011A54  0100               	movlb	0	; () banked
 14730  011A56  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 14731  011A58  0E64               	movlw	100
 14732  011A5A  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 14733                           
 14734                           ; BSR set to: 0
 14735  011A5C  0012               	return	
 14736  011A5E                     
 14737                           ; BSR set to: 0
 14738                           ;encoder.c: 31: return 10;
 14739                           
 14740                           ; BSR set to: 0
 14741  011A5E  0E00               	movlw	0
 14742  011A60  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 14743  011A62  0E0A               	movlw	10
 14744  011A64  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 14745                           
 14746                           ; BSR set to: 0
 14747  011A66  0012               	return	
 14748  011A68                     
 14749                           ; BSR set to: 0
 14750                           ;encoder.c: 33: return 1;
 14751                           
 14752                           ; BSR set to: 0
 14753  011A68  0E00               	movlw	0
 14754  011A6A  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 14755  011A6C  0E01               	movlw	1
 14756  011A6E  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 14757                           
 14758                           ; BSR set to: 0
 14759  011A70  0012               	return	
 14760  011A72                     
 14761                           ; BSR set to: 0
 14762                           ;encoder.c: 35: return 1000;
 14763                           
 14764                           ; BSR set to: 0
 14765  011A72  0E03               	movlw	3
 14766  011A74  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 14767  011A76  0EE8               	movlw	232
 14768  011A78  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 14769                           
 14770                           ; BSR set to: 0
 14771  011A7A  0012               	return	
 14772  011A7C                     
 14773                           ; BSR set to: 0
 14774                           ;encoder.c: 37: return 100;
 14775                           
 14776                           ; BSR set to: 0
 14777  011A7C  0E00               	movlw	0
 14778  011A7E  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 14779  011A80  0E64               	movlw	100
 14780  011A82  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 14781                           
 14782                           ; BSR set to: 0
 14783                           ;encoder.c: 38: }
 14784                           
 14785                           ; BSR set to: 0
 14786  011A84  0012               	return	
 14787  011A86                     l2476:
 14788                           
 14789                           ; BSR set to: 0
 14790  011A86  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 14791  011A8A  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 14792                           
 14793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 14794                           ; Switch size 1, requested type "space"
 14795                           ; Number of cases is 2, Range of values is 0 to 3
 14796                           ; switch strategies available:
 14797                           ; Name         Instructions Cycles
 14798                           ; simple_byte            7     4 (average)
 14799                           ;	Chosen strategy is simple_byte
 14800  011A8E  0100               	movlb	0	; () banked
 14801  011A90  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 14802  011A92  0A00               	xorlw	0	; case 0
 14803  011A94  B4D8               	btfsc	status,2,c
 14804  011A96  D004               	goto	l23582
 14805  011A98  0A03               	xorlw	3	; case 3
 14806  011A9A  B4D8               	btfsc	status,2,c
 14807  011A9C  D00C               	goto	l23584
 14808  011A9E  D7EE               	goto	l2482
 14809  011AA0                     l23582:
 14810                           
 14811                           ; BSR set to: 0
 14812                           ; Switch size 1, requested type "space"
 14813                           ; Number of cases is 3, Range of values is 1 to 100
 14814                           ; switch strategies available:
 14815                           ; Name         Instructions Cycles
 14816                           ; simple_byte           10     6 (average)
 14817                           ;	Chosen strategy is simple_byte
 14818  011AA0  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 14819  011AA2  0A01               	xorlw	1	; case 1
 14820  011AA4  B4D8               	btfsc	status,2,c
 14821  011AA6  D7E5               	goto	l2481
 14822  011AA8  0A0B               	xorlw	11	; case 10
 14823  011AAA  B4D8               	btfsc	status,2,c
 14824  011AAC  D7DD               	goto	l2480
 14825  011AAE  0A6E               	xorlw	110	; case 100
 14826  011AB0  B4D8               	btfsc	status,2,c
 14827  011AB2  D7D5               	goto	l2479
 14828  011AB4  D7E3               	goto	l2482
 14829  011AB6                     l23584:
 14830                           
 14831                           ; BSR set to: 0
 14832                           ; Switch size 1, requested type "space"
 14833                           ; Number of cases is 1, Range of values is 232 to 232
 14834                           ; switch strategies available:
 14835                           ; Name         Instructions Cycles
 14836                           ; simple_byte            4     3 (average)
 14837                           ;	Chosen strategy is simple_byte
 14838  011AB6  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 14839  011AB8  0AE8               	xorlw	232	; case 232
 14840  011ABA  B4D8               	btfsc	status,2,c
 14841  011ABC  D7CA               	goto	l2477
 14842  011ABE  D7DE               	goto	l2482
 14843  011AC0                     __end_of__encoder_next_setup_stepsize:
 14844                           	opt stack 0
 14845                           tblptru	equ	0xFF8
 14846                           tblptrh	equ	0xFF7
 14847                           tblptrl	equ	0xFF6
 14848                           tablat	equ	0xFF5
 14849                           prodh	equ	0xFF4
 14850                           prodl	equ	0xFF3
 14851                           intcon	equ	0xFF2
 14852                           postinc0	equ	0xFEE
 14853                           wreg	equ	0xFE8
 14854                           postdec1	equ	0xFE5
 14855                           plusw1	equ	0xFE3
 14856                           fsr1h	equ	0xFE2
 14857                           fsr1l	equ	0xFE1
 14858                           indf2	equ	0xFDF
 14859                           postinc2	equ	0xFDE
 14860                           postdec2	equ	0xFDD
 14861                           plusw2	equ	0xFDB
 14862                           fsr2h	equ	0xFDA
 14863                           fsr2l	equ	0xFD9
 14864                           status	equ	0xFD8
 14865                           
 14866 ;; *************** function __encoder_next_divide_step_size *****************
 14867 ;; Defined at:
 14868 ;;		line 41 in file "encoder.c"
 14869 ;; Parameters:    Size  Location     Type
 14870 ;;  old_stepsize    1    wreg     unsigned char 
 14871 ;; Auto vars:     Size  Location     Type
 14872 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 14873 ;; Return value:  Size  Location     Type
 14874 ;;                  1    wreg      unsigned char 
 14875 ;; Registers used:
 14876 ;;		wreg, status,2, status,0
 14877 ;; Tracked objects:
 14878 ;;		On entry : 0/0
 14879 ;;		On exit  : 0/0
 14880 ;;		Unchanged: 0/0
 14881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14883 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14885 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14886 ;;Total ram usage:        1 bytes
 14887 ;; Hardware stack levels used:    1
 14888 ;; Hardware stack levels required when called:   10
 14889 ;; This function calls:
 14890 ;;		Nothing
 14891 ;; This function is called by:
 14892 ;;		_encoder_statemachine
 14893 ;; This function uses a non-reentrant model
 14894 ;;
 14895                           
 14896                           	psect	text50
 14897  012A1C                     __ptext50:
 14898                           	opt stack 0
 14899  012A1C                     __encoder_next_divide_step_size:
 14900                           	opt stack 19
 14901                           
 14902                           ; BSR set to: 0
 14903                           ;incstack = 0
 14904                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 14905  012A1C  0100               	movlb	0	; () banked
 14906  012A1E  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 14907                           
 14908                           ;encoder.c: 43: switch(old_stepsize)
 14909  012A20  D008               	goto	l2486
 14910  012A22                     
 14911                           ;encoder.c: 46: return 10;
 14912  012A22  0E0A               	movlw	10
 14913  012A24  0012               	return	
 14914  012A26                     
 14915                           ;encoder.c: 48: return 1;
 14916  012A26  0E01               	movlw	1
 14917  012A28  0012               	return	
 14918  012A2A                     
 14919                           ;encoder.c: 50: return 100;
 14920  012A2A  0E64               	movlw	100
 14921  012A2C  0012               	return	
 14922  012A2E                     
 14923                           ;encoder.c: 52: return 1;
 14924  012A2E  0E01               	movlw	1
 14925                           
 14926                           ;encoder.c: 53: }
 14927  012A30  0012               	return	
 14928  012A32                     l2486:
 14929  012A32  0100               	movlb	0	; () banked
 14930  012A34  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 14931                           
 14932                           ; Switch size 1, requested type "space"
 14933                           ; Number of cases is 3, Range of values is 1 to 100
 14934                           ; switch strategies available:
 14935                           ; Name         Instructions Cycles
 14936                           ; simple_byte           10     6 (average)
 14937                           ;	Chosen strategy is simple_byte
 14938  012A36  0A01               	xorlw	1	; case 1
 14939  012A38  B4D8               	btfsc	status,2,c
 14940  012A3A  D7F7               	goto	l2490
 14941  012A3C  0A0B               	xorlw	11	; case 10
 14942  012A3E  B4D8               	btfsc	status,2,c
 14943  012A40  D7F2               	goto	l2489
 14944  012A42  0A6E               	xorlw	110	; case 100
 14945  012A44  B4D8               	btfsc	status,2,c
 14946  012A46  D7ED               	goto	l2487
 14947  012A48  D7F2               	goto	l2491
 14948  012A4A                     __end_of__encoder_next_divide_step_size:
 14949                           	opt stack 0
 14950                           tblptru	equ	0xFF8
 14951                           tblptrh	equ	0xFF7
 14952                           tblptrl	equ	0xFF6
 14953                           tablat	equ	0xFF5
 14954                           prodh	equ	0xFF4
 14955                           prodl	equ	0xFF3
 14956                           intcon	equ	0xFF2
 14957                           postinc0	equ	0xFEE
 14958                           wreg	equ	0xFE8
 14959                           postdec1	equ	0xFE5
 14960                           plusw1	equ	0xFE3
 14961                           fsr1h	equ	0xFE2
 14962                           fsr1l	equ	0xFE1
 14963                           indf2	equ	0xFDF
 14964                           postinc2	equ	0xFDE
 14965                           postdec2	equ	0xFDD
 14966                           plusw2	equ	0xFDB
 14967                           fsr2h	equ	0xFDA
 14968                           fsr2l	equ	0xFD9
 14969                           status	equ	0xFD8
 14970                           
 14971 ;; *************** function __encoder_next_arc_step_size *****************
 14972 ;; Defined at:
 14973 ;;		line 56 in file "encoder.c"
 14974 ;; Parameters:    Size  Location     Type
 14975 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 14976 ;; Auto vars:     Size  Location     Type
 14977 ;;		None
 14978 ;; Return value:  Size  Location     Type
 14979 ;;                  2    0[BANK0 ] unsigned int 
 14980 ;; Registers used:
 14981 ;;		wreg, status,2, status,0
 14982 ;; Tracked objects:
 14983 ;;		On entry : 0/0
 14984 ;;		On exit  : 0/0
 14985 ;;		Unchanged: 0/0
 14986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14987 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14989 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14990 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14991 ;;Total ram usage:        4 bytes
 14992 ;; Hardware stack levels used:    1
 14993 ;; Hardware stack levels required when called:   10
 14994 ;; This function calls:
 14995 ;;		Nothing
 14996 ;; This function is called by:
 14997 ;;		_encoder_statemachine
 14998 ;; This function uses a non-reentrant model
 14999 ;;
 15000                           
 15001                           	psect	text51
 15002  011AC0                     __ptext51:
 15003                           	opt stack 0
 15004  011AC0                     __encoder_next_arc_step_size:
 15005                           	opt stack 19
 15006                           
 15007                           ;encoder.c: 58: switch(old_stepsize)
 15008                           
 15009                           ;incstack = 0
 15010  011AC0  D01A               	goto	l2495
 15011  011AC2                     
 15012                           ;encoder.c: 61: return 100;
 15013  011AC2  0E00               	movlw	0
 15014  011AC4  0100               	movlb	0	; () banked
 15015  011AC6  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 15016  011AC8  0E64               	movlw	100
 15017  011ACA  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 15018                           
 15019                           ; BSR set to: 0
 15020  011ACC  0012               	return	
 15021  011ACE                     
 15022                           ; BSR set to: 0
 15023                           ;encoder.c: 63: return 10;
 15024                           
 15025                           ; BSR set to: 0
 15026  011ACE  0E00               	movlw	0
 15027  011AD0  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 15028  011AD2  0E0A               	movlw	10
 15029  011AD4  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 15030                           
 15031                           ; BSR set to: 0
 15032  011AD6  0012               	return	
 15033  011AD8                     
 15034                           ; BSR set to: 0
 15035                           ;encoder.c: 65: return 1;
 15036                           
 15037                           ; BSR set to: 0
 15038  011AD8  0E00               	movlw	0
 15039  011ADA  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 15040  011ADC  0E01               	movlw	1
 15041  011ADE  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 15042                           
 15043                           ; BSR set to: 0
 15044  011AE0  0012               	return	
 15045  011AE2                     
 15046                           ; BSR set to: 0
 15047                           ;encoder.c: 67: return 1000;
 15048                           
 15049                           ; BSR set to: 0
 15050  011AE2  0E03               	movlw	3
 15051  011AE4  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 15052  011AE6  0EE8               	movlw	232
 15053  011AE8  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 15054                           
 15055                           ; BSR set to: 0
 15056  011AEA  0012               	return	
 15057  011AEC                     
 15058                           ; BSR set to: 0
 15059                           ;encoder.c: 69: return 100;
 15060                           
 15061                           ; BSR set to: 0
 15062  011AEC  0E00               	movlw	0
 15063  011AEE  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 15064  011AF0  0E64               	movlw	100
 15065  011AF2  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 15066                           
 15067                           ; BSR set to: 0
 15068                           ;encoder.c: 70: }
 15069                           
 15070                           ; BSR set to: 0
 15071  011AF4  0012               	return	
 15072  011AF6                     l2495:
 15073                           
 15074                           ; BSR set to: 0
 15075  011AF6  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 15076  011AFA  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 15077                           
 15078                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 15079                           ; Switch size 1, requested type "space"
 15080                           ; Number of cases is 2, Range of values is 0 to 3
 15081                           ; switch strategies available:
 15082                           ; Name         Instructions Cycles
 15083                           ; simple_byte            7     4 (average)
 15084                           ;	Chosen strategy is simple_byte
 15085  011AFE  0100               	movlb	0	; () banked
 15086  011B00  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 15087  011B02  0A00               	xorlw	0	; case 0
 15088  011B04  B4D8               	btfsc	status,2,c
 15089  011B06  D004               	goto	l23586
 15090  011B08  0A03               	xorlw	3	; case 3
 15091  011B0A  B4D8               	btfsc	status,2,c
 15092  011B0C  D00C               	goto	l23588
 15093  011B0E  D7EE               	goto	l2501
 15094  011B10                     l23586:
 15095                           
 15096                           ; BSR set to: 0
 15097                           ; Switch size 1, requested type "space"
 15098                           ; Number of cases is 3, Range of values is 1 to 100
 15099                           ; switch strategies available:
 15100                           ; Name         Instructions Cycles
 15101                           ; simple_byte           10     6 (average)
 15102                           ;	Chosen strategy is simple_byte
 15103  011B10  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 15104  011B12  0A01               	xorlw	1	; case 1
 15105  011B14  B4D8               	btfsc	status,2,c
 15106  011B16  D7E5               	goto	l2500
 15107  011B18  0A0B               	xorlw	11	; case 10
 15108  011B1A  B4D8               	btfsc	status,2,c
 15109  011B1C  D7DD               	goto	l2499
 15110  011B1E  0A6E               	xorlw	110	; case 100
 15111  011B20  B4D8               	btfsc	status,2,c
 15112  011B22  D7D5               	goto	l2498
 15113  011B24  D7E3               	goto	l2501
 15114  011B26                     l23588:
 15115                           
 15116                           ; BSR set to: 0
 15117                           ; Switch size 1, requested type "space"
 15118                           ; Number of cases is 1, Range of values is 232 to 232
 15119                           ; switch strategies available:
 15120                           ; Name         Instructions Cycles
 15121                           ; simple_byte            4     3 (average)
 15122                           ;	Chosen strategy is simple_byte
 15123  011B26  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 15124  011B28  0AE8               	xorlw	232	; case 232
 15125  011B2A  B4D8               	btfsc	status,2,c
 15126  011B2C  D7CA               	goto	l2496
 15127  011B2E  D7DE               	goto	l2501
 15128  011B30                     __end_of__encoder_next_arc_step_size:
 15129                           	opt stack 0
 15130                           tblptru	equ	0xFF8
 15131                           tblptrh	equ	0xFF7
 15132                           tblptrl	equ	0xFF6
 15133                           tablat	equ	0xFF5
 15134                           prodh	equ	0xFF4
 15135                           prodl	equ	0xFF3
 15136                           intcon	equ	0xFF2
 15137                           postinc0	equ	0xFEE
 15138                           wreg	equ	0xFE8
 15139                           postdec1	equ	0xFE5
 15140                           plusw1	equ	0xFE3
 15141                           fsr1h	equ	0xFE2
 15142                           fsr1l	equ	0xFE1
 15143                           indf2	equ	0xFDF
 15144                           postinc2	equ	0xFDE
 15145                           postdec2	equ	0xFDD
 15146                           plusw2	equ	0xFDB
 15147                           fsr2h	equ	0xFDA
 15148                           fsr2l	equ	0xFD9
 15149                           status	equ	0xFD8
 15150                           
 15151 ;; *************** function __divide_jump_size_increment *****************
 15152 ;; Defined at:
 15153 ;;		line 73 in file "encoder.c"
 15154 ;; Parameters:    Size  Location     Type
 15155 ;;		None
 15156 ;; Auto vars:     Size  Location     Type
 15157 ;;		None
 15158 ;; Return value:  Size  Location     Type
 15159 ;;                  1    wreg      void 
 15160 ;; Registers used:
 15161 ;;		wreg, status,2, status,0
 15162 ;; Tracked objects:
 15163 ;;		On entry : 0/0
 15164 ;;		On exit  : 0/0
 15165 ;;		Unchanged: 0/0
 15166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15169 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15170 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15171 ;;Total ram usage:        1 bytes
 15172 ;; Hardware stack levels used:    1
 15173 ;; Hardware stack levels required when called:   10
 15174 ;; This function calls:
 15175 ;;		Nothing
 15176 ;; This function is called by:
 15177 ;;		_encoder_statemachine
 15178 ;; This function uses a non-reentrant model
 15179 ;;
 15180                           
 15181                           	psect	text52
 15182  0127E2                     __ptext52:
 15183                           	opt stack 0
 15184  0127E2                     __divide_jump_size_increment:
 15185                           	opt stack 19
 15186                           
 15187                           ;encoder.c: 75: ++os.divide_jump_size;
 15188                           
 15189                           ; BSR set to: 0
 15190                           ;incstack = 0
 15191  0127E2  0100               	movlb	0	; () banked
 15192  0127E4  4BE8               	infsnz	(_os+24)& (0+255),f,b	;volatile
 15193  0127E6  2BE9               	incf	(_os+25)& (0+255),f,b	;volatile
 15194                           
 15195                           ; BSR set to: 0
 15196                           ;encoder.c: 76: if(os.divide_jump_size==0)
 15197  0127E8  51E8               	movf	(_os+24)& (0+255),w,b	;volatile
 15198  0127EA  11E9               	iorwf	(_os+25)& (0+255),w,b	;volatile
 15199  0127EC  A4D8               	btfss	status,2,c
 15200  0127EE  D004               	goto	l2505
 15201                           
 15202                           ; BSR set to: 0
 15203                           ;encoder.c: 77: os.divide_jump_size = 1;
 15204  0127F0  0E00               	movlw	0
 15205  0127F2  6FE9               	movwf	(_os+25)& (0+255),b	;volatile
 15206  0127F4  0E01               	movlw	1
 15207  0127F6  6FE8               	movwf	(_os+24)& (0+255),b	;volatile
 15208  0127F8                     l2505:
 15209                           
 15210                           ; BSR set to: 0
 15211                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 15212                           
 15213                           ; BSR set to: 0
 15214  0127F8  51E3               	movf	(_os+19)& (0+255),w,b	;volatile
 15215  0127FA  5DE8               	subwf	(_os+24)& (0+255),w,b	;volatile
 15216  0127FC  51E9               	movf	(_os+25)& (0+255),w,b	;volatile
 15217  0127FE  0A80               	xorlw	128
 15218  012800  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 15219  012802  51E4               	movf	(_os+20)& (0+255),w,b	;volatile
 15220  012804  0A80               	xorlw	128
 15221  012806  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 15222  012808  A0D8               	btfss	status,0,c
 15223  01280A  0012               	return	
 15224                           
 15225                           ; BSR set to: 0
 15226                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 15227  01280C  0EFF               	movlw	255
 15228  01280E  25E3               	addwf	(_os+19)& (0+255),w,b	;volatile
 15229  012810  6FE8               	movwf	(_os+24)& (0+255),b	;volatile
 15230  012812  0EFF               	movlw	255
 15231  012814  21E4               	addwfc	(_os+20)& (0+255),w,b	;volatile
 15232  012816  6FE9               	movwf	(_os+25)& (0+255),b	;volatile
 15233  012818  0012               	return	
 15234  01281A                     __end_of__divide_jump_size_increment:
 15235                           	opt stack 0
 15236                           tblptru	equ	0xFF8
 15237                           tblptrh	equ	0xFF7
 15238                           tblptrl	equ	0xFF6
 15239                           tablat	equ	0xFF5
 15240                           prodh	equ	0xFF4
 15241                           prodl	equ	0xFF3
 15242                           intcon	equ	0xFF2
 15243                           postinc0	equ	0xFEE
 15244                           wreg	equ	0xFE8
 15245                           postdec1	equ	0xFE5
 15246                           plusw1	equ	0xFE3
 15247                           fsr1h	equ	0xFE2
 15248                           fsr1l	equ	0xFE1
 15249                           indf2	equ	0xFDF
 15250                           postinc2	equ	0xFDE
 15251                           postdec2	equ	0xFDD
 15252                           plusw2	equ	0xFDB
 15253                           fsr2h	equ	0xFDA
 15254                           fsr2l	equ	0xFD9
 15255                           status	equ	0xFD8
 15256                           
 15257 ;; *************** function __divide_jump_size_decrement *****************
 15258 ;; Defined at:
 15259 ;;		line 82 in file "encoder.c"
 15260 ;; Parameters:    Size  Location     Type
 15261 ;;		None
 15262 ;; Auto vars:     Size  Location     Type
 15263 ;;		None
 15264 ;; Return value:  Size  Location     Type
 15265 ;;                  1    wreg      void 
 15266 ;; Registers used:
 15267 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15268 ;; Tracked objects:
 15269 ;;		On entry : 0/0
 15270 ;;		On exit  : 0/0
 15271 ;;		Unchanged: 0/0
 15272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15275 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15276 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15277 ;;Total ram usage:        3 bytes
 15278 ;; Hardware stack levels used:    1
 15279 ;; Hardware stack levels required when called:   10
 15280 ;; This function calls:
 15281 ;;		Nothing
 15282 ;; This function is called by:
 15283 ;;		_encoder_statemachine
 15284 ;; This function uses a non-reentrant model
 15285 ;;
 15286                           
 15287                           	psect	text53
 15288  011DF2                     __ptext53:
 15289                           	opt stack 0
 15290  011DF2                     __divide_jump_size_decrement:
 15291                           	opt stack 19
 15292                           
 15293                           ;encoder.c: 84: --os.divide_jump_size;
 15294                           
 15295                           ; BSR set to: 0
 15296                           ;incstack = 0
 15297  011DF2  0100               	movlb	0	; () banked
 15298  011DF4  07E8               	decf	(_os+24)& (0+255),f,b	;volatile
 15299  011DF6  A0D8               	btfss	status,0,c
 15300  011DF8  07E9               	decf	(_os+25)& (0+255),f,b	;volatile
 15301                           
 15302                           ; BSR set to: 0
 15303                           ;encoder.c: 85: if(os.divide_jump_size==0)
 15304  011DFA  51E8               	movf	(_os+24)& (0+255),w,b	;volatile
 15305  011DFC  11E9               	iorwf	(_os+25)& (0+255),w,b	;volatile
 15306  011DFE  A4D8               	btfss	status,2,c
 15307  011E00  D002               	goto	l2510
 15308                           
 15309                           ; BSR set to: 0
 15310                           ;encoder.c: 86: os.divide_jump_size = -1;
 15311  011E02  69E8               	setf	(_os+24)& (0+255),b	;volatile
 15312  011E04  69E9               	setf	(_os+25)& (0+255),b	;volatile
 15313  011E06                     l2510:
 15314                           
 15315                           ; BSR set to: 0
 15316                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 15317                           
 15318                           ; BSR set to: 0
 15319  011E06  EE20  F0E3         	lfsr	2,_os+19	;volatile
 15320  011E0A  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 15321  011E0E  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 15322  011E12  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 15323  011E14  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 15324  011E16  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 15325  011E18  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 15326  011E1A  51E8               	movf	(_os+24)& (0+255),w,b	;volatile
 15327  011E1C  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 15328  011E1E  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 15329  011E20  0A80               	xorlw	128
 15330  011E22  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 15331  011E24  51E9               	movf	(_os+25)& (0+255),w,b	;volatile
 15332  011E26  0A80               	xorlw	128
 15333  011E28  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 15334  011E2A  A0D8               	btfss	status,0,c
 15335  011E2C  0012               	return	
 15336                           
 15337                           ; BSR set to: 0
 15338                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 15339  011E2E  EE20  F0E3         	lfsr	2,_os+19	;volatile
 15340  011E32  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 15341  011E36  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 15342  011E3A  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 15343  011E3C  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 15344  011E3E  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 15345  011E40  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 15346  011E42  0E01               	movlw	1
 15347  011E44  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 15348  011E46  6FE8               	movwf	(_os+24)& (0+255),b	;volatile
 15349  011E48  0E00               	movlw	0
 15350  011E4A  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 15351  011E4C  6FE9               	movwf	(_os+25)& (0+255),b	;volatile
 15352  011E4E  0012               	return	
 15353  011E50                     __end_of__divide_jump_size_decrement:
 15354                           	opt stack 0
 15355                           tblptru	equ	0xFF8
 15356                           tblptrh	equ	0xFF7
 15357                           tblptrl	equ	0xFF6
 15358                           tablat	equ	0xFF5
 15359                           prodh	equ	0xFF4
 15360                           prodl	equ	0xFF3
 15361                           intcon	equ	0xFF2
 15362                           postinc0	equ	0xFEE
 15363                           wreg	equ	0xFE8
 15364                           postdec1	equ	0xFE5
 15365                           plusw1	equ	0xFE3
 15366                           fsr1h	equ	0xFE2
 15367                           fsr1l	equ	0xFE1
 15368                           indf2	equ	0xFDF
 15369                           postinc2	equ	0xFDE
 15370                           postdec2	equ	0xFDD
 15371                           plusw2	equ	0xFDB
 15372                           fsr2h	equ	0xFDA
 15373                           fsr2l	equ	0xFD9
 15374                           status	equ	0xFD8
 15375                           
 15376 ;; *************** function _display_prepare *****************
 15377 ;; Defined at:
 15378 ;;		line 230 in file "display.c"
 15379 ;; Parameters:    Size  Location     Type
 15380 ;;		None
 15381 ;; Auto vars:     Size  Location     Type
 15382 ;;  temp           10   94[BANK0 ] unsigned char [10]
 15383 ;;  cntr            1  105[BANK0 ] unsigned char 
 15384 ;;  space           1  104[BANK0 ] unsigned char 
 15385 ;; Return value:  Size  Location     Type
 15386 ;;                  1    wreg      void 
 15387 ;; Registers used:
 15388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15389 ;; Tracked objects:
 15390 ;;		On entry : 0/0
 15391 ;;		On exit  : 0/0
 15392 ;;		Unchanged: 0/0
 15393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15395 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15396 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15397 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15398 ;;Total ram usage:       14 bytes
 15399 ;; Hardware stack levels used:    1
 15400 ;; Hardware stack levels required when called:   15
 15401 ;; This function calls:
 15402 ;;		__display_clear
 15403 ;;		__display_itoa
 15404 ;;		__display_itoa_long
 15405 ;;		__display_padded_itoa
 15406 ;;		__display_signed_itoa
 15407 ;;		_memcpy
 15408 ;;		_motor_speed_from_index
 15409 ;;		_strlen
 15410 ;; This function is called by:
 15411 ;;		_main
 15412 ;; This function uses a non-reentrant model
 15413 ;;
 15414                           
 15415                           	psect	text54
 15416  00A238                     __ptext54:
 15417                           	opt stack 0
 15418  00A238                     _display_prepare:
 15419                           	opt stack 15
 15420                           
 15421                           ;display.c: 232: uint8_t cntr;;display.c: 233: uint8_t space;;display.c: 234: char temp[
      +                          10];;display.c: 236: switch(os.displayState & 0xF0)
 15422                           
 15423                           ; BSR set to: 0
 15424                           ;incstack = 0
 15425  00A238  EF05  F057         	goto	l1326
 15426  00A23C                     
 15427                           ;display.c: 240: memcpy(display_content, dc_main, sizeof display_content);
 15428  00A23C  0E78               	movlw	low _display_content
 15429  00A23E  0100               	movlb	0	; () banked
 15430  00A240  6F60               	movwf	memcpy@d1& (0+255),b
 15431  00A242  0E02               	movlw	high _display_content
 15432  00A244  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 15433  00A246  0E6E               	movlw	low _dc_main
 15434  00A248  6F62               	movwf	memcpy@s1& (0+255),b
 15435  00A24A  0EA0               	movlw	high _dc_main
 15436  00A24C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 15437  00A24E  0E00               	movlw	0
 15438  00A250  6F65               	movwf	(memcpy@n+1)& (0+255),b
 15439  00A252  0E50               	movlw	80
 15440  00A254  6F64               	movwf	memcpy@n& (0+255),b
 15441  00A256  ECC9  F08E         	call	_memcpy	;wreg free
 15442                           
 15443                           ;display.c: 241: switch(os.displayState)
 15444  00A25A  D00F               	goto	l1328
 15445  00A25C                     
 15446                           ;display.c: 244: display_content[1][0] = '>';
 15447  00A25C  0E3E               	movlw	62
 15448  00A25E  0102               	movlb	2	; () banked
 15449  00A260  6F8C               	movwf	(_display_content+20)& (0+255),b
 15450                           
 15451                           ;display.c: 245: break;
 15452  00A262  EF32  F057         	goto	l1335
 15453  00A266                     
 15454                           ;display.c: 247: display_content[1][9] = '>';
 15455                           
 15456                           ; BSR set to: 2
 15457  00A266  0E3E               	movlw	62
 15458  00A268  0102               	movlb	2	; () banked
 15459  00A26A  6F95               	movwf	(_display_content+29)& (0+255),b
 15460                           
 15461                           ;display.c: 248: break;
 15462  00A26C  EF32  F057         	goto	l1335
 15463  00A270                     
 15464                           ;display.c: 253: display_content[2][9] = '>';
 15465                           
 15466                           ; BSR set to: 2
 15467  00A270  0E3E               	movlw	62
 15468  00A272  0102               	movlb	2	; () banked
 15469  00A274  6FA9               	movwf	(_display_content+49)& (0+255),b
 15470                           
 15471                           ;display.c: 254: break;
 15472  00A276  EF32  F057         	goto	l1335
 15473  00A27A                     l1328:
 15474                           
 15475                           ; BSR set to: 2
 15476  00A27A  0100               	movlb	0	; () banked
 15477  00A27C  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 15478                           
 15479                           ; Switch size 1, requested type "space"
 15480                           ; Number of cases is 5, Range of values is 1 to 5
 15481                           ; switch strategies available:
 15482                           ; Name         Instructions Cycles
 15483                           ; simple_byte           16     9 (average)
 15484                           ;	Chosen strategy is simple_byte
 15485  00A27E  0A01               	xorlw	1	; case 1
 15486  00A280  B4D8               	btfsc	status,2,c
 15487  00A282  D7EC               	goto	l1329
 15488  00A284  0A03               	xorlw	3	; case 2
 15489  00A286  B4D8               	btfsc	status,2,c
 15490  00A288  D7EE               	goto	l1331
 15491  00A28A  0A01               	xorlw	1	; case 3
 15492  00A28C  B4D8               	btfsc	status,2,c
 15493  00A28E  D064               	goto	l1348
 15494  00A290  0A07               	xorlw	7	; case 4
 15495  00A292  B4D8               	btfsc	status,2,c
 15496  00A294  D7ED               	goto	l1333
 15497  00A296  0A01               	xorlw	1	; case 5
 15498  00A298  D06F               	goto	L80
 15499  00A29A                     
 15500                           ; BSR set to: 0
 15501                           ;display.c: 262: memcpy(display_content, dc_setup1, sizeof display_content);
 15502                           
 15503                           ; BSR set to: 0
 15504  00A29A  0E78               	movlw	low _display_content
 15505  00A29C  6F60               	movwf	memcpy@d1& (0+255),b
 15506  00A29E  0E02               	movlw	high _display_content
 15507  00A2A0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 15508  00A2A2  0E1E               	movlw	low _dc_setup1
 15509  00A2A4  6F62               	movwf	memcpy@s1& (0+255),b
 15510  00A2A6  0EA0               	movlw	high _dc_setup1
 15511  00A2A8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 15512  00A2AA  0E00               	movlw	0
 15513  00A2AC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 15514  00A2AE  0E50               	movlw	80
 15515  00A2B0  6F64               	movwf	memcpy@n& (0+255),b
 15516  00A2B2  ECC9  F08E         	call	_memcpy	;wreg free
 15517                           
 15518                           ;display.c: 263: _display_itoa(os.setup_step_size, 2, temp);
 15519  00A2B6  C0E0  F095         	movff	_os+16,__display_itoa@value	;volatile
 15520  00A2BA  C0E1  F096         	movff	_os+17,__display_itoa@value+1	;volatile
 15521  00A2BE  0E02               	movlw	2
 15522  00A2C0  0100               	movlb	0	; () banked
 15523  00A2C2  6F97               	movwf	__display_itoa@decimals& (0+255),b
 15524  00A2C4  0EBE               	movlw	low display_prepare@temp
 15525  00A2C6  6F98               	movwf	__display_itoa@text& (0+255),b
 15526  00A2C8  0E00               	movlw	high display_prepare@temp
 15527  00A2CA  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 15528  00A2CC  EC92  F06B         	call	__display_itoa	;wreg free
 15529                           
 15530                           ;display.c: 264: if(os.setup_step_size>999)
 15531  00A2D0  0EE8               	movlw	232
 15532  00A2D2  0100               	movlb	0	; () banked
 15533  00A2D4  5DE0               	subwf	(_os+16)& (0+255),w,b	;volatile
 15534  00A2D6  0E03               	movlw	3
 15535  00A2D8  59E1               	subwfb	(_os+17)& (0+255),w,b	;volatile
 15536  00A2DA  A0D8               	btfss	status,0,c
 15537  00A2DC  D002               	goto	l1337
 15538                           
 15539                           ; BSR set to: 0
 15540                           ;display.c: 265: space = 0;
 15541  00A2DE  0E00               	movlw	0
 15542  00A2E0  D001               	goto	L18
 15543  00A2E2                     l1337:
 15544                           
 15545                           ; BSR set to: 0
 15546                           ;display.c: 266: else;display.c: 267: space = 1;
 15547                           
 15548                           ; BSR set to: 0
 15549  00A2E2  0E01               	movlw	1
 15550  00A2E4                     L18:
 15551  00A2E4  6FC8               	movwf	display_prepare@space& (0+255),b
 15552                           
 15553                           ; BSR set to: 0
 15554                           ;display.c: 268: for(cntr=0; temp[cntr]; ++cntr)
 15555  00A2E6  0E00               	movlw	0
 15556  00A2E8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 15557  00A2EA  D018               	goto	l1339
 15558  00A2EC                     
 15559                           ; BSR set to: 0
 15560                           ;display.c: 269: {;display.c: 270: display_content[3][space+cntr] = temp[cntr];
 15561                           
 15562                           ; BSR set to: 0
 15563  00A2EC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15564  00A2EE  0D01               	mullw	1
 15565  00A2F0  0EBE               	movlw	low display_prepare@temp
 15566  00A2F2  24F3               	addwf	prodl,w,c
 15567  00A2F4  6ED9               	movwf	fsr2l,c
 15568  00A2F6  0E00               	movlw	high display_prepare@temp
 15569  00A2F8  20F4               	addwfc	prodh,w,c
 15570  00A2FA  6EDA               	movwf	fsr2h,c
 15571  00A2FC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15572  00A2FE  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 15573  00A302  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 15574  00A304  27BC               	addwf	??_display_prepare& (0+255),f,b
 15575  00A306  0E00               	movlw	0
 15576  00A308  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 15577  00A30A  0EB4               	movlw	low (_display_content+60)
 15578  00A30C  25BC               	addwf	??_display_prepare& (0+255),w,b
 15579  00A30E  6EE1               	movwf	fsr1l,c
 15580  00A310  0E02               	movlw	high (_display_content+60)
 15581  00A312  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 15582  00A314  6EE2               	movwf	fsr1h,c
 15583  00A316  CFDF FFE7          	movff	indf2,indf1
 15584                           
 15585                           ; BSR set to: 0
 15586  00A31A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 15587  00A31C                     l1339:
 15588                           
 15589                           ; BSR set to: 0
 15590                           
 15591                           ; BSR set to: 0
 15592  00A31C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15593  00A31E  0D01               	mullw	1
 15594  00A320  0EBE               	movlw	low display_prepare@temp
 15595  00A322  24F3               	addwf	prodl,w,c
 15596  00A324  6ED9               	movwf	fsr2l,c
 15597  00A326  0E00               	movlw	high display_prepare@temp
 15598  00A328  20F4               	addwfc	prodh,w,c
 15599  00A32A  6EDA               	movwf	fsr2h,c
 15600  00A32C  50DF               	movf	indf2,w,c
 15601  00A32E  A4D8               	btfss	status,2,c
 15602  00A330  D7DD               	goto	l1340
 15603                           
 15604                           ; BSR set to: 2
 15605                           
 15606                           ; BSR set to: 2
 15607                           ;display.c: 280: }
 15608                           
 15609                           ;display.c: 279: break;
 15610                           
 15611                           ;display.c: 278: display_content[3][12] = '>';
 15612                           
 15613                           ; BSR set to: 2
 15614                           
 15615                           ;display.c: 277: case DISPLAY_STATE_SETUP1_CANCEL:
 15616                           
 15617                           ;display.c: 276: break;
 15618                           
 15619                           ; BSR set to: 0
 15620                           ;display.c: 275: display_content[2][12] = '>';
 15621                           
 15622                           ; BSR set to: 0
 15623                           
 15624                           ;display.c: 273: {;display.c: 274: case DISPLAY_STATE_SETUP1_CONFIRM:
 15625                           
 15626                           ; BSR set to: 0
 15627                           ;display.c: 271: };display.c: 272: switch(os.displayState)
 15628  00A332  0100               	movlb	0	; () banked
 15629  00A334  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 15630                           
 15631                           ; Switch size 1, requested type "space"
 15632                           ; Number of cases is 2, Range of values is 17 to 18
 15633                           ; switch strategies available:
 15634                           ; Name         Instructions Cycles
 15635                           ; simple_byte            7     4 (average)
 15636                           ;	Chosen strategy is simple_byte
 15637  00A336  0A11               	xorlw	17	; case 17
 15638  00A338  D08C               	goto	L24
 15639  00A33A                     
 15640                           ; BSR set to: 0
 15641                           ;display.c: 284: memcpy(display_content, dc_setup2, sizeof display_content);
 15642                           
 15643                           ; BSR set to: 0
 15644  00A33A  0E78               	movlw	low _display_content
 15645  00A33C  6F60               	movwf	memcpy@d1& (0+255),b
 15646  00A33E  0E02               	movlw	high _display_content
 15647  00A340  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 15648  00A342  0ECE               	movlw	low _dc_setup2
 15649  00A344  6F62               	movwf	memcpy@s1& (0+255),b
 15650  00A346  0E9F               	movlw	high _dc_setup2
 15651  00A348  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 15652  00A34A  0E00               	movlw	0
 15653  00A34C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 15654  00A34E  0E50               	movlw	80
 15655  00A350  6F64               	movwf	memcpy@n& (0+255),b
 15656  00A352  ECC9  F08E         	call	_memcpy	;wreg free
 15657                           
 15658                           ;display.c: 285: switch(os.displayState)
 15659  00A356  D00A               	goto	l1347
 15660  00A358                     l1348:
 15661                           
 15662                           ;display.c: 288: display_content[2][0] = '>';
 15663  00A358  0E3E               	movlw	62
 15664  00A35A  0102               	movlb	2	; () banked
 15665  00A35C  6FA0               	movwf	(_display_content+40)& (0+255),b
 15666                           
 15667                           ;display.c: 289: break;
 15668  00A35E  EF32  F057         	goto	l1335
 15669  00A362                     l1350:
 15670                           
 15671                           ;display.c: 291: display_content[3][0] = '>';
 15672                           
 15673                           ; BSR set to: 2
 15674  00A362  0E3E               	movlw	62
 15675  00A364  0102               	movlb	2	; () banked
 15676  00A366  6FB4               	movwf	(_display_content+60)& (0+255),b
 15677                           
 15678                           ; BSR set to: 2
 15679                           ;display.c: 293: }
 15680                           
 15681                           ;display.c: 292: break;
 15682  00A368  EF32  F057         	goto	l1335
 15683  00A36C                     l1347:
 15684                           
 15685                           ; BSR set to: 2
 15686  00A36C  0100               	movlb	0	; () banked
 15687  00A36E  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 15688                           
 15689                           ; Switch size 1, requested type "space"
 15690                           ; Number of cases is 2, Range of values is 33 to 34
 15691                           ; switch strategies available:
 15692                           ; Name         Instructions Cycles
 15693                           ; simple_byte            7     4 (average)
 15694                           ;	Chosen strategy is simple_byte
 15695  00A370  0A21               	xorlw	33	; case 33
 15696  00A372  B4D8               	btfsc	status,2,c
 15697  00A374  D7F1               	goto	l1348
 15698  00A376  0A03               	xorlw	3	; case 34
 15699  00A378                     L80:
 15700  00A378  B4D8               	btfsc	status,2,c
 15701  00A37A  D7F3               	goto	l1350
 15702                           
 15703                           ; BSR set to: 0
 15704                           ;display.c: 294: break;
 15705  00A37C  EF32  F057         	goto	l1335
 15706  00A380                     
 15707                           ; BSR set to: 0
 15708                           ;display.c: 297: memcpy(display_content, dc_divide1, sizeof display_content);
 15709                           
 15710                           ; BSR set to: 0
 15711  00A380  0E78               	movlw	low _display_content
 15712  00A382  6F60               	movwf	memcpy@d1& (0+255),b
 15713  00A384  0E02               	movlw	high _display_content
 15714  00A386  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 15715  00A388  0E7E               	movlw	low _dc_divide1
 15716  00A38A  6F62               	movwf	memcpy@s1& (0+255),b
 15717  00A38C  0E9F               	movlw	high _dc_divide1
 15718  00A38E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 15719  00A390  0E00               	movlw	0
 15720  00A392  6F65               	movwf	(memcpy@n+1)& (0+255),b
 15721  00A394  0E50               	movlw	80
 15722  00A396  6F64               	movwf	memcpy@n& (0+255),b
 15723  00A398  ECC9  F08E         	call	_memcpy	;wreg free
 15724                           
 15725                           ;display.c: 299: _display_padded_itoa(os.divide_step_size, 3, temp);
 15726  00A39C  C0E5  F078         	movff	_os+21,__display_padded_itoa@value	;volatile
 15727  00A3A0  0100               	movlb	0	; () banked
 15728  00A3A2  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 15729  00A3A4  0E03               	movlw	3
 15730  00A3A6  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 15731  00A3A8  0EBE               	movlw	low display_prepare@temp
 15732  00A3AA  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 15733  00A3AC  0E00               	movlw	high display_prepare@temp
 15734  00A3AE  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 15735  00A3B0  EC32  F081         	call	__display_padded_itoa	;wreg free
 15736                           
 15737                           ;display.c: 300: for(cntr=0; cntr<3; ++cntr)
 15738  00A3B4  0E00               	movlw	0
 15739  00A3B6  0100               	movlb	0	; () banked
 15740  00A3B8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 15741  00A3BA                     l22178:
 15742                           
 15743                           ; BSR set to: 0
 15744  00A3BA  0E02               	movlw	2
 15745  00A3BC  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 15746  00A3BE  D001               	goto	l1352
 15747  00A3C0  D014               	goto	u22840
 15748  00A3C2                     l1352:
 15749                           
 15750                           ; BSR set to: 0
 15751                           ;display.c: 301: {;display.c: 302: display_content[2][cntr] = temp[cntr];
 15752                           
 15753                           ; BSR set to: 0
 15754  00A3C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15755  00A3C4  0D01               	mullw	1
 15756  00A3C6  0EBE               	movlw	low display_prepare@temp
 15757  00A3C8  24F3               	addwf	prodl,w,c
 15758  00A3CA  6ED9               	movwf	fsr2l,c
 15759  00A3CC  0E00               	movlw	high display_prepare@temp
 15760  00A3CE  20F4               	addwfc	prodh,w,c
 15761  00A3D0  6EDA               	movwf	fsr2h,c
 15762  00A3D2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15763  00A3D4  0D01               	mullw	1
 15764  00A3D6  0EA0               	movlw	low (_display_content+40)
 15765  00A3D8  24F3               	addwf	prodl,w,c
 15766  00A3DA  6EE1               	movwf	fsr1l,c
 15767  00A3DC  0E02               	movlw	high (_display_content+40)
 15768  00A3DE  20F4               	addwfc	prodh,w,c
 15769  00A3E0  6EE2               	movwf	fsr1h,c
 15770  00A3E2  CFDF FFE7          	movff	indf2,indf1
 15771                           
 15772                           ; BSR set to: 0
 15773  00A3E6  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 15774  00A3E8  D7E8               	goto	l22178
 15775  00A3EA                     u22840:
 15776                           
 15777                           ; BSR set to: 0
 15778                           ;display.c: 303: };display.c: 305: _display_padded_itoa(os.division, 4, temp);
 15779                           
 15780                           ; BSR set to: 0
 15781  00A3EA  C0E3  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 15782  00A3EE  C0E4  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 15783  00A3F2  0E04               	movlw	4
 15784  00A3F4  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 15785  00A3F6  0EBE               	movlw	low display_prepare@temp
 15786  00A3F8  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 15787  00A3FA  0E00               	movlw	high display_prepare@temp
 15788  00A3FC  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 15789  00A3FE  EC32  F081         	call	__display_padded_itoa	;wreg free
 15790                           
 15791                           ;display.c: 306: for(cntr=0; cntr<4; ++cntr)
 15792  00A402  0E00               	movlw	0
 15793  00A404  0100               	movlb	0	; () banked
 15794  00A406  6FC9               	movwf	display_prepare@cntr& (0+255),b
 15795  00A408                     l22192:
 15796                           
 15797                           ; BSR set to: 0
 15798  00A408  0E03               	movlw	3
 15799  00A40A  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 15800  00A40C  D001               	goto	l1354
 15801  00A40E  D01E               	goto	l1356
 15802  00A410                     l1354:
 15803                           
 15804                           ; BSR set to: 0
 15805                           ;display.c: 307: {;display.c: 308: display_content[3][cntr] = temp[cntr];
 15806                           
 15807                           ; BSR set to: 0
 15808  00A410  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15809  00A412  0D01               	mullw	1
 15810  00A414  0EBE               	movlw	low display_prepare@temp
 15811  00A416  24F3               	addwf	prodl,w,c
 15812  00A418  6ED9               	movwf	fsr2l,c
 15813  00A41A  0E00               	movlw	high display_prepare@temp
 15814  00A41C  20F4               	addwfc	prodh,w,c
 15815  00A41E  6EDA               	movwf	fsr2h,c
 15816  00A420  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15817  00A422  0D01               	mullw	1
 15818  00A424  0EB4               	movlw	low (_display_content+60)
 15819  00A426  24F3               	addwf	prodl,w,c
 15820  00A428  6EE1               	movwf	fsr1l,c
 15821  00A42A  0E02               	movlw	high (_display_content+60)
 15822  00A42C  20F4               	addwfc	prodh,w,c
 15823  00A42E  6EE2               	movwf	fsr1h,c
 15824  00A430  CFDF FFE7          	movff	indf2,indf1
 15825                           
 15826                           ; BSR set to: 0
 15827  00A434  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 15828  00A436  D7E8               	goto	l22192
 15829  00A438                     
 15830                           ; BSR set to: 0
 15831                           ;display.c: 313: display_content[2][12] = '>';
 15832                           
 15833                           ; BSR set to: 0
 15834  00A438  0E3E               	movlw	62
 15835  00A43A  0102               	movlb	2	; () banked
 15836  00A43C  6FAC               	movwf	(_display_content+52)& (0+255),b
 15837                           
 15838                           ;display.c: 314: break;
 15839  00A43E  EF32  F057         	goto	l1335
 15840  00A442                     
 15841                           ;display.c: 316: display_content[3][12] = '>';
 15842                           
 15843                           ; BSR set to: 2
 15844  00A442  0E3E               	movlw	62
 15845  00A444  0102               	movlb	2	; () banked
 15846  00A446  6FC0               	movwf	(_display_content+72)& (0+255),b
 15847                           
 15848                           ; BSR set to: 2
 15849                           ;display.c: 318: }
 15850                           
 15851                           ;display.c: 317: break;
 15852  00A448  EF32  F057         	goto	l1335
 15853  00A44C                     l1356:
 15854                           
 15855                           ; BSR set to: 2
 15856  00A44C  0100               	movlb	0	; () banked
 15857  00A44E  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 15858                           
 15859                           ; Switch size 1, requested type "space"
 15860                           ; Number of cases is 2, Range of values is 49 to 50
 15861                           ; switch strategies available:
 15862                           ; Name         Instructions Cycles
 15863                           ; simple_byte            7     4 (average)
 15864                           ;	Chosen strategy is simple_byte
 15865  00A450  0A31               	xorlw	49	; case 49
 15866  00A452                     L24:
 15867  00A452  B4D8               	btfsc	status,2,c
 15868  00A454  D7F1               	goto	l1357
 15869  00A456  0A03               	xorlw	3	; case 50
 15870  00A458  B4D8               	btfsc	status,2,c
 15871  00A45A  D7F3               	goto	l1359
 15872                           
 15873                           ; BSR set to: 0
 15874                           ;display.c: 319: break;
 15875  00A45C  EF32  F057         	goto	l1335
 15876  00A460                     
 15877                           ; BSR set to: 0
 15878                           ;display.c: 322: memcpy(display_content, dc_divide2, sizeof display_content);
 15879                           
 15880                           ; BSR set to: 0
 15881  00A460  0E78               	movlw	low _display_content
 15882  00A462  6F60               	movwf	memcpy@d1& (0+255),b
 15883  00A464  0E02               	movlw	high _display_content
 15884  00A466  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 15885  00A468  0E2E               	movlw	low _dc_divide2
 15886  00A46A  6F62               	movwf	memcpy@s1& (0+255),b
 15887  00A46C  0E9F               	movlw	high _dc_divide2
 15888  00A46E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 15889  00A470  0E00               	movlw	0
 15890  00A472  6F65               	movwf	(memcpy@n+1)& (0+255),b
 15891  00A474  0E50               	movlw	80
 15892  00A476  6F64               	movwf	memcpy@n& (0+255),b
 15893  00A478  ECC9  F08E         	call	_memcpy	;wreg free
 15894                           
 15895                           ;display.c: 324: _display_padded_itoa(os.division, 0, temp);
 15896  00A47C  C0E3  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 15897  00A480  C0E4  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 15898  00A484  0E00               	movlw	0
 15899  00A486  0100               	movlb	0	; () banked
 15900  00A488  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 15901  00A48A  0EBE               	movlw	low display_prepare@temp
 15902  00A48C  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 15903  00A48E  0E00               	movlw	high display_prepare@temp
 15904  00A490  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 15905  00A492  EC32  F081         	call	__display_padded_itoa	;wreg free
 15906                           
 15907                           ;display.c: 325: for(cntr=0; temp[cntr]; ++cntr)
 15908  00A496  0E00               	movlw	0
 15909  00A498  0100               	movlb	0	; () banked
 15910  00A49A  6FC9               	movwf	display_prepare@cntr& (0+255),b
 15911  00A49C  D018               	goto	l1361
 15912  00A49E                     
 15913                           ; BSR set to: 0
 15914                           ;display.c: 326: {;display.c: 327: display_content[0][cntr+8] = temp[cntr];
 15915                           
 15916                           ; BSR set to: 0
 15917  00A49E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15918  00A4A0  0D01               	mullw	1
 15919  00A4A2  0EBE               	movlw	low display_prepare@temp
 15920  00A4A4  24F3               	addwf	prodl,w,c
 15921  00A4A6  6ED9               	movwf	fsr2l,c
 15922  00A4A8  0E00               	movlw	high display_prepare@temp
 15923  00A4AA  20F4               	addwfc	prodh,w,c
 15924  00A4AC  6EDA               	movwf	fsr2h,c
 15925  00A4AE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15926  00A4B0  6FBC               	movwf	??_display_prepare& (0+255),b
 15927  00A4B2  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 15928  00A4B4  0E08               	movlw	8
 15929  00A4B6  27BC               	addwf	??_display_prepare& (0+255),f,b
 15930  00A4B8  0E00               	movlw	0
 15931  00A4BA  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 15932  00A4BC  0E78               	movlw	low _display_content
 15933  00A4BE  25BC               	addwf	??_display_prepare& (0+255),w,b
 15934  00A4C0  6EE1               	movwf	fsr1l,c
 15935  00A4C2  0E02               	movlw	high _display_content
 15936  00A4C4  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 15937  00A4C6  6EE2               	movwf	fsr1h,c
 15938  00A4C8  CFDF FFE7          	movff	indf2,indf1
 15939                           
 15940                           ; BSR set to: 0
 15941  00A4CC  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 15942  00A4CE                     l1361:
 15943                           
 15944                           ; BSR set to: 0
 15945                           
 15946                           ; BSR set to: 0
 15947  00A4CE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15948  00A4D0  0D01               	mullw	1
 15949  00A4D2  0EBE               	movlw	low display_prepare@temp
 15950  00A4D4  24F3               	addwf	prodl,w,c
 15951  00A4D6  6ED9               	movwf	fsr2l,c
 15952  00A4D8  0E00               	movlw	high display_prepare@temp
 15953  00A4DA  20F4               	addwfc	prodh,w,c
 15954  00A4DC  6EDA               	movwf	fsr2h,c
 15955  00A4DE  50DF               	movf	indf2,w,c
 15956  00A4E0  A4D8               	btfss	status,2,c
 15957  00A4E2  D7DD               	goto	l1362
 15958                           
 15959                           ; BSR set to: 0
 15960                           ;display.c: 328: };display.c: 330: display_content[0][cntr+8] = ',';
 15961                           
 15962                           ; BSR set to: 0
 15963  00A4E4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15964  00A4E6  6FBC               	movwf	??_display_prepare& (0+255),b
 15965  00A4E8  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 15966  00A4EA  0E08               	movlw	8
 15967  00A4EC  27BC               	addwf	??_display_prepare& (0+255),f,b
 15968  00A4EE  0E00               	movlw	0
 15969  00A4F0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 15970  00A4F2  0E78               	movlw	low _display_content
 15971  00A4F4  25BC               	addwf	??_display_prepare& (0+255),w,b
 15972  00A4F6  6ED9               	movwf	fsr2l,c
 15973  00A4F8  0E02               	movlw	high _display_content
 15974  00A4FA  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 15975  00A4FC  6EDA               	movwf	fsr2h,c
 15976  00A4FE  0E2C               	movlw	44
 15977  00A500  6EDF               	movwf	indf2,c
 15978                           
 15979                           ; BSR set to: 0
 15980                           ;display.c: 331: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 15981  00A502  29E2               	incf	(_os+18)& (0+255),w,b	;volatile
 15982  00A504  A4D8               	btfss	status,2,c
 15983  00A506  D023               	goto	l1364
 15984                           
 15985                           ; BSR set to: 0
 15986                           ;display.c: 332: {;display.c: 333: display_content[0][cntr+10] = 'C';
 15987  00A508  51C9               	movf	display_prepare@cntr& (0+255),w,b
 15988  00A50A  6FBC               	movwf	??_display_prepare& (0+255),b
 15989  00A50C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 15990  00A50E  0E0A               	movlw	10
 15991  00A510  27BC               	addwf	??_display_prepare& (0+255),f,b
 15992  00A512  0E00               	movlw	0
 15993  00A514  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 15994  00A516  0E78               	movlw	low _display_content
 15995  00A518  25BC               	addwf	??_display_prepare& (0+255),w,b
 15996  00A51A  6ED9               	movwf	fsr2l,c
 15997  00A51C  0E02               	movlw	high _display_content
 15998  00A51E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 15999  00A520  6EDA               	movwf	fsr2h,c
 16000  00A522  0E43               	movlw	67
 16001  00A524  6EDF               	movwf	indf2,c
 16002                           
 16003                           ;display.c: 334: display_content[0][cntr+11] = 'C';
 16004  00A526  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16005  00A528  6FBC               	movwf	??_display_prepare& (0+255),b
 16006  00A52A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16007  00A52C  0E0B               	movlw	11
 16008  00A52E  27BC               	addwf	??_display_prepare& (0+255),f,b
 16009  00A530  0E00               	movlw	0
 16010  00A532  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16011  00A534  0E78               	movlw	low _display_content
 16012  00A536  25BC               	addwf	??_display_prepare& (0+255),w,b
 16013  00A538  6ED9               	movwf	fsr2l,c
 16014  00A53A  0E02               	movlw	high _display_content
 16015  00A53C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16016  00A53E  6EDA               	movwf	fsr2h,c
 16017  00A540  0E43               	movlw	67
 16018  00A542  6EDF               	movwf	indf2,c
 16019                           
 16020                           ;display.c: 335: display_content[0][cntr+12] = 'W';
 16021  00A544  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16022  00A546  6FBC               	movwf	??_display_prepare& (0+255),b
 16023  00A548  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16024  00A54A  0E0C               	movlw	12
 16025  00A54C  D013               	goto	L25
 16026  00A54E                     l1364:
 16027                           
 16028                           ; BSR set to: 0
 16029                           ;display.c: 337: else;display.c: 338: {;display.c: 339: display_content[0][cntr+10] = 'C
      +                          ';
 16030                           
 16031                           ; BSR set to: 0
 16032  00A54E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16033  00A550  6FBC               	movwf	??_display_prepare& (0+255),b
 16034  00A552  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16035  00A554  0E0A               	movlw	10
 16036  00A556  27BC               	addwf	??_display_prepare& (0+255),f,b
 16037  00A558  0E00               	movlw	0
 16038  00A55A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16039  00A55C  0E78               	movlw	low _display_content
 16040  00A55E  25BC               	addwf	??_display_prepare& (0+255),w,b
 16041  00A560  6ED9               	movwf	fsr2l,c
 16042  00A562  0E02               	movlw	high _display_content
 16043  00A564  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16044  00A566  6EDA               	movwf	fsr2h,c
 16045  00A568  0E43               	movlw	67
 16046  00A56A  6EDF               	movwf	indf2,c
 16047                           
 16048                           ;display.c: 340: display_content[0][cntr+11] = 'W';
 16049  00A56C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16050  00A56E  6FBC               	movwf	??_display_prepare& (0+255),b
 16051  00A570  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16052  00A572  0E0B               	movlw	11
 16053  00A574                     L25:
 16054  00A574  27BC               	addwf	??_display_prepare& (0+255),f,b
 16055  00A576  0E00               	movlw	0
 16056  00A578  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16057  00A57A  0E78               	movlw	low _display_content
 16058  00A57C  25BC               	addwf	??_display_prepare& (0+255),w,b
 16059  00A57E  6ED9               	movwf	fsr2l,c
 16060  00A580  0E02               	movlw	high _display_content
 16061  00A582  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16062  00A584  6EDA               	movwf	fsr2h,c
 16063  00A586  0E57               	movlw	87
 16064  00A588  6EDF               	movwf	indf2,c
 16065                           
 16066                           ; BSR set to: 0
 16067                           ;display.c: 341: };display.c: 343: _display_padded_itoa(os.divide_position, 0, temp);
 16068                           
 16069                           ; BSR set to: 0
 16070  00A58A  C0E6  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 16071  00A58E  C0E7  F079         	movff	_os+23,__display_padded_itoa@value+1	;volatile
 16072  00A592  0E00               	movlw	0
 16073  00A594  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 16074  00A596  0EBE               	movlw	low display_prepare@temp
 16075  00A598  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 16076  00A59A  0E00               	movlw	high display_prepare@temp
 16077  00A59C  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 16078  00A59E  EC32  F081         	call	__display_padded_itoa	;wreg free
 16079                           
 16080                           ;display.c: 344: for(cntr=0; temp[cntr]; ++cntr)
 16081  00A5A2  0E00               	movlw	0
 16082  00A5A4  0100               	movlb	0	; () banked
 16083  00A5A6  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16084  00A5A8  D018               	goto	l1366
 16085  00A5AA                     
 16086                           ; BSR set to: 0
 16087                           ;display.c: 345: {;display.c: 346: display_content[1][cntr+5] = temp[cntr];
 16088                           
 16089                           ; BSR set to: 0
 16090  00A5AA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16091  00A5AC  0D01               	mullw	1
 16092  00A5AE  0EBE               	movlw	low display_prepare@temp
 16093  00A5B0  24F3               	addwf	prodl,w,c
 16094  00A5B2  6ED9               	movwf	fsr2l,c
 16095  00A5B4  0E00               	movlw	high display_prepare@temp
 16096  00A5B6  20F4               	addwfc	prodh,w,c
 16097  00A5B8  6EDA               	movwf	fsr2h,c
 16098  00A5BA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16099  00A5BC  6FBC               	movwf	??_display_prepare& (0+255),b
 16100  00A5BE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16101  00A5C0  0E05               	movlw	5
 16102  00A5C2  27BC               	addwf	??_display_prepare& (0+255),f,b
 16103  00A5C4  0E00               	movlw	0
 16104  00A5C6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16105  00A5C8  0E8C               	movlw	low (_display_content+20)
 16106  00A5CA  25BC               	addwf	??_display_prepare& (0+255),w,b
 16107  00A5CC  6EE1               	movwf	fsr1l,c
 16108  00A5CE  0E02               	movlw	high (_display_content+20)
 16109  00A5D0  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16110  00A5D2  6EE2               	movwf	fsr1h,c
 16111  00A5D4  CFDF FFE7          	movff	indf2,indf1
 16112                           
 16113                           ; BSR set to: 0
 16114  00A5D8  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16115  00A5DA                     l1366:
 16116                           
 16117                           ; BSR set to: 0
 16118                           
 16119                           ; BSR set to: 0
 16120  00A5DA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16121  00A5DC  0D01               	mullw	1
 16122  00A5DE  0EBE               	movlw	low display_prepare@temp
 16123  00A5E0  24F3               	addwf	prodl,w,c
 16124  00A5E2  6ED9               	movwf	fsr2l,c
 16125  00A5E4  0E00               	movlw	high display_prepare@temp
 16126  00A5E6  20F4               	addwfc	prodh,w,c
 16127  00A5E8  6EDA               	movwf	fsr2h,c
 16128  00A5EA  50DF               	movf	indf2,w,c
 16129  00A5EC  A4D8               	btfss	status,2,c
 16130  00A5EE  D7DD               	goto	l1367
 16131                           
 16132                           ; BSR set to: 0
 16133                           ;display.c: 347: };display.c: 349: display_content[1][cntr+6] = '(';
 16134                           
 16135                           ; BSR set to: 0
 16136  00A5F0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16137  00A5F2  6FBC               	movwf	??_display_prepare& (0+255),b
 16138  00A5F4  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16139  00A5F6  0E06               	movlw	6
 16140  00A5F8  27BC               	addwf	??_display_prepare& (0+255),f,b
 16141  00A5FA  0E00               	movlw	0
 16142  00A5FC  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16143  00A5FE  0E8C               	movlw	low (_display_content+20)
 16144  00A600  25BC               	addwf	??_display_prepare& (0+255),w,b
 16145  00A602  6ED9               	movwf	fsr2l,c
 16146  00A604  0E02               	movlw	high (_display_content+20)
 16147  00A606  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16148  00A608  6EDA               	movwf	fsr2h,c
 16149  00A60A  0E28               	movlw	40
 16150  00A60C  6EDF               	movwf	indf2,c
 16151                           
 16152                           ; BSR set to: 0
 16153                           ;display.c: 350: space = cntr + 7;
 16154  00A60E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16155  00A610  0F07               	addlw	7
 16156  00A612  6FC8               	movwf	display_prepare@space& (0+255),b
 16157                           
 16158                           ; BSR set to: 0
 16159                           ;display.c: 351: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 16160  00A614  C0DB  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 16161  00A618  C0DC  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 16162  00A61C  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 16163  00A61E  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 16164  00A620  0E02               	movlw	2
 16165  00A622  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 16166  00A624  0EBE               	movlw	low display_prepare@temp
 16167  00A626  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 16168  00A628  0E00               	movlw	high display_prepare@temp
 16169  00A62A  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 16170  00A62C  ECA6  F07B         	call	__display_itoa_long	;wreg free
 16171                           
 16172                           ;display.c: 352: for(cntr=0; temp[cntr]; ++cntr)
 16173  00A630  0E00               	movlw	0
 16174  00A632  0100               	movlb	0	; () banked
 16175  00A634  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16176  00A636  D018               	goto	l1369
 16177  00A638                     
 16178                           ; BSR set to: 0
 16179                           ;display.c: 353: {;display.c: 354: display_content[1][cntr+space] = temp[cntr];
 16180                           
 16181                           ; BSR set to: 0
 16182  00A638  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16183  00A63A  0D01               	mullw	1
 16184  00A63C  0EBE               	movlw	low display_prepare@temp
 16185  00A63E  24F3               	addwf	prodl,w,c
 16186  00A640  6ED9               	movwf	fsr2l,c
 16187  00A642  0E00               	movlw	high display_prepare@temp
 16188  00A644  20F4               	addwfc	prodh,w,c
 16189  00A646  6EDA               	movwf	fsr2h,c
 16190  00A648  51C8               	movf	display_prepare@space& (0+255),w,b
 16191  00A64A  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 16192  00A64E  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16193  00A650  27BC               	addwf	??_display_prepare& (0+255),f,b
 16194  00A652  0E00               	movlw	0
 16195  00A654  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16196  00A656  0E8C               	movlw	low (_display_content+20)
 16197  00A658  25BC               	addwf	??_display_prepare& (0+255),w,b
 16198  00A65A  6EE1               	movwf	fsr1l,c
 16199  00A65C  0E02               	movlw	high (_display_content+20)
 16200  00A65E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16201  00A660  6EE2               	movwf	fsr1h,c
 16202  00A662  CFDF FFE7          	movff	indf2,indf1
 16203                           
 16204                           ; BSR set to: 0
 16205  00A666  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16206  00A668                     l1369:
 16207                           
 16208                           ; BSR set to: 0
 16209                           
 16210                           ; BSR set to: 0
 16211  00A668  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16212  00A66A  0D01               	mullw	1
 16213  00A66C  0EBE               	movlw	low display_prepare@temp
 16214  00A66E  24F3               	addwf	prodl,w,c
 16215  00A670  6ED9               	movwf	fsr2l,c
 16216  00A672  0E00               	movlw	high display_prepare@temp
 16217  00A674  20F4               	addwfc	prodh,w,c
 16218  00A676  6EDA               	movwf	fsr2h,c
 16219  00A678  50DF               	movf	indf2,w,c
 16220  00A67A  A4D8               	btfss	status,2,c
 16221  00A67C  D7DD               	goto	l1370
 16222                           
 16223                           ; BSR set to: 0
 16224                           ;display.c: 355: };display.c: 356: display_content[1][cntr+space] = 0x01;
 16225                           
 16226                           ; BSR set to: 0
 16227  00A67E  51C8               	movf	display_prepare@space& (0+255),w,b
 16228  00A680  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 16229  00A684  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16230  00A686  27BC               	addwf	??_display_prepare& (0+255),f,b
 16231  00A688  0E00               	movlw	0
 16232  00A68A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16233  00A68C  0E8C               	movlw	low (_display_content+20)
 16234  00A68E  25BC               	addwf	??_display_prepare& (0+255),w,b
 16235  00A690  6ED9               	movwf	fsr2l,c
 16236  00A692  0E02               	movlw	high (_display_content+20)
 16237  00A694  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16238  00A696  6EDA               	movwf	fsr2h,c
 16239  00A698  0E01               	movlw	1
 16240  00A69A  6EDF               	movwf	indf2,c
 16241                           
 16242                           ;display.c: 357: display_content[1][cntr+space+1] = ')';
 16243  00A69C  51C8               	movf	display_prepare@space& (0+255),w,b
 16244  00A69E  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 16245  00A6A2  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16246  00A6A4  27BC               	addwf	??_display_prepare& (0+255),f,b
 16247  00A6A6  0E00               	movlw	0
 16248  00A6A8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16249  00A6AA  0E01               	movlw	1
 16250  00A6AC  27BC               	addwf	??_display_prepare& (0+255),f,b
 16251  00A6AE  0E00               	movlw	0
 16252  00A6B0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16253  00A6B2  0E8C               	movlw	low (_display_content+20)
 16254  00A6B4  25BC               	addwf	??_display_prepare& (0+255),w,b
 16255  00A6B6  6ED9               	movwf	fsr2l,c
 16256  00A6B8  0E02               	movlw	high (_display_content+20)
 16257  00A6BA  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16258  00A6BC  6EDA               	movwf	fsr2h,c
 16259  00A6BE  0E29               	movlw	41
 16260  00A6C0  6EDF               	movwf	indf2,c
 16261                           
 16262                           ; BSR set to: 0
 16263                           ;display.c: 359: _display_signed_itoa(os.divide_jump_size, temp);
 16264  00A6C2  C0E8  F08F         	movff	_os+24,__display_signed_itoa@value	;volatile
 16265  00A6C6  C0E9  F090         	movff	_os+25,__display_signed_itoa@value+1	;volatile
 16266  00A6CA  0EBE               	movlw	low display_prepare@temp
 16267  00A6CC  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 16268  00A6CE  0E00               	movlw	high display_prepare@temp
 16269  00A6D0  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 16270  00A6D2  EC98  F092         	call	__display_signed_itoa	;wreg free
 16271                           
 16272                           ;display.c: 360: for(cntr=0; temp[cntr]; ++cntr)
 16273  00A6D6  0E00               	movlw	0
 16274  00A6D8  0100               	movlb	0	; () banked
 16275  00A6DA  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16276  00A6DC  D018               	goto	l1372
 16277  00A6DE                     
 16278                           ; BSR set to: 0
 16279                           ;display.c: 361: {;display.c: 362: display_content[2][cntr+11] = temp[cntr];
 16280                           
 16281                           ; BSR set to: 0
 16282  00A6DE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16283  00A6E0  0D01               	mullw	1
 16284  00A6E2  0EBE               	movlw	low display_prepare@temp
 16285  00A6E4  24F3               	addwf	prodl,w,c
 16286  00A6E6  6ED9               	movwf	fsr2l,c
 16287  00A6E8  0E00               	movlw	high display_prepare@temp
 16288  00A6EA  20F4               	addwfc	prodh,w,c
 16289  00A6EC  6EDA               	movwf	fsr2h,c
 16290  00A6EE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16291  00A6F0  6FBC               	movwf	??_display_prepare& (0+255),b
 16292  00A6F2  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16293  00A6F4  0E0B               	movlw	11
 16294  00A6F6  27BC               	addwf	??_display_prepare& (0+255),f,b
 16295  00A6F8  0E00               	movlw	0
 16296  00A6FA  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16297  00A6FC  0EA0               	movlw	low (_display_content+40)
 16298  00A6FE  25BC               	addwf	??_display_prepare& (0+255),w,b
 16299  00A700  6EE1               	movwf	fsr1l,c
 16300  00A702  0E02               	movlw	high (_display_content+40)
 16301  00A704  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16302  00A706  6EE2               	movwf	fsr1h,c
 16303  00A708  CFDF FFE7          	movff	indf2,indf1
 16304                           
 16305                           ; BSR set to: 0
 16306  00A70C  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16307  00A70E                     l1372:
 16308                           
 16309                           ; BSR set to: 0
 16310                           
 16311                           ; BSR set to: 0
 16312  00A70E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16313  00A710  0D01               	mullw	1
 16314  00A712  0EBE               	movlw	low display_prepare@temp
 16315  00A714  24F3               	addwf	prodl,w,c
 16316  00A716  6ED9               	movwf	fsr2l,c
 16317  00A718  0E00               	movlw	high display_prepare@temp
 16318  00A71A  20F4               	addwfc	prodh,w,c
 16319  00A71C  6EDA               	movwf	fsr2h,c
 16320  00A71E  50DF               	movf	indf2,w,c
 16321  00A720  B4D8               	btfsc	status,2,c
 16322  00A722  D3A0               	goto	l1335
 16323  00A724  D7DC               	goto	l1373
 16324  00A726                     
 16325                           ; BSR set to: 0
 16326                           ;display.c: 367: memcpy(display_content, dc_arc1, sizeof display_content);
 16327                           
 16328                           ; BSR set to: 0
 16329  00A726  0E78               	movlw	low _display_content
 16330  00A728  6F60               	movwf	memcpy@d1& (0+255),b
 16331  00A72A  0E02               	movlw	high _display_content
 16332  00A72C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16333  00A72E  0EDE               	movlw	low _dc_arc1
 16334  00A730  6F62               	movwf	memcpy@s1& (0+255),b
 16335  00A732  0E9E               	movlw	high _dc_arc1
 16336  00A734  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16337  00A736  0E00               	movlw	0
 16338  00A738  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16339  00A73A  0E50               	movlw	80
 16340  00A73C  6F64               	movwf	memcpy@n& (0+255),b
 16341  00A73E  ECC9  F08E         	call	_memcpy	;wreg free
 16342                           
 16343                           ;display.c: 368: switch(os.displayState)
 16344  00A742  D008               	goto	l1376
 16345  00A744                     
 16346                           ;display.c: 371: display_content[2][12] = '>';
 16347  00A744  0E3E               	movlw	62
 16348  00A746  0102               	movlb	2	; () banked
 16349  00A748  6FAC               	movwf	(_display_content+52)& (0+255),b
 16350                           
 16351                           ;display.c: 372: break;
 16352  00A74A  D00C               	goto	l1378
 16353  00A74C                     
 16354                           ;display.c: 374: display_content[3][12] = '>';
 16355                           
 16356                           ; BSR set to: 2
 16357  00A74C  0E3E               	movlw	62
 16358  00A74E  0102               	movlb	2	; () banked
 16359  00A750  6FC0               	movwf	(_display_content+72)& (0+255),b
 16360                           
 16361                           ; BSR set to: 2
 16362                           ;display.c: 376: }
 16363                           
 16364                           ;display.c: 375: break;
 16365  00A752  D008               	goto	l1378
 16366  00A754                     l1376:
 16367                           
 16368                           ; BSR set to: 2
 16369  00A754  0100               	movlb	0	; () banked
 16370  00A756  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 16371                           
 16372                           ; Switch size 1, requested type "space"
 16373                           ; Number of cases is 2, Range of values is 81 to 82
 16374                           ; switch strategies available:
 16375                           ; Name         Instructions Cycles
 16376                           ; simple_byte            7     4 (average)
 16377                           ;	Chosen strategy is simple_byte
 16378  00A758  0A51               	xorlw	81	; case 81
 16379  00A75A  B4D8               	btfsc	status,2,c
 16380  00A75C  D7F3               	goto	l1377
 16381  00A75E  0A03               	xorlw	3	; case 82
 16382  00A760  B4D8               	btfsc	status,2,c
 16383  00A762  D7F4               	goto	l1379
 16384  00A764                     l1378:
 16385                           
 16386                           ;display.c: 379: _display_itoa_long(os.arc_size, 2, temp);
 16387                           
 16388                           ; BSR set to: 0
 16389  00A764  C0EC  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 16390  00A768  C0ED  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 16391  00A76C  C0EE  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 16392  00A770  C0EF  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 16393  00A774  0E02               	movlw	2
 16394  00A776  0100               	movlb	0	; () banked
 16395  00A778  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 16396  00A77A  0EBE               	movlw	low display_prepare@temp
 16397  00A77C  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 16398  00A77E  0E00               	movlw	high display_prepare@temp
 16399  00A780  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 16400  00A782  ECA6  F07B         	call	__display_itoa_long	;wreg free
 16401                           
 16402                           ;display.c: 380: for(cntr=0; temp[cntr]; ++cntr)
 16403  00A786  0E00               	movlw	0
 16404  00A788  0100               	movlb	0	; () banked
 16405  00A78A  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16406  00A78C  D018               	goto	l1380
 16407  00A78E                     
 16408                           ; BSR set to: 0
 16409                           ;display.c: 381: {;display.c: 382: display_content[1][10+cntr] = temp[cntr];
 16410                           
 16411                           ; BSR set to: 0
 16412  00A78E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16413  00A790  0D01               	mullw	1
 16414  00A792  0EBE               	movlw	low display_prepare@temp
 16415  00A794  24F3               	addwf	prodl,w,c
 16416  00A796  6ED9               	movwf	fsr2l,c
 16417  00A798  0E00               	movlw	high display_prepare@temp
 16418  00A79A  20F4               	addwfc	prodh,w,c
 16419  00A79C  6EDA               	movwf	fsr2h,c
 16420  00A79E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16421  00A7A0  6FBC               	movwf	??_display_prepare& (0+255),b
 16422  00A7A2  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16423  00A7A4  0E0A               	movlw	10
 16424  00A7A6  27BC               	addwf	??_display_prepare& (0+255),f,b
 16425  00A7A8  0E00               	movlw	0
 16426  00A7AA  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16427  00A7AC  0E8C               	movlw	low (_display_content+20)
 16428  00A7AE  25BC               	addwf	??_display_prepare& (0+255),w,b
 16429  00A7B0  6EE1               	movwf	fsr1l,c
 16430  00A7B2  0E02               	movlw	high (_display_content+20)
 16431  00A7B4  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16432  00A7B6  6EE2               	movwf	fsr1h,c
 16433  00A7B8  CFDF FFE7          	movff	indf2,indf1
 16434                           
 16435                           ; BSR set to: 0
 16436  00A7BC  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16437  00A7BE                     l1380:
 16438                           
 16439                           ; BSR set to: 0
 16440                           
 16441                           ; BSR set to: 0
 16442  00A7BE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16443  00A7C0  0D01               	mullw	1
 16444  00A7C2  0EBE               	movlw	low display_prepare@temp
 16445  00A7C4  24F3               	addwf	prodl,w,c
 16446  00A7C6  6ED9               	movwf	fsr2l,c
 16447  00A7C8  0E00               	movlw	high display_prepare@temp
 16448  00A7CA  20F4               	addwfc	prodh,w,c
 16449  00A7CC  6EDA               	movwf	fsr2h,c
 16450  00A7CE  50DF               	movf	indf2,w,c
 16451  00A7D0  A4D8               	btfss	status,2,c
 16452  00A7D2  D7DD               	goto	l1381
 16453                           
 16454                           ; BSR set to: 0
 16455                           ;display.c: 383: };display.c: 384: display_content[1][10+cntr] = 0x01;
 16456                           
 16457                           ; BSR set to: 0
 16458  00A7D4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16459  00A7D6  6FBC               	movwf	??_display_prepare& (0+255),b
 16460  00A7D8  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16461  00A7DA  0E0A               	movlw	10
 16462  00A7DC  27BC               	addwf	??_display_prepare& (0+255),f,b
 16463  00A7DE  0E00               	movlw	0
 16464  00A7E0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16465  00A7E2  0E8C               	movlw	low (_display_content+20)
 16466  00A7E4  25BC               	addwf	??_display_prepare& (0+255),w,b
 16467  00A7E6  6ED9               	movwf	fsr2l,c
 16468  00A7E8  0E02               	movlw	high (_display_content+20)
 16469  00A7EA  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16470  00A7EC  6EDA               	movwf	fsr2h,c
 16471  00A7EE  0E01               	movlw	1
 16472  00A7F0  6EDF               	movwf	indf2,c
 16473                           
 16474                           ; BSR set to: 0
 16475                           ;display.c: 387: _display_itoa(os.arc_step_size, 2, temp);
 16476  00A7F2  C0EA  F095         	movff	_os+26,__display_itoa@value	;volatile
 16477  00A7F6  C0EB  F096         	movff	_os+27,__display_itoa@value+1	;volatile
 16478  00A7FA  0E02               	movlw	2
 16479  00A7FC  6F97               	movwf	__display_itoa@decimals& (0+255),b
 16480  00A7FE  0EBE               	movlw	low display_prepare@temp
 16481  00A800  6F98               	movwf	__display_itoa@text& (0+255),b
 16482  00A802  0E00               	movlw	high display_prepare@temp
 16483  00A804  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 16484  00A806  EC92  F06B         	call	__display_itoa	;wreg free
 16485                           
 16486                           ;display.c: 388: if(os.arc_step_size>999)
 16487  00A80A  0EE8               	movlw	232
 16488  00A80C  0100               	movlb	0	; () banked
 16489  00A80E  5DEA               	subwf	(_os+26)& (0+255),w,b	;volatile
 16490  00A810  0E03               	movlw	3
 16491  00A812  59EB               	subwfb	(_os+27)& (0+255),w,b	;volatile
 16492  00A814  A0D8               	btfss	status,0,c
 16493  00A816  D002               	goto	l1383
 16494                           
 16495                           ; BSR set to: 0
 16496                           ;display.c: 389: space = 0;
 16497  00A818  0E00               	movlw	0
 16498  00A81A  D001               	goto	L19
 16499  00A81C                     l1383:
 16500                           
 16501                           ; BSR set to: 0
 16502                           ;display.c: 390: else;display.c: 391: space = 1;
 16503                           
 16504                           ; BSR set to: 0
 16505  00A81C  0E01               	movlw	1
 16506  00A81E                     L19:
 16507  00A81E  6FC8               	movwf	display_prepare@space& (0+255),b
 16508                           
 16509                           ; BSR set to: 0
 16510                           ;display.c: 392: for(cntr=0; temp[cntr]; ++cntr)
 16511  00A820  0E00               	movlw	0
 16512  00A822  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16513  00A824  D018               	goto	l1385
 16514  00A826                     
 16515                           ; BSR set to: 0
 16516                           ;display.c: 393: {;display.c: 394: display_content[3][space+cntr] = temp[cntr];
 16517                           
 16518                           ; BSR set to: 0
 16519  00A826  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16520  00A828  0D01               	mullw	1
 16521  00A82A  0EBE               	movlw	low display_prepare@temp
 16522  00A82C  24F3               	addwf	prodl,w,c
 16523  00A82E  6ED9               	movwf	fsr2l,c
 16524  00A830  0E00               	movlw	high display_prepare@temp
 16525  00A832  20F4               	addwfc	prodh,w,c
 16526  00A834  6EDA               	movwf	fsr2h,c
 16527  00A836  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16528  00A838  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 16529  00A83C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16530  00A83E  27BC               	addwf	??_display_prepare& (0+255),f,b
 16531  00A840  0E00               	movlw	0
 16532  00A842  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16533  00A844  0EB4               	movlw	low (_display_content+60)
 16534  00A846  25BC               	addwf	??_display_prepare& (0+255),w,b
 16535  00A848  6EE1               	movwf	fsr1l,c
 16536  00A84A  0E02               	movlw	high (_display_content+60)
 16537  00A84C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16538  00A84E  6EE2               	movwf	fsr1h,c
 16539  00A850  CFDF FFE7          	movff	indf2,indf1
 16540                           
 16541                           ; BSR set to: 0
 16542  00A854  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16543  00A856                     l1385:
 16544                           
 16545                           ; BSR set to: 0
 16546                           
 16547                           ; BSR set to: 0
 16548  00A856  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16549  00A858  0D01               	mullw	1
 16550  00A85A  0EBE               	movlw	low display_prepare@temp
 16551  00A85C  24F3               	addwf	prodl,w,c
 16552  00A85E  6ED9               	movwf	fsr2l,c
 16553  00A860  0E00               	movlw	high display_prepare@temp
 16554  00A862  20F4               	addwfc	prodh,w,c
 16555  00A864  6EDA               	movwf	fsr2h,c
 16556  00A866  50DF               	movf	indf2,w,c
 16557  00A868  A4D8               	btfss	status,2,c
 16558  00A86A  D7DD               	goto	l1386
 16559                           
 16560                           ; BSR set to: 0
 16561                           ;display.c: 395: };display.c: 396: display_content[3][space+cntr] = 0x01 ;
 16562                           
 16563                           ; BSR set to: 0
 16564  00A86C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16565  00A86E  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 16566  00A872  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16567  00A874  27BC               	addwf	??_display_prepare& (0+255),f,b
 16568  00A876  0E00               	movlw	0
 16569  00A878  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16570  00A87A  0EB4               	movlw	low (_display_content+60)
 16571  00A87C  25BC               	addwf	??_display_prepare& (0+255),w,b
 16572  00A87E  6ED9               	movwf	fsr2l,c
 16573  00A880  0E02               	movlw	high (_display_content+60)
 16574  00A882  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16575  00A884  6EDA               	movwf	fsr2h,c
 16576  00A886  0E01               	movlw	1
 16577  00A888  D25B               	goto	L22
 16578  00A88A                     
 16579                           ; BSR set to: 0
 16580                           ;display.c: 401: memcpy(display_content, dc_arc2, sizeof display_content);
 16581                           
 16582                           ; BSR set to: 0
 16583  00A88A  0E78               	movlw	low _display_content
 16584  00A88C  6F60               	movwf	memcpy@d1& (0+255),b
 16585  00A88E  0E02               	movlw	high _display_content
 16586  00A890  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16587  00A892  0E8E               	movlw	low _dc_arc2
 16588  00A894  6F62               	movwf	memcpy@s1& (0+255),b
 16589  00A896  0E9E               	movlw	high _dc_arc2
 16590  00A898  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16591  00A89A  0E00               	movlw	0
 16592  00A89C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16593  00A89E  0E50               	movlw	80
 16594  00A8A0  6F64               	movwf	memcpy@n& (0+255),b
 16595  00A8A2  ECC9  F08E         	call	_memcpy	;wreg free
 16596                           
 16597                           ;display.c: 402: switch(os.displayState)
 16598  00A8A6  D025               	goto	l1389
 16599  00A8A8                     
 16600                           ;display.c: 405: display_content[2][6] = 'W';
 16601  00A8A8  0E57               	movlw	87
 16602  00A8AA  0102               	movlb	2	; () banked
 16603  00A8AC  6FA6               	movwf	(_display_content+46)& (0+255),b
 16604                           
 16605                           ;display.c: 406: display_content[2][7] = ' ';
 16606  00A8AE  0E20               	movlw	32
 16607  00A8B0  6FA7               	movwf	(_display_content+47)& (0+255),b
 16608                           
 16609                           ;display.c: 407: break;
 16610  00A8B2  D027               	goto	l1391
 16611  00A8B4                     
 16612                           ;display.c: 409: memcpy(display_content[2], "        ", 8);
 16613                           
 16614                           ; BSR set to: 2
 16615  00A8B4  0EA0               	movlw	low (_display_content+40)
 16616  00A8B6  0100               	movlb	0	; () banked
 16617  00A8B8  6F60               	movwf	memcpy@d1& (0+255),b
 16618  00A8BA  0E02               	movlw	high (_display_content+40)
 16619  00A8BC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16620  00A8BE  0E1C               	movlw	low STR_1
 16621  00A8C0  6F62               	movwf	memcpy@s1& (0+255),b
 16622  00A8C2  0EA2               	movlw	high STR_1
 16623  00A8C4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16624  00A8C6  0E00               	movlw	0
 16625  00A8C8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16626  00A8CA  0E08               	movlw	8
 16627  00A8CC  6F64               	movwf	memcpy@n& (0+255),b
 16628  00A8CE  ECC9  F08E         	call	_memcpy	;wreg free
 16629                           
 16630                           ;display.c: 410: memcpy(display_content[3], "Cancel", 6);
 16631  00A8D2  0EB4               	movlw	low (_display_content+60)
 16632  00A8D4  0100               	movlb	0	; () banked
 16633  00A8D6  6F60               	movwf	memcpy@d1& (0+255),b
 16634  00A8D8  0E02               	movlw	high (_display_content+60)
 16635  00A8DA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16636  00A8DC  0E25               	movlw	low STR_2
 16637  00A8DE  6F62               	movwf	memcpy@s1& (0+255),b
 16638  00A8E0  0EA2               	movlw	high STR_2
 16639  00A8E2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16640  00A8E4  0E00               	movlw	0
 16641  00A8E6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16642  00A8E8  0E06               	movlw	6
 16643  00A8EA  6F64               	movwf	memcpy@n& (0+255),b
 16644  00A8EC  ECC9  F08E         	call	_memcpy	;wreg free
 16645                           
 16646                           ;display.c: 412: }
 16647                           
 16648                           ;display.c: 411: break;
 16649  00A8F0  D008               	goto	l1391
 16650  00A8F2                     l1389:
 16651  00A8F2  0100               	movlb	0	; () banked
 16652  00A8F4  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 16653                           
 16654                           ; Switch size 1, requested type "space"
 16655                           ; Number of cases is 2, Range of values is 98 to 99
 16656                           ; switch strategies available:
 16657                           ; Name         Instructions Cycles
 16658                           ; simple_byte            7     4 (average)
 16659                           ;	Chosen strategy is simple_byte
 16660  00A8F6  0A62               	xorlw	98	; case 98
 16661  00A8F8  B4D8               	btfsc	status,2,c
 16662  00A8FA  D7DC               	goto	l1392
 16663  00A8FC  0A01               	xorlw	1	; case 99
 16664  00A8FE  B4D8               	btfsc	status,2,c
 16665  00A900  D7D3               	goto	l1390
 16666  00A902                     l1391:
 16667                           
 16668                           ;display.c: 415: _display_itoa_long(os.arc_size, 2, temp);
 16669                           
 16670                           ; BSR set to: 0
 16671  00A902  C0EC  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 16672  00A906  C0ED  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 16673  00A90A  C0EE  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 16674  00A90E  C0EF  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 16675  00A912  0E02               	movlw	2
 16676  00A914  0100               	movlb	0	; () banked
 16677  00A916  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 16678  00A918  0EBE               	movlw	low display_prepare@temp
 16679  00A91A  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 16680  00A91C  0E00               	movlw	high display_prepare@temp
 16681  00A91E  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 16682  00A920  ECA6  F07B         	call	__display_itoa_long	;wreg free
 16683                           
 16684                           ;display.c: 416: for(cntr=0; temp[cntr]; ++cntr)
 16685  00A924  0E00               	movlw	0
 16686  00A926  0100               	movlb	0	; () banked
 16687  00A928  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16688  00A92A  D018               	goto	l1393
 16689  00A92C                     
 16690                           ; BSR set to: 0
 16691                           ;display.c: 417: {;display.c: 418: display_content[0][10+cntr] = temp[cntr];
 16692                           
 16693                           ; BSR set to: 0
 16694  00A92C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16695  00A92E  0D01               	mullw	1
 16696  00A930  0EBE               	movlw	low display_prepare@temp
 16697  00A932  24F3               	addwf	prodl,w,c
 16698  00A934  6ED9               	movwf	fsr2l,c
 16699  00A936  0E00               	movlw	high display_prepare@temp
 16700  00A938  20F4               	addwfc	prodh,w,c
 16701  00A93A  6EDA               	movwf	fsr2h,c
 16702  00A93C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16703  00A93E  6FBC               	movwf	??_display_prepare& (0+255),b
 16704  00A940  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16705  00A942  0E0A               	movlw	10
 16706  00A944  27BC               	addwf	??_display_prepare& (0+255),f,b
 16707  00A946  0E00               	movlw	0
 16708  00A948  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16709  00A94A  0E78               	movlw	low _display_content
 16710  00A94C  25BC               	addwf	??_display_prepare& (0+255),w,b
 16711  00A94E  6EE1               	movwf	fsr1l,c
 16712  00A950  0E02               	movlw	high _display_content
 16713  00A952  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16714  00A954  6EE2               	movwf	fsr1h,c
 16715  00A956  CFDF FFE7          	movff	indf2,indf1
 16716                           
 16717                           ; BSR set to: 0
 16718  00A95A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16719  00A95C                     l1393:
 16720                           
 16721                           ; BSR set to: 0
 16722                           
 16723                           ; BSR set to: 0
 16724  00A95C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16725  00A95E  0D01               	mullw	1
 16726  00A960  0EBE               	movlw	low display_prepare@temp
 16727  00A962  24F3               	addwf	prodl,w,c
 16728  00A964  6ED9               	movwf	fsr2l,c
 16729  00A966  0E00               	movlw	high display_prepare@temp
 16730  00A968  20F4               	addwfc	prodh,w,c
 16731  00A96A  6EDA               	movwf	fsr2h,c
 16732  00A96C  50DF               	movf	indf2,w,c
 16733  00A96E  A4D8               	btfss	status,2,c
 16734  00A970  D7DD               	goto	l1394
 16735                           
 16736                           ; BSR set to: 0
 16737                           ;display.c: 419: };display.c: 420: display_content[0][10+cntr] = 0x01;
 16738                           
 16739                           ; BSR set to: 0
 16740  00A972  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16741  00A974  6FBC               	movwf	??_display_prepare& (0+255),b
 16742  00A976  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16743  00A978  0E0A               	movlw	10
 16744  00A97A  27BC               	addwf	??_display_prepare& (0+255),f,b
 16745  00A97C  0E00               	movlw	0
 16746  00A97E  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16747  00A980  0E78               	movlw	low _display_content
 16748  00A982  25BC               	addwf	??_display_prepare& (0+255),w,b
 16749  00A984  6ED9               	movwf	fsr2l,c
 16750  00A986  0E02               	movlw	high _display_content
 16751  00A988  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16752  00A98A  6EDA               	movwf	fsr2h,c
 16753  00A98C  0E01               	movlw	1
 16754  00A98E  6EDF               	movwf	indf2,c
 16755                           
 16756                           ; BSR set to: 0
 16757                           ;display.c: 423: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 16758  00A990  C0DB  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 16759  00A994  C0DC  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 16760  00A998  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 16761  00A99A  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 16762  00A99C  0E02               	movlw	2
 16763  00A99E  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 16764  00A9A0  0EBE               	movlw	low display_prepare@temp
 16765  00A9A2  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 16766  00A9A4  0E00               	movlw	high display_prepare@temp
 16767  00A9A6  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 16768  00A9A8  ECA6  F07B         	call	__display_itoa_long	;wreg free
 16769                           
 16770                           ;display.c: 424: space = 6-strlen(temp);
 16771  00A9AC  0EBE               	movlw	low display_prepare@temp
 16772  00A9AE  0100               	movlb	0	; () banked
 16773  00A9B0  6F60               	movwf	strlen@s& (0+255),b
 16774  00A9B2  0E00               	movlw	high display_prepare@temp
 16775  00A9B4  6F61               	movwf	(strlen@s+1)& (0+255),b
 16776  00A9B6  EC40  F093         	call	_strlen	;wreg free
 16777  00A9BA  0100               	movlb	0	; () banked
 16778  00A9BC  5160               	movf	?_strlen& (0+255),w,b
 16779  00A9BE  0800               	sublw	0
 16780  00A9C0  0F06               	addlw	6
 16781  00A9C2  6FC8               	movwf	display_prepare@space& (0+255),b
 16782                           
 16783                           ; BSR set to: 0
 16784                           ;display.c: 425: for(cntr=0; temp[cntr]; ++cntr)
 16785  00A9C4  0E00               	movlw	0
 16786  00A9C6  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16787  00A9C8  D01C               	goto	l1396
 16788  00A9CA                     
 16789                           ; BSR set to: 0
 16790                           ;display.c: 426: {;display.c: 427: display_content[1][13+space+cntr] = temp[cntr];
 16791                           
 16792                           ; BSR set to: 0
 16793  00A9CA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16794  00A9CC  0D01               	mullw	1
 16795  00A9CE  0EBE               	movlw	low display_prepare@temp
 16796  00A9D0  24F3               	addwf	prodl,w,c
 16797  00A9D2  6ED9               	movwf	fsr2l,c
 16798  00A9D4  0E00               	movlw	high display_prepare@temp
 16799  00A9D6  20F4               	addwfc	prodh,w,c
 16800  00A9D8  6EDA               	movwf	fsr2h,c
 16801  00A9DA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16802  00A9DC  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 16803  00A9E0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16804  00A9E2  27BC               	addwf	??_display_prepare& (0+255),f,b
 16805  00A9E4  0E00               	movlw	0
 16806  00A9E6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16807  00A9E8  0E0D               	movlw	13
 16808  00A9EA  27BC               	addwf	??_display_prepare& (0+255),f,b
 16809  00A9EC  0E00               	movlw	0
 16810  00A9EE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16811  00A9F0  0E8C               	movlw	low (_display_content+20)
 16812  00A9F2  25BC               	addwf	??_display_prepare& (0+255),w,b
 16813  00A9F4  6EE1               	movwf	fsr1l,c
 16814  00A9F6  0E02               	movlw	high (_display_content+20)
 16815  00A9F8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16816  00A9FA  6EE2               	movwf	fsr1h,c
 16817  00A9FC  CFDF FFE7          	movff	indf2,indf1
 16818                           
 16819                           ; BSR set to: 0
 16820  00AA00  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16821  00AA02                     l1396:
 16822                           
 16823                           ; BSR set to: 0
 16824                           
 16825                           ; BSR set to: 0
 16826  00AA02  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16827  00AA04  0D01               	mullw	1
 16828  00AA06  0EBE               	movlw	low display_prepare@temp
 16829  00AA08  24F3               	addwf	prodl,w,c
 16830  00AA0A  6ED9               	movwf	fsr2l,c
 16831  00AA0C  0E00               	movlw	high display_prepare@temp
 16832  00AA0E  20F4               	addwfc	prodh,w,c
 16833  00AA10  6EDA               	movwf	fsr2h,c
 16834  00AA12  50DF               	movf	indf2,w,c
 16835  00AA14  A4D8               	btfss	status,2,c
 16836  00AA16  D7D9               	goto	l1397
 16837                           
 16838                           ; BSR set to: 0
 16839                           ;display.c: 428: };display.c: 431: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 16840                           
 16841                           ; BSR set to: 0
 16842  00AA18  C0F0  F093         	movff	_os+32,motor_speed_from_index@speed_index	;volatile
 16843  00AA1C  C0F1  F094         	movff	_os+33,motor_speed_from_index@speed_index+1	;volatile
 16844  00AA20  EC36  F096         	call	_motor_speed_from_index	;wreg free
 16845  00AA24  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 16846  00AA28  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 16847  00AA2C  0E02               	movlw	2
 16848  00AA2E  0100               	movlb	0	; () banked
 16849  00AA30  6F97               	movwf	__display_itoa@decimals& (0+255),b
 16850  00AA32  0EBE               	movlw	low display_prepare@temp
 16851  00AA34  6F98               	movwf	__display_itoa@text& (0+255),b
 16852  00AA36  0E00               	movlw	high display_prepare@temp
 16853  00AA38  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 16854  00AA3A  EC92  F06B         	call	__display_itoa	;wreg free
 16855                           
 16856                           ;display.c: 432: for(cntr=0; temp[cntr]; ++cntr)
 16857  00AA3E  0E00               	movlw	0
 16858  00AA40  0100               	movlb	0	; () banked
 16859  00AA42  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16860  00AA44  D018               	goto	l1399
 16861  00AA46                     
 16862                           ; BSR set to: 0
 16863                           ;display.c: 433: {;display.c: 434: display_content[3][11+cntr] = temp[cntr];
 16864                           
 16865                           ; BSR set to: 0
 16866  00AA46  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16867  00AA48  0D01               	mullw	1
 16868  00AA4A  0EBE               	movlw	low display_prepare@temp
 16869  00AA4C  24F3               	addwf	prodl,w,c
 16870  00AA4E  6ED9               	movwf	fsr2l,c
 16871  00AA50  0E00               	movlw	high display_prepare@temp
 16872  00AA52  20F4               	addwfc	prodh,w,c
 16873  00AA54  6EDA               	movwf	fsr2h,c
 16874  00AA56  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16875  00AA58  6FBC               	movwf	??_display_prepare& (0+255),b
 16876  00AA5A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16877  00AA5C  0E0B               	movlw	11
 16878  00AA5E  27BC               	addwf	??_display_prepare& (0+255),f,b
 16879  00AA60  0E00               	movlw	0
 16880  00AA62  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16881  00AA64  0EB4               	movlw	low (_display_content+60)
 16882  00AA66  25BC               	addwf	??_display_prepare& (0+255),w,b
 16883  00AA68  6EE1               	movwf	fsr1l,c
 16884  00AA6A  0E02               	movlw	high (_display_content+60)
 16885  00AA6C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16886  00AA6E  6EE2               	movwf	fsr1h,c
 16887  00AA70  CFDF FFE7          	movff	indf2,indf1
 16888                           
 16889                           ; BSR set to: 0
 16890  00AA74  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16891  00AA76                     l1399:
 16892                           
 16893                           ; BSR set to: 0
 16894                           
 16895                           ; BSR set to: 0
 16896  00AA76  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16897  00AA78  0D01               	mullw	1
 16898  00AA7A  0EBE               	movlw	low display_prepare@temp
 16899  00AA7C  24F3               	addwf	prodl,w,c
 16900  00AA7E  6ED9               	movwf	fsr2l,c
 16901  00AA80  0E00               	movlw	high display_prepare@temp
 16902  00AA82  20F4               	addwfc	prodh,w,c
 16903  00AA84  6EDA               	movwf	fsr2h,c
 16904  00AA86  50DF               	movf	indf2,w,c
 16905  00AA88  A4D8               	btfss	status,2,c
 16906  00AA8A  D7DD               	goto	l1400
 16907  00AA8C  D12D               	goto	L81
 16908  00AA8E                     
 16909                           ; BSR set to: 0
 16910                           ;display.c: 447: memcpy(display_content, dc_zero, sizeof display_content);
 16911                           
 16912                           ; BSR set to: 0
 16913  00AA8E  0E78               	movlw	low _display_content
 16914  00AA90  6F60               	movwf	memcpy@d1& (0+255),b
 16915  00AA92  0E02               	movlw	high _display_content
 16916  00AA94  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16917  00AA96  0E3E               	movlw	low _dc_zero
 16918  00AA98  6F62               	movwf	memcpy@s1& (0+255),b
 16919  00AA9A  0E9E               	movlw	high _dc_zero
 16920  00AA9C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16921  00AA9E  0E00               	movlw	0
 16922  00AAA0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16923  00AAA2  0E50               	movlw	80
 16924  00AAA4  6F64               	movwf	memcpy@n& (0+255),b
 16925  00AAA6  ECC9  F08E         	call	_memcpy	;wreg free
 16926                           
 16927                           ;display.c: 450: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 16928  00AAAA  C0DB  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 16929  00AAAE  C0DC  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 16930  00AAB2  0100               	movlb	0	; () banked
 16931  00AAB4  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 16932  00AAB6  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 16933  00AAB8  0E02               	movlw	2
 16934  00AABA  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 16935  00AABC  0EBE               	movlw	low display_prepare@temp
 16936  00AABE  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 16937  00AAC0  0E00               	movlw	high display_prepare@temp
 16938  00AAC2  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 16939  00AAC4  ECA6  F07B         	call	__display_itoa_long	;wreg free
 16940                           
 16941                           ;display.c: 451: for(cntr=0; temp[cntr]; ++cntr)
 16942  00AAC8  0E00               	movlw	0
 16943  00AACA  0100               	movlb	0	; () banked
 16944  00AACC  6FC9               	movwf	display_prepare@cntr& (0+255),b
 16945  00AACE  D018               	goto	l1403
 16946  00AAD0                     
 16947                           ; BSR set to: 0
 16948                           ;display.c: 452: {;display.c: 453: display_content[1][13+cntr] = temp[cntr];
 16949                           
 16950                           ; BSR set to: 0
 16951  00AAD0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16952  00AAD2  0D01               	mullw	1
 16953  00AAD4  0EBE               	movlw	low display_prepare@temp
 16954  00AAD6  24F3               	addwf	prodl,w,c
 16955  00AAD8  6ED9               	movwf	fsr2l,c
 16956  00AADA  0E00               	movlw	high display_prepare@temp
 16957  00AADC  20F4               	addwfc	prodh,w,c
 16958  00AADE  6EDA               	movwf	fsr2h,c
 16959  00AAE0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16960  00AAE2  6FBC               	movwf	??_display_prepare& (0+255),b
 16961  00AAE4  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 16962  00AAE6  0E0D               	movlw	13
 16963  00AAE8  27BC               	addwf	??_display_prepare& (0+255),f,b
 16964  00AAEA  0E00               	movlw	0
 16965  00AAEC  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 16966  00AAEE  0E8C               	movlw	low (_display_content+20)
 16967  00AAF0  25BC               	addwf	??_display_prepare& (0+255),w,b
 16968  00AAF2  6EE1               	movwf	fsr1l,c
 16969  00AAF4  0E02               	movlw	high (_display_content+20)
 16970  00AAF6  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 16971  00AAF8  6EE2               	movwf	fsr1h,c
 16972  00AAFA  CFDF FFE7          	movff	indf2,indf1
 16973                           
 16974                           ; BSR set to: 0
 16975  00AAFE  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 16976  00AB00                     l1403:
 16977                           
 16978                           ; BSR set to: 0
 16979                           
 16980                           ; BSR set to: 0
 16981  00AB00  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16982  00AB02  0D01               	mullw	1
 16983  00AB04  0EBE               	movlw	low display_prepare@temp
 16984  00AB06  24F3               	addwf	prodl,w,c
 16985  00AB08  6ED9               	movwf	fsr2l,c
 16986  00AB0A  0E00               	movlw	high display_prepare@temp
 16987  00AB0C  20F4               	addwfc	prodh,w,c
 16988  00AB0E  6EDA               	movwf	fsr2h,c
 16989  00AB10  50DF               	movf	indf2,w,c
 16990  00AB12  A4D8               	btfss	status,2,c
 16991  00AB14  D7DD               	goto	l1404
 16992                           
 16993                           ; BSR set to: 0
 16994                           ;display.c: 454: };display.c: 455: display_content[1][13+cntr] = 0x01;
 16995                           
 16996                           ; BSR set to: 0
 16997  00AB16  51C9               	movf	display_prepare@cntr& (0+255),w,b
 16998  00AB18  6FBC               	movwf	??_display_prepare& (0+255),b
 16999  00AB1A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17000  00AB1C  0E0D               	movlw	13
 17001  00AB1E  27BC               	addwf	??_display_prepare& (0+255),f,b
 17002  00AB20  0E00               	movlw	0
 17003  00AB22  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17004  00AB24  0E8C               	movlw	low (_display_content+20)
 17005  00AB26  25BC               	addwf	??_display_prepare& (0+255),w,b
 17006  00AB28  6ED9               	movwf	fsr2l,c
 17007  00AB2A  0E02               	movlw	high (_display_content+20)
 17008  00AB2C  D6AA               	goto	L31
 17009  00AB2E                     
 17010                           ; BSR set to: 0
 17011                           ;display.c: 460: memcpy(display_content, dc_manual, sizeof display_content);
 17012                           
 17013                           ; BSR set to: 0
 17014  00AB2E  0E78               	movlw	low _display_content
 17015  00AB30  6F60               	movwf	memcpy@d1& (0+255),b
 17016  00AB32  0E02               	movlw	high _display_content
 17017  00AB34  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17018  00AB36  0EEE               	movlw	low _dc_manual
 17019  00AB38  6F62               	movwf	memcpy@s1& (0+255),b
 17020  00AB3A  0E9D               	movlw	high _dc_manual
 17021  00AB3C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17022  00AB3E  0E00               	movlw	0
 17023  00AB40  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17024  00AB42  0E50               	movlw	80
 17025  00AB44  6F64               	movwf	memcpy@n& (0+255),b
 17026  00AB46  ECC9  F08E         	call	_memcpy	;wreg free
 17027                           
 17028                           ;display.c: 461: switch(os.displayState)
 17029  00AB4A  D044               	goto	l1407
 17030  00AB4C                     
 17031                           ;display.c: 464: display_content[2][6] = 'W';
 17032  00AB4C  0E57               	movlw	87
 17033  00AB4E  0102               	movlb	2	; () banked
 17034  00AB50  6FA6               	movwf	(_display_content+46)& (0+255),b
 17035                           
 17036                           ;display.c: 465: display_content[2][7] = ' ';
 17037  00AB52  0E20               	movlw	32
 17038  00AB54  6FA7               	movwf	(_display_content+47)& (0+255),b
 17039                           
 17040                           ;display.c: 466: break;
 17041  00AB56  D049               	goto	l1409
 17042  00AB58                     
 17043                           ;display.c: 468: memcpy(display_content[2], "        ", 8);
 17044                           
 17045                           ; BSR set to: 2
 17046  00AB58  0EA0               	movlw	low (_display_content+40)
 17047  00AB5A  0100               	movlb	0	; () banked
 17048  00AB5C  6F60               	movwf	memcpy@d1& (0+255),b
 17049  00AB5E  0E02               	movlw	high (_display_content+40)
 17050  00AB60  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17051  00AB62  0E1C               	movlw	low STR_1
 17052  00AB64  6F62               	movwf	memcpy@s1& (0+255),b
 17053  00AB66  0EA2               	movlw	high STR_1
 17054  00AB68  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17055  00AB6A  0E00               	movlw	0
 17056  00AB6C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17057  00AB6E  0E08               	movlw	8
 17058  00AB70  6F64               	movwf	memcpy@n& (0+255),b
 17059  00AB72  ECC9  F08E         	call	_memcpy	;wreg free
 17060                           
 17061                           ;display.c: 469: memcpy(display_content[3], "Cancel", 6);
 17062  00AB76  0EB4               	movlw	low (_display_content+60)
 17063  00AB78  0100               	movlb	0	; () banked
 17064  00AB7A  6F60               	movwf	memcpy@d1& (0+255),b
 17065  00AB7C  0E02               	movlw	high (_display_content+60)
 17066  00AB7E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17067  00AB80  0E25               	movlw	low STR_2
 17068  00AB82  6F62               	movwf	memcpy@s1& (0+255),b
 17069  00AB84  0EA2               	movlw	high STR_2
 17070  00AB86  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17071  00AB88  0E00               	movlw	0
 17072  00AB8A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17073  00AB8C  0E06               	movlw	6
 17074  00AB8E  6F64               	movwf	memcpy@n& (0+255),b
 17075  00AB90  ECC9  F08E         	call	_memcpy	;wreg free
 17076                           
 17077                           ;display.c: 470: break;
 17078  00AB94  D02A               	goto	l1409
 17079  00AB96                     
 17080                           ;display.c: 472: memcpy(&display_content[2][0], "        ", 8);
 17081  00AB96  0EA0               	movlw	low (_display_content+40)
 17082  00AB98  0100               	movlb	0	; () banked
 17083  00AB9A  6F60               	movwf	memcpy@d1& (0+255),b
 17084  00AB9C  0E02               	movlw	high (_display_content+40)
 17085  00AB9E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17086  00ABA0  0E1C               	movlw	low STR_1
 17087  00ABA2  6F62               	movwf	memcpy@s1& (0+255),b
 17088  00ABA4  0EA2               	movlw	high STR_1
 17089  00ABA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17090  00ABA8  0E00               	movlw	0
 17091  00ABAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17092  00ABAC  0E08               	movlw	8
 17093  00ABAE  6F64               	movwf	memcpy@n& (0+255),b
 17094  00ABB0  ECC9  F08E         	call	_memcpy	;wreg free
 17095                           
 17096                           ;display.c: 473: memcpy(&display_content[3][0], "Stop ", 5);
 17097  00ABB4  0EB4               	movlw	low (_display_content+60)
 17098  00ABB6  0100               	movlb	0	; () banked
 17099  00ABB8  6F60               	movwf	memcpy@d1& (0+255),b
 17100  00ABBA  0E02               	movlw	high (_display_content+60)
 17101  00ABBC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 17102  00ABBE  0E2C               	movlw	low STR_6
 17103  00ABC0  6F62               	movwf	memcpy@s1& (0+255),b
 17104  00ABC2  0EA2               	movlw	high STR_6
 17105  00ABC4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 17106  00ABC6  0E00               	movlw	0
 17107  00ABC8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 17108  00ABCA  0E05               	movlw	5
 17109  00ABCC  6F64               	movwf	memcpy@n& (0+255),b
 17110  00ABCE  ECC9  F08E         	call	_memcpy	;wreg free
 17111                           
 17112                           ;display.c: 475: }
 17113                           
 17114                           ;display.c: 474: break;
 17115  00ABD2  D00B               	goto	l1409
 17116  00ABD4                     l1407:
 17117  00ABD4  0100               	movlb	0	; () banked
 17118  00ABD6  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 17119                           
 17120                           ; Switch size 1, requested type "space"
 17121                           ; Number of cases is 3, Range of values is 130 to 132
 17122                           ; switch strategies available:
 17123                           ; Name         Instructions Cycles
 17124                           ; simple_byte           10     6 (average)
 17125                           ;	Chosen strategy is simple_byte
 17126  00ABD8  0A82               	xorlw	130	; case 130
 17127  00ABDA  B4D8               	btfsc	status,2,c
 17128  00ABDC  D7BD               	goto	l1410
 17129  00ABDE  0A01               	xorlw	1	; case 131
 17130  00ABE0  B4D8               	btfsc	status,2,c
 17131  00ABE2  D7B4               	goto	l1408
 17132  00ABE4  0A07               	xorlw	7	; case 132
 17133  00ABE6  B4D8               	btfsc	status,2,c
 17134  00ABE8  D7D6               	goto	l1411
 17135  00ABEA                     l1409:
 17136                           
 17137                           ;display.c: 478: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 17138                           
 17139                           ; BSR set to: 0
 17140  00ABEA  C0DB  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 17141  00ABEE  C0DC  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 17142  00ABF2  0100               	movlb	0	; () banked
 17143  00ABF4  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 17144  00ABF6  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 17145  00ABF8  0E02               	movlw	2
 17146  00ABFA  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 17147  00ABFC  0EBE               	movlw	low display_prepare@temp
 17148  00ABFE  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 17149  00AC00  0E00               	movlw	high display_prepare@temp
 17150  00AC02  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 17151  00AC04  ECA6  F07B         	call	__display_itoa_long	;wreg free
 17152                           
 17153                           ;display.c: 479: space = 7-strlen(temp);
 17154  00AC08  0EBE               	movlw	low display_prepare@temp
 17155  00AC0A  0100               	movlb	0	; () banked
 17156  00AC0C  6F60               	movwf	strlen@s& (0+255),b
 17157  00AC0E  0E00               	movlw	high display_prepare@temp
 17158  00AC10  6F61               	movwf	(strlen@s+1)& (0+255),b
 17159  00AC12  EC40  F093         	call	_strlen	;wreg free
 17160  00AC16  0100               	movlb	0	; () banked
 17161  00AC18  5160               	movf	?_strlen& (0+255),w,b
 17162  00AC1A  0800               	sublw	0
 17163  00AC1C  0F07               	addlw	7
 17164  00AC1E  6FC8               	movwf	display_prepare@space& (0+255),b
 17165                           
 17166                           ; BSR set to: 0
 17167                           ;display.c: 480: for(cntr=0; temp[cntr]; ++cntr)
 17168  00AC20  0E00               	movlw	0
 17169  00AC22  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17170  00AC24  D01C               	goto	l1412
 17171  00AC26                     
 17172                           ; BSR set to: 0
 17173                           ;display.c: 481: {;display.c: 482: display_content[1][12+space+cntr] = temp[cntr];
 17174                           
 17175                           ; BSR set to: 0
 17176  00AC26  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17177  00AC28  0D01               	mullw	1
 17178  00AC2A  0EBE               	movlw	low display_prepare@temp
 17179  00AC2C  24F3               	addwf	prodl,w,c
 17180  00AC2E  6ED9               	movwf	fsr2l,c
 17181  00AC30  0E00               	movlw	high display_prepare@temp
 17182  00AC32  20F4               	addwfc	prodh,w,c
 17183  00AC34  6EDA               	movwf	fsr2h,c
 17184  00AC36  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17185  00AC38  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 17186  00AC3C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17187  00AC3E  27BC               	addwf	??_display_prepare& (0+255),f,b
 17188  00AC40  0E00               	movlw	0
 17189  00AC42  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17190  00AC44  0E0C               	movlw	12
 17191  00AC46  27BC               	addwf	??_display_prepare& (0+255),f,b
 17192  00AC48  0E00               	movlw	0
 17193  00AC4A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17194  00AC4C  0E8C               	movlw	low (_display_content+20)
 17195  00AC4E  25BC               	addwf	??_display_prepare& (0+255),w,b
 17196  00AC50  6EE1               	movwf	fsr1l,c
 17197  00AC52  0E02               	movlw	high (_display_content+20)
 17198  00AC54  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17199  00AC56  6EE2               	movwf	fsr1h,c
 17200  00AC58  CFDF FFE7          	movff	indf2,indf1
 17201                           
 17202                           ; BSR set to: 0
 17203  00AC5C  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17204  00AC5E                     l1412:
 17205                           
 17206                           ; BSR set to: 0
 17207                           
 17208                           ; BSR set to: 0
 17209  00AC5E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17210  00AC60  0D01               	mullw	1
 17211  00AC62  0EBE               	movlw	low display_prepare@temp
 17212  00AC64  24F3               	addwf	prodl,w,c
 17213  00AC66  6ED9               	movwf	fsr2l,c
 17214  00AC68  0E00               	movlw	high display_prepare@temp
 17215  00AC6A  20F4               	addwfc	prodh,w,c
 17216  00AC6C  6EDA               	movwf	fsr2h,c
 17217  00AC6E  50DF               	movf	indf2,w,c
 17218  00AC70  A4D8               	btfss	status,2,c
 17219  00AC72  D7D9               	goto	l1413
 17220                           
 17221                           ; BSR set to: 0
 17222                           ;display.c: 483: };display.c: 486: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 17223                           
 17224                           ; BSR set to: 0
 17225  00AC74  C0F3  F093         	movff	_os+35,motor_speed_from_index@speed_index	;volatile
 17226  00AC78  C0F4  F094         	movff	_os+36,motor_speed_from_index@speed_index+1	;volatile
 17227  00AC7C  EC36  F096         	call	_motor_speed_from_index	;wreg free
 17228  00AC80  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 17229  00AC84  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 17230  00AC88  0E02               	movlw	2
 17231  00AC8A  0100               	movlb	0	; () banked
 17232  00AC8C  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17233  00AC8E  0EBE               	movlw	low display_prepare@temp
 17234  00AC90  6F98               	movwf	__display_itoa@text& (0+255),b
 17235  00AC92  0E00               	movlw	high display_prepare@temp
 17236  00AC94  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 17237  00AC96  EC92  F06B         	call	__display_itoa	;wreg free
 17238                           
 17239                           ;display.c: 487: for(cntr=0; temp[cntr]; ++cntr)
 17240  00AC9A  0E00               	movlw	0
 17241  00AC9C  0100               	movlb	0	; () banked
 17242  00AC9E  6FC9               	movwf	display_prepare@cntr& (0+255),b
 17243  00ACA0  D018               	goto	l1415
 17244  00ACA2                     
 17245                           ; BSR set to: 0
 17246                           ;display.c: 488: {;display.c: 489: display_content[3][11+cntr] = temp[cntr];
 17247                           
 17248                           ; BSR set to: 0
 17249  00ACA2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17250  00ACA4  0D01               	mullw	1
 17251  00ACA6  0EBE               	movlw	low display_prepare@temp
 17252  00ACA8  24F3               	addwf	prodl,w,c
 17253  00ACAA  6ED9               	movwf	fsr2l,c
 17254  00ACAC  0E00               	movlw	high display_prepare@temp
 17255  00ACAE  20F4               	addwfc	prodh,w,c
 17256  00ACB0  6EDA               	movwf	fsr2h,c
 17257  00ACB2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17258  00ACB4  6FBC               	movwf	??_display_prepare& (0+255),b
 17259  00ACB6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17260  00ACB8  0E0B               	movlw	11
 17261  00ACBA  27BC               	addwf	??_display_prepare& (0+255),f,b
 17262  00ACBC  0E00               	movlw	0
 17263  00ACBE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17264  00ACC0  0EB4               	movlw	low (_display_content+60)
 17265  00ACC2  25BC               	addwf	??_display_prepare& (0+255),w,b
 17266  00ACC4  6EE1               	movwf	fsr1l,c
 17267  00ACC6  0E02               	movlw	high (_display_content+60)
 17268  00ACC8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17269  00ACCA  6EE2               	movwf	fsr1h,c
 17270  00ACCC  CFDF FFE7          	movff	indf2,indf1
 17271                           
 17272                           ; BSR set to: 0
 17273  00ACD0  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 17274  00ACD2                     l1415:
 17275                           
 17276                           ; BSR set to: 0
 17277                           
 17278                           ; BSR set to: 0
 17279  00ACD2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17280  00ACD4  0D01               	mullw	1
 17281  00ACD6  0EBE               	movlw	low display_prepare@temp
 17282  00ACD8  24F3               	addwf	prodl,w,c
 17283  00ACDA  6ED9               	movwf	fsr2l,c
 17284  00ACDC  0E00               	movlw	high display_prepare@temp
 17285  00ACDE  20F4               	addwfc	prodh,w,c
 17286  00ACE0  6EDA               	movwf	fsr2h,c
 17287  00ACE2  50DF               	movf	indf2,w,c
 17288  00ACE4  A4D8               	btfss	status,2,c
 17289  00ACE6  D7DD               	goto	l1416
 17290  00ACE8                     L81:
 17291                           
 17292                           ; BSR set to: 0
 17293                           ;display.c: 490: };display.c: 491: display_content[3][11+cntr] = 0x01;
 17294                           
 17295                           ; BSR set to: 0
 17296  00ACE8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17297  00ACEA  6FBC               	movwf	??_display_prepare& (0+255),b
 17298  00ACEC  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17299  00ACEE  0E0B               	movlw	11
 17300  00ACF0  27BC               	addwf	??_display_prepare& (0+255),f,b
 17301  00ACF2  0E00               	movlw	0
 17302  00ACF4  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17303  00ACF6  0EB4               	movlw	low (_display_content+60)
 17304  00ACF8  25BC               	addwf	??_display_prepare& (0+255),w,b
 17305  00ACFA  6ED9               	movwf	fsr2l,c
 17306  00ACFC  0E02               	movlw	high (_display_content+60)
 17307  00ACFE  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17308  00AD00  6EDA               	movwf	fsr2h,c
 17309  00AD02  0E01               	movlw	1
 17310  00AD04  6EDF               	movwf	indf2,c
 17311                           
 17312                           ;display.c: 492: display_content[3][12+cntr] = '/';
 17313  00AD06  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17314  00AD08  6FBC               	movwf	??_display_prepare& (0+255),b
 17315  00AD0A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17316  00AD0C  0E0C               	movlw	12
 17317  00AD0E  27BC               	addwf	??_display_prepare& (0+255),f,b
 17318  00AD10  0E00               	movlw	0
 17319  00AD12  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17320  00AD14  0EB4               	movlw	low (_display_content+60)
 17321  00AD16  25BC               	addwf	??_display_prepare& (0+255),w,b
 17322  00AD18  6ED9               	movwf	fsr2l,c
 17323  00AD1A  0E02               	movlw	high (_display_content+60)
 17324  00AD1C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17325  00AD1E  6EDA               	movwf	fsr2h,c
 17326  00AD20  0E2F               	movlw	47
 17327  00AD22  6EDF               	movwf	indf2,c
 17328                           
 17329                           ;display.c: 493: display_content[3][13+cntr] = 's';
 17330  00AD24  51C9               	movf	display_prepare@cntr& (0+255),w,b
 17331  00AD26  6FBC               	movwf	??_display_prepare& (0+255),b
 17332  00AD28  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17333  00AD2A  0E0D               	movlw	13
 17334  00AD2C  27BC               	addwf	??_display_prepare& (0+255),f,b
 17335  00AD2E  0E00               	movlw	0
 17336  00AD30  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 17337  00AD32  0EB4               	movlw	low (_display_content+60)
 17338  00AD34  25BC               	addwf	??_display_prepare& (0+255),w,b
 17339  00AD36  6ED9               	movwf	fsr2l,c
 17340  00AD38  0E02               	movlw	high (_display_content+60)
 17341  00AD3A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 17342  00AD3C  6EDA               	movwf	fsr2h,c
 17343  00AD3E  0E73               	movlw	115
 17344  00AD40                     L22:
 17345  00AD40  6EDF               	movwf	indf2,c
 17346                           
 17347                           ;display.c: 494: break;
 17348  00AD42  D090               	goto	l1335
 17349  00AD44                     
 17350                           ; BSR set to: 0
 17351                           ;display.c: 497: _display_clear();
 17352                           
 17353                           ; BSR set to: 0
 17354  00AD44  EC50  F092         	call	__display_clear	;wreg free
 17355                           
 17356                           ;display.c: 498: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 17357  00AD48  0100               	movlb	0	; () banked
 17358  00AD4A  51D3               	movf	(_os+3)& (0+255),w,b	;volatile
 17359  00AD4C  6F95               	movwf	__display_itoa@value& (0+255),b
 17360  00AD4E  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 17361  00AD50  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 17362  00AD52  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 17363  00AD54  0E00               	movlw	0
 17364  00AD56  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17365  00AD58  0E78               	movlw	low _display_content
 17366  00AD5A  6F98               	movwf	__display_itoa@text& (0+255),b
 17367  00AD5C  0E02               	movlw	high _display_content
 17368  00AD5E  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 17369  00AD60  EC92  F06B         	call	__display_itoa	;wreg free
 17370                           
 17371                           ;display.c: 499: if(PORTEbits.RE2)
 17372  00AD64  A484               	btfss	3972,2,c	;volatile
 17373  00AD66  D002               	goto	l1419
 17374                           
 17375                           ;display.c: 500: display_content[0][8] = 'H';
 17376  00AD68  0E48               	movlw	72
 17377  00AD6A  D001               	goto	L26
 17378  00AD6C                     l1419:
 17379                           
 17380                           ;display.c: 501: else;display.c: 502: display_content[0][8] = 'L';
 17381                           
 17382                           ; BSR set to: 2
 17383  00AD6C  0E4C               	movlw	76
 17384  00AD6E                     L26:
 17385  00AD6E  0102               	movlb	2	; () banked
 17386  00AD70  6F80               	movwf	(_display_content+8)& (0+255),b
 17387                           
 17388                           ; BSR set to: 2
 17389                           ;display.c: 503: if(PORTEbits.RE0)
 17390                           
 17391                           ; BSR set to: 2
 17392  00AD72  A084               	btfss	3972,0,c	;volatile
 17393  00AD74  D002               	goto	l1421
 17394                           
 17395                           ; BSR set to: 2
 17396                           ;display.c: 504: display_content[0][9] = 'H';
 17397  00AD76  0E48               	movlw	72
 17398  00AD78  D001               	goto	L27
 17399  00AD7A                     l1421:
 17400                           
 17401                           ; BSR set to: 2
 17402                           ;display.c: 505: else;display.c: 506: display_content[0][9] = 'L';
 17403                           
 17404                           ; BSR set to: 2
 17405  00AD7A  0E4C               	movlw	76
 17406  00AD7C                     L27:
 17407  00AD7C  6F81               	movwf	(_display_content+9)& (0+255),b
 17408                           
 17409                           ; BSR set to: 2
 17410                           ;display.c: 507: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 17411                           
 17412                           ; BSR set to: 2
 17413  00AD7E  0100               	movlb	0	; () banked
 17414  00AD80  51D4               	movf	(_os+4)& (0+255),w,b	;volatile
 17415  00AD82  6F95               	movwf	__display_itoa@value& (0+255),b
 17416  00AD84  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 17417  00AD86  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 17418  00AD88  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 17419  00AD8A  0E00               	movlw	0
 17420  00AD8C  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17421  00AD8E  0E8C               	movlw	low (_display_content+20)
 17422  00AD90  6F98               	movwf	__display_itoa@text& (0+255),b
 17423  00AD92  0E02               	movlw	high (_display_content+20)
 17424  00AD94  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 17425  00AD96  EC92  F06B         	call	__display_itoa	;wreg free
 17426                           
 17427                           ;display.c: 508: if(PORTEbits.RE1)
 17428  00AD9A  A284               	btfss	3972,1,c	;volatile
 17429  00AD9C  D002               	goto	l1423
 17430                           
 17431                           ;display.c: 509: display_content[1][8] = 'H';
 17432  00AD9E  0E48               	movlw	72
 17433  00ADA0  D001               	goto	L28
 17434  00ADA2                     l1423:
 17435                           
 17436                           ;display.c: 510: else;display.c: 511: display_content[1][8] = 'L';
 17437                           
 17438                           ; BSR set to: 2
 17439  00ADA2  0E4C               	movlw	76
 17440  00ADA4                     L28:
 17441  00ADA4  0102               	movlb	2	; () banked
 17442  00ADA6  6F94               	movwf	(_display_content+28)& (0+255),b
 17443                           
 17444                           ; BSR set to: 2
 17445                           ;display.c: 512: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 17446                           
 17447                           ; BSR set to: 2
 17448  00ADA8  0100               	movlb	0	; () banked
 17449  00ADAA  51D5               	movf	(_os+5)& (0+255),w,b	;volatile
 17450  00ADAC  6F95               	movwf	__display_itoa@value& (0+255),b
 17451  00ADAE  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 17452  00ADB0  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 17453  00ADB2  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 17454  00ADB4  0E00               	movlw	0
 17455  00ADB6  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17456  00ADB8  0EA0               	movlw	low (_display_content+40)
 17457  00ADBA  6F98               	movwf	__display_itoa@text& (0+255),b
 17458  00ADBC  0E02               	movlw	high (_display_content+40)
 17459  00ADBE  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 17460  00ADC0  EC92  F06B         	call	__display_itoa	;wreg free
 17461                           
 17462                           ;display.c: 513: if(PORTAbits.RA0)
 17463  00ADC4  A080               	btfss	3968,0,c	;volatile
 17464  00ADC6  D002               	goto	l1425
 17465                           
 17466                           ;display.c: 514: display_content[2][8] = 'H';
 17467  00ADC8  0E48               	movlw	72
 17468  00ADCA  D001               	goto	L29
 17469  00ADCC                     l1425:
 17470                           
 17471                           ;display.c: 515: else;display.c: 516: display_content[2][8] = 'L';
 17472                           
 17473                           ; BSR set to: 2
 17474  00ADCC  0E4C               	movlw	76
 17475  00ADCE                     L29:
 17476  00ADCE  0102               	movlb	2	; () banked
 17477  00ADD0  6FA8               	movwf	(_display_content+48)& (0+255),b
 17478                           
 17479                           ; BSR set to: 2
 17480                           ;display.c: 517: if(PORTAbits.RA2)
 17481                           
 17482                           ; BSR set to: 2
 17483  00ADD2  A480               	btfss	3968,2,c	;volatile
 17484  00ADD4  D002               	goto	l1427
 17485                           
 17486                           ; BSR set to: 2
 17487                           ;display.c: 518: display_content[2][9] = 'H';
 17488  00ADD6  0E48               	movlw	72
 17489  00ADD8  D001               	goto	L30
 17490  00ADDA                     l1427:
 17491                           
 17492                           ; BSR set to: 2
 17493                           ;display.c: 519: else;display.c: 520: display_content[2][9] = 'L';
 17494                           
 17495                           ; BSR set to: 2
 17496  00ADDA  0E4C               	movlw	76
 17497  00ADDC                     L30:
 17498  00ADDC  6FA9               	movwf	(_display_content+49)& (0+255),b
 17499                           
 17500                           ; BSR set to: 2
 17501                           ;display.c: 521: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 17502                           
 17503                           ; BSR set to: 2
 17504  00ADDE  0100               	movlb	0	; () banked
 17505  00ADE0  51D6               	movf	(_os+6)& (0+255),w,b	;volatile
 17506  00ADE2  6F95               	movwf	__display_itoa@value& (0+255),b
 17507  00ADE4  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 17508  00ADE6  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 17509  00ADE8  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 17510  00ADEA  0E00               	movlw	0
 17511  00ADEC  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17512  00ADEE  0EB4               	movlw	low (_display_content+60)
 17513  00ADF0  6F98               	movwf	__display_itoa@text& (0+255),b
 17514  00ADF2  0E02               	movlw	high (_display_content+60)
 17515  00ADF4  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 17516  00ADF6  EC92  F06B         	call	__display_itoa	;wreg free
 17517                           
 17518                           ;display.c: 522: if(PORTAbits.RA1)
 17519  00ADFA  A280               	btfss	3968,1,c	;volatile
 17520  00ADFC  D002               	goto	l1429
 17521                           
 17522                           ;display.c: 523: display_content[3][8] = 'H';
 17523  00ADFE  0E48               	movlw	72
 17524  00AE00  D001               	goto	L23
 17525  00AE02                     l1429:
 17526                           
 17527                           ;display.c: 524: else;display.c: 525: display_content[3][8] = 'L';
 17528                           
 17529                           ; BSR set to: 2
 17530  00AE02  0E4C               	movlw	76
 17531  00AE04                     L23:
 17532  00AE04  0102               	movlb	2	; () banked
 17533  00AE06  6FBC               	movwf	(_display_content+68)& (0+255),b
 17534                           
 17535                           ; BSR set to: 2
 17536                           ;display.c: 527: }
 17537                           
 17538                           ; BSR set to: 2
 17539                           ;display.c: 526: break;
 17540  00AE08  D02D               	goto	l1335
 17541  00AE0A                     l1326:
 17542                           
 17543                           ; BSR set to: 2
 17544  00AE0A  0100               	movlb	0	; () banked
 17545  00AE0C  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 17546  00AE0E  0BF0               	andlw	240
 17547  00AE10  6FBC               	movwf	??_display_prepare& (0+255),b
 17548  00AE12  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 17549                           
 17550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17551                           ; Switch size 1, requested type "space"
 17552                           ; Number of cases is 1, Range of values is 0 to 0
 17553                           ; switch strategies available:
 17554                           ; Name         Instructions Cycles
 17555                           ; simple_byte            4     3 (average)
 17556                           ;	Chosen strategy is simple_byte
 17557  00AE14  51BD               	movf	(??_display_prepare+1)& (0+255),w,b
 17558  00AE16  0A00               	xorlw	0	; case 0
 17559  00AE18  A4D8               	btfss	status,2,c
 17560  00AE1A  D024               	goto	l1335
 17561                           
 17562                           ; BSR set to: 0
 17563                           ; Switch size 1, requested type "space"
 17564                           ; Number of cases is 10, Range of values is 0 to 240
 17565                           ; switch strategies available:
 17566                           ; Name         Instructions Cycles
 17567                           ; simple_byte           31    16 (average)
 17568                           ;	Chosen strategy is simple_byte
 17569  00AE1C  51BC               	movf	??_display_prepare& (0+255),w,b
 17570  00AE1E  0A00               	xorlw	0	; case 0
 17571  00AE20  B4D8               	btfsc	status,2,c
 17572  00AE22  EF1E  F051         	goto	l1327
 17573  00AE26  0A10               	xorlw	16	; case 16
 17574  00AE28  B4D8               	btfsc	status,2,c
 17575  00AE2A  EF4D  F051         	goto	l1336
 17576  00AE2E  0A30               	xorlw	48	; case 32
 17577  00AE30  B4D8               	btfsc	status,2,c
 17578  00AE32  EF9D  F051         	goto	l1346
 17579  00AE36  0A10               	xorlw	16	; case 48
 17580  00AE38  B4D8               	btfsc	status,2,c
 17581  00AE3A  EFC0  F051         	goto	l1351
 17582  00AE3E  0A70               	xorlw	112	; case 64
 17583  00AE40  B4D8               	btfsc	status,2,c
 17584  00AE42  EF30  F052         	goto	l1360
 17585  00AE46  0A10               	xorlw	16	; case 80
 17586  00AE48  B4D8               	btfsc	status,2,c
 17587  00AE4A  D46D               	goto	l1375
 17588  00AE4C  0A30               	xorlw	48	; case 96
 17589  00AE4E  B4D8               	btfsc	status,2,c
 17590  00AE50  D51C               	goto	l1388
 17591  00AE52  0A10               	xorlw	16	; case 112
 17592  00AE54  B4D8               	btfsc	status,2,c
 17593  00AE56  D61B               	goto	l1402
 17594  00AE58  0AF0               	xorlw	240	; case 128
 17595  00AE5A  B4D8               	btfsc	status,2,c
 17596  00AE5C  D668               	goto	l1406
 17597  00AE5E  0A70               	xorlw	112	; case 240
 17598  00AE60  B4D8               	btfsc	status,2,c
 17599  00AE62  D770               	goto	l1418
 17600  00AE64                     l1335:
 17601                           
 17602                           ;display.c: 529: if(!PORTDbits.RD2)
 17603  00AE64  B483               	btfsc	3971,2,c	;volatile
 17604  00AE66  0012               	return	
 17605                           
 17606                           ;display.c: 530: {;display.c: 531: display_content[0][0] = 'E';
 17607  00AE68  0E45               	movlw	69
 17608  00AE6A  0102               	movlb	2	; () banked
 17609  00AE6C  6F78               	movwf	_display_content& (0+255),b
 17610                           
 17611                           ;display.c: 532: display_content[0][1] = 'R';
 17612  00AE6E  0E52               	movlw	82
 17613  00AE70  6F79               	movwf	(_display_content+1)& (0+255),b
 17614                           
 17615                           ;display.c: 533: display_content[0][2] = 'R';
 17616  00AE72  0E52               	movlw	82
 17617  00AE74  6F7A               	movwf	(_display_content+2)& (0+255),b
 17618                           
 17619                           ;display.c: 534: display_content[0][3] = 'O';
 17620  00AE76  0E4F               	movlw	79
 17621  00AE78  6F7B               	movwf	(_display_content+3)& (0+255),b
 17622                           
 17623                           ;display.c: 535: display_content[0][4] = 'R';
 17624  00AE7A  0E52               	movlw	82
 17625  00AE7C  6F7C               	movwf	(_display_content+4)& (0+255),b
 17626  00AE7E  0012               	return	
 17627  00AE80                     __end_of_display_prepare:
 17628                           	opt stack 0
 17629                           tblptru	equ	0xFF8
 17630                           tblptrh	equ	0xFF7
 17631                           tblptrl	equ	0xFF6
 17632                           tablat	equ	0xFF5
 17633                           prodh	equ	0xFF4
 17634                           prodl	equ	0xFF3
 17635                           intcon	equ	0xFF2
 17636                           postinc0	equ	0xFEE
 17637                           wreg	equ	0xFE8
 17638                           indf1	equ	0xFE7
 17639                           postdec1	equ	0xFE5
 17640                           plusw1	equ	0xFE3
 17641                           fsr1h	equ	0xFE2
 17642                           fsr1l	equ	0xFE1
 17643                           indf2	equ	0xFDF
 17644                           postinc2	equ	0xFDE
 17645                           postdec2	equ	0xFDD
 17646                           plusw2	equ	0xFDB
 17647                           fsr2h	equ	0xFDA
 17648                           fsr2l	equ	0xFD9
 17649                           status	equ	0xFD8
 17650                           
 17651 ;; *************** function _motor_speed_from_index *****************
 17652 ;; Defined at:
 17653 ;;		line 89 in file "motor.c"
 17654 ;; Parameters:    Size  Location     Type
 17655 ;;  speed_index     2   51[BANK0 ] unsigned int 
 17656 ;; Auto vars:     Size  Location     Type
 17657 ;;		None
 17658 ;; Return value:  Size  Location     Type
 17659 ;;                  2   51[BANK0 ] unsigned int 
 17660 ;; Registers used:
 17661 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17662 ;; Tracked objects:
 17663 ;;		On entry : 0/0
 17664 ;;		On exit  : 0/0
 17665 ;;		Unchanged: 0/0
 17666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17667 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17670 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17671 ;;Total ram usage:        2 bytes
 17672 ;; Hardware stack levels used:    1
 17673 ;; Hardware stack levels required when called:   12
 17674 ;; This function calls:
 17675 ;;		__motor_get_speed_in_degrees
 17676 ;; This function is called by:
 17677 ;;		_display_prepare
 17678 ;; This function uses a non-reentrant model
 17679 ;;
 17680                           
 17681                           	psect	text55
 17682  012C6C                     __ptext55:
 17683                           	opt stack 0
 17684  012C6C                     _motor_speed_from_index:
 17685                           	opt stack 17
 17686                           
 17687                           ;motor.c: 91: return _motor_get_speed_in_degrees(speed_index);
 17688                           
 17689                           ;incstack = 0
 17690  012C6C  C093  F087         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 17691  012C70  C094  F088         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 17692  012C74  EC30  F078         	call	__motor_get_speed_in_degrees	;wreg free
 17693  012C78  C087  F093         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 17694  012C7C  C088  F094         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 17695  012C80  0012               	return	
 17696  012C82                     __end_of_motor_speed_from_index:
 17697                           	opt stack 0
 17698                           tblptru	equ	0xFF8
 17699                           tblptrh	equ	0xFF7
 17700                           tblptrl	equ	0xFF6
 17701                           tablat	equ	0xFF5
 17702                           prodh	equ	0xFF4
 17703                           prodl	equ	0xFF3
 17704                           intcon	equ	0xFF2
 17705                           postinc0	equ	0xFEE
 17706                           wreg	equ	0xFE8
 17707                           indf1	equ	0xFE7
 17708                           postdec1	equ	0xFE5
 17709                           plusw1	equ	0xFE3
 17710                           fsr1h	equ	0xFE2
 17711                           fsr1l	equ	0xFE1
 17712                           indf2	equ	0xFDF
 17713                           postinc2	equ	0xFDE
 17714                           postdec2	equ	0xFDD
 17715                           plusw2	equ	0xFDB
 17716                           fsr2h	equ	0xFDA
 17717                           fsr2l	equ	0xFD9
 17718                           status	equ	0xFD8
 17719                           
 17720 ;; *************** function __motor_get_speed_in_degrees *****************
 17721 ;; Defined at:
 17722 ;;		line 50 in file "motor.c"
 17723 ;; Parameters:    Size  Location     Type
 17724 ;;  speed_index     2   39[BANK0 ] unsigned int 
 17725 ;; Auto vars:     Size  Location     Type
 17726 ;;  lookup          4   47[BANK0 ] unsigned long 
 17727 ;;  speed           4   43[BANK0 ] float 
 17728 ;; Return value:  Size  Location     Type
 17729 ;;                  2   39[BANK0 ] unsigned int 
 17730 ;; Registers used:
 17731 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17732 ;; Tracked objects:
 17733 ;;		On entry : 0/0
 17734 ;;		On exit  : 0/0
 17735 ;;		Unchanged: 0/0
 17736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17737 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17738 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17739 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17740 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17741 ;;Total ram usage:       12 bytes
 17742 ;; Hardware stack levels used:    1
 17743 ;; Hardware stack levels required when called:   11
 17744 ;; This function calls:
 17745 ;;		___fldiv
 17746 ;;		___fltol
 17747 ;;		___lmul
 17748 ;;		___xxtofl
 17749 ;; This function is called by:
 17750 ;;		_motor_speed_from_index
 17751 ;;		_motor_get_maximum_speed
 17752 ;;		_motor_get_current_speed
 17753 ;; This function uses a non-reentrant model
 17754 ;;
 17755                           
 17756                           	psect	text56
 17757  00F060                     __ptext56:
 17758                           	opt stack 0
 17759  00F060                     __motor_get_speed_in_degrees:
 17760                           	opt stack 17
 17761                           
 17762                           ;motor.c: 52: uint32_t lookup;;motor.c: 53: float speed;;motor.c: 55: lookup = motor_spe
      +                          ed_lookup[speed_index];
 17763                           
 17764                           ;incstack = 0
 17765  00F060  90D8               	bcf	status,0,c
 17766  00F062  0100               	movlb	0	; () banked
 17767  00F064  3587               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 17768  00F066  6EF6               	movwf	tblptrl,c
 17769  00F068  3588               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 17770  00F06A  6EF7               	movwf	tblptrh,c
 17771  00F06C  0E93               	movlw	low _motor_speed_lookup
 17772  00F06E  26F6               	addwf	tblptrl,f,c
 17773  00F070  0E90               	movlw	high _motor_speed_lookup
 17774  00F072  22F7               	addwfc	tblptrh,f,c
 17775  00F074                     	if	1	;There are 3 active tblptr bytes
 17776  00F074  6AF8               	clrf	tblptru,c
 17777  00F076  0E00               	movlw	low (__mediumconst shr (0+16))
 17778  00F078  22F8               	addwfc	tblptru,f,c
 17779  00F07A                     	endif
 17780  00F07A  0009               	tblrd		*+
 17781  00F07C  CFF5 F089          	movff	tablat,??__motor_get_speed_in_degrees
 17782  00F080  0009               	tblrd		*+
 17783  00F082  CFF5 F08A          	movff	tablat,??__motor_get_speed_in_degrees+1
 17784  00F086  C089  F08F         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 17785  00F08A  C08A  F090         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 17786  00F08E  6B91               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 17787  00F090  6B92               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 17788                           
 17789                           ; BSR set to: 0
 17790                           ;motor.c: 56: lookup *= 16;
 17791  00F092  0E04               	movlw	4
 17792  00F094                     u20045:
 17793  00F094  90D8               	bcf	status,0,c
 17794  00F096  378F               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 17795  00F098  3790               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 17796  00F09A  3791               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 17797  00F09C  3792               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 17798  00F09E  2EE8               	decfsz	wreg,f,c
 17799  00F0A0  D7F9               	goto	u20045
 17800                           
 17801                           ; BSR set to: 0
 17802                           ;motor.c: 57: lookup *= 360;
 17803  00F0A2  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 17804  00F0A6  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 17805  00F0AA  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 17806  00F0AE  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 17807  00F0B2  0E68               	movlw	104
 17808  00F0B4  6F64               	movwf	___lmul@multiplicand& (0+255),b
 17809  00F0B6  0E01               	movlw	1
 17810  00F0B8  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 17811  00F0BA  0E00               	movlw	0
 17812  00F0BC  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17813  00F0BE  0E00               	movlw	0
 17814  00F0C0  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17815  00F0C2  EC63  F090         	call	___lmul	;wreg free
 17816  00F0C6  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 17817  00F0CA  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 17818  00F0CE  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 17819  00F0D2  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 17820                           
 17821                           ;motor.c: 58: lookup *= 100;
 17822  00F0D6  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 17823  00F0DA  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 17824  00F0DE  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 17825  00F0E2  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 17826  00F0E6  0E64               	movlw	100
 17827  00F0E8  0100               	movlb	0	; () banked
 17828  00F0EA  6F64               	movwf	___lmul@multiplicand& (0+255),b
 17829  00F0EC  0E00               	movlw	0
 17830  00F0EE  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 17831  00F0F0  0E00               	movlw	0
 17832  00F0F2  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17833  00F0F4  0E00               	movlw	0
 17834  00F0F6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17835  00F0F8  EC63  F090         	call	___lmul	;wreg free
 17836  00F0FC  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 17837  00F100  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 17838  00F104  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 17839  00F108  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 17840                           
 17841                           ;motor.c: 60: speed = (float) lookup;
 17842  00F10C  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 17843  00F110  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 17844  00F114  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 17845  00F118  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 17846  00F11C  0E00               	movlw	0
 17847  00F11E  ECA9  F075         	call	___xxtofl
 17848  00F122  C060  F08B         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 17849  00F126  C061  F08C         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 17850  00F12A  C062  F08D         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 17851  00F12E  C063  F08E         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 17852                           
 17853                           ;motor.c: 61: speed /= config.full_circle_in_steps;
 17854  00F132  C08B  F06E         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 17855  00F136  C08C  F06F         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 17856  00F13A  C08D  F070         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 17857  00F13E  C08E  F071         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 17858  00F142  C183  F060         	movff	_config,___xxtofl@val
 17859  00F146  C184  F061         	movff	_config+1,___xxtofl@val+1
 17860  00F14A  C185  F062         	movff	_config+2,___xxtofl@val+2
 17861  00F14E  C186  F063         	movff	_config+3,___xxtofl@val+3
 17862  00F152  0E00               	movlw	0
 17863  00F154  ECA9  F075         	call	___xxtofl
 17864  00F158  C060  F072         	movff	?___xxtofl,___fldiv@a
 17865  00F15C  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 17866  00F160  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 17867  00F164  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 17868  00F168  EC95  F066         	call	___fldiv	;wreg free
 17869  00F16C  C06E  F08B         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 17870  00F170  C06F  F08C         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 17871  00F174  C070  F08D         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 17872  00F178  C071  F08E         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 17873                           
 17874                           ;motor.c: 64: return (uint16_t) speed;
 17875  00F17C  C08B  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 17876  00F180  C08C  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 17877  00F184  C08D  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 17878  00F188  C08E  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 17879  00F18C  EC13  F082         	call	___fltol	;wreg free
 17880  00F190  C060  F087         	movff	?___fltol,?__motor_get_speed_in_degrees
 17881  00F194  C061  F088         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 17882  00F198  0012               	return	
 17883  00F19A                     __end_of__motor_get_speed_in_degrees:
 17884                           	opt stack 0
 17885                           tblptru	equ	0xFF8
 17886                           tblptrh	equ	0xFF7
 17887                           tblptrl	equ	0xFF6
 17888                           tablat	equ	0xFF5
 17889                           prodh	equ	0xFF4
 17890                           prodl	equ	0xFF3
 17891                           intcon	equ	0xFF2
 17892                           postinc0	equ	0xFEE
 17893                           wreg	equ	0xFE8
 17894                           indf1	equ	0xFE7
 17895                           postdec1	equ	0xFE5
 17896                           plusw1	equ	0xFE3
 17897                           fsr1h	equ	0xFE2
 17898                           fsr1l	equ	0xFE1
 17899                           indf2	equ	0xFDF
 17900                           postinc2	equ	0xFDE
 17901                           postdec2	equ	0xFDD
 17902                           plusw2	equ	0xFDB
 17903                           fsr2h	equ	0xFDA
 17904                           fsr2l	equ	0xFD9
 17905                           status	equ	0xFD8
 17906                           
 17907 ;; *************** function ___lmul *****************
 17908 ;; Defined at:
 17909 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 17910 ;; Parameters:    Size  Location     Type
 17911 ;;  multiplier      4    0[BANK0 ] unsigned long 
 17912 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 17913 ;; Auto vars:     Size  Location     Type
 17914 ;;  product         4    8[BANK0 ] unsigned long 
 17915 ;; Return value:  Size  Location     Type
 17916 ;;                  4    0[BANK0 ] unsigned long 
 17917 ;; Registers used:
 17918 ;;		wreg, status,2, status,0
 17919 ;; Tracked objects:
 17920 ;;		On entry : 0/0
 17921 ;;		On exit  : 0/0
 17922 ;;		Unchanged: 0/0
 17923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17924 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17925 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17927 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17928 ;;Total ram usage:       12 bytes
 17929 ;; Hardware stack levels used:    1
 17930 ;; Hardware stack levels required when called:   10
 17931 ;; This function calls:
 17932 ;;		Nothing
 17933 ;; This function is called by:
 17934 ;;		__motor_get_speed_in_degrees
 17935 ;; This function uses a non-reentrant model
 17936 ;;
 17937                           
 17938                           	psect	text57
 17939  0120C6                     __ptext57:
 17940                           	opt stack 0
 17941  0120C6                     ___lmul:
 17942                           	opt stack 17
 17943                           
 17944                           ;incstack = 0
 17945  0120C6  0E00               	movlw	0
 17946  0120C8  0100               	movlb	0	; () banked
 17947  0120CA  6F68               	movwf	___lmul@product& (0+255),b
 17948  0120CC  0E00               	movlw	0
 17949  0120CE  6F69               	movwf	(___lmul@product+1)& (0+255),b
 17950  0120D0  0E00               	movlw	0
 17951  0120D2  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 17952  0120D4  0E00               	movlw	0
 17953  0120D6  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 17954  0120D8                     
 17955                           ; BSR set to: 0
 17956                           
 17957                           ; BSR set to: 0
 17958  0120D8  A160               	btfss	___lmul@multiplier& (0+255),0,b
 17959  0120DA  D008               	goto	l2734
 17960                           
 17961                           ; BSR set to: 0
 17962  0120DC  5164               	movf	___lmul@multiplicand& (0+255),w,b
 17963  0120DE  2768               	addwf	___lmul@product& (0+255),f,b
 17964  0120E0  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 17965  0120E2  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 17966  0120E4  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 17967  0120E6  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 17968  0120E8  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 17969  0120EA  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 17970  0120EC                     l2734:
 17971                           
 17972                           ; BSR set to: 0
 17973                           
 17974                           ; BSR set to: 0
 17975  0120EC  90D8               	bcf	status,0,c
 17976  0120EE  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 17977  0120F0  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 17978  0120F2  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 17979  0120F4  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 17980                           
 17981                           ; BSR set to: 0
 17982  0120F6  90D8               	bcf	status,0,c
 17983  0120F8  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 17984  0120FA  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 17985  0120FC  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 17986  0120FE  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 17987  012100  5160               	movf	___lmul@multiplier& (0+255),w,b
 17988  012102  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 17989  012104  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 17990  012106  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 17991  012108  A4D8               	btfss	status,2,c
 17992  01210A  D7E6               	goto	l2733
 17993                           
 17994                           ; BSR set to: 0
 17995  01210C  C068  F060         	movff	___lmul@product,?___lmul
 17996  012110  C069  F061         	movff	___lmul@product+1,?___lmul+1
 17997  012114  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 17998  012118  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 17999                           
 18000                           ; BSR set to: 0
 18001  01211C  0012               	return		;funcret
 18002  01211E                     __end_of___lmul:
 18003                           	opt stack 0
 18004                           tblptru	equ	0xFF8
 18005                           tblptrh	equ	0xFF7
 18006                           tblptrl	equ	0xFF6
 18007                           tablat	equ	0xFF5
 18008                           prodh	equ	0xFF4
 18009                           prodl	equ	0xFF3
 18010                           intcon	equ	0xFF2
 18011                           postinc0	equ	0xFEE
 18012                           wreg	equ	0xFE8
 18013                           indf1	equ	0xFE7
 18014                           postdec1	equ	0xFE5
 18015                           plusw1	equ	0xFE3
 18016                           fsr1h	equ	0xFE2
 18017                           fsr1l	equ	0xFE1
 18018                           indf2	equ	0xFDF
 18019                           postinc2	equ	0xFDE
 18020                           postdec2	equ	0xFDD
 18021                           plusw2	equ	0xFDB
 18022                           fsr2h	equ	0xFDA
 18023                           fsr2l	equ	0xFD9
 18024                           status	equ	0xFD8
 18025                           
 18026 ;; *************** function ___fldiv *****************
 18027 ;; Defined at:
 18028 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 18029 ;; Parameters:    Size  Location     Type
 18030 ;;  b               4   14[BANK0 ] unsigned long 
 18031 ;;  a               4   18[BANK0 ] unsigned long 
 18032 ;; Auto vars:     Size  Location     Type
 18033 ;;  grs             4   33[BANK0 ] unsigned long 
 18034 ;;  rem             4   26[BANK0 ] unsigned long 
 18035 ;;  new_exp         2   31[BANK0 ] int 
 18036 ;;  aexp            1   38[BANK0 ] unsigned char 
 18037 ;;  bexp            1   37[BANK0 ] unsigned char 
 18038 ;;  sign            1   30[BANK0 ] unsigned char 
 18039 ;; Return value:  Size  Location     Type
 18040 ;;                  4   14[BANK0 ] unsigned char 
 18041 ;; Registers used:
 18042 ;;		wreg, status,2, status,0
 18043 ;; Tracked objects:
 18044 ;;		On entry : 0/0
 18045 ;;		On exit  : 0/0
 18046 ;;		Unchanged: 0/0
 18047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18048 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18049 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18050 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18051 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18052 ;;Total ram usage:       25 bytes
 18053 ;; Hardware stack levels used:    1
 18054 ;; Hardware stack levels required when called:   10
 18055 ;; This function calls:
 18056 ;;		Nothing
 18057 ;; This function is called by:
 18058 ;;		_main
 18059 ;;		_motor_steps_from_degrees
 18060 ;;		__motor_get_speed_in_degrees
 18061 ;;		__step_position_from_divide_position
 18062 ;;		_motor_divide_jump_to_nearest
 18063 ;;		_motor_arc_move
 18064 ;;		_motor_go_to_degrees_position
 18065 ;; This function uses a non-reentrant model
 18066 ;;
 18067                           
 18068                           	psect	text58
 18069  00CD2A                     __ptext58:
 18070                           	opt stack 0
 18071  00CD2A                     ___fldiv:
 18072                           	opt stack 17
 18073                           
 18074                           ; BSR set to: 0
 18075                           ;incstack = 0
 18076  00CD2A  0100               	movlb	0	; () banked
 18077  00CD2C  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 18078  00CD2E  0B80               	andlw	128
 18079  00CD30  6F7E               	movwf	___fldiv@sign& (0+255),b
 18080  00CD32  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 18081  00CD34  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 18082  00CD36  6F85               	movwf	___fldiv@bexp& (0+255),b
 18083                           
 18084                           ; BSR set to: 0
 18085  00CD38  BF70               	btfsc	(___fldiv@b+2)& (0+255),7,b
 18086                           
 18087                           ; BSR set to: 0
 18088  00CD3A  8185               	bsf	___fldiv@bexp& (0+255),0,b
 18089                           
 18090                           ; BSR set to: 0
 18091                           
 18092                           ; BSR set to: 0
 18093  00CD3C  5185               	movf	___fldiv@bexp& (0+255),w,b
 18094  00CD3E  B4D8               	btfsc	status,2,c
 18095  00CD40  D00D               	goto	l3286
 18096                           
 18097                           ; BSR set to: 0
 18098  00CD42  2985               	incf	___fldiv@bexp& (0+255),w,b
 18099  00CD44  A4D8               	btfss	status,2,c
 18100  00CD46  D008               	goto	l3287
 18101                           
 18102                           ; BSR set to: 0
 18103  00CD48  0E00               	movlw	0
 18104  00CD4A  6F6E               	movwf	___fldiv@b& (0+255),b
 18105  00CD4C  0E00               	movlw	0
 18106  00CD4E  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 18107  00CD50  0E00               	movlw	0
 18108  00CD52  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 18109  00CD54  0E00               	movlw	0
 18110  00CD56  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 18111  00CD58                     l3287:
 18112                           
 18113                           ; BSR set to: 0
 18114                           
 18115                           ; BSR set to: 0
 18116  00CD58  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 18117  00CD5A  D006               	goto	L32
 18118  00CD5C                     l3286:
 18119                           
 18120                           ; BSR set to: 0
 18121                           
 18122                           ; BSR set to: 0
 18123  00CD5C  0E00               	movlw	0
 18124  00CD5E  6F6E               	movwf	___fldiv@b& (0+255),b
 18125  00CD60  0E00               	movlw	0
 18126  00CD62  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 18127  00CD64  0E00               	movlw	0
 18128  00CD66  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 18129  00CD68                     L32:
 18130  00CD68  0E00               	movlw	0
 18131  00CD6A  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 18132                           
 18133                           ; BSR set to: 0
 18134                           
 18135                           ; BSR set to: 0
 18136  00CD6C  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 18137  00CD6E  0B80               	andlw	128
 18138  00CD70  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
 18139                           
 18140                           ; BSR set to: 0
 18141  00CD72  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 18142  00CD74  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 18143  00CD76  6F86               	movwf	___fldiv@aexp& (0+255),b
 18144                           
 18145                           ; BSR set to: 0
 18146  00CD78  BF74               	btfsc	(___fldiv@a+2)& (0+255),7,b
 18147                           
 18148                           ; BSR set to: 0
 18149  00CD7A  8186               	bsf	___fldiv@aexp& (0+255),0,b
 18150                           
 18151                           ; BSR set to: 0
 18152                           
 18153                           ; BSR set to: 0
 18154  00CD7C  5186               	movf	___fldiv@aexp& (0+255),w,b
 18155  00CD7E  B4D8               	btfsc	status,2,c
 18156  00CD80  D00D               	goto	l3290
 18157                           
 18158                           ; BSR set to: 0
 18159  00CD82  2986               	incf	___fldiv@aexp& (0+255),w,b
 18160  00CD84  A4D8               	btfss	status,2,c
 18161  00CD86  D008               	goto	l3291
 18162                           
 18163                           ; BSR set to: 0
 18164  00CD88  0E00               	movlw	0
 18165  00CD8A  6F72               	movwf	___fldiv@a& (0+255),b
 18166  00CD8C  0E00               	movlw	0
 18167  00CD8E  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 18168  00CD90  0E00               	movlw	0
 18169  00CD92  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 18170  00CD94  0E00               	movlw	0
 18171  00CD96  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 18172  00CD98                     l3291:
 18173                           
 18174                           ; BSR set to: 0
 18175                           
 18176                           ; BSR set to: 0
 18177  00CD98  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 18178  00CD9A  D006               	goto	L33
 18179  00CD9C                     l3290:
 18180                           
 18181                           ; BSR set to: 0
 18182                           
 18183                           ; BSR set to: 0
 18184  00CD9C  0E00               	movlw	0
 18185  00CD9E  6F72               	movwf	___fldiv@a& (0+255),b
 18186  00CDA0  0E00               	movlw	0
 18187  00CDA2  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 18188  00CDA4  0E00               	movlw	0
 18189  00CDA6  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 18190  00CDA8                     L33:
 18191  00CDA8  0E00               	movlw	0
 18192  00CDAA  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 18193                           
 18194                           ; BSR set to: 0
 18195                           
 18196                           ; BSR set to: 0
 18197  00CDAC  5172               	movf	___fldiv@a& (0+255),w,b
 18198  00CDAE  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 18199  00CDB0  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 18200  00CDB2  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 18201  00CDB4  A4D8               	btfss	status,2,c
 18202  00CDB6  D017               	goto	l3293
 18203                           
 18204                           ; BSR set to: 0
 18205  00CDB8  0E00               	movlw	0
 18206  00CDBA  6F6E               	movwf	___fldiv@b& (0+255),b
 18207  00CDBC  0E00               	movlw	0
 18208  00CDBE  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 18209  00CDC0  0E00               	movlw	0
 18210  00CDC2  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 18211  00CDC4  0E00               	movlw	0
 18212  00CDC6  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 18213                           
 18214                           ; BSR set to: 0
 18215  00CDC8  0E80               	movlw	128
 18216  00CDCA  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 18217  00CDCC  0E7F               	movlw	127
 18218  00CDCE  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 18219                           
 18220                           ; BSR set to: 0
 18221  00CDD0  517E               	movf	___fldiv@sign& (0+255),w,b
 18222  00CDD2  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 18223                           
 18224                           ; BSR set to: 0
 18225  00CDD4  C06E  F06E         	movff	___fldiv@b,?___fldiv
 18226  00CDD8  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 18227  00CDDC  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 18228  00CDE0  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 18229                           
 18230                           ; BSR set to: 0
 18231  00CDE4  0012               	return	
 18232  00CDE6                     l3293:
 18233                           
 18234                           ; BSR set to: 0
 18235                           
 18236                           ; BSR set to: 0
 18237  00CDE6  5185               	movf	___fldiv@bexp& (0+255),w,b
 18238  00CDE8  A4D8               	btfss	status,2,c
 18239  00CDEA  D011               	goto	l3295
 18240                           
 18241                           ; BSR set to: 0
 18242  00CDEC  0E00               	movlw	0
 18243  00CDEE  6F6E               	movwf	___fldiv@b& (0+255),b
 18244  00CDF0  0E00               	movlw	0
 18245  00CDF2  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 18246  00CDF4  0E00               	movlw	0
 18247  00CDF6  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 18248  00CDF8  0E00               	movlw	0
 18249  00CDFA  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 18250                           
 18251                           ; BSR set to: 0
 18252  00CDFC  C06E  F06E         	movff	___fldiv@b,?___fldiv
 18253  00CE00  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 18254  00CE04  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 18255  00CE08  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 18256                           
 18257                           ; BSR set to: 0
 18258  00CE0C  0012               	return	
 18259  00CE0E                     l3295:
 18260                           
 18261                           ; BSR set to: 0
 18262                           
 18263                           ; BSR set to: 0
 18264  00CE0E  5186               	movf	___fldiv@aexp& (0+255),w,b
 18265  00CE10  6F76               	movwf	??___fldiv& (0+255),b
 18266  00CE12  6B77               	clrf	(??___fldiv+1)& (0+255),b
 18267  00CE14  1F76               	comf	??___fldiv& (0+255),f,b
 18268  00CE16  1F77               	comf	(??___fldiv+1)& (0+255),f,b
 18269  00CE18  4B76               	infsnz	??___fldiv& (0+255),f,b
 18270  00CE1A  2B77               	incf	(??___fldiv+1)& (0+255),f,b
 18271  00CE1C  5185               	movf	___fldiv@bexp& (0+255),w,b
 18272  00CE1E  6F78               	movwf	(??___fldiv+2)& (0+255),b
 18273  00CE20  6B79               	clrf	(??___fldiv+3)& (0+255),b
 18274  00CE22  5176               	movf	??___fldiv& (0+255),w,b
 18275  00CE24  2778               	addwf	(??___fldiv+2)& (0+255),f,b
 18276  00CE26  5177               	movf	(??___fldiv+1)& (0+255),w,b
 18277  00CE28  2379               	addwfc	(??___fldiv+3)& (0+255),f,b
 18278  00CE2A  0E7F               	movlw	127
 18279  00CE2C  2578               	addwf	(??___fldiv+2)& (0+255),w,b
 18280  00CE2E  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 18281  00CE30  0E00               	movlw	0
 18282  00CE32  2179               	addwfc	(??___fldiv+3)& (0+255),w,b
 18283  00CE34  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 18284                           
 18285                           ; BSR set to: 0
 18286  00CE36  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
 18287  00CE3A  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
 18288  00CE3E  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
 18289  00CE42  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
 18290                           
 18291                           ; BSR set to: 0
 18292  00CE46  0E00               	movlw	0
 18293  00CE48  6F6E               	movwf	___fldiv@b& (0+255),b
 18294  00CE4A  0E00               	movlw	0
 18295  00CE4C  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 18296  00CE4E  0E00               	movlw	0
 18297  00CE50  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 18298  00CE52  0E00               	movlw	0
 18299  00CE54  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 18300                           
 18301                           ; BSR set to: 0
 18302  00CE56  0E00               	movlw	0
 18303  00CE58  6F81               	movwf	___fldiv@grs& (0+255),b
 18304  00CE5A  0E00               	movlw	0
 18305  00CE5C  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 18306  00CE5E  0E00               	movlw	0
 18307  00CE60  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 18308  00CE62  0E00               	movlw	0
 18309  00CE64  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 18310                           
 18311                           ; BSR set to: 0
 18312  00CE66  0E00               	movlw	0
 18313  00CE68  6F86               	movwf	___fldiv@aexp& (0+255),b
 18314  00CE6A  D028               	goto	l3296
 18315  00CE6C                     
 18316                           ; BSR set to: 0
 18317                           
 18318                           ; BSR set to: 0
 18319  00CE6C  5186               	movf	___fldiv@aexp& (0+255),w,b
 18320  00CE6E  B4D8               	btfsc	status,2,c
 18321  00CE70  D011               	goto	l3298
 18322                           
 18323                           ; BSR set to: 0
 18324  00CE72  90D8               	bcf	status,0,c
 18325  00CE74  377A               	rlcf	___fldiv@rem& (0+255),f,b
 18326  00CE76  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 18327  00CE78  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 18328  00CE7A  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 18329  00CE7C  90D8               	bcf	status,0,c
 18330  00CE7E  376E               	rlcf	___fldiv@b& (0+255),f,b
 18331  00CE80  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 18332  00CE82  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 18333  00CE84  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 18334                           
 18335                           ; BSR set to: 0
 18336  00CE86  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 18337                           
 18338                           ; BSR set to: 0
 18339  00CE88  816E               	bsf	___fldiv@b& (0+255),0,b
 18340                           
 18341                           ; BSR set to: 0
 18342  00CE8A  90D8               	bcf	status,0,c
 18343  00CE8C  3781               	rlcf	___fldiv@grs& (0+255),f,b
 18344  00CE8E  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 18345  00CE90  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 18346  00CE92  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 18347  00CE94                     l3298:
 18348                           
 18349                           ; BSR set to: 0
 18350                           
 18351                           ; BSR set to: 0
 18352  00CE94  5172               	movf	___fldiv@a& (0+255),w,b
 18353  00CE96  5D7A               	subwf	___fldiv@rem& (0+255),w,b
 18354  00CE98  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 18355  00CE9A  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 18356  00CE9C  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 18357  00CE9E  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 18358  00CEA0  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 18359  00CEA2  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 18360  00CEA4  A0D8               	btfss	status,0,c
 18361  00CEA6  D009               	goto	l3300
 18362                           
 18363                           ; BSR set to: 0
 18364  00CEA8  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 18365                           
 18366                           ; BSR set to: 0
 18367  00CEAA  5172               	movf	___fldiv@a& (0+255),w,b
 18368  00CEAC  5F7A               	subwf	___fldiv@rem& (0+255),f,b
 18369  00CEAE  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 18370  00CEB0  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 18371  00CEB2  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 18372  00CEB4  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 18373  00CEB6  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 18374  00CEB8  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 18375  00CEBA                     l3300:
 18376                           
 18377                           ; BSR set to: 0
 18378                           
 18379                           ; BSR set to: 0
 18380  00CEBA  2B86               	incf	___fldiv@aexp& (0+255),f,b
 18381  00CEBC                     l3296:
 18382                           
 18383                           ; BSR set to: 0
 18384  00CEBC  0E19               	movlw	25
 18385  00CEBE  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 18386  00CEC0  D7D5               	goto	l3297
 18387                           
 18388                           ; BSR set to: 0
 18389                           
 18390                           ; BSR set to: 0
 18391  00CEC2  517A               	movf	___fldiv@rem& (0+255),w,b
 18392  00CEC4  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 18393  00CEC6  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 18394  00CEC8  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 18395  00CECA  B4D8               	btfsc	status,2,c
 18396  00CECC  D011               	goto	l3303
 18397                           
 18398                           ; BSR set to: 0
 18399  00CECE  8181               	bsf	___fldiv@grs& (0+255),0,b
 18400                           
 18401                           ; BSR set to: 0
 18402  00CED0  D00F               	goto	l3303
 18403  00CED2                     
 18404                           ; BSR set to: 0
 18405                           
 18406                           ; BSR set to: 0
 18407  00CED2  90D8               	bcf	status,0,c
 18408  00CED4  376E               	rlcf	___fldiv@b& (0+255),f,b
 18409  00CED6  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 18410  00CED8  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 18411  00CEDA  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 18412                           
 18413                           ; BSR set to: 0
 18414  00CEDC  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 18415                           
 18416                           ; BSR set to: 0
 18417  00CEDE  816E               	bsf	___fldiv@b& (0+255),0,b
 18418                           
 18419                           ; BSR set to: 0
 18420  00CEE0  90D8               	bcf	status,0,c
 18421  00CEE2  3781               	rlcf	___fldiv@grs& (0+255),f,b
 18422  00CEE4  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 18423  00CEE6  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 18424  00CEE8  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 18425  00CEEA  077F               	decf	___fldiv@new_exp& (0+255),f,b
 18426  00CEEC  A0D8               	btfss	status,0,c
 18427  00CEEE  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 18428  00CEF0                     l3303:
 18429                           
 18430                           ; BSR set to: 0
 18431                           
 18432                           ; BSR set to: 0
 18433  00CEF0  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 18434  00CEF2  D7EF               	goto	l3304
 18435                           
 18436                           ; BSR set to: 0
 18437                           
 18438                           ; BSR set to: 0
 18439  00CEF4  0E00               	movlw	0
 18440  00CEF6  6F86               	movwf	___fldiv@aexp& (0+255),b
 18441                           
 18442                           ; BSR set to: 0
 18443  00CEF8  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 18444  00CEFA  D016               	goto	l3310
 18445                           
 18446                           ; BSR set to: 0
 18447  00CEFC  0EFF               	movlw	255
 18448  00CEFE  1581               	andwf	___fldiv@grs& (0+255),w,b
 18449  00CF00  6F76               	movwf	??___fldiv& (0+255),b
 18450  00CF02  0EFF               	movlw	255
 18451  00CF04  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 18452  00CF06  6F77               	movwf	(??___fldiv+1)& (0+255),b
 18453  00CF08  0EFF               	movlw	255
 18454  00CF0A  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 18455  00CF0C  6F78               	movwf	(??___fldiv+2)& (0+255),b
 18456  00CF0E  0E7F               	movlw	127
 18457  00CF10  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 18458  00CF12  6F79               	movwf	(??___fldiv+3)& (0+255),b
 18459  00CF14  5176               	movf	??___fldiv& (0+255),w,b
 18460  00CF16  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 18461  00CF18  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 18462  00CF1A  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 18463  00CF1C  A4D8               	btfss	status,2,c
 18464  00CF1E  D002               	goto	u19030
 18465                           
 18466                           ; BSR set to: 0
 18467                           
 18468                           ; BSR set to: 0
 18469  00CF20  A16E               	btfss	___fldiv@b& (0+255),0,b
 18470  00CF22  D002               	goto	l3310
 18471  00CF24                     u19030:
 18472                           
 18473                           ; BSR set to: 0
 18474  00CF24  0E01               	movlw	1
 18475  00CF26  6F86               	movwf	___fldiv@aexp& (0+255),b
 18476  00CF28                     l3310:
 18477                           
 18478                           ; BSR set to: 0
 18479                           
 18480                           ; BSR set to: 0
 18481                           
 18482                           ; BSR set to: 0
 18483  00CF28  5186               	movf	___fldiv@aexp& (0+255),w,b
 18484  00CF2A  B4D8               	btfsc	status,2,c
 18485  00CF2C  D01F               	goto	l3312
 18486                           
 18487                           ; BSR set to: 0
 18488  00CF2E  0E01               	movlw	1
 18489  00CF30  276E               	addwf	___fldiv@b& (0+255),f,b
 18490  00CF32  0E00               	movlw	0
 18491  00CF34  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 18492  00CF36  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 18493  00CF38  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 18494                           
 18495                           ; BSR set to: 0
 18496  00CF3A  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 18497  00CF3C  D017               	goto	l3312
 18498                           
 18499                           ; BSR set to: 0
 18500  00CF3E  C06E  F076         	movff	___fldiv@b,??___fldiv
 18501  00CF42  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 18502  00CF46  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 18503  00CF4A  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 18504  00CF4E  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 18505  00CF50  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 18506  00CF52  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 18507  00CF54  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 18508  00CF56  3376               	rrcf	??___fldiv& (0+255),f,b
 18509  00CF58  C076  F06E         	movff	??___fldiv,___fldiv@b
 18510  00CF5C  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 18511  00CF60  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 18512  00CF64  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 18513                           
 18514                           ; BSR set to: 0
 18515  00CF68  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 18516  00CF6A  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 18517  00CF6C                     l3312:
 18518                           
 18519                           ; BSR set to: 0
 18520                           
 18521                           ; BSR set to: 0
 18522                           
 18523                           ; BSR set to: 0
 18524  00CF6C  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 18525  00CF6E  D010               	goto	l3313
 18526  00CF70  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 18527  00CF72  E103               	bnz	u19060
 18528  00CF74  297F               	incf	___fldiv@new_exp& (0+255),w,b
 18529  00CF76  A0D8               	btfss	status,0,c
 18530  00CF78  D00B               	goto	l3313
 18531  00CF7A                     u19060:
 18532                           
 18533                           ; BSR set to: 0
 18534  00CF7A  0E00               	movlw	0
 18535  00CF7C  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 18536  00CF7E  697F               	setf	___fldiv@new_exp& (0+255),b
 18537  00CF80  0E00               	movlw	0
 18538  00CF82  6F6E               	movwf	___fldiv@b& (0+255),b
 18539  00CF84  0E00               	movlw	0
 18540  00CF86  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 18541  00CF88  0E00               	movlw	0
 18542  00CF8A  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 18543  00CF8C  0E00               	movlw	0
 18544  00CF8E  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 18545  00CF90                     l3313:
 18546                           
 18547                           ; BSR set to: 0
 18548                           
 18549                           ; BSR set to: 0
 18550  00CF90  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 18551  00CF92  D005               	goto	u19070
 18552  00CF94  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 18553  00CF96  E111               	bnz	l19476
 18554  00CF98  057F               	decf	___fldiv@new_exp& (0+255),w,b
 18555  00CF9A  B0D8               	btfsc	status,0,c
 18556  00CF9C  D00E               	goto	l3314
 18557  00CF9E                     u19070:
 18558                           
 18559                           ; BSR set to: 0
 18560  00CF9E  0E00               	movlw	0
 18561  00CFA0  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 18562  00CFA2  0E00               	movlw	0
 18563  00CFA4  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 18564  00CFA6  0E00               	movlw	0
 18565  00CFA8  6F6E               	movwf	___fldiv@b& (0+255),b
 18566  00CFAA  0E00               	movlw	0
 18567  00CFAC  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 18568  00CFAE  0E00               	movlw	0
 18569  00CFB0  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 18570  00CFB2  0E00               	movlw	0
 18571  00CFB4  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 18572  00CFB6  0E00               	movlw	0
 18573  00CFB8  6F7E               	movwf	___fldiv@sign& (0+255),b
 18574  00CFBA                     l3314:
 18575  00CFBA                     l19476:
 18576                           
 18577                           ; BSR set to: 0
 18578  00CFBA  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 18579                           
 18580                           ; BSR set to: 0
 18581  00CFBE  A185               	btfss	___fldiv@bexp& (0+255),0,b
 18582  00CFC0  D002               	goto	l3315
 18583                           
 18584                           ; BSR set to: 0
 18585  00CFC2  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 18586  00CFC4  D001               	goto	l3316
 18587  00CFC6                     l3315:
 18588                           
 18589                           ; BSR set to: 0
 18590                           
 18591                           ; BSR set to: 0
 18592  00CFC6  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 18593  00CFC8                     l3316:
 18594                           
 18595                           ; BSR set to: 0
 18596                           
 18597                           ; BSR set to: 0
 18598  00CFC8  90D8               	bcf	status,0,c
 18599  00CFCA  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 18600  00CFCC  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 18601                           
 18602                           ; BSR set to: 0
 18603  00CFCE  517E               	movf	___fldiv@sign& (0+255),w,b
 18604  00CFD0  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 18605                           
 18606                           ; BSR set to: 0
 18607  00CFD2  C06E  F06E         	movff	___fldiv@b,?___fldiv
 18608  00CFD6  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 18609  00CFDA  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 18610  00CFDE  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 18611  00CFE2  0012               	return	
 18612  00CFE4                     __end_of___fldiv:
 18613                           	opt stack 0
 18614                           tblptru	equ	0xFF8
 18615                           tblptrh	equ	0xFF7
 18616                           tblptrl	equ	0xFF6
 18617                           tablat	equ	0xFF5
 18618                           prodh	equ	0xFF4
 18619                           prodl	equ	0xFF3
 18620                           intcon	equ	0xFF2
 18621                           postinc0	equ	0xFEE
 18622                           wreg	equ	0xFE8
 18623                           indf1	equ	0xFE7
 18624                           postdec1	equ	0xFE5
 18625                           plusw1	equ	0xFE3
 18626                           fsr1h	equ	0xFE2
 18627                           fsr1l	equ	0xFE1
 18628                           indf2	equ	0xFDF
 18629                           postinc2	equ	0xFDE
 18630                           postdec2	equ	0xFDD
 18631                           plusw2	equ	0xFDB
 18632                           fsr2h	equ	0xFDA
 18633                           fsr2l	equ	0xFD9
 18634                           status	equ	0xFD8
 18635                           
 18636 ;; *************** function __display_signed_itoa *****************
 18637 ;; Defined at:
 18638 ;;		line 116 in file "display.c"
 18639 ;; Parameters:    Size  Location     Type
 18640 ;;  value           2   47[BANK0 ] int 
 18641 ;;  text            2   49[BANK0 ] PTR unsigned char 
 18642 ;;		 -> display_prepare@temp(10), 
 18643 ;; Auto vars:     Size  Location     Type
 18644 ;;		None
 18645 ;; Return value:  Size  Location     Type
 18646 ;;                  1    wreg      void 
 18647 ;; Registers used:
 18648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18649 ;; Tracked objects:
 18650 ;;		On entry : 0/0
 18651 ;;		On exit  : 0/0
 18652 ;;		Unchanged: 0/0
 18653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18654 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18657 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18658 ;;Total ram usage:        4 bytes
 18659 ;; Hardware stack levels used:    1
 18660 ;; Hardware stack levels required when called:   14
 18661 ;; This function calls:
 18662 ;;		__display_padded_itoa
 18663 ;; This function is called by:
 18664 ;;		_display_prepare
 18665 ;; This function uses a non-reentrant model
 18666 ;;
 18667                           
 18668                           	psect	text59
 18669  012530                     __ptext59:
 18670                           	opt stack 0
 18671  012530                     __display_signed_itoa:
 18672                           	opt stack 15
 18673                           
 18674                           ;display.c: 118: if(value<0)
 18675                           
 18676                           ; BSR set to: 0
 18677                           ;incstack = 0
 18678  012530  0100               	movlb	0	; () banked
 18679  012532  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 18680  012534  D00A               	goto	l1290
 18681                           
 18682                           ; BSR set to: 0
 18683                           ;display.c: 119: {;display.c: 120: value = -value;
 18684  012536  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 18685  012538  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 18686  01253A  B0D8               	btfsc	status,0,c
 18687  01253C  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 18688                           
 18689                           ; BSR set to: 0
 18690                           ;display.c: 121: text[0] = '-';
 18691  01253E  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 18692  012542  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 18693  012546  0E2D               	movlw	45
 18694  012548  D005               	goto	L34
 18695  01254A                     l1290:
 18696                           
 18697                           ; BSR set to: 0
 18698                           ;display.c: 123: else;display.c: 124: {;display.c: 125: text[0] = '+';
 18699                           
 18700                           ; BSR set to: 0
 18701  01254A  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 18702  01254E  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 18703  012552  0E2B               	movlw	43
 18704  012554                     L34:
 18705  012554  6EDF               	movwf	indf2,c
 18706                           
 18707                           ; BSR set to: 0
 18708                           ;display.c: 126: };display.c: 127: _display_padded_itoa(value, 0, &text[1]);
 18709                           
 18710                           ; BSR set to: 0
 18711  012556  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 18712  01255A  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 18713  01255E  0E00               	movlw	0
 18714  012560  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 18715  012562  0E01               	movlw	1
 18716  012564  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 18717  012566  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 18718  012568  0E00               	movlw	0
 18719  01256A  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 18720  01256C  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 18721  01256E  EC32  F081         	call	__display_padded_itoa	;wreg free
 18722  012572  0012               	return		;funcret
 18723  012574                     __end_of__display_signed_itoa:
 18724                           	opt stack 0
 18725                           tblptru	equ	0xFF8
 18726                           tblptrh	equ	0xFF7
 18727                           tblptrl	equ	0xFF6
 18728                           tablat	equ	0xFF5
 18729                           prodh	equ	0xFF4
 18730                           prodl	equ	0xFF3
 18731                           intcon	equ	0xFF2
 18732                           postinc0	equ	0xFEE
 18733                           wreg	equ	0xFE8
 18734                           indf1	equ	0xFE7
 18735                           postdec1	equ	0xFE5
 18736                           plusw1	equ	0xFE3
 18737                           fsr1h	equ	0xFE2
 18738                           fsr1l	equ	0xFE1
 18739                           indf2	equ	0xFDF
 18740                           postinc2	equ	0xFDE
 18741                           postdec2	equ	0xFDD
 18742                           plusw2	equ	0xFDB
 18743                           fsr2h	equ	0xFDA
 18744                           fsr2l	equ	0xFD9
 18745                           status	equ	0xFD8
 18746                           
 18747 ;; *************** function __display_padded_itoa *****************
 18748 ;; Defined at:
 18749 ;;		line 94 in file "display.c"
 18750 ;; Parameters:    Size  Location     Type
 18751 ;;  value           2   24[BANK0 ] int 
 18752 ;;  length          1   26[BANK0 ] unsigned char 
 18753 ;;  text            2   27[BANK0 ] PTR unsigned char 
 18754 ;;		 -> display_prepare@temp(10), 
 18755 ;; Auto vars:     Size  Location     Type
 18756 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 18757 ;;  padding         1   46[BANK0 ] unsigned char 
 18758 ;;  pos             1   45[BANK0 ] unsigned char 
 18759 ;;  len             1   44[BANK0 ] unsigned char 
 18760 ;; Return value:  Size  Location     Type
 18761 ;;                  1    wreg      void 
 18762 ;; Registers used:
 18763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18764 ;; Tracked objects:
 18765 ;;		On entry : 0/0
 18766 ;;		On exit  : 0/0
 18767 ;;		Unchanged: 0/0
 18768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18769 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18770 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18771 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18772 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18773 ;;Total ram usage:       23 bytes
 18774 ;; Hardware stack levels used:    1
 18775 ;; Hardware stack levels required when called:   13
 18776 ;; This function calls:
 18777 ;;		_itoa
 18778 ;;		_strlen
 18779 ;; This function is called by:
 18780 ;;		__display_signed_itoa
 18781 ;;		_display_prepare
 18782 ;; This function uses a non-reentrant model
 18783 ;;
 18784                           
 18785                           	psect	text60
 18786  010264                     __ptext60:
 18787                           	opt stack 0
 18788  010264                     __display_padded_itoa:
 18789                           	opt stack 15
 18790                           
 18791                           ;display.c: 96: uint8_t pos;;display.c: 97: uint8_t padding;;display.c: 99: uint8_t len;
      +                          ;display.c: 100: char tmp[10];;display.c: 101: itoa(tmp, value, 10);
 18792                           
 18793                           ;incstack = 0
 18794  010264  0E82               	movlw	low __display_padded_itoa@tmp
 18795  010266  0100               	movlb	0	; () banked
 18796  010268  6F70               	movwf	itoa@buf& (0+255),b
 18797  01026A  0E00               	movlw	high __display_padded_itoa@tmp
 18798  01026C  6F71               	movwf	(itoa@buf+1)& (0+255),b
 18799  01026E  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 18800  010272  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 18801  010276  0E00               	movlw	0
 18802  010278  6F75               	movwf	(itoa@base+1)& (0+255),b
 18803  01027A  0E0A               	movlw	10
 18804  01027C  6F74               	movwf	itoa@base& (0+255),b
 18805  01027E  ECBA  F092         	call	_itoa	;wreg free
 18806                           
 18807                           ;display.c: 102: len = strlen(tmp);
 18808  010282  0E82               	movlw	low __display_padded_itoa@tmp
 18809  010284  0100               	movlb	0	; () banked
 18810  010286  6F60               	movwf	strlen@s& (0+255),b
 18811  010288  0E00               	movlw	high __display_padded_itoa@tmp
 18812  01028A  6F61               	movwf	(strlen@s+1)& (0+255),b
 18813  01028C  EC40  F093         	call	_strlen	;wreg free
 18814  010290  0100               	movlb	0	; () banked
 18815  010292  5160               	movf	?_strlen& (0+255),w,b
 18816  010294  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 18817                           
 18818                           ; BSR set to: 0
 18819                           ;display.c: 103: padding = 0;
 18820  010296  0E00               	movlw	0
 18821  010298  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 18822                           
 18823                           ;display.c: 104: while((padding+len)<length)
 18824  01029A  D00B               	goto	l1281
 18825  01029C                     
 18826                           ; BSR set to: 0
 18827                           ;display.c: 105: {;display.c: 106: text[padding] = ' ';
 18828                           
 18829                           ; BSR set to: 0
 18830  01029C  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 18831  01029E  0D01               	mullw	1
 18832  0102A0  50F3               	movf	prodl,w,c
 18833  0102A2  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 18834  0102A4  6ED9               	movwf	fsr2l,c
 18835  0102A6  50F4               	movf	prodh,w,c
 18836  0102A8  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 18837  0102AA  6EDA               	movwf	fsr2h,c
 18838  0102AC  0E20               	movlw	32
 18839  0102AE  6EDF               	movwf	indf2,c
 18840                           
 18841                           ; BSR set to: 0
 18842                           ;display.c: 107: ++padding;
 18843  0102B0  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 18844  0102B2                     l1281:
 18845                           
 18846                           ; BSR set to: 0
 18847                           
 18848                           ; BSR set to: 0
 18849  0102B2  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 18850  0102B4  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 18851  0102B6  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 18852  0102B8  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 18853  0102BA  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 18854  0102BE  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 18855  0102C0  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 18856  0102C2  0E00               	movlw	0
 18857  0102C4  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 18858  0102C6  517D               	movf	??__display_padded_itoa& (0+255),w,b
 18859  0102C8  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 18860  0102CA  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 18861  0102CC  0A80               	xorlw	128
 18862  0102CE  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 18863  0102D0  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 18864  0102D2  0A80               	xorlw	128
 18865  0102D4  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 18866  0102D6  A0D8               	btfss	status,0,c
 18867  0102D8  D7E1               	goto	l1282
 18868                           
 18869                           ; BSR set to: 0
 18870                           ;display.c: 108: };display.c: 109: for(pos=0; tmp[pos]; ++pos)
 18871                           
 18872                           ; BSR set to: 0
 18873  0102DA  0E00               	movlw	0
 18874  0102DC  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 18875  0102DE  D018               	goto	l1284
 18876  0102E0                     
 18877                           ; BSR set to: 0
 18878                           ;display.c: 110: {;display.c: 111: text[pos+padding] = tmp[pos];
 18879                           
 18880                           ; BSR set to: 0
 18881  0102E0  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 18882  0102E2  0D01               	mullw	1
 18883  0102E4  0E82               	movlw	low __display_padded_itoa@tmp
 18884  0102E6  24F3               	addwf	prodl,w,c
 18885  0102E8  6ED9               	movwf	fsr2l,c
 18886  0102EA  0E00               	movlw	high __display_padded_itoa@tmp
 18887  0102EC  20F4               	addwfc	prodh,w,c
 18888  0102EE  6EDA               	movwf	fsr2h,c
 18889  0102F0  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 18890  0102F2  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 18891  0102F6  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 18892  0102F8  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 18893  0102FA  0E00               	movlw	0
 18894  0102FC  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 18895  0102FE  517D               	movf	??__display_padded_itoa& (0+255),w,b
 18896  010300  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 18897  010302  6EE1               	movwf	fsr1l,c
 18898  010304  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 18899  010306  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 18900  010308  6EE2               	movwf	fsr1h,c
 18901  01030A  CFDF FFE7          	movff	indf2,indf1
 18902                           
 18903                           ; BSR set to: 0
 18904  01030E  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 18905  010310                     l1284:
 18906                           
 18907                           ; BSR set to: 0
 18908                           
 18909                           ; BSR set to: 0
 18910  010310  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 18911  010312  0D01               	mullw	1
 18912  010314  0E82               	movlw	low __display_padded_itoa@tmp
 18913  010316  24F3               	addwf	prodl,w,c
 18914  010318  6ED9               	movwf	fsr2l,c
 18915  01031A  0E00               	movlw	high __display_padded_itoa@tmp
 18916  01031C  20F4               	addwfc	prodh,w,c
 18917  01031E  6EDA               	movwf	fsr2h,c
 18918  010320  50DF               	movf	indf2,w,c
 18919  010322  A4D8               	btfss	status,2,c
 18920  010324  D7DD               	goto	l1285
 18921                           
 18922                           ; BSR set to: 0
 18923                           ;display.c: 112: };display.c: 113: text[pos+padding] = 0x00;
 18924                           
 18925                           ; BSR set to: 0
 18926  010326  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 18927  010328  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 18928  01032C  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 18929  01032E  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 18930  010330  0E00               	movlw	0
 18931  010332  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 18932  010334  517D               	movf	??__display_padded_itoa& (0+255),w,b
 18933  010336  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 18934  010338  6ED9               	movwf	fsr2l,c
 18935  01033A  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 18936  01033C  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 18937  01033E  6EDA               	movwf	fsr2h,c
 18938  010340  0E00               	movlw	0
 18939  010342  6EDF               	movwf	indf2,c
 18940                           
 18941                           ; BSR set to: 0
 18942  010344  0012               	return		;funcret
 18943  010346                     __end_of__display_padded_itoa:
 18944                           	opt stack 0
 18945                           tblptru	equ	0xFF8
 18946                           tblptrh	equ	0xFF7
 18947                           tblptrl	equ	0xFF6
 18948                           tablat	equ	0xFF5
 18949                           prodh	equ	0xFF4
 18950                           prodl	equ	0xFF3
 18951                           intcon	equ	0xFF2
 18952                           postinc0	equ	0xFEE
 18953                           wreg	equ	0xFE8
 18954                           indf1	equ	0xFE7
 18955                           postdec1	equ	0xFE5
 18956                           plusw1	equ	0xFE3
 18957                           fsr1h	equ	0xFE2
 18958                           fsr1l	equ	0xFE1
 18959                           indf2	equ	0xFDF
 18960                           postinc2	equ	0xFDE
 18961                           postdec2	equ	0xFDD
 18962                           plusw2	equ	0xFDB
 18963                           fsr2h	equ	0xFDA
 18964                           fsr2l	equ	0xFD9
 18965                           status	equ	0xFD8
 18966                           
 18967 ;; *************** function __display_itoa_long *****************
 18968 ;; Defined at:
 18969 ;;		line 198 in file "display.c"
 18970 ;; Parameters:    Size  Location     Type
 18971 ;;  value           4   77[BANK0 ] long 
 18972 ;;  decimals        1   81[BANK0 ] unsigned char 
 18973 ;;  text            2   82[BANK0 ] PTR unsigned char 
 18974 ;;		 -> display_prepare@temp(10), 
 18975 ;; Auto vars:     Size  Location     Type
 18976 ;;  short_value     2   89[BANK0 ] int 
 18977 ;;  last_digit      1   91[BANK0 ] char 
 18978 ;;  length          1   88[BANK0 ] unsigned char 
 18979 ;; Return value:  Size  Location     Type
 18980 ;;                  1    wreg      void 
 18981 ;; Registers used:
 18982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18983 ;; Tracked objects:
 18984 ;;		On entry : 0/0
 18985 ;;		On exit  : 0/0
 18986 ;;		Unchanged: 0/0
 18987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18988 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18989 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18991 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18992 ;;Total ram usage:       15 bytes
 18993 ;; Hardware stack levels used:    1
 18994 ;; Hardware stack levels required when called:   14
 18995 ;; This function calls:
 18996 ;;		___aldiv
 18997 ;;		___almod
 18998 ;;		__display_itoa
 18999 ;;		_strlen
 19000 ;; This function is called by:
 19001 ;;		_display_prepare
 19002 ;; This function uses a non-reentrant model
 19003 ;;
 19004                           
 19005                           	psect	text61
 19006  00F74C                     __ptext61:
 19007                           	opt stack 0
 19008  00F74C                     __display_itoa_long:
 19009                           	opt stack 15
 19010                           
 19011                           ;display.c: 200: int16_t short_value;;display.c: 201: int8_t last_digit;;display.c: 202:
      +                           uint8_t length;;display.c: 204: short_value = (int16_t) value;
 19012                           
 19013                           ; BSR set to: 0
 19014                           ;incstack = 0
 19015  00F74C  C0AD  F0B9         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 19016  00F750  C0AE  F0BA         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 19017                           
 19018                           ;display.c: 205: if(short_value==value)
 19019  00F754  C0B9  F0B4         	movff	__display_itoa_long@short_value,??__display_itoa_long
 19020  00F758  C0BA  F0B5         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 19021  00F75C  0E00               	movlw	0
 19022  00F75E  0100               	movlb	0	; () banked
 19023  00F760  BFB5               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 19024  00F762  0EFF               	movlw	255
 19025  00F764  6FB6               	movwf	(??__display_itoa_long+2)& (0+255),b
 19026  00F766  6FB7               	movwf	(??__display_itoa_long+3)& (0+255),b
 19027  00F768  51AD               	movf	__display_itoa_long@value& (0+255),w,b
 19028  00F76A  19B4               	xorwf	??__display_itoa_long& (0+255),w,b
 19029  00F76C  E117               	bnz	l20982
 19030  00F76E  51AE               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 19031  00F770  19B5               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 19032  00F772  E114               	bnz	l20982
 19033  00F774  51AF               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 19034  00F776  19B6               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 19035  00F778  E111               	bnz	l20982
 19036  00F77A  51B0               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 19037  00F77C  19B7               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 19038  00F77E  A4D8               	btfss	status,2,c
 19039  00F780  D00D               	goto	l1317
 19040                           
 19041                           ; BSR set to: 0
 19042                           ;display.c: 206: {;display.c: 207: _display_itoa(short_value, decimals, text);
 19043  00F782  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 19044  00F786  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 19045  00F78A  C0B1  F097         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 19046  00F78E  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 19047  00F792  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 19048  00F796  EC92  F06B         	call	__display_itoa	;wreg free
 19049                           
 19050                           ;display.c: 208: }
 19051  00F79A  0012               	return	
 19052  00F79C                     l1317:
 19053  00F79C                     l20982:
 19054                           
 19055                           ;display.c: 209: else;display.c: 210: {;display.c: 211: short_value = value / 10;
 19056  00F79C  C0AD  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 19057  00F7A0  C0AE  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 19058  00F7A4  C0AF  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 19059  00F7A8  C0B0  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 19060  00F7AC  0E0A               	movlw	10
 19061  00F7AE  0100               	movlb	0	; () banked
 19062  00F7B0  6F64               	movwf	___aldiv@divisor& (0+255),b
 19063  00F7B2  0E00               	movlw	0
 19064  00F7B4  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 19065  00F7B6  0E00               	movlw	0
 19066  00F7B8  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 19067  00F7BA  0E00               	movlw	0
 19068  00F7BC  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 19069  00F7BE  EC03  F085         	call	___aldiv	;wreg free
 19070  00F7C2  C060  F0B9         	movff	?___aldiv,__display_itoa_long@short_value
 19071  00F7C6  C061  F0BA         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 19072                           
 19073                           ;display.c: 212: _display_itoa(short_value, decimals-1, text);
 19074  00F7CA  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 19075  00F7CE  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 19076  00F7D2  0100               	movlb	0	; () banked
 19077  00F7D4  05B1               	decf	__display_itoa_long@decimals& (0+255),w,b
 19078  00F7D6  6F97               	movwf	__display_itoa@decimals& (0+255),b
 19079  00F7D8  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 19080  00F7DC  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 19081  00F7E0  EC92  F06B         	call	__display_itoa	;wreg free
 19082                           
 19083                           ;display.c: 213: length = strlen(text);
 19084  00F7E4  C0B2  F060         	movff	__display_itoa_long@text,strlen@s
 19085  00F7E8  C0B3  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 19086  00F7EC  EC40  F093         	call	_strlen	;wreg free
 19087  00F7F0  0100               	movlb	0	; () banked
 19088  00F7F2  5160               	movf	?_strlen& (0+255),w,b
 19089  00F7F4  6FB8               	movwf	__display_itoa_long@length& (0+255),b
 19090                           
 19091                           ; BSR set to: 0
 19092                           ;display.c: 214: last_digit = value % 10;
 19093  00F7F6  C0AD  F060         	movff	__display_itoa_long@value,___almod@dividend
 19094  00F7FA  C0AE  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 19095  00F7FE  C0AF  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 19096  00F802  C0B0  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 19097  00F806  0E0A               	movlw	10
 19098  00F808  6F64               	movwf	___almod@divisor& (0+255),b
 19099  00F80A  0E00               	movlw	0
 19100  00F80C  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 19101  00F80E  0E00               	movlw	0
 19102  00F810  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 19103  00F812  0E00               	movlw	0
 19104  00F814  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 19105  00F816  ECFC  F087         	call	___almod	;wreg free
 19106  00F81A  0100               	movlb	0	; () banked
 19107  00F81C  5160               	movf	?___almod& (0+255),w,b
 19108  00F81E  6FBB               	movwf	__display_itoa_long@last_digit& (0+255),b
 19109                           
 19110                           ; BSR set to: 0
 19111                           ;display.c: 215: if(last_digit<0)
 19112  00F820  BFBB               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 19113                           
 19114                           ; BSR set to: 0
 19115                           ;display.c: 216: last_digit = -last_digit;
 19116  00F822  6DBB               	negf	__display_itoa_long@last_digit& (0+255),b
 19117                           
 19118                           ; BSR set to: 0
 19119                           ;display.c: 217: text[length] = last_digit + 0x30;
 19120                           
 19121                           ; BSR set to: 0
 19122  00F824  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 19123  00F826  0D01               	mullw	1
 19124  00F828  50F3               	movf	prodl,w,c
 19125  00F82A  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 19126  00F82C  6ED9               	movwf	fsr2l,c
 19127  00F82E  50F4               	movf	prodh,w,c
 19128  00F830  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 19129  00F832  6EDA               	movwf	fsr2h,c
 19130  00F834  51BB               	movf	__display_itoa_long@last_digit& (0+255),w,b
 19131  00F836  0F30               	addlw	48
 19132  00F838  6EDF               	movwf	indf2,c
 19133                           
 19134                           ; BSR set to: 0
 19135                           ;display.c: 218: text[length+1] = 0x00;
 19136  00F83A  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 19137  00F83C  6FB4               	movwf	??__display_itoa_long& (0+255),b
 19138  00F83E  6BB5               	clrf	(??__display_itoa_long+1)& (0+255),b
 19139  00F840  0E01               	movlw	1
 19140  00F842  27B4               	addwf	??__display_itoa_long& (0+255),f,b
 19141  00F844  0E00               	movlw	0
 19142  00F846  23B5               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 19143  00F848  51B4               	movf	??__display_itoa_long& (0+255),w,b
 19144  00F84A  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 19145  00F84C  6ED9               	movwf	fsr2l,c
 19146  00F84E  51B5               	movf	(??__display_itoa_long+1)& (0+255),w,b
 19147  00F850  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 19148  00F852  6EDA               	movwf	fsr2h,c
 19149  00F854  0E00               	movlw	0
 19150  00F856  6EDF               	movwf	indf2,c
 19151  00F858  0012               	return	
 19152  00F85A                     __end_of__display_itoa_long:
 19153                           	opt stack 0
 19154                           tblptru	equ	0xFF8
 19155                           tblptrh	equ	0xFF7
 19156                           tblptrl	equ	0xFF6
 19157                           tablat	equ	0xFF5
 19158                           prodh	equ	0xFF4
 19159                           prodl	equ	0xFF3
 19160                           intcon	equ	0xFF2
 19161                           postinc0	equ	0xFEE
 19162                           wreg	equ	0xFE8
 19163                           indf1	equ	0xFE7
 19164                           postdec1	equ	0xFE5
 19165                           plusw1	equ	0xFE3
 19166                           fsr1h	equ	0xFE2
 19167                           fsr1l	equ	0xFE1
 19168                           indf2	equ	0xFDF
 19169                           postinc2	equ	0xFDE
 19170                           postdec2	equ	0xFDD
 19171                           plusw2	equ	0xFDB
 19172                           fsr2h	equ	0xFDA
 19173                           fsr2l	equ	0xFD9
 19174                           status	equ	0xFD8
 19175                           
 19176 ;; *************** function __display_itoa *****************
 19177 ;; Defined at:
 19178 ;;		line 130 in file "display.c"
 19179 ;; Parameters:    Size  Location     Type
 19180 ;;  value           2   53[BANK0 ] int 
 19181 ;;  decimals        1   55[BANK0 ] unsigned char 
 19182 ;;  text            2   56[BANK0 ] PTR unsigned char 
 19183 ;;		 -> display_prepare@temp(10), display_content(80), 
 19184 ;; Auto vars:     Size  Location     Type
 19185 ;;  tmp            10   64[BANK0 ] unsigned char [10]
 19186 ;;  pos             1   76[BANK0 ] unsigned char 
 19187 ;;  missing         1   75[BANK0 ] char 
 19188 ;;  len             1   74[BANK0 ] unsigned char 
 19189 ;; Return value:  Size  Location     Type
 19190 ;;                  1    wreg      void 
 19191 ;; Registers used:
 19192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19193 ;; Tracked objects:
 19194 ;;		On entry : 0/0
 19195 ;;		On exit  : 0/0
 19196 ;;		Unchanged: 0/0
 19197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19198 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19199 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19200 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19201 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19202 ;;Total ram usage:       24 bytes
 19203 ;; Hardware stack levels used:    1
 19204 ;; Hardware stack levels required when called:   13
 19205 ;; This function calls:
 19206 ;;		_itoa
 19207 ;;		_strlen
 19208 ;; This function is called by:
 19209 ;;		__display_itoa_long
 19210 ;;		_display_prepare
 19211 ;; This function uses a non-reentrant model
 19212 ;;
 19213                           
 19214                           	psect	text62
 19215  00D724                     __ptext62:
 19216                           	opt stack 0
 19217  00D724                     __display_itoa:
 19218                           	opt stack 15
 19219                           
 19220                           ;display.c: 132: uint8_t pos;;display.c: 133: uint8_t len;;display.c: 134: int8_t missin
      +                          g;;display.c: 135: char tmp[10];;display.c: 136: itoa(tmp, value, 10);
 19221                           
 19222                           ;incstack = 0
 19223  00D724  0EA0               	movlw	low __display_itoa@tmp
 19224  00D726  0100               	movlb	0	; () banked
 19225  00D728  6F70               	movwf	itoa@buf& (0+255),b
 19226  00D72A  0E00               	movlw	high __display_itoa@tmp
 19227  00D72C  6F71               	movwf	(itoa@buf+1)& (0+255),b
 19228  00D72E  C095  F072         	movff	__display_itoa@value,itoa@val
 19229  00D732  C096  F073         	movff	__display_itoa@value+1,itoa@val+1
 19230  00D736  0E00               	movlw	0
 19231  00D738  6F75               	movwf	(itoa@base+1)& (0+255),b
 19232  00D73A  0E0A               	movlw	10
 19233  00D73C  6F74               	movwf	itoa@base& (0+255),b
 19234  00D73E  ECBA  F092         	call	_itoa	;wreg free
 19235                           
 19236                           ;display.c: 137: len = strlen(tmp);
 19237  00D742  0EA0               	movlw	low __display_itoa@tmp
 19238  00D744  0100               	movlb	0	; () banked
 19239  00D746  6F60               	movwf	strlen@s& (0+255),b
 19240  00D748  0E00               	movlw	high __display_itoa@tmp
 19241  00D74A  6F61               	movwf	(strlen@s+1)& (0+255),b
 19242  00D74C  EC40  F093         	call	_strlen	;wreg free
 19243  00D750  0100               	movlb	0	; () banked
 19244  00D752  5160               	movf	?_strlen& (0+255),w,b
 19245  00D754  6FAA               	movwf	__display_itoa@len& (0+255),b
 19246                           
 19247                           ; BSR set to: 0
 19248                           ;display.c: 139: if(value<0)
 19249  00D756  AF96               	btfss	(__display_itoa@value+1)& (0+255),7,b
 19250  00D758  D054               	goto	l1295
 19251                           
 19252                           ; BSR set to: 0
 19253                           ;display.c: 140: {;display.c: 141: missing = decimals + 2 - len;
 19254  00D75A  51AA               	movf	__display_itoa@len& (0+255),w,b
 19255  00D75C  0800               	sublw	0
 19256  00D75E  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 19257  00D760  0F02               	addlw	2
 19258  00D762  6FAB               	movwf	__display_itoa@missing& (0+255),b
 19259                           
 19260                           ;display.c: 142: if(missing>0)
 19261  00D764  51AB               	movf	__display_itoa@missing& (0+255),w,b
 19262  00D766  0A80               	xorlw	128
 19263  00D768  0F7F               	addlw	-129
 19264  00D76A  A0D8               	btfss	status,0,c
 19265  00D76C  D090               	goto	l1302
 19266                           
 19267                           ; BSR set to: 0
 19268                           ;display.c: 143: {;display.c: 144: for(pos=decimals;pos!=0xFF;--pos)
 19269  00D76E  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 19270  00D772                     l19858:
 19271                           
 19272                           ; BSR set to: 0
 19273  00D772  29AC               	incf	__display_itoa@pos& (0+255),w,b
 19274  00D774  B4D8               	btfsc	status,2,c
 19275  00D776  D042               	goto	u19640
 19276                           
 19277                           ; BSR set to: 0
 19278                           ;display.c: 145: {;display.c: 146: if(pos>=missing)
 19279                           
 19280                           ; BSR set to: 0
 19281                           
 19282                           ; BSR set to: 0
 19283  00D778  51AC               	movf	__display_itoa@pos& (0+255),w,b
 19284  00D77A  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 19285  00D77C  D004               	goto	u19630
 19286  00D77E  0AFF               	xorlw	255
 19287  00D780  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 19288  00D782  B0D8               	btfsc	status,0,c
 19289  00D784  D02A               	goto	l1299
 19290  00D786                     u19630:
 19291                           
 19292                           ; BSR set to: 0
 19293                           ;display.c: 147: {;display.c: 148: tmp[pos+1] = tmp[pos+1-missing];
 19294  00D786  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 19295  00D78A  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 19296  00D78C  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 19297  00D78E  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 19298  00D790  1F9A               	comf	??__display_itoa& (0+255),f,b
 19299  00D792  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 19300  00D794  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 19301  00D796  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 19302  00D798  51AC               	movf	__display_itoa@pos& (0+255),w,b
 19303  00D79A  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 19304  00D79C  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 19305  00D79E  519A               	movf	??__display_itoa& (0+255),w,b
 19306  00D7A0  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 19307  00D7A2  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 19308  00D7A4  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 19309  00D7A6  0E01               	movlw	1
 19310  00D7A8  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 19311  00D7AA  0E00               	movlw	0
 19312  00D7AC  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 19313  00D7AE  0EA0               	movlw	low __display_itoa@tmp
 19314  00D7B0  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 19315  00D7B2  6ED9               	movwf	fsr2l,c
 19316  00D7B4  0E00               	movlw	high __display_itoa@tmp
 19317  00D7B6  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 19318  00D7B8  6EDA               	movwf	fsr2h,c
 19319  00D7BA  51AC               	movf	__display_itoa@pos& (0+255),w,b
 19320  00D7BC  6F9E               	movwf	(??__display_itoa+4)& (0+255),b
 19321  00D7BE  6B9F               	clrf	(??__display_itoa+5)& (0+255),b
 19322  00D7C0  0E01               	movlw	1
 19323  00D7C2  279E               	addwf	(??__display_itoa+4)& (0+255),f,b
 19324  00D7C4  0E00               	movlw	0
 19325  00D7C6  239F               	addwfc	(??__display_itoa+5)& (0+255),f,b
 19326  00D7C8  0EA0               	movlw	low __display_itoa@tmp
 19327  00D7CA  259E               	addwf	(??__display_itoa+4)& (0+255),w,b
 19328  00D7CC  6EE1               	movwf	fsr1l,c
 19329  00D7CE  0E00               	movlw	high __display_itoa@tmp
 19330  00D7D0  219F               	addwfc	(??__display_itoa+5)& (0+255),w,b
 19331  00D7D2  6EE2               	movwf	fsr1h,c
 19332  00D7D4  CFDF FFE7          	movff	indf2,indf1
 19333                           
 19334                           ;display.c: 149: }
 19335  00D7D8  D00F               	goto	l1300
 19336  00D7DA                     l1299:
 19337                           
 19338                           ; BSR set to: 0
 19339                           ;display.c: 150: else;display.c: 151: {;display.c: 152: tmp[pos+1] = '0';
 19340                           
 19341                           ; BSR set to: 0
 19342  00D7DA  51AC               	movf	__display_itoa@pos& (0+255),w,b
 19343  00D7DC  6F9A               	movwf	??__display_itoa& (0+255),b
 19344  00D7DE  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 19345  00D7E0  0E01               	movlw	1
 19346  00D7E2  279A               	addwf	??__display_itoa& (0+255),f,b
 19347  00D7E4  0E00               	movlw	0
 19348  00D7E6  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 19349  00D7E8  0EA0               	movlw	low __display_itoa@tmp
 19350  00D7EA  259A               	addwf	??__display_itoa& (0+255),w,b
 19351  00D7EC  6ED9               	movwf	fsr2l,c
 19352  00D7EE  0E00               	movlw	high __display_itoa@tmp
 19353  00D7F0  219B               	addwfc	(??__display_itoa+1)& (0+255),w,b
 19354  00D7F2  6EDA               	movwf	fsr2h,c
 19355  00D7F4  0E30               	movlw	48
 19356  00D7F6  6EDF               	movwf	indf2,c
 19357  00D7F8                     l1300:
 19358                           
 19359                           ; BSR set to: 0
 19360                           
 19361                           ; BSR set to: 0
 19362  00D7F8  07AC               	decf	__display_itoa@pos& (0+255),f,b
 19363  00D7FA  D7BB               	goto	l19858
 19364  00D7FC                     u19640:
 19365                           
 19366                           ; BSR set to: 0
 19367                           ;display.c: 153: };display.c: 154: };display.c: 155: len = decimals + 2;
 19368                           
 19369                           ; BSR set to: 0
 19370  00D7FC  5197               	movf	__display_itoa@decimals& (0+255),w,b
 19371  00D7FE  0F02               	addlw	2
 19372  00D800  D045               	goto	L35
 19373  00D802                     l1295:
 19374                           
 19375                           ; BSR set to: 0
 19376                           ;display.c: 158: else;display.c: 159: {;display.c: 160: missing = decimals + 1 - len;
 19377                           
 19378                           ; BSR set to: 0
 19379  00D802  51AA               	movf	__display_itoa@len& (0+255),w,b
 19380  00D804  0800               	sublw	0
 19381  00D806  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 19382  00D808  6F9A               	movwf	??__display_itoa& (0+255),b
 19383  00D80A  299A               	incf	??__display_itoa& (0+255),w,b
 19384  00D80C  6FAB               	movwf	__display_itoa@missing& (0+255),b
 19385                           
 19386                           ;display.c: 161: if(missing>0)
 19387  00D80E  51AB               	movf	__display_itoa@missing& (0+255),w,b
 19388  00D810  0A80               	xorlw	128
 19389  00D812  0F7F               	addlw	-129
 19390  00D814  A0D8               	btfss	status,0,c
 19391  00D816  D03B               	goto	l1302
 19392                           
 19393                           ; BSR set to: 0
 19394                           ;display.c: 162: {;display.c: 163: for(pos=decimals;pos!=0xFF;--pos)
 19395  00D818  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 19396  00D81C                     l19878:
 19397                           
 19398                           ; BSR set to: 0
 19399  00D81C  29AC               	incf	__display_itoa@pos& (0+255),w,b
 19400  00D81E  B4D8               	btfsc	status,2,c
 19401  00D820  D034               	goto	u19680
 19402                           
 19403                           ; BSR set to: 0
 19404                           ;display.c: 164: {;display.c: 165: if(pos>=missing)
 19405                           
 19406                           ; BSR set to: 0
 19407                           
 19408                           ; BSR set to: 0
 19409  00D822  51AC               	movf	__display_itoa@pos& (0+255),w,b
 19410  00D824  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 19411  00D826  D004               	goto	u19670
 19412  00D828  0AFF               	xorlw	255
 19413  00D82A  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 19414  00D82C  B0D8               	btfsc	status,0,c
 19415  00D82E  D021               	goto	l1305
 19416  00D830                     u19670:
 19417                           
 19418                           ; BSR set to: 0
 19419                           ;display.c: 166: {;display.c: 167: tmp[pos] = tmp[pos-missing];
 19420  00D830  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 19421  00D834  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 19422  00D836  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 19423  00D838  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 19424  00D83A  1F9A               	comf	??__display_itoa& (0+255),f,b
 19425  00D83C  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 19426  00D83E  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 19427  00D840  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 19428  00D842  51AC               	movf	__display_itoa@pos& (0+255),w,b
 19429  00D844  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 19430  00D846  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 19431  00D848  519A               	movf	??__display_itoa& (0+255),w,b
 19432  00D84A  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 19433  00D84C  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 19434  00D84E  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 19435  00D850  0EA0               	movlw	low __display_itoa@tmp
 19436  00D852  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 19437  00D854  6ED9               	movwf	fsr2l,c
 19438  00D856  0E00               	movlw	high __display_itoa@tmp
 19439  00D858  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 19440  00D85A  6EDA               	movwf	fsr2h,c
 19441  00D85C  51AC               	movf	__display_itoa@pos& (0+255),w,b
 19442  00D85E  0D01               	mullw	1
 19443  00D860  0EA0               	movlw	low __display_itoa@tmp
 19444  00D862  24F3               	addwf	prodl,w,c
 19445  00D864  6EE1               	movwf	fsr1l,c
 19446  00D866  0E00               	movlw	high __display_itoa@tmp
 19447  00D868  20F4               	addwfc	prodh,w,c
 19448  00D86A  6EE2               	movwf	fsr1h,c
 19449  00D86C  CFDF FFE7          	movff	indf2,indf1
 19450                           
 19451                           ;display.c: 168: }
 19452  00D870  D00A               	goto	l1306
 19453  00D872                     l1305:
 19454                           
 19455                           ; BSR set to: 0
 19456                           ;display.c: 169: else;display.c: 170: {;display.c: 171: tmp[pos] = '0';
 19457                           
 19458                           ; BSR set to: 0
 19459  00D872  51AC               	movf	__display_itoa@pos& (0+255),w,b
 19460  00D874  0D01               	mullw	1
 19461  00D876  0EA0               	movlw	low __display_itoa@tmp
 19462  00D878  24F3               	addwf	prodl,w,c
 19463  00D87A  6ED9               	movwf	fsr2l,c
 19464  00D87C  0E00               	movlw	high __display_itoa@tmp
 19465  00D87E  20F4               	addwfc	prodh,w,c
 19466  00D880  6EDA               	movwf	fsr2h,c
 19467  00D882  0E30               	movlw	48
 19468  00D884  6EDF               	movwf	indf2,c
 19469  00D886                     l1306:
 19470                           
 19471                           ; BSR set to: 0
 19472                           
 19473                           ; BSR set to: 0
 19474  00D886  07AC               	decf	__display_itoa@pos& (0+255),f,b
 19475  00D888  D7C9               	goto	l19878
 19476  00D88A                     u19680:
 19477                           
 19478                           ; BSR set to: 0
 19479                           ;display.c: 172: };display.c: 173: };display.c: 174: len = decimals + 1;
 19480                           
 19481                           ; BSR set to: 0
 19482  00D88A  2997               	incf	__display_itoa@decimals& (0+255),w,b
 19483  00D88C                     L35:
 19484  00D88C  6FAA               	movwf	__display_itoa@len& (0+255),b
 19485  00D88E                     l1302:
 19486                           
 19487                           ; BSR set to: 0
 19488                           ;display.c: 175: };display.c: 176: };display.c: 178: decimals = len - decimals - 1;
 19489                           
 19490                           ; BSR set to: 0
 19491  00D88E  5197               	movf	__display_itoa@decimals& (0+255),w,b
 19492  00D890  0800               	sublw	0
 19493  00D892  25AA               	addwf	__display_itoa@len& (0+255),w,b
 19494  00D894  6F9A               	movwf	??__display_itoa& (0+255),b
 19495  00D896  059A               	decf	??__display_itoa& (0+255),w,b
 19496  00D898  6F97               	movwf	__display_itoa@decimals& (0+255),b
 19497                           
 19498                           ; BSR set to: 0
 19499                           ;display.c: 180: for(pos=0;pos<len;++pos)
 19500  00D89A  0E00               	movlw	0
 19501  00D89C  6FAC               	movwf	__display_itoa@pos& (0+255),b
 19502  00D89E  D023               	goto	l1307
 19503  00D8A0                     
 19504                           ; BSR set to: 0
 19505                           ;display.c: 181: {;display.c: 182: text[pos] = tmp[pos];
 19506                           
 19507                           ; BSR set to: 0
 19508  00D8A0  51AC               	movf	__display_itoa@pos& (0+255),w,b
 19509  00D8A2  0D01               	mullw	1
 19510  00D8A4  0EA0               	movlw	low __display_itoa@tmp
 19511  00D8A6  24F3               	addwf	prodl,w,c
 19512  00D8A8  6ED9               	movwf	fsr2l,c
 19513  00D8AA  0E00               	movlw	high __display_itoa@tmp
 19514  00D8AC  20F4               	addwfc	prodh,w,c
 19515  00D8AE  6EDA               	movwf	fsr2h,c
 19516  00D8B0  51AC               	movf	__display_itoa@pos& (0+255),w,b
 19517  00D8B2  0D01               	mullw	1
 19518  00D8B4  50F3               	movf	prodl,w,c
 19519  00D8B6  2598               	addwf	__display_itoa@text& (0+255),w,b
 19520  00D8B8  6EE1               	movwf	fsr1l,c
 19521  00D8BA  50F4               	movf	prodh,w,c
 19522  00D8BC  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 19523  00D8BE  6EE2               	movwf	fsr1h,c
 19524  00D8C0  CFDF FFE7          	movff	indf2,indf1
 19525                           
 19526                           ; BSR set to: 0
 19527                           ;display.c: 183: if(pos==decimals)
 19528  00D8C4  5197               	movf	__display_itoa@decimals& (0+255),w,b
 19529  00D8C6  19AC               	xorwf	__display_itoa@pos& (0+255),w,b
 19530  00D8C8  A4D8               	btfss	status,2,c
 19531  00D8CA  D00C               	goto	l1309
 19532                           
 19533                           ; BSR set to: 0
 19534                           ;display.c: 184: {;display.c: 186: ++pos;
 19535  00D8CC  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 19536                           
 19537                           ; BSR set to: 0
 19538                           ;display.c: 187: text[pos] = '.';
 19539  00D8CE  51AC               	movf	__display_itoa@pos& (0+255),w,b
 19540  00D8D0  0D01               	mullw	1
 19541  00D8D2  50F3               	movf	prodl,w,c
 19542  00D8D4  2598               	addwf	__display_itoa@text& (0+255),w,b
 19543  00D8D6  6ED9               	movwf	fsr2l,c
 19544  00D8D8  50F4               	movf	prodh,w,c
 19545  00D8DA  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 19546  00D8DC  6EDA               	movwf	fsr2h,c
 19547  00D8DE  0E2E               	movlw	46
 19548  00D8E0  6EDF               	movwf	indf2,c
 19549                           
 19550                           ;display.c: 188: break;
 19551  00D8E2  D01E               	goto	l1311
 19552  00D8E4                     l1309:
 19553                           
 19554                           ; BSR set to: 0
 19555                           
 19556                           ; BSR set to: 0
 19557  00D8E4  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 19558  00D8E6                     l1307:
 19559                           
 19560                           ; BSR set to: 0
 19561                           
 19562                           ; BSR set to: 0
 19563  00D8E6  51AA               	movf	__display_itoa@len& (0+255),w,b
 19564  00D8E8  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 19565  00D8EA  B0D8               	btfsc	status,0,c
 19566  00D8EC  D019               	goto	l1311
 19567  00D8EE  D7D8               	goto	l1308
 19568  00D8F0                     
 19569                           ; BSR set to: 0
 19570                           ;display.c: 192: {;display.c: 193: text[pos+1] = tmp[pos];
 19571                           
 19572                           ; BSR set to: 0
 19573  00D8F0  51AC               	movf	__display_itoa@pos& (0+255),w,b
 19574  00D8F2  0D01               	mullw	1
 19575  00D8F4  0EA0               	movlw	low __display_itoa@tmp
 19576  00D8F6  24F3               	addwf	prodl,w,c
 19577  00D8F8  6ED9               	movwf	fsr2l,c
 19578  00D8FA  0E00               	movlw	high __display_itoa@tmp
 19579  00D8FC  20F4               	addwfc	prodh,w,c
 19580  00D8FE  6EDA               	movwf	fsr2h,c
 19581  00D900  51AC               	movf	__display_itoa@pos& (0+255),w,b
 19582  00D902  6F9A               	movwf	??__display_itoa& (0+255),b
 19583  00D904  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 19584  00D906  0E01               	movlw	1
 19585  00D908  279A               	addwf	??__display_itoa& (0+255),f,b
 19586  00D90A  0E00               	movlw	0
 19587  00D90C  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 19588  00D90E  519A               	movf	??__display_itoa& (0+255),w,b
 19589  00D910  2598               	addwf	__display_itoa@text& (0+255),w,b
 19590  00D912  6EE1               	movwf	fsr1l,c
 19591  00D914  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 19592  00D916  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 19593  00D918  6EE2               	movwf	fsr1h,c
 19594  00D91A  CFDF FFE7          	movff	indf2,indf1
 19595                           
 19596                           ; BSR set to: 0
 19597  00D91E  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 19598  00D920                     l1311:
 19599                           
 19600                           ; BSR set to: 0
 19601                           
 19602                           ; BSR set to: 0
 19603  00D920  51AA               	movf	__display_itoa@len& (0+255),w,b
 19604  00D922  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 19605  00D924  A0D8               	btfss	status,0,c
 19606  00D926  D7E4               	goto	l1312
 19607                           
 19608                           ; BSR set to: 0
 19609                           ;display.c: 194: };display.c: 195: text[pos+1] = 0;
 19610                           
 19611                           ; BSR set to: 0
 19612  00D928  51AC               	movf	__display_itoa@pos& (0+255),w,b
 19613  00D92A  6F9A               	movwf	??__display_itoa& (0+255),b
 19614  00D92C  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 19615  00D92E  0E01               	movlw	1
 19616  00D930  279A               	addwf	??__display_itoa& (0+255),f,b
 19617  00D932  0E00               	movlw	0
 19618  00D934  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 19619  00D936  519A               	movf	??__display_itoa& (0+255),w,b
 19620  00D938  2598               	addwf	__display_itoa@text& (0+255),w,b
 19621  00D93A  6ED9               	movwf	fsr2l,c
 19622  00D93C  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 19623  00D93E  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 19624  00D940  6EDA               	movwf	fsr2h,c
 19625  00D942  0E00               	movlw	0
 19626  00D944  6EDF               	movwf	indf2,c
 19627                           
 19628                           ; BSR set to: 0
 19629  00D946  0012               	return		;funcret
 19630  00D948                     __end_of__display_itoa:
 19631                           	opt stack 0
 19632                           tblptru	equ	0xFF8
 19633                           tblptrh	equ	0xFF7
 19634                           tblptrl	equ	0xFF6
 19635                           tablat	equ	0xFF5
 19636                           prodh	equ	0xFF4
 19637                           prodl	equ	0xFF3
 19638                           intcon	equ	0xFF2
 19639                           postinc0	equ	0xFEE
 19640                           wreg	equ	0xFE8
 19641                           indf1	equ	0xFE7
 19642                           postdec1	equ	0xFE5
 19643                           plusw1	equ	0xFE3
 19644                           fsr1h	equ	0xFE2
 19645                           fsr1l	equ	0xFE1
 19646                           indf2	equ	0xFDF
 19647                           postinc2	equ	0xFDE
 19648                           postdec2	equ	0xFDD
 19649                           plusw2	equ	0xFDB
 19650                           fsr2h	equ	0xFDA
 19651                           fsr2l	equ	0xFD9
 19652                           status	equ	0xFD8
 19653                           
 19654 ;; *************** function _strlen *****************
 19655 ;; Defined at:
 19656 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 19657 ;; Parameters:    Size  Location     Type
 19658 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 19659 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 19660 ;; Auto vars:     Size  Location     Type
 19661 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 19662 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 19663 ;; Return value:  Size  Location     Type
 19664 ;;                  2    0[BANK0 ] unsigned int 
 19665 ;; Registers used:
 19666 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19667 ;; Tracked objects:
 19668 ;;		On entry : 0/0
 19669 ;;		On exit  : 0/0
 19670 ;;		Unchanged: 0/0
 19671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19672 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19673 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19674 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19675 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19676 ;;Total ram usage:        6 bytes
 19677 ;; Hardware stack levels used:    1
 19678 ;; Hardware stack levels required when called:   10
 19679 ;; This function calls:
 19680 ;;		Nothing
 19681 ;; This function is called by:
 19682 ;;		__display_padded_itoa
 19683 ;;		__display_itoa
 19684 ;;		__display_itoa_long
 19685 ;;		_display_prepare
 19686 ;; This function uses a non-reentrant model
 19687 ;;
 19688                           
 19689                           	psect	text63
 19690  012680                     __ptext63:
 19691                           	opt stack 0
 19692  012680                     _strlen:
 19693                           	opt stack 19
 19694                           
 19695                           ; BSR set to: 0
 19696                           ;incstack = 0
 19697  012680  C060  F064         	movff	strlen@s,strlen@cp
 19698  012684  C061  F065         	movff	strlen@s+1,strlen@cp+1
 19699  012688  D003               	goto	l3412
 19700  01268A  0100               	movlb	0	; () banked
 19701  01268C  4B64               	infsnz	strlen@cp& (0+255),f,b
 19702  01268E  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 19703  012690                     l3412:
 19704                           
 19705                           ; BSR set to: 0
 19706  012690  C064  FFD9         	movff	strlen@cp,fsr2l
 19707  012694  C065  FFDA         	movff	strlen@cp+1,fsr2h
 19708  012698  50DF               	movf	indf2,w,c
 19709  01269A  A4D8               	btfss	status,2,c
 19710  01269C  D7F6               	goto	l3413
 19711  01269E  C060  F062         	movff	strlen@s,??_strlen
 19712  0126A2  C061  F063         	movff	strlen@s+1,??_strlen+1
 19713  0126A6  0100               	movlb	0	; () banked
 19714  0126A8  1F62               	comf	??_strlen& (0+255),f,b
 19715  0126AA  1F63               	comf	(??_strlen+1)& (0+255),f,b
 19716  0126AC  4B62               	infsnz	??_strlen& (0+255),f,b
 19717  0126AE  2B63               	incf	(??_strlen+1)& (0+255),f,b
 19718  0126B0  5164               	movf	strlen@cp& (0+255),w,b
 19719  0126B2  2562               	addwf	??_strlen& (0+255),w,b
 19720  0126B4  6F60               	movwf	?_strlen& (0+255),b
 19721  0126B6  5165               	movf	(strlen@cp+1)& (0+255),w,b
 19722  0126B8  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 19723  0126BA  6F61               	movwf	(?_strlen+1)& (0+255),b
 19724  0126BC  0012               	return	
 19725  0126BE                     __end_of_strlen:
 19726                           	opt stack 0
 19727                           tblptru	equ	0xFF8
 19728                           tblptrh	equ	0xFF7
 19729                           tblptrl	equ	0xFF6
 19730                           tablat	equ	0xFF5
 19731                           prodh	equ	0xFF4
 19732                           prodl	equ	0xFF3
 19733                           intcon	equ	0xFF2
 19734                           postinc0	equ	0xFEE
 19735                           wreg	equ	0xFE8
 19736                           indf1	equ	0xFE7
 19737                           postdec1	equ	0xFE5
 19738                           plusw1	equ	0xFE3
 19739                           fsr1h	equ	0xFE2
 19740                           fsr1l	equ	0xFE1
 19741                           indf2	equ	0xFDF
 19742                           postinc2	equ	0xFDE
 19743                           postdec2	equ	0xFDD
 19744                           plusw2	equ	0xFDB
 19745                           fsr2h	equ	0xFDA
 19746                           fsr2l	equ	0xFD9
 19747                           status	equ	0xFD8
 19748                           
 19749 ;; *************** function _itoa *****************
 19750 ;; Defined at:
 19751 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 19752 ;; Parameters:    Size  Location     Type
 19753 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 19754 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 19755 ;;  val             2   18[BANK0 ] int 
 19756 ;;  base            2   20[BANK0 ] int 
 19757 ;; Auto vars:     Size  Location     Type
 19758 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 19759 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 19760 ;; Return value:  Size  Location     Type
 19761 ;;                  2   16[BANK0 ] PTR unsigned char 
 19762 ;; Registers used:
 19763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19764 ;; Tracked objects:
 19765 ;;		On entry : 0/0
 19766 ;;		On exit  : 0/0
 19767 ;;		Unchanged: 0/0
 19768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19769 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19770 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19772 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19773 ;;Total ram usage:        8 bytes
 19774 ;; Hardware stack levels used:    1
 19775 ;; Hardware stack levels required when called:   12
 19776 ;; This function calls:
 19777 ;;		_utoa
 19778 ;; This function is called by:
 19779 ;;		__display_padded_itoa
 19780 ;;		__display_itoa
 19781 ;; This function uses a non-reentrant model
 19782 ;;
 19783                           
 19784                           	psect	text64
 19785  012574                     __ptext64:
 19786                           	opt stack 0
 19787  012574                     _itoa:
 19788                           	opt stack 15
 19789                           
 19790                           ; BSR set to: 0
 19791                           ;incstack = 0
 19792  012574  C070  F076         	movff	itoa@buf,itoa@cp
 19793  012578  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 19794  01257C  0100               	movlb	0	; () banked
 19795  01257E  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 19796  012580  D00C               	goto	l3388
 19797                           
 19798                           ; BSR set to: 0
 19799  012582  C070  FFD9         	movff	itoa@buf,fsr2l
 19800  012586  C071  FFDA         	movff	itoa@buf+1,fsr2h
 19801  01258A  0E2D               	movlw	45
 19802  01258C  6EDF               	movwf	indf2,c
 19803                           
 19804                           ; BSR set to: 0
 19805  01258E  4B70               	infsnz	itoa@buf& (0+255),f,b
 19806  012590  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 19807                           
 19808                           ; BSR set to: 0
 19809  012592  6D72               	negf	itoa@val& (0+255),b
 19810  012594  1F73               	comf	(itoa@val+1)& (0+255),f,b
 19811  012596  B0D8               	btfsc	status,0,c
 19812  012598  2B73               	incf	(itoa@val+1)& (0+255),f,b
 19813  01259A                     l3388:
 19814                           
 19815                           ; BSR set to: 0
 19816                           
 19817                           ; BSR set to: 0
 19818  01259A  C070  F067         	movff	itoa@buf,utoa@buf
 19819  01259E  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 19820  0125A2  C072  F069         	movff	itoa@val,utoa@val
 19821  0125A6  C073  F06A         	movff	itoa@val+1,utoa@val+1
 19822  0125AA  C074  F06B         	movff	itoa@base,utoa@base
 19823  0125AE  C075  F06C         	movff	itoa@base+1,utoa@base+1
 19824  0125B2  EC53  F088         	call	_utoa	;wreg free
 19825  0125B6  0012               	return	
 19826  0125B8                     __end_of_itoa:
 19827                           	opt stack 0
 19828                           tblptru	equ	0xFF8
 19829                           tblptrh	equ	0xFF7
 19830                           tblptrl	equ	0xFF6
 19831                           tablat	equ	0xFF5
 19832                           prodh	equ	0xFF4
 19833                           prodl	equ	0xFF3
 19834                           intcon	equ	0xFF2
 19835                           postinc0	equ	0xFEE
 19836                           wreg	equ	0xFE8
 19837                           indf1	equ	0xFE7
 19838                           postdec1	equ	0xFE5
 19839                           plusw1	equ	0xFE3
 19840                           fsr1h	equ	0xFE2
 19841                           fsr1l	equ	0xFE1
 19842                           indf2	equ	0xFDF
 19843                           postinc2	equ	0xFDE
 19844                           postdec2	equ	0xFDD
 19845                           plusw2	equ	0xFDB
 19846                           fsr2h	equ	0xFDA
 19847                           fsr2l	equ	0xFD9
 19848                           status	equ	0xFD8
 19849                           
 19850 ;; *************** function _utoa *****************
 19851 ;; Defined at:
 19852 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 19853 ;; Parameters:    Size  Location     Type
 19854 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 19855 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 19856 ;;  val             2    9[BANK0 ] unsigned int 
 19857 ;;  base            2   11[BANK0 ] int 
 19858 ;; Auto vars:     Size  Location     Type
 19859 ;;  v               2   13[BANK0 ] unsigned int 
 19860 ;;  c               1   15[BANK0 ] unsigned char 
 19861 ;; Return value:  Size  Location     Type
 19862 ;;                  2    7[BANK0 ] PTR unsigned char 
 19863 ;; Registers used:
 19864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19865 ;; Tracked objects:
 19866 ;;		On entry : 0/0
 19867 ;;		On exit  : 0/0
 19868 ;;		Unchanged: 0/0
 19869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19870 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19871 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19873 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19874 ;;Total ram usage:        9 bytes
 19875 ;; Hardware stack levels used:    1
 19876 ;; Hardware stack levels required when called:   11
 19877 ;; This function calls:
 19878 ;;		___lwdiv
 19879 ;;		___lwmod
 19880 ;; This function is called by:
 19881 ;;		_itoa
 19882 ;; This function uses a non-reentrant model
 19883 ;;
 19884                           
 19885                           	psect	text65
 19886  0110A6                     __ptext65:
 19887                           	opt stack 0
 19888  0110A6                     _utoa:
 19889                           	opt stack 15
 19890                           
 19891                           ;incstack = 0
 19892  0110A6  C069  F06D         	movff	utoa@val,utoa@v
 19893  0110AA  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 19894  0110AE  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 19895  0110B2  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 19896  0110B6  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 19897  0110BA  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 19898  0110BE  ECE4  F090         	call	___lwdiv	;wreg free
 19899  0110C2  C060  F06D         	movff	?___lwdiv,utoa@v
 19900  0110C6  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 19901  0110CA  0100               	movlb	0	; () banked
 19902  0110CC  4B67               	infsnz	utoa@buf& (0+255),f,b
 19903  0110CE  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 19904                           
 19905                           ; BSR set to: 0
 19906  0110D0  516D               	movf	utoa@v& (0+255),w,b
 19907  0110D2  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 19908  0110D4  A4D8               	btfss	status,2,c
 19909  0110D6  D7EB               	goto	l3392
 19910                           
 19911                           ; BSR set to: 0
 19912                           
 19913                           ; BSR set to: 0
 19914  0110D8  C067  FFD9         	movff	utoa@buf,fsr2l
 19915  0110DC  C068  FFDA         	movff	utoa@buf+1,fsr2h
 19916  0110E0  0E00               	movlw	0
 19917  0110E2  6EDF               	movwf	indf2,c
 19918                           
 19919                           ; BSR set to: 0
 19920  0110E4  0767               	decf	utoa@buf& (0+255),f,b
 19921  0110E6  A0D8               	btfss	status,0,c
 19922  0110E8  0768               	decf	(utoa@buf+1)& (0+255),f,b
 19923  0110EA                     
 19924                           ; BSR set to: 0
 19925                           
 19926                           ; BSR set to: 0
 19927  0110EA  C069  F060         	movff	utoa@val,___lwmod@dividend
 19928  0110EE  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 19929  0110F2  C06B  F062         	movff	utoa@base,___lwmod@divisor
 19930  0110F6  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 19931  0110FA  ECDC  F092         	call	___lwmod	;wreg free
 19932  0110FE  0100               	movlb	0	; () banked
 19933  011100  5160               	movf	?___lwmod& (0+255),w,b
 19934  011102  6F6F               	movwf	utoa@c& (0+255),b
 19935                           
 19936                           ; BSR set to: 0
 19937  011104  C069  F060         	movff	utoa@val,___lwdiv@dividend
 19938  011108  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 19939  01110C  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 19940  011110  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 19941  011114  ECE4  F090         	call	___lwdiv	;wreg free
 19942  011118  C060  F069         	movff	?___lwdiv,utoa@val
 19943  01111C  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 19944  011120  0E09               	movlw	9
 19945  011122  0100               	movlb	0	; () banked
 19946  011124  656F               	cpfsgt	utoa@c& (0+255),b
 19947  011126  D002               	goto	l3395
 19948                           
 19949                           ; BSR set to: 0
 19950  011128  0E07               	movlw	7
 19951  01112A  276F               	addwf	utoa@c& (0+255),f,b
 19952  01112C                     l3395:
 19953                           
 19954                           ; BSR set to: 0
 19955  01112C  0E30               	movlw	48
 19956  01112E  276F               	addwf	utoa@c& (0+255),f,b
 19957                           
 19958                           ; BSR set to: 0
 19959  011130  C067  FFD9         	movff	utoa@buf,fsr2l
 19960  011134  C068  FFDA         	movff	utoa@buf+1,fsr2h
 19961  011138  C06F  FFDF         	movff	utoa@c,indf2
 19962                           
 19963                           ; BSR set to: 0
 19964  01113C  0767               	decf	utoa@buf& (0+255),f,b
 19965  01113E  A0D8               	btfss	status,0,c
 19966  011140  0768               	decf	(utoa@buf+1)& (0+255),f,b
 19967                           
 19968                           ; BSR set to: 0
 19969  011142  5169               	movf	utoa@val& (0+255),w,b
 19970  011144  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 19971  011146  A4D8               	btfss	status,2,c
 19972  011148  D7D0               	goto	l3394
 19973                           
 19974                           ; BSR set to: 0
 19975                           ;	Return value of _utoa is never used
 19976                           
 19977                           ; BSR set to: 0
 19978  01114A  4B67               	infsnz	utoa@buf& (0+255),f,b
 19979  01114C  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 19980  01114E  0012               	return	
 19981  011150                     __end_of_utoa:
 19982                           	opt stack 0
 19983                           tblptru	equ	0xFF8
 19984                           tblptrh	equ	0xFF7
 19985                           tblptrl	equ	0xFF6
 19986                           tablat	equ	0xFF5
 19987                           prodh	equ	0xFF4
 19988                           prodl	equ	0xFF3
 19989                           intcon	equ	0xFF2
 19990                           postinc0	equ	0xFEE
 19991                           wreg	equ	0xFE8
 19992                           indf1	equ	0xFE7
 19993                           postdec1	equ	0xFE5
 19994                           plusw1	equ	0xFE3
 19995                           fsr1h	equ	0xFE2
 19996                           fsr1l	equ	0xFE1
 19997                           indf2	equ	0xFDF
 19998                           postinc2	equ	0xFDE
 19999                           postdec2	equ	0xFDD
 20000                           plusw2	equ	0xFDB
 20001                           fsr2h	equ	0xFDA
 20002                           fsr2l	equ	0xFD9
 20003                           status	equ	0xFD8
 20004                           
 20005 ;; *************** function ___lwmod *****************
 20006 ;; Defined at:
 20007 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 20008 ;; Parameters:    Size  Location     Type
 20009 ;;  dividend        2    0[BANK0 ] unsigned int 
 20010 ;;  divisor         2    2[BANK0 ] unsigned int 
 20011 ;; Auto vars:     Size  Location     Type
 20012 ;;  counter         1    4[BANK0 ] unsigned char 
 20013 ;; Return value:  Size  Location     Type
 20014 ;;                  2    0[BANK0 ] unsigned int 
 20015 ;; Registers used:
 20016 ;;		wreg, status,2, status,0
 20017 ;; Tracked objects:
 20018 ;;		On entry : 0/0
 20019 ;;		On exit  : 0/0
 20020 ;;		Unchanged: 0/0
 20021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20022 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20025 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20026 ;;Total ram usage:        5 bytes
 20027 ;; Hardware stack levels used:    1
 20028 ;; Hardware stack levels required when called:   10
 20029 ;; This function calls:
 20030 ;;		Nothing
 20031 ;; This function is called by:
 20032 ;;		_utoa
 20033 ;; This function uses a non-reentrant model
 20034 ;;
 20035                           
 20036                           	psect	text66
 20037  0125B8                     __ptext66:
 20038                           	opt stack 0
 20039  0125B8                     ___lwmod:
 20040                           	opt stack 15
 20041                           
 20042                           ; BSR set to: 0
 20043                           ;incstack = 0
 20044  0125B8  0100               	movlb	0	; () banked
 20045  0125BA  5162               	movf	___lwmod@divisor& (0+255),w,b
 20046  0125BC  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 20047  0125BE  B4D8               	btfsc	status,2,c
 20048  0125C0  D018               	goto	l3219
 20049                           
 20050                           ; BSR set to: 0
 20051  0125C2  0E01               	movlw	1
 20052  0125C4  6F64               	movwf	___lwmod@counter& (0+255),b
 20053  0125C6  D004               	goto	l3214
 20054  0125C8                     
 20055                           ; BSR set to: 0
 20056                           
 20057                           ; BSR set to: 0
 20058  0125C8  90D8               	bcf	status,0,c
 20059  0125CA  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 20060  0125CC  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 20061  0125CE  2B64               	incf	___lwmod@counter& (0+255),f,b
 20062  0125D0                     l3214:
 20063                           
 20064                           ; BSR set to: 0
 20065                           
 20066                           ; BSR set to: 0
 20067  0125D0  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 20068  0125D2  D7FA               	goto	l3215
 20069  0125D4                     u17970:
 20070                           
 20071                           ; BSR set to: 0
 20072                           
 20073                           ; BSR set to: 0
 20074                           
 20075                           ; BSR set to: 0
 20076  0125D4  5162               	movf	___lwmod@divisor& (0+255),w,b
 20077  0125D6  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 20078  0125D8  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20079  0125DA  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 20080  0125DC  A0D8               	btfss	status,0,c
 20081  0125DE  D004               	goto	l3218
 20082                           
 20083                           ; BSR set to: 0
 20084  0125E0  5162               	movf	___lwmod@divisor& (0+255),w,b
 20085  0125E2  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 20086  0125E4  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20087  0125E6  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 20088  0125E8                     l3218:
 20089                           
 20090                           ; BSR set to: 0
 20091                           
 20092                           ; BSR set to: 0
 20093  0125E8  90D8               	bcf	status,0,c
 20094  0125EA  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 20095  0125EC  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 20096                           
 20097                           ; BSR set to: 0
 20098  0125EE  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 20099  0125F0  D7F1               	goto	u17970
 20100  0125F2                     l3219:
 20101                           
 20102                           ; BSR set to: 0
 20103                           
 20104                           ; BSR set to: 0
 20105  0125F2  C060  F060         	movff	___lwmod@dividend,?___lwmod
 20106  0125F6  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 20107                           
 20108                           ; BSR set to: 0
 20109  0125FA  0012               	return		;funcret
 20110  0125FC                     __end_of___lwmod:
 20111                           	opt stack 0
 20112                           tblptru	equ	0xFF8
 20113                           tblptrh	equ	0xFF7
 20114                           tblptrl	equ	0xFF6
 20115                           tablat	equ	0xFF5
 20116                           prodh	equ	0xFF4
 20117                           prodl	equ	0xFF3
 20118                           intcon	equ	0xFF2
 20119                           postinc0	equ	0xFEE
 20120                           wreg	equ	0xFE8
 20121                           indf1	equ	0xFE7
 20122                           postdec1	equ	0xFE5
 20123                           plusw1	equ	0xFE3
 20124                           fsr1h	equ	0xFE2
 20125                           fsr1l	equ	0xFE1
 20126                           indf2	equ	0xFDF
 20127                           postinc2	equ	0xFDE
 20128                           postdec2	equ	0xFDD
 20129                           plusw2	equ	0xFDB
 20130                           fsr2h	equ	0xFDA
 20131                           fsr2l	equ	0xFD9
 20132                           status	equ	0xFD8
 20133                           
 20134 ;; *************** function ___lwdiv *****************
 20135 ;; Defined at:
 20136 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 20137 ;; Parameters:    Size  Location     Type
 20138 ;;  dividend        2    0[BANK0 ] unsigned int 
 20139 ;;  divisor         2    2[BANK0 ] unsigned int 
 20140 ;; Auto vars:     Size  Location     Type
 20141 ;;  quotient        2    5[BANK0 ] unsigned int 
 20142 ;;  counter         1    4[BANK0 ] unsigned char 
 20143 ;; Return value:  Size  Location     Type
 20144 ;;                  2    0[BANK0 ] unsigned int 
 20145 ;; Registers used:
 20146 ;;		wreg, status,2, status,0
 20147 ;; Tracked objects:
 20148 ;;		On entry : 0/0
 20149 ;;		On exit  : 0/0
 20150 ;;		Unchanged: 0/0
 20151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20153 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20155 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20156 ;;Total ram usage:        7 bytes
 20157 ;; Hardware stack levels used:    1
 20158 ;; Hardware stack levels required when called:   10
 20159 ;; This function calls:
 20160 ;;		Nothing
 20161 ;; This function is called by:
 20162 ;;		_utoa
 20163 ;; This function uses a non-reentrant model
 20164 ;;
 20165                           
 20166                           	psect	text67
 20167  0121C8                     __ptext67:
 20168                           	opt stack 0
 20169  0121C8                     ___lwdiv:
 20170                           	opt stack 15
 20171                           
 20172                           ; BSR set to: 0
 20173                           ;incstack = 0
 20174  0121C8  0E00               	movlw	0
 20175  0121CA  0100               	movlb	0	; () banked
 20176  0121CC  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 20177  0121CE  0E00               	movlw	0
 20178  0121D0  6F65               	movwf	___lwdiv@quotient& (0+255),b
 20179                           
 20180                           ; BSR set to: 0
 20181  0121D2  5162               	movf	___lwdiv@divisor& (0+255),w,b
 20182  0121D4  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 20183  0121D6  B4D8               	btfsc	status,2,c
 20184  0121D8  D01C               	goto	l3209
 20185                           
 20186                           ; BSR set to: 0
 20187  0121DA  0E01               	movlw	1
 20188  0121DC  6F64               	movwf	___lwdiv@counter& (0+255),b
 20189  0121DE  D004               	goto	l3204
 20190  0121E0                     
 20191                           ; BSR set to: 0
 20192                           
 20193                           ; BSR set to: 0
 20194  0121E0  90D8               	bcf	status,0,c
 20195  0121E2  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 20196  0121E4  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 20197  0121E6  2B64               	incf	___lwdiv@counter& (0+255),f,b
 20198  0121E8                     l3204:
 20199                           
 20200                           ; BSR set to: 0
 20201                           
 20202                           ; BSR set to: 0
 20203  0121E8  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 20204  0121EA  D7FA               	goto	l3205
 20205  0121EC                     u17940:
 20206                           
 20207                           ; BSR set to: 0
 20208                           
 20209                           ; BSR set to: 0
 20210                           
 20211                           ; BSR set to: 0
 20212  0121EC  90D8               	bcf	status,0,c
 20213  0121EE  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 20214  0121F0  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 20215                           
 20216                           ; BSR set to: 0
 20217  0121F2  5162               	movf	___lwdiv@divisor& (0+255),w,b
 20218  0121F4  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 20219  0121F6  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20220  0121F8  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 20221  0121FA  A0D8               	btfss	status,0,c
 20222  0121FC  D005               	goto	l3208
 20223                           
 20224                           ; BSR set to: 0
 20225  0121FE  5162               	movf	___lwdiv@divisor& (0+255),w,b
 20226  012200  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 20227  012202  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20228  012204  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 20229                           
 20230                           ; BSR set to: 0
 20231  012206  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 20232  012208                     l3208:
 20233                           
 20234                           ; BSR set to: 0
 20235                           
 20236                           ; BSR set to: 0
 20237  012208  90D8               	bcf	status,0,c
 20238  01220A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 20239  01220C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 20240                           
 20241                           ; BSR set to: 0
 20242  01220E  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 20243  012210  D7ED               	goto	u17940
 20244  012212                     l3209:
 20245                           
 20246                           ; BSR set to: 0
 20247                           
 20248                           ; BSR set to: 0
 20249  012212  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 20250  012216  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 20251                           
 20252                           ; BSR set to: 0
 20253  01221A  0012               	return		;funcret
 20254  01221C                     __end_of___lwdiv:
 20255                           	opt stack 0
 20256                           tblptru	equ	0xFF8
 20257                           tblptrh	equ	0xFF7
 20258                           tblptrl	equ	0xFF6
 20259                           tablat	equ	0xFF5
 20260                           prodh	equ	0xFF4
 20261                           prodl	equ	0xFF3
 20262                           intcon	equ	0xFF2
 20263                           postinc0	equ	0xFEE
 20264                           wreg	equ	0xFE8
 20265                           indf1	equ	0xFE7
 20266                           postdec1	equ	0xFE5
 20267                           plusw1	equ	0xFE3
 20268                           fsr1h	equ	0xFE2
 20269                           fsr1l	equ	0xFE1
 20270                           indf2	equ	0xFDF
 20271                           postinc2	equ	0xFDE
 20272                           postdec2	equ	0xFDD
 20273                           plusw2	equ	0xFDB
 20274                           fsr2h	equ	0xFDA
 20275                           fsr2l	equ	0xFD9
 20276                           status	equ	0xFD8
 20277                           
 20278 ;; *************** function ___almod *****************
 20279 ;; Defined at:
 20280 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 20281 ;; Parameters:    Size  Location     Type
 20282 ;;  dividend        4    0[BANK0 ] long 
 20283 ;;  divisor         4    4[BANK0 ] long 
 20284 ;; Auto vars:     Size  Location     Type
 20285 ;;  sign            1    9[BANK0 ] unsigned char 
 20286 ;;  counter         1    8[BANK0 ] unsigned char 
 20287 ;; Return value:  Size  Location     Type
 20288 ;;                  4    0[BANK0 ] long 
 20289 ;; Registers used:
 20290 ;;		wreg, status,2, status,0
 20291 ;; Tracked objects:
 20292 ;;		On entry : 0/0
 20293 ;;		On exit  : 0/0
 20294 ;;		Unchanged: 0/0
 20295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20296 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20297 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20299 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20300 ;;Total ram usage:       10 bytes
 20301 ;; Hardware stack levels used:    1
 20302 ;; Hardware stack levels required when called:   10
 20303 ;; This function calls:
 20304 ;;		Nothing
 20305 ;; This function is called by:
 20306 ;;		__display_itoa_long
 20307 ;; This function uses a non-reentrant model
 20308 ;;
 20309                           
 20310                           	psect	text68
 20311  010FF8                     __ptext68:
 20312                           	opt stack 0
 20313  010FF8                     ___almod:
 20314                           	opt stack 18
 20315                           
 20316                           ; BSR set to: 0
 20317                           ;incstack = 0
 20318  010FF8  0E00               	movlw	0
 20319  010FFA  0100               	movlb	0	; () banked
 20320  010FFC  6F69               	movwf	___almod@sign& (0+255),b
 20321                           
 20322                           ; BSR set to: 0
 20323  010FFE  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 20324  011000  D00A               	goto	l2806
 20325                           
 20326                           ; BSR set to: 0
 20327  011002  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 20328  011004  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 20329  011006  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 20330  011008  6D60               	negf	___almod@dividend& (0+255),b
 20331  01100A  0E00               	movlw	0
 20332  01100C  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 20333  01100E  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 20334  011010  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 20335                           
 20336                           ; BSR set to: 0
 20337  011012  0E01               	movlw	1
 20338  011014  6F69               	movwf	___almod@sign& (0+255),b
 20339  011016                     l2806:
 20340                           
 20341                           ; BSR set to: 0
 20342                           
 20343                           ; BSR set to: 0
 20344  011016  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 20345  011018  D008               	goto	l2807
 20346                           
 20347                           ; BSR set to: 0
 20348  01101A  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 20349  01101C  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 20350  01101E  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 20351  011020  6D64               	negf	___almod@divisor& (0+255),b
 20352  011022  0E00               	movlw	0
 20353  011024  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 20354  011026  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 20355  011028  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 20356  01102A                     l2807:
 20357                           
 20358                           ; BSR set to: 0
 20359                           
 20360                           ; BSR set to: 0
 20361  01102A  5164               	movf	___almod@divisor& (0+255),w,b
 20362  01102C  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 20363  01102E  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 20364  011030  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 20365  011032  B4D8               	btfsc	status,2,c
 20366  011034  D024               	goto	l2814
 20367                           
 20368                           ; BSR set to: 0
 20369  011036  0E01               	movlw	1
 20370  011038  6F68               	movwf	___almod@counter& (0+255),b
 20371  01103A  D006               	goto	l2809
 20372  01103C                     
 20373                           ; BSR set to: 0
 20374                           
 20375                           ; BSR set to: 0
 20376  01103C  90D8               	bcf	status,0,c
 20377  01103E  3764               	rlcf	___almod@divisor& (0+255),f,b
 20378  011040  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 20379  011042  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 20380  011044  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 20381  011046  2B68               	incf	___almod@counter& (0+255),f,b
 20382  011048                     l2809:
 20383                           
 20384                           ; BSR set to: 0
 20385                           
 20386                           ; BSR set to: 0
 20387  011048  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 20388  01104A  D7F8               	goto	l2810
 20389  01104C                     u20140:
 20390                           
 20391                           ; BSR set to: 0
 20392                           
 20393                           ; BSR set to: 0
 20394                           
 20395                           ; BSR set to: 0
 20396  01104C  5164               	movf	___almod@divisor& (0+255),w,b
 20397  01104E  5D60               	subwf	___almod@dividend& (0+255),w,b
 20398  011050  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 20399  011052  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 20400  011054  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 20401  011056  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 20402  011058  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 20403  01105A  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 20404  01105C  A0D8               	btfss	status,0,c
 20405  01105E  D008               	goto	l2813
 20406                           
 20407                           ; BSR set to: 0
 20408  011060  5164               	movf	___almod@divisor& (0+255),w,b
 20409  011062  5F60               	subwf	___almod@dividend& (0+255),f,b
 20410  011064  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 20411  011066  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 20412  011068  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 20413  01106A  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 20414  01106C  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 20415  01106E  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 20416  011070                     l2813:
 20417                           
 20418                           ; BSR set to: 0
 20419                           
 20420                           ; BSR set to: 0
 20421  011070  90D8               	bcf	status,0,c
 20422  011072  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 20423  011074  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 20424  011076  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 20425  011078  3364               	rrcf	___almod@divisor& (0+255),f,b
 20426                           
 20427                           ; BSR set to: 0
 20428  01107A  2F68               	decfsz	___almod@counter& (0+255),f,b
 20429  01107C  D7E7               	goto	u20140
 20430  01107E                     l2814:
 20431                           
 20432                           ; BSR set to: 0
 20433                           
 20434                           ; BSR set to: 0
 20435                           
 20436                           ; BSR set to: 0
 20437  01107E  5169               	movf	___almod@sign& (0+255),w,b
 20438  011080  B4D8               	btfsc	status,2,c
 20439  011082  D008               	goto	l2815
 20440                           
 20441                           ; BSR set to: 0
 20442  011084  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 20443  011086  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 20444  011088  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 20445  01108A  6D60               	negf	___almod@dividend& (0+255),b
 20446  01108C  0E00               	movlw	0
 20447  01108E  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 20448  011090  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 20449  011092  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 20450  011094                     l2815:
 20451                           
 20452                           ; BSR set to: 0
 20453                           
 20454                           ; BSR set to: 0
 20455  011094  C060  F060         	movff	___almod@dividend,?___almod
 20456  011098  C061  F061         	movff	___almod@dividend+1,?___almod+1
 20457  01109C  C062  F062         	movff	___almod@dividend+2,?___almod+2
 20458  0110A0  C063  F063         	movff	___almod@dividend+3,?___almod+3
 20459  0110A4  0012               	return	
 20460  0110A6                     __end_of___almod:
 20461                           	opt stack 0
 20462                           tblptru	equ	0xFF8
 20463                           tblptrh	equ	0xFF7
 20464                           tblptrl	equ	0xFF6
 20465                           tablat	equ	0xFF5
 20466                           prodh	equ	0xFF4
 20467                           prodl	equ	0xFF3
 20468                           intcon	equ	0xFF2
 20469                           postinc0	equ	0xFEE
 20470                           wreg	equ	0xFE8
 20471                           indf1	equ	0xFE7
 20472                           postdec1	equ	0xFE5
 20473                           plusw1	equ	0xFE3
 20474                           fsr1h	equ	0xFE2
 20475                           fsr1l	equ	0xFE1
 20476                           indf2	equ	0xFDF
 20477                           postinc2	equ	0xFDE
 20478                           postdec2	equ	0xFDD
 20479                           plusw2	equ	0xFDB
 20480                           fsr2h	equ	0xFDA
 20481                           fsr2l	equ	0xFD9
 20482                           status	equ	0xFD8
 20483                           
 20484 ;; *************** function ___aldiv *****************
 20485 ;; Defined at:
 20486 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 20487 ;; Parameters:    Size  Location     Type
 20488 ;;  dividend        4    0[BANK0 ] long 
 20489 ;;  divisor         4    4[BANK0 ] long 
 20490 ;; Auto vars:     Size  Location     Type
 20491 ;;  quotient        4   10[BANK0 ] long 
 20492 ;;  sign            1    9[BANK0 ] unsigned char 
 20493 ;;  counter         1    8[BANK0 ] unsigned char 
 20494 ;; Return value:  Size  Location     Type
 20495 ;;                  4    0[BANK0 ] long 
 20496 ;; Registers used:
 20497 ;;		wreg, status,2, status,0
 20498 ;; Tracked objects:
 20499 ;;		On entry : 0/0
 20500 ;;		On exit  : 0/0
 20501 ;;		Unchanged: 0/0
 20502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20503 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20504 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20506 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20507 ;;Total ram usage:       14 bytes
 20508 ;; Hardware stack levels used:    1
 20509 ;; Hardware stack levels required when called:   10
 20510 ;; This function calls:
 20511 ;;		Nothing
 20512 ;; This function is called by:
 20513 ;;		__display_itoa_long
 20514 ;; This function uses a non-reentrant model
 20515 ;;
 20516                           
 20517                           	psect	text69
 20518  010A06                     __ptext69:
 20519                           	opt stack 0
 20520  010A06                     ___aldiv:
 20521                           	opt stack 18
 20522                           
 20523                           ; BSR set to: 0
 20524                           ;incstack = 0
 20525  010A06  0E00               	movlw	0
 20526  010A08  0100               	movlb	0	; () banked
 20527  010A0A  6F69               	movwf	___aldiv@sign& (0+255),b
 20528                           
 20529                           ; BSR set to: 0
 20530  010A0C  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 20531  010A0E  D00A               	goto	l2793
 20532                           
 20533                           ; BSR set to: 0
 20534  010A10  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 20535  010A12  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 20536  010A14  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 20537  010A16  6D64               	negf	___aldiv@divisor& (0+255),b
 20538  010A18  0E00               	movlw	0
 20539  010A1A  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 20540  010A1C  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 20541  010A1E  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 20542                           
 20543                           ; BSR set to: 0
 20544  010A20  0E01               	movlw	1
 20545  010A22  6F69               	movwf	___aldiv@sign& (0+255),b
 20546  010A24                     l2793:
 20547                           
 20548                           ; BSR set to: 0
 20549                           
 20550                           ; BSR set to: 0
 20551  010A24  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 20552  010A26  D00A               	goto	l2794
 20553                           
 20554                           ; BSR set to: 0
 20555  010A28  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 20556  010A2A  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 20557  010A2C  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 20558  010A2E  6D60               	negf	___aldiv@dividend& (0+255),b
 20559  010A30  0E00               	movlw	0
 20560  010A32  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 20561  010A34  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 20562  010A36  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 20563                           
 20564                           ; BSR set to: 0
 20565  010A38  0E01               	movlw	1
 20566  010A3A  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 20567  010A3C                     l2794:
 20568                           
 20569                           ; BSR set to: 0
 20570                           
 20571                           ; BSR set to: 0
 20572  010A3C  0E00               	movlw	0
 20573  010A3E  6F6A               	movwf	___aldiv@quotient& (0+255),b
 20574  010A40  0E00               	movlw	0
 20575  010A42  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 20576  010A44  0E00               	movlw	0
 20577  010A46  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 20578  010A48  0E00               	movlw	0
 20579  010A4A  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 20580                           
 20581                           ; BSR set to: 0
 20582  010A4C  5164               	movf	___aldiv@divisor& (0+255),w,b
 20583  010A4E  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 20584  010A50  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 20585  010A52  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 20586  010A54  B4D8               	btfsc	status,2,c
 20587  010A56  D02A               	goto	l2801
 20588                           
 20589                           ; BSR set to: 0
 20590  010A58  0E01               	movlw	1
 20591  010A5A  6F68               	movwf	___aldiv@counter& (0+255),b
 20592  010A5C  D006               	goto	l2796
 20593  010A5E                     
 20594                           ; BSR set to: 0
 20595                           
 20596                           ; BSR set to: 0
 20597  010A5E  90D8               	bcf	status,0,c
 20598  010A60  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 20599  010A62  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 20600  010A64  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 20601  010A66  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 20602  010A68  2B68               	incf	___aldiv@counter& (0+255),f,b
 20603  010A6A                     l2796:
 20604                           
 20605                           ; BSR set to: 0
 20606                           
 20607                           ; BSR set to: 0
 20608  010A6A  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 20609  010A6C  D7F8               	goto	l2797
 20610  010A6E                     u20080:
 20611                           
 20612                           ; BSR set to: 0
 20613                           
 20614                           ; BSR set to: 0
 20615                           
 20616                           ; BSR set to: 0
 20617  010A6E  90D8               	bcf	status,0,c
 20618  010A70  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 20619  010A72  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 20620  010A74  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 20621  010A76  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 20622                           
 20623                           ; BSR set to: 0
 20624  010A78  5164               	movf	___aldiv@divisor& (0+255),w,b
 20625  010A7A  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 20626  010A7C  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 20627  010A7E  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 20628  010A80  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 20629  010A82  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 20630  010A84  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 20631  010A86  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 20632  010A88  A0D8               	btfss	status,0,c
 20633  010A8A  D009               	goto	l2800
 20634                           
 20635                           ; BSR set to: 0
 20636  010A8C  5164               	movf	___aldiv@divisor& (0+255),w,b
 20637  010A8E  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 20638  010A90  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 20639  010A92  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 20640  010A94  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 20641  010A96  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 20642  010A98  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 20643  010A9A  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 20644                           
 20645                           ; BSR set to: 0
 20646  010A9C  816A               	bsf	___aldiv@quotient& (0+255),0,b
 20647  010A9E                     l2800:
 20648                           
 20649                           ; BSR set to: 0
 20650                           
 20651                           ; BSR set to: 0
 20652  010A9E  90D8               	bcf	status,0,c
 20653  010AA0  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 20654  010AA2  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 20655  010AA4  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 20656  010AA6  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 20657                           
 20658                           ; BSR set to: 0
 20659  010AA8  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 20660  010AAA  D7E1               	goto	u20080
 20661  010AAC                     l2801:
 20662                           
 20663                           ; BSR set to: 0
 20664                           
 20665                           ; BSR set to: 0
 20666                           
 20667                           ; BSR set to: 0
 20668  010AAC  5169               	movf	___aldiv@sign& (0+255),w,b
 20669  010AAE  B4D8               	btfsc	status,2,c
 20670  010AB0  D008               	goto	l2802
 20671                           
 20672                           ; BSR set to: 0
 20673  010AB2  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 20674  010AB4  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 20675  010AB6  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 20676  010AB8  6D6A               	negf	___aldiv@quotient& (0+255),b
 20677  010ABA  0E00               	movlw	0
 20678  010ABC  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 20679  010ABE  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 20680  010AC0  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 20681  010AC2                     l2802:
 20682                           
 20683                           ; BSR set to: 0
 20684                           
 20685                           ; BSR set to: 0
 20686  010AC2  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 20687  010AC6  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 20688  010ACA  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 20689  010ACE  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 20690  010AD2  0012               	return	
 20691  010AD4                     __end_of___aldiv:
 20692                           	opt stack 0
 20693                           tblptru	equ	0xFF8
 20694                           tblptrh	equ	0xFF7
 20695                           tblptrl	equ	0xFF6
 20696                           tablat	equ	0xFF5
 20697                           prodh	equ	0xFF4
 20698                           prodl	equ	0xFF3
 20699                           intcon	equ	0xFF2
 20700                           postinc0	equ	0xFEE
 20701                           wreg	equ	0xFE8
 20702                           indf1	equ	0xFE7
 20703                           postdec1	equ	0xFE5
 20704                           plusw1	equ	0xFE3
 20705                           fsr1h	equ	0xFE2
 20706                           fsr1l	equ	0xFE1
 20707                           indf2	equ	0xFDF
 20708                           postinc2	equ	0xFDE
 20709                           postdec2	equ	0xFDD
 20710                           plusw2	equ	0xFDB
 20711                           fsr2h	equ	0xFDA
 20712                           fsr2l	equ	0xFD9
 20713                           status	equ	0xFD8
 20714                           
 20715 ;; *************** function __display_clear *****************
 20716 ;; Defined at:
 20717 ;;		line 81 in file "display.c"
 20718 ;; Parameters:    Size  Location     Type
 20719 ;;		None
 20720 ;; Auto vars:     Size  Location     Type
 20721 ;;  col             1    3[BANK0 ] unsigned char 
 20722 ;;  row             1    2[BANK0 ] unsigned char 
 20723 ;; Return value:  Size  Location     Type
 20724 ;;                  1    wreg      void 
 20725 ;; Registers used:
 20726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20727 ;; Tracked objects:
 20728 ;;		On entry : 0/0
 20729 ;;		On exit  : 0/0
 20730 ;;		Unchanged: 0/0
 20731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20733 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20734 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20735 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20736 ;;Total ram usage:        4 bytes
 20737 ;; Hardware stack levels used:    1
 20738 ;; Hardware stack levels required when called:   10
 20739 ;; This function calls:
 20740 ;;		Nothing
 20741 ;; This function is called by:
 20742 ;;		_display_prepare
 20743 ;; This function uses a non-reentrant model
 20744 ;;
 20745                           
 20746                           	psect	text70
 20747  0124A0                     __ptext70:
 20748                           	opt stack 0
 20749  0124A0                     __display_clear:
 20750                           	opt stack 19
 20751                           
 20752                           ;display.c: 83: uint8_t row;;display.c: 84: uint8_t col;;display.c: 85: for(row=0;row<4;
      +                          ++row)
 20753                           
 20754                           ; BSR set to: 0
 20755                           ;incstack = 0
 20756  0124A0  0E00               	movlw	0
 20757  0124A2  0100               	movlb	0	; () banked
 20758  0124A4  6F62               	movwf	__display_clear@row& (0+255),b
 20759  0124A6                     l20946:
 20760                           
 20761                           ; BSR set to: 0
 20762  0124A6  0E03               	movlw	3
 20763  0124A8  6562               	cpfsgt	__display_clear@row& (0+255),b
 20764  0124AA  D001               	goto	l1274
 20765  0124AC  0012               	return	
 20766  0124AE                     l1274:
 20767                           
 20768                           ; BSR set to: 0
 20769                           ;display.c: 86: {;display.c: 87: for(col=0;col<20;++col)
 20770                           
 20771                           ; BSR set to: 0
 20772  0124AE  0E00               	movlw	0
 20773  0124B0  6F63               	movwf	__display_clear@col& (0+255),b
 20774  0124B2                     l20952:
 20775                           
 20776                           ; BSR set to: 0
 20777  0124B2  0E13               	movlw	19
 20778  0124B4  6563               	cpfsgt	__display_clear@col& (0+255),b
 20779  0124B6  D001               	goto	l1276
 20780  0124B8  D016               	goto	u20940
 20781  0124BA                     l1276:
 20782                           
 20783                           ; BSR set to: 0
 20784                           ;display.c: 88: {;display.c: 89: display_content[row][col] = ' ';
 20785                           
 20786                           ; BSR set to: 0
 20787  0124BA  5162               	movf	__display_clear@row& (0+255),w,b
 20788  0124BC  0D14               	mullw	20
 20789  0124BE  0E78               	movlw	low _display_content
 20790  0124C0  6F60               	movwf	??__display_clear& (0+255),b
 20791  0124C2  0E02               	movlw	high _display_content
 20792  0124C4  6F61               	movwf	(??__display_clear+1)& (0+255),b
 20793  0124C6  50F3               	movf	prodl,w,c
 20794  0124C8  2760               	addwf	??__display_clear& (0+255),f,b
 20795  0124CA  50F4               	movf	prodh,w,c
 20796  0124CC  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 20797  0124CE  5163               	movf	__display_clear@col& (0+255),w,b
 20798  0124D0  0D01               	mullw	1
 20799  0124D2  50F3               	movf	prodl,w,c
 20800  0124D4  2560               	addwf	??__display_clear& (0+255),w,b
 20801  0124D6  6ED9               	movwf	fsr2l,c
 20802  0124D8  50F4               	movf	prodh,w,c
 20803  0124DA  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 20804  0124DC  6EDA               	movwf	fsr2h,c
 20805  0124DE  0E20               	movlw	32
 20806  0124E0  6EDF               	movwf	indf2,c
 20807                           
 20808                           ; BSR set to: 0
 20809  0124E2  2B63               	incf	__display_clear@col& (0+255),f,b
 20810  0124E4  D7E6               	goto	l20952
 20811  0124E6                     u20940:
 20812                           
 20813                           ; BSR set to: 0
 20814                           
 20815                           ; BSR set to: 0
 20816  0124E6  2B62               	incf	__display_clear@row& (0+255),f,b
 20817  0124E8  D7DE               	goto	l20946
 20818  0124EA                     __end_of__display_clear:
 20819                           	opt stack 0
 20820                           tblptru	equ	0xFF8
 20821                           tblptrh	equ	0xFF7
 20822                           tblptrl	equ	0xFF6
 20823                           tablat	equ	0xFF5
 20824                           prodh	equ	0xFF4
 20825                           prodl	equ	0xFF3
 20826                           intcon	equ	0xFF2
 20827                           postinc0	equ	0xFEE
 20828                           wreg	equ	0xFE8
 20829                           indf1	equ	0xFE7
 20830                           postdec1	equ	0xFE5
 20831                           plusw1	equ	0xFE3
 20832                           fsr1h	equ	0xFE2
 20833                           fsr1l	equ	0xFE1
 20834                           indf2	equ	0xFDF
 20835                           postinc2	equ	0xFDE
 20836                           postdec2	equ	0xFDD
 20837                           plusw2	equ	0xFDB
 20838                           fsr2h	equ	0xFDA
 20839                           fsr2l	equ	0xFD9
 20840                           status	equ	0xFD8
 20841                           
 20842 ;; *************** function _adc_read_temperature *****************
 20843 ;; Defined at:
 20844 ;;		line 44 in file "adc.c"
 20845 ;; Parameters:    Size  Location     Type
 20846 ;;		None
 20847 ;; Auto vars:     Size  Location     Type
 20848 ;;  temperature     4   43[BANK0 ] float 
 20849 ;;  adc_result      2   41[BANK0 ] unsigned int 
 20850 ;; Return value:  Size  Location     Type
 20851 ;;                  1    wreg      void 
 20852 ;; Registers used:
 20853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20854 ;; Tracked objects:
 20855 ;;		On entry : 0/0
 20856 ;;		On exit  : 0/0
 20857 ;;		Unchanged: 0/0
 20858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20860 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20861 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20862 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20863 ;;Total ram usage:        8 bytes
 20864 ;; Hardware stack levels used:    1
 20865 ;; Hardware stack levels required when called:   11
 20866 ;; This function calls:
 20867 ;;		___fladd
 20868 ;;		___flmul
 20869 ;;		___flneg
 20870 ;;		___fltol
 20871 ;;		___xxtofl
 20872 ;; This function is called by:
 20873 ;;		_main
 20874 ;; This function uses a non-reentrant model
 20875 ;;
 20876                           
 20877                           	psect	text71
 20878  00DF3C                     __ptext71:
 20879                           	opt stack 0
 20880  00DF3C                     _adc_read_temperature:
 20881                           	opt stack 19
 20882                           
 20883                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 20884                           
 20885                           ; BSR set to: 0
 20886                           ;incstack = 0
 20887  00DF3C  CFC4 F089          	movff	4036,adc_read_temperature@adc_result	;volatile
 20888  00DF40  0100               	movlb	0	; () banked
 20889  00DF42  6B8A               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 20890                           
 20891                           ; BSR set to: 0
 20892                           ;adc.c: 51: adc_result <<= 8;
 20893  00DF44  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 20894  00DF46  6F8A               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 20895  00DF48  6B89               	clrf	adc_read_temperature@adc_result& (0+255),b
 20896                           
 20897                           ; BSR set to: 0
 20898                           ;adc.c: 52: adc_result |= ADRESL;
 20899  00DF4A  50C3               	movf	4035,w,c	;volatile
 20900  00DF4C  1389               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 20901                           
 20902                           ; BSR set to: 0
 20903                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 20904  00DF4E  0101               	movlb	1	; () banked
 20905  00DF50  513A               	movf	_params& (0+255),w,b
 20906  00DF52  0D02               	mullw	2
 20907  00DF54  0E3B               	movlw	low (_params+1)
 20908  00DF56  24F3               	addwf	prodl,w,c
 20909  00DF58  6ED9               	movwf	fsr2l,c
 20910  00DF5A  0E01               	movlw	high (_params+1)
 20911  00DF5C  20F4               	addwfc	prodh,w,c
 20912  00DF5E  6EDA               	movwf	fsr2h,c
 20913  00DF60  0100               	movlb	0	; () banked
 20914  00DF62  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 20915  00DF64  26DE               	addwf	postinc2,f,c
 20916  00DF66  518A               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 20917  00DF68  22DD               	addwfc	postdec2,f,c
 20918                           
 20919                           ; BSR set to: 0
 20920                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 20921  00DF6A  0101               	movlb	1	; () banked
 20922  00DF6C  513A               	movf	_params& (0+255),w,b
 20923  00DF6E  0D01               	mullw	1
 20924  00DF70  0E3F               	movlw	low (_params+5)
 20925  00DF72  24F3               	addwf	prodl,w,c
 20926  00DF74  6ED9               	movwf	fsr2l,c
 20927  00DF76  0E01               	movlw	high (_params+5)
 20928  00DF78  20F4               	addwfc	prodh,w,c
 20929  00DF7A  6EDA               	movwf	fsr2h,c
 20930  00DF7C  2ADF               	incf	indf2,f,c
 20931                           
 20932                           ; BSR set to: 1
 20933                           ;adc.c: 59: ADCON0bits.GO = 1;
 20934  00DF7E  82C2               	bsf	4034,1,c	;volatile
 20935                           
 20936                           ; BSR set to: 1
 20937                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 20938  00DF80  513A               	movf	_params& (0+255),w,b
 20939  00DF82  0D01               	mullw	1
 20940  00DF84  0E3F               	movlw	low (_params+5)
 20941  00DF86  24F3               	addwf	prodl,w,c
 20942  00DF88  6ED9               	movwf	fsr2l,c
 20943  00DF8A  0E01               	movlw	high (_params+5)
 20944  00DF8C  20F4               	addwfc	prodh,w,c
 20945  00DF8E  6EDA               	movwf	fsr2h,c
 20946  00DF90  0E08               	movlw	8
 20947  00DF92  18DE               	xorwf	postinc2,w,c
 20948  00DF94  A4D8               	btfss	status,2,c
 20949  00DF96  D0AF               	goto	l2716
 20950                           
 20951                           ; BSR set to: 1
 20952                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 20953  00DF98  513A               	movf	_params& (0+255),w,b
 20954  00DF9A  0D02               	mullw	2
 20955  00DF9C  0E3B               	movlw	low (_params+1)
 20956  00DF9E  24F3               	addwf	prodl,w,c
 20957  00DFA0  6ED9               	movwf	fsr2l,c
 20958  00DFA2  0E01               	movlw	high (_params+1)
 20959  00DFA4  20F4               	addwfc	prodh,w,c
 20960  00DFA6  6EDA               	movwf	fsr2h,c
 20961  00DFA8  CFDE F087          	movff	postinc2,??_adc_read_temperature
 20962  00DFAC  CFDD F088          	movff	postdec2,??_adc_read_temperature+1
 20963  00DFB0  C087  F060         	movff	??_adc_read_temperature,___xxtofl@val
 20964  00DFB4  C088  F061         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 20965  00DFB8  0100               	movlb	0	; () banked
 20966  00DFBA  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 20967  00DFBC  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 20968  00DFBE  0E00               	movlw	0
 20969  00DFC0  ECA9  F075         	call	___xxtofl
 20970  00DFC4  C060  F06E         	movff	?___xxtofl,___flneg@f1
 20971  00DFC8  C061  F06F         	movff	?___xxtofl+1,___flneg@f1+1
 20972  00DFCC  C062  F070         	movff	?___xxtofl+2,___flneg@f1+2
 20973  00DFD0  C063  F071         	movff	?___xxtofl+3,___flneg@f1+3
 20974  00DFD4  ECC6  F094         	call	___flneg	;wreg free
 20975  00DFD8  C06E  F072         	movff	?___flneg,___fladd@b
 20976  00DFDC  C06F  F073         	movff	?___flneg+1,___fladd@b+1
 20977  00DFE0  C070  F074         	movff	?___flneg+2,___fladd@b+2
 20978  00DFE4  C071  F075         	movff	?___flneg+3,___fladd@b+3
 20979  00DFE8  0E00               	movlw	0
 20980  00DFEA  0100               	movlb	0	; () banked
 20981  00DFEC  6F76               	movwf	___fladd@a& (0+255),b
 20982  00DFEE  0E90               	movlw	144
 20983  00DFF0  6F77               	movwf	(___fladd@a+1)& (0+255),b
 20984  00DFF2  0EA4               	movlw	164
 20985  00DFF4  6F78               	movwf	(___fladd@a+2)& (0+255),b
 20986  00DFF6  0E46               	movlw	70
 20987  00DFF8  6F79               	movwf	(___fladd@a+3)& (0+255),b
 20988  00DFFA  EC1A  F062         	call	___fladd	;wreg free
 20989  00DFFE  C072  F08B         	movff	?___fladd,adc_read_temperature@temperature
 20990  00E002  C073  F08C         	movff	?___fladd+1,adc_read_temperature@temperature+1
 20991  00E006  C074  F08D         	movff	?___fladd+2,adc_read_temperature@temperature+2
 20992  00E00A  C075  F08E         	movff	?___fladd+3,adc_read_temperature@temperature+3
 20993                           
 20994                           ;adc.c: 68: temperature *= 0.7405;
 20995  00E00E  C08B  F06E         	movff	adc_read_temperature@temperature,___flmul@b
 20996  00E012  C08C  F06F         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 20997  00E016  C08D  F070         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 20998  00E01A  C08E  F071         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 20999  00E01E  0E68               	movlw	104
 21000  00E020  0100               	movlb	0	; () banked
 21001  00E022  6F72               	movwf	___flmul@a& (0+255),b
 21002  00E024  0E91               	movlw	145
 21003  00E026  6F73               	movwf	(___flmul@a+1)& (0+255),b
 21004  00E028  0E3D               	movlw	61
 21005  00E02A  6F74               	movwf	(___flmul@a+2)& (0+255),b
 21006  00E02C  0E3F               	movlw	63
 21007  00E02E  6F75               	movwf	(___flmul@a+3)& (0+255),b
 21008  00E030  EC71  F060         	call	___flmul	;wreg free
 21009  00E034  C06E  F08B         	movff	?___flmul,adc_read_temperature@temperature
 21010  00E038  C06F  F08C         	movff	?___flmul+1,adc_read_temperature@temperature+1
 21011  00E03C  C070  F08D         	movff	?___flmul+2,adc_read_temperature@temperature+2
 21012  00E040  C071  F08E         	movff	?___flmul+3,adc_read_temperature@temperature+3
 21013                           
 21014                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 21015  00E044  C08B  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 21016  00E048  C08C  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 21017  00E04C  C08D  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 21018  00E050  C08E  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 21019  00E054  EC13  F082         	call	___fltol	;wreg free
 21020  00E058  0101               	movlb	1	; () banked
 21021  00E05A  513A               	movf	_params& (0+255),w,b
 21022  00E05C  0D02               	mullw	2
 21023  00E05E  0EF7               	movlw	low (_os+39)
 21024  00E060  24F3               	addwf	prodl,w,c
 21025  00E062  6ED9               	movwf	fsr2l,c
 21026  00E064  0E00               	movlw	high (_os+39)
 21027  00E066  20F4               	addwfc	prodh,w,c
 21028  00E068  6EDA               	movwf	fsr2h,c
 21029  00E06A  0100               	movlb	0	; () banked
 21030  00E06C  C060  FFDE         	movff	?___fltol,postinc2
 21031  00E070  C061  FFDD         	movff	?___fltol+1,postdec2
 21032                           
 21033                           ; BSR set to: 0
 21034                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 21035  00E074  0101               	movlb	1	; () banked
 21036  00E076  513A               	movf	_params& (0+255),w,b
 21037  00E078  0D02               	mullw	2
 21038  00E07A  0E3B               	movlw	low (_params+1)
 21039  00E07C  24F3               	addwf	prodl,w,c
 21040  00E07E  6ED9               	movwf	fsr2l,c
 21041  00E080  0E01               	movlw	high (_params+1)
 21042  00E082  20F4               	addwfc	prodh,w,c
 21043  00E084  6EDA               	movwf	fsr2h,c
 21044  00E086  0E00               	movlw	0
 21045  00E088  6EDE               	movwf	postinc2,c
 21046  00E08A  0E00               	movlw	0
 21047  00E08C  6EDD               	movwf	postdec2,c
 21048                           
 21049                           ; BSR set to: 1
 21050                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 21051  00E08E  513A               	movf	_params& (0+255),w,b
 21052  00E090  0D01               	mullw	1
 21053  00E092  0E3F               	movlw	low (_params+5)
 21054  00E094  24F3               	addwf	prodl,w,c
 21055  00E096  6ED9               	movwf	fsr2l,c
 21056  00E098  0E01               	movlw	high (_params+5)
 21057  00E09A  20F4               	addwfc	prodh,w,c
 21058  00E09C  6EDA               	movwf	fsr2h,c
 21059  00E09E  0E00               	movlw	0
 21060  00E0A0  6EDF               	movwf	indf2,c
 21061                           
 21062                           ; BSR set to: 1
 21063                           ;adc.c: 78: if(os.fan_on)
 21064  00E0A2  0100               	movlb	0	; () banked
 21065  00E0A4  51FE               	movf	(_os+46)& (0+255),w,b	;volatile
 21066  00E0A6  B4D8               	btfsc	status,2,c
 21067  00E0A8  D013               	goto	l2713
 21068                           
 21069                           ; BSR set to: 0
 21070                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 21071  00E0AA  BFF8               	btfsc	(_os+40)& (0+255),7,b	;volatile
 21072  00E0AC  D006               	goto	u22760
 21073  00E0AE  0E60               	movlw	96
 21074  00E0B0  5DF7               	subwf	(_os+39)& (0+255),w,b	;volatile
 21075  00E0B2  0E09               	movlw	9
 21076  00E0B4  59F8               	subwfb	(_os+40)& (0+255),w,b	;volatile
 21077  00E0B6  B0D8               	btfsc	status,0,c
 21078  00E0B8  D01E               	goto	l2716
 21079  00E0BA                     u22760:
 21080                           
 21081                           ; BSR set to: 0
 21082  00E0BA  BFFA               	btfsc	(_os+42)& (0+255),7,b	;volatile
 21083  00E0BC  D006               	goto	u22770
 21084  00E0BE  0E60               	movlw	96
 21085  00E0C0  5DF9               	subwf	(_os+41)& (0+255),w,b	;volatile
 21086  00E0C2  0E09               	movlw	9
 21087  00E0C4  59FA               	subwfb	(_os+42)& (0+255),w,b	;volatile
 21088  00E0C6  B0D8               	btfsc	status,0,c
 21089  00E0C8  D016               	goto	l2716
 21090  00E0CA                     u22770:
 21091                           
 21092                           ; BSR set to: 0
 21093                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 21094  00E0CA  9C8B               	bcf	3979,6,c	;volatile
 21095                           
 21096                           ; BSR set to: 0
 21097                           ;adc.c: 83: os.fan_on = 0;
 21098  00E0CC  0E00               	movlw	0
 21099  00E0CE  D012               	goto	L36
 21100  00E0D0                     l2713:
 21101                           
 21102                           ; BSR set to: 0
 21103                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 21104                           
 21105                           ; BSR set to: 0
 21106  00E0D0  BFF8               	btfsc	(_os+40)& (0+255),7,b	;volatile
 21107  00E0D2  D006               	goto	u22780
 21108  00E0D4  0EC5               	movlw	197
 21109  00E0D6  5DF7               	subwf	(_os+39)& (0+255),w,b	;volatile
 21110  00E0D8  0E09               	movlw	9
 21111  00E0DA  59F8               	subwfb	(_os+40)& (0+255),w,b	;volatile
 21112  00E0DC  B0D8               	btfsc	status,0,c
 21113  00E0DE  D008               	goto	u22790
 21114  00E0E0                     u22780:
 21115                           
 21116                           ; BSR set to: 0
 21117  00E0E0  BFFA               	btfsc	(_os+42)& (0+255),7,b	;volatile
 21118  00E0E2  D009               	goto	l2716
 21119  00E0E4  0EC5               	movlw	197
 21120  00E0E6  5DF9               	subwf	(_os+41)& (0+255),w,b	;volatile
 21121  00E0E8  0E09               	movlw	9
 21122  00E0EA  59FA               	subwfb	(_os+42)& (0+255),w,b	;volatile
 21123  00E0EC  A0D8               	btfss	status,0,c
 21124  00E0EE  D003               	goto	l2716
 21125  00E0F0                     u22790:
 21126                           
 21127                           ; BSR set to: 0
 21128                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 21129  00E0F0  8C8B               	bsf	3979,6,c	;volatile
 21130                           
 21131                           ; BSR set to: 0
 21132                           ;adc.c: 91: os.fan_on = 1;
 21133  00E0F2  0E01               	movlw	1
 21134  00E0F4                     L36:
 21135  00E0F4  6FFE               	movwf	(_os+46)& (0+255),b	;volatile
 21136  00E0F6                     l2716:
 21137                           
 21138                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 21139                           
 21140                           ; BSR set to: 0
 21141                           
 21142                           ; BSR set to: 0
 21143  00E0F6  0101               	movlb	1	; () banked
 21144  00E0F8  513A               	movf	_params& (0+255),w,b
 21145  00E0FA  A4D8               	btfss	status,2,c
 21146  00E0FC  D007               	goto	l2719
 21147                           
 21148                           ; BSR set to: 1
 21149                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 21150  00E0FE  50C2               	movf	4034,w,c	;volatile
 21151  00E100  0BC3               	andlw	-61
 21152  00E102  092C               	iorlw	44
 21153  00E104  6EC2               	movwf	4034,c	;volatile
 21154                           
 21155                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 21156  00E106  0E01               	movlw	1
 21157  00E108  6F3A               	movwf	_params& (0+255),b
 21158                           
 21159                           ;adc.c: 101: }
 21160  00E10A  0012               	return	
 21161  00E10C                     l2719:
 21162                           
 21163                           ; BSR set to: 1
 21164                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 21165                           
 21166                           ; BSR set to: 1
 21167  00E10C  50C2               	movf	4034,w,c	;volatile
 21168  00E10E  0BC3               	andlw	-61
 21169  00E110  0924               	iorlw	36
 21170  00E112  6EC2               	movwf	4034,c	;volatile
 21171                           
 21172                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 21173  00E114  0E00               	movlw	0
 21174  00E116  6F3A               	movwf	_params& (0+255),b
 21175  00E118  0012               	return	
 21176  00E11A                     __end_of_adc_read_temperature:
 21177                           	opt stack 0
 21178                           tblptru	equ	0xFF8
 21179                           tblptrh	equ	0xFF7
 21180                           tblptrl	equ	0xFF6
 21181                           tablat	equ	0xFF5
 21182                           prodh	equ	0xFF4
 21183                           prodl	equ	0xFF3
 21184                           intcon	equ	0xFF2
 21185                           postinc0	equ	0xFEE
 21186                           wreg	equ	0xFE8
 21187                           indf1	equ	0xFE7
 21188                           postdec1	equ	0xFE5
 21189                           plusw1	equ	0xFE3
 21190                           fsr1h	equ	0xFE2
 21191                           fsr1l	equ	0xFE1
 21192                           indf2	equ	0xFDF
 21193                           postinc2	equ	0xFDE
 21194                           postdec2	equ	0xFDD
 21195                           plusw2	equ	0xFDB
 21196                           fsr2h	equ	0xFDA
 21197                           fsr2l	equ	0xFD9
 21198                           status	equ	0xFD8
 21199                           
 21200 ;; *************** function ___xxtofl *****************
 21201 ;; Defined at:
 21202 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 21203 ;; Parameters:    Size  Location     Type
 21204 ;;  sign            1    wreg     unsigned char 
 21205 ;;  val             4    0[BANK0 ] long 
 21206 ;; Auto vars:     Size  Location     Type
 21207 ;;  sign            1    8[BANK0 ] unsigned char 
 21208 ;;  arg             4   10[BANK0 ] unsigned long 
 21209 ;;  exp             1    9[BANK0 ] unsigned char 
 21210 ;; Return value:  Size  Location     Type
 21211 ;;                  4    0[BANK0 ] unsigned char 
 21212 ;; Registers used:
 21213 ;;		wreg, status,2, status,0
 21214 ;; Tracked objects:
 21215 ;;		On entry : 0/0
 21216 ;;		On exit  : 0/0
 21217 ;;		Unchanged: 0/0
 21218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21219 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21220 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21221 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21222 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21223 ;;Total ram usage:       14 bytes
 21224 ;; Hardware stack levels used:    1
 21225 ;; Hardware stack levels required when called:   10
 21226 ;; This function calls:
 21227 ;;		Nothing
 21228 ;; This function is called by:
 21229 ;;		_main
 21230 ;;		_motor_steps_from_degrees
 21231 ;;		__motor_get_speed_in_degrees
 21232 ;;		__step_position_from_divide_position
 21233 ;;		_motor_divide_jump_to_nearest
 21234 ;;		_motor_arc_move
 21235 ;;		_adc_read_temperature
 21236 ;;		_motor_go_to_degrees_position
 21237 ;; This function uses a non-reentrant model
 21238 ;;
 21239                           
 21240                           	psect	text72
 21241  00EB52                     __ptext72:
 21242                           	opt stack 0
 21243  00EB52                     ___xxtofl:
 21244                           	opt stack 17
 21245                           
 21246                           ; BSR set to: 1
 21247                           ;incstack = 0
 21248                           ;___xxtofl@sign stored from wreg
 21249  00EB52  0100               	movlb	0	; () banked
 21250  00EB54  6F68               	movwf	___xxtofl@sign& (0+255),b
 21251  00EB56  0100               	movlb	0	; () banked
 21252  00EB58  5168               	movf	___xxtofl@sign& (0+255),w,b
 21253  00EB5A  A4D8               	btfss	status,2,c
 21254                           
 21255                           ; BSR set to: 0
 21256  00EB5C  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 21257  00EB5E  D01A               	goto	l3367
 21258                           
 21259                           ; BSR set to: 0
 21260  00EB60  C060  F064         	movff	___xxtofl@val,??___xxtofl
 21261  00EB64  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 21262  00EB68  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 21263  00EB6C  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 21264  00EB70  1F64               	comf	??___xxtofl& (0+255),f,b
 21265  00EB72  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 21266  00EB74  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 21267  00EB76  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 21268  00EB78  2B64               	incf	??___xxtofl& (0+255),f,b
 21269  00EB7A  0E00               	movlw	0
 21270  00EB7C  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 21271  00EB7E  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 21272  00EB80  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 21273  00EB82  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 21274  00EB86  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 21275  00EB8A  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 21276  00EB8E  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 21277  00EB92  D008               	goto	l3368
 21278  00EB94                     l3367:
 21279                           
 21280                           ; BSR set to: 0
 21281  00EB94  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 21282  00EB98  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 21283  00EB9C  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 21284  00EBA0  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 21285  00EBA4                     l3368:
 21286                           
 21287                           ; BSR set to: 0
 21288                           
 21289                           ; BSR set to: 0
 21290  00EBA4  5160               	movf	___xxtofl@val& (0+255),w,b
 21291  00EBA6  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 21292  00EBA8  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 21293  00EBAA  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 21294  00EBAC  A4D8               	btfss	status,2,c
 21295  00EBAE  D009               	goto	l3369
 21296                           
 21297                           ; BSR set to: 0
 21298  00EBB0  0E00               	movlw	0
 21299  00EBB2  6F60               	movwf	?___xxtofl& (0+255),b
 21300  00EBB4  0E00               	movlw	0
 21301  00EBB6  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 21302  00EBB8  0E00               	movlw	0
 21303  00EBBA  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 21304  00EBBC  0E00               	movlw	0
 21305  00EBBE  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 21306                           
 21307                           ; BSR set to: 0
 21308  00EBC0  0012               	return	
 21309  00EBC2                     l3369:
 21310                           
 21311                           ; BSR set to: 0
 21312                           
 21313                           ; BSR set to: 0
 21314  00EBC2  0E96               	movlw	150
 21315  00EBC4  6F69               	movwf	___xxtofl@exp& (0+255),b
 21316  00EBC6  D006               	goto	l3371
 21317  00EBC8                     
 21318                           ; BSR set to: 0
 21319                           
 21320                           ; BSR set to: 0
 21321  00EBC8  2B69               	incf	___xxtofl@exp& (0+255),f,b
 21322  00EBCA  90D8               	bcf	status,0,c
 21323  00EBCC  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 21324  00EBCE  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 21325  00EBD0  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 21326  00EBD2  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 21327  00EBD4                     l3371:
 21328                           
 21329                           ; BSR set to: 0
 21330                           
 21331                           ; BSR set to: 0
 21332  00EBD4  0E00               	movlw	0
 21333  00EBD6  156A               	andwf	___xxtofl@arg& (0+255),w,b
 21334  00EBD8  6F64               	movwf	??___xxtofl& (0+255),b
 21335  00EBDA  0E00               	movlw	0
 21336  00EBDC  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 21337  00EBDE  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 21338  00EBE0  0E00               	movlw	0
 21339  00EBE2  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 21340  00EBE4  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 21341  00EBE6  0EFE               	movlw	254
 21342  00EBE8  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 21343  00EBEA  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 21344  00EBEC  5164               	movf	??___xxtofl& (0+255),w,b
 21345  00EBEE  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 21346  00EBF0  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 21347  00EBF2  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 21348  00EBF4  B4D8               	btfsc	status,2,c
 21349  00EBF6  D00D               	goto	l3374
 21350  00EBF8  D7E7               	goto	l3372
 21351  00EBFA                     
 21352                           ; BSR set to: 0
 21353                           
 21354                           ; BSR set to: 0
 21355  00EBFA  2B69               	incf	___xxtofl@exp& (0+255),f,b
 21356                           
 21357                           ; BSR set to: 0
 21358  00EBFC  0E01               	movlw	1
 21359  00EBFE  276A               	addwf	___xxtofl@arg& (0+255),f,b
 21360  00EC00  0E00               	movlw	0
 21361  00EC02  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 21362  00EC04  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 21363  00EC06  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 21364                           
 21365                           ; BSR set to: 0
 21366  00EC08  90D8               	bcf	status,0,c
 21367  00EC0A  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 21368  00EC0C  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 21369  00EC0E  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 21370  00EC10  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 21371  00EC12                     l3374:
 21372                           
 21373                           ; BSR set to: 0
 21374  00EC12  0E00               	movlw	0
 21375  00EC14  156A               	andwf	___xxtofl@arg& (0+255),w,b
 21376  00EC16  6F64               	movwf	??___xxtofl& (0+255),b
 21377  00EC18  0E00               	movlw	0
 21378  00EC1A  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 21379  00EC1C  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 21380  00EC1E  0E00               	movlw	0
 21381  00EC20  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 21382  00EC22  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 21383  00EC24  0EFF               	movlw	255
 21384  00EC26  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 21385  00EC28  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 21386  00EC2A  5164               	movf	??___xxtofl& (0+255),w,b
 21387  00EC2C  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 21388  00EC2E  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 21389  00EC30  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 21390  00EC32  B4D8               	btfsc	status,2,c
 21391  00EC34  D007               	goto	l3377
 21392  00EC36  D7E1               	goto	l3375
 21393  00EC38                     
 21394                           ; BSR set to: 0
 21395                           
 21396                           ; BSR set to: 0
 21397  00EC38  0769               	decf	___xxtofl@exp& (0+255),f,b
 21398  00EC3A  90D8               	bcf	status,0,c
 21399  00EC3C  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 21400  00EC3E  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 21401  00EC40  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 21402  00EC42  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 21403  00EC44                     l3377:
 21404                           
 21405                           ; BSR set to: 0
 21406                           
 21407                           ; BSR set to: 0
 21408  00EC44  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 21409  00EC46  D003               	goto	u19410
 21410                           
 21411                           ; BSR set to: 0
 21412  00EC48  0E02               	movlw	2
 21413  00EC4A  6169               	cpfslt	___xxtofl@exp& (0+255),b
 21414  00EC4C  D7F5               	goto	l3378
 21415  00EC4E                     u19410:
 21416                           
 21417                           ; BSR set to: 0
 21418                           
 21419                           ; BSR set to: 0
 21420  00EC4E  A169               	btfss	___xxtofl@exp& (0+255),0,b
 21421                           
 21422                           ; BSR set to: 0
 21423  00EC50  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 21424                           
 21425                           ; BSR set to: 0
 21426                           
 21427                           ; BSR set to: 0
 21428  00EC52  90D8               	bcf	status,0,c
 21429  00EC54  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 21430                           
 21431                           ; BSR set to: 0
 21432  00EC56  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 21433  00EC5A  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 21434  00EC5C  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 21435  00EC5E  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 21436  00EC60  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 21437  00EC64  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 21438  00EC66  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 21439  00EC68  6B64               	clrf	??___xxtofl& (0+255),b
 21440  00EC6A  5164               	movf	??___xxtofl& (0+255),w,b
 21441  00EC6C  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 21442  00EC6E  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 21443  00EC70  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 21444  00EC72  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 21445  00EC74  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 21446  00EC76  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 21447  00EC78  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 21448                           
 21449                           ; BSR set to: 0
 21450  00EC7A  5168               	movf	___xxtofl@sign& (0+255),w,b
 21451  00EC7C  A4D8               	btfss	status,2,c
 21452                           
 21453                           ; BSR set to: 0
 21454  00EC7E  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 21455  00EC80  D001               	goto	l3383
 21456                           
 21457                           ; BSR set to: 0
 21458  00EC82  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 21459  00EC84                     l3383:
 21460                           
 21461                           ; BSR set to: 0
 21462                           
 21463                           ; BSR set to: 0
 21464  00EC84  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 21465  00EC88  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 21466  00EC8C  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 21467  00EC90  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 21468  00EC94  0012               	return	
 21469  00EC96                     __end_of___xxtofl:
 21470                           	opt stack 0
 21471                           tblptru	equ	0xFF8
 21472                           tblptrh	equ	0xFF7
 21473                           tblptrl	equ	0xFF6
 21474                           tablat	equ	0xFF5
 21475                           prodh	equ	0xFF4
 21476                           prodl	equ	0xFF3
 21477                           intcon	equ	0xFF2
 21478                           postinc0	equ	0xFEE
 21479                           wreg	equ	0xFE8
 21480                           indf1	equ	0xFE7
 21481                           postdec1	equ	0xFE5
 21482                           plusw1	equ	0xFE3
 21483                           fsr1h	equ	0xFE2
 21484                           fsr1l	equ	0xFE1
 21485                           indf2	equ	0xFDF
 21486                           postinc2	equ	0xFDE
 21487                           postdec2	equ	0xFDD
 21488                           plusw2	equ	0xFDB
 21489                           fsr2h	equ	0xFDA
 21490                           fsr2l	equ	0xFD9
 21491                           status	equ	0xFD8
 21492                           
 21493 ;; *************** function ___fltol *****************
 21494 ;; Defined at:
 21495 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 21496 ;; Parameters:    Size  Location     Type
 21497 ;;  f1              4    0[BANK0 ] unsigned char 
 21498 ;; Auto vars:     Size  Location     Type
 21499 ;;  exp1            1    9[BANK0 ] unsigned char 
 21500 ;;  sign1           1    8[BANK0 ] unsigned char 
 21501 ;; Return value:  Size  Location     Type
 21502 ;;                  4    0[BANK0 ] long 
 21503 ;; Registers used:
 21504 ;;		wreg, status,2, status,0
 21505 ;; Tracked objects:
 21506 ;;		On entry : 0/0
 21507 ;;		On exit  : 0/0
 21508 ;;		Unchanged: 0/0
 21509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21510 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21511 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21512 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21513 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21514 ;;Total ram usage:       10 bytes
 21515 ;; Hardware stack levels used:    1
 21516 ;; Hardware stack levels required when called:   10
 21517 ;; This function calls:
 21518 ;;		Nothing
 21519 ;; This function is called by:
 21520 ;;		_main
 21521 ;;		_motor_steps_from_degrees
 21522 ;;		__motor_get_speed_in_degrees
 21523 ;;		__step_position_from_divide_position
 21524 ;;		_motor_divide_jump_to_nearest
 21525 ;;		_motor_arc_move
 21526 ;;		_adc_read_temperature
 21527 ;;		_motor_go_to_degrees_position
 21528 ;; This function uses a non-reentrant model
 21529 ;;
 21530                           
 21531                           	psect	text73
 21532  010426                     __ptext73:
 21533                           	opt stack 0
 21534  010426                     ___fltol:
 21535                           	opt stack 17
 21536                           
 21537                           ; BSR set to: 0
 21538                           ;incstack = 0
 21539  010426  0100               	movlb	0	; () banked
 21540  010428  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 21541  01042A  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 21542  01042C  6F69               	movwf	___fltol@exp1& (0+255),b
 21543  01042E  5169               	movf	___fltol@exp1& (0+255),w,b
 21544  010430  A4D8               	btfss	status,2,c
 21545  010432  D009               	goto	l3012
 21546                           
 21547                           ; BSR set to: 0
 21548  010434  0E00               	movlw	0
 21549  010436  6F60               	movwf	?___fltol& (0+255),b
 21550  010438  0E00               	movlw	0
 21551  01043A  6F61               	movwf	(?___fltol+1)& (0+255),b
 21552  01043C  0E00               	movlw	0
 21553  01043E  6F62               	movwf	(?___fltol+2)& (0+255),b
 21554  010440  0E00               	movlw	0
 21555  010442  6F63               	movwf	(?___fltol+3)& (0+255),b
 21556                           
 21557                           ; BSR set to: 0
 21558  010444  0012               	return	
 21559  010446                     l3012:
 21560                           
 21561                           ; BSR set to: 0
 21562                           
 21563                           ; BSR set to: 0
 21564  010446  C060  F064         	movff	___fltol@f1,??___fltol
 21565  01044A  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 21566  01044E  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 21567  010452  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 21568  010456  0E20               	movlw	32
 21569  010458  D005               	goto	u19290
 21570  01045A                     u19295:
 21571  01045A  90D8               	bcf	status,0,c
 21572  01045C  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 21573  01045E  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 21574  010460  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 21575  010462  3364               	rrcf	??___fltol& (0+255),f,b
 21576  010464                     u19290:
 21577  010464  2EE8               	decfsz	wreg,f,c
 21578  010466  D7F9               	goto	u19295
 21579  010468  5164               	movf	??___fltol& (0+255),w,b
 21580  01046A  6F68               	movwf	___fltol@sign1& (0+255),b
 21581                           
 21582                           ; BSR set to: 0
 21583  01046C  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 21584                           
 21585                           ; BSR set to: 0
 21586  01046E  0EFF               	movlw	255
 21587  010470  1760               	andwf	___fltol@f1& (0+255),f,b
 21588  010472  0EFF               	movlw	255
 21589  010474  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 21590  010476  0EFF               	movlw	255
 21591  010478  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 21592  01047A  0E00               	movlw	0
 21593  01047C  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 21594                           
 21595                           ; BSR set to: 0
 21596  01047E  0E96               	movlw	150
 21597  010480  5F69               	subwf	___fltol@exp1& (0+255),f,b
 21598                           
 21599                           ; BSR set to: 0
 21600  010482  AF69               	btfss	___fltol@exp1& (0+255),7,b
 21601  010484  D016               	goto	l3014
 21602                           
 21603                           ; BSR set to: 0
 21604  010486  5169               	movf	___fltol@exp1& (0+255),w,b
 21605  010488  0A80               	xorlw	128
 21606  01048A  0F97               	addlw	151
 21607  01048C  B0D8               	btfsc	status,0,c
 21608  01048E  D009               	goto	l3015
 21609                           
 21610                           ; BSR set to: 0
 21611  010490  0E00               	movlw	0
 21612  010492  6F60               	movwf	?___fltol& (0+255),b
 21613  010494  0E00               	movlw	0
 21614  010496  6F61               	movwf	(?___fltol+1)& (0+255),b
 21615  010498  0E00               	movlw	0
 21616  01049A  6F62               	movwf	(?___fltol+2)& (0+255),b
 21617  01049C  0E00               	movlw	0
 21618  01049E  6F63               	movwf	(?___fltol+3)& (0+255),b
 21619                           
 21620                           ; BSR set to: 0
 21621  0104A0  0012               	return	
 21622  0104A2                     l3015:
 21623                           
 21624                           ; BSR set to: 0
 21625                           
 21626                           ; BSR set to: 0
 21627                           
 21628                           ; BSR set to: 0
 21629  0104A2  90D8               	bcf	status,0,c
 21630  0104A4  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 21631  0104A6  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 21632  0104A8  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 21633  0104AA  3360               	rrcf	___fltol@f1& (0+255),f,b
 21634                           
 21635                           ; BSR set to: 0
 21636  0104AC  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 21637  0104AE  D7F9               	goto	l3015
 21638                           
 21639                           ; BSR set to: 0
 21640  0104B0  D015               	goto	u19330
 21641  0104B2                     l3014:
 21642                           
 21643                           ; BSR set to: 0
 21644                           
 21645                           ; BSR set to: 0
 21646  0104B2  0E1F               	movlw	31
 21647  0104B4  6569               	cpfsgt	___fltol@exp1& (0+255),b
 21648  0104B6  D00F               	goto	l3020
 21649                           
 21650                           ; BSR set to: 0
 21651  0104B8  0E00               	movlw	0
 21652  0104BA  6F60               	movwf	?___fltol& (0+255),b
 21653  0104BC  0E00               	movlw	0
 21654  0104BE  6F61               	movwf	(?___fltol+1)& (0+255),b
 21655  0104C0  0E00               	movlw	0
 21656  0104C2  6F62               	movwf	(?___fltol+2)& (0+255),b
 21657  0104C4  0E00               	movlw	0
 21658  0104C6  6F63               	movwf	(?___fltol+3)& (0+255),b
 21659                           
 21660                           ; BSR set to: 0
 21661  0104C8  0012               	return	
 21662  0104CA                     
 21663                           ; BSR set to: 0
 21664                           
 21665                           ; BSR set to: 0
 21666  0104CA  90D8               	bcf	status,0,c
 21667  0104CC  3760               	rlcf	___fltol@f1& (0+255),f,b
 21668  0104CE  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 21669  0104D0  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 21670  0104D2  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 21671  0104D4  0769               	decf	___fltol@exp1& (0+255),f,b
 21672  0104D6                     l3020:
 21673                           
 21674                           ; BSR set to: 0
 21675                           
 21676                           ; BSR set to: 0
 21677  0104D6  5169               	movf	___fltol@exp1& (0+255),w,b
 21678  0104D8  A4D8               	btfss	status,2,c
 21679  0104DA  D7F7               	goto	l3021
 21680  0104DC                     u19330:
 21681                           
 21682                           ; BSR set to: 0
 21683                           
 21684                           ; BSR set to: 0
 21685                           
 21686                           ; BSR set to: 0
 21687  0104DC  5168               	movf	___fltol@sign1& (0+255),w,b
 21688  0104DE  B4D8               	btfsc	status,2,c
 21689  0104E0  D008               	goto	l3023
 21690                           
 21691                           ; BSR set to: 0
 21692  0104E2  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 21693  0104E4  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 21694  0104E6  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 21695  0104E8  6D60               	negf	___fltol@f1& (0+255),b
 21696  0104EA  0E00               	movlw	0
 21697  0104EC  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 21698  0104EE  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 21699  0104F0  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 21700  0104F2                     l3023:
 21701                           
 21702                           ; BSR set to: 0
 21703                           
 21704                           ; BSR set to: 0
 21705  0104F2  C060  F060         	movff	___fltol@f1,?___fltol
 21706  0104F6  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 21707  0104FA  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 21708  0104FE  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 21709  010502  0012               	return	
 21710  010504                     __end_of___fltol:
 21711                           	opt stack 0
 21712                           tblptru	equ	0xFF8
 21713                           tblptrh	equ	0xFF7
 21714                           tblptrl	equ	0xFF6
 21715                           tablat	equ	0xFF5
 21716                           prodh	equ	0xFF4
 21717                           prodl	equ	0xFF3
 21718                           intcon	equ	0xFF2
 21719                           postinc0	equ	0xFEE
 21720                           wreg	equ	0xFE8
 21721                           indf1	equ	0xFE7
 21722                           postdec1	equ	0xFE5
 21723                           plusw1	equ	0xFE3
 21724                           fsr1h	equ	0xFE2
 21725                           fsr1l	equ	0xFE1
 21726                           indf2	equ	0xFDF
 21727                           postinc2	equ	0xFDE
 21728                           postdec2	equ	0xFDD
 21729                           plusw2	equ	0xFDB
 21730                           fsr2h	equ	0xFDA
 21731                           fsr2l	equ	0xFD9
 21732                           status	equ	0xFD8
 21733                           
 21734 ;; *************** function ___flneg *****************
 21735 ;; Defined at:
 21736 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 21737 ;; Parameters:    Size  Location     Type
 21738 ;;  f1              4   14[BANK0 ] long 
 21739 ;; Auto vars:     Size  Location     Type
 21740 ;;		None
 21741 ;; Return value:  Size  Location     Type
 21742 ;;                  4   14[BANK0 ] long 
 21743 ;; Registers used:
 21744 ;;		wreg, status,2, status,0
 21745 ;; Tracked objects:
 21746 ;;		On entry : 0/0
 21747 ;;		On exit  : 0/0
 21748 ;;		Unchanged: 0/0
 21749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21750 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21753 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21754 ;;Total ram usage:        4 bytes
 21755 ;; Hardware stack levels used:    1
 21756 ;; Hardware stack levels required when called:   10
 21757 ;; This function calls:
 21758 ;;		Nothing
 21759 ;; This function is called by:
 21760 ;;		_adc_read_temperature
 21761 ;; This function uses a non-reentrant model
 21762 ;;
 21763                           
 21764                           	psect	text74
 21765  01298C                     __ptext74:
 21766                           	opt stack 0
 21767  01298C                     ___flneg:
 21768                           	opt stack 19
 21769                           
 21770                           ; BSR set to: 0
 21771                           ;incstack = 0
 21772  01298C  0100               	movlb	0	; () banked
 21773  01298E  516E               	movf	___flneg@f1& (0+255),w,b
 21774  012990  116F               	iorwf	(___flneg@f1+1)& (0+255),w,b
 21775  012992  1170               	iorwf	(___flneg@f1+2)& (0+255),w,b
 21776  012994  1171               	iorwf	(___flneg@f1+3)& (0+255),w,b
 21777  012996  B4D8               	btfsc	status,2,c
 21778  012998  D008               	goto	l2989
 21779                           
 21780                           ; BSR set to: 0
 21781  01299A  0E00               	movlw	0
 21782  01299C  1B6E               	xorwf	___flneg@f1& (0+255),f,b
 21783  01299E  0E00               	movlw	0
 21784  0129A0  1B6F               	xorwf	(___flneg@f1+1)& (0+255),f,b
 21785  0129A2  0E00               	movlw	0
 21786  0129A4  1B70               	xorwf	(___flneg@f1+2)& (0+255),f,b
 21787  0129A6  0E80               	movlw	128
 21788  0129A8  1B71               	xorwf	(___flneg@f1+3)& (0+255),f,b
 21789  0129AA                     l2989:
 21790                           
 21791                           ; BSR set to: 0
 21792                           
 21793                           ; BSR set to: 0
 21794  0129AA  C06E  F06E         	movff	___flneg@f1,?___flneg
 21795  0129AE  C06F  F06F         	movff	___flneg@f1+1,?___flneg+1
 21796  0129B2  C070  F070         	movff	___flneg@f1+2,?___flneg+2
 21797  0129B6  C071  F071         	movff	___flneg@f1+3,?___flneg+3
 21798  0129BA  0012               	return	
 21799  0129BC                     __end_of___flneg:
 21800                           	opt stack 0
 21801                           tblptru	equ	0xFF8
 21802                           tblptrh	equ	0xFF7
 21803                           tblptrl	equ	0xFF6
 21804                           tablat	equ	0xFF5
 21805                           prodh	equ	0xFF4
 21806                           prodl	equ	0xFF3
 21807                           intcon	equ	0xFF2
 21808                           postinc0	equ	0xFEE
 21809                           wreg	equ	0xFE8
 21810                           indf1	equ	0xFE7
 21811                           postdec1	equ	0xFE5
 21812                           plusw1	equ	0xFE3
 21813                           fsr1h	equ	0xFE2
 21814                           fsr1l	equ	0xFE1
 21815                           indf2	equ	0xFDF
 21816                           postinc2	equ	0xFDE
 21817                           postdec2	equ	0xFDD
 21818                           plusw2	equ	0xFDB
 21819                           fsr2h	equ	0xFDA
 21820                           fsr2l	equ	0xFD9
 21821                           status	equ	0xFD8
 21822                           
 21823 ;; *************** function ___flmul *****************
 21824 ;; Defined at:
 21825 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 21826 ;; Parameters:    Size  Location     Type
 21827 ;;  b               4   14[BANK0 ] long 
 21828 ;;  a               4   18[BANK0 ] long 
 21829 ;; Auto vars:     Size  Location     Type
 21830 ;;  prod            4   33[BANK0 ] struct .
 21831 ;;  grs             4   28[BANK0 ] unsigned long 
 21832 ;;  temp            2   37[BANK0 ] struct .
 21833 ;;  bexp            1   32[BANK0 ] unsigned char 
 21834 ;;  aexp            1   27[BANK0 ] unsigned char 
 21835 ;;  sign            1   26[BANK0 ] unsigned char 
 21836 ;; Return value:  Size  Location     Type
 21837 ;;                  4   14[BANK0 ] unsigned char 
 21838 ;; Registers used:
 21839 ;;		wreg, status,2, status,0, prodl, prodh
 21840 ;; Tracked objects:
 21841 ;;		On entry : 0/0
 21842 ;;		On exit  : 0/0
 21843 ;;		Unchanged: 0/0
 21844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21845 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21846 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21847 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21848 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21849 ;;Total ram usage:       25 bytes
 21850 ;; Hardware stack levels used:    1
 21851 ;; Hardware stack levels required when called:   10
 21852 ;; This function calls:
 21853 ;;		Nothing
 21854 ;; This function is called by:
 21855 ;;		_main
 21856 ;;		_motor_steps_from_degrees
 21857 ;;		__step_position_from_divide_position
 21858 ;;		_motor_divide_jump_to_nearest
 21859 ;;		_motor_arc_move
 21860 ;;		_adc_read_temperature
 21861 ;;		_motor_go_to_degrees_position
 21862 ;; This function uses a non-reentrant model
 21863 ;;
 21864                           
 21865                           	psect	text75
 21866  00C0E2                     __ptext75:
 21867                           	opt stack 0
 21868  00C0E2                     ___flmul:
 21869                           	opt stack 17
 21870                           
 21871                           ; BSR set to: 0
 21872                           ;incstack = 0
 21873  00C0E2  0100               	movlb	0	; () banked
 21874  00C0E4  5171               	movf	(___flmul@b+3)& (0+255),w,b
 21875  00C0E6  0B80               	andlw	128
 21876  00C0E8  6F7A               	movwf	___flmul@sign& (0+255),b
 21877  00C0EA  5171               	movf	(___flmul@b+3)& (0+255),w,b
 21878  00C0EC  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 21879  00C0EE  6F80               	movwf	___flmul@bexp& (0+255),b
 21880                           
 21881                           ; BSR set to: 0
 21882  00C0F0  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 21883                           
 21884                           ; BSR set to: 0
 21885  00C0F2  8180               	bsf	___flmul@bexp& (0+255),0,b
 21886                           
 21887                           ; BSR set to: 0
 21888                           
 21889                           ; BSR set to: 0
 21890  00C0F4  5180               	movf	___flmul@bexp& (0+255),w,b
 21891  00C0F6  B4D8               	btfsc	status,2,c
 21892  00C0F8  D00D               	goto	l3320
 21893                           
 21894                           ; BSR set to: 0
 21895  00C0FA  2980               	incf	___flmul@bexp& (0+255),w,b
 21896  00C0FC  A4D8               	btfss	status,2,c
 21897  00C0FE  D008               	goto	l3321
 21898                           
 21899                           ; BSR set to: 0
 21900  00C100  0E00               	movlw	0
 21901  00C102  6F6E               	movwf	___flmul@b& (0+255),b
 21902  00C104  0E00               	movlw	0
 21903  00C106  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 21904  00C108  0E00               	movlw	0
 21905  00C10A  6F70               	movwf	(___flmul@b+2)& (0+255),b
 21906  00C10C  0E00               	movlw	0
 21907  00C10E  6F71               	movwf	(___flmul@b+3)& (0+255),b
 21908  00C110                     l3321:
 21909                           
 21910                           ; BSR set to: 0
 21911                           
 21912                           ; BSR set to: 0
 21913  00C110  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 21914  00C112  D008               	goto	l3322
 21915  00C114                     l3320:
 21916                           
 21917                           ; BSR set to: 0
 21918                           
 21919                           ; BSR set to: 0
 21920  00C114  0E00               	movlw	0
 21921  00C116  6F6E               	movwf	___flmul@b& (0+255),b
 21922  00C118  0E00               	movlw	0
 21923  00C11A  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 21924  00C11C  0E00               	movlw	0
 21925  00C11E  6F70               	movwf	(___flmul@b+2)& (0+255),b
 21926  00C120  0E00               	movlw	0
 21927  00C122  6F71               	movwf	(___flmul@b+3)& (0+255),b
 21928  00C124                     l3322:
 21929                           
 21930                           ; BSR set to: 0
 21931                           
 21932                           ; BSR set to: 0
 21933  00C124  5175               	movf	(___flmul@a+3)& (0+255),w,b
 21934  00C126  0B80               	andlw	128
 21935  00C128  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 21936                           
 21937                           ; BSR set to: 0
 21938  00C12A  5175               	movf	(___flmul@a+3)& (0+255),w,b
 21939  00C12C  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 21940  00C12E  6F7B               	movwf	___flmul@aexp& (0+255),b
 21941                           
 21942                           ; BSR set to: 0
 21943  00C130  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 21944                           
 21945                           ; BSR set to: 0
 21946  00C132  817B               	bsf	___flmul@aexp& (0+255),0,b
 21947                           
 21948                           ; BSR set to: 0
 21949                           
 21950                           ; BSR set to: 0
 21951  00C134  517B               	movf	___flmul@aexp& (0+255),w,b
 21952  00C136  B4D8               	btfsc	status,2,c
 21953  00C138  D00D               	goto	l3324
 21954                           
 21955                           ; BSR set to: 0
 21956  00C13A  297B               	incf	___flmul@aexp& (0+255),w,b
 21957  00C13C  A4D8               	btfss	status,2,c
 21958  00C13E  D008               	goto	l3325
 21959                           
 21960                           ; BSR set to: 0
 21961  00C140  0E00               	movlw	0
 21962  00C142  6F72               	movwf	___flmul@a& (0+255),b
 21963  00C144  0E00               	movlw	0
 21964  00C146  6F73               	movwf	(___flmul@a+1)& (0+255),b
 21965  00C148  0E00               	movlw	0
 21966  00C14A  6F74               	movwf	(___flmul@a+2)& (0+255),b
 21967  00C14C  0E00               	movlw	0
 21968  00C14E  6F75               	movwf	(___flmul@a+3)& (0+255),b
 21969  00C150                     l3325:
 21970                           
 21971                           ; BSR set to: 0
 21972                           
 21973                           ; BSR set to: 0
 21974  00C150  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 21975  00C152  D008               	goto	l3326
 21976  00C154                     l3324:
 21977                           
 21978                           ; BSR set to: 0
 21979                           
 21980                           ; BSR set to: 0
 21981  00C154  0E00               	movlw	0
 21982  00C156  6F72               	movwf	___flmul@a& (0+255),b
 21983  00C158  0E00               	movlw	0
 21984  00C15A  6F73               	movwf	(___flmul@a+1)& (0+255),b
 21985  00C15C  0E00               	movlw	0
 21986  00C15E  6F74               	movwf	(___flmul@a+2)& (0+255),b
 21987  00C160  0E00               	movlw	0
 21988  00C162  6F75               	movwf	(___flmul@a+3)& (0+255),b
 21989  00C164                     l3326:
 21990                           
 21991                           ; BSR set to: 0
 21992  00C164  517B               	movf	___flmul@aexp& (0+255),w,b
 21993  00C166  B4D8               	btfsc	status,2,c
 21994  00C168  D003               	goto	u19160
 21995                           
 21996                           ; BSR set to: 0
 21997  00C16A  5180               	movf	___flmul@bexp& (0+255),w,b
 21998  00C16C  A4D8               	btfss	status,2,c
 21999  00C16E  D009               	goto	l3327
 22000  00C170                     u19160:
 22001                           
 22002                           ; BSR set to: 0
 22003                           
 22004                           ; BSR set to: 0
 22005  00C170  0E00               	movlw	0
 22006  00C172  6F6E               	movwf	?___flmul& (0+255),b
 22007  00C174  0E00               	movlw	0
 22008  00C176  6F6F               	movwf	(?___flmul+1)& (0+255),b
 22009  00C178  0E00               	movlw	0
 22010  00C17A  6F70               	movwf	(?___flmul+2)& (0+255),b
 22011  00C17C  0E00               	movlw	0
 22012  00C17E  6F71               	movwf	(?___flmul+3)& (0+255),b
 22013                           
 22014                           ; BSR set to: 0
 22015  00C180  0012               	return	
 22016  00C182                     l3327:
 22017                           
 22018                           ; BSR set to: 0
 22019                           
 22020                           ; BSR set to: 0
 22021  00C182  5174               	movf	(___flmul@a+2)& (0+255),w,b
 22022  00C184  036E               	mulwf	___flmul@b& (0+255),b
 22023  00C186  CFF3 F085          	movff	prodl,___flmul@temp
 22024  00C18A  CFF4 F086          	movff	prodh,___flmul@temp+1
 22025                           
 22026                           ; BSR set to: 0
 22027  00C18E  5185               	movf	___flmul@temp& (0+255),w,b
 22028  00C190  6F7C               	movwf	___flmul@grs& (0+255),b
 22029  00C192  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
 22030  00C194  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
 22031  00C196  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
 22032                           
 22033                           ; BSR set to: 0
 22034  00C198  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 22035  00C19A  6F81               	movwf	___flmul@prod& (0+255),b
 22036  00C19C  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 22037  00C19E  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 22038  00C1A0  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 22039  00C1A2  5173               	movf	(___flmul@a+1)& (0+255),w,b
 22040  00C1A4  036F               	mulwf	(___flmul@b+1)& (0+255),b
 22041  00C1A6  CFF3 F085          	movff	prodl,___flmul@temp
 22042  00C1AA  CFF4 F086          	movff	prodh,___flmul@temp+1
 22043                           
 22044                           ; BSR set to: 0
 22045  00C1AE  5185               	movf	___flmul@temp& (0+255),w,b
 22046  00C1B0  277C               	addwf	___flmul@grs& (0+255),f,b
 22047  00C1B2  0E00               	movlw	0
 22048  00C1B4  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 22049  00C1B6  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 22050  00C1B8  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 22051                           
 22052                           ; BSR set to: 0
 22053  00C1BA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 22054  00C1BC  2781               	addwf	___flmul@prod& (0+255),f,b
 22055  00C1BE  0E00               	movlw	0
 22056  00C1C0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 22057  00C1C2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 22058  00C1C4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 22059  00C1C6  5172               	movf	___flmul@a& (0+255),w,b
 22060  00C1C8  0370               	mulwf	(___flmul@b+2)& (0+255),b
 22061  00C1CA  CFF3 F085          	movff	prodl,___flmul@temp
 22062  00C1CE  CFF4 F086          	movff	prodh,___flmul@temp+1
 22063                           
 22064                           ; BSR set to: 0
 22065  00C1D2  5185               	movf	___flmul@temp& (0+255),w,b
 22066  00C1D4  277C               	addwf	___flmul@grs& (0+255),f,b
 22067  00C1D6  0E00               	movlw	0
 22068  00C1D8  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 22069  00C1DA  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 22070  00C1DC  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 22071                           
 22072                           ; BSR set to: 0
 22073  00C1DE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 22074  00C1E0  2781               	addwf	___flmul@prod& (0+255),f,b
 22075  00C1E2  0E00               	movlw	0
 22076  00C1E4  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 22077  00C1E6  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 22078  00C1E8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 22079                           
 22080                           ; BSR set to: 0
 22081  00C1EA  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 22082  00C1EE  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 22083  00C1F2  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 22084  00C1F6  6B7C               	clrf	___flmul@grs& (0+255),b
 22085                           
 22086                           ; BSR set to: 0
 22087  00C1F8  5172               	movf	___flmul@a& (0+255),w,b
 22088  00C1FA  036F               	mulwf	(___flmul@b+1)& (0+255),b
 22089  00C1FC  CFF3 F085          	movff	prodl,___flmul@temp
 22090  00C200  CFF4 F086          	movff	prodh,___flmul@temp+1
 22091                           
 22092                           ; BSR set to: 0
 22093  00C204  5185               	movf	___flmul@temp& (0+255),w,b
 22094  00C206  277C               	addwf	___flmul@grs& (0+255),f,b
 22095  00C208  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 22096  00C20A  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 22097  00C20C  0E00               	movlw	0
 22098  00C20E  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 22099  00C210  0E00               	movlw	0
 22100  00C212  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 22101                           
 22102                           ; BSR set to: 0
 22103  00C214  5173               	movf	(___flmul@a+1)& (0+255),w,b
 22104  00C216  036E               	mulwf	___flmul@b& (0+255),b
 22105  00C218  CFF3 F085          	movff	prodl,___flmul@temp
 22106  00C21C  CFF4 F086          	movff	prodh,___flmul@temp+1
 22107                           
 22108                           ; BSR set to: 0
 22109  00C220  5185               	movf	___flmul@temp& (0+255),w,b
 22110  00C222  277C               	addwf	___flmul@grs& (0+255),f,b
 22111  00C224  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 22112  00C226  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 22113  00C228  0E00               	movlw	0
 22114  00C22A  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 22115  00C22C  0E00               	movlw	0
 22116  00C22E  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 22117                           
 22118                           ; BSR set to: 0
 22119  00C230  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 22120  00C234  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 22121  00C238  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 22122  00C23C  6B7C               	clrf	___flmul@grs& (0+255),b
 22123  00C23E  5172               	movf	___flmul@a& (0+255),w,b
 22124  00C240  036E               	mulwf	___flmul@b& (0+255),b
 22125  00C242  CFF3 F085          	movff	prodl,___flmul@temp
 22126  00C246  CFF4 F086          	movff	prodh,___flmul@temp+1
 22127                           
 22128                           ; BSR set to: 0
 22129  00C24A  5185               	movf	___flmul@temp& (0+255),w,b
 22130  00C24C  277C               	addwf	___flmul@grs& (0+255),f,b
 22131  00C24E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 22132  00C250  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 22133  00C252  0E00               	movlw	0
 22134  00C254  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 22135  00C256  0E00               	movlw	0
 22136  00C258  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 22137                           
 22138                           ; BSR set to: 0
 22139  00C25A  5174               	movf	(___flmul@a+2)& (0+255),w,b
 22140  00C25C  036F               	mulwf	(___flmul@b+1)& (0+255),b
 22141  00C25E  CFF3 F085          	movff	prodl,___flmul@temp
 22142  00C262  CFF4 F086          	movff	prodh,___flmul@temp+1
 22143  00C266  5185               	movf	___flmul@temp& (0+255),w,b
 22144  00C268  2781               	addwf	___flmul@prod& (0+255),f,b
 22145  00C26A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 22146  00C26C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 22147  00C26E  0E00               	movlw	0
 22148  00C270  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 22149  00C272  0E00               	movlw	0
 22150  00C274  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 22151                           
 22152                           ; BSR set to: 0
 22153  00C276  5173               	movf	(___flmul@a+1)& (0+255),w,b
 22154  00C278  0370               	mulwf	(___flmul@b+2)& (0+255),b
 22155  00C27A  CFF3 F085          	movff	prodl,___flmul@temp
 22156  00C27E  CFF4 F086          	movff	prodh,___flmul@temp+1
 22157                           
 22158                           ; BSR set to: 0
 22159  00C282  5185               	movf	___flmul@temp& (0+255),w,b
 22160  00C284  2781               	addwf	___flmul@prod& (0+255),f,b
 22161  00C286  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 22162  00C288  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 22163  00C28A  0E00               	movlw	0
 22164  00C28C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 22165  00C28E  0E00               	movlw	0
 22166  00C290  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 22167  00C292  5174               	movf	(___flmul@a+2)& (0+255),w,b
 22168  00C294  0370               	mulwf	(___flmul@b+2)& (0+255),b
 22169  00C296  CFF3 F085          	movff	prodl,___flmul@temp
 22170  00C29A  CFF4 F086          	movff	prodh,___flmul@temp+1
 22171                           
 22172                           ; BSR set to: 0
 22173  00C29E  5185               	movf	___flmul@temp& (0+255),w,b
 22174  00C2A0  6F76               	movwf	??___flmul& (0+255),b
 22175  00C2A2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 22176  00C2A4  6F77               	movwf	(??___flmul+1)& (0+255),b
 22177  00C2A6  6B78               	clrf	(??___flmul+2)& (0+255),b
 22178  00C2A8  6B79               	clrf	(??___flmul+3)& (0+255),b
 22179  00C2AA  C078  F079         	movff	??___flmul+2,??___flmul+3
 22180  00C2AE  C077  F078         	movff	??___flmul+1,??___flmul+2
 22181  00C2B2  C076  F077         	movff	??___flmul,??___flmul+1
 22182  00C2B6  6B76               	clrf	??___flmul& (0+255),b
 22183  00C2B8  5176               	movf	??___flmul& (0+255),w,b
 22184  00C2BA  2781               	addwf	___flmul@prod& (0+255),f,b
 22185  00C2BC  5177               	movf	(??___flmul+1)& (0+255),w,b
 22186  00C2BE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 22187  00C2C0  5178               	movf	(??___flmul+2)& (0+255),w,b
 22188  00C2C2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 22189  00C2C4  5179               	movf	(??___flmul+3)& (0+255),w,b
 22190  00C2C6  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 22191                           
 22192                           ; BSR set to: 0
 22193  00C2C8  C07C  F076         	movff	___flmul@grs,??___flmul
 22194  00C2CC  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
 22195  00C2D0  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
 22196  00C2D4  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
 22197  00C2D8  0E19               	movlw	25
 22198  00C2DA  D005               	goto	u19170
 22199  00C2DC                     u19175:
 22200  00C2DC  90D8               	bcf	status,0,c
 22201  00C2DE  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 22202  00C2E0  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 22203  00C2E2  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 22204  00C2E4  3376               	rrcf	??___flmul& (0+255),f,b
 22205  00C2E6                     u19170:
 22206  00C2E6  2EE8               	decfsz	wreg,f,c
 22207  00C2E8  D7F9               	goto	u19175
 22208  00C2EA  5176               	movf	??___flmul& (0+255),w,b
 22209  00C2EC  2781               	addwf	___flmul@prod& (0+255),f,b
 22210  00C2EE  5177               	movf	(??___flmul+1)& (0+255),w,b
 22211  00C2F0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 22212  00C2F2  5178               	movf	(??___flmul+2)& (0+255),w,b
 22213  00C2F4  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 22214  00C2F6  5179               	movf	(??___flmul+3)& (0+255),w,b
 22215  00C2F8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 22216                           
 22217                           ; BSR set to: 0
 22218  00C2FA  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 22219  00C2FE  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 22220  00C302  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 22221  00C306  6B7C               	clrf	___flmul@grs& (0+255),b
 22222                           
 22223                           ; BSR set to: 0
 22224  00C308  517B               	movf	___flmul@aexp& (0+255),w,b
 22225  00C30A  C080  F076         	movff	___flmul@bexp,??___flmul
 22226  00C30E  6B77               	clrf	(??___flmul+1)& (0+255),b
 22227  00C310  2776               	addwf	??___flmul& (0+255),f,b
 22228  00C312  0E00               	movlw	0
 22229  00C314  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 22230  00C316  0E82               	movlw	130
 22231  00C318  2576               	addwf	??___flmul& (0+255),w,b
 22232  00C31A  6F85               	movwf	___flmul@temp& (0+255),b
 22233  00C31C  0EFF               	movlw	255
 22234  00C31E  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 22235  00C320  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 22236  00C322  D00F               	goto	l3331
 22237  00C324                     
 22238                           ; BSR set to: 0
 22239                           
 22240                           ; BSR set to: 0
 22241  00C324  90D8               	bcf	status,0,c
 22242  00C326  3781               	rlcf	___flmul@prod& (0+255),f,b
 22243  00C328  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 22244  00C32A  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 22245  00C32C  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 22246                           
 22247                           ; BSR set to: 0
 22248  00C32E  BF7F               	btfsc	(___flmul@grs+3)& (0+255),7,b
 22249                           
 22250                           ; BSR set to: 0
 22251  00C330  8181               	bsf	___flmul@prod& (0+255),0,b
 22252                           
 22253                           ; BSR set to: 0
 22254  00C332  90D8               	bcf	status,0,c
 22255  00C334  377C               	rlcf	___flmul@grs& (0+255),f,b
 22256  00C336  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 22257  00C338  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 22258  00C33A  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 22259  00C33C  0785               	decf	___flmul@temp& (0+255),f,b
 22260  00C33E  A0D8               	btfss	status,0,c
 22261  00C340  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 22262  00C342                     l3331:
 22263                           
 22264                           ; BSR set to: 0
 22265                           
 22266                           ; BSR set to: 0
 22267  00C342  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 22268  00C344  D7EF               	goto	l3332
 22269                           
 22270                           ; BSR set to: 0
 22271                           
 22272                           ; BSR set to: 0
 22273  00C346  0E00               	movlw	0
 22274  00C348  6F7B               	movwf	___flmul@aexp& (0+255),b
 22275                           
 22276                           ; BSR set to: 0
 22277  00C34A  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 22278  00C34C  D016               	goto	l3338
 22279                           
 22280                           ; BSR set to: 0
 22281  00C34E  0EFF               	movlw	255
 22282  00C350  157C               	andwf	___flmul@grs& (0+255),w,b
 22283  00C352  6F76               	movwf	??___flmul& (0+255),b
 22284  00C354  0EFF               	movlw	255
 22285  00C356  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
 22286  00C358  6F77               	movwf	(??___flmul+1)& (0+255),b
 22287  00C35A  0EFF               	movlw	255
 22288  00C35C  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
 22289  00C35E  6F78               	movwf	(??___flmul+2)& (0+255),b
 22290  00C360  0E7F               	movlw	127
 22291  00C362  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
 22292  00C364  6F79               	movwf	(??___flmul+3)& (0+255),b
 22293  00C366  5176               	movf	??___flmul& (0+255),w,b
 22294  00C368  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 22295  00C36A  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 22296  00C36C  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 22297  00C36E  A4D8               	btfss	status,2,c
 22298  00C370  D002               	goto	u19220
 22299                           
 22300                           ; BSR set to: 0
 22301                           
 22302                           ; BSR set to: 0
 22303  00C372  A181               	btfss	___flmul@prod& (0+255),0,b
 22304  00C374  D002               	goto	l3338
 22305  00C376                     u19220:
 22306                           
 22307                           ; BSR set to: 0
 22308  00C376  0E01               	movlw	1
 22309  00C378  6F7B               	movwf	___flmul@aexp& (0+255),b
 22310  00C37A                     l3338:
 22311                           
 22312                           ; BSR set to: 0
 22313                           
 22314                           ; BSR set to: 0
 22315                           
 22316                           ; BSR set to: 0
 22317  00C37A  517B               	movf	___flmul@aexp& (0+255),w,b
 22318  00C37C  B4D8               	btfsc	status,2,c
 22319  00C37E  D01F               	goto	l3340
 22320                           
 22321                           ; BSR set to: 0
 22322  00C380  0E01               	movlw	1
 22323  00C382  2781               	addwf	___flmul@prod& (0+255),f,b
 22324  00C384  0E00               	movlw	0
 22325  00C386  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 22326  00C388  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 22327  00C38A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 22328                           
 22329                           ; BSR set to: 0
 22330  00C38C  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 22331  00C38E  D017               	goto	l3340
 22332                           
 22333                           ; BSR set to: 0
 22334  00C390  C081  F076         	movff	___flmul@prod,??___flmul
 22335  00C394  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 22336  00C398  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 22337  00C39C  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 22338  00C3A0  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 22339  00C3A2  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 22340  00C3A4  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 22341  00C3A6  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 22342  00C3A8  3376               	rrcf	??___flmul& (0+255),f,b
 22343  00C3AA  C076  F081         	movff	??___flmul,___flmul@prod
 22344  00C3AE  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 22345  00C3B2  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 22346  00C3B6  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 22347                           
 22348                           ; BSR set to: 0
 22349  00C3BA  4B85               	infsnz	___flmul@temp& (0+255),f,b
 22350  00C3BC  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 22351  00C3BE                     l3340:
 22352                           
 22353                           ; BSR set to: 0
 22354                           
 22355                           ; BSR set to: 0
 22356                           
 22357                           ; BSR set to: 0
 22358  00C3BE  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 22359  00C3C0  D00D               	goto	l3341
 22360  00C3C2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 22361  00C3C4  E103               	bnz	u19250
 22362  00C3C6  2985               	incf	___flmul@temp& (0+255),w,b
 22363  00C3C8  A0D8               	btfss	status,0,c
 22364  00C3CA  D008               	goto	l3341
 22365  00C3CC                     u19250:
 22366                           
 22367                           ; BSR set to: 0
 22368  00C3CC  0E00               	movlw	0
 22369  00C3CE  6F81               	movwf	___flmul@prod& (0+255),b
 22370  00C3D0  0E00               	movlw	0
 22371  00C3D2  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 22372  00C3D4  0E80               	movlw	128
 22373  00C3D6  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 22374  00C3D8  0E7F               	movlw	127
 22375  00C3DA  D020               	goto	L37
 22376  00C3DC                     l3341:
 22377                           
 22378                           ; BSR set to: 0
 22379                           
 22380                           ; BSR set to: 0
 22381  00C3DC  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 22382  00C3DE  D005               	goto	u19260
 22383  00C3E0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 22384  00C3E2  E10E               	bnz	l3343
 22385  00C3E4  0585               	decf	___flmul@temp& (0+255),w,b
 22386  00C3E6  B0D8               	btfsc	status,0,c
 22387  00C3E8  D00B               	goto	l3343
 22388  00C3EA                     u19260:
 22389                           
 22390                           ; BSR set to: 0
 22391  00C3EA  0E00               	movlw	0
 22392  00C3EC  6F81               	movwf	___flmul@prod& (0+255),b
 22393  00C3EE  0E00               	movlw	0
 22394  00C3F0  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 22395  00C3F2  0E00               	movlw	0
 22396  00C3F4  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 22397  00C3F6  0E00               	movlw	0
 22398  00C3F8  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 22399  00C3FA  0E00               	movlw	0
 22400  00C3FC  6F7A               	movwf	___flmul@sign& (0+255),b
 22401  00C3FE  D00F               	goto	l3344
 22402  00C400                     l3343:
 22403                           
 22404                           ; BSR set to: 0
 22405  00C400  C085  F080         	movff	___flmul@temp,___flmul@bexp
 22406                           
 22407                           ; BSR set to: 0
 22408  00C404  0EFF               	movlw	255
 22409  00C406  1781               	andwf	___flmul@prod& (0+255),f,b
 22410  00C408  0EFF               	movlw	255
 22411  00C40A  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 22412  00C40C  0E7F               	movlw	127
 22413  00C40E  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 22414  00C410  0E00               	movlw	0
 22415  00C412  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 22416                           
 22417                           ; BSR set to: 0
 22418  00C414  B180               	btfsc	___flmul@bexp& (0+255),0,b
 22419                           
 22420                           ; BSR set to: 0
 22421  00C416  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 22422                           
 22423                           ; BSR set to: 0
 22424                           
 22425                           ; BSR set to: 0
 22426  00C418  90D8               	bcf	status,0,c
 22427  00C41A  3180               	rrcf	___flmul@bexp& (0+255),w,b
 22428  00C41C                     L37:
 22429  00C41C  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 22430  00C41E                     l3344:
 22431                           
 22432                           ; BSR set to: 0
 22433                           
 22434                           ; BSR set to: 0
 22435                           
 22436                           ; BSR set to: 0
 22437  00C41E  517A               	movf	___flmul@sign& (0+255),w,b
 22438  00C420  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 22439                           
 22440                           ; BSR set to: 0
 22441  00C422  C081  F06E         	movff	___flmul@prod,?___flmul
 22442  00C426  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 22443  00C42A  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 22444  00C42E  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 22445  00C432  0012               	return	
 22446  00C434                     __end_of___flmul:
 22447                           	opt stack 0
 22448                           tblptru	equ	0xFF8
 22449                           tblptrh	equ	0xFF7
 22450                           tblptrl	equ	0xFF6
 22451                           tablat	equ	0xFF5
 22452                           prodh	equ	0xFF4
 22453                           prodl	equ	0xFF3
 22454                           intcon	equ	0xFF2
 22455                           postinc0	equ	0xFEE
 22456                           wreg	equ	0xFE8
 22457                           indf1	equ	0xFE7
 22458                           postdec1	equ	0xFE5
 22459                           plusw1	equ	0xFE3
 22460                           fsr1h	equ	0xFE2
 22461                           fsr1l	equ	0xFE1
 22462                           indf2	equ	0xFDF
 22463                           postinc2	equ	0xFDE
 22464                           postdec2	equ	0xFDD
 22465                           plusw2	equ	0xFDB
 22466                           fsr2h	equ	0xFDA
 22467                           fsr2l	equ	0xFD9
 22468                           status	equ	0xFD8
 22469                           
 22470 ;; *************** function ___fladd *****************
 22471 ;; Defined at:
 22472 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 22473 ;; Parameters:    Size  Location     Type
 22474 ;;  b               4   18[BANK0 ] unsigned char 
 22475 ;;  a               4   22[BANK0 ] unsigned char 
 22476 ;; Auto vars:     Size  Location     Type
 22477 ;;  grs             1   37[BANK0 ] unsigned char 
 22478 ;;  bexp            1   36[BANK0 ] unsigned char 
 22479 ;;  aexp            1   35[BANK0 ] unsigned char 
 22480 ;;  signs           1   34[BANK0 ] unsigned char 
 22481 ;; Return value:  Size  Location     Type
 22482 ;;                  4   18[BANK0 ] unsigned char 
 22483 ;; Registers used:
 22484 ;;		wreg, status,2, status,0
 22485 ;; Tracked objects:
 22486 ;;		On entry : 0/0
 22487 ;;		On exit  : 0/0
 22488 ;;		Unchanged: 0/0
 22489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22490 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22491 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22492 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22493 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22494 ;;Total ram usage:       20 bytes
 22495 ;; Hardware stack levels used:    1
 22496 ;; Hardware stack levels required when called:   10
 22497 ;; This function calls:
 22498 ;;		Nothing
 22499 ;; This function is called by:
 22500 ;;		_motor_divide_jump_to_nearest
 22501 ;;		_adc_read_temperature
 22502 ;; This function uses a non-reentrant model
 22503 ;;
 22504                           
 22505                           	psect	text76
 22506  00C434                     __ptext76:
 22507                           	opt stack 0
 22508  00C434                     ___fladd:
 22509                           	opt stack 18
 22510                           
 22511                           ; BSR set to: 0
 22512                           ;incstack = 0
 22513  00C434  0100               	movlb	0	; () banked
 22514  00C436  5175               	movf	(___fladd@b+3)& (0+255),w,b
 22515  00C438  0B80               	andlw	128
 22516  00C43A  6F82               	movwf	___fladd@signs& (0+255),b
 22517  00C43C  5175               	movf	(___fladd@b+3)& (0+255),w,b
 22518  00C43E  2575               	addwf	(___fladd@b+3)& (0+255),w,b
 22519  00C440  6F84               	movwf	___fladd@bexp& (0+255),b
 22520                           
 22521                           ; BSR set to: 0
 22522  00C442  BF74               	btfsc	(___fladd@b+2)& (0+255),7,b
 22523                           
 22524                           ; BSR set to: 0
 22525  00C444  8184               	bsf	___fladd@bexp& (0+255),0,b
 22526                           
 22527                           ; BSR set to: 0
 22528                           
 22529                           ; BSR set to: 0
 22530  00C446  5184               	movf	___fladd@bexp& (0+255),w,b
 22531  00C448  B4D8               	btfsc	status,2,c
 22532  00C44A  D00D               	goto	l3229
 22533                           
 22534                           ; BSR set to: 0
 22535  00C44C  2984               	incf	___fladd@bexp& (0+255),w,b
 22536  00C44E  A4D8               	btfss	status,2,c
 22537  00C450  D008               	goto	l3230
 22538                           
 22539                           ; BSR set to: 0
 22540  00C452  0E00               	movlw	0
 22541  00C454  6F72               	movwf	___fladd@b& (0+255),b
 22542  00C456  0E00               	movlw	0
 22543  00C458  6F73               	movwf	(___fladd@b+1)& (0+255),b
 22544  00C45A  0E00               	movlw	0
 22545  00C45C  6F74               	movwf	(___fladd@b+2)& (0+255),b
 22546  00C45E  0E00               	movlw	0
 22547  00C460  6F75               	movwf	(___fladd@b+3)& (0+255),b
 22548  00C462                     l3230:
 22549                           
 22550                           ; BSR set to: 0
 22551                           
 22552                           ; BSR set to: 0
 22553  00C462  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 22554  00C464  D006               	goto	L38
 22555  00C466                     l3229:
 22556                           
 22557                           ; BSR set to: 0
 22558                           
 22559                           ; BSR set to: 0
 22560  00C466  0E00               	movlw	0
 22561  00C468  6F72               	movwf	___fladd@b& (0+255),b
 22562  00C46A  0E00               	movlw	0
 22563  00C46C  6F73               	movwf	(___fladd@b+1)& (0+255),b
 22564  00C46E  0E00               	movlw	0
 22565  00C470  6F74               	movwf	(___fladd@b+2)& (0+255),b
 22566  00C472                     L38:
 22567  00C472  0E00               	movlw	0
 22568  00C474  6F75               	movwf	(___fladd@b+3)& (0+255),b
 22569                           
 22570                           ; BSR set to: 0
 22571                           
 22572                           ; BSR set to: 0
 22573  00C476  5179               	movf	(___fladd@a+3)& (0+255),w,b
 22574  00C478  0B80               	andlw	128
 22575  00C47A  6F83               	movwf	___fladd@aexp& (0+255),b
 22576                           
 22577                           ; BSR set to: 0
 22578  00C47C  5182               	movf	___fladd@signs& (0+255),w,b
 22579  00C47E  1983               	xorwf	___fladd@aexp& (0+255),w,b
 22580  00C480  A4D8               	btfss	status,2,c
 22581                           
 22582                           ; BSR set to: 0
 22583  00C482  8D82               	bsf	___fladd@signs& (0+255),6,b
 22584                           
 22585                           ; BSR set to: 0
 22586                           
 22587                           ; BSR set to: 0
 22588  00C484  5179               	movf	(___fladd@a+3)& (0+255),w,b
 22589  00C486  2579               	addwf	(___fladd@a+3)& (0+255),w,b
 22590  00C488  6F83               	movwf	___fladd@aexp& (0+255),b
 22591                           
 22592                           ; BSR set to: 0
 22593  00C48A  BF78               	btfsc	(___fladd@a+2)& (0+255),7,b
 22594                           
 22595                           ; BSR set to: 0
 22596  00C48C  8183               	bsf	___fladd@aexp& (0+255),0,b
 22597                           
 22598                           ; BSR set to: 0
 22599                           
 22600                           ; BSR set to: 0
 22601  00C48E  5183               	movf	___fladd@aexp& (0+255),w,b
 22602  00C490  B4D8               	btfsc	status,2,c
 22603  00C492  D00D               	goto	l3234
 22604                           
 22605                           ; BSR set to: 0
 22606  00C494  2983               	incf	___fladd@aexp& (0+255),w,b
 22607  00C496  A4D8               	btfss	status,2,c
 22608  00C498  D008               	goto	l3235
 22609                           
 22610                           ; BSR set to: 0
 22611  00C49A  0E00               	movlw	0
 22612  00C49C  6F76               	movwf	___fladd@a& (0+255),b
 22613  00C49E  0E00               	movlw	0
 22614  00C4A0  6F77               	movwf	(___fladd@a+1)& (0+255),b
 22615  00C4A2  0E00               	movlw	0
 22616  00C4A4  6F78               	movwf	(___fladd@a+2)& (0+255),b
 22617  00C4A6  0E00               	movlw	0
 22618  00C4A8  6F79               	movwf	(___fladd@a+3)& (0+255),b
 22619  00C4AA                     l3235:
 22620                           
 22621                           ; BSR set to: 0
 22622                           
 22623                           ; BSR set to: 0
 22624  00C4AA  8F78               	bsf	(___fladd@a+2)& (0+255),7,b
 22625  00C4AC  D006               	goto	L39
 22626  00C4AE                     l3234:
 22627                           
 22628                           ; BSR set to: 0
 22629                           
 22630                           ; BSR set to: 0
 22631  00C4AE  0E00               	movlw	0
 22632  00C4B0  6F76               	movwf	___fladd@a& (0+255),b
 22633  00C4B2  0E00               	movlw	0
 22634  00C4B4  6F77               	movwf	(___fladd@a+1)& (0+255),b
 22635  00C4B6  0E00               	movlw	0
 22636  00C4B8  6F78               	movwf	(___fladd@a+2)& (0+255),b
 22637  00C4BA                     L39:
 22638  00C4BA  0E00               	movlw	0
 22639  00C4BC  6F79               	movwf	(___fladd@a+3)& (0+255),b
 22640                           
 22641                           ; BSR set to: 0
 22642                           
 22643                           ; BSR set to: 0
 22644  00C4BE  5184               	movf	___fladd@bexp& (0+255),w,b
 22645  00C4C0  5D83               	subwf	___fladd@aexp& (0+255),w,b
 22646  00C4C2  B0D8               	btfsc	status,0,c
 22647  00C4C4  D022               	goto	l3237
 22648                           
 22649                           ; BSR set to: 0
 22650  00C4C6  AD82               	btfss	___fladd@signs& (0+255),6,b
 22651  00C4C8  D002               	goto	l3238
 22652                           
 22653                           ; BSR set to: 0
 22654  00C4CA  0E80               	movlw	128
 22655  00C4CC  1B82               	xorwf	___fladd@signs& (0+255),f,b
 22656  00C4CE                     l3238:
 22657                           
 22658                           ; BSR set to: 0
 22659                           
 22660                           ; BSR set to: 0
 22661  00C4CE  C084  F085         	movff	___fladd@bexp,___fladd@grs
 22662                           
 22663                           ; BSR set to: 0
 22664  00C4D2  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 22665                           
 22666                           ; BSR set to: 0
 22667  00C4D6  C085  F083         	movff	___fladd@grs,___fladd@aexp
 22668                           
 22669                           ; BSR set to: 0
 22670  00C4DA  C072  F085         	movff	___fladd@b,___fladd@grs
 22671                           
 22672                           ; BSR set to: 0
 22673  00C4DE  C076  F072         	movff	___fladd@a,___fladd@b
 22674                           
 22675                           ; BSR set to: 0
 22676  00C4E2  C085  F076         	movff	___fladd@grs,___fladd@a
 22677                           
 22678                           ; BSR set to: 0
 22679  00C4E6  C073  F085         	movff	___fladd@b+1,___fladd@grs
 22680                           
 22681                           ; BSR set to: 0
 22682  00C4EA  C077  F073         	movff	___fladd@a+1,___fladd@b+1
 22683                           
 22684                           ; BSR set to: 0
 22685  00C4EE  C085  F077         	movff	___fladd@grs,___fladd@a+1
 22686                           
 22687                           ; BSR set to: 0
 22688  00C4F2  C074  F085         	movff	___fladd@b+2,___fladd@grs
 22689                           
 22690                           ; BSR set to: 0
 22691  00C4F6  C078  F074         	movff	___fladd@a+2,___fladd@b+2
 22692                           
 22693                           ; BSR set to: 0
 22694  00C4FA  C085  F078         	movff	___fladd@grs,___fladd@a+2
 22695                           
 22696                           ; BSR set to: 0
 22697  00C4FE  C075  F085         	movff	___fladd@b+3,___fladd@grs
 22698                           
 22699                           ; BSR set to: 0
 22700  00C502  C079  F075         	movff	___fladd@a+3,___fladd@b+3
 22701                           
 22702                           ; BSR set to: 0
 22703  00C506  C085  F079         	movff	___fladd@grs,___fladd@a+3
 22704  00C50A                     l3237:
 22705                           
 22706                           ; BSR set to: 0
 22707                           
 22708                           ; BSR set to: 0
 22709  00C50A  0E00               	movlw	0
 22710  00C50C  6F85               	movwf	___fladd@grs& (0+255),b
 22711                           
 22712                           ; BSR set to: 0
 22713  00C50E  5184               	movf	___fladd@bexp& (0+255),w,b
 22714  00C510  6F7A               	movwf	??___fladd& (0+255),b
 22715  00C512  6B7B               	clrf	(??___fladd+1)& (0+255),b
 22716  00C514  1F7A               	comf	??___fladd& (0+255),f,b
 22717  00C516  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 22718  00C518  4B7A               	infsnz	??___fladd& (0+255),f,b
 22719  00C51A  2B7B               	incf	(??___fladd+1)& (0+255),f,b
 22720  00C51C  5183               	movf	___fladd@aexp& (0+255),w,b
 22721  00C51E  6F7C               	movwf	(??___fladd+2)& (0+255),b
 22722  00C520  6B7D               	clrf	(??___fladd+3)& (0+255),b
 22723  00C522  517A               	movf	??___fladd& (0+255),w,b
 22724  00C524  277C               	addwf	(??___fladd+2)& (0+255),f,b
 22725  00C526  517B               	movf	(??___fladd+1)& (0+255),w,b
 22726  00C528  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 22727  00C52A  BF7D               	btfsc	(??___fladd+3)& (0+255),7,b
 22728  00C52C  D02C               	goto	l3241
 22729  00C52E  517D               	movf	(??___fladd+3)& (0+255),w,b
 22730  00C530  E104               	bnz	u20260
 22731  00C532  0E1A               	movlw	26
 22732  00C534  5D7C               	subwf	(??___fladd+2)& (0+255),w,b
 22733  00C536  A0D8               	btfss	status,0,c
 22734  00C538  D026               	goto	l3241
 22735  00C53A                     u20260:
 22736                           
 22737                           ; BSR set to: 0
 22738  00C53A  5172               	movf	___fladd@b& (0+255),w,b
 22739  00C53C  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 22740  00C53E  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 22741  00C540  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 22742  00C542  B4D8               	btfsc	status,2,c
 22743  00C544  D002               	goto	u20270
 22744  00C546  0E01               	movlw	1
 22745  00C548  D001               	goto	u20280
 22746  00C54A                     u20270:
 22747  00C54A  0E00               	movlw	0
 22748  00C54C                     u20280:
 22749  00C54C  6F85               	movwf	___fladd@grs& (0+255),b
 22750                           
 22751                           ; BSR set to: 0
 22752  00C54E  0E00               	movlw	0
 22753  00C550  6F72               	movwf	___fladd@b& (0+255),b
 22754  00C552  0E00               	movlw	0
 22755  00C554  6F73               	movwf	(___fladd@b+1)& (0+255),b
 22756  00C556  0E00               	movlw	0
 22757  00C558  6F74               	movwf	(___fladd@b+2)& (0+255),b
 22758  00C55A  0E00               	movlw	0
 22759  00C55C  6F75               	movwf	(___fladd@b+3)& (0+255),b
 22760                           
 22761                           ; BSR set to: 0
 22762  00C55E  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 22763  00C562  D015               	goto	u20310
 22764  00C564                     l3242:
 22765                           
 22766                           ; BSR set to: 0
 22767  00C564  A185               	btfss	___fladd@grs& (0+255),0,b
 22768  00C566  D005               	goto	l3243
 22769                           
 22770                           ; BSR set to: 0
 22771  00C568  90D8               	bcf	status,0,c
 22772  00C56A  3185               	rrcf	___fladd@grs& (0+255),w,b
 22773  00C56C  0901               	iorlw	1
 22774  00C56E  6F85               	movwf	___fladd@grs& (0+255),b
 22775  00C570  D002               	goto	l3244
 22776  00C572                     l3243:
 22777                           
 22778                           ; BSR set to: 0
 22779                           
 22780                           ; BSR set to: 0
 22781  00C572  90D8               	bcf	status,0,c
 22782  00C574  3385               	rrcf	___fladd@grs& (0+255),f,b
 22783  00C576                     l3244:
 22784                           
 22785                           ; BSR set to: 0
 22786                           
 22787                           ; BSR set to: 0
 22788  00C576  B172               	btfsc	___fladd@b& (0+255),0,b
 22789                           
 22790                           ; BSR set to: 0
 22791  00C578  8F85               	bsf	___fladd@grs& (0+255),7,b
 22792                           
 22793                           ; BSR set to: 0
 22794                           
 22795                           ; BSR set to: 0
 22796  00C57A  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 22797  00C57C  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 22798  00C57E  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 22799  00C580  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 22800  00C582  3372               	rrcf	___fladd@b& (0+255),f,b
 22801                           
 22802                           ; BSR set to: 0
 22803  00C584  2B84               	incf	___fladd@bexp& (0+255),f,b
 22804  00C586                     l3241:
 22805                           
 22806                           ; BSR set to: 0
 22807  00C586  5183               	movf	___fladd@aexp& (0+255),w,b
 22808  00C588  5D84               	subwf	___fladd@bexp& (0+255),w,b
 22809  00C58A  A0D8               	btfss	status,0,c
 22810  00C58C  D7EB               	goto	l3242
 22811  00C58E                     u20310:
 22812                           
 22813                           ; BSR set to: 0
 22814                           
 22815                           ; BSR set to: 0
 22816  00C58E  BD82               	btfsc	___fladd@signs& (0+255),6,b
 22817  00C590  D028               	goto	l3247
 22818                           
 22819                           ; BSR set to: 0
 22820  00C592  5184               	movf	___fladd@bexp& (0+255),w,b
 22821  00C594  A4D8               	btfss	status,2,c
 22822  00C596  D009               	goto	l3248
 22823                           
 22824                           ; BSR set to: 0
 22825  00C598  0E00               	movlw	0
 22826  00C59A  6F72               	movwf	?___fladd& (0+255),b
 22827  00C59C  0E00               	movlw	0
 22828  00C59E  6F73               	movwf	(?___fladd+1)& (0+255),b
 22829  00C5A0  0E00               	movlw	0
 22830  00C5A2  6F74               	movwf	(?___fladd+2)& (0+255),b
 22831  00C5A4  0E00               	movlw	0
 22832  00C5A6  6F75               	movwf	(?___fladd+3)& (0+255),b
 22833                           
 22834                           ; BSR set to: 0
 22835  00C5A8  0012               	return	
 22836  00C5AA                     l3248:
 22837                           
 22838                           ; BSR set to: 0
 22839                           
 22840                           ; BSR set to: 0
 22841  00C5AA  5176               	movf	___fladd@a& (0+255),w,b
 22842  00C5AC  2772               	addwf	___fladd@b& (0+255),f,b
 22843  00C5AE  5177               	movf	(___fladd@a+1)& (0+255),w,b
 22844  00C5B0  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 22845  00C5B2  5178               	movf	(___fladd@a+2)& (0+255),w,b
 22846  00C5B4  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 22847  00C5B6  5179               	movf	(___fladd@a+3)& (0+255),w,b
 22848  00C5B8  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 22849                           
 22850                           ; BSR set to: 0
 22851  00C5BA  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 22852  00C5BC  D082               	goto	u20440
 22853                           
 22854                           ; BSR set to: 0
 22855  00C5BE  A185               	btfss	___fladd@grs& (0+255),0,b
 22856  00C5C0  D005               	goto	l3251
 22857                           
 22858                           ; BSR set to: 0
 22859  00C5C2  90D8               	bcf	status,0,c
 22860  00C5C4  3185               	rrcf	___fladd@grs& (0+255),w,b
 22861  00C5C6  0901               	iorlw	1
 22862  00C5C8  6F85               	movwf	___fladd@grs& (0+255),b
 22863  00C5CA  D002               	goto	l3252
 22864  00C5CC                     l3251:
 22865                           
 22866                           ; BSR set to: 0
 22867                           
 22868                           ; BSR set to: 0
 22869  00C5CC  90D8               	bcf	status,0,c
 22870  00C5CE  3385               	rrcf	___fladd@grs& (0+255),f,b
 22871  00C5D0                     l3252:
 22872                           
 22873                           ; BSR set to: 0
 22874                           
 22875                           ; BSR set to: 0
 22876  00C5D0  B172               	btfsc	___fladd@b& (0+255),0,b
 22877                           
 22878                           ; BSR set to: 0
 22879  00C5D2  8F85               	bsf	___fladd@grs& (0+255),7,b
 22880                           
 22881                           ; BSR set to: 0
 22882                           
 22883                           ; BSR set to: 0
 22884  00C5D4  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 22885  00C5D6  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 22886  00C5D8  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 22887  00C5DA  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 22888  00C5DC  3372               	rrcf	___fladd@b& (0+255),f,b
 22889                           
 22890                           ; BSR set to: 0
 22891  00C5DE  2B84               	incf	___fladd@bexp& (0+255),f,b
 22892                           
 22893                           ; BSR set to: 0
 22894  00C5E0  D070               	goto	u20440
 22895  00C5E2                     l3247:
 22896                           
 22897                           ; BSR set to: 0
 22898                           
 22899                           ; BSR set to: 0
 22900  00C5E2  5176               	movf	___fladd@a& (0+255),w,b
 22901  00C5E4  5D72               	subwf	___fladd@b& (0+255),w,b
 22902  00C5E6  5177               	movf	(___fladd@a+1)& (0+255),w,b
 22903  00C5E8  5973               	subwfb	(___fladd@b+1)& (0+255),w,b
 22904  00C5EA  5178               	movf	(___fladd@a+2)& (0+255),w,b
 22905  00C5EC  5974               	subwfb	(___fladd@b+2)& (0+255),w,b
 22906  00C5EE  5175               	movf	(___fladd@b+3)& (0+255),w,b
 22907  00C5F0  0A80               	xorlw	128
 22908  00C5F2  6F7A               	movwf	??___fladd& (0+255),b
 22909  00C5F4  5179               	movf	(___fladd@a+3)& (0+255),w,b
 22910  00C5F6  0A80               	xorlw	128
 22911  00C5F8  597A               	subwfb	??___fladd& (0+255),w,b
 22912  00C5FA  B0D8               	btfsc	status,0,c
 22913  00C5FC  D036               	goto	l3255
 22914                           
 22915                           ; BSR set to: 0
 22916  00C5FE  C072  F07A         	movff	___fladd@b,??___fladd
 22917  00C602  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 22918  00C606  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 22919  00C60A  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 22920  00C60E  1F7A               	comf	??___fladd& (0+255),f,b
 22921  00C610  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 22922  00C612  1F7C               	comf	(??___fladd+2)& (0+255),f,b
 22923  00C614  1F7D               	comf	(??___fladd+3)& (0+255),f,b
 22924  00C616  2B7A               	incf	??___fladd& (0+255),f,b
 22925  00C618  0E00               	movlw	0
 22926  00C61A  237B               	addwfc	(??___fladd+1)& (0+255),f,b
 22927  00C61C  237C               	addwfc	(??___fladd+2)& (0+255),f,b
 22928  00C61E  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 22929  00C620  5176               	movf	___fladd@a& (0+255),w,b
 22930  00C622  257A               	addwf	??___fladd& (0+255),w,b
 22931  00C624  6F7E               	movwf	(??___fladd+4)& (0+255),b
 22932  00C626  5177               	movf	(___fladd@a+1)& (0+255),w,b
 22933  00C628  217B               	addwfc	(??___fladd+1)& (0+255),w,b
 22934  00C62A  6F7F               	movwf	(??___fladd+5)& (0+255),b
 22935  00C62C  5178               	movf	(___fladd@a+2)& (0+255),w,b
 22936  00C62E  217C               	addwfc	(??___fladd+2)& (0+255),w,b
 22937  00C630  6F80               	movwf	(??___fladd+6)& (0+255),b
 22938  00C632  5179               	movf	(___fladd@a+3)& (0+255),w,b
 22939  00C634  217D               	addwfc	(??___fladd+3)& (0+255),w,b
 22940  00C636  6F81               	movwf	(??___fladd+7)& (0+255),b
 22941  00C638  0EFF               	movlw	255
 22942  00C63A  257E               	addwf	(??___fladd+4)& (0+255),w,b
 22943  00C63C  6F72               	movwf	___fladd@b& (0+255),b
 22944  00C63E  0EFF               	movlw	255
 22945  00C640  217F               	addwfc	(??___fladd+5)& (0+255),w,b
 22946  00C642  6F73               	movwf	(___fladd@b+1)& (0+255),b
 22947  00C644  0EFF               	movlw	255
 22948  00C646  2180               	addwfc	(??___fladd+6)& (0+255),w,b
 22949  00C648  6F74               	movwf	(___fladd@b+2)& (0+255),b
 22950  00C64A  0EFF               	movlw	255
 22951  00C64C  2181               	addwfc	(??___fladd+7)& (0+255),w,b
 22952  00C64E  6F75               	movwf	(___fladd@b+3)& (0+255),b
 22953  00C650  0E80               	movlw	128
 22954  00C652  1B82               	xorwf	___fladd@signs& (0+255),f,b
 22955                           
 22956                           ; BSR set to: 0
 22957  00C654  6D85               	negf	___fladd@grs& (0+255),b
 22958                           
 22959                           ; BSR set to: 0
 22960  00C656  5185               	movf	___fladd@grs& (0+255),w,b
 22961  00C658  A4D8               	btfss	status,2,c
 22962  00C65A  D00F               	goto	l3257
 22963                           
 22964                           ; BSR set to: 0
 22965  00C65C  0E01               	movlw	1
 22966  00C65E  2772               	addwf	___fladd@b& (0+255),f,b
 22967  00C660  0E00               	movlw	0
 22968  00C662  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 22969  00C664  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 22970  00C666  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 22971                           
 22972                           ; BSR set to: 0
 22973  00C668  D008               	goto	l3257
 22974  00C66A                     l3255:
 22975                           
 22976                           ; BSR set to: 0
 22977                           
 22978                           ; BSR set to: 0
 22979  00C66A  5176               	movf	___fladd@a& (0+255),w,b
 22980  00C66C  5F72               	subwf	___fladd@b& (0+255),f,b
 22981  00C66E  5177               	movf	(___fladd@a+1)& (0+255),w,b
 22982  00C670  5B73               	subwfb	(___fladd@b+1)& (0+255),f,b
 22983  00C672  5178               	movf	(___fladd@a+2)& (0+255),w,b
 22984  00C674  5B74               	subwfb	(___fladd@b+2)& (0+255),f,b
 22985  00C676  5179               	movf	(___fladd@a+3)& (0+255),w,b
 22986  00C678  5B75               	subwfb	(___fladd@b+3)& (0+255),f,b
 22987  00C67A                     l3257:
 22988                           
 22989                           ; BSR set to: 0
 22990  00C67A  5172               	movf	___fladd@b& (0+255),w,b
 22991  00C67C  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 22992  00C67E  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 22993  00C680  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 22994  00C682  A4D8               	btfss	status,2,c
 22995  00C684  D01C               	goto	l3264
 22996                           
 22997                           ; BSR set to: 0
 22998  00C686  5185               	movf	___fladd@grs& (0+255),w,b
 22999  00C688  A4D8               	btfss	status,2,c
 23000  00C68A  D019               	goto	l3264
 23001                           
 23002                           ; BSR set to: 0
 23003  00C68C  0E00               	movlw	0
 23004  00C68E  6F72               	movwf	?___fladd& (0+255),b
 23005  00C690  0E00               	movlw	0
 23006  00C692  6F73               	movwf	(?___fladd+1)& (0+255),b
 23007  00C694  0E00               	movlw	0
 23008  00C696  6F74               	movwf	(?___fladd+2)& (0+255),b
 23009  00C698  0E00               	movlw	0
 23010  00C69A  6F75               	movwf	(?___fladd+3)& (0+255),b
 23011                           
 23012                           ; BSR set to: 0
 23013  00C69C  0012               	return	
 23014  00C69E                     
 23015                           ; BSR set to: 0
 23016                           
 23017                           ; BSR set to: 0
 23018  00C69E  90D8               	bcf	status,0,c
 23019  00C6A0  3772               	rlcf	___fladd@b& (0+255),f,b
 23020  00C6A2  3773               	rlcf	(___fladd@b+1)& (0+255),f,b
 23021  00C6A4  3774               	rlcf	(___fladd@b+2)& (0+255),f,b
 23022  00C6A6  3775               	rlcf	(___fladd@b+3)& (0+255),f,b
 23023                           
 23024                           ; BSR set to: 0
 23025  00C6A8  BF85               	btfsc	___fladd@grs& (0+255),7,b
 23026                           
 23027                           ; BSR set to: 0
 23028  00C6AA  8172               	bsf	___fladd@b& (0+255),0,b
 23029                           
 23030                           ; BSR set to: 0
 23031                           
 23032                           ; BSR set to: 0
 23033  00C6AC  A185               	btfss	___fladd@grs& (0+255),0,b
 23034  00C6AE  D002               	goto	l3262
 23035                           
 23036                           ; BSR set to: 0
 23037  00C6B0  80D8               	bsf	status,0,c
 23038  00C6B2  D001               	goto	L40
 23039  00C6B4                     l3262:
 23040                           
 23041                           ; BSR set to: 0
 23042                           
 23043                           ; BSR set to: 0
 23044  00C6B4  90D8               	bcf	status,0,c
 23045  00C6B6                     L40:
 23046  00C6B6  3785               	rlcf	___fladd@grs& (0+255),f,b
 23047                           
 23048                           ; BSR set to: 0
 23049                           
 23050                           ; BSR set to: 0
 23051  00C6B8  5184               	movf	___fladd@bexp& (0+255),w,b
 23052  00C6BA  A4D8               	btfss	status,2,c
 23053                           
 23054                           ; BSR set to: 0
 23055  00C6BC  0784               	decf	___fladd@bexp& (0+255),f,b
 23056  00C6BE                     l3264:
 23057                           
 23058                           ; BSR set to: 0
 23059                           
 23060                           ; BSR set to: 0
 23061                           
 23062                           ; BSR set to: 0
 23063  00C6BE  AF74               	btfss	(___fladd@b+2)& (0+255),7,b
 23064  00C6C0  D7EE               	goto	l3260
 23065  00C6C2                     u20440:
 23066                           
 23067                           ; BSR set to: 0
 23068                           
 23069                           ; BSR set to: 0
 23070                           
 23071                           ; BSR set to: 0
 23072  00C6C2  0E00               	movlw	0
 23073  00C6C4  6F83               	movwf	___fladd@aexp& (0+255),b
 23074                           
 23075                           ; BSR set to: 0
 23076  00C6C6  AF85               	btfss	___fladd@grs& (0+255),7,b
 23077  00C6C8  D00A               	goto	l3269
 23078                           
 23079                           ; BSR set to: 0
 23080  00C6CA  C085  F07A         	movff	___fladd@grs,??___fladd
 23081  00C6CE  0E7F               	movlw	127
 23082  00C6D0  177A               	andwf	??___fladd& (0+255),f,b
 23083  00C6D2  A4D8               	btfss	status,2,c
 23084  00C6D4  D002               	goto	u20470
 23085                           
 23086                           ; BSR set to: 0
 23087                           
 23088                           ; BSR set to: 0
 23089  00C6D6  A172               	btfss	___fladd@b& (0+255),0,b
 23090  00C6D8  D002               	goto	l3269
 23091  00C6DA                     u20470:
 23092                           
 23093                           ; BSR set to: 0
 23094  00C6DA  0E01               	movlw	1
 23095  00C6DC  6F83               	movwf	___fladd@aexp& (0+255),b
 23096  00C6DE                     l3269:
 23097                           
 23098                           ; BSR set to: 0
 23099                           
 23100                           ; BSR set to: 0
 23101                           
 23102                           ; BSR set to: 0
 23103  00C6DE  5183               	movf	___fladd@aexp& (0+255),w,b
 23104  00C6E0  B4D8               	btfsc	status,2,c
 23105  00C6E2  D020               	goto	l3272
 23106                           
 23107                           ; BSR set to: 0
 23108  00C6E4  0E01               	movlw	1
 23109  00C6E6  2772               	addwf	___fladd@b& (0+255),f,b
 23110  00C6E8  0E00               	movlw	0
 23111  00C6EA  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 23112  00C6EC  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 23113  00C6EE  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 23114                           
 23115                           ; BSR set to: 0
 23116  00C6F0  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 23117  00C6F2  D018               	goto	l3272
 23118                           
 23119                           ; BSR set to: 0
 23120  00C6F4  C072  F07A         	movff	___fladd@b,??___fladd
 23121  00C6F8  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 23122  00C6FC  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 23123  00C700  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 23124  00C704  357D               	rlcf	(??___fladd+3)& (0+255),w,b
 23125  00C706  337D               	rrcf	(??___fladd+3)& (0+255),f,b
 23126  00C708  337C               	rrcf	(??___fladd+2)& (0+255),f,b
 23127  00C70A  337B               	rrcf	(??___fladd+1)& (0+255),f,b
 23128  00C70C  337A               	rrcf	??___fladd& (0+255),f,b
 23129  00C70E  C07A  F072         	movff	??___fladd,___fladd@b
 23130  00C712  C07B  F073         	movff	??___fladd+1,___fladd@b+1
 23131  00C716  C07C  F074         	movff	??___fladd+2,___fladd@b+2
 23132  00C71A  C07D  F075         	movff	??___fladd+3,___fladd@b+3
 23133  00C71E  2984               	incf	___fladd@bexp& (0+255),w,b
 23134  00C720  A4D8               	btfss	status,2,c
 23135                           
 23136                           ; BSR set to: 0
 23137  00C722  2B84               	incf	___fladd@bexp& (0+255),f,b
 23138  00C724                     l3272:
 23139                           
 23140                           ; BSR set to: 0
 23141                           
 23142                           ; BSR set to: 0
 23143                           
 23144                           ; BSR set to: 0
 23145                           
 23146                           ; BSR set to: 0
 23147  00C724  2984               	incf	___fladd@bexp& (0+255),w,b
 23148  00C726  B4D8               	btfsc	status,2,c
 23149  00C728  D003               	goto	u20520
 23150                           
 23151                           ; BSR set to: 0
 23152  00C72A  5184               	movf	___fladd@bexp& (0+255),w,b
 23153  00C72C  A4D8               	btfss	status,2,c
 23154  00C72E  D00D               	goto	l3276
 23155  00C730                     u20520:
 23156                           
 23157                           ; BSR set to: 0
 23158                           
 23159                           ; BSR set to: 0
 23160  00C730  0E00               	movlw	0
 23161  00C732  6F72               	movwf	___fladd@b& (0+255),b
 23162  00C734  0E00               	movlw	0
 23163  00C736  6F73               	movwf	(___fladd@b+1)& (0+255),b
 23164  00C738  0E00               	movlw	0
 23165  00C73A  6F74               	movwf	(___fladd@b+2)& (0+255),b
 23166  00C73C  0E00               	movlw	0
 23167  00C73E  6F75               	movwf	(___fladd@b+3)& (0+255),b
 23168  00C740  5184               	movf	___fladd@bexp& (0+255),w,b
 23169  00C742  A4D8               	btfss	status,2,c
 23170  00C744  D002               	goto	l3276
 23171                           
 23172                           ; BSR set to: 0
 23173  00C746  0E00               	movlw	0
 23174  00C748  6F82               	movwf	___fladd@signs& (0+255),b
 23175  00C74A                     l3276:
 23176                           
 23177                           ; BSR set to: 0
 23178                           
 23179                           ; BSR set to: 0
 23180                           
 23181                           ; BSR set to: 0
 23182  00C74A  A184               	btfss	___fladd@bexp& (0+255),0,b
 23183  00C74C  D002               	goto	l3277
 23184                           
 23185                           ; BSR set to: 0
 23186  00C74E  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 23187  00C750  D001               	goto	l3278
 23188  00C752                     l3277:
 23189                           
 23190                           ; BSR set to: 0
 23191                           
 23192                           ; BSR set to: 0
 23193  00C752  9F74               	bcf	(___fladd@b+2)& (0+255),7,b
 23194  00C754                     l3278:
 23195                           
 23196                           ; BSR set to: 0
 23197                           
 23198                           ; BSR set to: 0
 23199  00C754  90D8               	bcf	status,0,c
 23200  00C756  3184               	rrcf	___fladd@bexp& (0+255),w,b
 23201  00C758  6F75               	movwf	(___fladd@b+3)& (0+255),b
 23202                           
 23203                           ; BSR set to: 0
 23204  00C75A  BF82               	btfsc	___fladd@signs& (0+255),7,b
 23205                           
 23206                           ; BSR set to: 0
 23207  00C75C  8F75               	bsf	(___fladd@b+3)& (0+255),7,b
 23208                           
 23209                           ; BSR set to: 0
 23210                           
 23211                           ; BSR set to: 0
 23212  00C75E  C072  F072         	movff	___fladd@b,?___fladd
 23213  00C762  C073  F073         	movff	___fladd@b+1,?___fladd+1
 23214  00C766  C074  F074         	movff	___fladd@b+2,?___fladd+2
 23215  00C76A  C075  F075         	movff	___fladd@b+3,?___fladd+3
 23216  00C76E  0012               	return	
 23217  00C770                     __end_of___fladd:
 23218                           	opt stack 0
 23219                           tblptru	equ	0xFF8
 23220                           tblptrh	equ	0xFF7
 23221                           tblptrl	equ	0xFF6
 23222                           tablat	equ	0xFF5
 23223                           prodh	equ	0xFF4
 23224                           prodl	equ	0xFF3
 23225                           intcon	equ	0xFF2
 23226                           postinc0	equ	0xFEE
 23227                           wreg	equ	0xFE8
 23228                           indf1	equ	0xFE7
 23229                           postdec1	equ	0xFE5
 23230                           plusw1	equ	0xFE3
 23231                           fsr1h	equ	0xFE2
 23232                           fsr1l	equ	0xFE1
 23233                           indf2	equ	0xFDF
 23234                           postinc2	equ	0xFDE
 23235                           postdec2	equ	0xFDD
 23236                           plusw2	equ	0xFDB
 23237                           fsr2h	equ	0xFDA
 23238                           fsr2l	equ	0xFD9
 23239                           status	equ	0xFD8
 23240                           
 23241 ;; *************** function _USBDeviceInit *****************
 23242 ;; Defined at:
 23243 ;;		line 277 in file "usb_device.c"
 23244 ;; Parameters:    Size  Location     Type
 23245 ;;		None
 23246 ;; Auto vars:     Size  Location     Type
 23247 ;;  i               1    8[BANK0 ] unsigned char 
 23248 ;; Return value:  Size  Location     Type
 23249 ;;                  1    wreg      void 
 23250 ;; Registers used:
 23251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23252 ;; Tracked objects:
 23253 ;;		On entry : 0/0
 23254 ;;		On exit  : 0/0
 23255 ;;		Unchanged: 0/0
 23256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23258 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23260 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23261 ;;Total ram usage:        1 bytes
 23262 ;; Hardware stack levels used:    1
 23263 ;; Hardware stack levels required when called:   11
 23264 ;; This function calls:
 23265 ;;		_memset
 23266 ;; This function is called by:
 23267 ;;		_main
 23268 ;; This function uses a non-reentrant model
 23269 ;;
 23270                           
 23271                           	psect	text77
 23272  00EA08                     __ptext77:
 23273                           	opt stack 0
 23274  00EA08                     _USBDeviceInit:
 23275                           	opt stack 19
 23276                           
 23277                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 23278                           
 23279                           ; BSR set to: 0
 23280                           ;incstack = 0
 23281  00EA08  98A0               	bcf	4000,4,c	;volatile
 23282                           
 23283                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 23284  00EA0A  0E00               	movlw	0
 23285  00EA0C  6E63               	movwf	3939,c	;volatile
 23286                           
 23287                           ;usb_device.c: 291: {UIR = 0;};
 23288  00EA0E  0E00               	movlw	0
 23289  00EA10  6E62               	movwf	3938,c	;volatile
 23290                           
 23291                           ;usb_device.c: 294: UEP0 = 0;
 23292  00EA12  0E00               	movlw	0
 23293  00EA14  010F               	movlb	15	; () banked
 23294  00EA16  6F26               	movwf	38,b	;volatile
 23295                           
 23296                           ; BSR set to: 15
 23297                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 23298  00EA18  0E27               	movlw	39
 23299  00EA1A  0100               	movlb	0	; () banked
 23300  00EA1C  6F60               	movwf	memset@p1& (0+255),b
 23301  00EA1E  0E0F               	movlw	15
 23302  00EA20  6F61               	movwf	(memset@p1+1)& (0+255),b
 23303  00EA22  0E00               	movlw	0
 23304  00EA24  6F63               	movwf	(memset@c+1)& (0+255),b
 23305  00EA26  0E00               	movlw	0
 23306  00EA28  6F62               	movwf	memset@c& (0+255),b
 23307  00EA2A  0E00               	movlw	0
 23308  00EA2C  6F65               	movwf	(memset@n+1)& (0+255),b
 23309  00EA2E  0E02               	movlw	2
 23310  00EA30  6F64               	movwf	memset@n& (0+255),b
 23311  00EA32  ECDE  F094         	call	_memset	;wreg free
 23312                           
 23313                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 23314  00EA36  0E16               	movlw	22
 23315  00EA38  010F               	movlb	15	; () banked
 23316  00EA3A  6F39               	movwf	57,b	;volatile
 23317                           
 23318                           ; BSR set to: 15
 23319  00EA3C  0E9F               	movlw	159
 23320  00EA3E  6F37               	movwf	55,b	;volatile
 23321                           
 23322                           ; BSR set to: 15
 23323  00EA40  0E7B               	movlw	123
 23324  00EA42  6F36               	movwf	54,b	;volatile
 23325                           
 23326                           ; BSR set to: 15
 23327                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 23328  00EA44  0E00               	movlw	0
 23329  00EA46  0100               	movlb	0	; () banked
 23330  00EA48  6F68               	movwf	USBDeviceInit@i& (0+255),b
 23331  00EA4A                     l21354:
 23332                           
 23333                           ; BSR set to: 0
 23334  00EA4A  0E0B               	movlw	11
 23335  00EA4C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 23336  00EA4E  D001               	goto	l145
 23337  00EA50  D00E               	goto	u21360
 23338  00EA52                     l145:
 23339                           
 23340                           ; BSR set to: 0
 23341                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 23342                           
 23343                           ; BSR set to: 0
 23344  00EA52  5168               	movf	USBDeviceInit@i& (0+255),w,b
 23345  00EA54  0D04               	mullw	4
 23346  00EA56  0E00               	movlw	0
 23347  00EA58  24F3               	addwf	prodl,w,c
 23348  00EA5A  6ED9               	movwf	fsr2l,c
 23349  00EA5C  0E0D               	movlw	13
 23350  00EA5E  20F4               	addwfc	prodh,w,c
 23351  00EA60  6EDA               	movwf	fsr2h,c
 23352  00EA62  6ADE               	clrf	postinc2,c
 23353  00EA64  6ADE               	clrf	postinc2,c
 23354  00EA66  6ADE               	clrf	postinc2,c
 23355  00EA68  6ADD               	clrf	postdec2,c
 23356                           
 23357                           ; BSR set to: 0
 23358  00EA6A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 23359  00EA6C  D7EE               	goto	l21354
 23360  00EA6E                     u21360:
 23361                           
 23362                           ; BSR set to: 0
 23363                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 23364  00EA6E  8C65               	bsf	3941,6,c	;volatile
 23365                           
 23366                           ; BSR set to: 0
 23367                           ;usb_device.c: 316: UADDR = 0x00;
 23368  00EA70  0E00               	movlw	0
 23369  00EA72  010F               	movlb	15	; () banked
 23370  00EA74  6F38               	movwf	56,b	;volatile
 23371                           
 23372                           ; BSR set to: 15
 23373                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 23374  00EA76  9865               	bcf	3941,4,c	;volatile
 23375                           
 23376                           ; BSR set to: 15
 23377                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 23378  00EA78  9C65               	bcf	3941,6,c	;volatile
 23379  00EA7A                     
 23380                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 23381                           
 23382                           ; BSR set to: 15
 23383  00EA7A  9662               	bcf	3938,3,c	;volatile
 23384                           
 23385                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 23386  00EA7C  0E00               	movlw	0
 23387  00EA7E  6E04               	movwf	_inPipes+3,c	;volatile
 23388                           
 23389                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 23390  00EA80  0E00               	movlw	0
 23391  00EA82  0101               	movlb	1	; () banked
 23392  00EA84  6F34               	movwf	(_outPipes+3)& (0+255),b	;volatile
 23393                           
 23394                           ; BSR set to: 1
 23395                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 23396  00EA86  0E00               	movlw	0
 23397  00EA88  6F36               	movwf	(_outPipes+5)& (0+255),b	;volatile
 23398  00EA8A  0E00               	movlw	0
 23399  00EA8C  6F35               	movwf	(_outPipes+4)& (0+255),b	;volatile
 23400                           
 23401                           ; BSR set to: 1
 23402                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 23403  00EA8E  B662               	btfsc	3938,3,c	;volatile
 23404  00EA90  D7F4               	goto	l147
 23405                           
 23406                           ; BSR set to: 1
 23407                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 23408                           
 23409                           ; BSR set to: 1
 23410  00EA92  0E01               	movlw	1
 23411  00EA94  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 23412                           
 23413                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 23414  00EA96  0E01               	movlw	1
 23415  00EA98  6F82               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 23416                           
 23417                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 23418  00EA9A  0E00               	movlw	0
 23419  00EA9C  6F81               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 23420                           
 23421                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 23422  00EA9E  0E00               	movlw	0
 23423  00EAA0  6F80               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 23424                           
 23425                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 23426  00EAA2  0E00               	movlw	0
 23427  00EAA4  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 23428                           
 23429                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 23430  00EAA6  0E00               	movlw	0
 23431  00EAA8  0100               	movlb	0	; () banked
 23432  00EAAA  6F68               	movwf	USBDeviceInit@i& (0+255),b
 23433  00EAAC                     l21382:
 23434                           
 23435                           ; BSR set to: 0
 23436  00EAAC  0E02               	movlw	2
 23437  00EAAE  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 23438  00EAB0  D001               	goto	l149
 23439  00EAB2  D02E               	goto	u21390
 23440  00EAB4                     l149:
 23441                           
 23442                           ; BSR set to: 0
 23443                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 23444                           
 23445                           ; BSR set to: 0
 23446  00EAB4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 23447  00EAB6  0D02               	mullw	2
 23448  00EAB8  0E07               	movlw	low _pBDTEntryIn
 23449  00EABA  24F3               	addwf	prodl,w,c
 23450  00EABC  6ED9               	movwf	fsr2l,c
 23451  00EABE  0E00               	movlw	high _pBDTEntryIn
 23452  00EAC0  20F4               	addwfc	prodh,w,c
 23453  00EAC2  6EDA               	movwf	fsr2h,c
 23454  00EAC4  0E00               	movlw	0
 23455  00EAC6  6EDE               	movwf	postinc2,c
 23456  00EAC8  0E00               	movlw	0
 23457  00EACA  6EDD               	movwf	postdec2,c
 23458                           
 23459                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 23460  00EACC  5168               	movf	USBDeviceInit@i& (0+255),w,b
 23461  00EACE  0D02               	mullw	2
 23462  00EAD0  0E41               	movlw	low _pBDTEntryOut
 23463  00EAD2  24F3               	addwf	prodl,w,c
 23464  00EAD4  6ED9               	movwf	fsr2l,c
 23465  00EAD6  0E01               	movlw	high _pBDTEntryOut
 23466  00EAD8  20F4               	addwfc	prodh,w,c
 23467  00EADA  6EDA               	movwf	fsr2h,c
 23468  00EADC  0E00               	movlw	0
 23469  00EADE  6EDE               	movwf	postinc2,c
 23470  00EAE0  0E00               	movlw	0
 23471  00EAE2  6EDD               	movwf	postdec2,c
 23472                           
 23473                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 23474  00EAE4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 23475  00EAE6  0D01               	mullw	1
 23476  00EAE8  0E68               	movlw	low _ep_data_in
 23477  00EAEA  24F3               	addwf	prodl,w,c
 23478  00EAEC  6ED9               	movwf	fsr2l,c
 23479  00EAEE  0E01               	movlw	high _ep_data_in
 23480  00EAF0  20F4               	addwfc	prodh,w,c
 23481  00EAF2  6EDA               	movwf	fsr2h,c
 23482  00EAF4  0E00               	movlw	0
 23483  00EAF6  6EDF               	movwf	indf2,c
 23484                           
 23485                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 23486  00EAF8  5168               	movf	USBDeviceInit@i& (0+255),w,b
 23487  00EAFA  0D01               	mullw	1
 23488  00EAFC  0E65               	movlw	low _ep_data_out
 23489  00EAFE  24F3               	addwf	prodl,w,c
 23490  00EB00  6ED9               	movwf	fsr2l,c
 23491  00EB02  0E01               	movlw	high _ep_data_out
 23492  00EB04  20F4               	addwfc	prodh,w,c
 23493  00EB06  6EDA               	movwf	fsr2h,c
 23494  00EB08  0E00               	movlw	0
 23495  00EB0A  6EDF               	movwf	indf2,c
 23496                           
 23497                           ; BSR set to: 0
 23498  00EB0C  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 23499  00EB0E  D7CE               	goto	l21382
 23500  00EB10                     u21390:
 23501                           
 23502                           ; BSR set to: 0
 23503                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 23504                           
 23505                           ; BSR set to: 0
 23506  00EB10  0E08               	movlw	8
 23507  00EB12  6E07               	movwf	_pBDTEntryIn,c
 23508  00EB14  0E0D               	movlw	13
 23509  00EB16  6E08               	movwf	_pBDTEntryIn+1,c
 23510                           
 23511                           ; BSR set to: 0
 23512                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 23513  00EB18  0E16               	movlw	22
 23514  00EB1A  010F               	movlb	15	; () banked
 23515  00EB1C  6F26               	movwf	38,b	;volatile
 23516                           
 23517                           ; BSR set to: 15
 23518                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 23519  00EB1E  0E0D               	movlw	13
 23520  00EB20  010D               	movlb	13	; () banked
 23521  00EB22  6F03               	movwf	3,b	;volatile
 23522  00EB24  0E30               	movlw	48
 23523  00EB26  6F02               	movwf	2,b	;volatile
 23524                           
 23525                           ; BSR set to: 13
 23526                           ;usb_device.c: 359: BDT[0].CNT = 8;
 23527  00EB28  0E08               	movlw	8
 23528  00EB2A  6F01               	movwf	1,b	;volatile
 23529                           
 23530                           ; BSR set to: 13
 23531                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 23532  00EB2C  0E04               	movlw	4
 23533  00EB2E  6F00               	movwf	0,b	;volatile
 23534                           
 23535                           ; BSR set to: 13
 23536                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 23537  00EB30  8F00               	bsf	0,7,b	;volatile
 23538                           
 23539                           ; BSR set to: 13
 23540                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 23541  00EB32  0E00               	movlw	0
 23542  00EB34  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 23543                           
 23544                           ; BSR set to: 13
 23545                           ;usb_device.c: 366: USB1msTickCount = 0;
 23546  00EB36  0E00               	movlw	0
 23547  00EB38  0101               	movlb	1	; () banked
 23548  00EB3A  6F5B               	movwf	_USB1msTickCount& (0+255),b	;volatile
 23549  00EB3C  0E00               	movlw	0
 23550  00EB3E  6F5C               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 23551  00EB40  0E00               	movlw	0
 23552  00EB42  6F5D               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 23553  00EB44  0E00               	movlw	0
 23554  00EB46  6F5E               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 23555                           
 23556                           ; BSR set to: 1
 23557                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 23558  00EB48  0E00               	movlw	0
 23559  00EB4A  6F7F               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 23560                           
 23561                           ; BSR set to: 1
 23562                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 23563  00EB4C  0E00               	movlw	0
 23564  00EB4E  6E2B               	movwf	_USBDeviceState,c	;volatile
 23565                           
 23566                           ; BSR set to: 1
 23567  00EB50  0012               	return		;funcret
 23568  00EB52                     __end_of_USBDeviceInit:
 23569                           	opt stack 0
 23570                           tblptru	equ	0xFF8
 23571                           tblptrh	equ	0xFF7
 23572                           tblptrl	equ	0xFF6
 23573                           tablat	equ	0xFF5
 23574                           prodh	equ	0xFF4
 23575                           prodl	equ	0xFF3
 23576                           intcon	equ	0xFF2
 23577                           postinc0	equ	0xFEE
 23578                           wreg	equ	0xFE8
 23579                           indf1	equ	0xFE7
 23580                           postdec1	equ	0xFE5
 23581                           plusw1	equ	0xFE3
 23582                           fsr1h	equ	0xFE2
 23583                           fsr1l	equ	0xFE1
 23584                           indf2	equ	0xFDF
 23585                           postinc2	equ	0xFDE
 23586                           postdec2	equ	0xFDD
 23587                           plusw2	equ	0xFDB
 23588                           fsr2h	equ	0xFDA
 23589                           fsr2l	equ	0xFD9
 23590                           status	equ	0xFD8
 23591                           
 23592 ;; *************** function _memset *****************
 23593 ;; Defined at:
 23594 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 23595 ;; Parameters:    Size  Location     Type
 23596 ;;  p1              2    0[BANK0 ] PTR void 
 23597 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 23598 ;;  c               2    2[BANK0 ] int 
 23599 ;;  n               2    4[BANK0 ] unsigned int 
 23600 ;; Auto vars:     Size  Location     Type
 23601 ;;  p               2    6[BANK0 ] PTR unsigned char 
 23602 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 23603 ;; Return value:  Size  Location     Type
 23604 ;;                  2    0[BANK0 ] PTR void 
 23605 ;; Registers used:
 23606 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23607 ;; Tracked objects:
 23608 ;;		On entry : 0/0
 23609 ;;		On exit  : 0/0
 23610 ;;		Unchanged: 0/0
 23611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23612 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23613 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23615 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23616 ;;Total ram usage:        8 bytes
 23617 ;; Hardware stack levels used:    1
 23618 ;; Hardware stack levels required when called:   10
 23619 ;; This function calls:
 23620 ;;		Nothing
 23621 ;; This function is called by:
 23622 ;;		_USBDeviceInit
 23623 ;; This function uses a non-reentrant model
 23624 ;;
 23625                           
 23626                           	psect	text78
 23627  0129BC                     __ptext78:
 23628                           	opt stack 0
 23629  0129BC                     _memset:
 23630                           	opt stack 19
 23631                           
 23632                           ; BSR set to: 1
 23633                           ;incstack = 0
 23634  0129BC  C060  F066         	movff	memset@p1,memset@p
 23635  0129C0  C061  F067         	movff	memset@p1+1,memset@p+1
 23636  0129C4  D009               	goto	l3406
 23637  0129C6                     l20592:
 23638  0129C6  C066  FFD9         	movff	memset@p,fsr2l
 23639  0129CA  C067  FFDA         	movff	memset@p+1,fsr2h
 23640  0129CE  C062  FFDF         	movff	memset@c,indf2
 23641  0129D2  0100               	movlb	0	; () banked
 23642  0129D4  4B66               	infsnz	memset@p& (0+255),f,b
 23643  0129D6  2B67               	incf	(memset@p+1)& (0+255),f,b
 23644  0129D8                     l3406:
 23645                           
 23646                           ; BSR set to: 0
 23647  0129D8  0100               	movlb	0	; () banked
 23648  0129DA  0764               	decf	memset@n& (0+255),f,b
 23649  0129DC  A0D8               	btfss	status,0,c
 23650  0129DE  0765               	decf	(memset@n+1)& (0+255),f,b
 23651  0129E0  2964               	incf	memset@n& (0+255),w,b
 23652  0129E2  E1F1               	bnz	l20592
 23653  0129E4  2965               	incf	(memset@n+1)& (0+255),w,b
 23654  0129E6  B4D8               	btfsc	status,2,c
 23655  0129E8  0012               	return	
 23656  0129EA  D7ED               	goto	l3407
 23657  0129EC                     __end_of_memset:
 23658                           	opt stack 0
 23659                           tblptru	equ	0xFF8
 23660                           tblptrh	equ	0xFF7
 23661                           tblptrl	equ	0xFF6
 23662                           tablat	equ	0xFF5
 23663                           prodh	equ	0xFF4
 23664                           prodl	equ	0xFF3
 23665                           intcon	equ	0xFF2
 23666                           postinc0	equ	0xFEE
 23667                           wreg	equ	0xFE8
 23668                           indf1	equ	0xFE7
 23669                           postdec1	equ	0xFE5
 23670                           plusw1	equ	0xFE3
 23671                           fsr1h	equ	0xFE2
 23672                           fsr1l	equ	0xFE1
 23673                           indf2	equ	0xFDF
 23674                           postinc2	equ	0xFDE
 23675                           postdec2	equ	0xFDD
 23676                           plusw2	equ	0xFDB
 23677                           fsr2h	equ	0xFDA
 23678                           fsr2l	equ	0xFD9
 23679                           status	equ	0xFD8
 23680                           
 23681 ;; *************** function _USBDeviceAttach *****************
 23682 ;; Defined at:
 23683 ;;		line 1354 in file "usb_device.c"
 23684 ;; Parameters:    Size  Location     Type
 23685 ;;		None
 23686 ;; Auto vars:     Size  Location     Type
 23687 ;;		None
 23688 ;; Return value:  Size  Location     Type
 23689 ;;                  1    wreg      void 
 23690 ;; Registers used:
 23691 ;;		wreg, status,2
 23692 ;; Tracked objects:
 23693 ;;		On entry : 0/0
 23694 ;;		On exit  : 0/0
 23695 ;;		Unchanged: 0/0
 23696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23701 ;;Total ram usage:        0 bytes
 23702 ;; Hardware stack levels used:    1
 23703 ;; Hardware stack levels required when called:   10
 23704 ;; This function calls:
 23705 ;;		Nothing
 23706 ;; This function is called by:
 23707 ;;		_main
 23708 ;; This function uses a non-reentrant model
 23709 ;;
 23710                           
 23711                           	psect	text79
 23712  01295A                     __ptext79:
 23713                           	opt stack 0
 23714  01295A                     _USBDeviceAttach:
 23715                           	opt stack 20
 23716                           
 23717                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 23718                           
 23719                           ; BSR set to: 0
 23720                           ;incstack = 0
 23721  01295A  502B               	movf	_USBDeviceState,w,c	;volatile
 23722  01295C  A4D8               	btfss	status,2,c
 23723  01295E  0012               	return	
 23724                           
 23725                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 23726  012960  0E00               	movlw	0
 23727  012962  6E65               	movwf	3941,c	;volatile
 23728                           
 23729                           ;usb_device.c: 1365: UIE = 0;
 23730  012964  0E00               	movlw	0
 23731  012966  010F               	movlb	15	; () banked
 23732  012968  6F36               	movwf	54,b	;volatile
 23733                           
 23734                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 23735  01296A  0E16               	movlw	22
 23736  01296C  6F39               	movwf	57,b	;volatile
 23737  01296E  0E9F               	movlw	159
 23738  012970  6F37               	movwf	55,b	;volatile
 23739  012972  0E7B               	movlw	123
 23740  012974  6F36               	movwf	54,b	;volatile
 23741                           
 23742                           ; BSR set to: 15
 23743                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 23744  012976  8ED0               	bsf	4048,7,c	;volatile
 23745                           
 23746                           ; BSR set to: 15
 23747  012978  88A2               	bsf	4002,4,c	;volatile
 23748                           
 23749                           ; BSR set to: 15
 23750  01297A  88A0               	bsf	4000,4,c	;volatile
 23751                           
 23752                           ; BSR set to: 15
 23753  01297C  8EF2               	bsf	intcon,7,c	;volatile
 23754                           
 23755                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 23756  01297E  D001               	goto	l206
 23757  012980                     l207:
 23758  012980  8665               	bsf	3941,3,c	;volatile
 23759  012982                     l206:
 23760  012982  A665               	btfss	3941,3,c	;volatile
 23761  012984  D7FD               	goto	l207
 23762                           
 23763                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 23764  012986  0E01               	movlw	1
 23765  012988  6E2B               	movwf	_USBDeviceState,c	;volatile
 23766  01298A  0012               	return	
 23767  01298C                     __end_of_USBDeviceAttach:
 23768                           	opt stack 0
 23769                           tblptru	equ	0xFF8
 23770                           tblptrh	equ	0xFF7
 23771                           tblptrl	equ	0xFF6
 23772                           tablat	equ	0xFF5
 23773                           prodh	equ	0xFF4
 23774                           prodl	equ	0xFF3
 23775                           intcon	equ	0xFF2
 23776                           postinc0	equ	0xFEE
 23777                           wreg	equ	0xFE8
 23778                           indf1	equ	0xFE7
 23779                           postdec1	equ	0xFE5
 23780                           plusw1	equ	0xFE3
 23781                           fsr1h	equ	0xFE2
 23782                           fsr1l	equ	0xFE1
 23783                           indf2	equ	0xFDF
 23784                           postinc2	equ	0xFDE
 23785                           postdec2	equ	0xFDD
 23786                           plusw2	equ	0xFDB
 23787                           fsr2h	equ	0xFDA
 23788                           fsr2l	equ	0xFD9
 23789                           status	equ	0xFD8
 23790                           
 23791 ;; *************** function _SYSTEM_Initialize *****************
 23792 ;; Defined at:
 23793 ;;		line 39 in file "system.c"
 23794 ;; Parameters:    Size  Location     Type
 23795 ;;  state           1    wreg     enum E6623
 23796 ;; Auto vars:     Size  Location     Type
 23797 ;;  state           1    0[BANK0 ] enum E6623
 23798 ;;  pll_startup_    2    3[BANK0 ] unsigned int 
 23799 ;;  pll_startup_    2    1[BANK0 ] unsigned int 
 23800 ;; Return value:  Size  Location     Type
 23801 ;;                  1    wreg      void 
 23802 ;; Registers used:
 23803 ;;		wreg, status,2, status,0
 23804 ;; Tracked objects:
 23805 ;;		On entry : 0/0
 23806 ;;		On exit  : 0/0
 23807 ;;		Unchanged: 0/0
 23808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23810 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23812 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23813 ;;Total ram usage:        5 bytes
 23814 ;; Hardware stack levels used:    1
 23815 ;; Hardware stack levels required when called:   10
 23816 ;; This function calls:
 23817 ;;		Nothing
 23818 ;; This function is called by:
 23819 ;;		_main
 23820 ;; This function uses a non-reentrant model
 23821 ;;
 23822                           
 23823                           	psect	text80
 23824  011F62                     __ptext80:
 23825                           	opt stack 0
 23826  011F62                     _SYSTEM_Initialize:
 23827                           	opt stack 20
 23828                           
 23829                           ;incstack = 0
 23830                           ;SYSTEM_Initialize@state stored from wreg
 23831  011F62  0100               	movlb	0	; () banked
 23832  011F64  6F60               	movwf	SYSTEM_Initialize@state& (0+255),b
 23833                           
 23834                           ;system.c: 41: switch(state)
 23835  011F66  D01E               	goto	l892
 23836  011F68                     
 23837                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 23838  011F68  0E02               	movlw	2
 23839  011F6A  0100               	movlb	0	; () banked
 23840  011F6C  6F62               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 23841  011F6E  0E58               	movlw	88
 23842  011F70  6F61               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 23843                           
 23844                           ; BSR set to: 0
 23845                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 23846  011F72  8C9B               	bsf	3995,6,c	;volatile
 23847  011F74                     l21534:
 23848                           
 23849                           ; BSR set to: 0
 23850  011F74  0761               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 23851  011F76  A0D8               	btfss	status,0,c
 23852  011F78  0762               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 23853  011F7A  2961               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 23854  011F7C  E1FB               	bnz	l21534
 23855  011F7E  2962               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 23856  011F80  B4D8               	btfsc	status,2,c
 23857  011F82  0012               	return	
 23858  011F84  D7F7               	goto	l895
 23859  011F86                     
 23860                           ; BSR set to: 0
 23861                           ;system.c: 78: OSCCON = 0x70;
 23862                           
 23863                           ; BSR set to: 0
 23864  011F86  0E70               	movlw	112
 23865  011F88  6ED3               	movwf	4051,c	;volatile
 23866                           
 23867                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 23868  011F8A  0E03               	movlw	3
 23869  011F8C  6F64               	movwf	(SYSTEM_Initialize@pll_startup_counter_3117+1)& (0+255),b
 23870  011F8E  0E20               	movlw	32
 23871  011F90  6F63               	movwf	SYSTEM_Initialize@pll_startup_counter_3117& (0+255),b
 23872  011F92                     l21538:
 23873                           
 23874                           ; BSR set to: 0
 23875  011F92  0763               	decf	SYSTEM_Initialize@pll_startup_counter_3117& (0+255),f,b
 23876  011F94  A0D8               	btfss	status,0,c
 23877  011F96  0764               	decf	(SYSTEM_Initialize@pll_startup_counter_3117+1)& (0+255),f,b
 23878  011F98  2963               	incf	SYSTEM_Initialize@pll_startup_counter_3117& (0+255),w,b
 23879  011F9A  E1FB               	bnz	l21538
 23880  011F9C  2964               	incf	(SYSTEM_Initialize@pll_startup_counter_3117+1)& (0+255),w,b
 23881  011F9E  B4D8               	btfsc	status,2,c
 23882  011FA0  0012               	return	
 23883  011FA2  D7F7               	goto	l901
 23884  011FA4                     l892:
 23885                           
 23886                           ; BSR set to: 0
 23887  011FA4  0100               	movlb	0	; () banked
 23888  011FA6  5160               	movf	SYSTEM_Initialize@state& (0+255),w,b
 23889                           
 23890                           ; Switch size 1, requested type "space"
 23891                           ; Number of cases is 3, Range of values is 0 to 2
 23892                           ; switch strategies available:
 23893                           ; Name         Instructions Cycles
 23894                           ; simple_byte           10     6 (average)
 23895                           ;	Chosen strategy is simple_byte
 23896  011FA8  0A00               	xorlw	0	; case 0
 23897  011FAA  B4D8               	btfsc	status,2,c
 23898  011FAC  D7DD               	goto	l893
 23899  011FAE  0A01               	xorlw	1	; case 1
 23900  011FB0  B4D8               	btfsc	status,2,c
 23901  011FB2  0012               	return	
 23902  011FB4  0A03               	xorlw	3	; case 2
 23903  011FB6  A4D8               	btfss	status,2,c
 23904  011FB8  0012               	return	
 23905  011FBA  D7E5               	goto	l899
 23906  011FBC                     __end_of_SYSTEM_Initialize:
 23907                           	opt stack 0
 23908                           tblptru	equ	0xFF8
 23909                           tblptrh	equ	0xFF7
 23910                           tblptrl	equ	0xFF6
 23911                           tablat	equ	0xFF5
 23912                           prodh	equ	0xFF4
 23913                           prodl	equ	0xFF3
 23914                           intcon	equ	0xFF2
 23915                           postinc0	equ	0xFEE
 23916                           wreg	equ	0xFE8
 23917                           indf1	equ	0xFE7
 23918                           postdec1	equ	0xFE5
 23919                           plusw1	equ	0xFE3
 23920                           fsr1h	equ	0xFE2
 23921                           fsr1l	equ	0xFE1
 23922                           indf2	equ	0xFDF
 23923                           postinc2	equ	0xFDE
 23924                           postdec2	equ	0xFDD
 23925                           plusw2	equ	0xFDB
 23926                           fsr2h	equ	0xFDA
 23927                           fsr2l	equ	0xFD9
 23928                           status	equ	0xFD8
 23929                           
 23930 ;; *************** function _APP_DeviceMSDTasks *****************
 23931 ;; Defined at:
 23932 ;;		line 110 in file "app_device_msd.c"
 23933 ;; Parameters:    Size  Location     Type
 23934 ;;		None
 23935 ;; Auto vars:     Size  Location     Type
 23936 ;;		None
 23937 ;; Return value:  Size  Location     Type
 23938 ;;                  1    wreg      void 
 23939 ;; Registers used:
 23940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23941 ;; Tracked objects:
 23942 ;;		On entry : 0/0
 23943 ;;		On exit  : 0/0
 23944 ;;		Unchanged: 0/0
 23945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23950 ;;Total ram usage:        0 bytes
 23951 ;; Hardware stack levels used:    1
 23952 ;; Hardware stack levels required when called:   21
 23953 ;; This function calls:
 23954 ;;		_MSDTasks
 23955 ;; This function is called by:
 23956 ;;		_main
 23957 ;; This function uses a non-reentrant model
 23958 ;;
 23959                           
 23960                           	psect	text81
 23961  012C96                     __ptext81:
 23962                           	opt stack 0
 23963  012C96                     _APP_DeviceMSDTasks:
 23964                           	opt stack 9
 23965                           
 23966                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 23967                           
 23968                           ; BSR set to: 0
 23969                           ;incstack = 0
 23970  012C96  0E20               	movlw	32
 23971  012C98  602B               	cpfslt	_USBDeviceState,c	;volatile
 23972  012C9A  D001               	goto	l981
 23973  012C9C  0012               	return	
 23974  012C9E                     l981:
 23975                           
 23976                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 23977  012C9E  B265               	btfsc	3941,1,c	;volatile
 23978  012CA0  0012               	return	
 23979                           
 23980                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 23981                           
 23982                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 23983  012CA2  EC68  F06A         	call	_MSDTasks	;wreg free
 23984  012CA6  0012               	return		;funcret
 23985  012CA8                     __end_of_APP_DeviceMSDTasks:
 23986                           	opt stack 0
 23987                           tblptru	equ	0xFF8
 23988                           tblptrh	equ	0xFF7
 23989                           tblptrl	equ	0xFF6
 23990                           tablat	equ	0xFF5
 23991                           prodh	equ	0xFF4
 23992                           prodl	equ	0xFF3
 23993                           intcon	equ	0xFF2
 23994                           postinc0	equ	0xFEE
 23995                           wreg	equ	0xFE8
 23996                           indf1	equ	0xFE7
 23997                           postdec1	equ	0xFE5
 23998                           plusw1	equ	0xFE3
 23999                           fsr1h	equ	0xFE2
 24000                           fsr1l	equ	0xFE1
 24001                           indf2	equ	0xFDF
 24002                           postinc2	equ	0xFDE
 24003                           postdec2	equ	0xFDD
 24004                           plusw2	equ	0xFDB
 24005                           fsr2h	equ	0xFDA
 24006                           fsr2l	equ	0xFD9
 24007                           status	equ	0xFD8
 24008                           
 24009 ;; *************** function _MSDTasks *****************
 24010 ;; Defined at:
 24011 ;;		line 335 in file "usb_device_msd.c"
 24012 ;; Parameters:    Size  Location     Type
 24013 ;;		None
 24014 ;; Auto vars:     Size  Location     Type
 24015 ;;  i               1   81[BANK0 ] unsigned char 
 24016 ;; Return value:  Size  Location     Type
 24017 ;;                  1    wreg      unsigned char 
 24018 ;; Registers used:
 24019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24020 ;; Tracked objects:
 24021 ;;		On entry : 0/0
 24022 ;;		On exit  : 0/0
 24023 ;;		Unchanged: 0/0
 24024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24026 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24027 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24028 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24029 ;;Total ram usage:        6 bytes
 24030 ;; Hardware stack levels used:    1
 24031 ;; Hardware stack levels required when called:   20
 24032 ;; This function calls:
 24033 ;;		_MSDProcessCommand
 24034 ;;		_USBStallEndpoint
 24035 ;;		_USBTransferOnePacket
 24036 ;; This function is called by:
 24037 ;;		_APP_DeviceMSDTasks
 24038 ;; This function uses a non-reentrant model
 24039 ;;
 24040                           
 24041                           	psect	text82
 24042  00D4D0                     __ptext82:
 24043                           	opt stack 0
 24044  00D4D0                     _MSDTasks:
 24045                           	opt stack 9
 24046                           
 24047                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 24048                           
 24049                           ;incstack = 0
 24050  00D4D0  0E20               	movlw	32
 24051  00D4D2  182B               	xorwf	_USBDeviceState,w,c	;volatile
 24052  00D4D4  A4D8               	btfss	status,2,c
 24053  00D4D6  0012               	return	
 24054                           
 24055                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 24056                           
 24057                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 24058  00D4D8  98A0               	bcf	4000,4,c	;volatile
 24059                           
 24060                           ;usb_device_msd.c: 357: switch(MSD_State)
 24061  00D4DA  D114               	goto	l570
 24062  00D4DC                     
 24063                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 24064  00D4DC  0100               	movlb	0	; () banked
 24065  00D4DE  51CC               	movf	_USBMSDOutHandle& (0+255),w,b
 24066  00D4E0  11CD               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 24067  00D4E2  B4D8               	btfsc	status,2,c
 24068  00D4E4  D006               	goto	u20630
 24069                           
 24070                           ; BSR set to: 0
 24071  00D4E6  C0CC  FFD9         	movff	_USBMSDOutHandle,fsr2l
 24072  00D4EA  C0CD  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 24073  00D4EE  BEDF               	btfsc	indf2,7,c
 24074  00D4F0  D117               	goto	l586
 24075  00D4F2                     u20630:
 24076                           
 24077                           ; BSR set to: 0
 24078                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 24079                           
 24080                           ; BSR set to: 0
 24081  00D4F2  0E00               	movlw	0
 24082  00D4F4  6FB1               	movwf	MSDTasks@i& (0+255),b
 24083  00D4F6                     l20656:
 24084                           
 24085                           ; BSR set to: 0
 24086  00D4F6  0E1E               	movlw	30
 24087  00D4F8  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 24088  00D4FA  D001               	goto	l575
 24089  00D4FC  D014               	goto	u20650
 24090  00D4FE                     l575:
 24091                           
 24092                           ; BSR set to: 0
 24093                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 24094                           
 24095                           ; BSR set to: 0
 24096  00D4FE  51B1               	movf	MSDTasks@i& (0+255),w,b
 24097  00D500  0D01               	mullw	1
 24098  00D502  0E40               	movlw	64
 24099  00D504  24F3               	addwf	prodl,w,c
 24100  00D506  6ED9               	movwf	fsr2l,c
 24101  00D508  0E0D               	movlw	13
 24102  00D50A  20F4               	addwfc	prodh,w,c
 24103  00D50C  6EDA               	movwf	fsr2h,c
 24104  00D50E  51B1               	movf	MSDTasks@i& (0+255),w,b
 24105  00D510  0D01               	mullw	1
 24106  00D512  0E00               	movlw	low _gblCBW
 24107  00D514  24F3               	addwf	prodl,w,c
 24108  00D516  6EE1               	movwf	fsr1l,c
 24109  00D518  0E01               	movlw	high _gblCBW
 24110  00D51A  20F4               	addwfc	prodh,w,c
 24111  00D51C  6EE2               	movwf	fsr1h,c
 24112  00D51E  CFDF FFE7          	movff	indf2,indf1
 24113                           
 24114                           ; BSR set to: 0
 24115  00D522  2BB1               	incf	MSDTasks@i& (0+255),f,b
 24116  00D524  D7E8               	goto	l20656
 24117  00D526                     u20650:
 24118                           
 24119                           ; BSR set to: 0
 24120                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 24121                           
 24122                           ; BSR set to: 0
 24123  00D526  EE20 F001          	lfsr	2,1
 24124  00D52A  51CC               	movf	_USBMSDOutHandle& (0+255),w,b
 24125  00D52C  26D9               	addwf	fsr2l,f,c
 24126  00D52E  51CD               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 24127  00D530  22DA               	addwfc	fsr2h,f,c
 24128  00D532  0E1F               	movlw	31
 24129  00D534  18DE               	xorwf	postinc2,w,c
 24130  00D536  A4D8               	btfss	status,2,c
 24131  00D538  D071               	goto	l577
 24132                           
 24133                           ; BSR set to: 0
 24134  00D53A  0E55               	movlw	85
 24135  00D53C  0101               	movlb	1	; () banked
 24136  00D53E  1900               	xorwf	_gblCBW& (0+255),w,b
 24137  00D540  E16D               	bnz	l577
 24138  00D542  0E53               	movlw	83
 24139  00D544  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 24140  00D546  E16A               	bnz	l577
 24141  00D548  0E42               	movlw	66
 24142  00D54A  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 24143  00D54C  E167               	bnz	l20706
 24144  00D54E  0E43               	movlw	67
 24145  00D550  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 24146  00D552  A4D8               	btfss	status,2,c
 24147  00D554  D063               	goto	l577
 24148                           
 24149                           ; BSR set to: 1
 24150                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 24151  00D556  0E01               	movlw	1
 24152  00D558  6F7A               	movwf	_MSDCBWValid& (0+255),b
 24153                           
 24154                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 24155  00D55A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 24156  00D55C  A4D8               	btfss	status,2,c
 24157  00D55E  D051               	goto	l578
 24158                           
 24159                           ; BSR set to: 1
 24160  00D560  0E11               	movlw	17
 24161  00D562  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 24162  00D564  D04E               	goto	l578
 24163                           
 24164                           ; BSR set to: 1
 24165  00D566  510E               	movf	(_gblCBW+14)& (0+255),w,b
 24166  00D568  B4D8               	btfsc	status,2,c
 24167  00D56A  D04B               	goto	l578
 24168                           
 24169                           ; BSR set to: 1
 24170  00D56C  C10C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 24171  00D570  0E3F               	movlw	63
 24172  00D572  0100               	movlb	0	; () banked
 24173  00D574  17AC               	andwf	??_MSDTasks& (0+255),f,b
 24174  00D576  A4D8               	btfss	status,2,c
 24175  00D578  D044               	goto	l578
 24176                           
 24177                           ; BSR set to: 0
 24178                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 24179  00D57A  0E55               	movlw	85
 24180  00D57C  010D               	movlb	13	; () banked
 24181  00D57E  6F80               	movwf	128,b	;volatile
 24182  00D580  0E53               	movlw	83
 24183  00D582  6F81               	movwf	129,b	;volatile
 24184  00D584  0E42               	movlw	66
 24185  00D586  6F82               	movwf	130,b	;volatile
 24186  00D588  0E53               	movlw	83
 24187  00D58A  6F83               	movwf	131,b	;volatile
 24188                           
 24189                           ; BSR set to: 13
 24190                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 24191  00D58C  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 24192  00D590  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 24193  00D594  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 24194  00D598  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 24195                           
 24196                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 24197  00D59C  0E00               	movlw	0
 24198  00D59E  6F88               	movwf	136,b	;volatile
 24199  00D5A0  0E00               	movlw	0
 24200  00D5A2  6F89               	movwf	137,b	;volatile
 24201  00D5A4  0E00               	movlw	0
 24202  00D5A6  6F8A               	movwf	138,b	;volatile
 24203  00D5A8  0E00               	movlw	0
 24204  00D5AA  6F8B               	movwf	139,b	;volatile
 24205                           
 24206                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 24207  00D5AC  0E00               	movlw	0
 24208  00D5AE  6F8C               	movwf	140,b	;volatile
 24209                           
 24210                           ; BSR set to: 13
 24211                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 24212  00D5B0  0100               	movlb	0	; () banked
 24213  00D5B2  69CF               	setf	_MSDCommandState& (0+255),b
 24214                           
 24215                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 24216  00D5B4  0E00               	movlw	0
 24217  00D5B6  0101               	movlb	1	; () banked
 24218  00D5B8  6F7E               	movwf	_MSDReadState& (0+255),b
 24219                           
 24220                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 24221  00D5BA  0E00               	movlw	0
 24222  00D5BC  6E20               	movwf	_MSDWriteState,c
 24223                           
 24224                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 24225  00D5BE  0E00               	movlw	0
 24226  00D5C0  6F7D               	movwf	_MSDRetryAttempt& (0+255),b
 24227                           
 24228                           ; BSR set to: 1
 24229                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 24230  00D5C2  0E03               	movlw	3
 24231  00D5C4  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 24232  00D5C6  B4D8               	btfsc	status,2,c
 24233  00D5C8  D008               	goto	l579
 24234                           
 24235                           ; BSR set to: 1
 24236                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 24237  00D5CA  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 24238  00D5CC  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 24239  00D5CE  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 24240  00D5D0  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 24241                           
 24242                           ; BSR set to: 1
 24243                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 24244  00D5D2  0E00               	movlw	0
 24245  00D5D4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24246                           
 24247                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 24248  00D5D6  0E00               	movlw	0
 24249  00D5D8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24250  00D5DA                     l579:
 24251                           
 24252                           ; BSR set to: 1
 24253                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 24254                           
 24255                           ; BSR set to: 1
 24256  00D5DA  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 24257  00D5DC  D002               	goto	l580
 24258                           
 24259                           ; BSR set to: 1
 24260                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 24261  00D5DE  0E01               	movlw	1
 24262  00D5E0  D001               	goto	L42
 24263  00D5E2                     l580:
 24264                           
 24265                           ; BSR set to: 1
 24266                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 24267                           
 24268                           ; BSR set to: 1
 24269  00D5E2  0E02               	movlw	2
 24270  00D5E4                     L42:
 24271  00D5E4  6E21               	movwf	_MSD_State,c
 24272                           
 24273                           ; BSR set to: 1
 24274                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 24275                           
 24276                           ; BSR set to: 1
 24277  00D5E6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 24278  00D5E8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 24279  00D5EA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 24280  00D5EC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 24281  00D5EE  B4D8               	btfsc	status,2,c
 24282  00D5F0  D002               	goto	l582
 24283                           
 24284                           ; BSR set to: 1
 24285                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 24286  00D5F2  0E00               	movlw	0
 24287  00D5F4  D001               	goto	L43
 24288  00D5F6                     l582:
 24289                           
 24290                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 24291                           
 24292                           ; BSR set to: 0
 24293  00D5F6  0E01               	movlw	1
 24294  00D5F8                     L43:
 24295  00D5F8  0100               	movlb	0	; () banked
 24296  00D5FA  6FCE               	movwf	_MSDHostNoData& (0+255),b
 24297                           
 24298                           ; BSR set to: 0
 24299                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 24300                           
 24301                           ; BSR set to: 0
 24302  00D5FC  C10F  F0CF         	movff	_gblCBW+15,_MSDCommandState
 24303                           
 24304                           ;usb_device_msd.c: 454: }
 24305  00D600  D08F               	goto	l586
 24306  00D602                     l578:
 24307                           
 24308                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 24309                           
 24310                           ; BSR set to: 0
 24311  00D602  0E01               	movlw	1
 24312  00D604  0100               	movlb	0	; () banked
 24313  00D606  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 24314  00D608  0E02               	movlw	2
 24315  00D60A  EC3B  F07D         	call	_USBStallEndpoint
 24316                           
 24317                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 24318  00D60E  0E00               	movlw	0
 24319  00D610  0100               	movlb	0	; () banked
 24320  00D612  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 24321  00D614  0E02               	movlw	2
 24322  00D616  EC3B  F07D         	call	_USBStallEndpoint
 24323                           
 24324                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 24325  00D61A  D082               	goto	l586
 24326  00D61C                     l577:
 24327  00D61C                     l20706:
 24328                           
 24329                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 24330  00D61C  0E01               	movlw	1
 24331  00D61E  0100               	movlb	0	; () banked
 24332  00D620  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 24333  00D622  0E02               	movlw	2
 24334  00D624  EC3B  F07D         	call	_USBStallEndpoint
 24335                           
 24336                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 24337  00D628  0E00               	movlw	0
 24338  00D62A  0100               	movlb	0	; () banked
 24339  00D62C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 24340  00D62E  0E02               	movlw	2
 24341  00D630  EC3B  F07D         	call	_USBStallEndpoint
 24342                           
 24343                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 24344  00D634  0E00               	movlw	0
 24345  00D636  0101               	movlb	1	; () banked
 24346  00D638  6F7A               	movwf	_MSDCBWValid& (0+255),b
 24347                           
 24348                           ; BSR set to: 1
 24349                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 24350                           
 24351                           ; BSR set to: 1
 24352  00D63A  D072               	goto	l586
 24353  00D63C                     
 24354                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 24355                           
 24356                           ; BSR set to: 1
 24357  00D63C  ECCD  F078         	call	_MSDProcessCommand	;wreg free
 24358  00D640  0AFF               	xorlw	255
 24359  00D642  A4D8               	btfss	status,2,c
 24360  00D644  D06D               	goto	l586
 24361  00D646  D011               	goto	l591
 24362  00D648                     
 24363                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 24364  00D648  ECCD  F078         	call	_MSDProcessCommand	;wreg free
 24365  00D64C  0AFF               	xorlw	255
 24366  00D64E  A4D8               	btfss	status,2,c
 24367  00D650  D067               	goto	l586
 24368                           
 24369                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 24370  00D652  010D               	movlb	13	; () banked
 24371  00D654  518C               	movf	140,w,b	;volatile
 24372  00D656  A4D8               	btfss	status,2,c
 24373  00D658  D008               	goto	l591
 24374                           
 24375                           ; BSR set to: 13
 24376  00D65A  5188               	movf	136,w,b	;volatile
 24377  00D65C  1189               	iorwf	137,w,b	;volatile
 24378  00D65E  118A               	iorwf	138,w,b	;volatile
 24379  00D660  118B               	iorwf	139,w,b	;volatile
 24380  00D662  B4D8               	btfsc	status,2,c
 24381  00D664  D002               	goto	l591
 24382                           
 24383                           ; BSR set to: 13
 24384                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 24385  00D666  0E02               	movlw	2
 24386  00D668  6F8C               	movwf	140,b	;volatile
 24387  00D66A                     l591:
 24388                           
 24389                           ; BSR set to: 13
 24390                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 24391  00D66A  0E03               	movlw	3
 24392  00D66C  D03D               	goto	L41
 24393  00D66E                     
 24394                           ; BSR set to: 13
 24395  00D66E  C00B  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 24396  00D672  C00C  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 24397  00D676  0100               	movlb	0	; () banked
 24398  00D678  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 24399  00D67A  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 24400  00D67C  B4D8               	btfsc	status,2,c
 24401  00D67E  D00A               	goto	l593
 24402                           
 24403                           ; BSR set to: 0
 24404  00D680  C00B  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 24405  00D684  C00C  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 24406                           
 24407                           ; BSR set to: 0
 24408                           
 24409                           ; BSR set to: 0
 24410                           
 24411                           ; BSR set to: 0
 24412                           
 24413                           ; BSR set to: 0
 24414  00D688  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 24415  00D68C  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 24416  00D690  BEDF               	btfsc	indf2,7,c
 24417  00D692  D046               	goto	l586
 24418  00D694                     l593:
 24419                           
 24420                           ; BSR set to: 0
 24421                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 24422                           
 24423                           ; BSR set to: 0
 24424  00D694  0E01               	movlw	1
 24425  00D696  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 24426  00D698  0E80               	movlw	128
 24427  00D69A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 24428  00D69C  0E0D               	movlw	13
 24429  00D69E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 24430  00D6A0  0E0D               	movlw	13
 24431  00D6A2  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 24432  00D6A4  0E02               	movlw	2
 24433  00D6A6  ECC0  F07D         	call	_USBTransferOnePacket
 24434  00D6AA  C060  F013         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 24435  00D6AE  C061  F014         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 24436                           
 24437                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 24438  00D6B2  0100               	movlb	0	; () banked
 24439  00D6B4  51CC               	movf	_USBMSDOutHandle& (0+255),w,b
 24440  00D6B6  11CD               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 24441  00D6B8  B4D8               	btfsc	status,2,c
 24442  00D6BA  D006               	goto	u20820
 24443                           
 24444                           ; BSR set to: 0
 24445  00D6BC  C0CC  FFD9         	movff	_USBMSDOutHandle,fsr2l
 24446  00D6C0  C0CD  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 24447  00D6C4  BEDF               	btfsc	indf2,7,c
 24448  00D6C6  D00F               	goto	l602
 24449  00D6C8                     u20820:
 24450                           
 24451                           ; BSR set to: 0
 24452                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 24453                           
 24454                           ; BSR set to: 0
 24455  00D6C8  0E00               	movlw	0
 24456  00D6CA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 24457  00D6CC  0E40               	movlw	64
 24458  00D6CE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 24459  00D6D0  0E0D               	movlw	13
 24460  00D6D2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 24461  00D6D4  0E40               	movlw	64
 24462  00D6D6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 24463  00D6D8  0E02               	movlw	2
 24464  00D6DA  ECC0  F07D         	call	_USBTransferOnePacket
 24465  00D6DE  C060  F0CC         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 24466  00D6E2  C061  F0CD         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 24467  00D6E6                     l602:
 24468                           
 24469                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 24470  00D6E6  0E00               	movlw	0
 24471  00D6E8                     L41:
 24472  00D6E8  6E21               	movwf	_MSD_State,c
 24473                           
 24474                           ;usb_device_msd.c: 513: break;
 24475  00D6EA  D01A               	goto	l586
 24476  00D6EC                     
 24477                           ;usb_device_msd.c: 518: MSD_State=0x00;
 24478  00D6EC  0E00               	movlw	0
 24479  00D6EE  6E21               	movwf	_MSD_State,c
 24480                           
 24481                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 24482  00D6F0  0E02               	movlw	2
 24483  00D6F2  010D               	movlb	13	; () banked
 24484  00D6F4  6F8C               	movwf	140,b	;volatile
 24485                           
 24486                           ; BSR set to: 13
 24487                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 24488  00D6F6  0E00               	movlw	0
 24489  00D6F8  0100               	movlb	0	; () banked
 24490  00D6FA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 24491  00D6FC  0E02               	movlw	2
 24492  00D6FE  EC3B  F07D         	call	_USBStallEndpoint
 24493                           
 24494                           ;usb_device_msd.c: 521: }
 24495  00D702  D00E               	goto	l586
 24496  00D704                     l570:
 24497  00D704  5021               	movf	_MSD_State,w,c
 24498                           
 24499                           ; Switch size 1, requested type "space"
 24500                           ; Number of cases is 4, Range of values is 0 to 3
 24501                           ; switch strategies available:
 24502                           ; Name         Instructions Cycles
 24503                           ; simple_byte           13     7 (average)
 24504                           ;	Chosen strategy is simple_byte
 24505  00D706  0A00               	xorlw	0	; case 0
 24506  00D708  B4D8               	btfsc	status,2,c
 24507  00D70A  D6E8               	goto	l571
 24508  00D70C  0A01               	xorlw	1	; case 1
 24509  00D70E  B4D8               	btfsc	status,2,c
 24510  00D710  D795               	goto	l587
 24511  00D712  0A03               	xorlw	3	; case 2
 24512  00D714  B4D8               	btfsc	status,2,c
 24513  00D716  D798               	goto	l589
 24514  00D718  0A01               	xorlw	1	; case 3
 24515  00D71A  B4D8               	btfsc	status,2,c
 24516  00D71C  D7A8               	goto	l592
 24517  00D71E  D7E6               	goto	l605
 24518  00D720                     l586:
 24519                           
 24520                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 24521  00D720  88A0               	bsf	4000,4,c	;volatile
 24522                           
 24523                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 24524  00D722  0012               	return		;funcret
 24525  00D724                     __end_of_MSDTasks:
 24526                           	opt stack 0
 24527                           tblptru	equ	0xFF8
 24528                           tblptrh	equ	0xFF7
 24529                           tblptrl	equ	0xFF6
 24530                           tablat	equ	0xFF5
 24531                           prodh	equ	0xFF4
 24532                           prodl	equ	0xFF3
 24533                           intcon	equ	0xFF2
 24534                           postinc0	equ	0xFEE
 24535                           wreg	equ	0xFE8
 24536                           indf1	equ	0xFE7
 24537                           postdec1	equ	0xFE5
 24538                           plusw1	equ	0xFE3
 24539                           fsr1h	equ	0xFE2
 24540                           fsr1l	equ	0xFE1
 24541                           indf2	equ	0xFDF
 24542                           postinc2	equ	0xFDE
 24543                           postdec2	equ	0xFDD
 24544                           plusw2	equ	0xFDB
 24545                           fsr2h	equ	0xFDA
 24546                           fsr2l	equ	0xFD9
 24547                           status	equ	0xFD8
 24548                           
 24549 ;; *************** function _MSDProcessCommand *****************
 24550 ;; Defined at:
 24551 ;;		line 553 in file "usb_device_msd.c"
 24552 ;; Parameters:    Size  Location     Type
 24553 ;;		None
 24554 ;; Auto vars:     Size  Location     Type
 24555 ;;		None
 24556 ;; Return value:  Size  Location     Type
 24557 ;;                  1    wreg      unsigned char 
 24558 ;; Registers used:
 24559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24560 ;; Tracked objects:
 24561 ;;		On entry : 0/0
 24562 ;;		On exit  : 0/0
 24563 ;;		Unchanged: 0/0
 24564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24567 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24568 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24569 ;;Total ram usage:        5 bytes
 24570 ;; Hardware stack levels used:    1
 24571 ;; Hardware stack levels required when called:   19
 24572 ;; This function calls:
 24573 ;;		_ExternalFlash_MediaDetect
 24574 ;;		_ExternalFlash_MediaInitialize
 24575 ;;		_MSDProcessCommandMediaAbsent
 24576 ;;		_MSDProcessCommandMediaPresent
 24577 ;; This function is called by:
 24578 ;;		_MSDTasks
 24579 ;; This function uses a non-reentrant model
 24580 ;;
 24581                           
 24582                           	psect	text83
 24583  00F19A                     __ptext83:
 24584                           	opt stack 0
 24585  00F19A                     _MSDProcessCommand:
 24586                           	opt stack 9
 24587                           
 24588                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 24589                           
 24590                           ;incstack = 0
 24591  00F19A  C1B7  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 24592  00F19E  C1B8  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 24593  00F1A2  EE21  F0AB         	lfsr	2,_LUN+9
 24594  00F1A6  D801               	call	u19458
 24595  00F1A8  D00A               	goto	u19459
 24596  00F1AA                     u19458:
 24597  00F1AA  0005               	push	
 24598  00F1AC  6EFA               	movwf	pclath,c
 24599  00F1AE  50DE               	movf	postinc2,w,c
 24600  00F1B0  6EFD               	movwf	tosl,c
 24601  00F1B2  50DE               	movf	postinc2,w,c
 24602  00F1B4  6EFE               	movwf	tosh,c
 24603  00F1B6  50DE               	movf	postinc2,w,c
 24604  00F1B8  6EFF               	movwf	tosu,c
 24605  00F1BA  50FA               	movf	pclath,w,c
 24606  00F1BC  0012               	return		;indir
 24607  00F1BE                     u19459:
 24608  00F1BE  0900               	iorlw	0
 24609  00F1C0  B4D8               	btfsc	status,2,c
 24610  00F1C2  D00C               	goto	u19470
 24611  00F1C4  0101               	movlb	1	; () banked
 24612  00F1C6  510D               	movf	(_gblCBW+13)& (0+255),w,b
 24613  00F1C8  0D01               	mullw	1
 24614  00F1CA  0E7B               	movlw	low _SoftDetach
 24615  00F1CC  24F3               	addwf	prodl,w,c
 24616  00F1CE  6ED9               	movwf	fsr2l,c
 24617  00F1D0  0E01               	movlw	high _SoftDetach
 24618  00F1D2  20F4               	addwfc	prodh,w,c
 24619  00F1D4  6EDA               	movwf	fsr2h,c
 24620  00F1D6  04DE               	decf	postinc2,w,c
 24621  00F1D8  A4D8               	btfss	status,2,c
 24622  00F1DA  D01D               	goto	l608
 24623  00F1DC                     u19470:
 24624                           
 24625                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 24626                           
 24627                           ; BSR set to: 1
 24628  00F1DC  C10D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 24629  00F1E0  0E01               	movlw	1
 24630  00F1E2  0100               	movlb	0	; () banked
 24631  00F1E4  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 24632  00F1E6  0E00               	movlw	0
 24633  00F1E8  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 24634  00F1EA  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 24635  00F1EC  D003               	goto	u19484
 24636  00F1EE                     u19485:
 24637  00F1EE  90D8               	bcf	status,0,c
 24638  00F1F0  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 24639  00F1F2  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 24640  00F1F4                     u19484:
 24641  00F1F4  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 24642  00F1F6  D7FB               	goto	u19485
 24643  00F1F8  0100               	movlb	0	; () banked
 24644  00F1FA  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 24645  00F1FC  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 24646  00F1FE  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 24647  00F200  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 24648  00F202  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 24649  00F204  0101               	movlb	1	; () banked
 24650  00F206  1771               	andwf	_gblMediaPresent& (0+255),f,b
 24651  00F208  0100               	movlb	0	; () banked
 24652  00F20A  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 24653  00F20C  0101               	movlb	1	; () banked
 24654  00F20E  1772               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 24655                           
 24656                           ; BSR set to: 1
 24657                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 24658  00F210  EC36  F08E         	call	_MSDProcessCommandMediaAbsent	;wreg free
 24659                           
 24660                           ;usb_device_msd.c: 563: }
 24661  00F214  D058               	goto	l615
 24662  00F216                     l608:
 24663                           
 24664                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 24665  00F216  C10D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 24666  00F21A  0E01               	movlw	1
 24667  00F21C  0100               	movlb	0	; () banked
 24668  00F21E  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 24669  00F220  0E00               	movlw	0
 24670  00F222  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 24671  00F224  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 24672  00F226  D003               	goto	u19494
 24673  00F228                     u19495:
 24674  00F228  90D8               	bcf	status,0,c
 24675  00F22A  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 24676  00F22C  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 24677  00F22E                     u19494:
 24678  00F22E  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 24679  00F230  D7FB               	goto	u19495
 24680  00F232  0101               	movlb	1	; () banked
 24681  00F234  5171               	movf	_gblMediaPresent& (0+255),w,b
 24682  00F236  0100               	movlb	0	; () banked
 24683  00F238  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 24684  00F23A  0101               	movlb	1	; () banked
 24685  00F23C  5172               	movf	(_gblMediaPresent+1)& (0+255),w,b
 24686  00F23E  0100               	movlb	0	; () banked
 24687  00F240  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 24688  00F242  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 24689  00F244  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 24690  00F246  A4D8               	btfss	status,2,c
 24691  00F248  D03C               	goto	l612
 24692                           
 24693                           ; BSR set to: 0
 24694                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 24695  00F24A  C1B7  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 24696  00F24E  C1B8  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 24697  00F252  D801               	call	u19518
 24698  00F254  D00B               	goto	u19519
 24699  00F256                     u19518:
 24700  00F256  0005               	push	
 24701  00F258  6EFA               	movwf	pclath,c
 24702  00F25A  0101               	movlb	1	; () banked
 24703  00F25C  51A2               	movf	_LUN& (0+255),w,b
 24704  00F25E  6EFD               	movwf	tosl,c
 24705  00F260  51A3               	movf	(_LUN+1)& (0+255),w,b
 24706  00F262  6EFE               	movwf	tosh,c
 24707  00F264  51A4               	movf	(_LUN+2)& (0+255),w,b
 24708  00F266  6EFF               	movwf	tosu,c
 24709  00F268  50FA               	movf	pclath,w,c
 24710  00F26A  0012               	return		;indir
 24711  00F26C                     u19519:
 24712  00F26C  0100               	movlb	0	; () banked
 24713  00F26E  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 24714  00F270  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 24715  00F272  B4D8               	btfsc	status,2,c
 24716  00F274  D023               	goto	l613
 24717                           
 24718                           ; BSR set to: 0
 24719                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 24720  00F276  C10D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 24721  00F27A  0E01               	movlw	1
 24722  00F27C  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 24723  00F27E  0E00               	movlw	0
 24724  00F280  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 24725  00F282  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 24726  00F284  D003               	goto	u19534
 24727  00F286                     u19535:
 24728  00F286  90D8               	bcf	status,0,c
 24729  00F288  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 24730  00F28A  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 24731  00F28C                     u19534:
 24732  00F28C  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 24733  00F28E  D7FB               	goto	u19535
 24734  00F290  0100               	movlb	0	; () banked
 24735  00F292  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 24736  00F294  0101               	movlb	1	; () banked
 24737  00F296  1371               	iorwf	_gblMediaPresent& (0+255),f,b
 24738  00F298  0100               	movlb	0	; () banked
 24739  00F29A  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 24740  00F29C  0101               	movlb	1	; () banked
 24741  00F29E  1372               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 24742                           
 24743                           ; BSR set to: 1
 24744                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 24745  00F2A0  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24746  00F2A2  0BF0               	andlw	-16
 24747  00F2A4  0906               	iorlw	6
 24748  00F2A6  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24749                           
 24750                           ; BSR set to: 1
 24751                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 24752  00F2A8  0E28               	movlw	40
 24753  00F2AA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24754                           
 24755                           ; BSR set to: 1
 24756                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 24757  00F2AC  0E00               	movlw	0
 24758  00F2AE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24759                           
 24760                           ; BSR set to: 1
 24761                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 24762  00F2B0  0E01               	movlw	1
 24763  00F2B2  010D               	movlb	13	; () banked
 24764  00F2B4  6F8C               	movwf	140,b	;volatile
 24765                           
 24766                           ; BSR set to: 13
 24767                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 24768  00F2B6  EC8C  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 24769                           
 24770                           ;usb_device_msd.c: 589: }
 24771  00F2BA  D005               	goto	l615
 24772  00F2BC                     l613:
 24773                           
 24774                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 24775  00F2BC  EC36  F08E         	call	_MSDProcessCommandMediaAbsent	;wreg free
 24776                           
 24777                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 24778  00F2C0  D002               	goto	l615
 24779  00F2C2                     l612:
 24780                           
 24781                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 24782  00F2C2  EC8C  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 24783  00F2C6                     l615:
 24784                           
 24785                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 24786  00F2C6  0100               	movlb	0	; () banked
 24787  00F2C8  51CF               	movf	_MSDCommandState& (0+255),w,b
 24788  00F2CA  0012               	return	
 24789  00F2CC                     __end_of_MSDProcessCommand:
 24790                           	opt stack 0
 24791                           tosu	equ	0xFFF
 24792                           tosh	equ	0xFFE
 24793                           tosl	equ	0xFFD
 24794                           pclath	equ	0xFFA
 24795                           tblptru	equ	0xFF8
 24796                           tblptrh	equ	0xFF7
 24797                           tblptrl	equ	0xFF6
 24798                           tablat	equ	0xFF5
 24799                           prodh	equ	0xFF4
 24800                           prodl	equ	0xFF3
 24801                           intcon	equ	0xFF2
 24802                           postinc0	equ	0xFEE
 24803                           wreg	equ	0xFE8
 24804                           indf1	equ	0xFE7
 24805                           postdec1	equ	0xFE5
 24806                           plusw1	equ	0xFE3
 24807                           fsr1h	equ	0xFE2
 24808                           fsr1l	equ	0xFE1
 24809                           indf2	equ	0xFDF
 24810                           postinc2	equ	0xFDE
 24811                           postdec2	equ	0xFDD
 24812                           plusw2	equ	0xFDB
 24813                           fsr2h	equ	0xFDA
 24814                           fsr2l	equ	0xFD9
 24815                           status	equ	0xFD8
 24816                           
 24817 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 24818 ;; Defined at:
 24819 ;;		line 635 in file "usb_device_msd.c"
 24820 ;; Parameters:    Size  Location     Type
 24821 ;;		None
 24822 ;; Auto vars:     Size  Location     Type
 24823 ;;		None
 24824 ;; Return value:  Size  Location     Type
 24825 ;;                  1    wreg      void 
 24826 ;; Registers used:
 24827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24828 ;; Tracked objects:
 24829 ;;		On entry : 0/0
 24830 ;;		On exit  : 0/0
 24831 ;;		Unchanged: 0/0
 24832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24837 ;;Total ram usage:        0 bytes
 24838 ;; Hardware stack levels used:    1
 24839 ;; Hardware stack levels required when called:   18
 24840 ;; This function calls:
 24841 ;;		_MSDErrorHandler
 24842 ;;		_MSDProcessCommandMediaPresent
 24843 ;;		_ResetSenseData
 24844 ;; This function is called by:
 24845 ;;		_MSDProcessCommand
 24846 ;; This function uses a non-reentrant model
 24847 ;;
 24848                           
 24849                           	psect	text84
 24850  011C6C                     __ptext84:
 24851                           	opt stack 0
 24852  011C6C                     _MSDProcessCommandMediaAbsent:
 24853                           	opt stack 9
 24854                           
 24855                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 24856                           
 24857                           ; BSR set to: 0
 24858                           ;incstack = 0
 24859  011C6C  D01E               	goto	l619
 24860  011C6E                     
 24861                           ;usb_device_msd.c: 646: ResetSenseData();
 24862  011C6E  EC67  F08E         	call	_ResetSenseData	;wreg free
 24863                           
 24864                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 24865  011C72  0101               	movlb	1	; () banked
 24866  011C74  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24867  011C76  0BF0               	andlw	-16
 24868  011C78  0902               	iorlw	2
 24869  011C7A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24870                           
 24871                           ; BSR set to: 1
 24872                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 24873  011C7C  0E3A               	movlw	58
 24874  011C7E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24875                           
 24876                           ; BSR set to: 1
 24877                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 24878  011C80  0E00               	movlw	0
 24879  011C82  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24880                           
 24881                           ; BSR set to: 1
 24882                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 24883  011C84  EC8C  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 24884                           
 24885                           ;usb_device_msd.c: 655: break;
 24886  011C88  0012               	return	
 24887  011C8A                     
 24888                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 24889  011C8A  0E01               	movlw	1
 24890  011C8C  010D               	movlb	13	; () banked
 24891  011C8E  6F8C               	movwf	140,b	;volatile
 24892                           
 24893                           ; BSR set to: 13
 24894                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 24895  011C90  0100               	movlb	0	; () banked
 24896  011C92  69CF               	setf	_MSDCommandState& (0+255),b
 24897                           
 24898                           ;usb_device_msd.c: 665: break;
 24899  011C94  0012               	return	
 24900  011C96                     
 24901                           ; BSR set to: 0
 24902                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 24903                           
 24904                           ; BSR set to: 0
 24905  011C96  EC8C  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 24906                           
 24907                           ;usb_device_msd.c: 671: break;
 24908  011C9A  0012               	return	
 24909  011C9C                     
 24910                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 24911  011C9C  EC8C  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 24912                           
 24913                           ;usb_device_msd.c: 677: break;
 24914  011CA0  0012               	return	
 24915  011CA2                     
 24916                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 24917  011CA2  0E7F               	movlw	127
 24918  011CA4  EC91  F07A         	call	_MSDErrorHandler
 24919                           
 24920                           ;usb_device_msd.c: 685: }
 24921                           
 24922                           ;usb_device_msd.c: 684: break;
 24923  011CA8  0012               	return	
 24924  011CAA                     l619:
 24925  011CAA  0100               	movlb	0	; () banked
 24926  011CAC  51CF               	movf	_MSDCommandState& (0+255),w,b
 24927                           
 24928                           ; Switch size 1, requested type "space"
 24929                           ; Number of cases is 5, Range of values is 0 to 253
 24930                           ; switch strategies available:
 24931                           ; Name         Instructions Cycles
 24932                           ; simple_byte           16     9 (average)
 24933                           ;	Chosen strategy is simple_byte
 24934  011CAE  0A00               	xorlw	0	; case 0
 24935  011CB0  B4D8               	btfsc	status,2,c
 24936  011CB2  D7EB               	goto	l622
 24937  011CB4  0A03               	xorlw	3	; case 3
 24938  011CB6  B4D8               	btfsc	status,2,c
 24939  011CB8  D7DA               	goto	l620
 24940  011CBA  0A11               	xorlw	17	; case 18
 24941  011CBC  B4D8               	btfsc	status,2,c
 24942  011CBE  D7EB               	goto	l624
 24943  011CC0  0A0C               	xorlw	12	; case 30
 24944  011CC2  B4D8               	btfsc	status,2,c
 24945  011CC4  D7E2               	goto	l622
 24946  011CC6  0AE3               	xorlw	227	; case 253
 24947  011CC8  B4D8               	btfsc	status,2,c
 24948  011CCA  D7E8               	goto	l625
 24949  011CCC  D7EA               	goto	l626
 24950  011CCE                     __end_of_MSDProcessCommandMediaAbsent:
 24951                           	opt stack 0
 24952                           tosu	equ	0xFFF
 24953                           tosh	equ	0xFFE
 24954                           tosl	equ	0xFFD
 24955                           pclath	equ	0xFFA
 24956                           tblptru	equ	0xFF8
 24957                           tblptrh	equ	0xFF7
 24958                           tblptrl	equ	0xFF6
 24959                           tablat	equ	0xFF5
 24960                           prodh	equ	0xFF4
 24961                           prodl	equ	0xFF3
 24962                           intcon	equ	0xFF2
 24963                           postinc0	equ	0xFEE
 24964                           wreg	equ	0xFE8
 24965                           indf1	equ	0xFE7
 24966                           postdec1	equ	0xFE5
 24967                           plusw1	equ	0xFE3
 24968                           fsr1h	equ	0xFE2
 24969                           fsr1l	equ	0xFE1
 24970                           indf2	equ	0xFDF
 24971                           postinc2	equ	0xFDE
 24972                           postdec2	equ	0xFDD
 24973                           plusw2	equ	0xFDB
 24974                           fsr2h	equ	0xFDA
 24975                           fsr2l	equ	0xFD9
 24976                           status	equ	0xFD8
 24977                           
 24978 ;; *************** function _MSDProcessCommandMediaPresent *****************
 24979 ;; Defined at:
 24980 ;;		line 712 in file "usb_device_msd.c"
 24981 ;; Parameters:    Size  Location     Type
 24982 ;;		None
 24983 ;; Auto vars:     Size  Location     Type
 24984 ;;  capacity        4   66[BANK0 ] struct .
 24985 ;;  sectorSize      4   62[BANK0 ] struct .
 24986 ;;  i               1   70[BANK0 ] unsigned char 
 24987 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 24988 ;; Return value:  Size  Location     Type
 24989 ;;                  1    wreg      void 
 24990 ;; Registers used:
 24991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24992 ;; Tracked objects:
 24993 ;;		On entry : 0/0
 24994 ;;		On exit  : 0/0
 24995 ;;		Unchanged: 0/0
 24996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24998 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24999 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25000 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25001 ;;Total ram usage:       14 bytes
 25002 ;; Hardware stack levels used:    1
 25003 ;; Hardware stack levels required when called:   17
 25004 ;; This function calls:
 25005 ;;		_ExternalFlash_CapacityRead
 25006 ;;		_ExternalFlash_SectorSizeRead
 25007 ;;		_ExternalFlash_WriteProtectStateGet
 25008 ;;		_MSDCheckForErrorCases
 25009 ;;		_MSDComputeDeviceInAndResidue
 25010 ;;		_MSDErrorHandler
 25011 ;;		_MSDReadHandler
 25012 ;;		_MSDWriteHandler
 25013 ;;		_ResetSenseData
 25014 ;;		_USBTransferOnePacket
 25015 ;;		_memcpy
 25016 ;; This function is called by:
 25017 ;;		_MSDProcessCommand
 25018 ;;		_MSDProcessCommandMediaAbsent
 25019 ;; This function uses a non-reentrant model
 25020 ;;
 25021                           
 25022                           	psect	text85
 25023  00BD18                     __ptext85:
 25024                           	opt stack 0
 25025  00BD18                     _MSDProcessCommandMediaPresent:
 25026                           	opt stack 10
 25027                           
 25028                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 25029                           
 25030                           ;incstack = 0
 25031  00BD18  D1BF               	goto	l630
 25032  00BD1A                     
 25033                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 25034  00BD1A  ECAC  F06E         	call	_MSDReadHandler	;wreg free
 25035  00BD1E  0900               	iorlw	0
 25036  00BD20  A4D8               	btfss	status,2,c
 25037  00BD22  0012               	return	
 25038                           
 25039                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 25040  00BD24  0100               	movlb	0	; () banked
 25041  00BD26  69CF               	setf	_MSDCommandState& (0+255),b
 25042                           
 25043                           ; BSR set to: 0
 25044                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 25045  00BD28  0012               	return	
 25046  00BD2A                     
 25047                           ; BSR set to: 0
 25048                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 25049                           
 25050                           ; BSR set to: 0
 25051  00BD2A  EC2A  F065         	call	_MSDWriteHandler	;wreg free
 25052  00BD2E  0900               	iorlw	0
 25053  00BD30  A4D8               	btfss	status,2,c
 25054  00BD32  0012               	return	
 25055                           
 25056                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 25057  00BD34  0100               	movlb	0	; () banked
 25058  00BD36  69CF               	setf	_MSDCommandState& (0+255),b
 25059                           
 25060                           ; BSR set to: 0
 25061                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 25062  00BD38  0012               	return	
 25063  00BD3A                     
 25064                           ; BSR set to: 0
 25065                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 25066                           
 25067                           ; BSR set to: 0
 25068  00BD3A  05CE               	decf	_MSDHostNoData& (0+255),w,b
 25069  00BD3C  A4D8               	btfss	status,2,c
 25070  00BD3E  D002               	goto	l637
 25071                           
 25072                           ; BSR set to: 0
 25073                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 25074  00BD40  69CF               	setf	_MSDCommandState& (0+255),b
 25075                           
 25076                           ;usb_device_msd.c: 751: break;
 25077  00BD42  0012               	return	
 25078  00BD44                     l637:
 25079                           
 25080                           ; BSR set to: 0
 25081                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 25082  00BD44  C112  F012         	movff	_gblCBW+18,_TransferLength+1
 25083                           
 25084                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 25085  00BD48  C113  F011         	movff	_gblCBW+19,_TransferLength
 25086                           
 25087                           ; BSR set to: 0
 25088                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 25089  00BD4C  C011  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 25090  00BD50  C012  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 25091  00BD54  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 25092  00BD56  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 25093  00BD58  EC47  F07F         	call	_MSDCheckForErrorCases	;wreg free
 25094  00BD5C  0900               	iorlw	0
 25095  00BD5E  A4D8               	btfss	status,2,c
 25096  00BD60  0012               	return	
 25097                           
 25098                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 25099                           
 25100                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 25101  00BD62  0E00               	movlw	0
 25102  00BD64  0100               	movlb	0	; () banked
 25103  00BD66  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 25104  00BD68  0E24               	movlw	36
 25105  00BD6A  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 25106  00BD6C  EC4C  F087         	call	_MSDComputeDeviceInAndResidue	;wreg free
 25107                           
 25108                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 25109  00BD70  0E00               	movlw	0
 25110  00BD72  0100               	movlb	0	; () banked
 25111  00BD74  6F60               	movwf	memcpy@d1& (0+255),b
 25112  00BD76  0E06               	movlw	6
 25113  00BD78  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25114  00BD7A  0E60               	movlw	low _inq_resp
 25115  00BD7C  6F62               	movwf	memcpy@s1& (0+255),b
 25116  00BD7E  0EA1               	movlw	high _inq_resp
 25117  00BD80  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25118  00BD82  0E00               	movlw	0
 25119  00BD84  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25120  00BD86  0E24               	movlw	36
 25121  00BD88  6F64               	movwf	memcpy@n& (0+255),b
 25122  00BD8A  ECC9  F08E         	call	_memcpy	;wreg free
 25123                           
 25124                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 25125  00BD8E  0EFD               	movlw	253
 25126  00BD90  0100               	movlb	0	; () banked
 25127  00BD92  6FCF               	movwf	_MSDCommandState& (0+255),b
 25128                           
 25129                           ;usb_device_msd.c: 773: break;
 25130  00BD94  0012               	return	
 25131  00BD96                     
 25132                           ; BSR set to: 0
 25133                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 25134                           
 25135                           ; BSR set to: 0
 25136  00BD96  C1B7  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 25137  00BD9A  C1B8  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 25138  00BD9E  EE21  F0A5         	lfsr	2,_LUN+3
 25139  00BDA2  D801               	call	u18248
 25140  00BDA4  D00A               	goto	u18249
 25141  00BDA6                     u18248:
 25142  00BDA6  0005               	push	
 25143  00BDA8  6EFA               	movwf	pclath,c
 25144  00BDAA  50DE               	movf	postinc2,w,c
 25145  00BDAC  6EFD               	movwf	tosl,c
 25146  00BDAE  50DE               	movf	postinc2,w,c
 25147  00BDB0  6EFE               	movwf	tosh,c
 25148  00BDB2  50DE               	movf	postinc2,w,c
 25149  00BDB4  6EFF               	movwf	tosu,c
 25150  00BDB6  50FA               	movf	pclath,w,c
 25151  00BDB8  0012               	return		;indir
 25152  00BDBA                     u18249:
 25153  00BDBA  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 25154  00BDBE  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 25155  00BDC2  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 25156  00BDC6  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 25157                           
 25158                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 25159  00BDCA  C1B7  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 25160  00BDCE  C1B8  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 25161  00BDD2  EE21  F0A8         	lfsr	2,_LUN+6
 25162  00BDD6  D801               	call	u18258
 25163  00BDD8  D00A               	goto	u18259
 25164  00BDDA                     u18258:
 25165  00BDDA  0005               	push	
 25166  00BDDC  6EFA               	movwf	pclath,c
 25167  00BDDE  50DE               	movf	postinc2,w,c
 25168  00BDE0  6EFD               	movwf	tosl,c
 25169  00BDE2  50DE               	movf	postinc2,w,c
 25170  00BDE4  6EFE               	movwf	tosh,c
 25171  00BDE6  50DE               	movf	postinc2,w,c
 25172  00BDE8  6EFF               	movwf	tosu,c
 25173  00BDEA  50FA               	movf	pclath,w,c
 25174  00BDEC  0012               	return		;indir
 25175  00BDEE                     u18259:
 25176  00BDEE  0100               	movlb	0	; () banked
 25177  00BDF0  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 25178  00BDF4  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 25179  00BDF8  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 25180  00BDFA  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 25181                           
 25182                           ; BSR set to: 0
 25183                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 25184  00BDFC  EE26 F000          	lfsr	2,1536
 25185  00BE00  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 25186                           
 25187                           ; BSR set to: 0
 25188                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 25189  00BE04  EE26 F001          	lfsr	2,1537	;volatile
 25190  00BE08  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 25191                           
 25192                           ; BSR set to: 0
 25193                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 25194  00BE0C  EE26 F002          	lfsr	2,1538	;volatile
 25195  00BE10  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 25196                           
 25197                           ; BSR set to: 0
 25198                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 25199  00BE14  EE26 F003          	lfsr	2,1539	;volatile
 25200  00BE18  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 25201                           
 25202                           ; BSR set to: 0
 25203                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 25204  00BE1C  EE26 F004          	lfsr	2,1540	;volatile
 25205  00BE20  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 25206                           
 25207                           ; BSR set to: 0
 25208                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 25209  00BE24  EE26 F005          	lfsr	2,1541	;volatile
 25210  00BE28  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 25211                           
 25212                           ; BSR set to: 0
 25213                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 25214  00BE2C  EE26 F006          	lfsr	2,1542	;volatile
 25215  00BE30  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 25216                           
 25217                           ; BSR set to: 0
 25218                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 25219  00BE34  EE26 F007          	lfsr	2,1543	;volatile
 25220  00BE38  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 25221                           
 25222                           ; BSR set to: 0
 25223                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 25224  00BE3C  0E00               	movlw	0
 25225  00BE3E  6E12               	movwf	_TransferLength+1,c
 25226  00BE40  0E08               	movlw	8
 25227  00BE42  6E11               	movwf	_TransferLength,c
 25228                           
 25229                           ; BSR set to: 0
 25230                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 25231  00BE44  0E00               	movlw	0
 25232  00BE46  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 25233  00BE48  0E08               	movlw	8
 25234  00BE4A  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 25235  00BE4C  EC4C  F087         	call	_MSDComputeDeviceInAndResidue	;wreg free
 25236                           
 25237                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 25238  00BE50  0EFD               	movlw	253
 25239  00BE52  0100               	movlb	0	; () banked
 25240  00BE54  6FCF               	movwf	_MSDCommandState& (0+255),b
 25241                           
 25242                           ;usb_device_msd.c: 802: break;
 25243  00BE56  0012               	return	
 25244  00BE58                     
 25245                           ; BSR set to: 0
 25246                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 25247                           
 25248                           ; BSR set to: 0
 25249  00BE58  05CE               	decf	_MSDHostNoData& (0+255),w,b
 25250  00BE5A  A4D8               	btfss	status,2,c
 25251  00BE5C  D002               	goto	l641
 25252                           
 25253                           ; BSR set to: 0
 25254                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 25255  00BE5E  69CF               	setf	_MSDCommandState& (0+255),b
 25256                           
 25257                           ;usb_device_msd.c: 814: break;
 25258  00BE60  0012               	return	
 25259  00BE62                     l641:
 25260                           
 25261                           ; BSR set to: 0
 25262                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 25263                           
 25264                           ; BSR set to: 0
 25265  00BE62  0E00               	movlw	0
 25266  00BE64  6E12               	movwf	_TransferLength+1,c
 25267  00BE66  0E12               	movlw	18
 25268  00BE68  6E11               	movwf	_TransferLength,c
 25269                           
 25270                           ; BSR set to: 0
 25271                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 25272  00BE6A  0E00               	movlw	0
 25273  00BE6C  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 25274  00BE6E  0E12               	movlw	18
 25275  00BE70  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 25276  00BE72  EC4C  F087         	call	_MSDComputeDeviceInAndResidue	;wreg free
 25277                           
 25278                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 25279  00BE76  0E00               	movlw	0
 25280  00BE78  0100               	movlb	0	; () banked
 25281  00BE7A  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 25282  00BE7C                     l18432:
 25283                           
 25284                           ; BSR set to: 0
 25285  00BE7C  0E11               	movlw	17
 25286  00BE7E  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 25287  00BE80  D001               	goto	l642
 25288  00BE82  D014               	goto	u18280
 25289  00BE84                     l642:
 25290                           
 25291                           ; BSR set to: 0
 25292                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 25293                           
 25294                           ; BSR set to: 0
 25295  00BE84  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 25296  00BE86  0D01               	mullw	1
 25297  00BE88  0E1F               	movlw	low _gblSenseData
 25298  00BE8A  24F3               	addwf	prodl,w,c
 25299  00BE8C  6ED9               	movwf	fsr2l,c
 25300  00BE8E  0E01               	movlw	high _gblSenseData
 25301  00BE90  20F4               	addwfc	prodh,w,c
 25302  00BE92  6EDA               	movwf	fsr2h,c
 25303  00BE94  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 25304  00BE96  0D01               	mullw	1
 25305  00BE98  0E00               	movlw	0
 25306  00BE9A  24F3               	addwf	prodl,w,c
 25307  00BE9C  6EE1               	movwf	fsr1l,c
 25308  00BE9E  0E06               	movlw	6
 25309  00BEA0  20F4               	addwfc	prodh,w,c
 25310  00BEA2  6EE2               	movwf	fsr1h,c
 25311  00BEA4  CFDF FFE7          	movff	indf2,indf1
 25312                           
 25313                           ; BSR set to: 0
 25314  00BEA8  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 25315  00BEAA  D7E8               	goto	l18432
 25316  00BEAC                     u18280:
 25317                           
 25318                           ; BSR set to: 0
 25319                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 25320                           
 25321                           ; BSR set to: 0
 25322  00BEAC  0EFD               	movlw	253
 25323  00BEAE  6FCF               	movwf	_MSDCommandState& (0+255),b
 25324                           
 25325                           ;usb_device_msd.c: 827: break;
 25326  00BEB0  0012               	return	
 25327  00BEB2                     l644:
 25328                           
 25329                           ; BSR set to: 0
 25330                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 25331  00BEB2  0E03               	movlw	3
 25332  00BEB4  CFE8 F600          	movff	wreg,1536
 25333                           
 25334                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 25335  00BEB8  0E00               	movlw	0
 25336  00BEBA  CFE8 F601          	movff	wreg,1537	;volatile
 25337                           
 25338                           ; BSR set to: 0
 25339                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 25340  00BEBE  C1B7  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 25341  00BEC2  C1B8  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 25342  00BEC6  EE21  F0B1         	lfsr	2,_LUN+15
 25343  00BECA  D801               	call	u18298
 25344  00BECC  D00A               	goto	u18299
 25345  00BECE                     u18298:
 25346  00BECE  0005               	push	
 25347  00BED0  6EFA               	movwf	pclath,c
 25348  00BED2  50DE               	movf	postinc2,w,c
 25349  00BED4  6EFD               	movwf	tosl,c
 25350  00BED6  50DE               	movf	postinc2,w,c
 25351  00BED8  6EFE               	movwf	tosh,c
 25352  00BEDA  50DE               	movf	postinc2,w,c
 25353  00BEDC  6EFF               	movwf	tosu,c
 25354  00BEDE  50FA               	movf	pclath,w,c
 25355  00BEE0  0012               	return		;indir
 25356  00BEE2                     u18299:
 25357  00BEE2  0900               	iorlw	0
 25358  00BEE4  A4D8               	btfss	status,2,c
 25359  00BEE6  D005               	goto	l646
 25360  00BEE8  0E00               	movlw	0
 25361  00BEEA  0100               	movlb	0	; () banked
 25362  00BEEC  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 25363  00BEEE  0E00               	movlw	0
 25364  00BEF0  D004               	goto	L44
 25365  00BEF2                     l646:
 25366                           
 25367                           ; BSR set to: 0
 25368  00BEF2  0E00               	movlw	0
 25369  00BEF4  0100               	movlb	0	; () banked
 25370  00BEF6  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 25371  00BEF8  0E80               	movlw	128
 25372  00BEFA                     L44:
 25373  00BEFA  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 25374                           
 25375                           ; BSR set to: 0
 25376                           
 25377                           ; BSR set to: 0
 25378  00BEFC  EE26 F002          	lfsr	2,1538	;volatile
 25379  00BF00  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 25380                           
 25381                           ; BSR set to: 0
 25382                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 25383  00BF04  0E00               	movlw	0
 25384  00BF06  CFE8 F603          	movff	wreg,1539	;volatile
 25385                           
 25386                           ; BSR set to: 0
 25387                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 25388  00BF0A  0E00               	movlw	0
 25389  00BF0C  6E12               	movwf	_TransferLength+1,c
 25390  00BF0E  0E04               	movlw	4
 25391  00BF10  6E11               	movwf	_TransferLength,c
 25392                           
 25393                           ; BSR set to: 0
 25394                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 25395  00BF12  0E00               	movlw	0
 25396  00BF14  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 25397  00BF16  0E04               	movlw	4
 25398  00BF18  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 25399  00BF1A  EC4C  F087         	call	_MSDComputeDeviceInAndResidue	;wreg free
 25400                           
 25401                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 25402  00BF1E  0EFD               	movlw	253
 25403  00BF20  0100               	movlb	0	; () banked
 25404  00BF22  6FCF               	movwf	_MSDCommandState& (0+255),b
 25405                           
 25406                           ;usb_device_msd.c: 839: break;
 25407  00BF24  0012               	return	
 25408  00BF26                     
 25409                           ; BSR set to: 0
 25410                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 25411                           
 25412                           ; BSR set to: 0
 25413  00BF26  0101               	movlb	1	; () banked
 25414  00BF28  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25415  00BF2A  0BF0               	andlw	-16
 25416  00BF2C  0905               	iorlw	5
 25417  00BF2E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25418                           
 25419                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 25420  00BF30  0E20               	movlw	32
 25421  00BF32  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25422                           
 25423                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 25424  00BF34  0E00               	movlw	0
 25425  00BF36  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25426                           
 25427                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 25428  00BF38  0E01               	movlw	1
 25429  00BF3A  010D               	movlb	13	; () banked
 25430  00BF3C  6F8C               	movwf	140,b	;volatile
 25431                           
 25432                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 25433  00BF3E  0E00               	movlw	0
 25434  00BF40  6F88               	movwf	136,b	;volatile
 25435  00BF42  0E00               	movlw	0
 25436  00BF44  6F89               	movwf	137,b	;volatile
 25437  00BF46  0E00               	movlw	0
 25438  00BF48  6F8A               	movwf	138,b	;volatile
 25439  00BF4A  0E00               	movlw	0
 25440  00BF4C  6F8B               	movwf	139,b	;volatile
 25441                           
 25442                           ; BSR set to: 13
 25443                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 25444  00BF4E  0100               	movlb	0	; () banked
 25445  00BF50  69CF               	setf	_MSDCommandState& (0+255),b
 25446                           
 25447                           ;usb_device_msd.c: 848: break;
 25448  00BF52  0012               	return	
 25449  00BF54                     
 25450                           ; BSR set to: 0
 25451                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 25452                           
 25453                           ; BSR set to: 0
 25454  00BF54  0E00               	movlw	0
 25455  00BF56  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 25456  00BF58  0E00               	movlw	0
 25457  00BF5A  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 25458  00BF5C  0E00               	movlw	0
 25459  00BF5E  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 25460  00BF60  0E00               	movlw	0
 25461  00BF62  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 25462  00BF64  EC47  F07F         	call	_MSDCheckForErrorCases	;wreg free
 25463  00BF68  0900               	iorlw	0
 25464  00BF6A  A4D8               	btfss	status,2,c
 25465  00BF6C  0012               	return	
 25466                           
 25467                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 25468                           
 25469                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 25470  00BF6E  0101               	movlb	1	; () banked
 25471  00BF70  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25472  00BF72  0B0F               	andlw	15
 25473  00BF74  0A06               	xorlw	6
 25474  00BF76  A4D8               	btfss	status,2,c
 25475  00BF78  D007               	goto	l652
 25476                           
 25477                           ; BSR set to: 1
 25478  00BF7A  010D               	movlb	13	; () banked
 25479  00BF7C  058C               	decf	140,w,b	;volatile
 25480  00BF7E  A4D8               	btfss	status,2,c
 25481  00BF80  D003               	goto	l652
 25482                           
 25483                           ; BSR set to: 13
 25484                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 25485  00BF82  0100               	movlb	0	; () banked
 25486  00BF84  69CF               	setf	_MSDCommandState& (0+255),b
 25487                           
 25488                           ;usb_device_msd.c: 870: }
 25489  00BF86  0012               	return	
 25490  00BF88                     l652:
 25491                           
 25492                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 25493                           
 25494                           ; BSR set to: 0
 25495  00BF88  EC67  F08E         	call	_ResetSenseData	;wreg free
 25496                           
 25497                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 25498  00BF8C  0E00               	movlw	0
 25499  00BF8E  010D               	movlb	13	; () banked
 25500  00BF90  6F88               	movwf	136,b	;volatile
 25501  00BF92  0E00               	movlw	0
 25502  00BF94  6F89               	movwf	137,b	;volatile
 25503  00BF96  0E00               	movlw	0
 25504  00BF98  6F8A               	movwf	138,b	;volatile
 25505  00BF9A  0E00               	movlw	0
 25506  00BF9C  6F8B               	movwf	139,b	;volatile
 25507                           
 25508                           ; BSR set to: 13
 25509                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 25510  00BF9E  0100               	movlb	0	; () banked
 25511  00BFA0  69CF               	setf	_MSDCommandState& (0+255),b
 25512                           
 25513                           ; BSR set to: 0
 25514                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 25515  00BFA2  0012               	return	
 25516  00BFA4                     
 25517                           ; BSR set to: 0
 25518                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 25519                           
 25520                           ; BSR set to: 0
 25521                           
 25522                           ; BSR set to: 0
 25523  00BFA4  0E00               	movlw	0
 25524  00BFA6  010D               	movlb	13	; () banked
 25525  00BFA8  6F88               	movwf	136,b	;volatile
 25526  00BFAA  0E00               	movlw	0
 25527  00BFAC  6F89               	movwf	137,b	;volatile
 25528  00BFAE  0E00               	movlw	0
 25529  00BFB0  6F8A               	movwf	138,b	;volatile
 25530  00BFB2  0E00               	movlw	0
 25531  00BFB4  6F8B               	movwf	139,b	;volatile
 25532                           
 25533                           ; BSR set to: 13
 25534                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 25535  00BFB6  0100               	movlb	0	; () banked
 25536  00BFB8  69CF               	setf	_MSDCommandState& (0+255),b
 25537                           
 25538                           ;usb_device_msd.c: 885: break;
 25539  00BFBA  0012               	return	
 25540  00BFBC                     
 25541                           ; BSR set to: 0
 25542                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 25543                           
 25544                           ; BSR set to: 0
 25545  00BFBC  5013               	movf	_USBMSDInHandle,w,c
 25546  00BFBE  1014               	iorwf	_USBMSDInHandle+1,w,c
 25547  00BFC0  B4D8               	btfsc	status,2,c
 25548  00BFC2  D006               	goto	u18350
 25549                           
 25550                           ; BSR set to: 0
 25551  00BFC4  C013  FFD9         	movff	_USBMSDInHandle,fsr2l
 25552  00BFC8  C014  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25553  00BFCC  BEDF               	btfsc	indf2,7,c
 25554  00BFCE  0012               	return	
 25555  00BFD0                     u18350:
 25556                           
 25557                           ; BSR set to: 0
 25558                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 25559                           
 25560                           ; BSR set to: 0
 25561  00BFD0  0101               	movlb	1	; () banked
 25562  00BFD2  510B               	movf	(_gblCBW+11)& (0+255),w,b
 25563  00BFD4  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 25564  00BFD6  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 25565  00BFD8  E104               	bnz	u18360
 25566  00BFDA  0E40               	movlw	64
 25567  00BFDC  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 25568  00BFDE  A0D8               	btfss	status,0,c
 25569  00BFE0  D00B               	goto	l660
 25570  00BFE2                     u18360:
 25571                           
 25572                           ; BSR set to: 1
 25573                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 25574  00BFE2  0E40               	movlw	64
 25575  00BFE4  0100               	movlb	0	; () banked
 25576  00BFE6  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 25577                           
 25578                           ; BSR set to: 0
 25579                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 25580  00BFE8  0E40               	movlw	64
 25581  00BFEA  0101               	movlb	1	; () banked
 25582  00BFEC  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 25583  00BFEE  0E00               	movlw	0
 25584  00BFF0  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 25585  00BFF2  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 25586  00BFF4  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 25587                           
 25588                           ;usb_device_msd.c: 900: }
 25589  00BFF6  D00A               	goto	l661
 25590  00BFF8                     l660:
 25591                           
 25592                           ; BSR set to: 1
 25593                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 25594  00BFF8  C108  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 25595                           
 25596                           ; BSR set to: 1
 25597                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 25598  00BFFC  0E00               	movlw	0
 25599  00BFFE  6F08               	movwf	(_gblCBW+8)& (0+255),b
 25600  00C000  0E00               	movlw	0
 25601  00C002  6F09               	movwf	(_gblCBW+9)& (0+255),b
 25602  00C004  0E00               	movlw	0
 25603  00C006  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 25604  00C008  0E00               	movlw	0
 25605  00C00A  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 25606  00C00C                     l661:
 25607                           
 25608                           ; BSR set to: 1
 25609                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 25610                           
 25611                           ; BSR set to: 1
 25612  00C00C  0100               	movlb	0	; () banked
 25613  00C00E  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 25614  00C010  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 25615  00C012  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 25616  00C014  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 25617  00C016  5C11               	subwf	_TransferLength,w,c
 25618  00C018  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 25619  00C01A  5812               	subwfb	_TransferLength+1,w,c
 25620  00C01C  A0D8               	btfss	status,0,c
 25621  00C01E  D005               	goto	l662
 25622                           
 25623                           ; BSR set to: 0
 25624                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 25625  00C020  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 25626  00C022  5E11               	subwf	_TransferLength,f,c
 25627  00C024  0E00               	movlw	0
 25628  00C026  5A12               	subwfb	_TransferLength+1,f,c
 25629                           
 25630                           ;usb_device_msd.c: 918: }
 25631  00C028  D01A               	goto	u18390
 25632  00C02A                     l662:
 25633                           
 25634                           ; BSR set to: 0
 25635                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 25636                           
 25637                           ; BSR set to: 0
 25638  00C02A  0E00               	movlw	0
 25639  00C02C  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 25640  00C02E  D013               	goto	l664
 25641  00C030                     
 25642                           ; BSR set to: 0
 25643                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 25644                           
 25645                           ; BSR set to: 0
 25646  00C030  5011               	movf	_TransferLength,w,c
 25647  00C032  1012               	iorwf	_TransferLength+1,w,c
 25648  00C034  B4D8               	btfsc	status,2,c
 25649  00C036  D004               	goto	l666
 25650                           
 25651                           ; BSR set to: 0
 25652                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 25653  00C038  0611               	decf	_TransferLength,f,c
 25654  00C03A  A0D8               	btfss	status,0,c
 25655  00C03C  0612               	decf	_TransferLength+1,f,c
 25656                           
 25657                           ;usb_device_msd.c: 932: }
 25658  00C03E  D00A               	goto	l667
 25659  00C040                     l666:
 25660                           
 25661                           ; BSR set to: 0
 25662                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 25663                           
 25664                           ; BSR set to: 0
 25665  00C040  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 25666  00C042  0D01               	mullw	1
 25667  00C044  0E00               	movlw	0
 25668  00C046  24F3               	addwf	prodl,w,c
 25669  00C048  6ED9               	movwf	fsr2l,c
 25670  00C04A  0E06               	movlw	6
 25671  00C04C  20F4               	addwfc	prodh,w,c
 25672  00C04E  6EDA               	movwf	fsr2h,c
 25673  00C050  0E00               	movlw	0
 25674  00C052  6EDF               	movwf	indf2,c
 25675  00C054                     l667:
 25676                           
 25677                           ; BSR set to: 0
 25678                           
 25679                           ; BSR set to: 0
 25680  00C054  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 25681  00C056                     l664:
 25682                           
 25683                           ; BSR set to: 0
 25684                           
 25685                           ; BSR set to: 0
 25686  00C056  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 25687  00C058  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 25688  00C05A  A0D8               	btfss	status,0,c
 25689  00C05C  D7E9               	goto	l665
 25690  00C05E                     u18390:
 25691                           
 25692                           ; BSR set to: 0
 25693                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 25694                           
 25695                           ; BSR set to: 0
 25696                           
 25697                           ; BSR set to: 0
 25698  00C05E  0E01               	movlw	1
 25699  00C060  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 25700  00C062  0E00               	movlw	0
 25701  00C064  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 25702  00C066  0E06               	movlw	6
 25703  00C068  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 25704  00C06A  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 25705  00C06E  0E02               	movlw	2
 25706  00C070  ECC0  F07D         	call	_USBTransferOnePacket
 25707  00C074  C060  F013         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 25708  00C078  C061  F014         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 25709                           
 25710                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 25711  00C07C  0101               	movlb	1	; () banked
 25712  00C07E  5108               	movf	(_gblCBW+8)& (0+255),w,b
 25713  00C080  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 25714  00C082  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 25715  00C084  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 25716  00C086  A4D8               	btfss	status,2,c
 25717  00C088  0012               	return	
 25718                           
 25719                           ; BSR set to: 1
 25720                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 25721  00C08A  0100               	movlb	0	; () banked
 25722  00C08C  69CF               	setf	_MSDCommandState& (0+255),b
 25723                           
 25724                           ; BSR set to: 0
 25725                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 25726                           
 25727                           ; BSR set to: 0
 25728                           
 25729                           ;usb_device_msd.c: 949: break;
 25730  00C08E  0012               	return	
 25731  00C090                     
 25732                           ; BSR set to: 0
 25733                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 25734                           
 25735                           ; BSR set to: 0
 25736                           
 25737                           ;usb_device_msd.c: 954: default:
 25738                           
 25739                           ; BSR set to: 0
 25740  00C090  0E7F               	movlw	127
 25741  00C092  EC91  F07A         	call	_MSDErrorHandler
 25742                           
 25743                           ;usb_device_msd.c: 960: }
 25744                           
 25745                           ;usb_device_msd.c: 959: break;
 25746  00C096  0012               	return	
 25747  00C098                     l630:
 25748  00C098  0100               	movlb	0	; () banked
 25749  00C09A  51CF               	movf	_MSDCommandState& (0+255),w,b
 25750                           
 25751                           ; Switch size 1, requested type "space"
 25752                           ; Number of cases is 12, Range of values is 0 to 254
 25753                           ; switch strategies available:
 25754                           ; Name         Instructions Cycles
 25755                           ; simple_byte           37    19 (average)
 25756                           ;	Chosen strategy is simple_byte
 25757  00C09C  0A00               	xorlw	0	; case 0
 25758  00C09E  B4D8               	btfsc	status,2,c
 25759  00C0A0  D759               	goto	l650
 25760  00C0A2  0A03               	xorlw	3	; case 3
 25761  00C0A4  B4D8               	btfsc	status,2,c
 25762  00C0A6  D6D8               	goto	l640
 25763  00C0A8  0A11               	xorlw	17	; case 18
 25764  00C0AA  B4D8               	btfsc	status,2,c
 25765  00C0AC  D646               	goto	l636
 25766  00C0AE  0A08               	xorlw	8	; case 26
 25767  00C0B0  B4D8               	btfsc	status,2,c
 25768  00C0B2  D6FF               	goto	l644
 25769  00C0B4  0A01               	xorlw	1	; case 27
 25770  00C0B6  B4D8               	btfsc	status,2,c
 25771  00C0B8  D775               	goto	l654
 25772  00C0BA  0A05               	xorlw	5	; case 30
 25773  00C0BC  B4D8               	btfsc	status,2,c
 25774  00C0BE  D733               	goto	l649
 25775  00C0C0  0A3B               	xorlw	59	; case 37
 25776  00C0C2  B4D8               	btfsc	status,2,c
 25777  00C0C4  D668               	goto	l639
 25778  00C0C6  0A0D               	xorlw	13	; case 40
 25779  00C0C8  B4D8               	btfsc	status,2,c
 25780  00C0CA  D627               	goto	l631
 25781  00C0CC  0A02               	xorlw	2	; case 42
 25782  00C0CE  B4D8               	btfsc	status,2,c
 25783  00C0D0  D62C               	goto	l634
 25784  00C0D2  0A05               	xorlw	5	; case 47
 25785  00C0D4  B4D8               	btfsc	status,2,c
 25786  00C0D6  D766               	goto	l654
 25787  00C0D8  0AD2               	xorlw	210	; case 253
 25788  00C0DA  B4D8               	btfsc	status,2,c
 25789  00C0DC  D76F               	goto	l656
 25790  00C0DE  0A03               	xorlw	3	; case 254
 25791  00C0E0  D7D7               	goto	l670
 25792  00C0E2                     __end_of_MSDProcessCommandMediaPresent:
 25793                           	opt stack 0
 25794                           tosu	equ	0xFFF
 25795                           tosh	equ	0xFFE
 25796                           tosl	equ	0xFFD
 25797                           pclath	equ	0xFFA
 25798                           tblptru	equ	0xFF8
 25799                           tblptrh	equ	0xFF7
 25800                           tblptrl	equ	0xFF6
 25801                           tablat	equ	0xFF5
 25802                           prodh	equ	0xFF4
 25803                           prodl	equ	0xFF3
 25804                           intcon	equ	0xFF2
 25805                           postinc0	equ	0xFEE
 25806                           wreg	equ	0xFE8
 25807                           indf1	equ	0xFE7
 25808                           postdec1	equ	0xFE5
 25809                           plusw1	equ	0xFE3
 25810                           fsr1h	equ	0xFE2
 25811                           fsr1l	equ	0xFE1
 25812                           indf2	equ	0xFDF
 25813                           postinc2	equ	0xFDE
 25814                           postdec2	equ	0xFDD
 25815                           plusw2	equ	0xFDB
 25816                           fsr2h	equ	0xFDA
 25817                           fsr2l	equ	0xFD9
 25818                           status	equ	0xFD8
 25819                           
 25820 ;; *************** function _MSDWriteHandler *****************
 25821 ;; Defined at:
 25822 ;;		line 1188 in file "usb_device_msd.c"
 25823 ;; Parameters:    Size  Location     Type
 25824 ;;		None
 25825 ;; Auto vars:     Size  Location     Type
 25826 ;;		None
 25827 ;; Return value:  Size  Location     Type
 25828 ;;                  1    wreg      unsigned char 
 25829 ;; Registers used:
 25830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 25831 ;; Tracked objects:
 25832 ;;		On entry : 0/0
 25833 ;;		On exit  : 0/0
 25834 ;;		Unchanged: 0/0
 25835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25838 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25839 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25840 ;;Total ram usage:        5 bytes
 25841 ;; Hardware stack levels used:    1
 25842 ;; Hardware stack levels required when called:   13
 25843 ;; This function calls:
 25844 ;;		_ExternalFlash_SectorWrite
 25845 ;;		_ExternalFlash_WriteProtectStateGet
 25846 ;;		_MSDCheckForErrorCases
 25847 ;;		_USBStallEndpoint
 25848 ;;		_USBTransferOnePacket
 25849 ;; This function is called by:
 25850 ;;		_MSDProcessCommandMediaPresent
 25851 ;; This function uses a non-reentrant model
 25852 ;;
 25853                           
 25854                           	psect	text86
 25855  00CA54                     __ptext86:
 25856                           	opt stack 0
 25857  00CA54                     _MSDWriteHandler:
 25858                           	opt stack 13
 25859                           
 25860                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 25861                           
 25862                           ;incstack = 0
 25863  00CA54  D157               	goto	l700
 25864  00CA56                     l701:
 25865                           
 25866                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 25867  00CA56  C111  F15A         	movff	_gblCBW+17,_LBA+3
 25868                           
 25869                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 25870  00CA5A  C112  F159         	movff	_gblCBW+18,_LBA+2
 25871                           
 25872                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 25873  00CA5E  C113  F158         	movff	_gblCBW+19,_LBA+1
 25874                           
 25875                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 25876  00CA62  C114  F157         	movff	_gblCBW+20,_LBA
 25877                           
 25878                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 25879  00CA66  C116  F012         	movff	_gblCBW+22,_TransferLength+1
 25880                           
 25881                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 25882  00CA6A  C117  F011         	movff	_gblCBW+23,_TransferLength
 25883                           
 25884                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 25885  00CA6E  5011               	movf	_TransferLength,w,c
 25886  00CA70  0100               	movlb	0	; () banked
 25887  00CA72  6F71               	movwf	??_MSDWriteHandler& (0+255),b
 25888  00CA74  5012               	movf	_TransferLength+1,w,c
 25889  00CA76  6F72               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 25890  00CA78  6B73               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 25891  00CA7A  6B74               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 25892  00CA7C  0E09               	movlw	9
 25893  00CA7E                     u17555:
 25894  00CA7E  90D8               	bcf	status,0,c
 25895  00CA80  3771               	rlcf	??_MSDWriteHandler& (0+255),f,b
 25896  00CA82  3772               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 25897  00CA84  3773               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 25898  00CA86  3774               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 25899  00CA88  2EE8               	decfsz	wreg,f,c
 25900  00CA8A  D7F9               	goto	u17555
 25901  00CA8C  C071  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 25902  00CA90  C072  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 25903  00CA94  C073  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 25904  00CA98  C074  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 25905  00CA9C  EC47  F07F         	call	_MSDCheckForErrorCases	;wreg free
 25906  00CAA0  0900               	iorlw	0
 25907  00CAA2  A4D8               	btfss	status,2,c
 25908  00CAA4  D140               	goto	l703
 25909                           
 25910                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 25911                           
 25912                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 25913  00CAA6  C1B7  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 25914  00CAAA  C1B8  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 25915  00CAAE  EE21  F0B1         	lfsr	2,_LUN+15
 25916  00CAB2  D801               	call	u17578
 25917  00CAB4  D00A               	goto	u17579
 25918  00CAB6                     u17578:
 25919  00CAB6  0005               	push	
 25920  00CAB8  6EFA               	movwf	pclath,c
 25921  00CABA  50DE               	movf	postinc2,w,c
 25922  00CABC  6EFD               	movwf	tosl,c
 25923  00CABE  50DE               	movf	postinc2,w,c
 25924  00CAC0  6EFE               	movwf	tosh,c
 25925  00CAC2  50DE               	movf	postinc2,w,c
 25926  00CAC4  6EFF               	movwf	tosu,c
 25927  00CAC6  50FA               	movf	pclath,w,c
 25928  00CAC8  0012               	return		;indir
 25929  00CACA                     u17579:
 25930  00CACA  0900               	iorlw	0
 25931  00CACC  B4D8               	btfsc	status,2,c
 25932  00CACE  D016               	goto	l704
 25933                           
 25934                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 25935  00CAD0  0E01               	movlw	1
 25936  00CAD2  010D               	movlb	13	; () banked
 25937  00CAD4  6F8C               	movwf	140,b	;volatile
 25938                           
 25939                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 25940  00CAD6  0101               	movlb	1	; () banked
 25941  00CAD8  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25942  00CADA  0BF0               	andlw	-16
 25943  00CADC  0907               	iorlw	7
 25944  00CADE  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25945                           
 25946                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 25947  00CAE0  0E27               	movlw	39
 25948  00CAE2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25949                           
 25950                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 25951  00CAE4  0E00               	movlw	0
 25952  00CAE6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25953                           
 25954                           ; BSR set to: 1
 25955                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 25956  00CAE8  0E00               	movlw	0
 25957  00CAEA  0100               	movlb	0	; () banked
 25958  00CAEC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 25959  00CAEE  0E02               	movlw	2
 25960  00CAF0  EC3B  F07D         	call	_USBStallEndpoint
 25961                           
 25962                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 25963  00CAF4  0E00               	movlw	0
 25964  00CAF6  6E20               	movwf	_MSDWriteState,c
 25965                           
 25966                           ;usb_device_msd.c: 1228: return MSDWriteState;
 25967  00CAF8  5020               	movf	_MSDWriteState,w,c
 25968  00CAFA  0012               	return	
 25969  00CAFC                     l704:
 25970                           
 25971                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 25972  00CAFC  0E01               	movlw	1
 25973  00CAFE  6E21               	movwf	_MSD_State,c
 25974  00CB00                     
 25975                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 25976  00CB00  5011               	movf	_TransferLength,w,c
 25977  00CB02  1012               	iorwf	_TransferLength+1,w,c
 25978  00CB04  B4D8               	btfsc	status,2,c
 25979  00CB06  D0FB               	goto	l18076
 25980                           
 25981                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 25982                           
 25983                           ;usb_device_msd.c: 1238: break;
 25984                           
 25985                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 25986  00CB08  0E03               	movlw	3
 25987  00CB0A  6E20               	movwf	_MSDWriteState,c
 25988                           
 25989                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 25990  00CB0C  0E00               	movlw	0
 25991  00CB0E  0101               	movlb	1	; () banked
 25992  00CB10  6F75               	movwf	_ptrNextData& (0+255),b
 25993  00CB12  0E06               	movlw	6
 25994  00CB14  6F76               	movwf	(_ptrNextData+1)& (0+255),b
 25995                           
 25996                           ; BSR set to: 1
 25997                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 25998  00CB16  0E00               	movlw	0
 25999  00CB18  010D               	movlb	13	; () banked
 26000  00CB1A  6F88               	movwf	136,b	;volatile
 26001  00CB1C  0E02               	movlw	2
 26002  00CB1E  6F89               	movwf	137,b	;volatile
 26003  00CB20  0E00               	movlw	0
 26004  00CB22  6F8A               	movwf	138,b	;volatile
 26005  00CB24  0E00               	movlw	0
 26006  00CB26  6F8B               	movwf	139,b	;volatile
 26007  00CB28                     l708:
 26008                           
 26009                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 26010  00CB28  010D               	movlb	13	; () banked
 26011  00CB2A  5188               	movf	136,w,b	;volatile
 26012  00CB2C  1189               	iorwf	137,w,b	;volatile
 26013  00CB2E  118A               	iorwf	138,w,b	;volatile
 26014  00CB30  118B               	iorwf	139,w,b	;volatile
 26015  00CB32  B4D8               	btfsc	status,2,c
 26016  00CB34  D01D               	goto	l709
 26017                           
 26018                           ; BSR set to: 13
 26019                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 26020  00CB36  0100               	movlb	0	; () banked
 26021  00CB38  51CC               	movf	_USBMSDOutHandle& (0+255),w,b
 26022  00CB3A  11CD               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 26023  00CB3C  B4D8               	btfsc	status,2,c
 26024  00CB3E  D006               	goto	l710
 26025                           
 26026                           ; BSR set to: 0
 26027  00CB40  C0CC  FFD9         	movff	_USBMSDOutHandle,fsr2l
 26028  00CB44  C0CD  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 26029  00CB48  BEDF               	btfsc	indf2,7,c
 26030  00CB4A  D0ED               	goto	l703
 26031  00CB4C                     l710:
 26032                           
 26033                           ; BSR set to: 0
 26034                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 26035                           
 26036                           ; BSR set to: 0
 26037  00CB4C  0E00               	movlw	0
 26038  00CB4E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 26039  00CB50  C175  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 26040  00CB54  C176  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 26041  00CB58  0E40               	movlw	64
 26042  00CB5A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 26043  00CB5C  0E02               	movlw	2
 26044  00CB5E  ECC0  F07D         	call	_USBTransferOnePacket
 26045  00CB62  C060  F0CC         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 26046  00CB66  C061  F0CD         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 26047                           
 26048                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 26049  00CB6A  0E04               	movlw	4
 26050  00CB6C  6E20               	movwf	_MSDWriteState,c
 26051                           
 26052                           ;usb_device_msd.c: 1260: }
 26053  00CB6E  D023               	goto	l711
 26054  00CB70                     l709:
 26055                           
 26056                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 26057  00CB70  C1B7  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 26058  00CB74  C1B8  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 26059  00CB78  EE21  F0B1         	lfsr	2,_LUN+15
 26060  00CB7C  D801               	call	u17638
 26061  00CB7E  D00A               	goto	u17639
 26062  00CB80                     u17638:
 26063  00CB80  0005               	push	
 26064  00CB82  6EFA               	movwf	pclath,c
 26065  00CB84  50DE               	movf	postinc2,w,c
 26066  00CB86  6EFD               	movwf	tosl,c
 26067  00CB88  50DE               	movf	postinc2,w,c
 26068  00CB8A  6EFE               	movwf	tosh,c
 26069  00CB8C  50DE               	movf	postinc2,w,c
 26070  00CB8E  6EFF               	movwf	tosu,c
 26071  00CB90  50FA               	movf	pclath,w,c
 26072  00CB92  0012               	return		;indir
 26073  00CB94                     u17639:
 26074  00CB94  0900               	iorlw	0
 26075  00CB96  B4D8               	btfsc	status,2,c
 26076  00CB98  D00C               	goto	l712
 26077                           
 26078                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 26079  00CB9A  0E01               	movlw	1
 26080  00CB9C  010D               	movlb	13	; () banked
 26081  00CB9E  6F8C               	movwf	140,b	;volatile
 26082                           
 26083                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 26084  00CBA0  0101               	movlb	1	; () banked
 26085  00CBA2  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 26086  00CBA4  0BF0               	andlw	-16
 26087  00CBA6  0902               	iorlw	2
 26088  00CBA8  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 26089                           
 26090                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 26091  00CBAA  0E27               	movlw	39
 26092  00CBAC  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26093                           
 26094                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 26095  00CBAE  0E00               	movlw	0
 26096  00CBB0  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26097  00CBB2                     l712:
 26098                           
 26099                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 26100  00CBB2  0E02               	movlw	2
 26101  00CBB4  D0A5               	goto	L48
 26102  00CBB6                     l711:
 26103                           
 26104                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 26105                           
 26106                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 26107  00CBB6  0100               	movlb	0	; () banked
 26108  00CBB8  51CC               	movf	_USBMSDOutHandle& (0+255),w,b
 26109  00CBBA  11CD               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 26110  00CBBC  B4D8               	btfsc	status,2,c
 26111  00CBBE  D006               	goto	l714
 26112                           
 26113                           ; BSR set to: 0
 26114  00CBC0  C0CC  FFD9         	movff	_USBMSDOutHandle,fsr2l
 26115  00CBC4  C0CD  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 26116  00CBC8  BEDF               	btfsc	indf2,7,c
 26117  00CBCA  D0AD               	goto	l703
 26118  00CBCC                     l714:
 26119                           
 26120                           ; BSR set to: 0
 26121                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 26122                           
 26123                           ; BSR set to: 0
 26124  00CBCC  EE20 F001          	lfsr	2,1
 26125  00CBD0  51CC               	movf	_USBMSDOutHandle& (0+255),w,b
 26126  00CBD2  26D9               	addwf	fsr2l,f,c
 26127  00CBD4  51CD               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 26128  00CBD6  22DA               	addwfc	fsr2h,f,c
 26129  00CBD8  50DF               	movf	indf2,w,c
 26130  00CBDA  6F71               	movwf	??_MSDWriteHandler& (0+255),b
 26131  00CBDC  C071  F072         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 26132  00CBE0  6B73               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 26133  00CBE2  6B74               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 26134  00CBE4  6B75               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 26135  00CBE6  5172               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 26136  00CBE8  0101               	movlb	1	; () banked
 26137  00CBEA  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 26138  00CBEC  0100               	movlb	0	; () banked
 26139  00CBEE  5173               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 26140  00CBF0  0101               	movlb	1	; () banked
 26141  00CBF2  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 26142  00CBF4  0100               	movlb	0	; () banked
 26143  00CBF6  5174               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 26144  00CBF8  0101               	movlb	1	; () banked
 26145  00CBFA  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 26146  00CBFC  0100               	movlb	0	; () banked
 26147  00CBFE  5175               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 26148  00CC00  0101               	movlb	1	; () banked
 26149  00CC02  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 26150                           
 26151                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 26152  00CC04  0100               	movlb	0	; () banked
 26153  00CC06  EE20 F001          	lfsr	2,1
 26154  00CC0A  51CC               	movf	_USBMSDOutHandle& (0+255),w,b
 26155  00CC0C  26D9               	addwf	fsr2l,f,c
 26156  00CC0E  51CD               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 26157  00CC10  22DA               	addwfc	fsr2h,f,c
 26158  00CC12  50DF               	movf	indf2,w,c
 26159  00CC14  6F71               	movwf	??_MSDWriteHandler& (0+255),b
 26160  00CC16  C071  F072         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 26161  00CC1A  6B73               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 26162  00CC1C  6B74               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 26163  00CC1E  6B75               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 26164  00CC20  5172               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 26165  00CC22  010D               	movlb	13	; () banked
 26166  00CC24  5F88               	subwf	136,f,b	;volatile
 26167  00CC26  0100               	movlb	0	; () banked
 26168  00CC28  5173               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 26169  00CC2A  010D               	movlb	13	; () banked
 26170  00CC2C  5B89               	subwfb	137,f,b	;volatile
 26171  00CC2E  0100               	movlb	0	; () banked
 26172  00CC30  5174               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 26173  00CC32  010D               	movlb	13	; () banked
 26174  00CC34  5B8A               	subwfb	138,f,b	;volatile
 26175  00CC36  0100               	movlb	0	; () banked
 26176  00CC38  5175               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 26177  00CC3A  010D               	movlb	13	; () banked
 26178  00CC3C  5B8B               	subwfb	139,f,b	;volatile
 26179                           
 26180                           ; BSR set to: 13
 26181                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 26182  00CC3E  0E40               	movlw	64
 26183  00CC40  0101               	movlb	1	; () banked
 26184  00CC42  2775               	addwf	_ptrNextData& (0+255),f,b
 26185  00CC44  0E00               	movlw	0
 26186  00CC46  2376               	addwfc	(_ptrNextData+1)& (0+255),f,b
 26187                           
 26188                           ; BSR set to: 1
 26189                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 26190  00CC48  0E03               	movlw	3
 26191  00CC4A  D05A               	goto	L48
 26192  00CC4C                     
 26193                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 26194                           
 26195                           ; BSR set to: 1
 26196  00CC4C  010D               	movlb	13	; () banked
 26197  00CC4E  518C               	movf	140,w,b	;volatile
 26198  00CC50  A4D8               	btfss	status,2,c
 26199  00CC52  D040               	goto	l719
 26200                           
 26201                           ; BSR set to: 13
 26202                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 26203  00CC54  C1B7  F060         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 26204  00CC58  C1B8  F061         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 26205  00CC5C  C157  F062         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 26206  00CC60  C158  F063         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 26207  00CC64  C159  F064         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 26208  00CC68  C15A  F065         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 26209  00CC6C  0E00               	movlw	0
 26210  00CC6E  0100               	movlb	0	; () banked
 26211  00CC70  6F66               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 26212  00CC72  0E06               	movlw	6
 26213  00CC74  6F67               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 26214  00CC76  0101               	movlb	1	; () banked
 26215  00CC78  5157               	movf	_LBA& (0+255),w,b
 26216  00CC7A  1158               	iorwf	(_LBA+1)& (0+255),w,b
 26217  00CC7C  1159               	iorwf	(_LBA+2)& (0+255),w,b
 26218  00CC7E  115A               	iorwf	(_LBA+3)& (0+255),w,b
 26219  00CC80  A4D8               	btfss	status,2,c
 26220  00CC82  D002               	goto	u17680
 26221  00CC84  0E01               	movlw	1
 26222  00CC86  D001               	goto	u17690
 26223  00CC88                     u17680:
 26224  00CC88  0E00               	movlw	0
 26225  00CC8A                     u17690:
 26226  00CC8A  0100               	movlb	0	; () banked
 26227  00CC8C  6F68               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 26228  00CC8E  EE21  F0B4         	lfsr	2,_LUN+18
 26229  00CC92  D801               	call	u17708
 26230  00CC94  D00A               	goto	u17709
 26231  00CC96                     u17708:
 26232  00CC96  0005               	push	
 26233  00CC98  6EFA               	movwf	pclath,c
 26234  00CC9A  50DE               	movf	postinc2,w,c
 26235  00CC9C  6EFD               	movwf	tosl,c
 26236  00CC9E  50DE               	movf	postinc2,w,c
 26237  00CCA0  6EFE               	movwf	tosh,c
 26238  00CCA2  50DE               	movf	postinc2,w,c
 26239  00CCA4  6EFF               	movwf	tosu,c
 26240  00CCA6  50FA               	movf	pclath,w,c
 26241  00CCA8  0012               	return		;indir
 26242  00CCAA                     u17709:
 26243  00CCAA  06E8               	decf	wreg,f,c
 26244  00CCAC  B4D8               	btfsc	status,2,c
 26245  00CCAE  D012               	goto	l719
 26246                           
 26247                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 26248  00CCB0  0E64               	movlw	100
 26249  00CCB2  0101               	movlb	1	; () banked
 26250  00CCB4  617D               	cpfslt	_MSDRetryAttempt& (0+255),b
 26251  00CCB6  D002               	goto	l718
 26252                           
 26253                           ; BSR set to: 1
 26254                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 26255  00CCB8  2B7D               	incf	_MSDRetryAttempt& (0+255),f,b
 26256                           
 26257                           ;usb_device_msd.c: 1314: break;
 26258  00CCBA  D035               	goto	l703
 26259  00CCBC                     l718:
 26260                           
 26261                           ; BSR set to: 1
 26262                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 26263                           
 26264                           ; BSR set to: 1
 26265  00CCBC  0E01               	movlw	1
 26266  00CCBE  010D               	movlb	13	; () banked
 26267  00CCC0  6F8C               	movwf	140,b	;volatile
 26268                           
 26269                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 26270  00CCC2  0101               	movlb	1	; () banked
 26271  00CCC4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 26272  00CCC6  0BF0               	andlw	-16
 26273  00CCC8  0903               	iorlw	3
 26274  00CCCA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 26275                           
 26276                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 26277  00CCCC  0E00               	movlw	0
 26278  00CCCE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26279                           
 26280                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 26281  00CCD0  0E00               	movlw	0
 26282  00CCD2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26283  00CCD4                     l719:
 26284                           
 26285                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 26286                           
 26287                           ; BSR set to: 1
 26288                           
 26289                           ; BSR set to: 1
 26290                           
 26291                           ; BSR set to: 1
 26292  00CCD4  0E01               	movlw	1
 26293  00CCD6  0101               	movlb	1	; () banked
 26294  00CCD8  2757               	addwf	_LBA& (0+255),f,b
 26295  00CCDA  0E00               	movlw	0
 26296  00CCDC  2358               	addwfc	(_LBA+1)& (0+255),f,b
 26297  00CCDE  2359               	addwfc	(_LBA+2)& (0+255),f,b
 26298  00CCE0  235A               	addwfc	(_LBA+3)& (0+255),f,b
 26299                           
 26300                           ; BSR set to: 1
 26301                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 26302  00CCE2  0611               	decf	_TransferLength,f,c
 26303  00CCE4  A0D8               	btfss	status,0,c
 26304  00CCE6  0612               	decf	_TransferLength+1,f,c
 26305                           
 26306                           ; BSR set to: 1
 26307                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 26308  00CCE8  0E01               	movlw	1
 26309  00CCEA  D00A               	goto	L48
 26310  00CCEC                     
 26311                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 26312                           
 26313                           ; BSR set to: 1
 26314  00CCEC  0E02               	movlw	2
 26315  00CCEE  010D               	movlb	13	; () banked
 26316  00CCF0  6F8C               	movwf	140,b	;volatile
 26317                           
 26318                           ; BSR set to: 13
 26319                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 26320  00CCF2  0E00               	movlw	0
 26321  00CCF4  0100               	movlb	0	; () banked
 26322  00CCF6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 26323  00CCF8  0E02               	movlw	2
 26324  00CCFA  EC3B  F07D         	call	_USBStallEndpoint
 26325  00CCFE                     l18076:
 26326                           
 26327                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 26328  00CCFE  0E00               	movlw	0
 26329  00CD00                     L48:
 26330  00CD00  6E20               	movwf	_MSDWriteState,c
 26331                           
 26332                           ;usb_device_msd.c: 1345: }
 26333                           
 26334                           ;usb_device_msd.c: 1344: break;
 26335  00CD02  D011               	goto	l703
 26336  00CD04                     l700:
 26337  00CD04  5020               	movf	_MSDWriteState,w,c
 26338                           
 26339                           ; Switch size 1, requested type "space"
 26340                           ; Number of cases is 5, Range of values is 0 to 4
 26341                           ; switch strategies available:
 26342                           ; Name         Instructions Cycles
 26343                           ; simple_byte           16     9 (average)
 26344                           ;	Chosen strategy is simple_byte
 26345  00CD06  0A00               	xorlw	0	; case 0
 26346  00CD08  B4D8               	btfsc	status,2,c
 26347  00CD0A  D6A5               	goto	l701
 26348  00CD0C  0A01               	xorlw	1	; case 1
 26349  00CD0E  B4D8               	btfsc	status,2,c
 26350  00CD10  D6F7               	goto	l706
 26351  00CD12  0A03               	xorlw	3	; case 2
 26352  00CD14  B4D8               	btfsc	status,2,c
 26353  00CD16  D79A               	goto	l715
 26354  00CD18  0A01               	xorlw	1	; case 3
 26355  00CD1A  B4D8               	btfsc	status,2,c
 26356  00CD1C  D705               	goto	l708
 26357  00CD1E  0A07               	xorlw	7	; case 4
 26358  00CD20  B4D8               	btfsc	status,2,c
 26359  00CD22  D749               	goto	l711
 26360  00CD24  D7E3               	goto	l720
 26361  00CD26                     l703:
 26362                           
 26363                           ;usb_device_msd.c: 1347: return MSDWriteState;
 26364  00CD26  5020               	movf	_MSDWriteState,w,c
 26365  00CD28  0012               	return	
 26366  00CD2A                     __end_of_MSDWriteHandler:
 26367                           	opt stack 0
 26368                           tosu	equ	0xFFF
 26369                           tosh	equ	0xFFE
 26370                           tosl	equ	0xFFD
 26371                           pclath	equ	0xFFA
 26372                           tblptru	equ	0xFF8
 26373                           tblptrh	equ	0xFF7
 26374                           tblptrl	equ	0xFF6
 26375                           tablat	equ	0xFF5
 26376                           prodh	equ	0xFF4
 26377                           prodl	equ	0xFF3
 26378                           intcon	equ	0xFF2
 26379                           postinc0	equ	0xFEE
 26380                           wreg	equ	0xFE8
 26381                           indf1	equ	0xFE7
 26382                           postdec1	equ	0xFE5
 26383                           plusw1	equ	0xFE3
 26384                           fsr1h	equ	0xFE2
 26385                           fsr1l	equ	0xFE1
 26386                           indf2	equ	0xFDF
 26387                           postinc2	equ	0xFDE
 26388                           postdec2	equ	0xFDD
 26389                           plusw2	equ	0xFDB
 26390                           fsr2h	equ	0xFDA
 26391                           fsr2l	equ	0xFD9
 26392                           status	equ	0xFD8
 26393                           
 26394 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 26395 ;; Defined at:
 26396 ;;		line 34 in file "external_flash.c"
 26397 ;; Parameters:    Size  Location     Type
 26398 ;;  config          2    0[BANK0 ] PTR void 
 26399 ;;		 -> NULL(0), 
 26400 ;; Auto vars:     Size  Location     Type
 26401 ;;		None
 26402 ;; Return value:  Size  Location     Type
 26403 ;;                  1    wreg      unsigned char 
 26404 ;; Registers used:
 26405 ;;		wreg
 26406 ;; Tracked objects:
 26407 ;;		On entry : 0/0
 26408 ;;		On exit  : 0/0
 26409 ;;		Unchanged: 0/0
 26410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26411 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26414 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26415 ;;Total ram usage:        2 bytes
 26416 ;; Hardware stack levels used:    1
 26417 ;; Hardware stack levels required when called:   10
 26418 ;; This function calls:
 26419 ;;		Nothing
 26420 ;; This function is called by:
 26421 ;;		_MSDWriteHandler
 26422 ;;		_MSDProcessCommandMediaPresent
 26423 ;; This function uses a non-reentrant model
 26424 ;;
 26425                           
 26426                           	psect	text87
 26427  012D1E                     __ptext87:
 26428                           	opt stack 0
 26429  012D1E                     _ExternalFlash_WriteProtectStateGet:
 26430                           	opt stack 15
 26431                           
 26432                           ;external_flash.c: 37: return 0;
 26433                           
 26434                           ;incstack = 0
 26435  012D1E  0E00               	movlw	0
 26436  012D20  0012               	return	
 26437  012D22                     __end_of_ExternalFlash_WriteProtectStateGet:
 26438                           	opt stack 0
 26439                           tosu	equ	0xFFF
 26440                           tosh	equ	0xFFE
 26441                           tosl	equ	0xFFD
 26442                           pclath	equ	0xFFA
 26443                           tblptru	equ	0xFF8
 26444                           tblptrh	equ	0xFF7
 26445                           tblptrl	equ	0xFF6
 26446                           tablat	equ	0xFF5
 26447                           prodh	equ	0xFF4
 26448                           prodl	equ	0xFF3
 26449                           intcon	equ	0xFF2
 26450                           postinc0	equ	0xFEE
 26451                           wreg	equ	0xFE8
 26452                           indf1	equ	0xFE7
 26453                           postdec1	equ	0xFE5
 26454                           plusw1	equ	0xFE3
 26455                           fsr1h	equ	0xFE2
 26456                           fsr1l	equ	0xFE1
 26457                           indf2	equ	0xFDF
 26458                           postinc2	equ	0xFDE
 26459                           postdec2	equ	0xFDD
 26460                           plusw2	equ	0xFDB
 26461                           fsr2h	equ	0xFDA
 26462                           fsr2l	equ	0xFD9
 26463                           status	equ	0xFD8
 26464                           
 26465 ;; *************** function _ExternalFlash_SectorWrite *****************
 26466 ;; Defined at:
 26467 ;;		line 56 in file "external_flash.c"
 26468 ;; Parameters:    Size  Location     Type
 26469 ;;  config          2    0[BANK0 ] PTR void 
 26470 ;;		 -> NULL(0), 
 26471 ;;  sector_addr     4    2[BANK0 ] unsigned long 
 26472 ;;  buffer          2    6[BANK0 ] PTR unsigned char 
 26473 ;;		 -> msd_buffer(512), 
 26474 ;;  allowWriteTo    1    8[BANK0 ] unsigned char 
 26475 ;; Auto vars:     Size  Location     Type
 26476 ;;		None
 26477 ;; Return value:  Size  Location     Type
 26478 ;;                  1    wreg      unsigned char 
 26479 ;; Registers used:
 26480 ;;		wreg
 26481 ;; Tracked objects:
 26482 ;;		On entry : 0/0
 26483 ;;		On exit  : 0/0
 26484 ;;		Unchanged: 0/0
 26485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26486 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26489 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26490 ;;Total ram usage:        9 bytes
 26491 ;; Hardware stack levels used:    1
 26492 ;; Hardware stack levels required when called:   10
 26493 ;; This function calls:
 26494 ;;		Nothing
 26495 ;; This function is called by:
 26496 ;;		_MSDWriteHandler
 26497 ;; This function uses a non-reentrant model
 26498 ;;
 26499                           
 26500                           	psect	text88
 26501  012D22                     __ptext88:
 26502                           	opt stack 0
 26503  012D22                     _ExternalFlash_SectorWrite:
 26504                           	opt stack 15
 26505                           
 26506                           ;external_flash.c: 69: return 1;
 26507                           
 26508                           ;incstack = 0
 26509  012D22  0E01               	movlw	1
 26510  012D24  0012               	return	
 26511  012D26                     __end_of_ExternalFlash_SectorWrite:
 26512                           	opt stack 0
 26513                           tosu	equ	0xFFF
 26514                           tosh	equ	0xFFE
 26515                           tosl	equ	0xFFD
 26516                           pclath	equ	0xFFA
 26517                           tblptru	equ	0xFF8
 26518                           tblptrh	equ	0xFF7
 26519                           tblptrl	equ	0xFF6
 26520                           tablat	equ	0xFF5
 26521                           prodh	equ	0xFF4
 26522                           prodl	equ	0xFF3
 26523                           intcon	equ	0xFF2
 26524                           postinc0	equ	0xFEE
 26525                           wreg	equ	0xFE8
 26526                           indf1	equ	0xFE7
 26527                           postdec1	equ	0xFE5
 26528                           plusw1	equ	0xFE3
 26529                           fsr1h	equ	0xFE2
 26530                           fsr1l	equ	0xFE1
 26531                           indf2	equ	0xFDF
 26532                           postinc2	equ	0xFDE
 26533                           postdec2	equ	0xFDD
 26534                           plusw2	equ	0xFDB
 26535                           fsr2h	equ	0xFDA
 26536                           fsr2l	equ	0xFD9
 26537                           status	equ	0xFD8
 26538                           
 26539 ;; *************** function _MSDReadHandler *****************
 26540 ;; Defined at:
 26541 ;;		line 1038 in file "usb_device_msd.c"
 26542 ;; Parameters:    Size  Location     Type
 26543 ;;		None
 26544 ;; Auto vars:     Size  Location     Type
 26545 ;;		None
 26546 ;; Return value:  Size  Location     Type
 26547 ;;                  1    wreg      unsigned char 
 26548 ;; Registers used:
 26549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26550 ;; Tracked objects:
 26551 ;;		On entry : 0/0
 26552 ;;		On exit  : 0/0
 26553 ;;		Unchanged: 0/0
 26554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26557 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26558 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26559 ;;Total ram usage:        4 bytes
 26560 ;; Hardware stack levels used:    1
 26561 ;; Hardware stack levels required when called:   16
 26562 ;; This function calls:
 26563 ;;		_ExternalFlash_SectorRead
 26564 ;;		_MSDCheckForErrorCases
 26565 ;;		_USBStallEndpoint
 26566 ;;		_USBTransferOnePacket
 26567 ;; This function is called by:
 26568 ;;		_MSDProcessCommandMediaPresent
 26569 ;; This function uses a non-reentrant model
 26570 ;;
 26571                           
 26572                           	psect	text89
 26573  00DD58                     __ptext89:
 26574                           	opt stack 0
 26575  00DD58                     _MSDReadHandler:
 26576                           	opt stack 10
 26577                           
 26578                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 26579                           
 26580                           ;incstack = 0
 26581  00DD58  D0DC               	goto	l681
 26582  00DD5A                     l682:
 26583                           
 26584                           ; BSR set to: 1
 26585                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 26586  00DD5A  C111  F15A         	movff	_gblCBW+17,_LBA+3
 26587                           
 26588                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 26589  00DD5E  C112  F159         	movff	_gblCBW+18,_LBA+2
 26590                           
 26591                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 26592  00DD62  C113  F158         	movff	_gblCBW+19,_LBA+1
 26593                           
 26594                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 26595  00DD66  C114  F157         	movff	_gblCBW+20,_LBA
 26596                           
 26597                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 26598  00DD6A  C116  F012         	movff	_gblCBW+22,_TransferLength+1
 26599                           
 26600                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 26601  00DD6E  C117  F011         	movff	_gblCBW+23,_TransferLength
 26602                           
 26603                           ; BSR set to: 1
 26604                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 26605  00DD72  5011               	movf	_TransferLength,w,c
 26606  00DD74  0100               	movlb	0	; () banked
 26607  00DD76  6F95               	movwf	??_MSDReadHandler& (0+255),b
 26608  00DD78  5012               	movf	_TransferLength+1,w,c
 26609  00DD7A  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 26610  00DD7C  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 26611  00DD7E  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 26612  00DD80  0E09               	movlw	9
 26613  00DD82                     u17445:
 26614  00DD82  90D8               	bcf	status,0,c
 26615  00DD84  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 26616  00DD86  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 26617  00DD88  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 26618  00DD8A  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 26619  00DD8C  2EE8               	decfsz	wreg,f,c
 26620  00DD8E  D7F9               	goto	u17445
 26621  00DD90  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 26622  00DD94  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 26623  00DD98  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 26624  00DD9C  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 26625  00DDA0  EC47  F07F         	call	_MSDCheckForErrorCases	;wreg free
 26626  00DDA4  0900               	iorlw	0
 26627  00DDA6  A4D8               	btfss	status,2,c
 26628  00DDA8  D0C6               	goto	l684
 26629                           
 26630                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 26631                           
 26632                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 26633  00DDAA  0E01               	movlw	1
 26634  00DDAC  0101               	movlb	1	; () banked
 26635  00DDAE  6F7E               	movwf	_MSDReadState& (0+255),b
 26636  00DDB0                     
 26637                           ; BSR set to: 1
 26638                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 26639                           
 26640                           ; BSR set to: 1
 26641  00DDB0  5011               	movf	_TransferLength,w,c
 26642  00DDB2  1012               	iorwf	_TransferLength+1,w,c
 26643  00DDB4  A4D8               	btfss	status,2,c
 26644  00DDB6  D002               	goto	l686
 26645                           
 26646                           ; BSR set to: 1
 26647                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 26648  00DDB8  0E00               	movlw	0
 26649  00DDBA  D04A               	goto	L49
 26650  00DDBC                     l686:
 26651                           
 26652                           ; BSR set to: 1
 26653                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 26654                           
 26655                           ; BSR set to: 1
 26656  00DDBC  0611               	decf	_TransferLength,f,c
 26657  00DDBE  A0D8               	btfss	status,0,c
 26658  00DDC0  0612               	decf	_TransferLength+1,f,c
 26659                           
 26660                           ; BSR set to: 1
 26661                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 26662  00DDC2  0E02               	movlw	2
 26663  00DDC4  6F7E               	movwf	_MSDReadState& (0+255),b
 26664  00DDC6                     
 26665                           ; BSR set to: 1
 26666                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 26667                           
 26668                           ; BSR set to: 1
 26669  00DDC6  5013               	movf	_USBMSDInHandle,w,c
 26670  00DDC8  1014               	iorwf	_USBMSDInHandle+1,w,c
 26671  00DDCA  B4D8               	btfsc	status,2,c
 26672  00DDCC  D006               	goto	l688
 26673                           
 26674                           ; BSR set to: 1
 26675  00DDCE  C013  FFD9         	movff	_USBMSDInHandle,fsr2l
 26676  00DDD2  C014  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 26677  00DDD6  BEDF               	btfsc	indf2,7,c
 26678  00DDD8  D0AE               	goto	l684
 26679  00DDDA                     l688:
 26680                           
 26681                           ; BSR set to: 1
 26682                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 26683                           
 26684                           ; BSR set to: 1
 26685  00DDDA  C1B7  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 26686  00DDDE  C1B8  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 26687  00DDE2  C157  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 26688  00DDE6  C158  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 26689  00DDEA  C159  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 26690  00DDEE  C15A  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 26691  00DDF2  0E00               	movlw	0
 26692  00DDF4  0100               	movlb	0	; () banked
 26693  00DDF6  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 26694  00DDF8  0E06               	movlw	6
 26695  00DDFA  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 26696  00DDFC  EE21  F0AE         	lfsr	2,_LUN+12
 26697  00DE00  D801               	call	u17498
 26698  00DE02  D00A               	goto	u17499
 26699  00DE04                     u17498:
 26700  00DE04  0005               	push	
 26701  00DE06  6EFA               	movwf	pclath,c
 26702  00DE08  50DE               	movf	postinc2,w,c
 26703  00DE0A  6EFD               	movwf	tosl,c
 26704  00DE0C  50DE               	movf	postinc2,w,c
 26705  00DE0E  6EFE               	movwf	tosh,c
 26706  00DE10  50DE               	movf	postinc2,w,c
 26707  00DE12  6EFF               	movwf	tosu,c
 26708  00DE14  50FA               	movf	pclath,w,c
 26709  00DE16  0012               	return		;indir
 26710  00DE18                     u17499:
 26711  00DE18  06E8               	decf	wreg,f,c
 26712  00DE1A  B4D8               	btfsc	status,2,c
 26713  00DE1C  D01B               	goto	l691
 26714                           
 26715                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 26716  00DE1E  0E64               	movlw	100
 26717  00DE20  0101               	movlb	1	; () banked
 26718  00DE22  617D               	cpfslt	_MSDRetryAttempt& (0+255),b
 26719  00DE24  D002               	goto	l690
 26720                           
 26721                           ; BSR set to: 1
 26722                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 26723  00DE26  2B7D               	incf	_MSDRetryAttempt& (0+255),f,b
 26724                           
 26725                           ;usb_device_msd.c: 1088: break;
 26726  00DE28  D086               	goto	l684
 26727  00DE2A                     l690:
 26728                           
 26729                           ; BSR set to: 1
 26730                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 26731                           
 26732                           ; BSR set to: 1
 26733  00DE2A  0E02               	movlw	2
 26734  00DE2C  010D               	movlb	13	; () banked
 26735  00DE2E  6F8C               	movwf	140,b	;volatile
 26736                           
 26737                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 26738  00DE30  0101               	movlb	1	; () banked
 26739  00DE32  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 26740  00DE34  0BF0               	andlw	-16
 26741  00DE36  0903               	iorlw	3
 26742  00DE38  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 26743                           
 26744                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 26745  00DE3A  0E00               	movlw	0
 26746  00DE3C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26747                           
 26748                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 26749  00DE3E  0E00               	movlw	0
 26750  00DE40  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26751                           
 26752                           ; BSR set to: 1
 26753                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 26754  00DE42  0E01               	movlw	1
 26755  00DE44  0100               	movlb	0	; () banked
 26756  00DE46  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 26757  00DE48  0E02               	movlw	2
 26758  00DE4A  EC3B  F07D         	call	_USBStallEndpoint
 26759  00DE4E  D05E               	goto	l17988
 26760  00DE50                     L49:
 26761  00DE50  6F7E               	movwf	_MSDReadState& (0+255),b
 26762                           
 26763                           ;usb_device_msd.c: 1109: break;
 26764  00DE52  D071               	goto	l684
 26765  00DE54                     l691:
 26766                           
 26767                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 26768                           
 26769                           ; BSR set to: 1
 26770                           
 26771                           ; BSR set to: 1
 26772  00DE54  0E01               	movlw	1
 26773  00DE56  0101               	movlb	1	; () banked
 26774  00DE58  2757               	addwf	_LBA& (0+255),f,b
 26775  00DE5A  0E00               	movlw	0
 26776  00DE5C  2358               	addwfc	(_LBA+1)& (0+255),f,b
 26777  00DE5E  2359               	addwfc	(_LBA+2)& (0+255),f,b
 26778  00DE60  235A               	addwfc	(_LBA+3)& (0+255),f,b
 26779                           
 26780                           ; BSR set to: 1
 26781                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 26782  00DE62  0E00               	movlw	0
 26783  00DE64  010D               	movlb	13	; () banked
 26784  00DE66  6F88               	movwf	136,b	;volatile
 26785  00DE68  0E02               	movlw	2
 26786  00DE6A  6F89               	movwf	137,b	;volatile
 26787  00DE6C  0E00               	movlw	0
 26788  00DE6E  6F8A               	movwf	138,b	;volatile
 26789  00DE70  0E00               	movlw	0
 26790  00DE72  6F8B               	movwf	139,b	;volatile
 26791                           
 26792                           ; BSR set to: 13
 26793                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 26794  00DE74  0E00               	movlw	0
 26795  00DE76  0101               	movlb	1	; () banked
 26796  00DE78  6F75               	movwf	_ptrNextData& (0+255),b
 26797  00DE7A  0E06               	movlw	6
 26798  00DE7C  6F76               	movwf	(_ptrNextData+1)& (0+255),b
 26799                           
 26800                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 26801  00DE7E  0E03               	movlw	3
 26802  00DE80  6F7E               	movwf	_MSDReadState& (0+255),b
 26803  00DE82                     
 26804                           ; BSR set to: 1
 26805                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 26806                           
 26807                           ; BSR set to: 1
 26808  00DE82  010D               	movlb	13	; () banked
 26809  00DE84  5188               	movf	136,w,b	;volatile
 26810  00DE86  1189               	iorwf	137,w,b	;volatile
 26811  00DE88  118A               	iorwf	138,w,b	;volatile
 26812  00DE8A  118B               	iorwf	139,w,b	;volatile
 26813  00DE8C  A4D8               	btfss	status,2,c
 26814  00DE8E  D002               	goto	l693
 26815                           
 26816                           ; BSR set to: 13
 26817                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 26818  00DE90  0E01               	movlw	1
 26819  00DE92  D03D               	goto	L51
 26820  00DE94                     l693:
 26821                           
 26822                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 26823                           
 26824                           ; BSR set to: 1
 26825  00DE94  0E04               	movlw	4
 26826  00DE96  0101               	movlb	1	; () banked
 26827  00DE98  6F7E               	movwf	_MSDReadState& (0+255),b
 26828  00DE9A                     
 26829                           ; BSR set to: 1
 26830                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 26831                           
 26832                           ; BSR set to: 1
 26833  00DE9A  5013               	movf	_USBMSDInHandle,w,c
 26834  00DE9C  1014               	iorwf	_USBMSDInHandle+1,w,c
 26835  00DE9E  B4D8               	btfsc	status,2,c
 26836  00DEA0  D006               	goto	l695
 26837                           
 26838                           ; BSR set to: 1
 26839  00DEA2  C013  FFD9         	movff	_USBMSDInHandle,fsr2l
 26840  00DEA6  C014  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 26841  00DEAA  BEDF               	btfsc	indf2,7,c
 26842  00DEAC  D044               	goto	l684
 26843  00DEAE                     l695:
 26844                           
 26845                           ; BSR set to: 1
 26846                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 26847                           
 26848                           ; BSR set to: 1
 26849  00DEAE  0E01               	movlw	1
 26850  00DEB0  0100               	movlb	0	; () banked
 26851  00DEB2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 26852  00DEB4  C175  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 26853  00DEB8  C176  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 26854  00DEBC  0E40               	movlw	64
 26855  00DEBE  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 26856  00DEC0  0E02               	movlw	2
 26857  00DEC2  ECC0  F07D         	call	_USBTransferOnePacket
 26858  00DEC6  C060  F013         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 26859  00DECA  C061  F014         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 26860                           
 26861                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 26862  00DECE  0E03               	movlw	3
 26863  00DED0  0101               	movlb	1	; () banked
 26864  00DED2  6F7E               	movwf	_MSDReadState& (0+255),b
 26865                           
 26866                           ; BSR set to: 1
 26867                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 26868  00DED4  0E40               	movlw	64
 26869  00DED6  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 26870  00DED8  0E00               	movlw	0
 26871  00DEDA  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 26872  00DEDC  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 26873  00DEDE  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 26874                           
 26875                           ; BSR set to: 1
 26876                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 26877  00DEE0  0E40               	movlw	64
 26878  00DEE2  010D               	movlb	13	; () banked
 26879  00DEE4  5F88               	subwf	136,f,b	;volatile
 26880  00DEE6  0E00               	movlw	0
 26881  00DEE8  5B89               	subwfb	137,f,b	;volatile
 26882  00DEEA  5B8A               	subwfb	138,f,b	;volatile
 26883  00DEEC  5B8B               	subwfb	139,f,b	;volatile
 26884                           
 26885                           ; BSR set to: 13
 26886                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 26887  00DEEE  0E40               	movlw	64
 26888  00DEF0  0101               	movlb	1	; () banked
 26889  00DEF2  2775               	addwf	_ptrNextData& (0+255),f,b
 26890  00DEF4  0E00               	movlw	0
 26891  00DEF6  2376               	addwfc	(_ptrNextData+1)& (0+255),f,b
 26892                           
 26893                           ;usb_device_msd.c: 1149: break;
 26894  00DEF8  D01E               	goto	l684
 26895  00DEFA                     
 26896                           ; BSR set to: 1
 26897                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 26898                           
 26899                           ; BSR set to: 1
 26900  00DEFA  0E02               	movlw	2
 26901  00DEFC  010D               	movlb	13	; () banked
 26902  00DEFE  6F8C               	movwf	140,b	;volatile
 26903                           
 26904                           ; BSR set to: 13
 26905                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 26906  00DF00  0E01               	movlw	1
 26907  00DF02  0100               	movlb	0	; () banked
 26908  00DF04  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 26909  00DF06  0E02               	movlw	2
 26910  00DF08  EC3B  F07D         	call	_USBStallEndpoint
 26911  00DF0C                     l17988:
 26912                           
 26913                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 26914  00DF0C  0E00               	movlw	0
 26915  00DF0E                     L51:
 26916  00DF0E  0101               	movlb	1	; () banked
 26917  00DF10  D79F               	goto	L49
 26918  00DF12                     l681:
 26919                           
 26920                           ; BSR set to: 1
 26921  00DF12  0101               	movlb	1	; () banked
 26922  00DF14  517E               	movf	_MSDReadState& (0+255),w,b
 26923                           
 26924                           ; Switch size 1, requested type "space"
 26925                           ; Number of cases is 5, Range of values is 0 to 4
 26926                           ; switch strategies available:
 26927                           ; Name         Instructions Cycles
 26928                           ; simple_byte           16     9 (average)
 26929                           ;	Chosen strategy is simple_byte
 26930  00DF16  0A00               	xorlw	0	; case 0
 26931  00DF18  B4D8               	btfsc	status,2,c
 26932  00DF1A  D71F               	goto	l682
 26933  00DF1C  0A01               	xorlw	1	; case 1
 26934  00DF1E  B4D8               	btfsc	status,2,c
 26935  00DF20  D747               	goto	l685
 26936  00DF22  0A03               	xorlw	3	; case 2
 26937  00DF24  B4D8               	btfsc	status,2,c
 26938  00DF26  D74F               	goto	l687
 26939  00DF28  0A01               	xorlw	1	; case 3
 26940  00DF2A  B4D8               	btfsc	status,2,c
 26941  00DF2C  D7AA               	goto	l692
 26942  00DF2E  0A07               	xorlw	7	; case 4
 26943  00DF30  B4D8               	btfsc	status,2,c
 26944  00DF32  D7B3               	goto	l694
 26945  00DF34  D7E2               	goto	l696
 26946  00DF36                     l684:
 26947                           
 26948                           ;usb_device_msd.c: 1161: return MSDReadState;
 26949                           
 26950                           ; BSR set to: 1
 26951  00DF36  0101               	movlb	1	; () banked
 26952  00DF38  517E               	movf	_MSDReadState& (0+255),w,b
 26953  00DF3A  0012               	return	
 26954  00DF3C                     __end_of_MSDReadHandler:
 26955                           	opt stack 0
 26956                           tosu	equ	0xFFF
 26957                           tosh	equ	0xFFE
 26958                           tosl	equ	0xFFD
 26959                           pclath	equ	0xFFA
 26960                           tblptru	equ	0xFF8
 26961                           tblptrh	equ	0xFF7
 26962                           tblptrl	equ	0xFF6
 26963                           tablat	equ	0xFF5
 26964                           prodh	equ	0xFF4
 26965                           prodl	equ	0xFF3
 26966                           intcon	equ	0xFF2
 26967                           postinc0	equ	0xFEE
 26968                           wreg	equ	0xFE8
 26969                           indf1	equ	0xFE7
 26970                           postdec1	equ	0xFE5
 26971                           plusw1	equ	0xFE3
 26972                           fsr1h	equ	0xFE2
 26973                           fsr1l	equ	0xFE1
 26974                           indf2	equ	0xFDF
 26975                           postinc2	equ	0xFDE
 26976                           postdec2	equ	0xFDD
 26977                           plusw2	equ	0xFDB
 26978                           fsr2h	equ	0xFDA
 26979                           fsr2l	equ	0xFD9
 26980                           status	equ	0xFD8
 26981                           
 26982 ;; *************** function _MSDCheckForErrorCases *****************
 26983 ;; Defined at:
 26984 ;;		line 1434 in file "usb_device_msd.c"
 26985 ;; Parameters:    Size  Location     Type
 26986 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 26987 ;; Auto vars:     Size  Location     Type
 26988 ;;  MSDErrorCase    1   16[BANK0 ] unsigned char 
 26989 ;;  DeviceNoData    1   15[BANK0 ] unsigned char 
 26990 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 26991 ;; Return value:  Size  Location     Type
 26992 ;;                  1    wreg      unsigned char 
 26993 ;; Registers used:
 26994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26995 ;; Tracked objects:
 26996 ;;		On entry : 0/0
 26997 ;;		On exit  : 0/0
 26998 ;;		Unchanged: 0/0
 26999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27001 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27003 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27004 ;;Total ram usage:        7 bytes
 27005 ;; Hardware stack levels used:    1
 27006 ;; Hardware stack levels required when called:   12
 27007 ;; This function calls:
 27008 ;;		_MSDErrorHandler
 27009 ;; This function is called by:
 27010 ;;		_MSDProcessCommandMediaPresent
 27011 ;;		_MSDReadHandler
 27012 ;;		_MSDWriteHandler
 27013 ;; This function uses a non-reentrant model
 27014 ;;
 27015                           
 27016                           	psect	text90
 27017  00FE8E                     __ptext90:
 27018                           	opt stack 0
 27019  00FE8E                     _MSDCheckForErrorCases:
 27020                           	opt stack 13
 27021                           
 27022                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 27023                           
 27024                           ; BSR set to: 1
 27025                           ;incstack = 0
 27026  00FE8E  0100               	movlb	0	; () banked
 27027  00FE90  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 27028  00FE92  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 27029  00FE94  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 27030  00FE96  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 27031  00FE98  A4D8               	btfss	status,2,c
 27032  00FE9A  D002               	goto	l726
 27033                           
 27034                           ; BSR set to: 0
 27035                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 27036  00FE9C  0E01               	movlw	1
 27037  00FE9E  D001               	goto	L52
 27038  00FEA0                     l726:
 27039                           
 27040                           ; BSR set to: 0
 27041                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 27042                           
 27043                           ; BSR set to: 0
 27044  00FEA0  0E00               	movlw	0
 27045  00FEA2                     L52:
 27046  00FEA2  6F6F               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 27047                           
 27048                           ; BSR set to: 0
 27049                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 27050                           
 27051                           ; BSR set to: 0
 27052  00FEA4  05CE               	decf	_MSDHostNoData& (0+255),w,b
 27053  00FEA6  A4D8               	btfss	status,2,c
 27054  00FEA8  D005               	goto	l728
 27055                           
 27056                           ; BSR set to: 0
 27057  00FEAA  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 27058  00FEAC  A4D8               	btfss	status,2,c
 27059  00FEAE  D002               	goto	l728
 27060                           
 27061                           ; BSR set to: 0
 27062                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 27063  00FEB0  0E00               	movlw	0
 27064                           
 27065                           ; BSR set to: 0
 27066  00FEB2  0012               	return	
 27067  00FEB4                     l728:
 27068                           
 27069                           ; BSR set to: 0
 27070                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 27071                           
 27072                           ; BSR set to: 0
 27073  00FEB4  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 27074  00FEB6  0101               	movlb	1	; () banked
 27075  00FEB8  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 27076  00FEBA  E121               	bnz	l17802
 27077  00FEBC  0100               	movlb	0	; () banked
 27078  00FEBE  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 27079  00FEC0  0101               	movlb	1	; () banked
 27080  00FEC2  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 27081  00FEC4  E11C               	bnz	l17802
 27082  00FEC6  0100               	movlb	0	; () banked
 27083  00FEC8  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 27084  00FECA  0101               	movlb	1	; () banked
 27085  00FECC  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 27086  00FECE  E117               	bnz	l17802
 27087  00FED0  0100               	movlb	0	; () banked
 27088  00FED2  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 27089  00FED4  0101               	movlb	1	; () banked
 27090  00FED6  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 27091  00FED8  A4D8               	btfss	status,2,c
 27092  00FEDA  D011               	goto	l734
 27093                           
 27094                           ; BSR set to: 1
 27095                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 27096  00FEDC  0421               	decf	_MSD_State,w,c
 27097  00FEDE  A4D8               	btfss	status,2,c
 27098  00FEE0  D007               	goto	l731
 27099                           
 27100                           ; BSR set to: 1
 27101                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 27102  00FEE2  0E2A               	movlw	42
 27103  00FEE4  0100               	movlb	0	; () banked
 27104  00FEE6  19CF               	xorwf	_MSDCommandState& (0+255),w,b
 27105  00FEE8  B4D8               	btfsc	status,2,c
 27106  00FEEA  D009               	goto	l734
 27107                           
 27108                           ; BSR set to: 0
 27109                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 27110  00FEEC  0E00               	movlw	0
 27111                           
 27112                           ; BSR set to: 0
 27113  00FEEE  0012               	return	
 27114  00FEF0                     l731:
 27115                           
 27116                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 27117                           
 27118                           ; BSR set to: 0
 27119  00FEF0  0E2A               	movlw	42
 27120  00FEF2  0100               	movlb	0	; () banked
 27121  00FEF4  19CF               	xorwf	_MSDCommandState& (0+255),w,b
 27122  00FEF6  A4D8               	btfss	status,2,c
 27123  00FEF8  D002               	goto	l734
 27124                           
 27125                           ; BSR set to: 0
 27126                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 27127  00FEFA  0E00               	movlw	0
 27128                           
 27129                           ; BSR set to: 0
 27130  00FEFC  0012               	return	
 27131  00FEFE                     l734:
 27132  00FEFE                     l17802:
 27133                           
 27134                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 27135  00FEFE  0101               	movlb	1	; () banked
 27136  00FF00  5108               	movf	(_gblCBW+8)& (0+255),w,b
 27137  00FF02  0100               	movlb	0	; () banked
 27138  00FF04  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 27139  00FF06  0101               	movlb	1	; () banked
 27140  00FF08  5109               	movf	(_gblCBW+9)& (0+255),w,b
 27141  00FF0A  0100               	movlb	0	; () banked
 27142  00FF0C  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 27143  00FF0E  0101               	movlb	1	; () banked
 27144  00FF10  510A               	movf	(_gblCBW+10)& (0+255),w,b
 27145  00FF12  0100               	movlb	0	; () banked
 27146  00FF14  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 27147  00FF16  0101               	movlb	1	; () banked
 27148  00FF18  510B               	movf	(_gblCBW+11)& (0+255),w,b
 27149  00FF1A  0100               	movlb	0	; () banked
 27150  00FF1C  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 27151  00FF1E  B0D8               	btfsc	status,0,c
 27152  00FF20  D002               	goto	l735
 27153                           
 27154                           ; BSR set to: 0
 27155                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 27156  00FF22  0E01               	movlw	1
 27157  00FF24  D001               	goto	L53
 27158  00FF26                     l735:
 27159                           
 27160                           ; BSR set to: 0
 27161                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 27162                           
 27163                           ; BSR set to: 0
 27164  00FF26  0E00               	movlw	0
 27165  00FF28                     L53:
 27166  00FF28  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 27167                           
 27168                           ; BSR set to: 0
 27169                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 27170                           
 27171                           ; BSR set to: 0
 27172  00FF2A  0E02               	movlw	2
 27173  00FF2C  1821               	xorwf	_MSD_State,w,c
 27174  00FF2E  A4D8               	btfss	status,2,c
 27175  00FF30  D014               	goto	l737
 27176                           
 27177                           ; BSR set to: 0
 27178                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 27179  00FF32  0E2A               	movlw	42
 27180  00FF34  19CF               	xorwf	_MSDCommandState& (0+255),w,b
 27181  00FF36  B4D8               	btfsc	status,2,c
 27182  00FF38  D005               	goto	l738
 27183                           
 27184                           ; BSR set to: 0
 27185  00FF3A  516F               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 27186  00FF3C  A4D8               	btfss	status,2,c
 27187  00FF3E  D002               	goto	l738
 27188  00FF40                     u17330:
 27189                           
 27190                           ; BSR set to: 0
 27191                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 27192  00FF40  0E05               	movlw	5
 27193  00FF42  D01D               	goto	L56
 27194  00FF44                     l738:
 27195                           
 27196                           ; BSR set to: 0
 27197                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 27198                           
 27199                           ; BSR set to: 0
 27200  00FF44  05CE               	decf	_MSDHostNoData& (0+255),w,b
 27201  00FF46  B4D8               	btfsc	status,2,c
 27202  00FF48  D00F               	goto	u17380
 27203                           
 27204                           ; BSR set to: 0
 27205                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 27206                           
 27207                           ; BSR set to: 0
 27208                           
 27209                           ; BSR set to: 0
 27210                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 27211  00FF4A  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 27212  00FF4C  B4D8               	btfsc	status,2,c
 27213  00FF4E  D003               	goto	u17360
 27214                           
 27215                           ; BSR set to: 0
 27216                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 27217                           
 27218                           ; BSR set to: 0
 27219                           
 27220                           ; BSR set to: 0
 27221                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 27222  00FF50  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 27223  00FF52  A4D8               	btfss	status,2,c
 27224  00FF54  D7F5               	goto	u17330
 27225  00FF56                     u17360:
 27226                           
 27227                           ; BSR set to: 0
 27228                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 27229  00FF56  0E04               	movlw	4
 27230  00FF58  D012               	goto	L56
 27231  00FF5A                     l737:
 27232                           
 27233                           ; BSR set to: 0
 27234                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 27235                           
 27236                           ; BSR set to: 0
 27237  00FF5A  0E2A               	movlw	42
 27238  00FF5C  19CF               	xorwf	_MSDCommandState& (0+255),w,b
 27239  00FF5E  B4D8               	btfsc	status,2,c
 27240  00FF60  D00D               	goto	l753
 27241                           
 27242                           ; BSR set to: 0
 27243                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 27244                           
 27245                           ; BSR set to: 0
 27246                           
 27247                           ; BSR set to: 0
 27248                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 27249  00FF62  05CE               	decf	_MSDHostNoData& (0+255),w,b
 27250  00FF64  A4D8               	btfss	status,2,c
 27251  00FF66  D002               	goto	l749
 27252  00FF68                     u17380:
 27253                           
 27254                           ; BSR set to: 0
 27255                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 27256  00FF68  0E01               	movlw	1
 27257  00FF6A  D009               	goto	L56
 27258  00FF6C                     l749:
 27259                           
 27260                           ; BSR set to: 0
 27261                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 27262                           
 27263                           ; BSR set to: 0
 27264  00FF6C  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 27265  00FF6E  B4D8               	btfsc	status,2,c
 27266  00FF70  D003               	goto	u17400
 27267                           
 27268                           ; BSR set to: 0
 27269                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 27270                           
 27271                           ; BSR set to: 0
 27272                           
 27273                           ; BSR set to: 0
 27274                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 27275  00FF72  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 27276  00FF74  A4D8               	btfss	status,2,c
 27277  00FF76  D002               	goto	l753
 27278  00FF78                     u17400:
 27279                           
 27280                           ; BSR set to: 0
 27281                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 27282  00FF78  0E02               	movlw	2
 27283  00FF7A  D001               	goto	L56
 27284  00FF7C                     l753:
 27285                           
 27286                           ; BSR set to: 0
 27287                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 27288                           
 27289                           ; BSR set to: 0
 27290  00FF7C  0E03               	movlw	3
 27291  00FF7E                     L56:
 27292  00FF7E  6F70               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 27293                           
 27294                           ; BSR set to: 0
 27295                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 27296                           
 27297                           ; BSR set to: 0
 27298                           
 27299                           ; BSR set to: 0
 27300                           
 27301                           ; BSR set to: 0
 27302                           
 27303                           ; BSR set to: 0
 27304                           
 27305                           ; BSR set to: 0
 27306  00FF80  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 27307  00FF82  EC91  F07A         	call	_MSDErrorHandler
 27308                           
 27309                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 27310  00FF86  0100               	movlb	0	; () banked
 27311  00FF88  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 27312  00FF8A  0012               	return	
 27313  00FF8C                     __end_of_MSDCheckForErrorCases:
 27314                           	opt stack 0
 27315                           tosu	equ	0xFFF
 27316                           tosh	equ	0xFFE
 27317                           tosl	equ	0xFFD
 27318                           pclath	equ	0xFFA
 27319                           tblptru	equ	0xFF8
 27320                           tblptrh	equ	0xFF7
 27321                           tblptrl	equ	0xFF6
 27322                           tablat	equ	0xFF5
 27323                           prodh	equ	0xFF4
 27324                           prodl	equ	0xFF3
 27325                           intcon	equ	0xFF2
 27326                           postinc0	equ	0xFEE
 27327                           wreg	equ	0xFE8
 27328                           indf1	equ	0xFE7
 27329                           postdec1	equ	0xFE5
 27330                           plusw1	equ	0xFE3
 27331                           fsr1h	equ	0xFE2
 27332                           fsr1l	equ	0xFE1
 27333                           indf2	equ	0xFDF
 27334                           postinc2	equ	0xFDE
 27335                           postdec2	equ	0xFDD
 27336                           plusw2	equ	0xFDB
 27337                           fsr2h	equ	0xFDA
 27338                           fsr2l	equ	0xFD9
 27339                           status	equ	0xFD8
 27340                           
 27341 ;; *************** function _MSDErrorHandler *****************
 27342 ;; Defined at:
 27343 ;;		line 1577 in file "usb_device_msd.c"
 27344 ;; Parameters:    Size  Location     Type
 27345 ;;  ErrorCase       1    wreg     unsigned char 
 27346 ;; Auto vars:     Size  Location     Type
 27347 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 27348 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 27349 ;; Return value:  Size  Location     Type
 27350 ;;                  1    wreg      void 
 27351 ;; Registers used:
 27352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27353 ;; Tracked objects:
 27354 ;;		On entry : 0/0
 27355 ;;		On exit  : 0/0
 27356 ;;		Unchanged: 0/0
 27357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27361 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27362 ;;Total ram usage:        2 bytes
 27363 ;; Hardware stack levels used:    1
 27364 ;; Hardware stack levels required when called:   11
 27365 ;; This function calls:
 27366 ;;		_ResetSenseData
 27367 ;;		_USBStallEndpoint
 27368 ;; This function is called by:
 27369 ;;		_MSDProcessCommandMediaAbsent
 27370 ;;		_MSDProcessCommandMediaPresent
 27371 ;;		_MSDCheckForErrorCases
 27372 ;; This function uses a non-reentrant model
 27373 ;;
 27374                           
 27375                           	psect	text91
 27376  00F522                     __ptext91:
 27377                           	opt stack 0
 27378  00F522                     _MSDErrorHandler:
 27379                           	opt stack 13
 27380                           
 27381                           ; BSR set to: 0
 27382                           ;incstack = 0
 27383                           ;MSDErrorHandler@ErrorCase stored from wreg
 27384  00F522  0100               	movlb	0	; () banked
 27385  00F524  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 27386                           
 27387                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 27388  00F526  5013               	movf	_USBMSDInHandle,w,c
 27389  00F528  1014               	iorwf	_USBMSDInHandle+1,w,c
 27390  00F52A  B4D8               	btfsc	status,2,c
 27391  00F52C  D006               	goto	u17150
 27392  00F52E  C013  FFD9         	movff	_USBMSDInHandle,fsr2l
 27393  00F532  C014  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 27394  00F536  BEDF               	btfsc	indf2,7,c
 27395  00F538  0012               	return	
 27396  00F53A                     u17150:
 27397  00F53A  0100               	movlb	0	; () banked
 27398  00F53C  51CC               	movf	_USBMSDOutHandle& (0+255),w,b
 27399  00F53E  11CD               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 27400  00F540  B4D8               	btfsc	status,2,c
 27401  00F542  D006               	goto	l757
 27402                           
 27403                           ; BSR set to: 0
 27404  00F544  C0CC  FFD9         	movff	_USBMSDOutHandle,fsr2l
 27405  00F548  C0CD  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 27406  00F54C  BEDF               	btfsc	indf2,7,c
 27407  00F54E  0012               	return	
 27408  00F550                     l757:
 27409                           
 27410                           ; BSR set to: 0
 27411                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 27412  00F550  C021  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 27413                           
 27414                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 27415  00F554  69CF               	setf	_MSDCommandState& (0+255),b
 27416                           
 27417                           ; BSR set to: 0
 27418                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 27419  00F556  0E00               	movlw	0
 27420  00F558  0101               	movlb	1	; () banked
 27421  00F55A  6F7E               	movwf	_MSDReadState& (0+255),b
 27422                           
 27423                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 27424  00F55C  0E00               	movlw	0
 27425  00F55E  6E20               	movwf	_MSDWriteState,c
 27426                           
 27427                           ; BSR set to: 1
 27428                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 27429  00F560  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 27430  00F564  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 27431  00F568  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 27432  00F56C  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 27433                           
 27434                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 27435  00F570  0E01               	movlw	1
 27436  00F572  010D               	movlb	13	; () banked
 27437  00F574  6F8C               	movwf	140,b	;volatile
 27438                           
 27439                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 27440  00F576  0E03               	movlw	3
 27441  00F578  6E21               	movwf	_MSD_State,c
 27442                           
 27443                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 27444  00F57A  D04B               	goto	l763
 27445  00F57C                     
 27446                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 27447                           
 27448                           ; BSR set to: 13
 27449  00F57C  0E02               	movlw	2
 27450  00F57E  010D               	movlb	13	; () banked
 27451  00F580  6F8C               	movwf	140,b	;volatile
 27452                           
 27453                           ;usb_device_msd.c: 1607: break;
 27454  00F582  0012               	return	
 27455  00F584                     
 27456                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 27457                           
 27458                           ; BSR set to: 13
 27459  00F584  0E01               	movlw	1
 27460  00F586  0100               	movlb	0	; () banked
 27461  00F588  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 27462  00F58A  0E02               	movlw	2
 27463  00F58C  EC3B  F07D         	call	_USBStallEndpoint
 27464                           
 27465                           ;usb_device_msd.c: 1611: break;
 27466  00F590  0012               	return	
 27467  00F592                     
 27468                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 27469  00F592  0E02               	movlw	2
 27470  00F594  010D               	movlb	13	; () banked
 27471  00F596  6F8C               	movwf	140,b	;volatile
 27472                           
 27473                           ; BSR set to: 13
 27474                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 27475  00F598  0E01               	movlw	1
 27476  00F59A  0100               	movlb	0	; () banked
 27477  00F59C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 27478  00F59E  0E02               	movlw	2
 27479  00F5A0  EC3B  F07D         	call	_USBStallEndpoint
 27480                           
 27481                           ;usb_device_msd.c: 1616: break;
 27482  00F5A4  0012               	return	
 27483  00F5A6                     
 27484                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 27485  00F5A6  0E00               	movlw	0
 27486  00F5A8  0100               	movlb	0	; () banked
 27487  00F5AA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 27488  00F5AC  0E02               	movlw	2
 27489  00F5AE  EC3B  F07D         	call	_USBStallEndpoint
 27490                           
 27491                           ;usb_device_msd.c: 1620: break;
 27492  00F5B2  0012               	return	
 27493  00F5B4                     
 27494                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 27495  00F5B4  0E02               	movlw	2
 27496  00F5B6  010D               	movlb	13	; () banked
 27497  00F5B8  6F8C               	movwf	140,b	;volatile
 27498                           
 27499                           ; BSR set to: 13
 27500                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 27501  00F5BA  0E00               	movlw	0
 27502  00F5BC  0100               	movlb	0	; () banked
 27503  00F5BE  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 27504  00F5C0  0E02               	movlw	2
 27505  00F5C2  EC3B  F07D         	call	_USBStallEndpoint
 27506                           
 27507                           ;usb_device_msd.c: 1625: break;
 27508  00F5C6  0012               	return	
 27509  00F5C8                     
 27510                           ;usb_device_msd.c: 1628: ResetSenseData();
 27511  00F5C8  EC67  F08E         	call	_ResetSenseData	;wreg free
 27512                           
 27513                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 27514  00F5CC  0101               	movlb	1	; () banked
 27515  00F5CE  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 27516  00F5D0  0BF0               	andlw	-16
 27517  00F5D2  0905               	iorlw	5
 27518  00F5D4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 27519                           
 27520                           ; BSR set to: 1
 27521                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 27522  00F5D6  0E20               	movlw	32
 27523  00F5D8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 27524                           
 27525                           ; BSR set to: 1
 27526                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 27527  00F5DA  0E00               	movlw	0
 27528  00F5DC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 27529                           
 27530                           ; BSR set to: 1
 27531                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 27532  00F5DE  0E02               	movlw	2
 27533  00F5E0  0100               	movlb	0	; () banked
 27534  00F5E2  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 27535  00F5E4  A4D8               	btfss	status,2,c
 27536  00F5E6  D00E               	goto	l771
 27537                           
 27538                           ; BSR set to: 0
 27539  00F5E8  0101               	movlb	1	; () banked
 27540  00F5EA  5108               	movf	(_gblCBW+8)& (0+255),w,b
 27541  00F5EC  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 27542  00F5EE  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 27543  00F5F0  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 27544  00F5F2  B4D8               	btfsc	status,2,c
 27545  00F5F4  D007               	goto	l771
 27546                           
 27547                           ; BSR set to: 1
 27548                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 27549  00F5F6  0E00               	movlw	0
 27550  00F5F8  0100               	movlb	0	; () banked
 27551  00F5FA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 27552  00F5FC  0E02               	movlw	2
 27553  00F5FE  EC3B  F07D         	call	_USBStallEndpoint
 27554                           
 27555                           ;usb_device_msd.c: 1636: }
 27556  00F602  0012               	return	
 27557  00F604                     l771:
 27558                           
 27559                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 27560  00F604  0E01               	movlw	1
 27561  00F606  0100               	movlb	0	; () banked
 27562  00F608  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 27563  00F60A  0E02               	movlw	2
 27564  00F60C  EC3B  F07D         	call	_USBStallEndpoint
 27565                           
 27566                           ;usb_device_msd.c: 1644: }
 27567                           
 27568                           ;usb_device_msd.c: 1643: break;
 27569                           
 27570                           ;usb_device_msd.c: 1642: default:
 27571                           
 27572                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 27573  00F610  0012               	return	
 27574  00F612                     l763:
 27575  00F612  0100               	movlb	0	; () banked
 27576  00F614  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 27577                           
 27578                           ; Switch size 1, requested type "space"
 27579                           ; Number of cases is 6, Range of values is 1 to 127
 27580                           ; switch strategies available:
 27581                           ; Name         Instructions Cycles
 27582                           ; simple_byte           19    10 (average)
 27583                           ;	Chosen strategy is simple_byte
 27584  00F616  0A01               	xorlw	1	; case 1
 27585  00F618  B4D8               	btfsc	status,2,c
 27586  00F61A  D7B0               	goto	l764
 27587  00F61C  0A03               	xorlw	3	; case 2
 27588  00F61E  B4D8               	btfsc	status,2,c
 27589  00F620  D7B1               	goto	l766
 27590  00F622  0A01               	xorlw	1	; case 3
 27591  00F624  B4D8               	btfsc	status,2,c
 27592  00F626  D7B5               	goto	l767
 27593  00F628  0A07               	xorlw	7	; case 4
 27594  00F62A  B4D8               	btfsc	status,2,c
 27595  00F62C  D7BC               	goto	l768
 27596  00F62E  0A01               	xorlw	1	; case 5
 27597  00F630  B4D8               	btfsc	status,2,c
 27598  00F632  D7C0               	goto	l769
 27599  00F634  0A7A               	xorlw	122	; case 127
 27600  00F636  A4D8               	btfss	status,2,c
 27601  00F638  0012               	return	
 27602  00F63A  D7C6               	goto	l770
 27603  00F63C                     __end_of_MSDErrorHandler:
 27604                           	opt stack 0
 27605                           tosu	equ	0xFFF
 27606                           tosh	equ	0xFFE
 27607                           tosl	equ	0xFFD
 27608                           pclath	equ	0xFFA
 27609                           tblptru	equ	0xFF8
 27610                           tblptrh	equ	0xFF7
 27611                           tblptrl	equ	0xFF6
 27612                           tablat	equ	0xFF5
 27613                           prodh	equ	0xFF4
 27614                           prodl	equ	0xFF3
 27615                           intcon	equ	0xFF2
 27616                           postinc0	equ	0xFEE
 27617                           wreg	equ	0xFE8
 27618                           indf1	equ	0xFE7
 27619                           postdec1	equ	0xFE5
 27620                           plusw1	equ	0xFE3
 27621                           fsr1h	equ	0xFE2
 27622                           fsr1l	equ	0xFE1
 27623                           indf2	equ	0xFDF
 27624                           postinc2	equ	0xFDE
 27625                           postdec2	equ	0xFDD
 27626                           plusw2	equ	0xFDB
 27627                           fsr2h	equ	0xFDA
 27628                           fsr2l	equ	0xFD9
 27629                           status	equ	0xFD8
 27630                           
 27631 ;; *************** function _USBStallEndpoint *****************
 27632 ;; Defined at:
 27633 ;;		line 1073 in file "usb_device.c"
 27634 ;; Parameters:    Size  Location     Type
 27635 ;;  ep              1    wreg     unsigned char 
 27636 ;;  dir             1    0[BANK0 ] unsigned char 
 27637 ;; Auto vars:     Size  Location     Type
 27638 ;;  ep              1    5[BANK0 ] unsigned char 
 27639 ;;  p               2    6[BANK0 ] PTR struct __BDT
 27640 ;;		 -> BDT(48), 
 27641 ;; Return value:  Size  Location     Type
 27642 ;;                  1    wreg      void 
 27643 ;; Registers used:
 27644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27645 ;; Tracked objects:
 27646 ;;		On entry : 0/0
 27647 ;;		On exit  : 0/0
 27648 ;;		Unchanged: 0/0
 27649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27650 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27651 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27652 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27653 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27654 ;;Total ram usage:        8 bytes
 27655 ;; Hardware stack levels used:    1
 27656 ;; Hardware stack levels required when called:   10
 27657 ;; This function calls:
 27658 ;;		Nothing
 27659 ;; This function is called by:
 27660 ;;		_MSDTasks
 27661 ;;		_MSDReadHandler
 27662 ;;		_MSDWriteHandler
 27663 ;;		_MSDErrorHandler
 27664 ;; This function uses a non-reentrant model
 27665 ;;
 27666                           
 27667                           	psect	text92
 27668  00FA76                     __ptext92:
 27669                           	opt stack 0
 27670  00FA76                     _USBStallEndpoint:
 27671                           	opt stack 18
 27672                           
 27673                           ;incstack = 0
 27674                           ;USBStallEndpoint@ep stored from wreg
 27675  00FA76  0100               	movlb	0	; () banked
 27676  00FA78  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 27677                           
 27678                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 27679  00FA7A  0100               	movlb	0	; () banked
 27680  00FA7C  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 27681  00FA7E  A4D8               	btfss	status,2,c
 27682  00FA80  D02B               	goto	l192
 27683                           
 27684                           ; BSR set to: 0
 27685                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 27686  00FA82  EE20 F001          	lfsr	2,1
 27687  00FA86  5015               	movf	_pBDTEntryEP0OutNext,w,c
 27688  00FA88  26D9               	addwf	fsr2l,f,c
 27689  00FA8A  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 27690  00FA8C  22DA               	addwfc	fsr2h,f,c
 27691  00FA8E  0E08               	movlw	8
 27692  00FA90  6EDF               	movwf	indf2,c
 27693                           
 27694                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 27695  00FA92  EE20 F002          	lfsr	2,2
 27696  00FA96  5015               	movf	_pBDTEntryEP0OutNext,w,c
 27697  00FA98  26D9               	addwf	fsr2l,f,c
 27698  00FA9A  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 27699  00FA9C  22DA               	addwfc	fsr2h,f,c
 27700  00FA9E  0E30               	movlw	48
 27701  00FAA0  6EDE               	movwf	postinc2,c
 27702  00FAA2  0E0D               	movlw	13
 27703  00FAA4  6EDD               	movwf	postdec2,c
 27704                           
 27705                           ; BSR set to: 0
 27706                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 27707  00FAA6  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27708  00FAAA  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27709  00FAAE  0E0C               	movlw	12
 27710  00FAB0  6EDF               	movwf	indf2,c
 27711                           
 27712                           ; BSR set to: 0
 27713                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27714  00FAB2  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27715  00FAB6  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27716  00FABA  0E00               	movlw	0
 27717  00FABC  8EDB               	bsf	plusw2,7,c
 27718                           
 27719                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 27720  00FABE  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 27721  00FAC2  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27722  00FAC6  0E04               	movlw	4
 27723  00FAC8  6EDF               	movwf	indf2,c
 27724                           
 27725                           ; BSR set to: 0
 27726                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27727  00FACA  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 27728  00FACE  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27729  00FAD2  0E00               	movlw	0
 27730  00FAD4  8EDB               	bsf	plusw2,7,c
 27731                           
 27732                           ;usb_device.c: 1089: }
 27733  00FAD6  0012               	return	
 27734  00FAD8                     l192:
 27735                           
 27736                           ; BSR set to: 0
 27737                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 27738                           
 27739                           ; BSR set to: 0
 27740  00FAD8  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 27741  00FADA  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 27742  00FADC  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 27743  00FADE  90D8               	bcf	status,0,c
 27744  00FAE0  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 27745  00FAE2  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 27746  00FAE4  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 27747  00FAE6  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 27748  00FAE8  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 27749  00FAEA  90D8               	bcf	status,0,c
 27750  00FAEC  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 27751  00FAEE  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 27752  00FAF0  90D8               	bcf	status,0,c
 27753  00FAF2  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 27754  00FAF4  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 27755  00FAF6  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 27756  00FAF8  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 27757  00FAFA  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 27758  00FAFC  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 27759  00FAFE  90D8               	bcf	status,0,c
 27760  00FB00  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 27761  00FB02  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 27762  00FB04  90D8               	bcf	status,0,c
 27763  00FB06  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 27764  00FB08  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 27765  00FB0A  0E00               	movlw	0
 27766  00FB0C  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 27767  00FB0E  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 27768  00FB10  0E0D               	movlw	13
 27769  00FB12  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 27770  00FB14  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 27771                           
 27772                           ; BSR set to: 0
 27773                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 27774  00FB16  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 27775  00FB1A  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 27776  00FB1E  0E00               	movlw	0
 27777  00FB20  84DB               	bsf	plusw2,2,c
 27778                           
 27779                           ; BSR set to: 0
 27780                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 27781  00FB22  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 27782  00FB26  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 27783  00FB2A  0E00               	movlw	0
 27784  00FB2C  8EDB               	bsf	plusw2,7,c
 27785                           
 27786                           ; BSR set to: 0
 27787                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 27788  00FB2E  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 27789  00FB30  0D04               	mullw	4
 27790  00FB32  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 27791  00FB36  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 27792  00FB3A  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 27793  00FB3C  0D02               	mullw	2
 27794  00FB3E  50F3               	movf	prodl,w,c
 27795  00FB40  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 27796  00FB42  50F4               	movf	prodh,w,c
 27797  00FB44  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 27798  00FB46  90D8               	bcf	status,0,c
 27799  00FB48  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 27800  00FB4A  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 27801  00FB4C  90D8               	bcf	status,0,c
 27802  00FB4E  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 27803  00FB50  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 27804  00FB52  0E04               	movlw	4
 27805  00FB54  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 27806  00FB56  0E00               	movlw	0
 27807  00FB58  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 27808  00FB5A  0E00               	movlw	0
 27809  00FB5C  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 27810  00FB5E  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 27811  00FB60  0E0D               	movlw	13
 27812  00FB62  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 27813  00FB64  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 27814                           
 27815                           ; BSR set to: 0
 27816                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 27817  00FB66  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 27818  00FB6A  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 27819  00FB6E  0E00               	movlw	0
 27820  00FB70  84DB               	bsf	plusw2,2,c
 27821                           
 27822                           ; BSR set to: 0
 27823                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 27824  00FB72  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 27825  00FB76  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 27826  00FB7A  0E00               	movlw	0
 27827  00FB7C  8EDB               	bsf	plusw2,7,c
 27828  00FB7E  0012               	return	
 27829  00FB80                     __end_of_USBStallEndpoint:
 27830                           	opt stack 0
 27831                           tosu	equ	0xFFF
 27832                           tosh	equ	0xFFE
 27833                           tosl	equ	0xFFD
 27834                           pclath	equ	0xFFA
 27835                           tblptru	equ	0xFF8
 27836                           tblptrh	equ	0xFF7
 27837                           tblptrl	equ	0xFF6
 27838                           tablat	equ	0xFF5
 27839                           prodh	equ	0xFF4
 27840                           prodl	equ	0xFF3
 27841                           intcon	equ	0xFF2
 27842                           postinc0	equ	0xFEE
 27843                           wreg	equ	0xFE8
 27844                           indf1	equ	0xFE7
 27845                           postdec1	equ	0xFE5
 27846                           plusw1	equ	0xFE3
 27847                           fsr1h	equ	0xFE2
 27848                           fsr1l	equ	0xFE1
 27849                           indf2	equ	0xFDF
 27850                           postinc2	equ	0xFDE
 27851                           postdec2	equ	0xFDD
 27852                           plusw2	equ	0xFDB
 27853                           fsr2h	equ	0xFDA
 27854                           fsr2l	equ	0xFD9
 27855                           status	equ	0xFD8
 27856                           
 27857 ;; *************** function _ResetSenseData *****************
 27858 ;; Defined at:
 27859 ;;		line 1373 in file "usb_device_msd.c"
 27860 ;; Parameters:    Size  Location     Type
 27861 ;;		None
 27862 ;; Auto vars:     Size  Location     Type
 27863 ;;		None
 27864 ;; Return value:  Size  Location     Type
 27865 ;;                  1    wreg      void 
 27866 ;; Registers used:
 27867 ;;		wreg, status,2
 27868 ;; Tracked objects:
 27869 ;;		On entry : 0/0
 27870 ;;		On exit  : 0/0
 27871 ;;		Unchanged: 0/0
 27872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27877 ;;Total ram usage:        0 bytes
 27878 ;; Hardware stack levels used:    1
 27879 ;; Hardware stack levels required when called:   10
 27880 ;; This function calls:
 27881 ;;		Nothing
 27882 ;; This function is called by:
 27883 ;;		_MSDProcessCommandMediaAbsent
 27884 ;;		_MSDProcessCommandMediaPresent
 27885 ;;		_MSDErrorHandler
 27886 ;; This function uses a non-reentrant model
 27887 ;;
 27888                           
 27889                           	psect	text93
 27890  011CCE                     __ptext93:
 27891                           	opt stack 0
 27892  011CCE                     _ResetSenseData:
 27893                           	opt stack 16
 27894                           
 27895                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 27896                           
 27897                           ; BSR set to: 0
 27898                           ;incstack = 0
 27899  011CCE  0101               	movlb	1	; () banked
 27900  011CD0  911F               	bcf	_gblSenseData& (0+255),0,b
 27901  011CD2  931F               	bcf	_gblSenseData& (0+255),1,b
 27902  011CD4  951F               	bcf	_gblSenseData& (0+255),2,b
 27903  011CD6  971F               	bcf	_gblSenseData& (0+255),3,b
 27904  011CD8  891F               	bsf	_gblSenseData& (0+255),4,b
 27905  011CDA  8B1F               	bsf	_gblSenseData& (0+255),5,b
 27906  011CDC  8D1F               	bsf	_gblSenseData& (0+255),6,b
 27907                           
 27908                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 27909  011CDE  9F1F               	bcf	_gblSenseData& (0+255),7,b
 27910                           
 27911                           ; BSR set to: 1
 27912                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 27913  011CE0  0E00               	movlw	0
 27914  011CE2  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 27915                           
 27916                           ; BSR set to: 1
 27917                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 27918  011CE4  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 27919  011CE6  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 27920  011CE8  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 27921  011CEA  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 27922                           
 27923                           ; BSR set to: 1
 27924                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 27925  011CEC  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 27926                           
 27927                           ; BSR set to: 1
 27928                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 27929  011CEE  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 27930                           
 27931                           ; BSR set to: 1
 27932                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 27933  011CF0  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 27934                           
 27935                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 27936  011CF2  0E00               	movlw	0
 27937  011CF4  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 27938                           
 27939                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 27940  011CF6  0E00               	movlw	0
 27941  011CF8  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 27942                           
 27943                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 27944  011CFA  0E00               	movlw	0
 27945  011CFC  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 27946                           
 27947                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 27948  011CFE  0E00               	movlw	0
 27949  011D00  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 27950                           
 27951                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 27952  011D02  0E0A               	movlw	10
 27953  011D04  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 27954                           
 27955                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 27956  011D06  0E00               	movlw	0
 27957  011D08  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 27958  011D0A  0E00               	movlw	0
 27959  011D0C  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 27960  011D0E  0E00               	movlw	0
 27961  011D10  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 27962  011D12  0E00               	movlw	0
 27963  011D14  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 27964                           
 27965                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 27966  011D16  0E00               	movlw	0
 27967  011D18  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 27968                           
 27969                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 27970  011D1A  0E00               	movlw	0
 27971  011D1C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 27972                           
 27973                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 27974  011D1E  0E00               	movlw	0
 27975  011D20  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 27976                           
 27977                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 27978  011D22  0E00               	movlw	0
 27979  011D24  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 27980                           
 27981                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 27982  011D26  0E00               	movlw	0
 27983  011D28  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 27984                           
 27985                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 27986  011D2A  0E00               	movlw	0
 27987  011D2C  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 27988                           
 27989                           ; BSR set to: 1
 27990  011D2E  0012               	return		;funcret
 27991  011D30                     __end_of_ResetSenseData:
 27992                           	opt stack 0
 27993                           tosu	equ	0xFFF
 27994                           tosh	equ	0xFFE
 27995                           tosl	equ	0xFFD
 27996                           pclath	equ	0xFFA
 27997                           tblptru	equ	0xFF8
 27998                           tblptrh	equ	0xFF7
 27999                           tblptrl	equ	0xFF6
 28000                           tablat	equ	0xFF5
 28001                           prodh	equ	0xFF4
 28002                           prodl	equ	0xFF3
 28003                           intcon	equ	0xFF2
 28004                           postinc0	equ	0xFEE
 28005                           wreg	equ	0xFE8
 28006                           indf1	equ	0xFE7
 28007                           postdec1	equ	0xFE5
 28008                           plusw1	equ	0xFE3
 28009                           fsr1h	equ	0xFE2
 28010                           fsr1l	equ	0xFE1
 28011                           indf2	equ	0xFDF
 28012                           postinc2	equ	0xFDE
 28013                           postdec2	equ	0xFDD
 28014                           plusw2	equ	0xFDB
 28015                           fsr2h	equ	0xFDA
 28016                           fsr2l	equ	0xFD9
 28017                           status	equ	0xFD8
 28018                           
 28019 ;; *************** function _ExternalFlash_SectorRead *****************
 28020 ;; Defined at:
 28021 ;;		line 40 in file "external_flash.c"
 28022 ;; Parameters:    Size  Location     Type
 28023 ;;  config          2   43[BANK0 ] PTR void 
 28024 ;;		 -> NULL(0), 
 28025 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 28026 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 28027 ;;		 -> msd_buffer(512), 
 28028 ;; Auto vars:     Size  Location     Type
 28029 ;;  page            2   51[BANK0 ] unsigned int 
 28030 ;; Return value:  Size  Location     Type
 28031 ;;                  1    wreg      unsigned char 
 28032 ;; Registers used:
 28033 ;;		wreg, status,2, status,0, cstack
 28034 ;; Tracked objects:
 28035 ;;		On entry : 0/0
 28036 ;;		On exit  : 0/0
 28037 ;;		Unchanged: 0/0
 28038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28039 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28040 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28042 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28043 ;;Total ram usage:       10 bytes
 28044 ;; Hardware stack levels used:    1
 28045 ;; Hardware stack levels required when called:   15
 28046 ;; This function calls:
 28047 ;;		_flash_sector_read
 28048 ;; This function is called by:
 28049 ;;		_MSDReadHandler
 28050 ;; This function uses a non-reentrant model
 28051 ;;
 28052                           
 28053                           	psect	text94
 28054  0128BE                     __ptext94:
 28055                           	opt stack 0
 28056  0128BE                     _ExternalFlash_SectorRead:
 28057                           	opt stack 10
 28058                           
 28059                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 28060                           
 28061                           ; BSR set to: 1
 28062                           ;incstack = 0
 28063  0128BE  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 28064  0128C2  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 28065                           
 28066                           ;external_flash.c: 45: if(sector_addr >= 8192)
 28067  0128C6  0100               	movlb	0	; () banked
 28068  0128C8  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 28069  0128CA  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 28070  0128CC  E104               	bnz	u17410
 28071  0128CE  0E20               	movlw	32
 28072  0128D0  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 28073  0128D2  A0D8               	btfss	status,0,c
 28074  0128D4  D002               	goto	l1625
 28075  0128D6                     u17410:
 28076                           
 28077                           ; BSR set to: 0
 28078                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 28079  0128D6  0E00               	movlw	0
 28080                           
 28081                           ; BSR set to: 0
 28082  0128D8  0012               	return	
 28083  0128DA                     l1625:
 28084                           
 28085                           ; BSR set to: 0
 28086                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 28087                           
 28088                           ; BSR set to: 0
 28089  0128DA  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 28090  0128DE  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 28091  0128E2  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 28092  0128E6  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 28093  0128EA  EC92  F095         	call	_flash_sector_read	;wreg free
 28094                           
 28095                           ;external_flash.c: 53: return 1;
 28096  0128EE  0E01               	movlw	1
 28097  0128F0  0012               	return	
 28098  0128F2                     __end_of_ExternalFlash_SectorRead:
 28099                           	opt stack 0
 28100                           tosu	equ	0xFFF
 28101                           tosh	equ	0xFFE
 28102                           tosl	equ	0xFFD
 28103                           pclath	equ	0xFFA
 28104                           tblptru	equ	0xFF8
 28105                           tblptrh	equ	0xFF7
 28106                           tblptrl	equ	0xFF6
 28107                           tablat	equ	0xFF5
 28108                           prodh	equ	0xFF4
 28109                           prodl	equ	0xFF3
 28110                           intcon	equ	0xFF2
 28111                           postinc0	equ	0xFEE
 28112                           wreg	equ	0xFE8
 28113                           indf1	equ	0xFE7
 28114                           postdec1	equ	0xFE5
 28115                           plusw1	equ	0xFE3
 28116                           fsr1h	equ	0xFE2
 28117                           fsr1l	equ	0xFE1
 28118                           indf2	equ	0xFDF
 28119                           postinc2	equ	0xFDE
 28120                           postdec2	equ	0xFDD
 28121                           plusw2	equ	0xFDB
 28122                           fsr2h	equ	0xFDA
 28123                           fsr2l	equ	0xFD9
 28124                           status	equ	0xFD8
 28125                           
 28126 ;; *************** function _flash_sector_read *****************
 28127 ;; Defined at:
 28128 ;;		line 426 in file "flash.c"
 28129 ;; Parameters:    Size  Location     Type
 28130 ;;  page            2   39[BANK0 ] unsigned int 
 28131 ;;  data            2   41[BANK0 ] PTR unsigned char 
 28132 ;;		 -> buffer(512), msd_buffer(512), 
 28133 ;; Auto vars:     Size  Location     Type
 28134 ;;		None
 28135 ;; Return value:  Size  Location     Type
 28136 ;;                  1    wreg      void 
 28137 ;; Registers used:
 28138 ;;		wreg, status,2, status,0, cstack
 28139 ;; Tracked objects:
 28140 ;;		On entry : 0/0
 28141 ;;		On exit  : 0/0
 28142 ;;		Unchanged: 0/0
 28143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28144 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28147 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28148 ;;Total ram usage:        4 bytes
 28149 ;; Hardware stack levels used:    1
 28150 ;; Hardware stack levels required when called:   14
 28151 ;; This function calls:
 28152 ;;		__flash_partial_read
 28153 ;; This function is called by:
 28154 ;;		_ExternalFlash_SectorRead
 28155 ;;		_fat_get_format_status
 28156 ;;		__get_available_cluster
 28157 ;;		__find_nth_cluster
 28158 ;;		__make_cluster_chain
 28159 ;;		_fat_find_file
 28160 ;; This function uses a non-reentrant model
 28161 ;;
 28162                           
 28163                           	psect	text95
 28164  012B24                     __ptext95:
 28165                           	opt stack 0
 28166  012B24                     _flash_sector_read:
 28167                           	opt stack 13
 28168                           
 28169                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 28170                           
 28171                           ;incstack = 0
 28172  012B24  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 28173  012B28  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 28174  012B2C  0E00               	movlw	0
 28175  012B2E  0100               	movlb	0	; () banked
 28176  012B30  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 28177  012B32  0E00               	movlw	0
 28178  012B34  6F75               	movwf	__flash_partial_read@start& (0+255),b
 28179  012B36  0E02               	movlw	2
 28180  012B38  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 28181  012B3A  0E00               	movlw	0
 28182  012B3C  6F77               	movwf	__flash_partial_read@length& (0+255),b
 28183  012B3E  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 28184  012B42  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 28185  012B46  ECB1  F08C         	call	__flash_partial_read	;wreg free
 28186  012B4A  0012               	return		;funcret
 28187  012B4C                     __end_of_flash_sector_read:
 28188                           	opt stack 0
 28189                           tosu	equ	0xFFF
 28190                           tosh	equ	0xFFE
 28191                           tosl	equ	0xFFD
 28192                           pclath	equ	0xFFA
 28193                           tblptru	equ	0xFF8
 28194                           tblptrh	equ	0xFF7
 28195                           tblptrl	equ	0xFF6
 28196                           tablat	equ	0xFF5
 28197                           prodh	equ	0xFF4
 28198                           prodl	equ	0xFF3
 28199                           intcon	equ	0xFF2
 28200                           postinc0	equ	0xFEE
 28201                           wreg	equ	0xFE8
 28202                           indf1	equ	0xFE7
 28203                           postdec1	equ	0xFE5
 28204                           plusw1	equ	0xFE3
 28205                           fsr1h	equ	0xFE2
 28206                           fsr1l	equ	0xFE1
 28207                           indf2	equ	0xFDF
 28208                           postinc2	equ	0xFDE
 28209                           postdec2	equ	0xFDD
 28210                           plusw2	equ	0xFDB
 28211                           fsr2h	equ	0xFDA
 28212                           fsr2l	equ	0xFD9
 28213                           status	equ	0xFD8
 28214                           
 28215 ;; *************** function __flash_partial_read *****************
 28216 ;; Defined at:
 28217 ;;		line 309 in file "flash.c"
 28218 ;; Parameters:    Size  Location     Type
 28219 ;;  page            2   19[BANK0 ] unsigned int 
 28220 ;;  start           2   21[BANK0 ] unsigned int 
 28221 ;;  length          2   23[BANK0 ] unsigned int 
 28222 ;;  data            2   25[BANK0 ] PTR unsigned char 
 28223 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 28224 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 28225 ;;		 -> buffer(512), msd_buffer(512), 
 28226 ;; Auto vars:     Size  Location     Type
 28227 ;;  command         4   31[BANK0 ] unsigned char [4]
 28228 ;;  address         4   35[BANK0 ] unsigned long 
 28229 ;; Return value:  Size  Location     Type
 28230 ;;                  1    wreg      void 
 28231 ;; Registers used:
 28232 ;;		wreg, status,2, status,0, cstack
 28233 ;; Tracked objects:
 28234 ;;		On entry : 0/0
 28235 ;;		On exit  : 0/0
 28236 ;;		Unchanged: 0/0
 28237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28238 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28239 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28240 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28241 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28242 ;;Total ram usage:       20 bytes
 28243 ;; Hardware stack levels used:    1
 28244 ;; Hardware stack levels required when called:   13
 28245 ;; This function calls:
 28246 ;;		__flash_is_busy
 28247 ;;		_spi_tx_rx
 28248 ;; This function is called by:
 28249 ;;		_flash_sector_read
 28250 ;;		_flash_partial_read
 28251 ;; This function uses a non-reentrant model
 28252 ;;
 28253                           
 28254                           	psect	text96
 28255  011962                     __ptext96:
 28256                           	opt stack 0
 28257  011962                     __flash_partial_read:
 28258                           	opt stack 13
 28259                           
 28260                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 28261                           
 28262                           ;incstack = 0
 28263  011962  ECDB  F095         	call	__flash_is_busy	;wreg free
 28264  011966  0900               	iorlw	0
 28265  011968  A4D8               	btfss	status,2,c
 28266  01196A  D7FB               	goto	__flash_partial_read
 28267                           
 28268                           ;flash.c: 318: address = page;
 28269  01196C  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 28270  011970  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 28271  011974  0100               	movlb	0	; () banked
 28272  011976  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 28273  011978  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 28274                           
 28275                           ; BSR set to: 0
 28276                           ;flash.c: 319: address <<= 9;
 28277  01197A  0E09               	movlw	9
 28278  01197C                     u17075:
 28279  01197C  90D8               	bcf	status,0,c
 28280  01197E  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 28281  011980  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 28282  011982  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 28283  011984  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 28284  011986  2EE8               	decfsz	wreg,f,c
 28285  011988  D7F9               	goto	u17075
 28286                           
 28287                           ; BSR set to: 0
 28288                           ;flash.c: 320: address |= start;
 28289  01198A  5175               	movf	__flash_partial_read@start& (0+255),w,b
 28290  01198C  6F7B               	movwf	??__flash_partial_read& (0+255),b
 28291  01198E  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 28292  011990  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 28293  011992  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 28294  011994  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 28295  011996  517B               	movf	??__flash_partial_read& (0+255),w,b
 28296  011998  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 28297  01199A  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 28298  01199C  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 28299  01199E  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 28300  0119A0  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 28301  0119A2  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 28302  0119A4  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 28303                           
 28304                           ; BSR set to: 0
 28305                           ;flash.c: 323: command[0] = 0x03;
 28306  0119A6  0E03               	movlw	3
 28307  0119A8  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 28308                           
 28309                           ; BSR set to: 0
 28310                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 28311  0119AA  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 28312                           
 28313                           ; BSR set to: 0
 28314                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 28315  0119AE  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 28316  0119B0  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 28317                           
 28318                           ; BSR set to: 0
 28319                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 28320  0119B2  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 28321                           
 28322                           ; BSR set to: 0
 28323                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 28324  0119B6  0E7F               	movlw	low __flash_partial_read@command
 28325  0119B8  6F60               	movwf	spi_tx_rx@command& (0+255),b
 28326  0119BA  0E00               	movlw	high __flash_partial_read@command
 28327  0119BC  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 28328  0119BE  0E00               	movlw	0
 28329  0119C0  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 28330  0119C2  0E04               	movlw	4
 28331  0119C4  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 28332  0119C6  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 28333  0119CA  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 28334  0119CE  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 28335  0119D2  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 28336  0119D6  ECEB  F089         	call	_spi_tx_rx	;wreg free
 28337  0119DA  0012               	return		;funcret
 28338  0119DC                     __end_of__flash_partial_read:
 28339                           	opt stack 0
 28340                           tosu	equ	0xFFF
 28341                           tosh	equ	0xFFE
 28342                           tosl	equ	0xFFD
 28343                           pclath	equ	0xFFA
 28344                           tblptru	equ	0xFF8
 28345                           tblptrh	equ	0xFF7
 28346                           tblptrl	equ	0xFF6
 28347                           tablat	equ	0xFF5
 28348                           prodh	equ	0xFF4
 28349                           prodl	equ	0xFF3
 28350                           intcon	equ	0xFF2
 28351                           postinc0	equ	0xFEE
 28352                           wreg	equ	0xFE8
 28353                           indf1	equ	0xFE7
 28354                           postdec1	equ	0xFE5
 28355                           plusw1	equ	0xFE3
 28356                           fsr1h	equ	0xFE2
 28357                           fsr1l	equ	0xFE1
 28358                           indf2	equ	0xFDF
 28359                           postinc2	equ	0xFDE
 28360                           postdec2	equ	0xFDD
 28361                           plusw2	equ	0xFDB
 28362                           fsr2h	equ	0xFDA
 28363                           fsr2l	equ	0xFD9
 28364                           status	equ	0xFD8
 28365                           
 28366 ;; *************** function __flash_is_busy *****************
 28367 ;; Defined at:
 28368 ;;		line 281 in file "flash.c"
 28369 ;; Parameters:    Size  Location     Type
 28370 ;;		None
 28371 ;; Auto vars:     Size  Location     Type
 28372 ;;  status          2   17[BANK0 ] unsigned int 
 28373 ;; Return value:  Size  Location     Type
 28374 ;;                  1    wreg      unsigned char 
 28375 ;; Registers used:
 28376 ;;		wreg, status,2, status,0, cstack
 28377 ;; Tracked objects:
 28378 ;;		On entry : 0/0
 28379 ;;		On exit  : 0/0
 28380 ;;		Unchanged: 0/0
 28381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28383 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28385 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28386 ;;Total ram usage:        2 bytes
 28387 ;; Hardware stack levels used:    1
 28388 ;; Hardware stack levels required when called:   12
 28389 ;; This function calls:
 28390 ;;		__flash_get_status
 28391 ;;		__flash_wakeup
 28392 ;; This function is called by:
 28393 ;;		__flash_set_page_size
 28394 ;;		__flash_compare_page_to_buffer
 28395 ;;		__flash_write_to_buffer
 28396 ;;		__flash_write_page_from_buffer
 28397 ;;		__flash_partial_read
 28398 ;;		__flash_copy_page_to_buffer
 28399 ;;		__flash_erase_page
 28400 ;;		__flash_buffer_read
 28401 ;;		_flash_is_busy
 28402 ;;		_flash_set_power_state
 28403 ;;		_flash_partial_write
 28404 ;; This function uses a non-reentrant model
 28405 ;;
 28406                           
 28407                           	psect	text97
 28408  012BB6                     __ptext97:
 28409                           	opt stack 0
 28410  012BB6                     __flash_is_busy:
 28411                           	opt stack 15
 28412                           
 28413                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 28414                           
 28415                           ;incstack = 0
 28416  012BB6  501F               	movf	_power_state,w,c
 28417  012BB8  A4D8               	btfss	status,2,c
 28418                           
 28419                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 28420  012BBA  EC61  F091         	call	__flash_wakeup	;wreg free
 28421                           
 28422                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 28423  012BBE  EC79  F094         	call	__flash_get_status	;wreg free
 28424  012BC2  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 28425  012BC6  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 28426                           
 28427                           ;flash.c: 295: if(status & 0b0000000010000000)
 28428  012BCA  0100               	movlb	0	; () banked
 28429  012BCC  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 28430  012BCE  D002               	goto	l1531
 28431                           
 28432                           ; BSR set to: 0
 28433                           ;flash.c: 296: {;flash.c: 298: return 0;
 28434  012BD0  0E00               	movlw	0
 28435                           
 28436                           ; BSR set to: 0
 28437                           ;flash.c: 299: }
 28438                           
 28439                           ; BSR set to: 0
 28440  012BD2  0012               	return	
 28441  012BD4                     l1531:
 28442                           
 28443                           ; BSR set to: 0
 28444                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 28445                           
 28446                           ; BSR set to: 0
 28447  012BD4  0E01               	movlw	1
 28448                           
 28449                           ; BSR set to: 0
 28450  012BD6  0012               	return	
 28451  012BD8                     __end_of__flash_is_busy:
 28452                           	opt stack 0
 28453                           tosu	equ	0xFFF
 28454                           tosh	equ	0xFFE
 28455                           tosl	equ	0xFFD
 28456                           pclath	equ	0xFFA
 28457                           tblptru	equ	0xFF8
 28458                           tblptrh	equ	0xFF7
 28459                           tblptrl	equ	0xFF6
 28460                           tablat	equ	0xFF5
 28461                           prodh	equ	0xFF4
 28462                           prodl	equ	0xFF3
 28463                           intcon	equ	0xFF2
 28464                           postinc0	equ	0xFEE
 28465                           wreg	equ	0xFE8
 28466                           indf1	equ	0xFE7
 28467                           postdec1	equ	0xFE5
 28468                           plusw1	equ	0xFE3
 28469                           fsr1h	equ	0xFE2
 28470                           fsr1l	equ	0xFE1
 28471                           indf2	equ	0xFDF
 28472                           postinc2	equ	0xFDE
 28473                           postdec2	equ	0xFDD
 28474                           plusw2	equ	0xFDB
 28475                           fsr2h	equ	0xFDA
 28476                           fsr2l	equ	0xFD9
 28477                           status	equ	0xFD8
 28478                           
 28479 ;; *************** function __flash_wakeup *****************
 28480 ;; Defined at:
 28481 ;;		line 128 in file "flash.c"
 28482 ;; Parameters:    Size  Location     Type
 28483 ;;		None
 28484 ;; Auto vars:     Size  Location     Type
 28485 ;;  command         1    8[BANK0 ] unsigned char 
 28486 ;; Return value:  Size  Location     Type
 28487 ;;                  1    wreg      void 
 28488 ;; Registers used:
 28489 ;;		wreg, status,2, status,0, cstack
 28490 ;; Tracked objects:
 28491 ;;		On entry : 0/0
 28492 ;;		On exit  : 0/0
 28493 ;;		Unchanged: 0/0
 28494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28498 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28499 ;;Total ram usage:        1 bytes
 28500 ;; Hardware stack levels used:    1
 28501 ;; Hardware stack levels required when called:   11
 28502 ;; This function calls:
 28503 ;;		_spi_tx
 28504 ;; This function is called by:
 28505 ;;		__flash_is_busy
 28506 ;;		_flash_set_power_state
 28507 ;; This function uses a non-reentrant model
 28508 ;;
 28509                           
 28510                           	psect	text98
 28511  0122C2                     __ptext98:
 28512                           	opt stack 0
 28513  0122C2                     __flash_wakeup:
 28514                           	opt stack 15
 28515                           
 28516                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 28517                           
 28518                           ; BSR set to: 0
 28519                           ;incstack = 0
 28520  0122C2  D020               	goto	l1480
 28521  0122C4                     
 28522                           ;flash.c: 135: command = 0xAB;
 28523  0122C4  0EAB               	movlw	171
 28524  0122C6  0100               	movlb	0	; () banked
 28525  0122C8  6F68               	movwf	__flash_wakeup@command& (0+255),b
 28526                           
 28527                           ; BSR set to: 0
 28528                           ;flash.c: 136: spi_tx(&command, 1);
 28529  0122CA  0E68               	movlw	low __flash_wakeup@command
 28530  0122CC  6F60               	movwf	spi_tx@data& (0+255),b
 28531  0122CE  0E00               	movlw	high __flash_wakeup@command
 28532  0122D0  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 28533  0122D2  0E00               	movlw	0
 28534  0122D4  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 28535  0122D6  0E01               	movlw	1
 28536  0122D8  6F62               	movwf	spi_tx@length& (0+255),b
 28537  0122DA  ECDE  F08F         	call	_spi_tx	;wreg free
 28538                           
 28539                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 28540  0122DE  0E17               	movlw	23
 28541  0122E0                     u24077:
 28542  0122E0  2EE8               	decfsz	wreg,f,c
 28543  0122E2  D7FE               	bra	u24077
 28544  0122E4  F000               	nop	
 28545                           
 28546                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 28547  0122E6  0E00               	movlw	0
 28548  0122E8  6E1F               	movwf	_power_state,c
 28549                           
 28550                           ;flash.c: 139: break;
 28551  0122EA  0012               	return	
 28552  0122EC                     l1483:
 28553                           
 28554                           ;flash.c: 144: LATDbits.LD7 = 0;
 28555  0122EC  9E8C               	bcf	3980,7,c	;volatile
 28556                           
 28557                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 28558  0122EE  0E0D               	movlw	13
 28559  0122F0                     u24087:
 28560  0122F0  2EE8               	decfsz	wreg,f,c
 28561  0122F2  D7FE               	bra	u24087
 28562  0122F4  F000               	nop	
 28563                           
 28564                           ;flash.c: 146: LATDbits.LD7 = 1;
 28565  0122F6  8E8C               	bsf	3980,7,c	;volatile
 28566                           
 28567                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 28568  0122F8  0E50               	movlw	80
 28569  0122FA                     u24097:
 28570  0122FA  2EE8               	decfsz	wreg,f,c
 28571  0122FC  D7FE               	bra	u24097
 28572                           
 28573                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 28574  0122FE  0E00               	movlw	0
 28575  012300  6E1F               	movwf	_power_state,c
 28576                           
 28577                           ;flash.c: 150: }
 28578                           
 28579                           ;flash.c: 149: break;
 28580  012302  0012               	return	
 28581  012304                     l1480:
 28582  012304  501F               	movf	_power_state,w,c
 28583                           
 28584                           ; Switch size 1, requested type "space"
 28585                           ; Number of cases is 2, Range of values is 1 to 2
 28586                           ; switch strategies available:
 28587                           ; Name         Instructions Cycles
 28588                           ; simple_byte            7     4 (average)
 28589                           ;	Chosen strategy is simple_byte
 28590  012306  0A01               	xorlw	1	; case 1
 28591  012308  B4D8               	btfsc	status,2,c
 28592  01230A  D7DC               	goto	l1481
 28593  01230C  0A03               	xorlw	3	; case 2
 28594  01230E  A4D8               	btfss	status,2,c
 28595  012310  0012               	return	
 28596  012312  D7EC               	goto	l1483
 28597  012314                     __end_of__flash_wakeup:
 28598                           	opt stack 0
 28599                           tosu	equ	0xFFF
 28600                           tosh	equ	0xFFE
 28601                           tosl	equ	0xFFD
 28602                           pclath	equ	0xFFA
 28603                           tblptru	equ	0xFF8
 28604                           tblptrh	equ	0xFF7
 28605                           tblptrl	equ	0xFF6
 28606                           tablat	equ	0xFF5
 28607                           prodh	equ	0xFF4
 28608                           prodl	equ	0xFF3
 28609                           intcon	equ	0xFF2
 28610                           postinc0	equ	0xFEE
 28611                           wreg	equ	0xFE8
 28612                           indf1	equ	0xFE7
 28613                           postdec1	equ	0xFE5
 28614                           plusw1	equ	0xFE3
 28615                           fsr1h	equ	0xFE2
 28616                           fsr1l	equ	0xFE1
 28617                           indf2	equ	0xFDF
 28618                           postinc2	equ	0xFDE
 28619                           postdec2	equ	0xFDD
 28620                           plusw2	equ	0xFDB
 28621                           fsr2h	equ	0xFDA
 28622                           fsr2l	equ	0xFD9
 28623                           status	equ	0xFD8
 28624                           
 28625 ;; *************** function _spi_tx *****************
 28626 ;; Defined at:
 28627 ;;		line 108 in file "spi.c"
 28628 ;; Parameters:    Size  Location     Type
 28629 ;;  data            2    0[BANK0 ] PTR unsigned char 
 28630 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 28631 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 28632 ;;  length          2    2[BANK0 ] unsigned int 
 28633 ;; Auto vars:     Size  Location     Type
 28634 ;;		None
 28635 ;; Return value:  Size  Location     Type
 28636 ;;                  1    wreg      void 
 28637 ;; Registers used:
 28638 ;;		wreg, status,2, status,0
 28639 ;; Tracked objects:
 28640 ;;		On entry : 0/0
 28641 ;;		On exit  : 0/0
 28642 ;;		Unchanged: 0/0
 28643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28644 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28646 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28647 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28648 ;;Total ram usage:        8 bytes
 28649 ;; Hardware stack levels used:    1
 28650 ;; Hardware stack levels required when called:   10
 28651 ;; This function calls:
 28652 ;;		Nothing
 28653 ;; This function is called by:
 28654 ;;		__flash_set_page_size
 28655 ;;		__flash_wakeup
 28656 ;;		__flash_compare_page_to_buffer
 28657 ;;		__flash_write_page_from_buffer
 28658 ;;		__flash_copy_page_to_buffer
 28659 ;;		__flash_erase_page
 28660 ;;		_flash_set_power_state
 28661 ;; This function uses a non-reentrant model
 28662 ;;
 28663                           
 28664                           	psect	text99
 28665  011FBC                     __ptext99:
 28666                           	opt stack 0
 28667  011FBC                     _spi_tx:
 28668                           	opt stack 17
 28669                           
 28670                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 28671                           
 28672                           ;incstack = 0
 28673  011FBC  9E88               	bcf	3976,7,c	;volatile
 28674                           
 28675                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 28676  011FBE  9C88               	bcf	3976,6,c	;volatile
 28677                           
 28678                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 28679  011FC0  8A88               	bsf	3976,5,c	;volatile
 28680                           
 28681                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 28682  011FC2  9888               	bcf	3976,4,c	;volatile
 28683                           
 28684                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 28685  011FC4  9688               	bcf	3976,3,c	;volatile
 28686                           
 28687                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 28688  011FC6  8488               	bsf	3976,2,c	;volatile
 28689                           
 28690                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 28691  011FC8  9288               	bcf	3976,1,c	;volatile
 28692                           
 28693                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 28694  011FCA  9886               	bcf	3974,4,c	;volatile
 28695  011FCC  9A86               	bcf	3974,5,c	;volatile
 28696  011FCE  9C86               	bcf	3974,6,c	;volatile
 28697  011FD0  9E86               	bcf	3974,7,c	;volatile
 28698                           
 28699                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 28700  011FD2  9086               	bcf	3974,0,c	;volatile
 28701  011FD4  9286               	bcf	3974,1,c	;volatile
 28702  011FD6  9486               	bcf	3974,2,c	;volatile
 28703  011FD8  9686               	bcf	3974,3,c	;volatile
 28704                           
 28705                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 28706  011FDA  0100               	movlb	0	; () banked
 28707  011FDC  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 28708  011FDE  6E6A               	movwf	3946,c	;volatile
 28709                           
 28710                           ; BSR set to: 0
 28711                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 28712  011FE0  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 28713                           
 28714                           ; BSR set to: 0
 28715                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 28716  011FE4  0EFF               	movlw	255
 28717  011FE6  6F64               	movwf	??_spi_tx& (0+255),b
 28718  011FE8  0EFF               	movlw	255
 28719  011FEA  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 28720  011FEC  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 28721  011FF0  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 28722  011FF4  5164               	movf	??_spi_tx& (0+255),w,b
 28723  011FF6  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 28724  011FF8  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 28725  011FFA  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 28726  011FFC  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 28727  012000  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 28728  012002  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 28729  012004  6E66               	movwf	3942,c	;volatile
 28730                           
 28731                           ; BSR set to: 0
 28732                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 28733  012006  0562               	decf	spi_tx@length& (0+255),w,b
 28734  012008  6E67               	movwf	3943,c	;volatile
 28735                           
 28736                           ; BSR set to: 0
 28737                           ;spi.c: 136: LATDbits.LD7 = 0;
 28738  01200A  9E8C               	bcf	3980,7,c	;volatile
 28739                           
 28740                           ; BSR set to: 0
 28741                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 28742  01200C  8088               	bsf	3976,0,c	;volatile
 28743  01200E                     
 28744                           ; BSR set to: 0
 28745  01200E  B088               	btfsc	3976,0,c	;volatile
 28746  012010  D7FE               	goto	l2119
 28747                           
 28748                           ;spi.c: 139: LATDbits.LD7 = 1;
 28749  012012  8E8C               	bsf	3980,7,c	;volatile
 28750  012014  0012               	return		;funcret
 28751  012016                     __end_of_spi_tx:
 28752                           	opt stack 0
 28753                           tosu	equ	0xFFF
 28754                           tosh	equ	0xFFE
 28755                           tosl	equ	0xFFD
 28756                           pclath	equ	0xFFA
 28757                           tblptru	equ	0xFF8
 28758                           tblptrh	equ	0xFF7
 28759                           tblptrl	equ	0xFF6
 28760                           tablat	equ	0xFF5
 28761                           prodh	equ	0xFF4
 28762                           prodl	equ	0xFF3
 28763                           intcon	equ	0xFF2
 28764                           postinc0	equ	0xFEE
 28765                           wreg	equ	0xFE8
 28766                           indf1	equ	0xFE7
 28767                           postdec1	equ	0xFE5
 28768                           plusw1	equ	0xFE3
 28769                           fsr1h	equ	0xFE2
 28770                           fsr1l	equ	0xFE1
 28771                           indf2	equ	0xFDF
 28772                           postinc2	equ	0xFDE
 28773                           postdec2	equ	0xFDD
 28774                           plusw2	equ	0xFDB
 28775                           fsr2h	equ	0xFDA
 28776                           fsr2l	equ	0xFD9
 28777                           status	equ	0xFD8
 28778                           
 28779 ;; *************** function __flash_get_status *****************
 28780 ;; Defined at:
 28781 ;;		line 117 in file "flash.c"
 28782 ;; Parameters:    Size  Location     Type
 28783 ;;		None
 28784 ;; Auto vars:     Size  Location     Type
 28785 ;;  status          2   15[BANK0 ] unsigned int 
 28786 ;;  command         1   14[BANK0 ] unsigned char 
 28787 ;; Return value:  Size  Location     Type
 28788 ;;                  2   12[BANK0 ] unsigned int 
 28789 ;; Registers used:
 28790 ;;		wreg, status,2, status,0, cstack
 28791 ;; Tracked objects:
 28792 ;;		On entry : 0/0
 28793 ;;		On exit  : 0/0
 28794 ;;		Unchanged: 0/0
 28795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28797 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28799 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28800 ;;Total ram usage:        5 bytes
 28801 ;; Hardware stack levels used:    1
 28802 ;; Hardware stack levels required when called:   11
 28803 ;; This function calls:
 28804 ;;		_spi_tx_rx
 28805 ;; This function is called by:
 28806 ;;		__flash_compare_page_to_buffer
 28807 ;;		__flash_is_busy
 28808 ;; This function uses a non-reentrant model
 28809 ;;
 28810                           
 28811                           	psect	text100
 28812  0128F2                     __ptext100:
 28813                           	opt stack 0
 28814  0128F2                     __flash_get_status:
 28815                           	opt stack 15
 28816                           
 28817                           ;flash.c: 121: uint8_t command = 0xD7;
 28818                           
 28819                           ;incstack = 0
 28820  0128F2  0ED7               	movlw	215
 28821  0128F4  0100               	movlb	0	; () banked
 28822  0128F6  6F6E               	movwf	__flash_get_status@command& (0+255),b
 28823                           
 28824                           ; BSR set to: 0
 28825                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 28826  0128F8  0E6E               	movlw	low __flash_get_status@command
 28827  0128FA  6F60               	movwf	spi_tx_rx@command& (0+255),b
 28828  0128FC  0E00               	movlw	high __flash_get_status@command
 28829  0128FE  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 28830  012900  0E00               	movlw	0
 28831  012902  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 28832  012904  0E01               	movlw	1
 28833  012906  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 28834  012908  0E6F               	movlw	low __flash_get_status@status
 28835  01290A  6F64               	movwf	spi_tx_rx@data& (0+255),b
 28836  01290C  0E00               	movlw	high __flash_get_status@status
 28837  01290E  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 28838  012910  0E00               	movlw	0
 28839  012912  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 28840  012914  0E02               	movlw	2
 28841  012916  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 28842  012918  ECEB  F089         	call	_spi_tx_rx	;wreg free
 28843                           
 28844                           ;flash.c: 124: return status;
 28845  01291C  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 28846  012920  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 28847  012924  0012               	return	
 28848  012926                     __end_of__flash_get_status:
 28849                           	opt stack 0
 28850                           tosu	equ	0xFFF
 28851                           tosh	equ	0xFFE
 28852                           tosl	equ	0xFFD
 28853                           pclath	equ	0xFFA
 28854                           tblptru	equ	0xFF8
 28855                           tblptrh	equ	0xFF7
 28856                           tblptrl	equ	0xFF6
 28857                           tablat	equ	0xFF5
 28858                           prodh	equ	0xFF4
 28859                           prodl	equ	0xFF3
 28860                           intcon	equ	0xFF2
 28861                           postinc0	equ	0xFEE
 28862                           wreg	equ	0xFE8
 28863                           indf1	equ	0xFE7
 28864                           postdec1	equ	0xFE5
 28865                           plusw1	equ	0xFE3
 28866                           fsr1h	equ	0xFE2
 28867                           fsr1l	equ	0xFE1
 28868                           indf2	equ	0xFDF
 28869                           postinc2	equ	0xFDE
 28870                           postdec2	equ	0xFDD
 28871                           plusw2	equ	0xFDB
 28872                           fsr2h	equ	0xFDA
 28873                           fsr2l	equ	0xFD9
 28874                           status	equ	0xFD8
 28875                           
 28876 ;; *************** function _spi_tx_rx *****************
 28877 ;; Defined at:
 28878 ;;		line 199 in file "spi.c"
 28879 ;; Parameters:    Size  Location     Type
 28880 ;;  command         2    0[BANK0 ] PTR unsigned char 
 28881 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 28882 ;;  command_leng    2    2[BANK0 ] unsigned int 
 28883 ;;  data            2    4[BANK0 ] PTR unsigned char 
 28884 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 28885 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 28886 ;;		 -> buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 28887 ;;  data_length     2    6[BANK0 ] unsigned int 
 28888 ;; Auto vars:     Size  Location     Type
 28889 ;;		None
 28890 ;; Return value:  Size  Location     Type
 28891 ;;                  1    wreg      void 
 28892 ;; Registers used:
 28893 ;;		wreg, status,2, status,0
 28894 ;; Tracked objects:
 28895 ;;		On entry : 0/0
 28896 ;;		On exit  : 0/0
 28897 ;;		Unchanged: 0/0
 28898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28899 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28901 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28902 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28903 ;;Total ram usage:       12 bytes
 28904 ;; Hardware stack levels used:    1
 28905 ;; Hardware stack levels required when called:   10
 28906 ;; This function calls:
 28907 ;;		Nothing
 28908 ;; This function is called by:
 28909 ;;		__flash_get_status
 28910 ;;		__flash_partial_read
 28911 ;;		__flash_buffer_read
 28912 ;; This function uses a non-reentrant model
 28913 ;;
 28914                           
 28915                           	psect	text101
 28916  0113D6                     __ptext101:
 28917                           	opt stack 0
 28918  0113D6                     _spi_tx_rx:
 28919                           	opt stack 15
 28920                           
 28921                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 28922                           
 28923                           ;incstack = 0
 28924  0113D6  9E88               	bcf	3976,7,c	;volatile
 28925                           
 28926                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 28927  0113D8  9C88               	bcf	3976,6,c	;volatile
 28928                           
 28929                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 28930  0113DA  8A88               	bsf	3976,5,c	;volatile
 28931                           
 28932                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 28933  0113DC  9888               	bcf	3976,4,c	;volatile
 28934                           
 28935                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 28936  0113DE  9688               	bcf	3976,3,c	;volatile
 28937                           
 28938                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 28939  0113E0  8488               	bsf	3976,2,c	;volatile
 28940                           
 28941                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 28942  0113E2  9288               	bcf	3976,1,c	;volatile
 28943                           
 28944                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 28945  0113E4  9886               	bcf	3974,4,c	;volatile
 28946  0113E6  9A86               	bcf	3974,5,c	;volatile
 28947  0113E8  9C86               	bcf	3974,6,c	;volatile
 28948  0113EA  9E86               	bcf	3974,7,c	;volatile
 28949                           
 28950                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 28951  0113EC  9086               	bcf	3974,0,c	;volatile
 28952  0113EE  9286               	bcf	3974,1,c	;volatile
 28953  0113F0  9486               	bcf	3974,2,c	;volatile
 28954  0113F2  9686               	bcf	3974,3,c	;volatile
 28955                           
 28956                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 28957  0113F4  0100               	movlb	0	; () banked
 28958  0113F6  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 28959  0113F8  6E6A               	movwf	3946,c	;volatile
 28960                           
 28961                           ; BSR set to: 0
 28962                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 28963  0113FA  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 28964                           
 28965                           ; BSR set to: 0
 28966                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 28967  0113FE  0EFF               	movlw	255
 28968  011400  6F68               	movwf	??_spi_tx_rx& (0+255),b
 28969  011402  0EFF               	movlw	255
 28970  011404  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 28971  011406  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 28972  01140A  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 28973  01140E  5168               	movf	??_spi_tx_rx& (0+255),w,b
 28974  011410  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 28975  011412  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 28976  011414  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 28977  011416  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 28978  01141A  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 28979  01141C  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 28980  01141E  6E66               	movwf	3942,c	;volatile
 28981                           
 28982                           ; BSR set to: 0
 28983                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 28984  011420  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 28985  011422  6E67               	movwf	3943,c	;volatile
 28986                           
 28987                           ; BSR set to: 0
 28988                           ;spi.c: 227: LATDbits.LD7 = 0;
 28989  011424  9E8C               	bcf	3980,7,c	;volatile
 28990                           
 28991                           ; BSR set to: 0
 28992                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 28993  011426  8088               	bsf	3976,0,c	;volatile
 28994  011428                     
 28995                           ; BSR set to: 0
 28996  011428  B088               	btfsc	3976,0,c	;volatile
 28997  01142A  D7FE               	goto	l2134
 28998                           
 28999                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 29000  01142C  9A88               	bcf	3976,5,c	;volatile
 29001                           
 29002                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 29003  01142E  8888               	bsf	3976,4,c	;volatile
 29004                           
 29005                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 29006  011430  9688               	bcf	3976,3,c	;volatile
 29007                           
 29008                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 29009  011432  9488               	bcf	3976,2,c	;volatile
 29010                           
 29011                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 29012  011434  0100               	movlb	0	; () banked
 29013  011436  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 29014  011438  6E68               	movwf	3944,c	;volatile
 29015                           
 29016                           ; BSR set to: 0
 29017                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 29018  01143A  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 29019                           
 29020                           ; BSR set to: 0
 29021                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 29022  01143E  0EFF               	movlw	255
 29023  011440  6F68               	movwf	??_spi_tx_rx& (0+255),b
 29024  011442  0EFF               	movlw	255
 29025  011444  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 29026  011446  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 29027  01144A  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 29028  01144E  5168               	movf	??_spi_tx_rx& (0+255),w,b
 29029  011450  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 29030  011452  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 29031  011454  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 29032  011456  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 29033  01145A  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 29034  01145C  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 29035  01145E  6E66               	movwf	3942,c	;volatile
 29036                           
 29037                           ; BSR set to: 0
 29038                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 29039  011460  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 29040  011462  6E67               	movwf	3943,c	;volatile
 29041                           
 29042                           ; BSR set to: 0
 29043                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 29044  011464  8088               	bsf	3976,0,c	;volatile
 29045  011466                     
 29046                           ; BSR set to: 0
 29047  011466  B088               	btfsc	3976,0,c	;volatile
 29048  011468  D7FE               	goto	l2137
 29049                           
 29050                           ;spi.c: 254: LATDbits.LD7 = 1;
 29051  01146A  8E8C               	bsf	3980,7,c	;volatile
 29052  01146C  0012               	return		;funcret
 29053  01146E                     __end_of_spi_tx_rx:
 29054                           	opt stack 0
 29055                           tosu	equ	0xFFF
 29056                           tosh	equ	0xFFE
 29057                           tosl	equ	0xFFD
 29058                           pclath	equ	0xFFA
 29059                           tblptru	equ	0xFF8
 29060                           tblptrh	equ	0xFF7
 29061                           tblptrl	equ	0xFF6
 29062                           tablat	equ	0xFF5
 29063                           prodh	equ	0xFF4
 29064                           prodl	equ	0xFF3
 29065                           intcon	equ	0xFF2
 29066                           postinc0	equ	0xFEE
 29067                           wreg	equ	0xFE8
 29068                           indf1	equ	0xFE7
 29069                           postdec1	equ	0xFE5
 29070                           plusw1	equ	0xFE3
 29071                           fsr1h	equ	0xFE2
 29072                           fsr1l	equ	0xFE1
 29073                           indf2	equ	0xFDF
 29074                           postinc2	equ	0xFDE
 29075                           postdec2	equ	0xFDD
 29076                           plusw2	equ	0xFDB
 29077                           fsr2h	equ	0xFDA
 29078                           fsr2l	equ	0xFD9
 29079                           status	equ	0xFD8
 29080                           
 29081 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 29082 ;; Defined at:
 29083 ;;		line 993 in file "usb_device_msd.c"
 29084 ;; Parameters:    Size  Location     Type
 29085 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 29086 ;; Auto vars:     Size  Location     Type
 29087 ;;		None
 29088 ;; Return value:  Size  Location     Type
 29089 ;;                  1    wreg      void 
 29090 ;; Registers used:
 29091 ;;		wreg, status,2, status,0
 29092 ;; Tracked objects:
 29093 ;;		On entry : 0/0
 29094 ;;		On exit  : 0/0
 29095 ;;		Unchanged: 0/0
 29096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29099 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29100 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29101 ;;Total ram usage:        6 bytes
 29102 ;; Hardware stack levels used:    1
 29103 ;; Hardware stack levels required when called:   10
 29104 ;; This function calls:
 29105 ;;		Nothing
 29106 ;; This function is called by:
 29107 ;;		_MSDProcessCommandMediaPresent
 29108 ;; This function uses a non-reentrant model
 29109 ;;
 29110                           
 29111                           	psect	text102
 29112  010E98                     __ptext102:
 29113                           	opt stack 0
 29114  010E98                     _MSDComputeDeviceInAndResidue:
 29115                           	opt stack 16
 29116                           
 29117                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 29118                           
 29119                           ;incstack = 0
 29120  010E98  0100               	movlb	0	; () banked
 29121  010E9A  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 29122  010E9C  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 29123  010E9E  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 29124  010EA0  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 29125  010EA2  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 29126  010EA4  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 29127  010EA6  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 29128  010EA8  0101               	movlb	1	; () banked
 29129  010EAA  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 29130  010EAC  0100               	movlb	0	; () banked
 29131  010EAE  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 29132  010EB0  0101               	movlb	1	; () banked
 29133  010EB2  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 29134  010EB4  0100               	movlb	0	; () banked
 29135  010EB6  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 29136  010EB8  0101               	movlb	1	; () banked
 29137  010EBA  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 29138  010EBC  0100               	movlb	0	; () banked
 29139  010EBE  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 29140  010EC0  0101               	movlb	1	; () banked
 29141  010EC2  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 29142  010EC4  B0D8               	btfsc	status,0,c
 29143  010EC6  D00E               	goto	l675
 29144                           
 29145                           ; BSR set to: 1
 29146                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 29147  010EC8  0E00               	movlw	0
 29148  010ECA  010D               	movlb	13	; () banked
 29149  010ECC  6F88               	movwf	136,b	;volatile
 29150  010ECE  0E00               	movlw	0
 29151  010ED0  6F89               	movwf	137,b	;volatile
 29152  010ED2  0E00               	movlw	0
 29153  010ED4  6F8A               	movwf	138,b	;volatile
 29154  010ED6  0E00               	movlw	0
 29155  010ED8  6F8B               	movwf	139,b	;volatile
 29156                           
 29157                           ; BSR set to: 13
 29158                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 29159  010EDA  C108  F011         	movff	_gblCBW+8,_TransferLength
 29160  010EDE  C109  F012         	movff	_gblCBW+9,_TransferLength+1
 29161                           
 29162                           ;usb_device_msd.c: 1002: }
 29163  010EE2  0012               	return	
 29164  010EE4                     l675:
 29165                           
 29166                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 29167                           
 29168                           ; BSR set to: 13
 29169  010EE4  5011               	movf	_TransferLength,w,c
 29170  010EE6  0100               	movlb	0	; () banked
 29171  010EE8  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 29172  010EEA  5012               	movf	_TransferLength+1,w,c
 29173  010EEC  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 29174  010EEE  B0D8               	btfsc	status,0,c
 29175  010EF0  D004               	goto	l677
 29176                           
 29177                           ; BSR set to: 0
 29178                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 29179  010EF2  C060  F011         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 29180  010EF6  C061  F012         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 29181  010EFA                     l677:
 29182                           
 29183                           ; BSR set to: 0
 29184                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 29185                           
 29186                           ; BSR set to: 0
 29187  010EFA  5011               	movf	_TransferLength,w,c
 29188  010EFC  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 29189  010EFE  5012               	movf	_TransferLength+1,w,c
 29190  010F00  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 29191  010F02  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 29192  010F04  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 29193  010F06  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 29194  010F08  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 29195  010F0A  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 29196  010F0C  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 29197  010F0E  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 29198  010F10  0E00               	movlw	0
 29199  010F12  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 29200  010F14  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 29201  010F16  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 29202  010F18  0101               	movlb	1	; () banked
 29203  010F1A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 29204  010F1C  0100               	movlb	0	; () banked
 29205  010F1E  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 29206  010F20  010D               	movlb	13	; () banked
 29207  010F22  6F88               	movwf	136,b	;volatile
 29208  010F24  0101               	movlb	1	; () banked
 29209  010F26  5109               	movf	(_gblCBW+9)& (0+255),w,b
 29210  010F28  0100               	movlb	0	; () banked
 29211  010F2A  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 29212  010F2C  010D               	movlb	13	; () banked
 29213  010F2E  6F89               	movwf	137,b	;volatile
 29214  010F30  0101               	movlb	1	; () banked
 29215  010F32  510A               	movf	(_gblCBW+10)& (0+255),w,b
 29216  010F34  0100               	movlb	0	; () banked
 29217  010F36  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 29218  010F38  010D               	movlb	13	; () banked
 29219  010F3A  6F8A               	movwf	138,b	;volatile
 29220  010F3C  0101               	movlb	1	; () banked
 29221  010F3E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 29222  010F40  0100               	movlb	0	; () banked
 29223  010F42  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 29224  010F44  010D               	movlb	13	; () banked
 29225  010F46  6F8B               	movwf	139,b	;volatile
 29226  010F48  0012               	return	
 29227  010F4A                     __end_of_MSDComputeDeviceInAndResidue:
 29228                           	opt stack 0
 29229                           tosu	equ	0xFFF
 29230                           tosh	equ	0xFFE
 29231                           tosl	equ	0xFFD
 29232                           pclath	equ	0xFFA
 29233                           tblptru	equ	0xFF8
 29234                           tblptrh	equ	0xFF7
 29235                           tblptrl	equ	0xFF6
 29236                           tablat	equ	0xFF5
 29237                           prodh	equ	0xFF4
 29238                           prodl	equ	0xFF3
 29239                           intcon	equ	0xFF2
 29240                           postinc0	equ	0xFEE
 29241                           wreg	equ	0xFE8
 29242                           indf1	equ	0xFE7
 29243                           postdec1	equ	0xFE5
 29244                           plusw1	equ	0xFE3
 29245                           fsr1h	equ	0xFE2
 29246                           fsr1l	equ	0xFE1
 29247                           indf2	equ	0xFDF
 29248                           postinc2	equ	0xFDE
 29249                           postdec2	equ	0xFDD
 29250                           plusw2	equ	0xFDB
 29251                           fsr2h	equ	0xFDA
 29252                           fsr2l	equ	0xFD9
 29253                           status	equ	0xFD8
 29254                           
 29255 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 29256 ;; Defined at:
 29257 ;;		line 18 in file "external_flash.c"
 29258 ;; Parameters:    Size  Location     Type
 29259 ;;  config          2    0[BANK0 ] PTR void 
 29260 ;;		 -> NULL(0), 
 29261 ;; Auto vars:     Size  Location     Type
 29262 ;;		None
 29263 ;; Return value:  Size  Location     Type
 29264 ;;                  2    0[BANK0 ] unsigned int 
 29265 ;; Registers used:
 29266 ;;		wreg, status,2
 29267 ;; Tracked objects:
 29268 ;;		On entry : 0/0
 29269 ;;		On exit  : 0/0
 29270 ;;		Unchanged: 0/0
 29271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29272 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29275 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29276 ;;Total ram usage:        2 bytes
 29277 ;; Hardware stack levels used:    1
 29278 ;; Hardware stack levels required when called:   10
 29279 ;; This function calls:
 29280 ;;		Nothing
 29281 ;; This function is called by:
 29282 ;;		_MSDProcessCommandMediaPresent
 29283 ;; This function uses a non-reentrant model
 29284 ;;
 29285                           
 29286                           	psect	text103
 29287  012CD6                     __ptext103:
 29288                           	opt stack 0
 29289  012CD6                     _ExternalFlash_SectorSizeRead:
 29290                           	opt stack 16
 29291                           
 29292                           ;external_flash.c: 20: return 512;
 29293                           
 29294                           ; BSR set to: 13
 29295                           ;incstack = 0
 29296  012CD6  0E02               	movlw	2
 29297  012CD8  0100               	movlb	0	; () banked
 29298  012CDA  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 29299  012CDC  0E00               	movlw	0
 29300  012CDE  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 29301  012CE0  0012               	return	
 29302  012CE2                     __end_of_ExternalFlash_SectorSizeRead:
 29303                           	opt stack 0
 29304                           tosu	equ	0xFFF
 29305                           tosh	equ	0xFFE
 29306                           tosl	equ	0xFFD
 29307                           pclath	equ	0xFFA
 29308                           tblptru	equ	0xFF8
 29309                           tblptrh	equ	0xFF7
 29310                           tblptrl	equ	0xFF6
 29311                           tablat	equ	0xFF5
 29312                           prodh	equ	0xFF4
 29313                           prodl	equ	0xFF3
 29314                           intcon	equ	0xFF2
 29315                           postinc0	equ	0xFEE
 29316                           wreg	equ	0xFE8
 29317                           indf1	equ	0xFE7
 29318                           postdec1	equ	0xFE5
 29319                           plusw1	equ	0xFE3
 29320                           fsr1h	equ	0xFE2
 29321                           fsr1l	equ	0xFE1
 29322                           indf2	equ	0xFDF
 29323                           postinc2	equ	0xFDE
 29324                           postdec2	equ	0xFDD
 29325                           plusw2	equ	0xFDB
 29326                           fsr2h	equ	0xFDA
 29327                           fsr2l	equ	0xFD9
 29328                           status	equ	0xFD8
 29329                           
 29330 ;; *************** function _ExternalFlash_CapacityRead *****************
 29331 ;; Defined at:
 29332 ;;		line 23 in file "external_flash.c"
 29333 ;; Parameters:    Size  Location     Type
 29334 ;;  config          2    0[BANK0 ] PTR void 
 29335 ;;		 -> NULL(0), 
 29336 ;; Auto vars:     Size  Location     Type
 29337 ;;		None
 29338 ;; Return value:  Size  Location     Type
 29339 ;;                  4    0[BANK0 ] unsigned long 
 29340 ;; Registers used:
 29341 ;;		wreg, status,2
 29342 ;; Tracked objects:
 29343 ;;		On entry : 0/0
 29344 ;;		On exit  : 0/0
 29345 ;;		Unchanged: 0/0
 29346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29347 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29350 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29351 ;;Total ram usage:        4 bytes
 29352 ;; Hardware stack levels used:    1
 29353 ;; Hardware stack levels required when called:   10
 29354 ;; This function calls:
 29355 ;;		Nothing
 29356 ;; This function is called by:
 29357 ;;		_MSDProcessCommandMediaPresent
 29358 ;; This function uses a non-reentrant model
 29359 ;;
 29360                           
 29361                           	psect	text104
 29362  012C82                     __ptext104:
 29363                           	opt stack 0
 29364  012C82                     _ExternalFlash_CapacityRead:
 29365                           	opt stack 16
 29366                           
 29367                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 29368                           
 29369                           ; BSR set to: 0
 29370                           ;incstack = 0
 29371  012C82  0EFF               	movlw	255
 29372  012C84  0100               	movlb	0	; () banked
 29373  012C86  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 29374  012C88  0E1F               	movlw	31
 29375  012C8A  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 29376  012C8C  0E00               	movlw	0
 29377  012C8E  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 29378  012C90  0E00               	movlw	0
 29379  012C92  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 29380  012C94  0012               	return	
 29381  012C96                     __end_of_ExternalFlash_CapacityRead:
 29382                           	opt stack 0
 29383                           tosu	equ	0xFFF
 29384                           tosh	equ	0xFFE
 29385                           tosl	equ	0xFFD
 29386                           pclath	equ	0xFFA
 29387                           tblptru	equ	0xFF8
 29388                           tblptrh	equ	0xFF7
 29389                           tblptrl	equ	0xFF6
 29390                           tablat	equ	0xFF5
 29391                           prodh	equ	0xFF4
 29392                           prodl	equ	0xFF3
 29393                           intcon	equ	0xFF2
 29394                           postinc0	equ	0xFEE
 29395                           wreg	equ	0xFE8
 29396                           indf1	equ	0xFE7
 29397                           postdec1	equ	0xFE5
 29398                           plusw1	equ	0xFE3
 29399                           fsr1h	equ	0xFE2
 29400                           fsr1l	equ	0xFE1
 29401                           indf2	equ	0xFDF
 29402                           postinc2	equ	0xFDE
 29403                           postdec2	equ	0xFDD
 29404                           plusw2	equ	0xFDB
 29405                           fsr2h	equ	0xFDA
 29406                           fsr2l	equ	0xFD9
 29407                           status	equ	0xFD8
 29408                           
 29409 ;; *************** function _ExternalFlash_MediaInitialize *****************
 29410 ;; Defined at:
 29411 ;;		line 10 in file "external_flash.c"
 29412 ;; Parameters:    Size  Location     Type
 29413 ;;  config          2    0[BANK0 ] PTR void 
 29414 ;;		 -> NULL(0), 
 29415 ;; Auto vars:     Size  Location     Type
 29416 ;;		None
 29417 ;; Return value:  Size  Location     Type
 29418 ;;                  2    0[BANK0 ] PTR struct .
 29419 ;; Registers used:
 29420 ;;		wreg, status,2, status,0
 29421 ;; Tracked objects:
 29422 ;;		On entry : 0/0
 29423 ;;		On exit  : 0/0
 29424 ;;		Unchanged: 0/0
 29425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29426 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29429 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29430 ;;Total ram usage:        2 bytes
 29431 ;; Hardware stack levels used:    1
 29432 ;; Hardware stack levels required when called:   10
 29433 ;; This function calls:
 29434 ;;		Nothing
 29435 ;; This function is called by:
 29436 ;;		_USBMSDInit
 29437 ;;		_MSDProcessCommand
 29438 ;; This function uses a non-reentrant model
 29439 ;;
 29440                           
 29441                           	psect	text105
 29442  012BD8                     __ptext105:
 29443                           	opt stack 0
 29444  012BD8                     _ExternalFlash_MediaInitialize:
 29445                           	opt stack 0
 29446                           
 29447                           ; BSR set to: 0
 29448                           ;Skip over the trampoline to the duplicate function for level 2
 29449  012BD8  B25B               	btfsc	btemp,1,c
 29450  012BDA  EF29  F096         	goto	i2_ExternalFlash_MediaInitialize
 29451  012BDE                     _ExternalFlash_MediaInitialize$intlevel0:
 29452                           	opt stack 17
 29453                           
 29454                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 29455                           
 29456                           ;incstack = 0
 29457  012BDE  0101               	movlb	1	; () banked
 29458  012BE0  819A               	bsf	(_mediaInformation+1)& (0+255),0,b
 29459                           
 29460                           ; BSR set to: 1
 29461                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 29462  012BE2  0E02               	movlw	2
 29463  012BE4  6F9C               	movwf	(_mediaInformation+3)& (0+255),b
 29464  012BE6  0E00               	movlw	0
 29465  012BE8  6F9B               	movwf	(_mediaInformation+2)& (0+255),b
 29466                           
 29467                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 29468  012BEA  0E00               	movlw	0
 29469  012BEC  6F99               	movwf	_mediaInformation& (0+255),b
 29470                           
 29471                           ; BSR set to: 1
 29472                           ;external_flash.c: 15: return &mediaInformation;
 29473  012BEE  0E99               	movlw	low _mediaInformation
 29474  012BF0  0100               	movlb	0	; () banked
 29475  012BF2  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 29476  012BF4  0E01               	movlw	high _mediaInformation
 29477  012BF6  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 29478  012BF8  0012               	return	
 29479  012BFA                     __end_of_ExternalFlash_MediaInitialize:
 29480                           	opt stack 0
 29481                           tosu	equ	0xFFF
 29482                           tosh	equ	0xFFE
 29483                           tosl	equ	0xFFD
 29484                           pclath	equ	0xFFA
 29485                           tblptru	equ	0xFF8
 29486                           tblptrh	equ	0xFF7
 29487                           tblptrl	equ	0xFF6
 29488                           tablat	equ	0xFF5
 29489                           prodh	equ	0xFF4
 29490                           prodl	equ	0xFF3
 29491                           intcon	equ	0xFF2
 29492                           postinc0	equ	0xFEE
 29493                           wreg	equ	0xFE8
 29494                           indf1	equ	0xFE7
 29495                           postdec1	equ	0xFE5
 29496                           plusw1	equ	0xFE3
 29497                           fsr1h	equ	0xFE2
 29498                           fsr1l	equ	0xFE1
 29499                           indf2	equ	0xFDF
 29500                           postinc2	equ	0xFDE
 29501                           postdec2	equ	0xFDD
 29502                           plusw2	equ	0xFDB
 29503                           fsr2h	equ	0xFDA
 29504                           fsr2l	equ	0xFD9
 29505                           status	equ	0xFD8
 29506                           
 29507 ;; *************** function _ExternalFlash_MediaDetect *****************
 29508 ;; Defined at:
 29509 ;;		line 29 in file "external_flash.c"
 29510 ;; Parameters:    Size  Location     Type
 29511 ;;  config          2    0[BANK0 ] PTR void 
 29512 ;;		 -> NULL(0), 
 29513 ;; Auto vars:     Size  Location     Type
 29514 ;;		None
 29515 ;; Return value:  Size  Location     Type
 29516 ;;                  1    wreg      unsigned char 
 29517 ;; Registers used:
 29518 ;;		wreg
 29519 ;; Tracked objects:
 29520 ;;		On entry : 0/0
 29521 ;;		On exit  : 0/0
 29522 ;;		Unchanged: 0/0
 29523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29524 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29527 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29528 ;;Total ram usage:        2 bytes
 29529 ;; Hardware stack levels used:    1
 29530 ;; Hardware stack levels required when called:   10
 29531 ;; This function calls:
 29532 ;;		Nothing
 29533 ;; This function is called by:
 29534 ;;		_USBMSDInit
 29535 ;;		_MSDProcessCommand
 29536 ;; This function uses a non-reentrant model
 29537 ;;
 29538                           
 29539                           	psect	text106
 29540  012CF6                     __ptext106:
 29541                           	opt stack 0
 29542  012CF6                     _ExternalFlash_MediaDetect:
 29543                           	opt stack 0
 29544                           
 29545                           ; BSR set to: 0
 29546                           ;Skip over the trampoline to the duplicate function for level 2
 29547  012CF6  B25B               	btfsc	btemp,1,c
 29548  012CF8  EF93  F096         	goto	i2_ExternalFlash_MediaDetect
 29549  012CFC                     _ExternalFlash_MediaDetect$intlevel0:
 29550                           	opt stack 17
 29551                           
 29552                           ;external_flash.c: 31: return 1;
 29553                           
 29554                           ;incstack = 0
 29555  012CFC  0E01               	movlw	1
 29556  012CFE  0012               	return	
 29557  012D00                     __end_of_ExternalFlash_MediaDetect:
 29558                           	opt stack 0
 29559                           tosu	equ	0xFFF
 29560                           tosh	equ	0xFFE
 29561                           tosl	equ	0xFFD
 29562                           pclath	equ	0xFFA
 29563                           tblptru	equ	0xFF8
 29564                           tblptrh	equ	0xFF7
 29565                           tblptrl	equ	0xFF6
 29566                           tablat	equ	0xFF5
 29567                           prodh	equ	0xFF4
 29568                           prodl	equ	0xFF3
 29569                           intcon	equ	0xFF2
 29570                           postinc0	equ	0xFEE
 29571                           wreg	equ	0xFE8
 29572                           indf1	equ	0xFE7
 29573                           postdec1	equ	0xFE5
 29574                           plusw1	equ	0xFE3
 29575                           fsr1h	equ	0xFE2
 29576                           fsr1l	equ	0xFE1
 29577                           indf2	equ	0xFDF
 29578                           postinc2	equ	0xFDE
 29579                           postdec2	equ	0xFDD
 29580                           plusw2	equ	0xFDB
 29581                           fsr2h	equ	0xFDA
 29582                           fsr2l	equ	0xFD9
 29583                           status	equ	0xFD8
 29584                           
 29585 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 29586 ;; Defined at:
 29587 ;;		line 73 in file "app_device_custom_hid.c"
 29588 ;; Parameters:    Size  Location     Type
 29589 ;;		None
 29590 ;; Auto vars:     Size  Location     Type
 29591 ;;  idx             1    0        unsigned char 
 29592 ;; Return value:  Size  Location     Type
 29593 ;;                  1    wreg      void 
 29594 ;; Registers used:
 29595 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29596 ;; Tracked objects:
 29597 ;;		On entry : 0/0
 29598 ;;		On exit  : 0/0
 29599 ;;		Unchanged: 0/0
 29600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29605 ;;Total ram usage:        0 bytes
 29606 ;; Hardware stack levels used:    1
 29607 ;; Hardware stack levels required when called:   15
 29608 ;; This function calls:
 29609 ;;		_USBTransferOnePacket
 29610 ;;		_api_parse
 29611 ;;		_api_prepare
 29612 ;; This function is called by:
 29613 ;;		_main
 29614 ;; This function uses a non-reentrant model
 29615 ;;
 29616                           
 29617                           	psect	text107
 29618  011150                     __ptext107:
 29619                           	opt stack 0
 29620  011150                     _APP_DeviceCustomHIDTasks:
 29621                           	opt stack 15
 29622                           
 29623                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 29624                           
 29625                           ;incstack = 0
 29626  011150  0E20               	movlw	32
 29627  011152  602B               	cpfslt	_USBDeviceState,c	;volatile
 29628  011154  D001               	goto	l939
 29629  011156  0012               	return	
 29630  011158                     l939:
 29631                           
 29632                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 29633  011158  B265               	btfsc	3941,1,c	;volatile
 29634  01115A  0012               	return	
 29635                           
 29636                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 29637                           
 29638                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 29639  01115C  0101               	movlb	1	; () banked
 29640  01115E  516F               	movf	_USBOutHandle& (0+255),w,b
 29641  011160  1170               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 29642  011162  B4D8               	btfsc	status,2,c
 29643  011164  D006               	goto	u21730
 29644                           
 29645                           ; BSR set to: 1
 29646  011166  C16F  FFD9         	movff	_USBOutHandle,fsr2l
 29647  01116A  C170  FFDA         	movff	_USBOutHandle+1,fsr2h
 29648  01116E  BEDF               	btfsc	indf2,7,c
 29649  011170  0012               	return	
 29650  011172                     u21730:
 29651                           
 29652                           ; BSR set to: 1
 29653                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 29654                           
 29655                           ; BSR set to: 1
 29656  011172  516D               	movf	_USBInHandle& (0+255),w,b
 29657  011174  116E               	iorwf	(_USBInHandle+1)& (0+255),w,b
 29658  011176  B4D8               	btfsc	status,2,c
 29659  011178  D006               	goto	u21750
 29660                           
 29661                           ; BSR set to: 1
 29662  01117A  C16D  FFD9         	movff	_USBInHandle,fsr2l
 29663  01117E  C16E  FFDA         	movff	_USBInHandle+1,fsr2h
 29664  011182  BEDF               	btfsc	indf2,7,c
 29665  011184  D01B               	goto	l945
 29666  011186                     u21750:
 29667                           
 29668                           ; BSR set to: 1
 29669                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 29670                           
 29671                           ; BSR set to: 1
 29672  011186  0E38               	movlw	low _ReceivedDataBuffer
 29673  011188  0100               	movlb	0	; () banked
 29674  01118A  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 29675  01118C  0E02               	movlw	high _ReceivedDataBuffer
 29676  01118E  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 29677  011190  0E00               	movlw	low _ToSendDataBuffer
 29678  011192  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 29679  011194  0E03               	movlw	high _ToSendDataBuffer
 29680  011196  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 29681  011198  EC82  F082         	call	_api_prepare	;wreg free
 29682                           
 29683                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 29684  01119C  0E01               	movlw	1
 29685  01119E  0100               	movlb	0	; () banked
 29686  0111A0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 29687  0111A2  0E00               	movlw	low _ToSendDataBuffer
 29688  0111A4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 29689  0111A6  0E03               	movlw	high _ToSendDataBuffer
 29690  0111A8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 29691  0111AA  0E40               	movlw	64
 29692  0111AC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 29693  0111AE  0E01               	movlw	1
 29694  0111B0  ECC0  F07D         	call	_USBTransferOnePacket
 29695  0111B4  C060  F16D         	movff	?_USBTransferOnePacket,_USBInHandle
 29696  0111B8  C061  F16E         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 29697  0111BC                     l945:
 29698                           
 29699                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 29700  0111BC  0E38               	movlw	low _ReceivedDataBuffer
 29701  0111BE  0100               	movlb	0	; () banked
 29702  0111C0  6FBB               	movwf	api_parse@inBuffer& (0+255),b
 29703  0111C2  0E02               	movlw	high _ReceivedDataBuffer
 29704  0111C4  6FBC               	movwf	(api_parse@inBuffer+1)& (0+255),b
 29705  0111C6  0E40               	movlw	64
 29706  0111C8  6FBD               	movwf	api_parse@receivedDataLength& (0+255),b
 29707  0111CA  0E00               	movlw	low _ToSendDataBuffer
 29708  0111CC  6FBE               	movwf	api_parse@outBuffer& (0+255),b
 29709  0111CE  0E03               	movlw	high _ToSendDataBuffer
 29710  0111D0  6FBF               	movwf	(api_parse@outBuffer+1)& (0+255),b
 29711  0111D2  ECFC  F079         	call	_api_parse	;wreg free
 29712                           
 29713                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 29714  0111D6  0E00               	movlw	0
 29715  0111D8  0100               	movlb	0	; () banked
 29716  0111DA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 29717  0111DC  0E38               	movlw	low _ReceivedDataBuffer
 29718  0111DE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 29719  0111E0  0E02               	movlw	high _ReceivedDataBuffer
 29720  0111E2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 29721  0111E4  0E40               	movlw	64
 29722  0111E6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 29723  0111E8  0E01               	movlw	1
 29724  0111EA  ECC0  F07D         	call	_USBTransferOnePacket
 29725  0111EE  C060  F16F         	movff	?_USBTransferOnePacket,_USBOutHandle
 29726  0111F2  C061  F170         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 29727  0111F6  0012               	return	
 29728  0111F8                     __end_of_APP_DeviceCustomHIDTasks:
 29729                           	opt stack 0
 29730                           tosu	equ	0xFFF
 29731                           tosh	equ	0xFFE
 29732                           tosl	equ	0xFFD
 29733                           pclath	equ	0xFFA
 29734                           tblptru	equ	0xFF8
 29735                           tblptrh	equ	0xFF7
 29736                           tblptrl	equ	0xFF6
 29737                           tablat	equ	0xFF5
 29738                           prodh	equ	0xFF4
 29739                           prodl	equ	0xFF3
 29740                           intcon	equ	0xFF2
 29741                           postinc0	equ	0xFEE
 29742                           wreg	equ	0xFE8
 29743                           indf1	equ	0xFE7
 29744                           postdec1	equ	0xFE5
 29745                           plusw1	equ	0xFE3
 29746                           fsr1h	equ	0xFE2
 29747                           fsr1l	equ	0xFE1
 29748                           indf2	equ	0xFDF
 29749                           postinc2	equ	0xFDE
 29750                           postdec2	equ	0xFDD
 29751                           plusw2	equ	0xFDB
 29752                           fsr2h	equ	0xFDA
 29753                           fsr2l	equ	0xFD9
 29754                           status	equ	0xFD8
 29755                           
 29756 ;; *************** function _api_prepare *****************
 29757 ;; Defined at:
 29758 ;;		line 36 in file "api.c"
 29759 ;; Parameters:    Size  Location     Type
 29760 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 29761 ;;		 -> ReceivedDataBuffer(64), 
 29762 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 29763 ;;		 -> ToSendDataBuffer(64), 
 29764 ;; Auto vars:     Size  Location     Type
 29765 ;;  command         1   20[BANK0 ] enum E6715
 29766 ;; Return value:  Size  Location     Type
 29767 ;;                  1    wreg      void 
 29768 ;; Registers used:
 29769 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29770 ;; Tracked objects:
 29771 ;;		On entry : 0/0
 29772 ;;		On exit  : 0/0
 29773 ;;		Unchanged: 0/0
 29774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29775 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29778 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29779 ;;Total ram usage:        5 bytes
 29780 ;; Hardware stack levels used:    1
 29781 ;; Hardware stack levels required when called:   12
 29782 ;; This function calls:
 29783 ;;		__fill_buffer_get_display
 29784 ;;		__fill_buffer_get_mode_details
 29785 ;;		__fill_buffer_get_status
 29786 ;;		_memcpy
 29787 ;; This function is called by:
 29788 ;;		_APP_DeviceCustomHIDTasks
 29789 ;; This function uses a non-reentrant model
 29790 ;;
 29791                           
 29792                           	psect	text108
 29793  010504                     __ptext108:
 29794                           	opt stack 0
 29795  010504                     _api_prepare:
 29796                           	opt stack 17
 29797                           
 29798                           ;api.c: 38: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 29799                           
 29800                           ;incstack = 0
 29801  010504  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 29802  010508  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 29803  01050C  50DF               	movf	indf2,w,c
 29804  01050E  0100               	movlb	0	; () banked
 29805  010510  6F74               	movwf	api_prepare@command& (0+255),b
 29806                           
 29807                           ; BSR set to: 0
 29808                           ;api.c: 40: if(command>0x7F)
 29809  010512  0E7F               	movlw	127
 29810  010514  6574               	cpfsgt	api_prepare@command& (0+255),b
 29811  010516  D051               	goto	l2171
 29812                           
 29813                           ; BSR set to: 0
 29814                           ;api.c: 47: outBuffer[0] = 0x99;
 29815                           
 29816                           ; BSR set to: 0
 29817                           
 29818                           ;api.c: 43: {;api.c: 46: default:
 29819                           
 29820                           ; BSR set to: 0
 29821                           ;api.c: 41: {;api.c: 42: switch(command)
 29822  010518  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 29823  01051C  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 29824  010520  0E99               	movlw	153
 29825  010522  6EDF               	movwf	indf2,c
 29826                           
 29827                           ; BSR set to: 0
 29828                           ;api.c: 48: outBuffer[1] = 0x99;
 29829  010524  EE20 F001          	lfsr	2,1
 29830  010528  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 29831  01052A  26D9               	addwf	fsr2l,f,c
 29832  01052C  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 29833  01052E  22DA               	addwfc	fsr2h,f,c
 29834  010530  0E99               	movlw	153
 29835  010532  6EDF               	movwf	indf2,c
 29836                           
 29837                           ;api.c: 49: }
 29838  010534  0012               	return	
 29839  010536                     
 29840                           ; BSR set to: 0
 29841                           ;api.c: 62: _fill_buffer_get_status(outBuffer);
 29842                           
 29843                           ; BSR set to: 0
 29844  010536  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 29845  01053A  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 29846  01053E  EC8D  F070         	call	__fill_buffer_get_status	;wreg free
 29847                           
 29848                           ;api.c: 63: break;
 29849  010542  0012               	return	
 29850  010544                     
 29851                           ;api.c: 67: _fill_buffer_get_display(outBuffer, 0);
 29852  010544  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 29853  010548  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 29854  01054C  0E00               	movlw	0
 29855  01054E  0100               	movlb	0	; () banked
 29856  010550  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 29857  010552  ECF0  F086         	call	__fill_buffer_get_display	;wreg free
 29858                           
 29859                           ;api.c: 68: break;
 29860  010556  0012               	return	
 29861  010558                     
 29862                           ;api.c: 72: _fill_buffer_get_display(outBuffer, 1);
 29863  010558  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 29864  01055C  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 29865  010560  0E01               	movlw	1
 29866  010562  0100               	movlb	0	; () banked
 29867  010564  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 29868  010566  ECF0  F086         	call	__fill_buffer_get_display	;wreg free
 29869                           
 29870                           ;api.c: 73: break;
 29871  01056A  0012               	return	
 29872  01056C                     
 29873                           ;api.c: 77: _fill_buffer_get_mode_details(outBuffer);
 29874  01056C  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 29875  010570  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 29876  010574  EC3B  F072         	call	__fill_buffer_get_mode_details	;wreg free
 29877                           
 29878                           ;api.c: 78: break;
 29879  010578  0012               	return	
 29880  01057A                     
 29881                           ;api.c: 82: memcpy(outBuffer, inBuffer, 64);
 29882  01057A  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 29883  01057E  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 29884  010582  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 29885  010586  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 29886  01058A  0E00               	movlw	0
 29887  01058C  0100               	movlb	0	; () banked
 29888  01058E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 29889  010590  0E40               	movlw	64
 29890  010592  6F64               	movwf	memcpy@n& (0+255),b
 29891  010594  ECC9  F08E         	call	_memcpy	;wreg free
 29892                           
 29893                           ;api.c: 83: break;
 29894  010598  0012               	return	
 29895  01059A                     
 29896                           ;api.c: 86: outBuffer[0] = 0x99;
 29897  01059A  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 29898  01059E  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 29899  0105A2  0E99               	movlw	153
 29900  0105A4  6EDF               	movwf	indf2,c
 29901                           
 29902                           ;api.c: 87: outBuffer[1] = 0x99;
 29903  0105A6  0100               	movlb	0	; () banked
 29904  0105A8  EE20 F001          	lfsr	2,1
 29905  0105AC  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 29906  0105AE  26D9               	addwf	fsr2l,f,c
 29907  0105B0  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 29908  0105B2  22DA               	addwfc	fsr2h,f,c
 29909  0105B4  0E99               	movlw	153
 29910  0105B6  6EDF               	movwf	indf2,c
 29911                           
 29912                           ;api.c: 88: }
 29913  0105B8  0012               	return	
 29914  0105BA                     l2171:
 29915                           
 29916                           ; BSR set to: 0
 29917                           
 29918                           ; BSR set to: 0
 29919  0105BA  5174               	movf	api_prepare@command& (0+255),w,b
 29920                           
 29921                           ; Switch size 1, requested type "space"
 29922                           ; Number of cases is 6, Range of values is 0 to 32
 29923                           ; switch strategies available:
 29924                           ; Name         Instructions Cycles
 29925                           ; simple_byte           19    10 (average)
 29926                           ;	Chosen strategy is simple_byte
 29927  0105BC  0A00               	xorlw	0	; case 0
 29928  0105BE  B4D8               	btfsc	status,2,c
 29929  0105C0  0012               	return	
 29930  0105C2  0A10               	xorlw	16	; case 16
 29931  0105C4  B4D8               	btfsc	status,2,c
 29932  0105C6  D7B7               	goto	l2174
 29933  0105C8  0A01               	xorlw	1	; case 17
 29934  0105CA  B4D8               	btfsc	status,2,c
 29935  0105CC  D7BB               	goto	l2175
 29936  0105CE  0A03               	xorlw	3	; case 18
 29937  0105D0  B4D8               	btfsc	status,2,c
 29938  0105D2  D7C2               	goto	l2176
 29939  0105D4  0A01               	xorlw	1	; case 19
 29940  0105D6  B4D8               	btfsc	status,2,c
 29941  0105D8  D7C9               	goto	l2177
 29942  0105DA  0A33               	xorlw	51	; case 32
 29943  0105DC  B4D8               	btfsc	status,2,c
 29944  0105DE  D7CD               	goto	l2178
 29945  0105E0  D7DC               	goto	l2179
 29946  0105E2                     __end_of_api_prepare:
 29947                           	opt stack 0
 29948                           tosu	equ	0xFFF
 29949                           tosh	equ	0xFFE
 29950                           tosl	equ	0xFFD
 29951                           pclath	equ	0xFFA
 29952                           tblptru	equ	0xFF8
 29953                           tblptrh	equ	0xFF7
 29954                           tblptrl	equ	0xFF6
 29955                           tablat	equ	0xFF5
 29956                           prodh	equ	0xFF4
 29957                           prodl	equ	0xFF3
 29958                           intcon	equ	0xFF2
 29959                           postinc0	equ	0xFEE
 29960                           wreg	equ	0xFE8
 29961                           indf1	equ	0xFE7
 29962                           postdec1	equ	0xFE5
 29963                           plusw1	equ	0xFE3
 29964                           fsr1h	equ	0xFE2
 29965                           fsr1l	equ	0xFE1
 29966                           indf2	equ	0xFDF
 29967                           postinc2	equ	0xFDE
 29968                           postdec2	equ	0xFDD
 29969                           plusw2	equ	0xFDB
 29970                           fsr2h	equ	0xFDA
 29971                           fsr2l	equ	0xFD9
 29972                           status	equ	0xFD8
 29973                           
 29974 ;; *************** function __fill_buffer_get_status *****************
 29975 ;; Defined at:
 29976 ;;		line 169 in file "api.c"
 29977 ;; Parameters:    Size  Location     Type
 29978 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 29979 ;;		 -> ToSendDataBuffer(64), 
 29980 ;; Auto vars:     Size  Location     Type
 29981 ;;		None
 29982 ;; Return value:  Size  Location     Type
 29983 ;;                  1    wreg      void 
 29984 ;; Registers used:
 29985 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29986 ;; Tracked objects:
 29987 ;;		On entry : 0/0
 29988 ;;		On exit  : 0/0
 29989 ;;		Unchanged: 0/0
 29990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29991 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29994 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29995 ;;Total ram usage:        2 bytes
 29996 ;; Hardware stack levels used:    1
 29997 ;; Hardware stack levels required when called:   11
 29998 ;; This function calls:
 29999 ;;		_memcpy
 30000 ;; This function is called by:
 30001 ;;		_api_prepare
 30002 ;; This function uses a non-reentrant model
 30003 ;;
 30004                           
 30005                           	psect	text109
 30006  00E11A                     __ptext109:
 30007                           	opt stack 0
 30008  00E11A                     __fill_buffer_get_status:
 30009                           	opt stack 17
 30010                           
 30011                           ;api.c: 172: outBuffer[0] = DATAREQUEST_GET_STATUS;
 30012                           
 30013                           ;incstack = 0
 30014  00E11A  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 30015  00E11E  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 30016  00E122  0E10               	movlw	16
 30017  00E124  6EDF               	movwf	indf2,c
 30018                           
 30019                           ;api.c: 175: outBuffer[1] = ((unsigned char)((0x62A1)&0xFF));
 30020  00E126  0100               	movlb	0	; () banked
 30021  00E128  EE20 F001          	lfsr	2,1
 30022  00E12C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30023  00E12E  26D9               	addwf	fsr2l,f,c
 30024  00E130  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30025  00E132  22DA               	addwfc	fsr2h,f,c
 30026  00E134  0EA1               	movlw	161
 30027  00E136  6EDF               	movwf	indf2,c
 30028                           
 30029                           ; BSR set to: 0
 30030                           ;api.c: 176: outBuffer[2] = ((unsigned char)(((0x62A1)>>8)&0xFF));
 30031  00E138  EE20 F002          	lfsr	2,2
 30032  00E13C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30033  00E13E  26D9               	addwf	fsr2l,f,c
 30034  00E140  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30035  00E142  22DA               	addwfc	fsr2h,f,c
 30036  00E144  0E62               	movlw	98
 30037  00E146  6EDF               	movwf	indf2,c
 30038                           
 30039                           ; BSR set to: 0
 30040                           ;api.c: 179: outBuffer[3] = 0x00;
 30041  00E148  EE20 F003          	lfsr	2,3
 30042  00E14C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30043  00E14E  26D9               	addwf	fsr2l,f,c
 30044  00E150  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30045  00E152  22DA               	addwfc	fsr2h,f,c
 30046  00E154  0E00               	movlw	0
 30047  00E156  6EDF               	movwf	indf2,c
 30048                           
 30049                           ; BSR set to: 0
 30050                           ;api.c: 180: outBuffer[4] = 0x03;
 30051  00E158  EE20 F004          	lfsr	2,4
 30052  00E15C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30053  00E15E  26D9               	addwf	fsr2l,f,c
 30054  00E160  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30055  00E162  22DA               	addwfc	fsr2h,f,c
 30056  00E164  0E03               	movlw	3
 30057  00E166  6EDF               	movwf	indf2,c
 30058                           
 30059                           ; BSR set to: 0
 30060                           ;api.c: 181: outBuffer[5] = 0x00;
 30061  00E168  EE20 F005          	lfsr	2,5
 30062  00E16C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30063  00E16E  26D9               	addwf	fsr2l,f,c
 30064  00E170  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30065  00E172  22DA               	addwfc	fsr2h,f,c
 30066  00E174  0E00               	movlw	0
 30067  00E176  6EDF               	movwf	indf2,c
 30068                           
 30069                           ; BSR set to: 0
 30070                           ;api.c: 184: outBuffer[6] = os.subTimeSlot;
 30071  00E178  EE20 F006          	lfsr	2,6
 30072  00E17C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30073  00E17E  26D9               	addwf	fsr2l,f,c
 30074  00E180  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30075  00E182  22DA               	addwfc	fsr2h,f,c
 30076  00E184  C0D0  FFDF         	movff	_os,indf2	;volatile
 30077                           
 30078                           ; BSR set to: 0
 30079                           ;api.c: 185: outBuffer[7] = os.timeSlot;
 30080  00E188  EE20 F007          	lfsr	2,7
 30081  00E18C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30082  00E18E  26D9               	addwf	fsr2l,f,c
 30083  00E190  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30084  00E192  22DA               	addwfc	fsr2h,f,c
 30085  00E194  C0D1  FFDF         	movff	_os+1,indf2	;volatile
 30086                           
 30087                           ; BSR set to: 0
 30088                           ;api.c: 186: outBuffer[8] = os.done;
 30089  00E198  EE20 F008          	lfsr	2,8
 30090  00E19C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30091  00E19E  26D9               	addwf	fsr2l,f,c
 30092  00E1A0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30093  00E1A2  22DA               	addwfc	fsr2h,f,c
 30094  00E1A4  C0D2  FFDF         	movff	_os+2,indf2	;volatile
 30095                           
 30096                           ; BSR set to: 0
 30097                           ;api.c: 187: outBuffer[9] = os.encoder1Count;
 30098  00E1A8  EE20 F009          	lfsr	2,9
 30099  00E1AC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30100  00E1AE  26D9               	addwf	fsr2l,f,c
 30101  00E1B0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30102  00E1B2  22DA               	addwfc	fsr2h,f,c
 30103  00E1B4  C0D3  FFDF         	movff	_os+3,indf2	;volatile
 30104                           
 30105                           ; BSR set to: 0
 30106                           ;api.c: 188: outBuffer[10] = os.button1;
 30107  00E1B8  EE20 F00A          	lfsr	2,10
 30108  00E1BC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30109  00E1BE  26D9               	addwf	fsr2l,f,c
 30110  00E1C0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30111  00E1C2  22DA               	addwfc	fsr2h,f,c
 30112  00E1C4  C0D4  FFDF         	movff	_os+4,indf2	;volatile
 30113                           
 30114                           ; BSR set to: 0
 30115                           ;api.c: 189: outBuffer[11] = os.encoder2Count;
 30116  00E1C8  EE20 F00B          	lfsr	2,11
 30117  00E1CC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30118  00E1CE  26D9               	addwf	fsr2l,f,c
 30119  00E1D0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30120  00E1D2  22DA               	addwfc	fsr2h,f,c
 30121  00E1D4  C0D5  FFDF         	movff	_os+5,indf2	;volatile
 30122                           
 30123                           ; BSR set to: 0
 30124                           ;api.c: 190: outBuffer[12] = os.button2;
 30125  00E1D8  EE20 F00C          	lfsr	2,12
 30126  00E1DC  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30127  00E1DE  26D9               	addwf	fsr2l,f,c
 30128  00E1E0  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30129  00E1E2  22DA               	addwfc	fsr2h,f,c
 30130  00E1E4  C0D6  FFDF         	movff	_os+6,indf2	;volatile
 30131                           
 30132                           ; BSR set to: 0
 30133                           ;api.c: 191: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 30134  00E1E8  0E0D               	movlw	13
 30135  00E1EA  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30136  00E1EC  6F60               	movwf	memcpy@d1& (0+255),b
 30137  00E1EE  0E00               	movlw	0
 30138  00E1F0  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30139  00E1F2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 30140  00E1F4  0ED7               	movlw	low (_os+7)
 30141  00E1F6  6F62               	movwf	memcpy@s1& (0+255),b
 30142  00E1F8  0E00               	movlw	high (_os+7)
 30143  00E1FA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 30144  00E1FC  0E00               	movlw	0
 30145  00E1FE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 30146  00E200  0E04               	movlw	4
 30147  00E202  6F64               	movwf	memcpy@n& (0+255),b
 30148  00E204  ECC9  F08E         	call	_memcpy	;wreg free
 30149                           
 30150                           ;api.c: 196: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 30151  00E208  0E11               	movlw	17
 30152  00E20A  0100               	movlb	0	; () banked
 30153  00E20C  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30154  00E20E  6F60               	movwf	memcpy@d1& (0+255),b
 30155  00E210  0E00               	movlw	0
 30156  00E212  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30157  00E214  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 30158  00E216  0EDB               	movlw	low (_os+11)
 30159  00E218  6F62               	movwf	memcpy@s1& (0+255),b
 30160  00E21A  0E00               	movlw	high (_os+11)
 30161  00E21C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 30162  00E21E  0E00               	movlw	0
 30163  00E220  6F65               	movwf	(memcpy@n+1)& (0+255),b
 30164  00E222  0E04               	movlw	4
 30165  00E224  6F64               	movwf	memcpy@n& (0+255),b
 30166  00E226  ECC9  F08E         	call	_memcpy	;wreg free
 30167                           
 30168                           ;api.c: 201: outBuffer[21] = os.displayState;
 30169  00E22A  0100               	movlb	0	; () banked
 30170  00E22C  EE20 F015          	lfsr	2,21
 30171  00E230  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30172  00E232  26D9               	addwf	fsr2l,f,c
 30173  00E234  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30174  00E236  22DA               	addwfc	fsr2h,f,c
 30175  00E238  C0DD  FFDF         	movff	_os+13,indf2	;volatile
 30176                           
 30177                           ; BSR set to: 0
 30178                           ;api.c: 202: outBuffer[22] = os.beep_count;
 30179  00E23C  EE20 F016          	lfsr	2,22
 30180  00E240  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30181  00E242  26D9               	addwf	fsr2l,f,c
 30182  00E244  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30183  00E246  22DA               	addwfc	fsr2h,f,c
 30184  00E248  C0F6  FFDF         	movff	_os+38,indf2	;volatile
 30185                           
 30186                           ; BSR set to: 0
 30187                           ;api.c: 203: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 30188  00E24C  EE20 F017          	lfsr	2,23
 30189  00E250  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30190  00E252  26D9               	addwf	fsr2l,f,c
 30191  00E254  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30192  00E256  22DA               	addwfc	fsr2h,f,c
 30193  00E258  C0F7  FFDF         	movff	_os+39,indf2	;volatile
 30194                           
 30195                           ; BSR set to: 0
 30196                           ;api.c: 204: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 30197  00E25C  EE20 F018          	lfsr	2,24
 30198  00E260  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30199  00E262  26D9               	addwf	fsr2l,f,c
 30200  00E264  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30201  00E266  22DA               	addwfc	fsr2h,f,c
 30202  00E268  51F8               	movf	(_os+40)& (0+255),w,b	;volatile
 30203  00E26A  6EDF               	movwf	indf2,c
 30204                           
 30205                           ; BSR set to: 0
 30206                           ;api.c: 205: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 30207  00E26C  EE20 F019          	lfsr	2,25
 30208  00E270  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30209  00E272  26D9               	addwf	fsr2l,f,c
 30210  00E274  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30211  00E276  22DA               	addwfc	fsr2h,f,c
 30212  00E278  C0F9  FFDF         	movff	_os+41,indf2	;volatile
 30213                           
 30214                           ; BSR set to: 0
 30215                           ;api.c: 206: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 30216  00E27C  EE20 F01A          	lfsr	2,26
 30217  00E280  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30218  00E282  26D9               	addwf	fsr2l,f,c
 30219  00E284  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30220  00E286  22DA               	addwfc	fsr2h,f,c
 30221  00E288  51FA               	movf	(_os+42)& (0+255),w,b	;volatile
 30222  00E28A  6EDF               	movwf	indf2,c
 30223                           
 30224                           ; BSR set to: 0
 30225                           ;api.c: 207: outBuffer[27] = os.fan_on;
 30226  00E28C  EE20 F01B          	lfsr	2,27
 30227  00E290  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30228  00E292  26D9               	addwf	fsr2l,f,c
 30229  00E294  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30230  00E296  22DA               	addwfc	fsr2h,f,c
 30231  00E298  C0FE  FFDF         	movff	_os+46,indf2	;volatile
 30232                           
 30233                           ; BSR set to: 0
 30234                           ;api.c: 208: outBuffer[28] = os.brake_on;
 30235  00E29C  EE20 F01C          	lfsr	2,28
 30236  00E2A0  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30237  00E2A2  26D9               	addwf	fsr2l,f,c
 30238  00E2A4  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30239  00E2A6  22DA               	addwfc	fsr2h,f,c
 30240  00E2A8  C0FF  FFDF         	movff	_os+47,indf2	;volatile
 30241                           
 30242                           ; BSR set to: 0
 30243                           ;api.c: 209: outBuffer[29] = os.busy;
 30244  00E2AC  EE20 F01D          	lfsr	2,29
 30245  00E2B0  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30246  00E2B2  26D9               	addwf	fsr2l,f,c
 30247  00E2B4  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30248  00E2B6  22DA               	addwfc	fsr2h,f,c
 30249  00E2B8  C0DE  FFDF         	movff	_os+14,indf2	;volatile
 30250                           
 30251                           ; BSR set to: 0
 30252                           ;api.c: 223: memcpy(&outBuffer[42], &config, 22);
 30253  00E2BC  0E2A               	movlw	42
 30254  00E2BE  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 30255  00E2C0  6F60               	movwf	memcpy@d1& (0+255),b
 30256  00E2C2  0E00               	movlw	0
 30257  00E2C4  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 30258  00E2C6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 30259  00E2C8  0E83               	movlw	low _config
 30260  00E2CA  6F62               	movwf	memcpy@s1& (0+255),b
 30261  00E2CC  0E01               	movlw	high _config
 30262  00E2CE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 30263  00E2D0  0E00               	movlw	0
 30264  00E2D2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 30265  00E2D4  0E16               	movlw	22
 30266  00E2D6  6F64               	movwf	memcpy@n& (0+255),b
 30267  00E2D8  ECC9  F08E         	call	_memcpy	;wreg free
 30268  00E2DC  0012               	return		;funcret
 30269  00E2DE                     __end_of__fill_buffer_get_status:
 30270                           	opt stack 0
 30271                           tosu	equ	0xFFF
 30272                           tosh	equ	0xFFE
 30273                           tosl	equ	0xFFD
 30274                           pclath	equ	0xFFA
 30275                           tblptru	equ	0xFF8
 30276                           tblptrh	equ	0xFF7
 30277                           tblptrl	equ	0xFF6
 30278                           tablat	equ	0xFF5
 30279                           prodh	equ	0xFF4
 30280                           prodl	equ	0xFF3
 30281                           intcon	equ	0xFF2
 30282                           postinc0	equ	0xFEE
 30283                           wreg	equ	0xFE8
 30284                           indf1	equ	0xFE7
 30285                           postdec1	equ	0xFE5
 30286                           plusw1	equ	0xFE3
 30287                           fsr1h	equ	0xFE2
 30288                           fsr1l	equ	0xFE1
 30289                           indf2	equ	0xFDF
 30290                           postinc2	equ	0xFDE
 30291                           postdec2	equ	0xFDD
 30292                           plusw2	equ	0xFDB
 30293                           fsr2h	equ	0xFDA
 30294                           fsr2l	equ	0xFD9
 30295                           status	equ	0xFD8
 30296                           
 30297 ;; *************** function _memcpy *****************
 30298 ;; Defined at:
 30299 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 30300 ;; Parameters:    Size  Location     Type
 30301 ;;  d1              2    0[BANK0 ] PTR void 
 30302 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 30303 ;;		 -> msd_buffer(512), SetupPkt(8), 
 30304 ;;  s1              2    2[BANK0 ] PTR const void 
 30305 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 30306 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 30307 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 30308 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 30309 ;;		 -> dc_main(80), ReceivedDataBuffer(64), os.current_position_in_degrees(2), config(22), 
 30310 ;;		 -> os.current_position_in_steps(4), os(48), inq_resp(36), RAM(3759), 
 30311 ;;  n               2    4[BANK0 ] unsigned int 
 30312 ;; Auto vars:     Size  Location     Type
 30313 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 30314 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 30315 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 30316 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 30317 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 30318 ;;		 -> dc_main(80), ReceivedDataBuffer(64), os.current_position_in_degrees(2), config(22), 
 30319 ;;		 -> os.current_position_in_steps(4), os(48), inq_resp(36), RAM(3759), 
 30320 ;;  d               2    7[BANK0 ] PTR unsigned char 
 30321 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 30322 ;;		 -> msd_buffer(512), SetupPkt(8), 
 30323 ;;  tmp             1    6[BANK0 ] unsigned char 
 30324 ;; Return value:  Size  Location     Type
 30325 ;;                  2    0[BANK0 ] PTR void 
 30326 ;; Registers used:
 30327 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30328 ;; Tracked objects:
 30329 ;;		On entry : 0/0
 30330 ;;		On exit  : 0/0
 30331 ;;		Unchanged: 0/0
 30332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30333 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30334 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30336 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30337 ;;Total ram usage:       11 bytes
 30338 ;; Hardware stack levels used:    1
 30339 ;; Hardware stack levels required when called:   10
 30340 ;; This function calls:
 30341 ;;		Nothing
 30342 ;; This function is called by:
 30343 ;;		_MSDProcessCommandMediaPresent
 30344 ;;		_display_prepare
 30345 ;;		__flash_set_page_size
 30346 ;;		_api_prepare
 30347 ;;		__fill_buffer_get_status
 30348 ;;		_fat_create_file
 30349 ;; This function uses a non-reentrant model
 30350 ;;
 30351                           
 30352                           	psect	text110
 30353  011D92                     __ptext110:
 30354                           	opt stack 0
 30355  011D92                     _memcpy:
 30356                           	opt stack 17
 30357                           
 30358                           ;incstack = 0
 30359  011D92  C062  F069         	movff	memcpy@s1,memcpy@s
 30360  011D96  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 30361  011D9A  C060  F067         	movff	memcpy@d1,memcpy@d
 30362  011D9E  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 30363  011DA2  D01D               	goto	l3400
 30364  011DA4                     l17910:
 30365  011DA4  C069  FFF6         	movff	memcpy@s,tblptrl
 30366  011DA8  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 30367  011DAC  0E00               	movlw	low (__mediumconst shr (0+16))
 30368  011DAE  6EF8               	movwf	tblptru,c
 30369  011DB0  0E0E               	movlw	(high __ramtop+-1)
 30370  011DB2  64F7               	cpfsgt	tblptrh,c
 30371  011DB4  D003               	bra	u17427
 30372  011DB6  0008               	tblrd		*
 30373  011DB8  50F5               	movf	tablat,w,c
 30374  011DBA  D005               	bra	u17420
 30375  011DBC                     u17427:
 30376  011DBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 30377  011DC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 30378  011DC4  50EF               	movf	indf0,w,c
 30379  011DC6                     u17420:
 30380  011DC6  0100               	movlb	0	; () banked
 30381  011DC8  6F66               	movwf	memcpy@tmp& (0+255),b
 30382                           
 30383                           ; BSR set to: 0
 30384  011DCA  4B69               	infsnz	memcpy@s& (0+255),f,b
 30385  011DCC  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 30386                           
 30387                           ; BSR set to: 0
 30388  011DCE  C067  FFD9         	movff	memcpy@d,fsr2l
 30389  011DD2  C068  FFDA         	movff	memcpy@d+1,fsr2h
 30390  011DD6  C066  FFDF         	movff	memcpy@tmp,indf2
 30391                           
 30392                           ; BSR set to: 0
 30393  011DDA  4B67               	infsnz	memcpy@d& (0+255),f,b
 30394  011DDC  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 30395  011DDE                     l3400:
 30396                           
 30397                           ; BSR set to: 0
 30398  011DDE  0100               	movlb	0	; () banked
 30399  011DE0  0764               	decf	memcpy@n& (0+255),f,b
 30400  011DE2  A0D8               	btfss	status,0,c
 30401  011DE4  0765               	decf	(memcpy@n+1)& (0+255),f,b
 30402  011DE6  2964               	incf	memcpy@n& (0+255),w,b
 30403  011DE8  E1DD               	bnz	l17910
 30404  011DEA  2965               	incf	(memcpy@n+1)& (0+255),w,b
 30405  011DEC  B4D8               	btfsc	status,2,c
 30406  011DEE  0012               	return	
 30407  011DF0  D7D9               	goto	l3401
 30408  011DF2                     __end_of_memcpy:
 30409                           	opt stack 0
 30410                           tosu	equ	0xFFF
 30411                           tosh	equ	0xFFE
 30412                           tosl	equ	0xFFD
 30413                           pclath	equ	0xFFA
 30414                           tblptru	equ	0xFF8
 30415                           tblptrh	equ	0xFF7
 30416                           tblptrl	equ	0xFF6
 30417                           tablat	equ	0xFF5
 30418                           prodh	equ	0xFF4
 30419                           prodl	equ	0xFF3
 30420                           intcon	equ	0xFF2
 30421                           indf0	equ	0xFEF
 30422                           postinc0	equ	0xFEE
 30423                           fsr0h	equ	0xFEA
 30424                           fsr0l	equ	0xFE9
 30425                           wreg	equ	0xFE8
 30426                           indf1	equ	0xFE7
 30427                           postdec1	equ	0xFE5
 30428                           plusw1	equ	0xFE3
 30429                           fsr1h	equ	0xFE2
 30430                           fsr1l	equ	0xFE1
 30431                           indf2	equ	0xFDF
 30432                           postinc2	equ	0xFDE
 30433                           postdec2	equ	0xFDD
 30434                           plusw2	equ	0xFDB
 30435                           fsr2h	equ	0xFDA
 30436                           fsr2l	equ	0xFD9
 30437                           status	equ	0xFD8
 30438                           
 30439 ;; *************** function __fill_buffer_get_mode_details *****************
 30440 ;; Defined at:
 30441 ;;		line 268 in file "api.c"
 30442 ;; Parameters:    Size  Location     Type
 30443 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 30444 ;;		 -> ToSendDataBuffer(64), 
 30445 ;; Auto vars:     Size  Location     Type
 30446 ;;		None
 30447 ;; Return value:  Size  Location     Type
 30448 ;;                  1    wreg      void 
 30449 ;; Registers used:
 30450 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30451 ;; Tracked objects:
 30452 ;;		On entry : 0/0
 30453 ;;		On exit  : 0/0
 30454 ;;		Unchanged: 0/0
 30455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30456 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30458 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30459 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30460 ;;Total ram usage:        4 bytes
 30461 ;; Hardware stack levels used:    1
 30462 ;; Hardware stack levels required when called:   10
 30463 ;; This function calls:
 30464 ;;		Nothing
 30465 ;; This function is called by:
 30466 ;;		_api_prepare
 30467 ;; This function uses a non-reentrant model
 30468 ;;
 30469                           
 30470                           	psect	text111
 30471  00E476                     __ptext111:
 30472                           	opt stack 0
 30473  00E476                     __fill_buffer_get_mode_details:
 30474                           	opt stack 18
 30475                           
 30476                           ;api.c: 271: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 30477                           
 30478                           ; BSR set to: 0
 30479                           ;incstack = 0
 30480  00E476  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 30481  00E47A  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 30482  00E47E  0E13               	movlw	19
 30483  00E480  6EDF               	movwf	indf2,c
 30484                           
 30485                           ;api.c: 274: outBuffer[1] = ((unsigned char)((0x62A1)&0xFF));
 30486  00E482  0100               	movlb	0	; () banked
 30487  00E484  EE20 F001          	lfsr	2,1
 30488  00E488  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30489  00E48A  26D9               	addwf	fsr2l,f,c
 30490  00E48C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30491  00E48E  22DA               	addwfc	fsr2h,f,c
 30492  00E490  0EA1               	movlw	161
 30493  00E492  6EDF               	movwf	indf2,c
 30494                           
 30495                           ; BSR set to: 0
 30496                           ;api.c: 275: outBuffer[2] = ((unsigned char)(((0x62A1)>>8)&0xFF));
 30497  00E494  EE20 F002          	lfsr	2,2
 30498  00E498  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30499  00E49A  26D9               	addwf	fsr2l,f,c
 30500  00E49C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30501  00E49E  22DA               	addwfc	fsr2h,f,c
 30502  00E4A0  0E62               	movlw	98
 30503  00E4A2  6EDF               	movwf	indf2,c
 30504                           
 30505                           ; BSR set to: 0
 30506                           ;api.c: 278: outBuffer[3] = os.displayState;
 30507  00E4A4  EE20 F003          	lfsr	2,3
 30508  00E4A8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30509  00E4AA  26D9               	addwf	fsr2l,f,c
 30510  00E4AC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30511  00E4AE  22DA               	addwfc	fsr2h,f,c
 30512  00E4B0  C0DD  FFDF         	movff	_os+13,indf2	;volatile
 30513                           
 30514                           ;api.c: 280: switch(os.displayState & 0x0F)
 30515  00E4B4  D084               	goto	l2214
 30516  00E4B6                     
 30517                           ; BSR set to: 0
 30518                           ;api.c: 286: case DISPLAY_STATE_SETUP2:;api.c: 287: outBuffer[4] = os.setup_step_size;
 30519                           
 30520                           ; BSR set to: 0
 30521                           
 30522                           ; BSR set to: 0
 30523  00E4B6  EE20 F004          	lfsr	2,4
 30524  00E4BA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30525  00E4BC  26D9               	addwf	fsr2l,f,c
 30526  00E4BE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30527  00E4C0  22DA               	addwfc	fsr2h,f,c
 30528  00E4C2  C0E0  FFDF         	movff	_os+16,indf2	;volatile
 30529                           
 30530                           ;api.c: 288: break;
 30531  00E4C6  0012               	return	
 30532  00E4C8                     
 30533                           ; BSR set to: 0
 30534                           ;api.c: 291: case DISPLAY_STATE_DIVIDE2:;api.c: 293: outBuffer[4] = os.divide_step_size;
 30535                           
 30536                           ; BSR set to: 0
 30537                           
 30538                           ; BSR set to: 0
 30539  00E4C8  EE20 F004          	lfsr	2,4
 30540  00E4CC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30541  00E4CE  26D9               	addwf	fsr2l,f,c
 30542  00E4D0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30543  00E4D2  22DA               	addwfc	fsr2h,f,c
 30544  00E4D4  C0E5  FFDF         	movff	_os+21,indf2	;volatile
 30545                           
 30546                           ;api.c: 294: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 30547  00E4D8  EE20 F005          	lfsr	2,5
 30548  00E4DC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30549  00E4DE  26D9               	addwf	fsr2l,f,c
 30550  00E4E0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30551  00E4E2  22DA               	addwfc	fsr2h,f,c
 30552  00E4E4  51E4               	movf	(_os+20)& (0+255),w,b	;volatile
 30553  00E4E6  6EDF               	movwf	indf2,c
 30554                           
 30555                           ;api.c: 295: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 30556  00E4E8  EE20 F006          	lfsr	2,6
 30557  00E4EC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30558  00E4EE  26D9               	addwf	fsr2l,f,c
 30559  00E4F0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30560  00E4F2  22DA               	addwfc	fsr2h,f,c
 30561  00E4F4  C0E3  FFDF         	movff	_os+19,indf2	;volatile
 30562                           
 30563                           ;api.c: 296: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 30564  00E4F8  EE20 F007          	lfsr	2,7
 30565  00E4FC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30566  00E4FE  26D9               	addwf	fsr2l,f,c
 30567  00E500  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30568  00E502  22DA               	addwfc	fsr2h,f,c
 30569  00E504  51E9               	movf	(_os+25)& (0+255),w,b	;volatile
 30570  00E506  6EDF               	movwf	indf2,c
 30571                           
 30572                           ;api.c: 297: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 30573  00E508  EE20 F008          	lfsr	2,8
 30574  00E50C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30575  00E50E  26D9               	addwf	fsr2l,f,c
 30576  00E510  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30577  00E512  22DA               	addwfc	fsr2h,f,c
 30578  00E514  C0E8  FFDF         	movff	_os+24,indf2	;volatile
 30579                           
 30580                           ;api.c: 298: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 30581  00E518  EE20 F009          	lfsr	2,9
 30582  00E51C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30583  00E51E  26D9               	addwf	fsr2l,f,c
 30584  00E520  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30585  00E522  22DA               	addwfc	fsr2h,f,c
 30586  00E524  51E7               	movf	(_os+23)& (0+255),w,b	;volatile
 30587  00E526  6EDF               	movwf	indf2,c
 30588                           
 30589                           ;api.c: 299: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 30590  00E528  EE20 F00A          	lfsr	2,10
 30591  00E52C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30592  00E52E  26D9               	addwf	fsr2l,f,c
 30593  00E530  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30594  00E532  22DA               	addwfc	fsr2h,f,c
 30595  00E534  C0E6  FFDF         	movff	_os+22,indf2	;volatile
 30596                           
 30597                           ;api.c: 300: break;
 30598  00E538  0012               	return	
 30599  00E53A                     
 30600                           ; BSR set to: 0
 30601                           ;api.c: 303: case DISPLAY_STATE_ARC2:;api.c: 304: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 30602                           
 30603                           ; BSR set to: 0
 30604                           
 30605                           ; BSR set to: 0
 30606  00E53A  EE20 F004          	lfsr	2,4
 30607  00E53E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30608  00E540  26D9               	addwf	fsr2l,f,c
 30609  00E542  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30610  00E544  22DA               	addwfc	fsr2h,f,c
 30611  00E546  51EB               	movf	(_os+27)& (0+255),w,b	;volatile
 30612  00E548  6EDF               	movwf	indf2,c
 30613                           
 30614                           ;api.c: 305: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 30615  00E54A  EE20 F005          	lfsr	2,5
 30616  00E54E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30617  00E550  26D9               	addwf	fsr2l,f,c
 30618  00E552  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30619  00E554  22DA               	addwfc	fsr2h,f,c
 30620  00E556  C0EA  FFDF         	movff	_os+26,indf2	;volatile
 30621                           
 30622                           ;api.c: 306: outBuffer[6] = os.arc_direction;
 30623  00E55A  EE20 F006          	lfsr	2,6
 30624  00E55E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30625  00E560  26D9               	addwf	fsr2l,f,c
 30626  00E562  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30627  00E564  22DA               	addwfc	fsr2h,f,c
 30628  00E566  C0F2  FFDF         	movff	_os+34,indf2	;volatile
 30629                           
 30630                           ;api.c: 307: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 30631  00E56A  EE20 F007          	lfsr	2,7
 30632  00E56E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30633  00E570  26D9               	addwf	fsr2l,f,c
 30634  00E572  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30635  00E574  22DA               	addwfc	fsr2h,f,c
 30636  00E576  51F1               	movf	(_os+33)& (0+255),w,b	;volatile
 30637  00E578  6EDF               	movwf	indf2,c
 30638                           
 30639                           ;api.c: 308: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 30640  00E57A  EE20 F008          	lfsr	2,8
 30641  00E57E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30642  00E580  26D9               	addwf	fsr2l,f,c
 30643  00E582  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30644  00E584  22DA               	addwfc	fsr2h,f,c
 30645  00E586  C0F0  FFDF         	movff	_os+32,indf2	;volatile
 30646                           
 30647                           ; BSR set to: 0
 30648                           ;api.c: 312: break;
 30649                           
 30650                           ;api.c: 311: case DISPLAY_STATE_ZERO:
 30651                           
 30652                           ;api.c: 309: break;
 30653  00E58A  0012               	return	
 30654  00E58C                     
 30655                           ; BSR set to: 0
 30656                           ;api.c: 315: outBuffer[4] = os.manual_direction;
 30657                           
 30658                           ; BSR set to: 0
 30659  00E58C  EE20 F004          	lfsr	2,4
 30660  00E590  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30661  00E592  26D9               	addwf	fsr2l,f,c
 30662  00E594  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30663  00E596  22DA               	addwfc	fsr2h,f,c
 30664  00E598  C0F5  FFDF         	movff	_os+37,indf2	;volatile
 30665                           
 30666                           ;api.c: 316: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 30667  00E59C  EE20 F005          	lfsr	2,5
 30668  00E5A0  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30669  00E5A2  26D9               	addwf	fsr2l,f,c
 30670  00E5A4  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30671  00E5A6  22DA               	addwfc	fsr2h,f,c
 30672  00E5A8  51F4               	movf	(_os+36)& (0+255),w,b	;volatile
 30673  00E5AA  6EDF               	movwf	indf2,c
 30674                           
 30675                           ;api.c: 317: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 30676  00E5AC  EE20 F006          	lfsr	2,6
 30677  00E5B0  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 30678  00E5B2  26D9               	addwf	fsr2l,f,c
 30679  00E5B4  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 30680  00E5B6  22DA               	addwfc	fsr2h,f,c
 30681  00E5B8  C0F3  FFDF         	movff	_os+35,indf2	;volatile
 30682                           
 30683                           ; BSR set to: 0
 30684                           ;api.c: 319: }
 30685                           
 30686                           ;api.c: 318: break;
 30687  00E5BC  0012               	return	
 30688  00E5BE                     l2214:
 30689                           
 30690                           ; BSR set to: 0
 30691                           
 30692                           ; BSR set to: 0
 30693  00E5BE  51DD               	movf	(_os+13)& (0+255),w,b	;volatile
 30694  00E5C0  0B0F               	andlw	15
 30695  00E5C2  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 30696  00E5C4  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 30697                           
 30698                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30699                           ; Switch size 1, requested type "space"
 30700                           ; Number of cases is 1, Range of values is 0 to 0
 30701                           ; switch strategies available:
 30702                           ; Name         Instructions Cycles
 30703                           ; simple_byte            4     3 (average)
 30704                           ;	Chosen strategy is simple_byte
 30705  00E5C6  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 30706  00E5C8  0A00               	xorlw	0	; case 0
 30707  00E5CA  A4D8               	btfss	status,2,c
 30708  00E5CC  0012               	return	
 30709                           
 30710                           ; BSR set to: 0
 30711                           ; Switch size 1, requested type "space"
 30712                           ; Number of cases is 9, Range of values is 0 to 128
 30713                           ; switch strategies available:
 30714                           ; Name         Instructions Cycles
 30715                           ; simple_byte           28    15 (average)
 30716                           ;	Chosen strategy is simple_byte
 30717  00E5CE  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 30718  00E5D0  0A00               	xorlw	0	; case 0
 30719  00E5D2  B4D8               	btfsc	status,2,c
 30720  00E5D4  0012               	return	
 30721  00E5D6  0A10               	xorlw	16	; case 16
 30722  00E5D8  B4D8               	btfsc	status,2,c
 30723  00E5DA  D76D               	goto	l2217
 30724  00E5DC  0A30               	xorlw	48	; case 32
 30725  00E5DE  B4D8               	btfsc	status,2,c
 30726  00E5E0  D76A               	goto	l2217
 30727  00E5E2  0A10               	xorlw	16	; case 48
 30728  00E5E4  B4D8               	btfsc	status,2,c
 30729  00E5E6  D770               	goto	l2219
 30730  00E5E8  0A70               	xorlw	112	; case 64
 30731  00E5EA  B4D8               	btfsc	status,2,c
 30732  00E5EC  D76D               	goto	l2219
 30733  00E5EE  0A10               	xorlw	16	; case 80
 30734  00E5F0  B4D8               	btfsc	status,2,c
 30735  00E5F2  D7A3               	goto	l2221
 30736  00E5F4  0A30               	xorlw	48	; case 96
 30737  00E5F6  B4D8               	btfsc	status,2,c
 30738  00E5F8  D7A0               	goto	l2221
 30739  00E5FA  0A10               	xorlw	16	; case 112
 30740  00E5FC  B4D8               	btfsc	status,2,c
 30741  00E5FE  0012               	return	
 30742  00E600  0AF0               	xorlw	240	; case 128
 30743  00E602  A4D8               	btfss	status,2,c
 30744  00E604  0012               	return	
 30745  00E606  D7C2               	goto	l2224
 30746  00E608                     __end_of__fill_buffer_get_mode_details:
 30747                           	opt stack 0
 30748                           tosu	equ	0xFFF
 30749                           tosh	equ	0xFFE
 30750                           tosl	equ	0xFFD
 30751                           pclath	equ	0xFFA
 30752                           tblptru	equ	0xFF8
 30753                           tblptrh	equ	0xFF7
 30754                           tblptrl	equ	0xFF6
 30755                           tablat	equ	0xFF5
 30756                           prodh	equ	0xFF4
 30757                           prodl	equ	0xFF3
 30758                           intcon	equ	0xFF2
 30759                           indf0	equ	0xFEF
 30760                           postinc0	equ	0xFEE
 30761                           fsr0h	equ	0xFEA
 30762                           fsr0l	equ	0xFE9
 30763                           wreg	equ	0xFE8
 30764                           indf1	equ	0xFE7
 30765                           postdec1	equ	0xFE5
 30766                           plusw1	equ	0xFE3
 30767                           fsr1h	equ	0xFE2
 30768                           fsr1l	equ	0xFE1
 30769                           indf2	equ	0xFDF
 30770                           postinc2	equ	0xFDE
 30771                           postdec2	equ	0xFDD
 30772                           plusw2	equ	0xFDB
 30773                           fsr2h	equ	0xFDA
 30774                           fsr2l	equ	0xFD9
 30775                           status	equ	0xFD8
 30776                           
 30777 ;; *************** function __fill_buffer_get_display *****************
 30778 ;; Defined at:
 30779 ;;		line 227 in file "api.c"
 30780 ;; Parameters:    Size  Location     Type
 30781 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 30782 ;;		 -> ToSendDataBuffer(64), 
 30783 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 30784 ;; Auto vars:     Size  Location     Type
 30785 ;;  position        1   15[BANK0 ] unsigned char 
 30786 ;;  start_line      1   14[BANK0 ] unsigned char 
 30787 ;;  line            1   13[BANK0 ] unsigned char 
 30788 ;;  cntr            1   12[BANK0 ] unsigned char 
 30789 ;; Return value:  Size  Location     Type
 30790 ;;                  1    wreg      void 
 30791 ;; Registers used:
 30792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30793 ;; Tracked objects:
 30794 ;;		On entry : 0/0
 30795 ;;		On exit  : 0/0
 30796 ;;		Unchanged: 0/0
 30797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30798 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30799 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30800 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30801 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30802 ;;Total ram usage:       12 bytes
 30803 ;; Hardware stack levels used:    1
 30804 ;; Hardware stack levels required when called:   11
 30805 ;; This function calls:
 30806 ;;		_display_get_character
 30807 ;; This function is called by:
 30808 ;;		_api_prepare
 30809 ;; This function uses a non-reentrant model
 30810 ;;
 30811                           
 30812                           	psect	text112
 30813  010DE0                     __ptext112:
 30814                           	opt stack 0
 30815  010DE0                     __fill_buffer_get_display:
 30816                           	opt stack 17
 30817                           
 30818                           ;api.c: 229: uint8_t cntr;;api.c: 230: uint8_t line;;api.c: 231: uint8_t start_line;;api
      +                          .c: 232: uint8_t position;;api.c: 235: if(secondHalf)
 30819                           
 30820                           ; BSR set to: 0
 30821                           ;incstack = 0
 30822  010DE0  0100               	movlb	0	; () banked
 30823  010DE2  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 30824  010DE4  B4D8               	btfsc	status,2,c
 30825  010DE6  D006               	goto	l2202
 30826                           
 30827                           ; BSR set to: 0
 30828                           ;api.c: 236: {;api.c: 237: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 30829  010DE8  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 30830  010DEC  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 30831  010DF0  0E12               	movlw	18
 30832  010DF2  D005               	goto	L57
 30833  010DF4                     l2202:
 30834                           
 30835                           ; BSR set to: 0
 30836                           ;api.c: 239: else;api.c: 240: {;api.c: 241: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 30837                           
 30838                           ; BSR set to: 0
 30839  010DF4  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 30840  010DF8  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 30841  010DFC  0E11               	movlw	17
 30842  010DFE                     L57:
 30843  010DFE  6EDF               	movwf	indf2,c
 30844                           
 30845                           ; BSR set to: 0
 30846                           ;api.c: 242: };api.c: 245: outBuffer[1] = ((unsigned char)((0x62A1)&0xFF));
 30847                           
 30848                           ; BSR set to: 0
 30849  010E00  EE20 F001          	lfsr	2,1
 30850  010E04  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 30851  010E06  26D9               	addwf	fsr2l,f,c
 30852  010E08  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 30853  010E0A  22DA               	addwfc	fsr2h,f,c
 30854  010E0C  0EA1               	movlw	161
 30855  010E0E  6EDF               	movwf	indf2,c
 30856                           
 30857                           ; BSR set to: 0
 30858                           ;api.c: 246: outBuffer[2] = ((unsigned char)(((0x62A1)>>8)&0xFF));
 30859  010E10  EE20 F002          	lfsr	2,2
 30860  010E14  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 30861  010E16  26D9               	addwf	fsr2l,f,c
 30862  010E18  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 30863  010E1A  22DA               	addwfc	fsr2h,f,c
 30864  010E1C  0E62               	movlw	98
 30865  010E1E  6EDF               	movwf	indf2,c
 30866                           
 30867                           ; BSR set to: 0
 30868                           ;api.c: 249: cntr = 3;
 30869  010E20  0E03               	movlw	3
 30870  010E22  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 30871                           
 30872                           ; BSR set to: 0
 30873                           ;api.c: 250: if(secondHalf)
 30874  010E24  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 30875  010E26  B4D8               	btfsc	status,2,c
 30876  010E28  D002               	goto	l2204
 30877                           
 30878                           ; BSR set to: 0
 30879                           ;api.c: 251: {;api.c: 252: start_line = 2;
 30880  010E2A  0E02               	movlw	2
 30881  010E2C  D001               	goto	L58
 30882  010E2E                     l2204:
 30883                           
 30884                           ; BSR set to: 0
 30885                           ;api.c: 254: else;api.c: 255: {;api.c: 256: start_line = 0;
 30886                           
 30887                           ; BSR set to: 0
 30888  010E2E  0E00               	movlw	0
 30889  010E30                     L58:
 30890  010E30  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 30891                           
 30892                           ; BSR set to: 0
 30893                           ;api.c: 257: };api.c: 258: for(line=start_line; line<start_line+2; ++line)
 30894                           
 30895                           ; BSR set to: 0
 30896  010E32  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 30897  010E36  D01B               	goto	l2206
 30898  010E38                     
 30899                           ; BSR set to: 0
 30900                           ;api.c: 259: {;api.c: 260: for(position=0; position<20; ++position)
 30901                           
 30902                           ; BSR set to: 0
 30903  010E38  0E00               	movlw	0
 30904  010E3A  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 30905  010E3C                     l20174:
 30906                           
 30907                           ; BSR set to: 0
 30908  010E3C  0E13               	movlw	19
 30909  010E3E  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 30910  010E40  D001               	goto	l2208
 30911  010E42  D014               	goto	u20020
 30912  010E44                     l2208:
 30913                           
 30914                           ; BSR set to: 0
 30915                           ;api.c: 261: {;api.c: 262: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 30916                           
 30917                           ; BSR set to: 0
 30918  010E44  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 30919  010E48  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 30920  010E4A  EC25  F095         	call	_display_get_character
 30921  010E4E  0100               	movlb	0	; () banked
 30922  010E50  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 30923  010E52  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 30924  010E54  0D01               	mullw	1
 30925  010E56  50F3               	movf	prodl,w,c
 30926  010E58  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 30927  010E5A  6ED9               	movwf	fsr2l,c
 30928  010E5C  50F4               	movf	prodh,w,c
 30929  010E5E  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 30930  010E60  6EDA               	movwf	fsr2h,c
 30931  010E62  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 30932                           
 30933                           ; BSR set to: 0
 30934                           ;api.c: 263: ++cntr;
 30935  010E66  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 30936                           
 30937                           ; BSR set to: 0
 30938  010E68  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 30939  010E6A  D7E8               	goto	l20174
 30940  010E6C                     u20020:
 30941                           
 30942                           ; BSR set to: 0
 30943                           
 30944                           ; BSR set to: 0
 30945  010E6C  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 30946  010E6E                     l2206:
 30947                           
 30948                           ; BSR set to: 0
 30949                           
 30950                           ; BSR set to: 0
 30951  010E6E  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 30952  010E70  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 30953  010E72  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 30954  010E74  0E02               	movlw	2
 30955  010E76  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 30956  010E78  0E00               	movlw	0
 30957  010E7A  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 30958  010E7C  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 30959  010E7E  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 30960  010E80  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 30961  010E82  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 30962  010E84  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 30963  010E86  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 30964  010E88  0A80               	xorlw	128
 30965  010E8A  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 30966  010E8C  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 30967  010E8E  0A80               	xorlw	128
 30968  010E90  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 30969  010E92  B0D8               	btfsc	status,0,c
 30970  010E94  0012               	return	
 30971  010E96  D7D0               	goto	l2207
 30972  010E98                     __end_of__fill_buffer_get_display:
 30973                           	opt stack 0
 30974                           tosu	equ	0xFFF
 30975                           tosh	equ	0xFFE
 30976                           tosl	equ	0xFFD
 30977                           pclath	equ	0xFFA
 30978                           tblptru	equ	0xFF8
 30979                           tblptrh	equ	0xFF7
 30980                           tblptrl	equ	0xFF6
 30981                           tablat	equ	0xFF5
 30982                           prodh	equ	0xFF4
 30983                           prodl	equ	0xFF3
 30984                           intcon	equ	0xFF2
 30985                           indf0	equ	0xFEF
 30986                           postinc0	equ	0xFEE
 30987                           fsr0h	equ	0xFEA
 30988                           fsr0l	equ	0xFE9
 30989                           wreg	equ	0xFE8
 30990                           indf1	equ	0xFE7
 30991                           postdec1	equ	0xFE5
 30992                           plusw1	equ	0xFE3
 30993                           fsr1h	equ	0xFE2
 30994                           fsr1l	equ	0xFE1
 30995                           indf2	equ	0xFDF
 30996                           postinc2	equ	0xFDE
 30997                           postdec2	equ	0xFDD
 30998                           plusw2	equ	0xFDB
 30999                           fsr2h	equ	0xFDA
 31000                           fsr2l	equ	0xFD9
 31001                           status	equ	0xFD8
 31002                           
 31003 ;; *************** function _display_get_character *****************
 31004 ;; Defined at:
 31005 ;;		line 580 in file "display.c"
 31006 ;; Parameters:    Size  Location     Type
 31007 ;;  line            1    wreg     unsigned char 
 31008 ;;  position        1    0[BANK0 ] unsigned char 
 31009 ;; Auto vars:     Size  Location     Type
 31010 ;;  line            1    3[BANK0 ] unsigned char 
 31011 ;; Return value:  Size  Location     Type
 31012 ;;                  1    wreg      unsigned char 
 31013 ;; Registers used:
 31014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31015 ;; Tracked objects:
 31016 ;;		On entry : 0/0
 31017 ;;		On exit  : 0/0
 31018 ;;		Unchanged: 0/0
 31019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31020 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31023 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31024 ;;Total ram usage:        4 bytes
 31025 ;; Hardware stack levels used:    1
 31026 ;; Hardware stack levels required when called:   10
 31027 ;; This function calls:
 31028 ;;		Nothing
 31029 ;; This function is called by:
 31030 ;;		__fill_buffer_get_display
 31031 ;; This function uses a non-reentrant model
 31032 ;;
 31033                           
 31034                           	psect	text113
 31035  012A4A                     __ptext113:
 31036                           	opt stack 0
 31037  012A4A                     _display_get_character:
 31038                           	opt stack 17
 31039                           
 31040                           ; BSR set to: 0
 31041                           ;incstack = 0
 31042                           ;display_get_character@line stored from wreg
 31043  012A4A  0100               	movlb	0	; () banked
 31044  012A4C  6F63               	movwf	display_get_character@line& (0+255),b
 31045                           
 31046                           ;display.c: 582: return display_content[line][position];
 31047  012A4E  0100               	movlb	0	; () banked
 31048  012A50  5163               	movf	display_get_character@line& (0+255),w,b
 31049  012A52  0D14               	mullw	20
 31050  012A54  0E78               	movlw	low _display_content
 31051  012A56  6F61               	movwf	??_display_get_character& (0+255),b
 31052  012A58  0E02               	movlw	high _display_content
 31053  012A5A  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 31054  012A5C  50F3               	movf	prodl,w,c
 31055  012A5E  2761               	addwf	??_display_get_character& (0+255),f,b
 31056  012A60  50F4               	movf	prodh,w,c
 31057  012A62  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 31058  012A64  5160               	movf	display_get_character@position& (0+255),w,b
 31059  012A66  0D01               	mullw	1
 31060  012A68  50F3               	movf	prodl,w,c
 31061  012A6A  2561               	addwf	??_display_get_character& (0+255),w,b
 31062  012A6C  6ED9               	movwf	fsr2l,c
 31063  012A6E  50F4               	movf	prodh,w,c
 31064  012A70  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 31065  012A72  6EDA               	movwf	fsr2h,c
 31066  012A74  50DF               	movf	indf2,w,c
 31067  012A76  0012               	return	
 31068  012A78                     __end_of_display_get_character:
 31069                           	opt stack 0
 31070                           tosu	equ	0xFFF
 31071                           tosh	equ	0xFFE
 31072                           tosl	equ	0xFFD
 31073                           pclath	equ	0xFFA
 31074                           tblptru	equ	0xFF8
 31075                           tblptrh	equ	0xFF7
 31076                           tblptrl	equ	0xFF6
 31077                           tablat	equ	0xFF5
 31078                           prodh	equ	0xFF4
 31079                           prodl	equ	0xFF3
 31080                           intcon	equ	0xFF2
 31081                           indf0	equ	0xFEF
 31082                           postinc0	equ	0xFEE
 31083                           fsr0h	equ	0xFEA
 31084                           fsr0l	equ	0xFE9
 31085                           wreg	equ	0xFE8
 31086                           indf1	equ	0xFE7
 31087                           postdec1	equ	0xFE5
 31088                           plusw1	equ	0xFE3
 31089                           fsr1h	equ	0xFE2
 31090                           fsr1l	equ	0xFE1
 31091                           indf2	equ	0xFDF
 31092                           postinc2	equ	0xFDE
 31093                           postdec2	equ	0xFDD
 31094                           plusw2	equ	0xFDB
 31095                           fsr2h	equ	0xFDA
 31096                           fsr2l	equ	0xFD9
 31097                           status	equ	0xFD8
 31098                           
 31099 ;; *************** function _api_parse *****************
 31100 ;; Defined at:
 31101 ;;		line 92 in file "api.c"
 31102 ;; Parameters:    Size  Location     Type
 31103 ;;  inBuffer        2   91[BANK0 ] PTR unsigned char 
 31104 ;;		 -> ReceivedDataBuffer(64), 
 31105 ;;  receivedData    1   93[BANK0 ] unsigned char 
 31106 ;;  outBuffer       2   94[BANK0 ] PTR unsigned char 
 31107 ;;		 -> ToSendDataBuffer(64), 
 31108 ;; Auto vars:     Size  Location     Type
 31109 ;;  out_idx_ptr     2   98[BANK0 ] PTR unsigned char 
 31110 ;;		 -> api_parse@out_idx(1), 
 31111 ;;  in_idx          1  101[BANK0 ] unsigned char 
 31112 ;;  out_idx         1  100[BANK0 ] unsigned char 
 31113 ;; Return value:  Size  Location     Type
 31114 ;;                  1    wreg      void 
 31115 ;; Registers used:
 31116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31117 ;; Tracked objects:
 31118 ;;		On entry : 0/0
 31119 ;;		On exit  : 0/0
 31120 ;;		Unchanged: 0/0
 31121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31122 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31123 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31124 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31125 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31126 ;;Total ram usage:       11 bytes
 31127 ;; Hardware stack levels used:    1
 31128 ;; Hardware stack levels required when called:   14
 31129 ;; This function calls:
 31130 ;;		__parse_command_long
 31131 ;;		__parse_command_short
 31132 ;; This function is called by:
 31133 ;;		_APP_DeviceCustomHIDTasks
 31134 ;; This function uses a non-reentrant model
 31135 ;;
 31136                           
 31137                           	psect	text114
 31138  00F3F8                     __ptext114:
 31139                           	opt stack 0
 31140  00F3F8                     _api_parse:
 31141                           	opt stack 15
 31142                           
 31143                           ;api.c: 96: uint8_t in_idx;;api.c: 97: uint8_t out_idx;;api.c: 98: uint8_t *out_idx_ptr;
      +                          ;api.c: 100: out_idx = 0;
 31144                           
 31145                           ; BSR set to: 0
 31146                           ;incstack = 0
 31147  00F3F8  0E00               	movlw	0
 31148  00F3FA  0100               	movlb	0	; () banked
 31149  00F3FC  6FC4               	movwf	api_parse@out_idx& (0+255),b
 31150                           
 31151                           ; BSR set to: 0
 31152                           ;api.c: 101: out_idx_ptr = &out_idx;
 31153  00F3FE  0EC4               	movlw	low api_parse@out_idx
 31154  00F400  6FC2               	movwf	api_parse@out_idx_ptr& (0+255),b
 31155  00F402  0E00               	movlw	high api_parse@out_idx
 31156  00F404  6FC3               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 31157                           
 31158                           ; BSR set to: 0
 31159                           ;api.c: 103: if(inBuffer[0]>0x7F)
 31160  00F406  C0BB  FFD9         	movff	api_parse@inBuffer,fsr2l
 31161  00F40A  C0BC  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 31162  00F40E  0E7F               	movlw	127
 31163  00F410  64DF               	cpfsgt	indf2,c
 31164  00F412  D001               	goto	l2183
 31165  00F414  0012               	return	
 31166  00F416                     l2183:
 31167                           
 31168                           ; BSR set to: 0
 31169                           ;api.c: 108: };api.c: 110: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 31170                           
 31171                           ; BSR set to: 0
 31172  00F416  C0BB  FFD9         	movff	api_parse@inBuffer,fsr2l
 31173  00F41A  C0BC  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 31174  00F41E  0E20               	movlw	32
 31175  00F420  18DE               	xorwf	postinc2,w,c
 31176  00F422  B4D8               	btfsc	status,2,c
 31177  00F424  0012               	return	
 31178                           
 31179                           ; BSR set to: 0
 31180                           ;api.c: 115: };api.c: 117: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 31181                           
 31182                           ; BSR set to: 0
 31183                           
 31184                           ; BSR set to: 0
 31185                           ;api.c: 111: {;api.c: 114: return;
 31186  00F426  C0BB  FFD9         	movff	api_parse@inBuffer,fsr2l
 31187  00F42A  C0BC  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 31188  00F42E  50DF               	movf	indf2,w,c
 31189  00F430  A4D8               	btfss	status,2,c
 31190  00F432  D018               	goto	l2186
 31191                           
 31192                           ; BSR set to: 0
 31193                           ;api.c: 118: {;api.c: 120: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 31194  00F434  C0BE  FFD9         	movff	api_parse@outBuffer,fsr2l
 31195  00F438  C0BF  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 31196  00F43C  0E00               	movlw	0
 31197  00F43E  6EDF               	movwf	indf2,c
 31198                           
 31199                           ; BSR set to: 0
 31200                           ;api.c: 123: outBuffer[1] = ((unsigned char)((0x62A1)&0xFF));
 31201  00F440  EE20 F001          	lfsr	2,1
 31202  00F444  51BE               	movf	api_parse@outBuffer& (0+255),w,b
 31203  00F446  26D9               	addwf	fsr2l,f,c
 31204  00F448  51BF               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 31205  00F44A  22DA               	addwfc	fsr2h,f,c
 31206  00F44C  0EA1               	movlw	161
 31207  00F44E  6EDF               	movwf	indf2,c
 31208                           
 31209                           ; BSR set to: 0
 31210                           ;api.c: 124: outBuffer[2] = ((unsigned char)(((0x62A1)>>8)&0xFF));
 31211  00F450  EE20 F002          	lfsr	2,2
 31212  00F454  51BE               	movf	api_parse@outBuffer& (0+255),w,b
 31213  00F456  26D9               	addwf	fsr2l,f,c
 31214  00F458  51BF               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 31215  00F45A  22DA               	addwfc	fsr2h,f,c
 31216  00F45C  0E62               	movlw	98
 31217  00F45E  6EDF               	movwf	indf2,c
 31218                           
 31219                           ; BSR set to: 0
 31220                           ;api.c: 127: out_idx = 3;
 31221  00F460  0E03               	movlw	3
 31222  00F462  6FC4               	movwf	api_parse@out_idx& (0+255),b
 31223  00F464                     l2186:
 31224                           
 31225                           ; BSR set to: 0
 31226                           ;api.c: 128: };api.c: 130: in_idx = 1;
 31227                           
 31228                           ; BSR set to: 0
 31229  00F464  0E01               	movlw	1
 31230  00F466  6FC5               	movwf	api_parse@in_idx& (0+255),b
 31231                           
 31232                           ;api.c: 131: while(in_idx<receivedDataLength)
 31233  00F468  D057               	goto	l2192
 31234  00F46A                     
 31235                           ; BSR set to: 0
 31236                           ;api.c: 132: {;api.c: 134: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 31237                           
 31238                           ; BSR set to: 0
 31239  00F46A  51C5               	movf	api_parse@in_idx& (0+255),w,b
 31240  00F46C  0D01               	mullw	1
 31241  00F46E  50F3               	movf	prodl,w,c
 31242  00F470  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 31243  00F472  6ED9               	movwf	fsr2l,c
 31244  00F474  50F4               	movf	prodh,w,c
 31245  00F476  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31246  00F478  6EDA               	movwf	fsr2h,c
 31247  00F47A  0E99               	movlw	153
 31248  00F47C  18DE               	xorwf	postinc2,w,c
 31249  00F47E  B4D8               	btfsc	status,2,c
 31250  00F480  0012               	return	
 31251  00F482  D02F               	goto	l2190
 31252  00F484                     
 31253                           ; BSR set to: 0
 31254                           ;api.c: 142: _parse_command_short(inBuffer[in_idx]);
 31255                           
 31256                           ; BSR set to: 0
 31257  00F484  51C5               	movf	api_parse@in_idx& (0+255),w,b
 31258  00F486  0D01               	mullw	1
 31259  00F488  50F3               	movf	prodl,w,c
 31260  00F48A  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 31261  00F48C  6ED9               	movwf	fsr2l,c
 31262  00F48E  50F4               	movf	prodh,w,c
 31263  00F490  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31264  00F492  6EDA               	movwf	fsr2h,c
 31265  00F494  50DF               	movf	indf2,w,c
 31266  00F496  EC04  F073         	call	__parse_command_short
 31267  00F49A  D00B               	goto	l20822
 31268  00F49C                     
 31269                           ; BSR set to: 0
 31270                           ;api.c: 147: _parse_command_short(inBuffer[in_idx]);
 31271                           
 31272                           ; BSR set to: 0
 31273  00F49C  51C5               	movf	api_parse@in_idx& (0+255),w,b
 31274  00F49E  0D01               	mullw	1
 31275  00F4A0  50F3               	movf	prodl,w,c
 31276  00F4A2  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 31277  00F4A4  6ED9               	movwf	fsr2l,c
 31278  00F4A6  50F4               	movf	prodh,w,c
 31279  00F4A8  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31280  00F4AA  6EDA               	movwf	fsr2h,c
 31281  00F4AC  50DF               	movf	indf2,w,c
 31282  00F4AE  EC04  F073         	call	__parse_command_short
 31283  00F4B2                     l20822:
 31284                           
 31285                           ;api.c: 148: ++in_idx;
 31286  00F4B2  0100               	movlb	0	; () banked
 31287  00F4B4  2BC5               	incf	api_parse@in_idx& (0+255),f,b
 31288                           
 31289                           ;api.c: 149: break;
 31290  00F4B6  D030               	goto	l2192
 31291  00F4B8                     
 31292                           ; BSR set to: 0
 31293                           ;api.c: 152: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 31294                           
 31295                           ; BSR set to: 0
 31296  00F4B8  51C5               	movf	api_parse@in_idx& (0+255),w,b
 31297  00F4BA  0D01               	mullw	1
 31298  00F4BC  50F3               	movf	prodl,w,c
 31299  00F4BE  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 31300  00F4C0  6FAA               	movwf	__parse_command_long@data& (0+255),b
 31301  00F4C2  50F4               	movf	prodh,w,c
 31302  00F4C4  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31303  00F4C6  6FAB               	movwf	(__parse_command_long@data+1)& (0+255),b
 31304  00F4C8  C0BE  F0AC         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 31305  00F4CC  C0BF  F0AD         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 31306  00F4D0  C0C2  F0AE         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 31307  00F4D4  C0C3  F0AF         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 31308  00F4D8  EC5F  F093         	call	__parse_command_long	;wreg free
 31309  00F4DC  0100               	movlb	0	; () banked
 31310  00F4DE  27C5               	addwf	api_parse@in_idx& (0+255),f,b
 31311                           
 31312                           ;api.c: 153: break;
 31313  00F4E0  D01B               	goto	l2192
 31314  00F4E2                     l2190:
 31315                           
 31316                           ; BSR set to: 0
 31317                           
 31318                           ; BSR set to: 0
 31319  00F4E2  51C5               	movf	api_parse@in_idx& (0+255),w,b
 31320  00F4E4  0D01               	mullw	1
 31321  00F4E6  50F3               	movf	prodl,w,c
 31322  00F4E8  25BB               	addwf	api_parse@inBuffer& (0+255),w,b
 31323  00F4EA  6ED9               	movwf	fsr2l,c
 31324  00F4EC  50F4               	movf	prodh,w,c
 31325  00F4EE  21BC               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31326  00F4F0  6EDA               	movwf	fsr2h,c
 31327  00F4F2  50DF               	movf	indf2,w,c
 31328  00F4F4  0BF0               	andlw	240
 31329  00F4F6  6FC0               	movwf	??_api_parse& (0+255),b
 31330  00F4F8  6BC1               	clrf	(??_api_parse+1)& (0+255),b
 31331                           
 31332                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31333                           ; Switch size 1, requested type "space"
 31334                           ; Number of cases is 1, Range of values is 0 to 0
 31335                           ; switch strategies available:
 31336                           ; Name         Instructions Cycles
 31337                           ; simple_byte            4     3 (average)
 31338                           ;	Chosen strategy is simple_byte
 31339  00F4FA  51C1               	movf	(??_api_parse+1)& (0+255),w,b
 31340  00F4FC  0A00               	xorlw	0	; case 0
 31341  00F4FE  A4D8               	btfss	status,2,c
 31342  00F500  0012               	return	
 31343                           
 31344                           ; BSR set to: 0
 31345                           ; Switch size 1, requested type "space"
 31346                           ; Number of cases is 3, Range of values is 32 to 144
 31347                           ; switch strategies available:
 31348                           ; Name         Instructions Cycles
 31349                           ; simple_byte           10     6 (average)
 31350                           ;	Chosen strategy is simple_byte
 31351  00F502  51C0               	movf	??_api_parse& (0+255),w,b
 31352  00F504  0A20               	xorlw	32	; case 32
 31353  00F506  B4D8               	btfsc	status,2,c
 31354  00F508  D7BD               	goto	l2191
 31355  00F50A  0A10               	xorlw	16	; case 48
 31356  00F50C  B4D8               	btfsc	status,2,c
 31357  00F50E  D7C6               	goto	l2193
 31358  00F510  0AA0               	xorlw	160	; case 144
 31359  00F512  A4D8               	btfss	status,2,c
 31360  00F514  0012               	return	
 31361  00F516  D7D0               	goto	l2194
 31362  00F518                     l2192:
 31363                           
 31364                           ; BSR set to: 0
 31365                           
 31366                           ; BSR set to: 0
 31367                           
 31368                           ; BSR set to: 0
 31369  00F518  51BD               	movf	api_parse@receivedDataLength& (0+255),w,b
 31370  00F51A  5DC5               	subwf	api_parse@in_idx& (0+255),w,b
 31371  00F51C  B0D8               	btfsc	status,0,c
 31372  00F51E  0012               	return	
 31373  00F520  D7A4               	goto	l2188
 31374  00F522                     __end_of_api_parse:
 31375                           	opt stack 0
 31376                           tosu	equ	0xFFF
 31377                           tosh	equ	0xFFE
 31378                           tosl	equ	0xFFD
 31379                           pclath	equ	0xFFA
 31380                           tblptru	equ	0xFF8
 31381                           tblptrh	equ	0xFF7
 31382                           tblptrl	equ	0xFF6
 31383                           tablat	equ	0xFF5
 31384                           prodh	equ	0xFF4
 31385                           prodl	equ	0xFF3
 31386                           intcon	equ	0xFF2
 31387                           indf0	equ	0xFEF
 31388                           postinc0	equ	0xFEE
 31389                           fsr0h	equ	0xFEA
 31390                           fsr0l	equ	0xFE9
 31391                           wreg	equ	0xFE8
 31392                           indf1	equ	0xFE7
 31393                           postdec1	equ	0xFE5
 31394                           plusw1	equ	0xFE3
 31395                           fsr1h	equ	0xFE2
 31396                           fsr1l	equ	0xFE1
 31397                           indf2	equ	0xFDF
 31398                           postinc2	equ	0xFDE
 31399                           postdec2	equ	0xFDD
 31400                           plusw2	equ	0xFDB
 31401                           fsr2h	equ	0xFDA
 31402                           fsr2l	equ	0xFD9
 31403                           status	equ	0xFD8
 31404                           
 31405 ;; *************** function __parse_command_short *****************
 31406 ;; Defined at:
 31407 ;;		line 322 in file "api.c"
 31408 ;; Parameters:    Size  Location     Type
 31409 ;;  cmd             1    wreg     unsigned char 
 31410 ;; Auto vars:     Size  Location     Type
 31411 ;;  cmd             1   90[BANK0 ] unsigned char 
 31412 ;; Return value:  Size  Location     Type
 31413 ;;                  1    wreg      void 
 31414 ;; Registers used:
 31415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31416 ;; Tracked objects:
 31417 ;;		On entry : 0/0
 31418 ;;		On exit  : 0/0
 31419 ;;		Unchanged: 0/0
 31420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31422 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31424 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31425 ;;Total ram usage:        1 bytes
 31426 ;; Hardware stack levels used:    1
 31427 ;; Hardware stack levels required when called:   13
 31428 ;; This function calls:
 31429 ;;		_motor_go_to_steps_position
 31430 ;;		_motor_schedule_command
 31431 ;; This function is called by:
 31432 ;;		_api_parse
 31433 ;; This function uses a non-reentrant model
 31434 ;;
 31435                           
 31436                           	psect	text115
 31437  00E608                     __ptext115:
 31438                           	opt stack 0
 31439  00E608                     __parse_command_short:
 31440                           	opt stack 15
 31441                           
 31442                           ; BSR set to: 0
 31443                           ;incstack = 0
 31444                           ;__parse_command_short@cmd stored from wreg
 31445  00E608  0100               	movlb	0	; () banked
 31446  00E60A  6FBA               	movwf	__parse_command_short@cmd& (0+255),b
 31447                           
 31448                           ;api.c: 324: switch(cmd)
 31449  00E60C  D07F               	goto	l2228
 31450  00E60E                     
 31451                           ;api.c: 342: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 31452  00E60E  0E01               	movlw	1
 31453  00E610  0100               	movlb	0	; () banked
 31454  00E612  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 31455                           
 31456                           ;api.c: 343: break;
 31457  00E614  0012               	return	
 31458  00E616                     
 31459                           ; BSR set to: 0
 31460                           ;api.c: 346: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 31461                           
 31462                           ; BSR set to: 0
 31463  00E616  0E11               	movlw	17
 31464  00E618  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 31465                           
 31466                           ;api.c: 347: break;
 31467  00E61A  0012               	return	
 31468  00E61C                     
 31469                           ; BSR set to: 0
 31470                           ;api.c: 350: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 31471                           
 31472                           ; BSR set to: 0
 31473  00E61C  0E31               	movlw	49
 31474  00E61E  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 31475                           
 31476                           ;api.c: 351: break;
 31477  00E620  0012               	return	
 31478  00E622                     
 31479                           ; BSR set to: 0
 31480                           ;api.c: 354: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 31481                           
 31482                           ; BSR set to: 0
 31483  00E622  0E51               	movlw	81
 31484  00E624  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 31485                           
 31486                           ;api.c: 355: break;
 31487  00E626  0012               	return	
 31488  00E628                     
 31489                           ; BSR set to: 0
 31490                           ;api.c: 358: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 31491                           
 31492                           ; BSR set to: 0
 31493  00E628  0E82               	movlw	130
 31494  00E62A  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 31495                           
 31496                           ;api.c: 359: break;
 31497  00E62C  0012               	return	
 31498  00E62E                     
 31499                           ; BSR set to: 0
 31500                           ;api.c: 362: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 31501                           
 31502                           ; BSR set to: 0
 31503  00E62E  0E71               	movlw	113
 31504  00E630  6FDD               	movwf	(_os+13)& (0+255),b	;volatile
 31505                           
 31506                           ;api.c: 363: break;
 31507  00E632  0012               	return	
 31508  00E634                     
 31509                           ; BSR set to: 0
 31510                           ;api.c: 366: os.current_position_in_steps = 0;
 31511                           
 31512                           ; BSR set to: 0
 31513  00E634  0E00               	movlw	0
 31514  00E636  6FD7               	movwf	(_os+7)& (0+255),b	;volatile
 31515  00E638  0E00               	movlw	0
 31516  00E63A  6FD8               	movwf	(_os+8)& (0+255),b	;volatile
 31517  00E63C  0E00               	movlw	0
 31518  00E63E  6FD9               	movwf	(_os+9)& (0+255),b	;volatile
 31519  00E640  0E00               	movlw	0
 31520  00E642  6FDA               	movwf	(_os+10)& (0+255),b	;volatile
 31521                           
 31522                           ;api.c: 367: os.divide_position = 0;
 31523  00E644  0E00               	movlw	0
 31524  00E646  6FE7               	movwf	(_os+23)& (0+255),b	;volatile
 31525  00E648  0E00               	movlw	0
 31526  00E64A  6FE6               	movwf	(_os+22)& (0+255),b	;volatile
 31527                           
 31528                           ; BSR set to: 0
 31529                           ;api.c: 368: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 31530  00E64C  C188  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 31531  00E650  C189  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 31532  00E654  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 31533  00E656  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 31534  00E658  0E00               	movlw	0
 31535  00E65A  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31536  00E65C  0E00               	movlw	0
 31537  00E65E  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31538  00E660  0E01               	movlw	1
 31539  00E662  ECFC  F088         	call	_motor_schedule_command
 31540                           
 31541                           ;api.c: 369: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0);
 31542  00E666  C188  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 31543  00E66A  C189  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 31544  00E66E  0100               	movlb	0	; () banked
 31545  00E670  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 31546  00E672  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 31547  00E674  0E00               	movlw	0
 31548  00E676  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31549  00E678  0E00               	movlw	0
 31550  00E67A  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31551  00E67C  0EFF               	movlw	255
 31552  00E67E  ECFC  F088         	call	_motor_schedule_command
 31553                           
 31554                           ;api.c: 370: os.approach_direction = MOTOR_DIRECTION_CCW;
 31555  00E682  0100               	movlb	0	; () banked
 31556  00E684  69E2               	setf	(_os+18)& (0+255),b	;volatile
 31557                           
 31558                           ;api.c: 371: break;
 31559  00E686  0012               	return	
 31560  00E688                     
 31561                           ; BSR set to: 0
 31562                           ;api.c: 374: os.current_position_in_steps = 0;
 31563                           
 31564                           ; BSR set to: 0
 31565  00E688  0E00               	movlw	0
 31566  00E68A  6FD7               	movwf	(_os+7)& (0+255),b	;volatile
 31567  00E68C  0E00               	movlw	0
 31568  00E68E  6FD8               	movwf	(_os+8)& (0+255),b	;volatile
 31569  00E690  0E00               	movlw	0
 31570  00E692  6FD9               	movwf	(_os+9)& (0+255),b	;volatile
 31571  00E694  0E00               	movlw	0
 31572  00E696  6FDA               	movwf	(_os+10)& (0+255),b	;volatile
 31573                           
 31574                           ;api.c: 375: os.divide_position = 0;
 31575  00E698  0E00               	movlw	0
 31576  00E69A  6FE7               	movwf	(_os+23)& (0+255),b	;volatile
 31577  00E69C  0E00               	movlw	0
 31578  00E69E  6FE6               	movwf	(_os+22)& (0+255),b	;volatile
 31579                           
 31580                           ; BSR set to: 0
 31581                           ;api.c: 376: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0);
 31582  00E6A0  C188  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 31583  00E6A4  C189  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 31584  00E6A8  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 31585  00E6AA  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 31586  00E6AC  0E00               	movlw	0
 31587  00E6AE  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31588  00E6B0  0E00               	movlw	0
 31589  00E6B2  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31590  00E6B4  0EFF               	movlw	255
 31591  00E6B6  ECFC  F088         	call	_motor_schedule_command
 31592                           
 31593                           ;api.c: 377: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 31594  00E6BA  C188  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 31595  00E6BE  C189  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 31596  00E6C2  0100               	movlb	0	; () banked
 31597  00E6C4  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 31598  00E6C6  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 31599  00E6C8  0E00               	movlw	0
 31600  00E6CA  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 31601  00E6CC  0E00               	movlw	0
 31602  00E6CE  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 31603  00E6D0  0E01               	movlw	1
 31604  00E6D2  ECFC  F088         	call	_motor_schedule_command
 31605                           
 31606                           ;api.c: 378: os.approach_direction = MOTOR_DIRECTION_CW;
 31607  00E6D6  0E01               	movlw	1
 31608  00E6D8  0100               	movlb	0	; () banked
 31609  00E6DA  6FE2               	movwf	(_os+18)& (0+255),b	;volatile
 31610                           
 31611                           ;api.c: 379: break;
 31612  00E6DC  0012               	return	
 31613  00E6DE                     
 31614                           ; BSR set to: 0
 31615                           ;api.c: 382: motor_go_to_steps_position(0);
 31616                           
 31617                           ; BSR set to: 0
 31618  00E6DE  0E00               	movlw	0
 31619  00E6E0  6F9E               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 31620  00E6E2  0E00               	movlw	0
 31621  00E6E4  6F9F               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 31622  00E6E6  0E00               	movlw	0
 31623  00E6E8  6FA0               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 31624  00E6EA  0E00               	movlw	0
 31625  00E6EC  6FA1               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 31626  00E6EE  ECB8  F063         	call	_motor_go_to_steps_position	;wreg free
 31627  00E6F2                     
 31628                           ;api.c: 385: --os.encoder2Count;
 31629  00E6F2  0100               	movlb	0	; () banked
 31630  00E6F4  07D5               	decf	(_os+5)& (0+255),f,b	;volatile
 31631                           
 31632                           ;api.c: 386: break;
 31633  00E6F6  0012               	return	
 31634  00E6F8                     
 31635                           ; BSR set to: 0
 31636                           ;api.c: 389: ++os.encoder2Count;
 31637                           
 31638                           ; BSR set to: 0
 31639  00E6F8  2BD5               	incf	(_os+5)& (0+255),f,b	;volatile
 31640                           
 31641                           ;api.c: 390: break;
 31642  00E6FA  0012               	return	
 31643  00E6FC                     
 31644                           ; BSR set to: 0
 31645                           ;api.c: 393: ++os.button2;
 31646                           
 31647                           ; BSR set to: 0
 31648  00E6FC  2BD6               	incf	(_os+6)& (0+255),f,b	;volatile
 31649                           
 31650                           ;api.c: 394: break;
 31651  00E6FE  0012               	return	
 31652  00E700                     
 31653                           ; BSR set to: 0
 31654                           ;api.c: 397: --os.encoder1Count;
 31655                           
 31656                           ; BSR set to: 0
 31657  00E700  07D3               	decf	(_os+3)& (0+255),f,b	;volatile
 31658                           
 31659                           ;api.c: 398: break;
 31660  00E702  0012               	return	
 31661  00E704                     
 31662                           ; BSR set to: 0
 31663                           ;api.c: 401: ++os.encoder1Count;
 31664                           
 31665                           ; BSR set to: 0
 31666  00E704  2BD3               	incf	(_os+3)& (0+255),f,b	;volatile
 31667                           
 31668                           ;api.c: 402: break;
 31669  00E706  0012               	return	
 31670  00E708                     
 31671                           ; BSR set to: 0
 31672                           ;api.c: 405: ++os.button1;
 31673                           
 31674                           ; BSR set to: 0
 31675  00E708  2BD4               	incf	(_os+4)& (0+255),f,b	;volatile
 31676                           
 31677                           ; BSR set to: 0
 31678                           ;api.c: 407: }
 31679                           
 31680                           ;api.c: 406: break;
 31681  00E70A  0012               	return	
 31682  00E70C                     l2228:
 31683                           
 31684                           ; BSR set to: 0
 31685  00E70C  0100               	movlb	0	; () banked
 31686  00E70E  51BA               	movf	__parse_command_short@cmd& (0+255),w,b
 31687                           
 31688                           ; Switch size 1, requested type "space"
 31689                           ; Number of cases is 15, Range of values is 32 to 53
 31690                           ; switch strategies available:
 31691                           ; Name         Instructions Cycles
 31692                           ; simple_byte           46    24 (average)
 31693                           ;	Chosen strategy is simple_byte
 31694  00E710  0A20               	xorlw	32	; case 32
 31695  00E712  B4D8               	btfsc	status,2,c
 31696  00E714  D77C               	goto	l2229
 31697  00E716  0A01               	xorlw	1	; case 33
 31698  00E718  B4D8               	btfsc	status,2,c
 31699  00E71A  D77D               	goto	l2231
 31700  00E71C  0A03               	xorlw	3	; case 34
 31701  00E71E  B4D8               	btfsc	status,2,c
 31702  00E720  D77D               	goto	l2232
 31703  00E722  0A01               	xorlw	1	; case 35
 31704  00E724  B4D8               	btfsc	status,2,c
 31705  00E726  D77D               	goto	l2233
 31706  00E728  0A07               	xorlw	7	; case 36
 31707  00E72A  B4D8               	btfsc	status,2,c
 31708  00E72C  D77D               	goto	l2234
 31709  00E72E  0A01               	xorlw	1	; case 37
 31710  00E730  B4D8               	btfsc	status,2,c
 31711  00E732  D77D               	goto	l2235
 31712  00E734  0A03               	xorlw	3	; case 38
 31713  00E736  B4D8               	btfsc	status,2,c
 31714  00E738  D77D               	goto	l2236
 31715  00E73A  0A01               	xorlw	1	; case 39
 31716  00E73C  B4D8               	btfsc	status,2,c
 31717  00E73E  D7A4               	goto	l2237
 31718  00E740  0A0F               	xorlw	15	; case 40
 31719  00E742  B4D8               	btfsc	status,2,c
 31720  00E744  D7CC               	goto	l2238
 31721  00E746  0A18               	xorlw	24	; case 48
 31722  00E748  B4D8               	btfsc	status,2,c
 31723  00E74A  D7D3               	goto	l2239
 31724  00E74C  0A01               	xorlw	1	; case 49
 31725  00E74E  B4D8               	btfsc	status,2,c
 31726  00E750  D7D3               	goto	l2240
 31727  00E752  0A03               	xorlw	3	; case 50
 31728  00E754  B4D8               	btfsc	status,2,c
 31729  00E756  D7D2               	goto	l2241
 31730  00E758  0A01               	xorlw	1	; case 51
 31731  00E75A  B4D8               	btfsc	status,2,c
 31732  00E75C  D7D1               	goto	l2242
 31733  00E75E  0A07               	xorlw	7	; case 52
 31734  00E760  B4D8               	btfsc	status,2,c
 31735  00E762  D7D0               	goto	l2243
 31736  00E764  0A01               	xorlw	1	; case 53
 31737  00E766  A4D8               	btfss	status,2,c
 31738  00E768  0012               	return	
 31739  00E76A  D7CE               	goto	l2244
 31740  00E76C                     __end_of__parse_command_short:
 31741                           	opt stack 0
 31742                           tosu	equ	0xFFF
 31743                           tosh	equ	0xFFE
 31744                           tosl	equ	0xFFD
 31745                           pclath	equ	0xFFA
 31746                           tblptru	equ	0xFF8
 31747                           tblptrh	equ	0xFF7
 31748                           tblptrl	equ	0xFF6
 31749                           tablat	equ	0xFF5
 31750                           prodh	equ	0xFF4
 31751                           prodl	equ	0xFF3
 31752                           intcon	equ	0xFF2
 31753                           indf0	equ	0xFEF
 31754                           postinc0	equ	0xFEE
 31755                           fsr0h	equ	0xFEA
 31756                           fsr0l	equ	0xFE9
 31757                           wreg	equ	0xFE8
 31758                           indf1	equ	0xFE7
 31759                           postdec1	equ	0xFE5
 31760                           plusw1	equ	0xFE3
 31761                           fsr1h	equ	0xFE2
 31762                           fsr1l	equ	0xFE1
 31763                           indf2	equ	0xFDF
 31764                           postinc2	equ	0xFDE
 31765                           postdec2	equ	0xFDD
 31766                           plusw2	equ	0xFDB
 31767                           fsr2h	equ	0xFDA
 31768                           fsr2l	equ	0xFD9
 31769                           status	equ	0xFD8
 31770                           
 31771 ;; *************** function _motor_go_to_steps_position *****************
 31772 ;; Defined at:
 31773 ;;		line 443 in file "motor.c"
 31774 ;; Parameters:    Size  Location     Type
 31775 ;;  target_posit    4   62[BANK0 ] unsigned long 
 31776 ;; Auto vars:     Size  Location     Type
 31777 ;;  distance_ccw    4   86[BANK0 ] unsigned long 
 31778 ;;  distance_cw     4   82[BANK0 ] unsigned long 
 31779 ;;  overhead_ccw    4   78[BANK0 ] unsigned long 
 31780 ;;  overhead_cw     4   74[BANK0 ] unsigned long 
 31781 ;; Return value:  Size  Location     Type
 31782 ;;                  1    wreg      void 
 31783 ;; Registers used:
 31784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31785 ;; Tracked objects:
 31786 ;;		On entry : 0/0
 31787 ;;		On exit  : 0/0
 31788 ;;		Unchanged: 0/0
 31789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31790 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31791 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31792 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31793 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31794 ;;Total ram usage:       28 bytes
 31795 ;; Hardware stack levels used:    1
 31796 ;; Hardware stack levels required when called:   12
 31797 ;; This function calls:
 31798 ;;		_motor_schedule_command
 31799 ;; This function is called by:
 31800 ;;		__parse_command_short
 31801 ;;		_motor_divide_jump
 31802 ;;		_motor_divide_jump_to_nearest
 31803 ;;		_encoder_statemachine
 31804 ;;		_motor_go_to_degrees_position
 31805 ;; This function uses a non-reentrant model
 31806 ;;
 31807                           
 31808                           	psect	text116
 31809  00C770                     __ptext116:
 31810                           	opt stack 0
 31811  00C770                     _motor_go_to_steps_position:
 31812                           	opt stack 17
 31813                           
 31814                           ;motor.c: 445: uint32_t distance_cw;;motor.c: 446: uint32_t overhead_cw;;motor.c: 447: u
      +                          int32_t distance_ccw;;motor.c: 448: uint32_t overhead_ccw;;motor.c: 451: if(os.busy)
 31815                           
 31816                           ; BSR set to: 0
 31817                           ;incstack = 0
 31818  00C770  0100               	movlb	0	; () banked
 31819  00C772  51DE               	movf	(_os+14)& (0+255),w,b	;volatile
 31820  00C774  A4D8               	btfss	status,2,c
 31821  00C776  0012               	return	
 31822                           
 31823                           ; BSR set to: 0
 31824                           ;motor.c: 454: };motor.c: 457: if(os.current_position_in_steps == target_position)
 31825                           
 31826                           ; BSR set to: 0
 31827                           
 31828                           ; BSR set to: 0
 31829                           ;motor.c: 452: {;motor.c: 453: return;
 31830  00C778  519E               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 31831  00C77A  19D7               	xorwf	(_os+7)& (0+255),w,b	;volatile
 31832  00C77C  E10A               	bnz	l19282
 31833  00C77E  519F               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 31834  00C780  19D8               	xorwf	(_os+8)& (0+255),w,b	;volatile
 31835  00C782  E107               	bnz	l19282
 31836  00C784  51A0               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 31837  00C786  19D9               	xorwf	(_os+9)& (0+255),w,b	;volatile
 31838  00C788  E104               	bnz	l19282
 31839  00C78A  51A1               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 31840  00C78C  19DA               	xorwf	(_os+10)& (0+255),w,b	;volatile
 31841  00C78E  B4D8               	btfsc	status,2,c
 31842  00C790  0012               	return	
 31843  00C792                     l19282:
 31844                           
 31845                           ; BSR set to: 0
 31846                           ;motor.c: 460: };motor.c: 463: overhead_cw = 0;
 31847  00C792  0E00               	movlw	0
 31848  00C794  6FAA               	movwf	motor_go_to_steps_position@overhead_cw& (0+255),b
 31849  00C796  0E00               	movlw	0
 31850  00C798  6FAB               	movwf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),b
 31851  00C79A  0E00               	movlw	0
 31852  00C79C  6FAC               	movwf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),b
 31853  00C79E  0E00               	movlw	0
 31854  00C7A0  6FAD               	movwf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),b
 31855                           
 31856                           ; BSR set to: 0
 31857                           ;motor.c: 464: distance_cw = target_position - os.current_position_in_steps;
 31858  00C7A2  C0D7  F0A2         	movff	_os+7,??_motor_go_to_steps_position	;volatile
 31859  00C7A6  C0D8  F0A3         	movff	_os+8,??_motor_go_to_steps_position+1	;volatile
 31860  00C7AA  C0D9  F0A4         	movff	_os+9,??_motor_go_to_steps_position+2	;volatile
 31861  00C7AE  C0DA  F0A5         	movff	_os+10,??_motor_go_to_steps_position+3	;volatile
 31862  00C7B2  1FA2               	comf	??_motor_go_to_steps_position& (0+255),f,b
 31863  00C7B4  1FA3               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 31864  00C7B6  1FA4               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 31865  00C7B8  1FA5               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 31866  00C7BA  2BA2               	incf	??_motor_go_to_steps_position& (0+255),f,b
 31867  00C7BC  0E00               	movlw	0
 31868  00C7BE  23A3               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 31869  00C7C0  23A4               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 31870  00C7C2  23A5               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 31871  00C7C4  519E               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 31872  00C7C6  25A2               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 31873  00C7C8  6FB2               	movwf	motor_go_to_steps_position@distance_cw& (0+255),b
 31874  00C7CA  519F               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 31875  00C7CC  21A3               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 31876  00C7CE  6FB3               	movwf	(motor_go_to_steps_position@distance_cw+1)& (0+255),b
 31877  00C7D0  51A0               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 31878  00C7D2  21A4               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 31879  00C7D4  6FB4               	movwf	(motor_go_to_steps_position@distance_cw+2)& (0+255),b
 31880  00C7D6  51A1               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 31881  00C7D8  21A5               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 31882  00C7DA  6FB5               	movwf	(motor_go_to_steps_position@distance_cw+3)& (0+255),b
 31883                           
 31884                           ; BSR set to: 0
 31885                           ;motor.c: 465: if(distance_cw>config.full_circle_in_steps)
 31886  00C7DC  51B2               	movf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 31887  00C7DE  0101               	movlb	1	; () banked
 31888  00C7E0  5D83               	subwf	_config& (0+255),w,b
 31889  00C7E2  0100               	movlb	0	; () banked
 31890  00C7E4  51B3               	movf	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 31891  00C7E6  0101               	movlb	1	; () banked
 31892  00C7E8  5984               	subwfb	(_config+1)& (0+255),w,b
 31893  00C7EA  0100               	movlb	0	; () banked
 31894  00C7EC  51B4               	movf	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 31895  00C7EE  0101               	movlb	1	; () banked
 31896  00C7F0  5985               	subwfb	(_config+2)& (0+255),w,b
 31897  00C7F2  0100               	movlb	0	; () banked
 31898  00C7F4  51B5               	movf	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 31899  00C7F6  0101               	movlb	1	; () banked
 31900  00C7F8  5986               	subwfb	(_config+3)& (0+255),w,b
 31901  00C7FA  B0D8               	btfsc	status,0,c
 31902  00C7FC  D00F               	goto	l2414
 31903                           
 31904                           ; BSR set to: 1
 31905                           ;motor.c: 466: {;motor.c: 467: distance_cw += config.full_circle_in_steps;
 31906  00C7FE  5183               	movf	_config& (0+255),w,b
 31907  00C800  0100               	movlb	0	; () banked
 31908  00C802  27B2               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 31909  00C804  0101               	movlb	1	; () banked
 31910  00C806  5184               	movf	(_config+1)& (0+255),w,b
 31911  00C808  0100               	movlb	0	; () banked
 31912  00C80A  23B3               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 31913  00C80C  0101               	movlb	1	; () banked
 31914  00C80E  5185               	movf	(_config+2)& (0+255),w,b
 31915  00C810  0100               	movlb	0	; () banked
 31916  00C812  23B4               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 31917  00C814  0101               	movlb	1	; () banked
 31918  00C816  5186               	movf	(_config+3)& (0+255),w,b
 31919  00C818  0100               	movlb	0	; () banked
 31920  00C81A  23B5               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 31921  00C81C                     l2414:
 31922                           
 31923                           ;motor.c: 468: };motor.c: 469: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 31924  00C81C  0100               	movlb	0	; () banked
 31925  00C81E  29E2               	incf	(_os+18)& (0+255),w,b	;volatile
 31926  00C820  A4D8               	btfss	status,2,c
 31927  00C822  D024               	goto	l2415
 31928                           
 31929                           ; BSR set to: 0
 31930                           ;motor.c: 470: {;motor.c: 471: distance_cw += config.overshoot_in_steps;
 31931  00C824  0101               	movlb	1	; () banked
 31932  00C826  5188               	movf	(_config+5)& (0+255),w,b
 31933  00C828  0100               	movlb	0	; () banked
 31934  00C82A  27B2               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 31935  00C82C  0101               	movlb	1	; () banked
 31936  00C82E  5189               	movf	(_config+6)& (0+255),w,b
 31937  00C830  0100               	movlb	0	; () banked
 31938  00C832  23B3               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 31939  00C834  0E00               	movlw	0
 31940  00C836  23B4               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 31941  00C838  0E00               	movlw	0
 31942  00C83A  23B5               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 31943                           
 31944                           ;motor.c: 472: overhead_cw += config.overshoot_in_steps;
 31945  00C83C  0101               	movlb	1	; () banked
 31946  00C83E  5188               	movf	(_config+5)& (0+255),w,b
 31947  00C840  0100               	movlb	0	; () banked
 31948  00C842  27AA               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 31949  00C844  0101               	movlb	1	; () banked
 31950  00C846  5189               	movf	(_config+6)& (0+255),w,b
 31951  00C848  0100               	movlb	0	; () banked
 31952  00C84A  23AB               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 31953  00C84C  0E00               	movlw	0
 31954  00C84E  23AC               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 31955  00C850  0E00               	movlw	0
 31956  00C852  23AD               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 31957                           
 31958                           ;motor.c: 473: overhead_cw += config.overshoot_cost_in_steps;
 31959  00C854  0101               	movlb	1	; () banked
 31960  00C856  518A               	movf	(_config+7)& (0+255),w,b
 31961  00C858  0100               	movlb	0	; () banked
 31962  00C85A  27AA               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 31963  00C85C  0101               	movlb	1	; () banked
 31964  00C85E  518B               	movf	(_config+8)& (0+255),w,b
 31965  00C860  0100               	movlb	0	; () banked
 31966  00C862  23AB               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 31967  00C864  0E00               	movlw	0
 31968  00C866  23AC               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 31969  00C868  0E00               	movlw	0
 31970  00C86A  23AD               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 31971  00C86C                     l2415:
 31972                           
 31973                           ; BSR set to: 0
 31974                           ;motor.c: 474: };motor.c: 477: overhead_ccw = 0;
 31975                           
 31976                           ; BSR set to: 0
 31977  00C86C  0E00               	movlw	0
 31978  00C86E  6FAE               	movwf	motor_go_to_steps_position@overhead_ccw& (0+255),b
 31979  00C870  0E00               	movlw	0
 31980  00C872  6FAF               	movwf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),b
 31981  00C874  0E00               	movlw	0
 31982  00C876  6FB0               	movwf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),b
 31983  00C878  0E00               	movlw	0
 31984  00C87A  6FB1               	movwf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),b
 31985                           
 31986                           ; BSR set to: 0
 31987                           ;motor.c: 478: distance_ccw = os.current_position_in_steps - target_position;
 31988  00C87C  C09E  F0A2         	movff	motor_go_to_steps_position@target_position,??_motor_go_to_steps_position
 31989  00C880  C09F  F0A3         	movff	motor_go_to_steps_position@target_position+1,??_motor_go_to_steps_position+1
 31990  00C884  C0A0  F0A4         	movff	motor_go_to_steps_position@target_position+2,??_motor_go_to_steps_position+2
 31991  00C888  C0A1  F0A5         	movff	motor_go_to_steps_position@target_position+3,??_motor_go_to_steps_position+3
 31992  00C88C  1FA2               	comf	??_motor_go_to_steps_position& (0+255),f,b
 31993  00C88E  1FA3               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 31994  00C890  1FA4               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 31995  00C892  1FA5               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 31996  00C894  2BA2               	incf	??_motor_go_to_steps_position& (0+255),f,b
 31997  00C896  0E00               	movlw	0
 31998  00C898  23A3               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 31999  00C89A  23A4               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 32000  00C89C  23A5               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 32001  00C89E  51D7               	movf	(_os+7)& (0+255),w,b	;volatile
 32002  00C8A0  25A2               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 32003  00C8A2  6FB6               	movwf	motor_go_to_steps_position@distance_ccw& (0+255),b
 32004  00C8A4  51D8               	movf	(_os+8)& (0+255),w,b	;volatile
 32005  00C8A6  21A3               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 32006  00C8A8  6FB7               	movwf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),b
 32007  00C8AA  51D9               	movf	(_os+9)& (0+255),w,b	;volatile
 32008  00C8AC  21A4               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 32009  00C8AE  6FB8               	movwf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),b
 32010  00C8B0  51DA               	movf	(_os+10)& (0+255),w,b	;volatile
 32011  00C8B2  21A5               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 32012  00C8B4  6FB9               	movwf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),b
 32013                           
 32014                           ; BSR set to: 0
 32015                           ;motor.c: 479: if(distance_ccw>config.full_circle_in_steps)
 32016  00C8B6  51B6               	movf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 32017  00C8B8  0101               	movlb	1	; () banked
 32018  00C8BA  5D83               	subwf	_config& (0+255),w,b
 32019  00C8BC  0100               	movlb	0	; () banked
 32020  00C8BE  51B7               	movf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 32021  00C8C0  0101               	movlb	1	; () banked
 32022  00C8C2  5984               	subwfb	(_config+1)& (0+255),w,b
 32023  00C8C4  0100               	movlb	0	; () banked
 32024  00C8C6  51B8               	movf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 32025  00C8C8  0101               	movlb	1	; () banked
 32026  00C8CA  5985               	subwfb	(_config+2)& (0+255),w,b
 32027  00C8CC  0100               	movlb	0	; () banked
 32028  00C8CE  51B9               	movf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 32029  00C8D0  0101               	movlb	1	; () banked
 32030  00C8D2  5986               	subwfb	(_config+3)& (0+255),w,b
 32031  00C8D4  B0D8               	btfsc	status,0,c
 32032  00C8D6  D00F               	goto	l2416
 32033                           
 32034                           ; BSR set to: 1
 32035                           ;motor.c: 480: {;motor.c: 481: distance_ccw += config.full_circle_in_steps;
 32036  00C8D8  5183               	movf	_config& (0+255),w,b
 32037  00C8DA  0100               	movlb	0	; () banked
 32038  00C8DC  27B6               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 32039  00C8DE  0101               	movlb	1	; () banked
 32040  00C8E0  5184               	movf	(_config+1)& (0+255),w,b
 32041  00C8E2  0100               	movlb	0	; () banked
 32042  00C8E4  23B7               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 32043  00C8E6  0101               	movlb	1	; () banked
 32044  00C8E8  5185               	movf	(_config+2)& (0+255),w,b
 32045  00C8EA  0100               	movlb	0	; () banked
 32046  00C8EC  23B8               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 32047  00C8EE  0101               	movlb	1	; () banked
 32048  00C8F0  5186               	movf	(_config+3)& (0+255),w,b
 32049  00C8F2  0100               	movlb	0	; () banked
 32050  00C8F4  23B9               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 32051  00C8F6                     l2416:
 32052                           
 32053                           ;motor.c: 482: };motor.c: 483: if(os.approach_direction==MOTOR_DIRECTION_CW)
 32054  00C8F6  0100               	movlb	0	; () banked
 32055  00C8F8  05E2               	decf	(_os+18)& (0+255),w,b	;volatile
 32056  00C8FA  A4D8               	btfss	status,2,c
 32057  00C8FC  D024               	goto	l2417
 32058                           
 32059                           ; BSR set to: 0
 32060                           ;motor.c: 484: {;motor.c: 485: distance_ccw += config.overshoot_in_steps;
 32061  00C8FE  0101               	movlb	1	; () banked
 32062  00C900  5188               	movf	(_config+5)& (0+255),w,b
 32063  00C902  0100               	movlb	0	; () banked
 32064  00C904  27B6               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 32065  00C906  0101               	movlb	1	; () banked
 32066  00C908  5189               	movf	(_config+6)& (0+255),w,b
 32067  00C90A  0100               	movlb	0	; () banked
 32068  00C90C  23B7               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 32069  00C90E  0E00               	movlw	0
 32070  00C910  23B8               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 32071  00C912  0E00               	movlw	0
 32072  00C914  23B9               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 32073                           
 32074                           ;motor.c: 486: overhead_ccw += config.overshoot_in_steps;
 32075  00C916  0101               	movlb	1	; () banked
 32076  00C918  5188               	movf	(_config+5)& (0+255),w,b
 32077  00C91A  0100               	movlb	0	; () banked
 32078  00C91C  27AE               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 32079  00C91E  0101               	movlb	1	; () banked
 32080  00C920  5189               	movf	(_config+6)& (0+255),w,b
 32081  00C922  0100               	movlb	0	; () banked
 32082  00C924  23AF               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 32083  00C926  0E00               	movlw	0
 32084  00C928  23B0               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 32085  00C92A  0E00               	movlw	0
 32086  00C92C  23B1               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 32087                           
 32088                           ;motor.c: 487: overhead_ccw += config.overshoot_cost_in_steps;
 32089  00C92E  0101               	movlb	1	; () banked
 32090  00C930  518A               	movf	(_config+7)& (0+255),w,b
 32091  00C932  0100               	movlb	0	; () banked
 32092  00C934  27AE               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 32093  00C936  0101               	movlb	1	; () banked
 32094  00C938  518B               	movf	(_config+8)& (0+255),w,b
 32095  00C93A  0100               	movlb	0	; () banked
 32096  00C93C  23AF               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 32097  00C93E  0E00               	movlw	0
 32098  00C940  23B0               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 32099  00C942  0E00               	movlw	0
 32100  00C944  23B1               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 32101  00C946                     l2417:
 32102                           
 32103                           ; BSR set to: 0
 32104                           ;motor.c: 488: };motor.c: 491: if((distance_cw+overhead_cw) < (distance_ccw+overhead_ccw
      +                          ))
 32105                           
 32106                           ; BSR set to: 0
 32107  00C946  51AE               	movf	motor_go_to_steps_position@overhead_ccw& (0+255),w,b
 32108  00C948  25B6               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 32109  00C94A  6FA2               	movwf	??_motor_go_to_steps_position& (0+255),b
 32110  00C94C  51AF               	movf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),w,b
 32111  00C94E  21B7               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 32112  00C950  6FA3               	movwf	(??_motor_go_to_steps_position+1)& (0+255),b
 32113  00C952  51B0               	movf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),w,b
 32114  00C954  21B8               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 32115  00C956  6FA4               	movwf	(??_motor_go_to_steps_position+2)& (0+255),b
 32116  00C958  51B1               	movf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),w,b
 32117  00C95A  21B9               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 32118  00C95C  6FA5               	movwf	(??_motor_go_to_steps_position+3)& (0+255),b
 32119  00C95E  51AA               	movf	motor_go_to_steps_position@overhead_cw& (0+255),w,b
 32120  00C960  25B2               	addwf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 32121  00C962  6FA6               	movwf	(??_motor_go_to_steps_position+4)& (0+255),b
 32122  00C964  51AB               	movf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),w,b
 32123  00C966  21B3               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 32124  00C968  6FA7               	movwf	(??_motor_go_to_steps_position+5)& (0+255),b
 32125  00C96A  51AC               	movf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),w,b
 32126  00C96C  21B4               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 32127  00C96E  6FA8               	movwf	(??_motor_go_to_steps_position+6)& (0+255),b
 32128  00C970  51AD               	movf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),w,b
 32129  00C972  21B5               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 32130  00C974  6FA9               	movwf	(??_motor_go_to_steps_position+7)& (0+255),b
 32131  00C976  51A2               	movf	??_motor_go_to_steps_position& (0+255),w,b
 32132  00C978  5DA6               	subwf	(??_motor_go_to_steps_position+4)& (0+255),w,b
 32133  00C97A  51A3               	movf	(??_motor_go_to_steps_position+1)& (0+255),w,b
 32134  00C97C  59A7               	subwfb	(??_motor_go_to_steps_position+5)& (0+255),w,b
 32135  00C97E  51A4               	movf	(??_motor_go_to_steps_position+2)& (0+255),w,b
 32136  00C980  59A8               	subwfb	(??_motor_go_to_steps_position+6)& (0+255),w,b
 32137  00C982  51A5               	movf	(??_motor_go_to_steps_position+3)& (0+255),w,b
 32138  00C984  59A9               	subwfb	(??_motor_go_to_steps_position+7)& (0+255),w,b
 32139  00C986  B0D8               	btfsc	status,0,c
 32140  00C988  D032               	goto	l2418
 32141                           
 32142                           ; BSR set to: 0
 32143                           ;motor.c: 492: {;motor.c: 493: if(os.approach_direction==MOTOR_DIRECTION_CW)
 32144  00C98A  05E2               	decf	(_os+18)& (0+255),w,b	;volatile
 32145  00C98C  A4D8               	btfss	status,2,c
 32146  00C98E  D010               	goto	l2419
 32147                           
 32148                           ; BSR set to: 0
 32149                           ;motor.c: 494: {;motor.c: 496: motor_schedule_command(MOTOR_DIRECTION_CW, distance_cw, 0
      +                          );
 32150  00C990  C0B2  F097         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 32151  00C994  C0B3  F098         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 32152  00C998  C0B4  F099         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 32153  00C99C  C0B5  F09A         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 32154  00C9A0  0E00               	movlw	0
 32155  00C9A2  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 32156  00C9A4  0E00               	movlw	0
 32157  00C9A6  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 32158  00C9A8  0E01               	movlw	1
 32159  00C9AA  ECFC  F088         	call	_motor_schedule_command
 32160                           
 32161                           ;motor.c: 497: }
 32162  00C9AE  0012               	return	
 32163  00C9B0                     l2419:
 32164                           
 32165                           ;motor.c: 498: else;motor.c: 499: {;motor.c: 501: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, distance_cw, 0);
 32166  00C9B0  C0B2  F097         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 32167  00C9B4  C0B3  F098         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 32168  00C9B8  C0B4  F099         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 32169  00C9BC  C0B5  F09A         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 32170  00C9C0  0E00               	movlw	0
 32171  00C9C2  0100               	movlb	0	; () banked
 32172  00C9C4  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 32173  00C9C6  0E00               	movlw	0
 32174  00C9C8  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 32175  00C9CA  0E01               	movlw	1
 32176  00C9CC  ECFC  F088         	call	_motor_schedule_command
 32177                           
 32178                           ;motor.c: 502: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0)
      +                          ;
 32179  00C9D0  C188  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 32180  00C9D4  C189  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 32181  00C9D8  0100               	movlb	0	; () banked
 32182  00C9DA  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 32183  00C9DC  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 32184  00C9DE  0E00               	movlw	0
 32185  00C9E0  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 32186  00C9E2  0E00               	movlw	0
 32187  00C9E4  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 32188  00C9E6  0EFF               	movlw	255
 32189  00C9E8  ECFC  F088         	call	_motor_schedule_command
 32190                           
 32191                           ;motor.c: 503: };motor.c: 504: }
 32192  00C9EC  0012               	return	
 32193  00C9EE                     l2418:
 32194                           
 32195                           ;motor.c: 505: else;motor.c: 506: {;motor.c: 507: if(os.approach_direction==MOTOR_DIRECT
      +                          ION_CCW)
 32196  00C9EE  0100               	movlb	0	; () banked
 32197  00C9F0  29E2               	incf	(_os+18)& (0+255),w,b	;volatile
 32198  00C9F2  A4D8               	btfss	status,2,c
 32199  00C9F4  D010               	goto	l2422
 32200                           
 32201                           ; BSR set to: 0
 32202                           ;motor.c: 508: {;motor.c: 510: motor_schedule_command(MOTOR_DIRECTION_CCW, distance_ccw,
      +                           0);
 32203  00C9F6  C0B6  F097         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 32204  00C9FA  C0B7  F098         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 32205  00C9FE  C0B8  F099         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 32206  00CA02  C0B9  F09A         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 32207  00CA06  0E00               	movlw	0
 32208  00CA08  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 32209  00CA0A  0E00               	movlw	0
 32210  00CA0C  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 32211  00CA0E  0EFF               	movlw	255
 32212  00CA10  ECFC  F088         	call	_motor_schedule_command
 32213                           
 32214                           ;motor.c: 511: }
 32215  00CA14  0012               	return	
 32216  00CA16                     l2422:
 32217                           
 32218                           ;motor.c: 512: else;motor.c: 513: {;motor.c: 515: motor_schedule_command(MOTOR_DIRECTION
      +                          _CCW, distance_ccw, 0);
 32219  00CA16  C0B6  F097         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 32220  00CA1A  C0B7  F098         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 32221  00CA1E  C0B8  F099         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 32222  00CA22  C0B9  F09A         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 32223  00CA26  0E00               	movlw	0
 32224  00CA28  0100               	movlb	0	; () banked
 32225  00CA2A  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 32226  00CA2C  0E00               	movlw	0
 32227  00CA2E  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 32228  00CA30  0EFF               	movlw	255
 32229  00CA32  ECFC  F088         	call	_motor_schedule_command
 32230                           
 32231                           ;motor.c: 516: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 32232  00CA36  C188  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 32233  00CA3A  C189  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 32234  00CA3E  0100               	movlb	0	; () banked
 32235  00CA40  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 32236  00CA42  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 32237  00CA44  0E00               	movlw	0
 32238  00CA46  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 32239  00CA48  0E00               	movlw	0
 32240  00CA4A  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 32241  00CA4C  0E01               	movlw	1
 32242  00CA4E  ECFC  F088         	call	_motor_schedule_command
 32243  00CA52  0012               	return	
 32244  00CA54                     __end_of_motor_go_to_steps_position:
 32245                           	opt stack 0
 32246                           tosu	equ	0xFFF
 32247                           tosh	equ	0xFFE
 32248                           tosl	equ	0xFFD
 32249                           pclath	equ	0xFFA
 32250                           tblptru	equ	0xFF8
 32251                           tblptrh	equ	0xFF7
 32252                           tblptrl	equ	0xFF6
 32253                           tablat	equ	0xFF5
 32254                           prodh	equ	0xFF4
 32255                           prodl	equ	0xFF3
 32256                           intcon	equ	0xFF2
 32257                           indf0	equ	0xFEF
 32258                           postinc0	equ	0xFEE
 32259                           fsr0h	equ	0xFEA
 32260                           fsr0l	equ	0xFE9
 32261                           wreg	equ	0xFE8
 32262                           indf1	equ	0xFE7
 32263                           postdec1	equ	0xFE5
 32264                           plusw1	equ	0xFE3
 32265                           fsr1h	equ	0xFE2
 32266                           fsr1l	equ	0xFE1
 32267                           indf2	equ	0xFDF
 32268                           postinc2	equ	0xFDE
 32269                           postdec2	equ	0xFDD
 32270                           plusw2	equ	0xFDB
 32271                           fsr2h	equ	0xFDA
 32272                           fsr2l	equ	0xFD9
 32273                           status	equ	0xFD8
 32274                           
 32275 ;; *************** function __parse_command_long *****************
 32276 ;; Defined at:
 32277 ;;		line 410 in file "api.c"
 32278 ;; Parameters:    Size  Location     Type
 32279 ;;  data            2   74[BANK0 ] PTR unsigned char 
 32280 ;;		 -> ReceivedDataBuffer(64), 
 32281 ;;  out_buffer      2   76[BANK0 ] PTR unsigned char 
 32282 ;;		 -> ToSendDataBuffer(64), 
 32283 ;;  out_idx_ptr     2   78[BANK0 ] PTR unsigned char 
 32284 ;;		 -> api_parse@out_idx(1), 
 32285 ;; Auto vars:     Size  Location     Type
 32286 ;;  length          1   80[BANK0 ] unsigned char 
 32287 ;; Return value:  Size  Location     Type
 32288 ;;                  1    wreg      unsigned char 
 32289 ;; Registers used:
 32290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32291 ;; Tracked objects:
 32292 ;;		On entry : 0/0
 32293 ;;		On exit  : 0/0
 32294 ;;		Unchanged: 0/0
 32295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32296 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32299 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32300 ;;Total ram usage:        7 bytes
 32301 ;; Hardware stack levels used:    1
 32302 ;; Hardware stack levels required when called:   13
 32303 ;; This function calls:
 32304 ;;		__parse_jump_steps
 32305 ;; This function is called by:
 32306 ;;		_api_parse
 32307 ;; This function uses a non-reentrant model
 32308 ;;
 32309                           
 32310                           	psect	text117
 32311  0126BE                     __ptext117:
 32312                           	opt stack 0
 32313  0126BE                     __parse_command_long:
 32314                           	opt stack 15
 32315                           
 32316                           ;api.c: 412: uint8_t length = 65;
 32317                           
 32318                           ;incstack = 0
 32319  0126BE  0E41               	movlw	65
 32320  0126C0  0100               	movlb	0	; () banked
 32321  0126C2  6FB0               	movwf	__parse_command_long@length& (0+255),b
 32322                           
 32323                           ;api.c: 414: switch(data[0])
 32324  0126C4  D011               	goto	l2248
 32325  0126C6                     
 32326                           ; BSR set to: 0
 32327                           ;api.c: 421: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 32328                           
 32329                           ; BSR set to: 0
 32330  0126C6  C0AA  F09E         	movff	__parse_command_long@data,__parse_jump_steps@data
 32331  0126CA  C0AB  F09F         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 32332  0126CE  C0AC  F0A0         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 32333  0126D2  C0AD  F0A1         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 32334  0126D6  C0AE  F0A2         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 32335  0126DA  C0AF  F0A3         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 32336  0126DE  EC5D  F074         	call	__parse_jump_steps	;wreg free
 32337  0126E2  0100               	movlb	0	; () banked
 32338  0126E4  6FB0               	movwf	__parse_command_long@length& (0+255),b
 32339                           
 32340                           ; BSR set to: 0
 32341                           ;api.c: 423: }
 32342                           
 32343                           ;api.c: 422: break;
 32344  0126E6  D008               	goto	l2250
 32345  0126E8                     l2248:
 32346                           
 32347                           ; BSR set to: 0
 32348                           
 32349                           ; BSR set to: 0
 32350  0126E8  C0AA  FFD9         	movff	__parse_command_long@data,fsr2l
 32351  0126EC  C0AB  FFDA         	movff	__parse_command_long@data+1,fsr2h
 32352  0126F0  50DF               	movf	indf2,w,c
 32353                           
 32354                           ; Switch size 1, requested type "space"
 32355                           ; Number of cases is 1, Range of values is 144 to 144
 32356                           ; switch strategies available:
 32357                           ; Name         Instructions Cycles
 32358                           ; simple_byte            4     3 (average)
 32359                           ;	Chosen strategy is simple_byte
 32360  0126F2  0A90               	xorlw	144	; case 144
 32361  0126F4  B4D8               	btfsc	status,2,c
 32362  0126F6  D7E7               	goto	l2249
 32363  0126F8                     l2250:
 32364                           
 32365                           ; BSR set to: 0
 32366                           ;api.c: 427: return length;
 32367                           
 32368                           ; BSR set to: 0
 32369  0126F8  51B0               	movf	__parse_command_long@length& (0+255),w,b
 32370  0126FA  0012               	return	
 32371  0126FC                     __end_of__parse_command_long:
 32372                           	opt stack 0
 32373                           tosu	equ	0xFFF
 32374                           tosh	equ	0xFFE
 32375                           tosl	equ	0xFFD
 32376                           pclath	equ	0xFFA
 32377                           tblptru	equ	0xFF8
 32378                           tblptrh	equ	0xFF7
 32379                           tblptrl	equ	0xFF6
 32380                           tablat	equ	0xFF5
 32381                           prodh	equ	0xFF4
 32382                           prodl	equ	0xFF3
 32383                           intcon	equ	0xFF2
 32384                           indf0	equ	0xFEF
 32385                           postinc0	equ	0xFEE
 32386                           fsr0h	equ	0xFEA
 32387                           fsr0l	equ	0xFE9
 32388                           wreg	equ	0xFE8
 32389                           indf1	equ	0xFE7
 32390                           postdec1	equ	0xFE5
 32391                           plusw1	equ	0xFE3
 32392                           fsr1h	equ	0xFE2
 32393                           fsr1l	equ	0xFE1
 32394                           indf2	equ	0xFDF
 32395                           postinc2	equ	0xFDE
 32396                           postdec2	equ	0xFDD
 32397                           plusw2	equ	0xFDB
 32398                           fsr2h	equ	0xFDA
 32399                           fsr2l	equ	0xFD9
 32400                           status	equ	0xFD8
 32401                           
 32402 ;; *************** function __parse_jump_steps *****************
 32403 ;; Defined at:
 32404 ;;		line 453 in file "api.c"
 32405 ;; Parameters:    Size  Location     Type
 32406 ;;  data            2   62[BANK0 ] PTR unsigned char 
 32407 ;;		 -> ReceivedDataBuffer(64), 
 32408 ;;  out_buffer      2   64[BANK0 ] PTR unsigned char 
 32409 ;;		 -> ToSendDataBuffer(64), 
 32410 ;;  out_idx_ptr     2   66[BANK0 ] PTR unsigned char 
 32411 ;;		 -> api_parse@out_idx(1), 
 32412 ;; Auto vars:     Size  Location     Type
 32413 ;;  number_of_st    4   70[BANK0 ] long 
 32414 ;;  return_value    1   69[BANK0 ] unsigned char 
 32415 ;; Return value:  Size  Location     Type
 32416 ;;                  1    wreg      unsigned char 
 32417 ;; Registers used:
 32418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32419 ;; Tracked objects:
 32420 ;;		On entry : 0/0
 32421 ;;		On exit  : 0/0
 32422 ;;		Unchanged: 0/0
 32423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32424 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32425 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32426 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32427 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32428 ;;Total ram usage:       12 bytes
 32429 ;; Hardware stack levels used:    1
 32430 ;; Hardware stack levels required when called:   12
 32431 ;; This function calls:
 32432 ;;		_motor_schedule_command
 32433 ;; This function is called by:
 32434 ;;		__parse_command_long
 32435 ;; This function uses a non-reentrant model
 32436 ;;
 32437                           
 32438                           	psect	text118
 32439  00E8BA                     __ptext118:
 32440                           	opt stack 0
 32441  00E8BA                     __parse_jump_steps:
 32442                           	opt stack 15
 32443                           
 32444                           ;api.c: 457: uint8_t return_value;;api.c: 458: int32_t number_of_steps;;api.c: 460: numb
      +                          er_of_steps = data[1];
 32445                           
 32446                           ; BSR set to: 0
 32447                           ;incstack = 0
 32448  00E8BA  0100               	movlb	0	; () banked
 32449  00E8BC  EE20 F001          	lfsr	2,1
 32450  00E8C0  519E               	movf	__parse_jump_steps@data& (0+255),w,b
 32451  00E8C2  26D9               	addwf	fsr2l,f,c
 32452  00E8C4  519F               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 32453  00E8C6  22DA               	addwfc	fsr2h,f,c
 32454  00E8C8  50DF               	movf	indf2,w,c
 32455  00E8CA  6FA4               	movwf	??__parse_jump_steps& (0+255),b
 32456  00E8CC  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 32457  00E8CE  6FA6               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 32458  00E8D0  6BA7               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 32459  00E8D2  6BA8               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 32460  00E8D4  6BA9               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 32461                           
 32462                           ; BSR set to: 0
 32463                           ;api.c: 461: number_of_steps <<= 8;
 32464  00E8D6  C0A8  F0A9         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 32465  00E8DA  C0A7  F0A8         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 32466  00E8DE  C0A6  F0A7         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 32467  00E8E2  6BA6               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 32468                           
 32469                           ; BSR set to: 0
 32470                           ;api.c: 462: number_of_steps |= data[2];
 32471  00E8E4  EE20 F002          	lfsr	2,2
 32472  00E8E8  519E               	movf	__parse_jump_steps@data& (0+255),w,b
 32473  00E8EA  26D9               	addwf	fsr2l,f,c
 32474  00E8EC  519F               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 32475  00E8EE  22DA               	addwfc	fsr2h,f,c
 32476  00E8F0  50DF               	movf	indf2,w,c
 32477  00E8F2  6FA4               	movwf	??__parse_jump_steps& (0+255),b
 32478  00E8F4  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 32479  00E8F6  13A6               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 32480                           
 32481                           ;api.c: 463: number_of_steps <<= 8;
 32482  00E8F8  C0A8  F0A9         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 32483  00E8FC  C0A7  F0A8         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 32484  00E900  C0A6  F0A7         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 32485  00E904  6BA6               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 32486                           
 32487                           ; BSR set to: 0
 32488                           ;api.c: 464: number_of_steps |= data[3];
 32489  00E906  EE20 F003          	lfsr	2,3
 32490  00E90A  519E               	movf	__parse_jump_steps@data& (0+255),w,b
 32491  00E90C  26D9               	addwf	fsr2l,f,c
 32492  00E90E  519F               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 32493  00E910  22DA               	addwfc	fsr2h,f,c
 32494  00E912  50DF               	movf	indf2,w,c
 32495  00E914  6FA4               	movwf	??__parse_jump_steps& (0+255),b
 32496  00E916  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 32497  00E918  13A6               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 32498                           
 32499                           ; BSR set to: 0
 32500                           ;api.c: 465: number_of_steps <<= 8;
 32501  00E91A  C0A8  F0A9         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 32502  00E91E  C0A7  F0A8         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 32503  00E922  C0A6  F0A7         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 32504  00E926  6BA6               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 32505                           
 32506                           ;api.c: 466: number_of_steps |= data[4];
 32507  00E928  EE20 F004          	lfsr	2,4
 32508  00E92C  519E               	movf	__parse_jump_steps@data& (0+255),w,b
 32509  00E92E  26D9               	addwf	fsr2l,f,c
 32510  00E930  519F               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 32511  00E932  22DA               	addwfc	fsr2h,f,c
 32512  00E934  50DF               	movf	indf2,w,c
 32513  00E936  6FA4               	movwf	??__parse_jump_steps& (0+255),b
 32514  00E938  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 32515  00E93A  13A6               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 32516                           
 32517                           ; BSR set to: 0
 32518                           ;api.c: 468: if(number_of_steps>0)
 32519  00E93C  BFA9               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 32520  00E93E  D017               	goto	l2254
 32521  00E940  51A9               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 32522  00E942  11A8               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 32523  00E944  11A7               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 32524  00E946  E103               	bnz	u18810
 32525  00E948  05A6               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 32526  00E94A  A0D8               	btfss	status,0,c
 32527  00E94C  D010               	goto	l2254
 32528  00E94E                     u18810:
 32529                           
 32530                           ; BSR set to: 0
 32531                           ;api.c: 469: {;api.c: 470: return_value = motor_schedule_command(MOTOR_DIRECTION_CW, (ui
      +                          nt32_t) number_of_steps, 0);
 32532  00E94E  C0A6  F097         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 32533  00E952  C0A7  F098         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 32534  00E956  C0A8  F099         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 32535  00E95A  C0A9  F09A         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 32536  00E95E  0E00               	movlw	0
 32537  00E960  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 32538  00E962  0E00               	movlw	0
 32539  00E964  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 32540  00E966  0E01               	movlw	1
 32541  00E968  ECFC  F088         	call	_motor_schedule_command
 32542  00E96C  D017               	goto	L59
 32543  00E96E                     l2254:
 32544                           
 32545                           ; BSR set to: 0
 32546                           ;api.c: 472: else;api.c: 473: {;api.c: 474: number_of_steps = -number_of_steps;
 32547                           
 32548                           ; BSR set to: 0
 32549  00E96E  1FA9               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 32550  00E970  1FA8               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 32551  00E972  1FA7               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 32552  00E974  6DA6               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 32553  00E976  0E00               	movlw	0
 32554  00E978  23A7               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 32555  00E97A  23A8               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 32556  00E97C  23A9               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 32557                           
 32558                           ; BSR set to: 0
 32559                           ;api.c: 475: return_value = motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t) numbe
      +                          r_of_steps, 0);
 32560  00E97E  C0A6  F097         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 32561  00E982  C0A7  F098         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 32562  00E986  C0A8  F099         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 32563  00E98A  C0A9  F09A         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 32564  00E98E  0E00               	movlw	0
 32565  00E990  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 32566  00E992  0E00               	movlw	0
 32567  00E994  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 32568  00E996  0EFF               	movlw	255
 32569  00E998  ECFC  F088         	call	_motor_schedule_command
 32570  00E99C                     L59:
 32571  00E99C  0100               	movlb	0	; () banked
 32572  00E99E  6FA5               	movwf	__parse_jump_steps@return_value& (0+255),b
 32573                           
 32574                           ; BSR set to: 0
 32575                           ;api.c: 476: };api.c: 479: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 32576                           
 32577                           ; BSR set to: 0
 32578  00E9A0  C0A2  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 32579  00E9A4  C0A3  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 32580  00E9A8  50DF               	movf	indf2,w,c
 32581  00E9AA  B4D8               	btfsc	status,2,c
 32582  00E9AC  D02B               	goto	l2256
 32583                           
 32584                           ; BSR set to: 0
 32585  00E9AE  C0A2  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 32586  00E9B2  C0A3  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 32587  00E9B6  0E3F               	movlw	63
 32588  00E9B8  60DF               	cpfslt	indf2,c
 32589  00E9BA  D024               	goto	l2256
 32590                           
 32591                           ; BSR set to: 0
 32592                           ;api.c: 480: {;api.c: 481: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 32593  00E9BC  C0A2  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 32594  00E9C0  C0A3  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 32595  00E9C4  CFDF F0A4          	movff	indf2,??__parse_jump_steps
 32596  00E9C8  0E01               	movlw	1
 32597  00E9CA  26DF               	addwf	indf2,f,c
 32598  00E9CC  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 32599  00E9CE  0D01               	mullw	1
 32600  00E9D0  50F3               	movf	prodl,w,c
 32601  00E9D2  25A0               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 32602  00E9D4  6ED9               	movwf	fsr2l,c
 32603  00E9D6  50F4               	movf	prodh,w,c
 32604  00E9D8  21A1               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 32605  00E9DA  6EDA               	movwf	fsr2h,c
 32606  00E9DC  0E90               	movlw	144
 32607  00E9DE  6EDF               	movwf	indf2,c
 32608                           
 32609                           ;api.c: 482: out_buffer[(*out_idx_ptr)++] = return_value;
 32610  00E9E0  C0A2  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 32611  00E9E4  C0A3  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 32612  00E9E8  CFDF F0A4          	movff	indf2,??__parse_jump_steps
 32613  00E9EC  0E01               	movlw	1
 32614  00E9EE  26DF               	addwf	indf2,f,c
 32615  00E9F0  51A4               	movf	??__parse_jump_steps& (0+255),w,b
 32616  00E9F2  0D01               	mullw	1
 32617  00E9F4  50F3               	movf	prodl,w,c
 32618  00E9F6  25A0               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 32619  00E9F8  6ED9               	movwf	fsr2l,c
 32620  00E9FA  50F4               	movf	prodh,w,c
 32621  00E9FC  21A1               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 32622  00E9FE  6EDA               	movwf	fsr2h,c
 32623  00EA00  C0A5  FFDF         	movff	__parse_jump_steps@return_value,indf2
 32624  00EA04                     l2256:
 32625                           
 32626                           ; BSR set to: 0
 32627                           ;api.c: 483: };api.c: 485: return 5;
 32628                           
 32629                           ; BSR set to: 0
 32630  00EA04  0E05               	movlw	5
 32631  00EA06  0012               	return	
 32632  00EA08                     __end_of__parse_jump_steps:
 32633                           	opt stack 0
 32634                           tosu	equ	0xFFF
 32635                           tosh	equ	0xFFE
 32636                           tosl	equ	0xFFD
 32637                           pclath	equ	0xFFA
 32638                           tblptru	equ	0xFF8
 32639                           tblptrh	equ	0xFF7
 32640                           tblptrl	equ	0xFF6
 32641                           tablat	equ	0xFF5
 32642                           prodh	equ	0xFF4
 32643                           prodl	equ	0xFF3
 32644                           intcon	equ	0xFF2
 32645                           indf0	equ	0xFEF
 32646                           postinc0	equ	0xFEE
 32647                           fsr0h	equ	0xFEA
 32648                           fsr0l	equ	0xFE9
 32649                           wreg	equ	0xFE8
 32650                           indf1	equ	0xFE7
 32651                           postdec1	equ	0xFE5
 32652                           plusw1	equ	0xFE3
 32653                           fsr1h	equ	0xFE2
 32654                           fsr1l	equ	0xFE1
 32655                           indf2	equ	0xFDF
 32656                           postinc2	equ	0xFDE
 32657                           postdec2	equ	0xFDD
 32658                           plusw2	equ	0xFDB
 32659                           fsr2h	equ	0xFDA
 32660                           fsr2l	equ	0xFD9
 32661                           status	equ	0xFD8
 32662                           
 32663 ;; *************** function _motor_schedule_command *****************
 32664 ;; Defined at:
 32665 ;;		line 99 in file "motor.c"
 32666 ;; Parameters:    Size  Location     Type
 32667 ;;  direction       1    wreg     enum E6622
 32668 ;;  distance_in_    4   55[BANK0 ] unsigned long 
 32669 ;;  speed           2   59[BANK0 ] unsigned int 
 32670 ;; Auto vars:     Size  Location     Type
 32671 ;;  direction       1   61[BANK0 ] enum E6622
 32672 ;; Return value:  Size  Location     Type
 32673 ;;                  1    wreg      unsigned char 
 32674 ;; Registers used:
 32675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32676 ;; Tracked objects:
 32677 ;;		On entry : 0/0
 32678 ;;		On exit  : 0/0
 32679 ;;		Unchanged: 0/0
 32680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32681 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32684 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32685 ;;Total ram usage:        7 bytes
 32686 ;; Hardware stack levels used:    1
 32687 ;; Hardware stack levels required when called:   11
 32688 ;; This function calls:
 32689 ;;		__motor_run
 32690 ;;		_motor_items_in_cue
 32691 ;; This function is called by:
 32692 ;;		__parse_command_short
 32693 ;;		__parse_jump_steps
 32694 ;;		_motor_go_to_steps_position
 32695 ;;		_motor_arc_move
 32696 ;;		_encoder_statemachine
 32697 ;; This function uses a non-reentrant model
 32698 ;;
 32699                           
 32700                           	psect	text119
 32701  0111F8                     __ptext119:
 32702                           	opt stack 0
 32703  0111F8                     _motor_schedule_command:
 32704                           	opt stack 18
 32705                           
 32706                           ; BSR set to: 0
 32707                           ;incstack = 0
 32708                           ;motor_schedule_command@direction stored from wreg
 32709  0111F8  0100               	movlb	0	; () banked
 32710  0111FA  6F9D               	movwf	motor_schedule_command@direction& (0+255),b
 32711                           
 32712                           ;motor.c: 101: if((motor_items_in_cue()==0) && (os.busy==0))
 32713  0111FC  EC80  F096         	call	_motor_items_in_cue	;wreg free
 32714  011200  0900               	iorlw	0
 32715  011202  A4D8               	btfss	status,2,c
 32716  011204  D015               	goto	l2348
 32717  011206  0100               	movlb	0	; () banked
 32718  011208  51DE               	movf	(_os+14)& (0+255),w,b	;volatile
 32719  01120A  A4D8               	btfss	status,2,c
 32720  01120C  D011               	goto	l2348
 32721                           
 32722                           ; BSR set to: 0
 32723                           ;motor.c: 102: {;motor.c: 105: _motor_run(direction, distance_in_steps, speed);
 32724  01120E  C097  F060         	movff	motor_schedule_command@distance_in_steps,__motor_run@distance_in_steps
 32725  011212  C098  F061         	movff	motor_schedule_command@distance_in_steps+1,__motor_run@distance_in_steps+1
 32726  011216  C099  F062         	movff	motor_schedule_command@distance_in_steps+2,__motor_run@distance_in_steps+2
 32727  01121A  C09A  F063         	movff	motor_schedule_command@distance_in_steps+3,__motor_run@distance_in_steps+3
 32728  01121E  C09B  F064         	movff	motor_schedule_command@speed,__motor_run@speed
 32729  011222  C09C  F065         	movff	motor_schedule_command@speed+1,__motor_run@speed+1
 32730  011226  519D               	movf	motor_schedule_command@direction& (0+255),w,b
 32731  011228  ECAF  F06D         	call	__motor_run
 32732                           
 32733                           ;motor.c: 107: return 1;
 32734  01122C  0E01               	movlw	1
 32735  01122E  0012               	return	
 32736  011230                     l2348:
 32737                           
 32738                           ;motor.c: 108: };motor.c: 109: if(motor_items_in_cue()==8-1)
 32739  011230  EC80  F096         	call	_motor_items_in_cue	;wreg free
 32740  011234  0A07               	xorlw	7
 32741  011236  A4D8               	btfss	status,2,c
 32742  011238  D002               	goto	l2350
 32743                           
 32744                           ;motor.c: 110: {;motor.c: 113: return 0;
 32745  01123A  0E00               	movlw	0
 32746                           
 32747                           ;motor.c: 114: }
 32748  01123C  0012               	return	
 32749  01123E                     l2350:
 32750                           
 32751                           ;motor.c: 115: else;motor.c: 116: {;motor.c: 118: motor_command_cue[motor_cue_write_inde
      +                          x].direction = direction;
 32752  01123E  501D               	movf	_motor_cue_write_index,w,c
 32753  011240  0D07               	mullw	7
 32754  011242  0E00               	movlw	low _motor_command_cue
 32755  011244  24F3               	addwf	prodl,w,c
 32756  011246  6ED9               	movwf	fsr2l,c
 32757  011248  0E02               	movlw	high _motor_command_cue
 32758  01124A  20F4               	addwfc	prodh,w,c
 32759  01124C  6EDA               	movwf	fsr2h,c
 32760  01124E  C09D  FFDF         	movff	motor_schedule_command@direction,indf2
 32761                           
 32762                           ;motor.c: 119: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 32763  011252  501D               	movf	_motor_cue_write_index,w,c
 32764  011254  0D07               	mullw	7
 32765  011256  0E01               	movlw	1
 32766  011258  26F3               	addwf	prodl,f,c
 32767  01125A  0E00               	movlw	0
 32768  01125C  22F4               	addwfc	prodh,f,c
 32769  01125E  0E00               	movlw	low _motor_command_cue
 32770  011260  24F3               	addwf	prodl,w,c
 32771  011262  6ED9               	movwf	fsr2l,c
 32772  011264  0E02               	movlw	high _motor_command_cue
 32773  011266  20F4               	addwfc	prodh,w,c
 32774  011268  6EDA               	movwf	fsr2h,c
 32775  01126A  C097  FFDE         	movff	motor_schedule_command@distance_in_steps,postinc2
 32776  01126E  C098  FFDE         	movff	motor_schedule_command@distance_in_steps+1,postinc2
 32777  011272  C099  FFDE         	movff	motor_schedule_command@distance_in_steps+2,postinc2
 32778  011276  C09A  FFDE         	movff	motor_schedule_command@distance_in_steps+3,postinc2
 32779                           
 32780                           ;motor.c: 120: motor_command_cue[motor_cue_write_index].speed = speed;
 32781  01127A  501D               	movf	_motor_cue_write_index,w,c
 32782  01127C  0D07               	mullw	7
 32783  01127E  0E05               	movlw	5
 32784  011280  26F3               	addwf	prodl,f,c
 32785  011282  0E00               	movlw	0
 32786  011284  22F4               	addwfc	prodh,f,c
 32787  011286  0E00               	movlw	low _motor_command_cue
 32788  011288  24F3               	addwf	prodl,w,c
 32789  01128A  6ED9               	movwf	fsr2l,c
 32790  01128C  0E02               	movlw	high _motor_command_cue
 32791  01128E  20F4               	addwfc	prodh,w,c
 32792  011290  6EDA               	movwf	fsr2h,c
 32793  011292  C09B  FFDE         	movff	motor_schedule_command@speed,postinc2
 32794  011296  C09C  FFDD         	movff	motor_schedule_command@speed+1,postdec2
 32795                           
 32796                           ;motor.c: 122: ++motor_cue_write_index;
 32797  01129A  2A1D               	incf	_motor_cue_write_index,f,c
 32798                           
 32799                           ;motor.c: 124: return 1;
 32800  01129C  0E01               	movlw	1
 32801  01129E  0012               	return	
 32802  0112A0                     __end_of_motor_schedule_command:
 32803                           	opt stack 0
 32804                           tosu	equ	0xFFF
 32805                           tosh	equ	0xFFE
 32806                           tosl	equ	0xFFD
 32807                           pclath	equ	0xFFA
 32808                           tblptru	equ	0xFF8
 32809                           tblptrh	equ	0xFF7
 32810                           tblptrl	equ	0xFF6
 32811                           tablat	equ	0xFF5
 32812                           prodh	equ	0xFF4
 32813                           prodl	equ	0xFF3
 32814                           intcon	equ	0xFF2
 32815                           indf0	equ	0xFEF
 32816                           postinc0	equ	0xFEE
 32817                           fsr0h	equ	0xFEA
 32818                           fsr0l	equ	0xFE9
 32819                           wreg	equ	0xFE8
 32820                           indf1	equ	0xFE7
 32821                           postdec1	equ	0xFE5
 32822                           plusw1	equ	0xFE3
 32823                           fsr1h	equ	0xFE2
 32824                           fsr1l	equ	0xFE1
 32825                           indf2	equ	0xFDF
 32826                           postinc2	equ	0xFDE
 32827                           postdec2	equ	0xFDD
 32828                           plusw2	equ	0xFDB
 32829                           fsr2h	equ	0xFDA
 32830                           fsr2l	equ	0xFD9
 32831                           status	equ	0xFD8
 32832                           
 32833 ;; *************** function _motor_items_in_cue *****************
 32834 ;; Defined at:
 32835 ;;		line 94 in file "motor.c"
 32836 ;; Parameters:    Size  Location     Type
 32837 ;;		None
 32838 ;; Auto vars:     Size  Location     Type
 32839 ;;		None
 32840 ;; Return value:  Size  Location     Type
 32841 ;;                  1    wreg      unsigned char 
 32842 ;; Registers used:
 32843 ;;		wreg, status,2, status,0
 32844 ;; Tracked objects:
 32845 ;;		On entry : 0/0
 32846 ;;		On exit  : 0/0
 32847 ;;		Unchanged: 0/0
 32848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32853 ;;Total ram usage:        0 bytes
 32854 ;; Hardware stack levels used:    1
 32855 ;; Hardware stack levels required when called:   10
 32856 ;; This function calls:
 32857 ;;		Nothing
 32858 ;; This function is called by:
 32859 ;;		_motor_schedule_command
 32860 ;;		_motor_process_cue
 32861 ;; This function uses a non-reentrant model
 32862 ;;
 32863                           
 32864                           	psect	text120
 32865  012D00                     __ptext120:
 32866                           	opt stack 0
 32867  012D00                     _motor_items_in_cue:
 32868                           	opt stack 19
 32869                           
 32870                           ;motor.c: 96: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 32871                           
 32872                           ;incstack = 0
 32873  012D00  501E               	movf	_motor_cue_read_index,w,c
 32874  012D02  0800               	sublw	0
 32875  012D04  241D               	addwf	_motor_cue_write_index,w,c
 32876  012D06  0B07               	andlw	7
 32877  012D08  0012               	return	
 32878  012D0A                     __end_of_motor_items_in_cue:
 32879                           	opt stack 0
 32880                           tosu	equ	0xFFF
 32881                           tosh	equ	0xFFE
 32882                           tosl	equ	0xFFD
 32883                           pclath	equ	0xFFA
 32884                           tblptru	equ	0xFF8
 32885                           tblptrh	equ	0xFF7
 32886                           tblptrl	equ	0xFF6
 32887                           tablat	equ	0xFF5
 32888                           prodh	equ	0xFF4
 32889                           prodl	equ	0xFF3
 32890                           intcon	equ	0xFF2
 32891                           indf0	equ	0xFEF
 32892                           postinc0	equ	0xFEE
 32893                           fsr0h	equ	0xFEA
 32894                           fsr0l	equ	0xFE9
 32895                           wreg	equ	0xFE8
 32896                           indf1	equ	0xFE7
 32897                           postdec1	equ	0xFE5
 32898                           plusw1	equ	0xFE3
 32899                           fsr1h	equ	0xFE2
 32900                           fsr1l	equ	0xFE1
 32901                           indf2	equ	0xFDF
 32902                           postinc2	equ	0xFDE
 32903                           postdec2	equ	0xFDD
 32904                           plusw2	equ	0xFDB
 32905                           fsr2h	equ	0xFDA
 32906                           fsr2l	equ	0xFD9
 32907                           status	equ	0xFD8
 32908                           
 32909 ;; *************** function __motor_run *****************
 32910 ;; Defined at:
 32911 ;;		line 177 in file "motor.c"
 32912 ;; Parameters:    Size  Location     Type
 32913 ;;  direction       1    wreg     enum E6622
 32914 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 32915 ;;  speed           2    4[BANK0 ] unsigned int 
 32916 ;; Auto vars:     Size  Location     Type
 32917 ;;  direction       1   10[BANK0 ] enum E6622
 32918 ;; Return value:  Size  Location     Type
 32919 ;;                  1    wreg      void 
 32920 ;; Registers used:
 32921 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 32922 ;; Tracked objects:
 32923 ;;		On entry : 0/0
 32924 ;;		On exit  : 0/0
 32925 ;;		Unchanged: 0/0
 32926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32927 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32929 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32930 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32931 ;;Total ram usage:       11 bytes
 32932 ;; Hardware stack levels used:    1
 32933 ;; Hardware stack levels required when called:   10
 32934 ;; This function calls:
 32935 ;;		Nothing
 32936 ;; This function is called by:
 32937 ;;		_motor_schedule_command
 32938 ;;		_motor_process_cue
 32939 ;; This function uses a non-reentrant model
 32940 ;;
 32941                           
 32942                           	psect	text121
 32943  00DB5E                     __ptext121:
 32944                           	opt stack 0
 32945  00DB5E                     __motor_run:
 32946                           	opt stack 19
 32947                           
 32948                           ;incstack = 0
 32949                           ;__motor_run@direction stored from wreg
 32950  00DB5E  0100               	movlb	0	; () banked
 32951  00DB60  6F6A               	movwf	__motor_run@direction& (0+255),b
 32952                           
 32953                           ;motor.c: 180: motor_direction = direction;
 32954  00DB62  C06A  F01B         	movff	__motor_run@direction,_motor_direction
 32955                           
 32956                           ;motor.c: 183: if(distance_in_steps==0)
 32957  00DB66  0100               	movlb	0	; () banked
 32958  00DB68  5160               	movf	__motor_run@distance_in_steps& (0+255),w,b
 32959  00DB6A  1161               	iorwf	(__motor_run@distance_in_steps+1)& (0+255),w,b
 32960  00DB6C  1162               	iorwf	(__motor_run@distance_in_steps+2)& (0+255),w,b
 32961  00DB6E  1163               	iorwf	(__motor_run@distance_in_steps+3)& (0+255),w,b
 32962  00DB70  A4D8               	btfss	status,2,c
 32963  00DB72  D00A               	goto	l2364
 32964                           
 32965                           ; BSR set to: 0
 32966                           ;motor.c: 184: {;motor.c: 186: motor_final_stepcount = 0xFFFFFF00;
 32967  00DB74  0E00               	movlw	0
 32968  00DB76  0101               	movlb	1	; () banked
 32969  00DB78  6F4B               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 32970  00DB7A  0EFF               	movlw	255
 32971  00DB7C  6F4C               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 32972  00DB7E  0EFF               	movlw	255
 32973  00DB80  6F4D               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 32974  00DB82  0EFF               	movlw	255
 32975  00DB84  6F4E               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 32976                           
 32977                           ;motor.c: 187: }
 32978  00DB86  D008               	goto	l2365
 32979  00DB88                     l2364:
 32980                           
 32981                           ; BSR set to: 0
 32982                           ;motor.c: 188: else;motor.c: 189: {;motor.c: 190: motor_final_stepcount = distance_in_st
      +                          eps;
 32983  00DB88  C060  F14B         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 32984  00DB8C  C061  F14C         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 32985  00DB90  C062  F14D         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 32986  00DB94  C063  F14E         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 32987  00DB98                     l2365:
 32988                           
 32989                           ;motor.c: 192: };motor.c: 195: if(speed==0)
 32990                           
 32991                           ; BSR set to: 0
 32992  00DB98  0100               	movlb	0	; () banked
 32993  00DB9A  5164               	movf	__motor_run@speed& (0+255),w,b
 32994  00DB9C  1165               	iorwf	(__motor_run@speed+1)& (0+255),w,b
 32995  00DB9E  A4D8               	btfss	status,2,c
 32996  00DBA0  D005               	goto	l2366
 32997                           
 32998                           ; BSR set to: 0
 32999                           ;motor.c: 196: {;motor.c: 197: motor_maximum_speed = config.maximum_speed;
 33000  00DBA2  C18E  F16B         	movff	_config+11,_motor_maximum_speed
 33001  00DBA6  C18F  F16C         	movff	_config+12,_motor_maximum_speed+1
 33002                           
 33003                           ;motor.c: 198: }
 33004  00DBAA  D004               	goto	l2367
 33005  00DBAC                     l2366:
 33006                           
 33007                           ; BSR set to: 0
 33008                           ;motor.c: 199: else;motor.c: 200: {;motor.c: 201: motor_maximum_speed = speed;
 33009  00DBAC  C064  F16B         	movff	__motor_run@speed,_motor_maximum_speed
 33010  00DBB0  C065  F16C         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 33011  00DBB4                     l2367:
 33012                           
 33013                           ; BSR set to: 0
 33014                           ;motor.c: 202: };motor.c: 205: motor_current_speed = 0;
 33015                           
 33016                           ; BSR set to: 0
 33017  00DBB4  0E00               	movlw	0
 33018  00DBB6  6FCB               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 33019  00DBB8  0E00               	movlw	0
 33020  00DBBA  6FCA               	movwf	_motor_current_speed& (0+255),b	;volatile
 33021                           
 33022                           ;motor.c: 206: motor_current_stepcount = 0;
 33023  00DBBC  0E00               	movlw	0
 33024  00DBBE  6E0D               	movwf	_motor_current_stepcount,c	;volatile
 33025  00DBC0  0E00               	movlw	0
 33026  00DBC2  6E0E               	movwf	_motor_current_stepcount+1,c	;volatile
 33027  00DBC4  0E00               	movlw	0
 33028  00DBC6  6E0F               	movwf	_motor_current_stepcount+2,c	;volatile
 33029  00DBC8  0E00               	movlw	0
 33030  00DBCA  6E10               	movwf	_motor_current_stepcount+3,c	;volatile
 33031                           
 33032                           ; BSR set to: 0
 33033                           ;motor.c: 208: motor_next_speed_check = motor_steps_lookup[1];
 33034  00DBCC  0E63               	movlw	low (_motor_steps_lookup+2)
 33035  00DBCE  6EF6               	movwf	tblptrl,c
 33036  00DBD0  0E94               	movlw	high (_motor_steps_lookup+2)
 33037  00DBD2  6EF7               	movwf	tblptrh,c
 33038  00DBD4                     	if	0	;tblptru may be non-zero
 33039  00DBD4                     	endif
 33040  00DBD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33041  00DBD4  0E00               	movlw	low (__mediumconst shr (0+16))
 33042  00DBD6  6EF8               	movwf	tblptru,c
 33043  00DBD8                     	endif
 33044  00DBD8  0009               	tblrd		*+
 33045  00DBDA  CFF5 F066          	movff	tablat,??__motor_run
 33046  00DBDE  0009               	tblrd		*+
 33047  00DBE0  CFF5 F067          	movff	tablat,??__motor_run+1
 33048  00DBE4  C066  F147         	movff	??__motor_run,_motor_next_speed_check	;volatile
 33049  00DBE8  C067  F148         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 33050  00DBEC  0101               	movlb	1	; () banked
 33051  00DBEE  6B49               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 33052  00DBF0  6B4A               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 33053                           
 33054                           ; BSR set to: 1
 33055                           ;motor.c: 211: CCP1CONbits.CCP1M = 0b0000;
 33056  00DBF2  90BA               	bcf	4026,0,c	;volatile
 33057  00DBF4  92BA               	bcf	4026,1,c	;volatile
 33058  00DBF6  94BA               	bcf	4026,2,c	;volatile
 33059  00DBF8  96BA               	bcf	4026,3,c	;volatile
 33060                           
 33061                           ; BSR set to: 1
 33062                           ;motor.c: 214: LATBbits.LB0 = 0;
 33063  00DBFA  908A               	bcf	3978,0,c	;volatile
 33064                           
 33065                           ; BSR set to: 1
 33066                           ;motor.c: 215: if(direction==MOTOR_DIRECTION_CCW)
 33067  00DBFC  0100               	movlb	0	; () banked
 33068  00DBFE  296A               	incf	__motor_run@direction& (0+255),w,b
 33069  00DC00  A4D8               	btfss	status,2,c
 33070  00DC02  D005               	goto	l2368
 33071                           
 33072                           ; BSR set to: 0
 33073                           ;motor.c: 216: {;motor.c: 217: if(config.inverse_direction)
 33074  00DC04  0101               	movlb	1	; () banked
 33075  00DC06  5187               	movf	(_config+4)& (0+255),w,b
 33076  00DC08  B4D8               	btfsc	status,2,c
 33077  00DC0A  D005               	goto	u17900
 33078  00DC0C  D006               	goto	l2372
 33079  00DC0E                     l2368:
 33080                           
 33081                           ;motor.c: 222: else;motor.c: 223: {;motor.c: 224: if(config.inverse_direction)
 33082                           
 33083                           ; BSR set to: 1
 33084  00DC0E  0101               	movlb	1	; () banked
 33085  00DC10  5187               	movf	(_config+4)& (0+255),w,b
 33086  00DC12  B4D8               	btfsc	status,2,c
 33087  00DC14  D002               	goto	l2372
 33088  00DC16                     u17900:
 33089                           
 33090                           ; BSR set to: 1
 33091                           ;motor.c: 225: LATBbits.LB2 = 0;
 33092  00DC16  948A               	bcf	3978,2,c	;volatile
 33093  00DC18  D001               	goto	l2373
 33094  00DC1A                     l2372:
 33095                           
 33096                           ; BSR set to: 1
 33097                           ;motor.c: 226: else;motor.c: 227: LATBbits.LB2 = 1;
 33098  00DC1A  848A               	bsf	3978,2,c	;volatile
 33099  00DC1C                     l2373:
 33100                           
 33101                           ; BSR set to: 1
 33102                           ;motor.c: 228: };motor.c: 231: LATBbits.LB1 = 1;
 33103                           
 33104                           ; BSR set to: 1
 33105  00DC1C  828A               	bsf	3978,1,c	;volatile
 33106                           
 33107                           ; BSR set to: 1
 33108                           ;motor.c: 234: ++motor_current_stepcount;
 33109  00DC1E  0E01               	movlw	1
 33110  00DC20  260D               	addwf	_motor_current_stepcount,f,c	;volatile
 33111  00DC22  0E00               	movlw	0
 33112  00DC24  220E               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 33113  00DC26  220F               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 33114  00DC28  2210               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 33115                           
 33116                           ;motor.c: 237: os.current_position_in_steps += motor_direction;
 33117  00DC2A  501B               	movf	_motor_direction,w,c
 33118  00DC2C  0100               	movlb	0	; () banked
 33119  00DC2E  6F66               	movwf	??__motor_run& (0+255),b
 33120  00DC30  0E00               	movlw	0
 33121  00DC32  BF66               	btfsc	??__motor_run& (0+255),7,b
 33122  00DC34  0EFF               	movlw	255
 33123  00DC36  6F67               	movwf	(??__motor_run+1)& (0+255),b
 33124  00DC38  6F68               	movwf	(??__motor_run+2)& (0+255),b
 33125  00DC3A  6F69               	movwf	(??__motor_run+3)& (0+255),b
 33126  00DC3C  5166               	movf	??__motor_run& (0+255),w,b
 33127  00DC3E  27D7               	addwf	(_os+7)& (0+255),f,b	;volatile
 33128  00DC40  5167               	movf	(??__motor_run+1)& (0+255),w,b
 33129  00DC42  23D8               	addwfc	(_os+8)& (0+255),f,b	;volatile
 33130  00DC44  5168               	movf	(??__motor_run+2)& (0+255),w,b
 33131  00DC46  23D9               	addwfc	(_os+9)& (0+255),f,b	;volatile
 33132  00DC48  5169               	movf	(??__motor_run+3)& (0+255),w,b
 33133  00DC4A  23DA               	addwfc	(_os+10)& (0+255),f,b	;volatile
 33134                           
 33135                           ;motor.c: 238: if(os.current_position_in_steps==config.full_circle_in_steps)
 33136  00DC4C  0101               	movlb	1	; () banked
 33137  00DC4E  5183               	movf	_config& (0+255),w,b
 33138  00DC50  0100               	movlb	0	; () banked
 33139  00DC52  19D7               	xorwf	(_os+7)& (0+255),w,b	;volatile
 33140  00DC54  E118               	bnz	l18176
 33141  00DC56  0101               	movlb	1	; () banked
 33142  00DC58  5184               	movf	(_config+1)& (0+255),w,b
 33143  00DC5A  0100               	movlb	0	; () banked
 33144  00DC5C  19D8               	xorwf	(_os+8)& (0+255),w,b	;volatile
 33145  00DC5E  E113               	bnz	l18176
 33146  00DC60  0101               	movlb	1	; () banked
 33147  00DC62  5185               	movf	(_config+2)& (0+255),w,b
 33148  00DC64  0100               	movlb	0	; () banked
 33149  00DC66  19D9               	xorwf	(_os+9)& (0+255),w,b	;volatile
 33150  00DC68  E10E               	bnz	l18176
 33151  00DC6A  0101               	movlb	1	; () banked
 33152  00DC6C  5186               	movf	(_config+3)& (0+255),w,b
 33153  00DC6E  0100               	movlb	0	; () banked
 33154  00DC70  19DA               	xorwf	(_os+10)& (0+255),w,b	;volatile
 33155  00DC72  A4D8               	btfss	status,2,c
 33156  00DC74  D008               	goto	l2374
 33157                           
 33158                           ; BSR set to: 0
 33159                           ;motor.c: 239: os.current_position_in_steps = 0;
 33160  00DC76  0E00               	movlw	0
 33161  00DC78  6FD7               	movwf	(_os+7)& (0+255),b	;volatile
 33162  00DC7A  0E00               	movlw	0
 33163  00DC7C  6FD8               	movwf	(_os+8)& (0+255),b	;volatile
 33164  00DC7E  0E00               	movlw	0
 33165  00DC80  6FD9               	movwf	(_os+9)& (0+255),b	;volatile
 33166  00DC82  0E00               	movlw	0
 33167  00DC84  6FDA               	movwf	(_os+10)& (0+255),b	;volatile
 33168  00DC86                     l2374:
 33169  00DC86                     l18176:
 33170                           
 33171                           ; BSR set to: 0
 33172                           ;motor.c: 240: if(os.current_position_in_steps==0xFFFFFFFF)
 33173  00DC86  29D7               	incf	(_os+7)& (0+255),w,b	;volatile
 33174  00DC88  E11B               	bnz	l18180
 33175  00DC8A  29D8               	incf	(_os+8)& (0+255),w,b	;volatile
 33176  00DC8C  E119               	bnz	l18180
 33177  00DC8E  29D9               	incf	(_os+9)& (0+255),w,b	;volatile
 33178  00DC90  E117               	bnz	l18180
 33179  00DC92  29DA               	incf	(_os+10)& (0+255),w,b	;volatile
 33180  00DC94  A4D8               	btfss	status,2,c
 33181  00DC96  D014               	goto	l2375
 33182                           
 33183                           ; BSR set to: 0
 33184                           ;motor.c: 241: os.current_position_in_steps = (config.full_circle_in_steps-1);
 33185  00DC98  0EFF               	movlw	255
 33186  00DC9A  0101               	movlb	1	; () banked
 33187  00DC9C  2583               	addwf	_config& (0+255),w,b
 33188  00DC9E  0100               	movlb	0	; () banked
 33189  00DCA0  6FD7               	movwf	(_os+7)& (0+255),b	;volatile
 33190  00DCA2  0EFF               	movlw	255
 33191  00DCA4  0101               	movlb	1	; () banked
 33192  00DCA6  2184               	addwfc	(_config+1)& (0+255),w,b
 33193  00DCA8  0100               	movlb	0	; () banked
 33194  00DCAA  6FD8               	movwf	(_os+8)& (0+255),b	;volatile
 33195  00DCAC  0EFF               	movlw	255
 33196  00DCAE  0101               	movlb	1	; () banked
 33197  00DCB0  2185               	addwfc	(_config+2)& (0+255),w,b
 33198  00DCB2  0100               	movlb	0	; () banked
 33199  00DCB4  6FD9               	movwf	(_os+9)& (0+255),b	;volatile
 33200  00DCB6  0EFF               	movlw	255
 33201  00DCB8  0101               	movlb	1	; () banked
 33202  00DCBA  2186               	addwfc	(_config+3)& (0+255),w,b
 33203  00DCBC  0100               	movlb	0	; () banked
 33204  00DCBE  6FDA               	movwf	(_os+10)& (0+255),b	;volatile
 33205  00DCC0                     l2375:
 33206  00DCC0                     l18180:
 33207                           
 33208                           ; BSR set to: 0
 33209                           ;motor.c: 244: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 33210  00DCC0  0E55               	movlw	85
 33211  00DCC2  6EA7               	movwf	4007,c	;volsfr
 33212                           
 33213                           ; BSR set to: 0
 33214  00DCC4  0EAA               	movlw	170
 33215  00DCC6  6EA7               	movwf	4007,c	;volsfr
 33216                           
 33217                           ; BSR set to: 0
 33218  00DCC8  010E               	movlb	14	; () banked
 33219  00DCCA  91BF               	bcf	191,0,b	;volatile
 33220                           
 33221                           ; BSR set to: 14
 33222                           ;motor.c: 245: RPOR4 = 0;
 33223  00DCCC  0E00               	movlw	0
 33224  00DCCE  6FC4               	movwf	196,b	;volatile
 33225                           
 33226                           ; BSR set to: 14
 33227                           ;motor.c: 246: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 33228  00DCD0  0E55               	movlw	85
 33229  00DCD2  6EA7               	movwf	4007,c	;volsfr
 33230                           
 33231                           ; BSR set to: 14
 33232  00DCD4  0EAA               	movlw	170
 33233  00DCD6  6EA7               	movwf	4007,c	;volsfr
 33234                           
 33235                           ; BSR set to: 14
 33236  00DCD8  81BF               	bsf	191,0,b	;volatile
 33237                           
 33238                           ; BSR set to: 14
 33239                           ;motor.c: 249: motor_mode = MOTOR_MODE_MANUAL;
 33240  00DCDA  0E00               	movlw	0
 33241  00DCDC  6E1C               	movwf	_motor_mode,c
 33242                           
 33243                           ; BSR set to: 14
 33244                           ;motor.c: 253: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 33245  00DCDE  0EFD               	movlw	low _motor_prescaler_lookup
 33246  00DCE0  0100               	movlb	0	; () banked
 33247  00DCE2  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 33248  00DCE4  6EF6               	movwf	tblptrl,c
 33249  00DCE6  0E9B               	movlw	high _motor_prescaler_lookup
 33250  00DCE8  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33251  00DCEA  6EF7               	movwf	tblptrh,c
 33252  00DCEC                     	if	1	;There are 3 active tblptr bytes
 33253  00DCEC  6AF8               	clrf	tblptru,c
 33254  00DCEE  0E00               	movlw	low (__mediumconst shr (0+16))
 33255  00DCF0  22F8               	addwfc	tblptru,f,c
 33256  00DCF2                     	endif
 33257  00DCF2  0008               	tblrd		*
 33258  00DCF4  CFF5 F066          	movff	tablat,??__motor_run
 33259  00DCF8  50CA               	movf	4042,w,c	;volatile
 33260  00DCFA  1966               	xorwf	??__motor_run& (0+255),w,b
 33261  00DCFC  0BFC               	andlw	-4
 33262  00DCFE  1966               	xorwf	??__motor_run& (0+255),w,b
 33263  00DD00  6ECA               	movwf	4042,c	;volatile
 33264                           
 33265                           ; BSR set to: 0
 33266                           ;motor.c: 255: PR2 = motor_period_lookup[motor_current_speed];
 33267  00DD02  0E16               	movlw	low _motor_period_lookup
 33268  00DD04  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 33269  00DD06  6EF6               	movwf	tblptrl,c
 33270  00DD08  0E9A               	movlw	high _motor_period_lookup
 33271  00DD0A  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33272  00DD0C  6EF7               	movwf	tblptrh,c
 33273  00DD0E                     	if	1	;There are 3 active tblptr bytes
 33274  00DD0E  6AF8               	clrf	tblptru,c
 33275  00DD10  0E00               	movlw	low (__mediumconst shr (0+16))
 33276  00DD12  22F8               	addwfc	tblptru,f,c
 33277  00DD14                     	endif
 33278  00DD14  0008               	tblrd		*
 33279  00DD16  CFF5 FFCB          	movff	tablat,4043	;volatile
 33280                           
 33281                           ; BSR set to: 0
 33282                           ;motor.c: 257: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 33283  00DD1A  0E2F               	movlw	low _motor_postscaler_lookup
 33284  00DD1C  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 33285  00DD1E  6EF6               	movwf	tblptrl,c
 33286  00DD20  0E98               	movlw	high _motor_postscaler_lookup
 33287  00DD22  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 33288  00DD24  6EF7               	movwf	tblptrh,c
 33289  00DD26                     	if	1	;There are 3 active tblptr bytes
 33290  00DD26  6AF8               	clrf	tblptru,c
 33291  00DD28  0E00               	movlw	low (__mediumconst shr (0+16))
 33292  00DD2A  22F8               	addwfc	tblptru,f,c
 33293  00DD2C                     	endif
 33294  00DD2C  0008               	tblrd		*
 33295  00DD2E  CFF5 F066          	movff	tablat,??__motor_run
 33296  00DD32  4766               	rlncf	??__motor_run& (0+255),f,b
 33297  00DD34  4766               	rlncf	??__motor_run& (0+255),f,b
 33298  00DD36  4766               	rlncf	??__motor_run& (0+255),f,b
 33299  00DD38  50CA               	movf	4042,w,c	;volatile
 33300  00DD3A  1966               	xorwf	??__motor_run& (0+255),w,b
 33301  00DD3C  0B87               	andlw	-121
 33302  00DD3E  1966               	xorwf	??__motor_run& (0+255),w,b
 33303  00DD40  6ECA               	movwf	4042,c	;volatile
 33304                           
 33305                           ; BSR set to: 0
 33306                           ;motor.c: 259: CCPR1L = PR2>>1;
 33307  00DD42  90D8               	bcf	status,0,c
 33308  00DD44  30CB               	rrcf	4043,w,c	;volatile
 33309  00DD46  6EBB               	movwf	4027,c	;volatile
 33310                           
 33311                           ; BSR set to: 0
 33312                           ;motor.c: 262: PIR1bits.TMR2IF = 0;
 33313  00DD48  929E               	bcf	3998,1,c	;volatile
 33314                           
 33315                           ; BSR set to: 0
 33316                           ;motor.c: 263: PIE1bits.TMR2IE = 1;
 33317  00DD4A  829D               	bsf	3997,1,c	;volatile
 33318                           
 33319                           ; BSR set to: 0
 33320                           ;motor.c: 266: TMR2 = 0;
 33321  00DD4C  0E00               	movlw	0
 33322  00DD4E  6ECC               	movwf	4044,c	;volatile
 33323                           
 33324                           ; BSR set to: 0
 33325                           ;motor.c: 267: T2CONbits.TMR2ON = 1;
 33326  00DD50  84CA               	bsf	4042,2,c	;volatile
 33327                           
 33328                           ; BSR set to: 0
 33329                           ;motor.c: 270: os.busy = 1;
 33330  00DD52  0E01               	movlw	1
 33331  00DD54  6FDE               	movwf	(_os+14)& (0+255),b	;volatile
 33332                           
 33333                           ; BSR set to: 0
 33334  00DD56  0012               	return		;funcret
 33335  00DD58                     __end_of__motor_run:
 33336                           	opt stack 0
 33337                           tosu	equ	0xFFF
 33338                           tosh	equ	0xFFE
 33339                           tosl	equ	0xFFD
 33340                           pclath	equ	0xFFA
 33341                           tblptru	equ	0xFF8
 33342                           tblptrh	equ	0xFF7
 33343                           tblptrl	equ	0xFF6
 33344                           tablat	equ	0xFF5
 33345                           prodh	equ	0xFF4
 33346                           prodl	equ	0xFF3
 33347                           intcon	equ	0xFF2
 33348                           indf0	equ	0xFEF
 33349                           postinc0	equ	0xFEE
 33350                           fsr0h	equ	0xFEA
 33351                           fsr0l	equ	0xFE9
 33352                           wreg	equ	0xFE8
 33353                           indf1	equ	0xFE7
 33354                           postdec1	equ	0xFE5
 33355                           plusw1	equ	0xFE3
 33356                           fsr1h	equ	0xFE2
 33357                           fsr1l	equ	0xFE1
 33358                           indf2	equ	0xFDF
 33359                           postinc2	equ	0xFDE
 33360                           postdec2	equ	0xFDD
 33361                           plusw2	equ	0xFDB
 33362                           fsr2h	equ	0xFDA
 33363                           fsr2l	equ	0xFD9
 33364                           status	equ	0xFD8
 33365                           
 33366 ;; *************** function _USBTransferOnePacket *****************
 33367 ;; Defined at:
 33368 ;;		line 995 in file "usb_device.c"
 33369 ;; Parameters:    Size  Location     Type
 33370 ;;  ep              1    wreg     unsigned char 
 33371 ;;  dir             1    0[BANK0 ] unsigned char 
 33372 ;;  data            2    1[BANK0 ] PTR unsigned char 
 33373 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 33374 ;;		 -> msd_cbw(31), NULL(0), 
 33375 ;;  len             1    3[BANK0 ] unsigned char 
 33376 ;; Auto vars:     Size  Location     Type
 33377 ;;  ep              1    8[BANK0 ] unsigned char 
 33378 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 33379 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 33380 ;; Return value:  Size  Location     Type
 33381 ;;                  2    0[BANK0 ] PTR void 
 33382 ;; Registers used:
 33383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33384 ;; Tracked objects:
 33385 ;;		On entry : 0/0
 33386 ;;		On exit  : 0/0
 33387 ;;		Unchanged: 0/0
 33388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33389 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33390 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33391 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33392 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33393 ;;Total ram usage:       11 bytes
 33394 ;; Hardware stack levels used:    1
 33395 ;; Hardware stack levels required when called:   10
 33396 ;; This function calls:
 33397 ;;		Nothing
 33398 ;; This function is called by:
 33399 ;;		_MSDTasks
 33400 ;;		_MSDProcessCommandMediaPresent
 33401 ;;		_MSDReadHandler
 33402 ;;		_MSDWriteHandler
 33403 ;;		_APP_DeviceCustomHIDTasks
 33404 ;; This function uses a non-reentrant model
 33405 ;;
 33406                           
 33407                           	psect	text122
 33408  00FB80                     __ptext122:
 33409                           	opt stack 0
 33410  00FB80                     _USBTransferOnePacket:
 33411                           	opt stack 18
 33412                           
 33413                           ; BSR set to: 0
 33414                           ;incstack = 0
 33415                           ;USBTransferOnePacket@ep stored from wreg
 33416  00FB80  0100               	movlb	0	; () banked
 33417  00FB82  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 33418                           
 33419                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 33420  00FB84  0100               	movlb	0	; () banked
 33421  00FB86  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 33422  00FB88  B4D8               	btfsc	status,2,c
 33423  00FB8A  D007               	goto	l184
 33424                           
 33425                           ; BSR set to: 0
 33426                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 33427  00FB8C  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 33428  00FB8E  0D02               	mullw	2
 33429  00FB90  0E07               	movlw	low _pBDTEntryIn
 33430  00FB92  24F3               	addwf	prodl,w,c
 33431  00FB94  6ED9               	movwf	fsr2l,c
 33432  00FB96  0E00               	movlw	high _pBDTEntryIn
 33433  00FB98  D006               	goto	L60
 33434  00FB9A                     l184:
 33435                           
 33436                           ; BSR set to: 0
 33437                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 33438                           
 33439                           ; BSR set to: 0
 33440  00FB9A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 33441  00FB9C  0D02               	mullw	2
 33442  00FB9E  0E41               	movlw	low _pBDTEntryOut
 33443  00FBA0  24F3               	addwf	prodl,w,c
 33444  00FBA2  6ED9               	movwf	fsr2l,c
 33445  00FBA4  0E01               	movlw	high _pBDTEntryOut
 33446  00FBA6                     L60:
 33447  00FBA6  20F4               	addwfc	prodh,w,c
 33448  00FBA8  6EDA               	movwf	fsr2h,c
 33449  00FBAA  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 33450  00FBAE  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 33451                           
 33452                           ; BSR set to: 0
 33453                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 33454                           
 33455                           ; BSR set to: 0
 33456  00FBB2  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 33457  00FBB4  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 33458  00FBB6  A4D8               	btfss	status,2,c
 33459  00FBB8  D005               	goto	l186
 33460                           
 33461                           ; BSR set to: 0
 33462                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 33463  00FBBA  0E00               	movlw	0
 33464  00FBBC  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 33465  00FBBE  0E00               	movlw	0
 33466  00FBC0  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 33467                           
 33468                           ; BSR set to: 0
 33469  00FBC2  0012               	return	
 33470  00FBC4                     l186:
 33471                           
 33472                           ; BSR set to: 0
 33473                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 33474                           
 33475                           ; BSR set to: 0
 33476  00FBC4  EE20 F002          	lfsr	2,2
 33477  00FBC8  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 33478  00FBCA  26D9               	addwf	fsr2l,f,c
 33479  00FBCC  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 33480  00FBCE  22DA               	addwfc	fsr2h,f,c
 33481  00FBD0  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 33482  00FBD4  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 33483                           
 33484                           ;usb_device.c: 1030: handle->CNT = len;
 33485  00FBD8  EE20 F001          	lfsr	2,1
 33486  00FBDC  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 33487  00FBDE  26D9               	addwf	fsr2l,f,c
 33488  00FBE0  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 33489  00FBE2  22DA               	addwfc	fsr2h,f,c
 33490  00FBE4  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 33491                           
 33492                           ; BSR set to: 0
 33493                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 33494  00FBE8  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 33495  00FBEC  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 33496  00FBF0  0E40               	movlw	64
 33497  00FBF2  16DF               	andwf	indf2,f,c
 33498                           
 33499                           ; BSR set to: 0
 33500                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 33501  00FBF4  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 33502  00FBF8  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 33503  00FBFC  0E00               	movlw	0
 33504  00FBFE  86DB               	bsf	plusw2,3,c
 33505                           
 33506                           ; BSR set to: 0
 33507                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 33508  00FC00  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 33509  00FC04  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 33510  00FC08  0E00               	movlw	0
 33511  00FC0A  8EDB               	bsf	plusw2,7,c
 33512                           
 33513                           ; BSR set to: 0
 33514                           ;usb_device.c: 1036: if(dir != 0)
 33515  00FC0C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 33516  00FC0E  B4D8               	btfsc	status,2,c
 33517  00FC10  D018               	goto	l188
 33518                           
 33519                           ; BSR set to: 0
 33520                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 33521  00FC12  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 33522  00FC14  0D02               	mullw	2
 33523  00FC16  0E07               	movlw	low _pBDTEntryIn
 33524  00FC18  24F3               	addwf	prodl,w,c
 33525  00FC1A  6ED9               	movwf	fsr2l,c
 33526  00FC1C  0E00               	movlw	high _pBDTEntryIn
 33527  00FC1E  20F4               	addwfc	prodh,w,c
 33528  00FC20  6EDA               	movwf	fsr2h,c
 33529  00FC22  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 33530  00FC26  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 33531  00FC2A  0E04               	movlw	4
 33532  00FC2C  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 33533  00FC2E  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 33534  00FC30  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 33535  00FC32  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 33536  00FC34  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 33537  00FC36  0D02               	mullw	2
 33538  00FC38  0E07               	movlw	low _pBDTEntryIn
 33539  00FC3A  24F3               	addwf	prodl,w,c
 33540  00FC3C  6ED9               	movwf	fsr2l,c
 33541  00FC3E  0E00               	movlw	high _pBDTEntryIn
 33542  00FC40  D017               	goto	L61
 33543  00FC42                     l188:
 33544                           
 33545                           ; BSR set to: 0
 33546                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 33547                           
 33548                           ; BSR set to: 0
 33549  00FC42  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 33550  00FC44  0D02               	mullw	2
 33551  00FC46  0E41               	movlw	low _pBDTEntryOut
 33552  00FC48  24F3               	addwf	prodl,w,c
 33553  00FC4A  6ED9               	movwf	fsr2l,c
 33554  00FC4C  0E01               	movlw	high _pBDTEntryOut
 33555  00FC4E  20F4               	addwfc	prodh,w,c
 33556  00FC50  6EDA               	movwf	fsr2h,c
 33557  00FC52  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 33558  00FC56  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 33559  00FC5A  0E04               	movlw	4
 33560  00FC5C  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 33561  00FC5E  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 33562  00FC60  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 33563  00FC62  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 33564  00FC64  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 33565  00FC66  0D02               	mullw	2
 33566  00FC68  0E41               	movlw	low _pBDTEntryOut
 33567  00FC6A  24F3               	addwf	prodl,w,c
 33568  00FC6C  6ED9               	movwf	fsr2l,c
 33569  00FC6E  0E01               	movlw	high _pBDTEntryOut
 33570  00FC70                     L61:
 33571  00FC70  20F4               	addwfc	prodh,w,c
 33572  00FC72  6EDA               	movwf	fsr2h,c
 33573  00FC74  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 33574  00FC78  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 33575                           
 33576                           ; BSR set to: 0
 33577                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 33578                           
 33579                           ; BSR set to: 0
 33580  00FC7C  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 33581  00FC80  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 33582  00FC84  0012               	return	
 33583  00FC86                     __end_of_USBTransferOnePacket:
 33584                           	opt stack 0
 33585                           tosu	equ	0xFFF
 33586                           tosh	equ	0xFFE
 33587                           tosl	equ	0xFFD
 33588                           pclath	equ	0xFFA
 33589                           tblptru	equ	0xFF8
 33590                           tblptrh	equ	0xFF7
 33591                           tblptrl	equ	0xFF6
 33592                           tablat	equ	0xFF5
 33593                           prodh	equ	0xFF4
 33594                           prodl	equ	0xFF3
 33595                           intcon	equ	0xFF2
 33596                           indf0	equ	0xFEF
 33597                           postinc0	equ	0xFEE
 33598                           fsr0h	equ	0xFEA
 33599                           fsr0l	equ	0xFE9
 33600                           wreg	equ	0xFE8
 33601                           indf1	equ	0xFE7
 33602                           postdec1	equ	0xFE5
 33603                           plusw1	equ	0xFE3
 33604                           fsr1h	equ	0xFE2
 33605                           fsr1l	equ	0xFE1
 33606                           indf2	equ	0xFDF
 33607                           postinc2	equ	0xFDE
 33608                           postdec2	equ	0xFDD
 33609                           plusw2	equ	0xFDB
 33610                           fsr2h	equ	0xFDA
 33611                           fsr2l	equ	0xFD9
 33612                           status	equ	0xFD8
 33613                           
 33614 ;; *************** function _SYS_InterruptHigh *****************
 33615 ;; Defined at:
 33616 ;;		line 162 in file "system.c"
 33617 ;; Parameters:    Size  Location     Type
 33618 ;;		None
 33619 ;; Auto vars:     Size  Location     Type
 33620 ;;		None
 33621 ;; Return value:  Size  Location     Type
 33622 ;;                  1    wreg      void 
 33623 ;; Registers used:
 33624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 33625 ;; Tracked objects:
 33626 ;;		On entry : 0/0
 33627 ;;		On exit  : 0/0
 33628 ;;		Unchanged: 0/0
 33629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33632 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33633 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33634 ;;Total ram usage:       14 bytes
 33635 ;; Hardware stack levels used:    1
 33636 ;; Hardware stack levels required when called:    9
 33637 ;; This function calls:
 33638 ;;		_USBDeviceTasks
 33639 ;;		_motor_isr
 33640 ;;		_tmr0_isr
 33641 ;; This function is called by:
 33642 ;;		Interrupt level 2
 33643 ;; This function uses a non-reentrant model
 33644 ;;
 33645                           
 33646                           	psect	intcode
 33647  009008                     __pintcode:
 33648                           	opt stack 0
 33649  009008                     _SYS_InterruptHigh:
 33650                           	opt stack 9
 33651                           
 33652                           ; BSR set to: 0
 33653                           ;incstack = 0
 33654  009008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 33655  00900A  CFFA F04D          	movff	pclath,??_SYS_InterruptHigh
 33656  00900E  CFFB F04E          	movff	pclatu,??_SYS_InterruptHigh+1
 33657  009012  CFE9 F04F          	movff	fsr0l,??_SYS_InterruptHigh+2
 33658  009016  CFEA F050          	movff	fsr0h,??_SYS_InterruptHigh+3
 33659  00901A  CFE1 F051          	movff	fsr1l,??_SYS_InterruptHigh+4
 33660  00901E  CFE2 F052          	movff	fsr1h,??_SYS_InterruptHigh+5
 33661  009022  CFD9 F053          	movff	fsr2l,??_SYS_InterruptHigh+6
 33662  009026  CFDA F054          	movff	fsr2h,??_SYS_InterruptHigh+7
 33663  00902A  CFF3 F055          	movff	prodl,??_SYS_InterruptHigh+8
 33664  00902E  CFF4 F056          	movff	prodh,??_SYS_InterruptHigh+9
 33665  009032  CFF6 F057          	movff	tblptrl,??_SYS_InterruptHigh+10
 33666  009036  CFF7 F058          	movff	tblptrh,??_SYS_InterruptHigh+11
 33667  00903A  CFF8 F059          	movff	tblptru,??_SYS_InterruptHigh+12
 33668  00903E  CFF5 F05A          	movff	tablat,??_SYS_InterruptHigh+13
 33669                           
 33670                           ;system.c: 165: USBDeviceTasks();
 33671  009042  EC4B  F076         	call	_USBDeviceTasks	;wreg free
 33672                           
 33673                           ;system.c: 169: if(PIR1bits.TMR2IF)
 33674  009046  B29E               	btfsc	3998,1,c	;volatile
 33675                           
 33676                           ;system.c: 170: {;system.c: 171: motor_isr();
 33677  009048  ECAB  F05B         	call	_motor_isr	;wreg free
 33678                           
 33679                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 33680  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 33681                           
 33682                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 33683  00904E  EC9C  F093         	call	_tmr0_isr	;wreg free
 33684  009052  C05A  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 33685  009056  C059  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 33686  00905A  C058  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 33687  00905E  C057  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 33688  009062  C056  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 33689  009066  C055  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 33690  00906A  C054  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 33691  00906E  C053  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 33692  009072  C052  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 33693  009076  C051  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 33694  00907A  C050  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 33695  00907E  C04F  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 33696  009082  C04E  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 33697  009086  C04D  FFFA         	movff	??_SYS_InterruptHigh,pclath
 33698  00908A  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33699  00908C  0011               	retfie		f
 33700  00908E                     __end_of_SYS_InterruptHigh:
 33701                           	opt stack 0
 33702                           tosu	equ	0xFFF
 33703                           tosh	equ	0xFFE
 33704                           tosl	equ	0xFFD
 33705                           pclatu	equ	0xFFB
 33706                           pclath	equ	0xFFA
 33707                           tblptru	equ	0xFF8
 33708                           tblptrh	equ	0xFF7
 33709                           tblptrl	equ	0xFF6
 33710                           tablat	equ	0xFF5
 33711                           prodh	equ	0xFF4
 33712                           prodl	equ	0xFF3
 33713                           intcon	equ	0xFF2
 33714                           indf0	equ	0xFEF
 33715                           postinc0	equ	0xFEE
 33716                           fsr0h	equ	0xFEA
 33717                           fsr0l	equ	0xFE9
 33718                           wreg	equ	0xFE8
 33719                           indf1	equ	0xFE7
 33720                           postdec1	equ	0xFE5
 33721                           plusw1	equ	0xFE3
 33722                           fsr1h	equ	0xFE2
 33723                           fsr1l	equ	0xFE1
 33724                           indf2	equ	0xFDF
 33725                           postinc2	equ	0xFDE
 33726                           postdec2	equ	0xFDD
 33727                           plusw2	equ	0xFDB
 33728                           fsr2h	equ	0xFDA
 33729                           fsr2l	equ	0xFD9
 33730                           status	equ	0xFD8
 33731                           
 33732 ;; *************** function _tmr0_isr *****************
 33733 ;; Defined at:
 33734 ;;		line 21 in file "os.c"
 33735 ;; Parameters:    Size  Location     Type
 33736 ;;		None
 33737 ;; Auto vars:     Size  Location     Type
 33738 ;;		None
 33739 ;; Return value:  Size  Location     Type
 33740 ;;                  1    wreg      void 
 33741 ;; Registers used:
 33742 ;;		wreg, status,2, status,0, cstack
 33743 ;; Tracked objects:
 33744 ;;		On entry : 0/0
 33745 ;;		On exit  : 0/0
 33746 ;;		Unchanged: 0/0
 33747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33752 ;;Total ram usage:        0 bytes
 33753 ;; Hardware stack levels used:    1
 33754 ;; Hardware stack levels required when called:    1
 33755 ;; This function calls:
 33756 ;;		_encoder_run
 33757 ;; This function is called by:
 33758 ;;		_SYS_InterruptHigh
 33759 ;; This function uses a non-reentrant model
 33760 ;;
 33761                           
 33762                           	psect	text124
 33763  012738                     __ptext124:
 33764                           	opt stack 0
 33765  012738                     _tmr0_isr:
 33766                           	opt stack 16
 33767                           
 33768                           ;os.c: 24: if(INTCONbits.T0IF)
 33769                           
 33770                           ;incstack = 0
 33771  012738  A4F2               	btfss	intcon,2,c	;volatile
 33772  01273A  0012               	return	
 33773                           
 33774                           ;os.c: 25: {;os.c: 27: TMR0H = 0xFA;
 33775  01273C  0EFA               	movlw	250
 33776  01273E  6ED7               	movwf	4055,c	;volatile
 33777                           
 33778                           ;os.c: 28: TMR0L = 0x24;
 33779  012740  0E24               	movlw	36
 33780  012742  6ED6               	movwf	4054,c	;volatile
 33781                           
 33782                           ;os.c: 31: INTCONbits.T0IF = 0;
 33783  012744  94F2               	bcf	intcon,2,c	;volatile
 33784                           
 33785                           ;os.c: 34: encoder_run();
 33786  012746  EC1E  F07B         	call	_encoder_run	;wreg free
 33787                           
 33788                           ;os.c: 37: ++os.subTimeSlot;
 33789  01274A  0100               	movlb	0	; () banked
 33790  01274C  2BD0               	incf	_os& (0+255),f,b	;volatile
 33791                           
 33792                           ; BSR set to: 0
 33793                           ;os.c: 38: if(os.subTimeSlot>=10)
 33794  01274E  0E09               	movlw	9
 33795  012750  65D0               	cpfsgt	_os& (0+255),b	;volatile
 33796  012752  0012               	return	
 33797                           
 33798                           ; BSR set to: 0
 33799                           ;os.c: 39: {;os.c: 40: if(os.done)
 33800  012754  51D2               	movf	(_os+2)& (0+255),w,b	;volatile
 33801  012756  B4D8               	btfsc	status,2,c
 33802  012758  0012               	return	
 33803                           
 33804                           ; BSR set to: 0
 33805                           ;os.c: 41: {;os.c: 42: ++os.timeSlot;
 33806  01275A  2BD1               	incf	(_os+1)& (0+255),f,b	;volatile
 33807                           
 33808                           ; BSR set to: 0
 33809                           ;os.c: 43: if(os.timeSlot==16)
 33810  01275C  0E10               	movlw	16
 33811  01275E  19D1               	xorwf	(_os+1)& (0+255),w,b	;volatile
 33812  012760  A4D8               	btfss	status,2,c
 33813  012762  D002               	goto	i2l1051
 33814                           
 33815                           ; BSR set to: 0
 33816                           ;os.c: 44: {;os.c: 45: os.timeSlot = 0;
 33817  012764  0E00               	movlw	0
 33818  012766  6FD1               	movwf	(_os+1)& (0+255),b	;volatile
 33819  012768                     i2l1051:
 33820                           
 33821                           ; BSR set to: 0
 33822                           ;os.c: 46: };os.c: 47: os.subTimeSlot = 0;
 33823  012768  0E00               	movlw	0
 33824  01276A  6FD0               	movwf	_os& (0+255),b	;volatile
 33825                           
 33826                           ;os.c: 48: os.done = 0;
 33827  01276C  0E00               	movlw	0
 33828  01276E  6FD2               	movwf	(_os+2)& (0+255),b	;volatile
 33829                           
 33830                           ; BSR set to: 0
 33831                           
 33832                           ; BSR set to: 0
 33833  012770  0012               	return	
 33834  012772                     __end_of_tmr0_isr:
 33835                           	opt stack 0
 33836                           tosu	equ	0xFFF
 33837                           tosh	equ	0xFFE
 33838                           tosl	equ	0xFFD
 33839                           pclatu	equ	0xFFB
 33840                           pclath	equ	0xFFA
 33841                           tblptru	equ	0xFF8
 33842                           tblptrh	equ	0xFF7
 33843                           tblptrl	equ	0xFF6
 33844                           tablat	equ	0xFF5
 33845                           prodh	equ	0xFF4
 33846                           prodl	equ	0xFF3
 33847                           intcon	equ	0xFF2
 33848                           indf0	equ	0xFEF
 33849                           postinc0	equ	0xFEE
 33850                           fsr0h	equ	0xFEA
 33851                           fsr0l	equ	0xFE9
 33852                           wreg	equ	0xFE8
 33853                           indf1	equ	0xFE7
 33854                           postdec1	equ	0xFE5
 33855                           plusw1	equ	0xFE3
 33856                           fsr1h	equ	0xFE2
 33857                           fsr1l	equ	0xFE1
 33858                           indf2	equ	0xFDF
 33859                           postinc2	equ	0xFDE
 33860                           postdec2	equ	0xFDD
 33861                           plusw2	equ	0xFDB
 33862                           fsr2h	equ	0xFDA
 33863                           fsr2l	equ	0xFD9
 33864                           status	equ	0xFD8
 33865                           
 33866 ;; *************** function _encoder_run *****************
 33867 ;; Defined at:
 33868 ;;		line 103 in file "encoder.c"
 33869 ;; Parameters:    Size  Location     Type
 33870 ;;		None
 33871 ;; Auto vars:     Size  Location     Type
 33872 ;;		None
 33873 ;; Return value:  Size  Location     Type
 33874 ;;                  1    wreg      void 
 33875 ;; Registers used:
 33876 ;;		wreg, status,2, status,0
 33877 ;; Tracked objects:
 33878 ;;		On entry : 0/0
 33879 ;;		On exit  : 0/0
 33880 ;;		Unchanged: 0/0
 33881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33886 ;;Total ram usage:        0 bytes
 33887 ;; Hardware stack levels used:    1
 33888 ;; This function calls:
 33889 ;;		Nothing
 33890 ;; This function is called by:
 33891 ;;		_tmr0_isr
 33892 ;; This function uses a non-reentrant model
 33893 ;;
 33894                           
 33895                           	psect	text125
 33896  00F63C                     __ptext125:
 33897                           	opt stack 0
 33898  00F63C                     _encoder_run:
 33899                           	opt stack 16
 33900                           
 33901                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 33902                           
 33903                           ;incstack = 0
 33904  00F63C  5084               	movf	3972,w,c	;volatile
 33905  00F63E  0B07               	andlw	7
 33906  00F640  181A               	xorwf	_enc1,w,c
 33907  00F642  B4D8               	btfsc	status,2,c
 33908  00F644  D03A               	goto	i2l2518
 33909                           
 33910                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 33911  00F646  B084               	btfsc	3972,0,c	;volatile
 33912  00F648  A484               	btfss	3972,2,c	;volatile
 33913  00F64A  D00F               	goto	i2l2521
 33914  00F64C  B01A               	btfsc	_enc1,0,c
 33915  00F64E  D00D               	goto	i2l2521
 33916                           
 33917                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 33918  00F650  0E7F               	movlw	127
 33919  00F652  0100               	movlb	0	; () banked
 33920  00F654  19D3               	xorwf	(_os+3)& (0+255),w,b	;volatile
 33921  00F656  B4D8               	btfsc	status,2,c
 33922  00F658  D008               	goto	i2l2521
 33923                           
 33924                           ; BSR set to: 0
 33925                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 33926  00F65A  2BD3               	incf	(_os+3)& (0+255),f,b	;volatile
 33927                           
 33928                           ; BSR set to: 0
 33929                           ;encoder.c: 113: if(config.beep_duration)
 33930  00F65C  0101               	movlb	1	; () banked
 33931  00F65E  5198               	movf	(_config+21)& (0+255),w,b
 33932  00F660  B4D8               	btfsc	status,2,c
 33933  00F662  D003               	goto	i2l2521
 33934                           
 33935                           ; BSR set to: 1
 33936                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 33937  00F664  8E8B               	bsf	3979,7,c	;volatile
 33938                           
 33939                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 33940  00F666  C198  F0F6         	movff	_config+21,_os+38	;volatile
 33941  00F66A                     i2l2521:
 33942                           
 33943                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 33944                           
 33945                           ; BSR set to: 1
 33946                           
 33947                           ; BSR set to: 1
 33948  00F66A  B484               	btfsc	3972,2,c	;volatile
 33949  00F66C  A084               	btfss	3972,0,c	;volatile
 33950  00F66E  D010               	goto	i2l2524
 33951  00F670  B41A               	btfsc	_enc1,2,c
 33952  00F672  D00E               	goto	i2l2524
 33953                           
 33954                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 33955  00F674  0100               	movlb	0	; () banked
 33956  00F676  51D3               	movf	(_os+3)& (0+255),w,b	;volatile
 33957  00F678  0A80               	xorlw	128
 33958  00F67A  0FFF               	addlw	255
 33959  00F67C  A0D8               	btfss	status,0,c
 33960  00F67E  D008               	goto	i2l2524
 33961                           
 33962                           ; BSR set to: 0
 33963                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 33964  00F680  07D3               	decf	(_os+3)& (0+255),f,b	;volatile
 33965                           
 33966                           ; BSR set to: 0
 33967                           ;encoder.c: 126: if(config.beep_duration)
 33968  00F682  0101               	movlb	1	; () banked
 33969  00F684  5198               	movf	(_config+21)& (0+255),w,b
 33970  00F686  B4D8               	btfsc	status,2,c
 33971  00F688  D003               	goto	i2l2524
 33972                           
 33973                           ; BSR set to: 1
 33974                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 33975  00F68A  8E8B               	bsf	3979,7,c	;volatile
 33976                           
 33977                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 33978  00F68C  C198  F0F6         	movff	_config+21,_os+38	;volatile
 33979  00F690                     i2l2524:
 33980                           
 33981                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 33982                           
 33983                           ; BSR set to: 1
 33984                           
 33985                           ; BSR set to: 1
 33986  00F690  B284               	btfsc	3972,1,c	;volatile
 33987  00F692  B21A               	btfsc	_enc1,1,c
 33988  00F694  D00A               	goto	i2l2526
 33989                           
 33990                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 33991  00F696  0E01               	movlw	1
 33992  00F698  0100               	movlb	0	; () banked
 33993  00F69A  6FD4               	movwf	(_os+4)& (0+255),b	;volatile
 33994                           
 33995                           ;encoder.c: 137: if(config.beep_duration)
 33996  00F69C  0101               	movlb	1	; () banked
 33997  00F69E  5198               	movf	(_config+21)& (0+255),w,b
 33998  00F6A0  B4D8               	btfsc	status,2,c
 33999  00F6A2  D003               	goto	i2l2526
 34000                           
 34001                           ; BSR set to: 1
 34002                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 34003  00F6A4  8E8B               	bsf	3979,7,c	;volatile
 34004                           
 34005                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 34006  00F6A6  C198  F0F6         	movff	_config+21,_os+38	;volatile
 34007  00F6AA                     i2l2526:
 34008                           
 34009                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 34010                           
 34011                           ; BSR set to: 1
 34012  00F6AA  A284               	btfss	3972,1,c	;volatile
 34013  00F6AC  A21A               	btfss	_enc1,1,c
 34014  00F6AE  D002               	goto	i2l2527
 34015                           
 34016                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 34017  00F6B0  0100               	movlb	0	; () banked
 34018  00F6B2  69D4               	setf	(_os+4)& (0+255),b	;volatile
 34019  00F6B4                     i2l2527:
 34020                           
 34021                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 34022                           
 34023                           ; BSR set to: 0
 34024  00F6B4  5084               	movf	3972,w,c	;volatile
 34025  00F6B6  0B07               	andlw	7
 34026  00F6B8  6E1A               	movwf	_enc1,c
 34027  00F6BA                     i2l2518:
 34028                           
 34029                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 34030  00F6BA  5080               	movf	3968,w,c	;volatile
 34031  00F6BC  0B07               	andlw	7
 34032  00F6BE  1819               	xorwf	_enc2,w,c
 34033  00F6C0  B4D8               	btfsc	status,2,c
 34034  00F6C2  D03A               	goto	i2l2528
 34035                           
 34036                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 34037  00F6C4  B480               	btfsc	3968,2,c	;volatile
 34038  00F6C6  A080               	btfss	3968,0,c	;volatile
 34039  00F6C8  D00F               	goto	i2l2531
 34040  00F6CA  B419               	btfsc	_enc2,2,c
 34041  00F6CC  D00D               	goto	i2l2531
 34042                           
 34043                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 34044  00F6CE  0E7F               	movlw	127
 34045  00F6D0  0100               	movlb	0	; () banked
 34046  00F6D2  19D5               	xorwf	(_os+5)& (0+255),w,b	;volatile
 34047  00F6D4  B4D8               	btfsc	status,2,c
 34048  00F6D6  D008               	goto	i2l2531
 34049                           
 34050                           ; BSR set to: 0
 34051                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 34052  00F6D8  2BD5               	incf	(_os+5)& (0+255),f,b	;volatile
 34053                           
 34054                           ; BSR set to: 0
 34055                           ;encoder.c: 160: if(config.beep_duration)
 34056  00F6DA  0101               	movlb	1	; () banked
 34057  00F6DC  5198               	movf	(_config+21)& (0+255),w,b
 34058  00F6DE  B4D8               	btfsc	status,2,c
 34059  00F6E0  D003               	goto	i2l2531
 34060                           
 34061                           ; BSR set to: 1
 34062                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 34063  00F6E2  8E8B               	bsf	3979,7,c	;volatile
 34064                           
 34065                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 34066  00F6E4  C198  F0F6         	movff	_config+21,_os+38	;volatile
 34067  00F6E8                     i2l2531:
 34068                           
 34069                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 34070                           
 34071                           ; BSR set to: 1
 34072                           
 34073                           ; BSR set to: 1
 34074  00F6E8  B080               	btfsc	3968,0,c	;volatile
 34075  00F6EA  A480               	btfss	3968,2,c	;volatile
 34076  00F6EC  D010               	goto	i2l2534
 34077  00F6EE  B019               	btfsc	_enc2,0,c
 34078  00F6F0  D00E               	goto	i2l2534
 34079                           
 34080                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 34081  00F6F2  0100               	movlb	0	; () banked
 34082  00F6F4  51D5               	movf	(_os+5)& (0+255),w,b	;volatile
 34083  00F6F6  0A80               	xorlw	128
 34084  00F6F8  0FFF               	addlw	255
 34085  00F6FA  A0D8               	btfss	status,0,c
 34086  00F6FC  D008               	goto	i2l2534
 34087                           
 34088                           ; BSR set to: 0
 34089                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 34090  00F6FE  07D5               	decf	(_os+5)& (0+255),f,b	;volatile
 34091                           
 34092                           ; BSR set to: 0
 34093                           ;encoder.c: 173: if(config.beep_duration)
 34094  00F700  0101               	movlb	1	; () banked
 34095  00F702  5198               	movf	(_config+21)& (0+255),w,b
 34096  00F704  B4D8               	btfsc	status,2,c
 34097  00F706  D003               	goto	i2l2534
 34098                           
 34099                           ; BSR set to: 1
 34100                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 34101  00F708  8E8B               	bsf	3979,7,c	;volatile
 34102                           
 34103                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 34104  00F70A  C198  F0F6         	movff	_config+21,_os+38	;volatile
 34105  00F70E                     i2l2534:
 34106                           
 34107                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 34108                           
 34109                           ; BSR set to: 1
 34110                           
 34111                           ; BSR set to: 1
 34112  00F70E  B280               	btfsc	3968,1,c	;volatile
 34113  00F710  B219               	btfsc	_enc2,1,c
 34114  00F712  D00A               	goto	i2l2536
 34115                           
 34116                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 34117  00F714  0E01               	movlw	1
 34118  00F716  0100               	movlb	0	; () banked
 34119  00F718  6FD6               	movwf	(_os+6)& (0+255),b	;volatile
 34120                           
 34121                           ;encoder.c: 184: if(config.beep_duration)
 34122  00F71A  0101               	movlb	1	; () banked
 34123  00F71C  5198               	movf	(_config+21)& (0+255),w,b
 34124  00F71E  B4D8               	btfsc	status,2,c
 34125  00F720  D003               	goto	i2l2536
 34126                           
 34127                           ; BSR set to: 1
 34128                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 34129  00F722  8E8B               	bsf	3979,7,c	;volatile
 34130                           
 34131                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 34132  00F724  C198  F0F6         	movff	_config+21,_os+38	;volatile
 34133  00F728                     i2l2536:
 34134                           
 34135                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 34136                           
 34137                           ; BSR set to: 1
 34138  00F728  A280               	btfss	3968,1,c	;volatile
 34139  00F72A  A219               	btfss	_enc2,1,c
 34140  00F72C  D002               	goto	i2l2537
 34141                           
 34142                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 34143  00F72E  0100               	movlb	0	; () banked
 34144  00F730  69D6               	setf	(_os+6)& (0+255),b	;volatile
 34145  00F732                     i2l2537:
 34146                           
 34147                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 34148                           
 34149                           ; BSR set to: 0
 34150  00F732  5080               	movf	3968,w,c	;volatile
 34151  00F734  0B07               	andlw	7
 34152  00F736  6E19               	movwf	_enc2,c
 34153  00F738                     i2l2528:
 34154                           
 34155                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 34156  00F738  0100               	movlb	0	; () banked
 34157  00F73A  51F6               	movf	(_os+38)& (0+255),w,b	;volatile
 34158  00F73C  B4D8               	btfsc	status,2,c
 34159  00F73E  0012               	return	
 34160                           
 34161                           ; BSR set to: 0
 34162                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 34163  00F740  07F6               	decf	(_os+38)& (0+255),f,b	;volatile
 34164                           
 34165                           ; BSR set to: 0
 34166                           ;encoder.c: 203: if(!os.beep_count)
 34167  00F742  51F6               	movf	(_os+38)& (0+255),w,b	;volatile
 34168  00F744  A4D8               	btfss	status,2,c
 34169  00F746  0012               	return	
 34170                           
 34171                           ; BSR set to: 0
 34172                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 34173  00F748  9E8B               	bcf	3979,7,c	;volatile
 34174                           
 34175                           ; BSR set to: 0
 34176  00F74A  0012               	return	
 34177  00F74C                     __end_of_encoder_run:
 34178                           	opt stack 0
 34179                           tosu	equ	0xFFF
 34180                           tosh	equ	0xFFE
 34181                           tosl	equ	0xFFD
 34182                           pclatu	equ	0xFFB
 34183                           pclath	equ	0xFFA
 34184                           tblptru	equ	0xFF8
 34185                           tblptrh	equ	0xFF7
 34186                           tblptrl	equ	0xFF6
 34187                           tablat	equ	0xFF5
 34188                           prodh	equ	0xFF4
 34189                           prodl	equ	0xFF3
 34190                           intcon	equ	0xFF2
 34191                           indf0	equ	0xFEF
 34192                           postinc0	equ	0xFEE
 34193                           fsr0h	equ	0xFEA
 34194                           fsr0l	equ	0xFE9
 34195                           wreg	equ	0xFE8
 34196                           indf1	equ	0xFE7
 34197                           postdec1	equ	0xFE5
 34198                           plusw1	equ	0xFE3
 34199                           fsr1h	equ	0xFE2
 34200                           fsr1l	equ	0xFE1
 34201                           indf2	equ	0xFDF
 34202                           postinc2	equ	0xFDE
 34203                           postdec2	equ	0xFDD
 34204                           plusw2	equ	0xFDB
 34205                           fsr2h	equ	0xFDA
 34206                           fsr2l	equ	0xFD9
 34207                           status	equ	0xFD8
 34208                           
 34209 ;; *************** function _motor_isr *****************
 34210 ;; Defined at:
 34211 ;;		line 273 in file "motor.c"
 34212 ;; Parameters:    Size  Location     Type
 34213 ;;		None
 34214 ;; Auto vars:     Size  Location     Type
 34215 ;;  steps_remain    4   20[COMRAM] unsigned long 
 34216 ;;  steps_until_    2   18[COMRAM] unsigned int 
 34217 ;;  steps_until_    2   16[COMRAM] unsigned int 
 34218 ;; Return value:  Size  Location     Type
 34219 ;;                  1    wreg      void 
 34220 ;; Registers used:
 34221 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34222 ;; Tracked objects:
 34223 ;;		On entry : 0/0
 34224 ;;		On exit  : 0/0
 34225 ;;		Unchanged: 0/0
 34226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34228 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34229 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34230 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34231 ;;Total ram usage:       24 bytes
 34232 ;; Hardware stack levels used:    1
 34233 ;; This function calls:
 34234 ;;		Nothing
 34235 ;; This function is called by:
 34236 ;;		_SYS_InterruptHigh
 34237 ;; This function uses a non-reentrant model
 34238 ;;
 34239                           
 34240                           	psect	text126
 34241  00B756                     __ptext126:
 34242                           	opt stack 0
 34243  00B756                     _motor_isr:
 34244                           	opt stack 17
 34245                           
 34246                           ;motor.c: 275: uint32_t steps_remaining;;motor.c: 276: uint16_t steps_until_standstill;;
      +                          motor.c: 277: uint16_t steps_until_standstill_if_accelerate;;motor.c: 280: PIR1bits.TMR2
      +                          IF = 0;
 34247                           
 34248                           ; BSR set to: 0
 34249                           ;incstack = 0
 34250  00B756  929E               	bcf	3998,1,c	;volatile
 34251                           
 34252                           ;motor.c: 282: if(motor_mode==MOTOR_MODE_MANUAL)
 34253  00B758  501C               	movf	_motor_mode,w,c
 34254  00B75A  A4D8               	btfss	status,2,c
 34255  00B75C  D019               	goto	i2l2383
 34256                           
 34257                           ;motor.c: 283: {;motor.c: 285: if(LATBbits.LB1)
 34258  00B75E  A28A               	btfss	3978,1,c	;volatile
 34259  00B760  D016               	goto	i2l2380
 34260                           
 34261                           ;motor.c: 286: {;motor.c: 288: LATBbits.LB1 = 0;
 34262  00B762  928A               	bcf	3978,1,c	;volatile
 34263                           
 34264                           ;motor.c: 291: if(motor_current_stepcount==motor_final_stepcount)
 34265  00B764  0101               	movlb	1	; () banked
 34266  00B766  514B               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 34267  00B768  180D               	xorwf	_motor_current_stepcount,w,c	;volatile
 34268  00B76A  E109               	bnz	i2u1581_41
 34269  00B76C  514C               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 34270  00B76E  180E               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 34271  00B770  E106               	bnz	i2u1581_41
 34272  00B772  514D               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 34273  00B774  180F               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 34274  00B776  E103               	bnz	i2u1581_41
 34275  00B778  514E               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 34276  00B77A  1810               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 34277  00B77C  A4D8               	btfss	status,2,c
 34278  00B77E                     i2u1581_41:
 34279  00B77E  0012               	return	
 34280                           
 34281                           ; BSR set to: 1
 34282                           ;motor.c: 292: {;motor.c: 295: T2CONbits.TMR2ON = 0;
 34283  00B780  94CA               	bcf	4042,2,c	;volatile
 34284                           
 34285                           ;motor.c: 297: PIR1bits.TMR2IF = 0;
 34286  00B782  929E               	bcf	3998,1,c	;volatile
 34287                           
 34288                           ;motor.c: 298: PIE1bits.TMR2IE = 0;
 34289  00B784  929D               	bcf	3997,1,c	;volatile
 34290                           
 34291                           ; BSR set to: 1
 34292                           ;motor.c: 299: os.busy = 0;
 34293  00B786  0E00               	movlw	0
 34294  00B788  0100               	movlb	0	; () banked
 34295  00B78A  6FDE               	movwf	(_os+14)& (0+255),b	;volatile
 34296                           
 34297                           ; BSR set to: 0
 34298                           ;motor.c: 300: };motor.c: 303: return;
 34299                           
 34300                           ; BSR set to: 0
 34301  00B78C  0012               	return	
 34302  00B78E                     i2l2380:
 34303                           
 34304                           ;motor.c: 305: else;motor.c: 306: {;motor.c: 308: LATBbits.LB1 = 1;
 34305  00B78E  828A               	bsf	3978,1,c	;volatile
 34306  00B790                     i2l2383:
 34307                           
 34308                           ;motor.c: 309: };motor.c: 310: };motor.c: 312: ++motor_current_stepcount;
 34309  00B790  0E01               	movlw	1
 34310  00B792  260D               	addwf	_motor_current_stepcount,f,c	;volatile
 34311  00B794  0E00               	movlw	0
 34312  00B796  220E               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 34313  00B798  220F               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 34314  00B79A  2210               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 34315                           
 34316                           ;motor.c: 315: os.current_position_in_steps += motor_direction;
 34317  00B79C  501B               	movf	_motor_direction,w,c
 34318  00B79E  6E2E               	movwf	??_motor_isr& (0+255),c
 34319  00B7A0  0E00               	movlw	0
 34320  00B7A2  BE2E               	btfsc	??_motor_isr& (0+255),7,c
 34321  00B7A4  0EFF               	movlw	255
 34322  00B7A6  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 34323  00B7A8  6E30               	movwf	(??_motor_isr+2)& (0+255),c
 34324  00B7AA  6E31               	movwf	(??_motor_isr+3)& (0+255),c
 34325  00B7AC  502E               	movf	??_motor_isr,w,c
 34326  00B7AE  0100               	movlb	0	; () banked
 34327  00B7B0  27D7               	addwf	(_os+7)& (0+255),f,b	;volatile
 34328  00B7B2  502F               	movf	??_motor_isr+1,w,c
 34329  00B7B4  23D8               	addwfc	(_os+8)& (0+255),f,b	;volatile
 34330  00B7B6  5030               	movf	??_motor_isr+2,w,c
 34331  00B7B8  23D9               	addwfc	(_os+9)& (0+255),f,b	;volatile
 34332  00B7BA  5031               	movf	??_motor_isr+3,w,c
 34333  00B7BC  23DA               	addwfc	(_os+10)& (0+255),f,b	;volatile
 34334                           
 34335                           ;motor.c: 316: if(os.current_position_in_steps==config.full_circle_in_steps)
 34336  00B7BE  0101               	movlb	1	; () banked
 34337  00B7C0  5183               	movf	_config& (0+255),w,b
 34338  00B7C2  0100               	movlb	0	; () banked
 34339  00B7C4  19D7               	xorwf	(_os+7)& (0+255),w,b	;volatile
 34340  00B7C6  E118               	bnz	i2l16286
 34341  00B7C8  0101               	movlb	1	; () banked
 34342  00B7CA  5184               	movf	(_config+1)& (0+255),w,b
 34343  00B7CC  0100               	movlb	0	; () banked
 34344  00B7CE  19D8               	xorwf	(_os+8)& (0+255),w,b	;volatile
 34345  00B7D0  E113               	bnz	i2l16286
 34346  00B7D2  0101               	movlb	1	; () banked
 34347  00B7D4  5185               	movf	(_config+2)& (0+255),w,b
 34348  00B7D6  0100               	movlb	0	; () banked
 34349  00B7D8  19D9               	xorwf	(_os+9)& (0+255),w,b	;volatile
 34350  00B7DA  E10E               	bnz	i2l16286
 34351  00B7DC  0101               	movlb	1	; () banked
 34352  00B7DE  5186               	movf	(_config+3)& (0+255),w,b
 34353  00B7E0  0100               	movlb	0	; () banked
 34354  00B7E2  19DA               	xorwf	(_os+10)& (0+255),w,b	;volatile
 34355  00B7E4  A4D8               	btfss	status,2,c
 34356  00B7E6  D008               	goto	i2l2384
 34357                           
 34358                           ; BSR set to: 0
 34359                           ;motor.c: 317: os.current_position_in_steps = 0;
 34360  00B7E8  0E00               	movlw	0
 34361  00B7EA  6FD7               	movwf	(_os+7)& (0+255),b	;volatile
 34362  00B7EC  0E00               	movlw	0
 34363  00B7EE  6FD8               	movwf	(_os+8)& (0+255),b	;volatile
 34364  00B7F0  0E00               	movlw	0
 34365  00B7F2  6FD9               	movwf	(_os+9)& (0+255),b	;volatile
 34366  00B7F4  0E00               	movlw	0
 34367  00B7F6  6FDA               	movwf	(_os+10)& (0+255),b	;volatile
 34368  00B7F8                     i2l2384:
 34369  00B7F8                     i2l16286:
 34370                           
 34371                           ; BSR set to: 0
 34372                           ;motor.c: 318: if(os.current_position_in_steps==0xFFFFFFFF)
 34373  00B7F8  29D7               	incf	(_os+7)& (0+255),w,b	;volatile
 34374  00B7FA  E11B               	bnz	i2l2385
 34375  00B7FC  29D8               	incf	(_os+8)& (0+255),w,b	;volatile
 34376  00B7FE  E119               	bnz	i2l2385
 34377  00B800  29D9               	incf	(_os+9)& (0+255),w,b	;volatile
 34378  00B802  E117               	bnz	i2l2385
 34379  00B804  29DA               	incf	(_os+10)& (0+255),w,b	;volatile
 34380  00B806  A4D8               	btfss	status,2,c
 34381  00B808  D014               	goto	i2l2385
 34382                           
 34383                           ; BSR set to: 0
 34384                           ;motor.c: 319: os.current_position_in_steps = (config.full_circle_in_steps-1);
 34385  00B80A  0EFF               	movlw	255
 34386  00B80C  0101               	movlb	1	; () banked
 34387  00B80E  2583               	addwf	_config& (0+255),w,b
 34388  00B810  0100               	movlb	0	; () banked
 34389  00B812  6FD7               	movwf	(_os+7)& (0+255),b	;volatile
 34390  00B814  0EFF               	movlw	255
 34391  00B816  0101               	movlb	1	; () banked
 34392  00B818  2184               	addwfc	(_config+1)& (0+255),w,b
 34393  00B81A  0100               	movlb	0	; () banked
 34394  00B81C  6FD8               	movwf	(_os+8)& (0+255),b	;volatile
 34395  00B81E  0EFF               	movlw	255
 34396  00B820  0101               	movlb	1	; () banked
 34397  00B822  2185               	addwfc	(_config+2)& (0+255),w,b
 34398  00B824  0100               	movlb	0	; () banked
 34399  00B826  6FD9               	movwf	(_os+9)& (0+255),b	;volatile
 34400  00B828  0EFF               	movlw	255
 34401  00B82A  0101               	movlb	1	; () banked
 34402  00B82C  2186               	addwfc	(_config+3)& (0+255),w,b
 34403  00B82E  0100               	movlb	0	; () banked
 34404  00B830  6FDA               	movwf	(_os+10)& (0+255),b	;volatile
 34405  00B832                     i2l2385:
 34406                           
 34407                           ; BSR set to: 0
 34408                           ;motor.c: 322: if(motor_current_stepcount==motor_next_speed_check)
 34409  00B832  0101               	movlb	1	; () banked
 34410  00B834  5147               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 34411  00B836  180D               	xorwf	_motor_current_stepcount,w,c	;volatile
 34412  00B838  E109               	bnz	i2u1584_41
 34413  00B83A  5148               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 34414  00B83C  180E               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 34415  00B83E  E106               	bnz	i2u1584_41
 34416  00B840  5149               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 34417  00B842  180F               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 34418  00B844  E103               	bnz	i2u1584_41
 34419  00B846  514A               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 34420  00B848  1810               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 34421  00B84A  A4D8               	btfss	status,2,c
 34422  00B84C                     i2u1584_41:
 34423  00B84C  D20F               	goto	i2l2398
 34424                           
 34425                           ; BSR set to: 1
 34426                           ;motor.c: 323: {;motor.c: 325: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 34427  00B84E  C00D  F02E         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 34428  00B852  C00E  F02F         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 34429  00B856  C00F  F030         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 34430  00B85A  C010  F031         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 34431  00B85E  1E2E               	comf	??_motor_isr,f,c
 34432  00B860  1E2F               	comf	??_motor_isr+1,f,c
 34433  00B862  1E30               	comf	??_motor_isr+2,f,c
 34434  00B864  1E31               	comf	??_motor_isr+3,f,c
 34435  00B866  2A2E               	incf	??_motor_isr,f,c
 34436  00B868  0E00               	movlw	0
 34437  00B86A  222F               	addwfc	??_motor_isr+1,f,c
 34438  00B86C  2230               	addwfc	??_motor_isr+2,f,c
 34439  00B86E  2231               	addwfc	??_motor_isr+3,f,c
 34440  00B870  514B               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 34441  00B872  242E               	addwf	??_motor_isr,w,c
 34442  00B874  6E42               	movwf	motor_isr@steps_remaining,c
 34443  00B876  514C               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 34444  00B878  202F               	addwfc	??_motor_isr+1,w,c
 34445  00B87A  6E43               	movwf	motor_isr@steps_remaining+1,c
 34446  00B87C  514D               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 34447  00B87E  2030               	addwfc	??_motor_isr+2,w,c
 34448  00B880  6E44               	movwf	motor_isr@steps_remaining+2,c
 34449  00B882  514E               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 34450  00B884  2031               	addwfc	??_motor_isr+3,w,c
 34451  00B886  6E45               	movwf	motor_isr@steps_remaining+3,c
 34452                           
 34453                           ; BSR set to: 1
 34454                           ;motor.c: 326: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 34455  00B888  90D8               	bcf	status,0,c
 34456  00B88A  0100               	movlb	0	; () banked
 34457  00B88C  35CA               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 34458  00B88E  6EF6               	movwf	tblptrl,c
 34459  00B890  35CB               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34460  00B892  6EF7               	movwf	tblptrh,c
 34461  00B894  0E61               	movlw	low _motor_steps_lookup
 34462  00B896  26F6               	addwf	tblptrl,f,c
 34463  00B898  0E94               	movlw	high _motor_steps_lookup
 34464  00B89A  22F7               	addwfc	tblptrh,f,c
 34465  00B89C                     	if	1	;There are 3 active tblptr bytes
 34466  00B89C  6AF8               	clrf	tblptru,c
 34467  00B89E  0E00               	movlw	low (__mediumconst shr (0+16))
 34468  00B8A0  22F8               	addwfc	tblptru,f,c
 34469  00B8A2                     	endif
 34470  00B8A2  0009               	tblrd		*+
 34471  00B8A4  CFF5 F03E          	movff	tablat,motor_isr@steps_until_standstill
 34472  00B8A8  000A               	tblrd		*-
 34473  00B8AA  CFF5 F03F          	movff	tablat,motor_isr@steps_until_standstill+1
 34474                           
 34475                           ; BSR set to: 0
 34476                           ;motor.c: 327: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 34477  00B8AE  C0CA  F02E         	movff	_motor_current_speed,??_motor_isr	;volatile
 34478  00B8B2  C0CB  F02F         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 34479  00B8B6  90D8               	bcf	status,0,c
 34480  00B8B8  362E               	rlcf	??_motor_isr,f,c
 34481  00B8BA  362F               	rlcf	??_motor_isr+1,f,c
 34482  00B8BC  0E04               	movlw	4
 34483  00B8BE  262E               	addwf	??_motor_isr,f,c
 34484  00B8C0  0E00               	movlw	0
 34485  00B8C2  222F               	addwfc	??_motor_isr+1,f,c
 34486  00B8C4  0E61               	movlw	low _motor_steps_lookup
 34487  00B8C6  242E               	addwf	??_motor_isr,w,c
 34488  00B8C8  6EF6               	movwf	tblptrl,c
 34489  00B8CA  0E94               	movlw	high _motor_steps_lookup
 34490  00B8CC  202F               	addwfc	??_motor_isr+1,w,c
 34491  00B8CE  6EF7               	movwf	tblptrh,c
 34492  00B8D0                     	if	1	;There are 3 active tblptr bytes
 34493  00B8D0  6AF8               	clrf	tblptru,c
 34494  00B8D2  0E00               	movlw	low (__mediumconst shr (0+16))
 34495  00B8D4  22F8               	addwfc	tblptru,f,c
 34496  00B8D6                     	endif
 34497  00B8D6  0009               	tblrd		*+
 34498  00B8D8  CFF5 F040          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 34499  00B8DC  000A               	tblrd		*-
 34500  00B8DE  CFF5 F041          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 34501                           
 34502                           ;motor.c: 329: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 34503  00B8E2  51CA               	movf	_motor_current_speed& (0+255),w,b	;volatile
 34504  00B8E4  0101               	movlb	1	; () banked
 34505  00B8E6  5D6B               	subwf	_motor_maximum_speed& (0+255),w,b
 34506  00B8E8  0100               	movlb	0	; () banked
 34507  00B8EA  51CB               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34508  00B8EC  0101               	movlb	1	; () banked
 34509  00B8EE  596C               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 34510  00B8F0  A0D8               	btfss	status,0,c
 34511  00B8F2  D010               	goto	i2u1586_40
 34512                           
 34513                           ; BSR set to: 1
 34514  00B8F4  503E               	movf	motor_isr@steps_until_standstill,w,c
 34515  00B8F6  6E2E               	movwf	??_motor_isr& (0+255),c
 34516  00B8F8  503F               	movf	motor_isr@steps_until_standstill+1,w,c
 34517  00B8FA  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 34518  00B8FC  6A30               	clrf	(??_motor_isr+2)& (0+255),c
 34519  00B8FE  6A31               	clrf	(??_motor_isr+3)& (0+255),c
 34520  00B900  5042               	movf	motor_isr@steps_remaining,w,c
 34521  00B902  5C2E               	subwf	??_motor_isr,w,c
 34522  00B904  5043               	movf	motor_isr@steps_remaining+1,w,c
 34523  00B906  582F               	subwfb	??_motor_isr+1,w,c
 34524  00B908  5044               	movf	motor_isr@steps_remaining+2,w,c
 34525  00B90A  5830               	subwfb	??_motor_isr+2,w,c
 34526  00B90C  5045               	movf	motor_isr@steps_remaining+3,w,c
 34527  00B90E  5831               	subwfb	??_motor_isr+3,w,c
 34528  00B910  A0D8               	btfss	status,0,c
 34529  00B912  D0E0               	goto	i2l2387
 34530  00B914                     i2u1586_40:
 34531                           
 34532                           ; BSR set to: 1
 34533                           ;motor.c: 330: {;motor.c: 332: if(motor_current_speed>0)
 34534                           
 34535                           ; BSR set to: 1
 34536  00B914  0100               	movlb	0	; () banked
 34537  00B916  51CA               	movf	_motor_current_speed& (0+255),w,b	;volatile
 34538  00B918  11CB               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34539  00B91A  B4D8               	btfsc	status,2,c
 34540  00B91C  D003               	goto	i2l2390
 34541                           
 34542                           ; BSR set to: 0
 34543                           ;motor.c: 333: {;motor.c: 334: --motor_current_speed;
 34544  00B91E  07CA               	decf	_motor_current_speed& (0+255),f,b	;volatile
 34545  00B920  A0D8               	btfss	status,0,c
 34546  00B922  07CB               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 34547  00B924                     i2l2390:
 34548                           
 34549                           ; BSR set to: 0
 34550                           ;motor.c: 335: };motor.c: 338: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 34551                           
 34552                           ; BSR set to: 0
 34553  00B924  041C               	decf	_motor_mode,w,c
 34554  00B926  A4D8               	btfss	status,2,c
 34555  00B928  D024               	goto	i2l2391
 34556                           
 34557                           ; BSR set to: 0
 34558  00B92A  0E2F               	movlw	low _motor_postscaler_lookup
 34559  00B92C  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34560  00B92E  6EF6               	movwf	tblptrl,c
 34561  00B930  0E98               	movlw	high _motor_postscaler_lookup
 34562  00B932  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34563  00B934  6EF7               	movwf	tblptrh,c
 34564  00B936                     	if	1	;There are 3 active tblptr bytes
 34565  00B936  6AF8               	clrf	tblptru,c
 34566  00B938  0E00               	movlw	low (__mediumconst shr (0+16))
 34567  00B93A  22F8               	addwfc	tblptru,f,c
 34568  00B93C                     	endif
 34569  00B93C  0008               	tblrd		*
 34570  00B93E  50F5               	movf	tablat,w,c
 34571  00B940  0900               	iorlw	0
 34572  00B942  B4D8               	btfsc	status,2,c
 34573  00B944  D016               	goto	i2l2391
 34574                           
 34575                           ; BSR set to: 0
 34576                           ;motor.c: 339: {;motor.c: 341: motor_mode = MOTOR_MODE_MANUAL;
 34577  00B946  0E00               	movlw	0
 34578  00B948  6E1C               	movwf	_motor_mode,c
 34579                           
 34580                           ; BSR set to: 0
 34581                           ;motor.c: 344: LATBbits.LB1 = 1;
 34582  00B94A  828A               	bsf	3978,1,c	;volatile
 34583                           
 34584                           ;motor.c: 345: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 34585  00B94C  0E55               	movlw	85
 34586  00B94E  6EA7               	movwf	4007,c	;volsfr
 34587  00B950  0EAA               	movlw	170
 34588  00B952  6EA7               	movwf	4007,c	;volsfr
 34589                           
 34590                           ; BSR set to: 0
 34591  00B954  010E               	movlb	14	; () banked
 34592  00B956  91BF               	bcf	191,0,b	;volatile
 34593                           
 34594                           ;motor.c: 346: RPOR4 = 0;
 34595  00B958  0E00               	movlw	0
 34596  00B95A  6FC4               	movwf	196,b	;volatile
 34597                           
 34598                           ;motor.c: 347: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 34599  00B95C  0E55               	movlw	85
 34600  00B95E  6EA7               	movwf	4007,c	;volsfr
 34601  00B960  0EAA               	movlw	170
 34602  00B962  6EA7               	movwf	4007,c	;volsfr
 34603                           
 34604                           ; BSR set to: 14
 34605  00B964  81BF               	bsf	191,0,b	;volatile
 34606                           
 34607                           ;motor.c: 350: TMR2 = 0;
 34608  00B966  0E00               	movlw	0
 34609  00B968  6ECC               	movwf	4044,c	;volatile
 34610                           
 34611                           ; BSR set to: 14
 34612                           ;motor.c: 353: CCP1CONbits.CCP1M = 0b0000;
 34613  00B96A  90BA               	bcf	4026,0,c	;volatile
 34614  00B96C  92BA               	bcf	4026,1,c	;volatile
 34615  00B96E  94BA               	bcf	4026,2,c	;volatile
 34616  00B970  96BA               	bcf	4026,3,c	;volatile
 34617  00B972                     i2l2391:
 34618                           
 34619                           ;motor.c: 354: };motor.c: 358: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 34620                           
 34621                           ; BSR set to: 14
 34622  00B972  0EFD               	movlw	low _motor_prescaler_lookup
 34623  00B974  0100               	movlb	0	; () banked
 34624  00B976  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34625  00B978  6EF6               	movwf	tblptrl,c
 34626  00B97A  0E9B               	movlw	high _motor_prescaler_lookup
 34627  00B97C  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34628  00B97E  6EF7               	movwf	tblptrh,c
 34629  00B980                     	if	1	;There are 3 active tblptr bytes
 34630  00B980  6AF8               	clrf	tblptru,c
 34631  00B982  0E00               	movlw	low (__mediumconst shr (0+16))
 34632  00B984  22F8               	addwfc	tblptru,f,c
 34633  00B986                     	endif
 34634  00B986  0008               	tblrd		*
 34635  00B988  CFF5 F02E          	movff	tablat,??_motor_isr
 34636  00B98C  50CA               	movf	4042,w,c	;volatile
 34637  00B98E  182E               	xorwf	??_motor_isr,w,c
 34638  00B990  0BFC               	andlw	-4
 34639  00B992  182E               	xorwf	??_motor_isr,w,c
 34640  00B994  6ECA               	movwf	4042,c	;volatile
 34641                           
 34642                           ; BSR set to: 0
 34643                           ;motor.c: 360: PR2 = motor_period_lookup[motor_current_speed];
 34644  00B996  0E16               	movlw	low _motor_period_lookup
 34645  00B998  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34646  00B99A  6EF6               	movwf	tblptrl,c
 34647  00B99C  0E9A               	movlw	high _motor_period_lookup
 34648  00B99E  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34649  00B9A0  6EF7               	movwf	tblptrh,c
 34650  00B9A2                     	if	1	;There are 3 active tblptr bytes
 34651  00B9A2  6AF8               	clrf	tblptru,c
 34652  00B9A4  0E00               	movlw	low (__mediumconst shr (0+16))
 34653  00B9A6  22F8               	addwfc	tblptru,f,c
 34654  00B9A8                     	endif
 34655  00B9A8  0008               	tblrd		*
 34656  00B9AA  CFF5 FFCB          	movff	tablat,4043	;volatile
 34657                           
 34658                           ; BSR set to: 0
 34659                           ;motor.c: 362: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 34660  00B9AE  0E2F               	movlw	low _motor_postscaler_lookup
 34661  00B9B0  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34662  00B9B2  6EF6               	movwf	tblptrl,c
 34663  00B9B4  0E98               	movlw	high _motor_postscaler_lookup
 34664  00B9B6  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34665  00B9B8  6EF7               	movwf	tblptrh,c
 34666  00B9BA                     	if	1	;There are 3 active tblptr bytes
 34667  00B9BA  6AF8               	clrf	tblptru,c
 34668  00B9BC  0E00               	movlw	low (__mediumconst shr (0+16))
 34669  00B9BE  22F8               	addwfc	tblptru,f,c
 34670  00B9C0                     	endif
 34671  00B9C0  0008               	tblrd		*
 34672  00B9C2  CFF5 F02E          	movff	tablat,??_motor_isr
 34673  00B9C6  462E               	rlncf	??_motor_isr,f,c
 34674  00B9C8  462E               	rlncf	??_motor_isr,f,c
 34675  00B9CA  462E               	rlncf	??_motor_isr,f,c
 34676  00B9CC  50CA               	movf	4042,w,c	;volatile
 34677  00B9CE  182E               	xorwf	??_motor_isr,w,c
 34678  00B9D0  0B87               	andlw	-121
 34679  00B9D2  182E               	xorwf	??_motor_isr,w,c
 34680  00B9D4  6ECA               	movwf	4042,c	;volatile
 34681                           
 34682                           ; BSR set to: 0
 34683                           ;motor.c: 364: CCPR1L = PR2>>1;
 34684  00B9D6  90D8               	bcf	status,0,c
 34685  00B9D8  30CB               	rrcf	4043,w,c	;volatile
 34686  00B9DA  6EBB               	movwf	4027,c	;volatile
 34687                           
 34688                           ; BSR set to: 0
 34689                           ;motor.c: 367: if(motor_current_speed>0)
 34690  00B9DC  51CA               	movf	_motor_current_speed& (0+255),w,b	;volatile
 34691  00B9DE  11CB               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34692  00B9E0  B4D8               	btfsc	status,2,c
 34693  00B9E2  D058               	goto	i2l2392
 34694                           
 34695                           ; BSR set to: 0
 34696                           ;motor.c: 368: {;motor.c: 369: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 34697  00B9E4  0EFE               	movlw	254
 34698  00B9E6  6E2E               	movwf	??_motor_isr& (0+255),c
 34699  00B9E8  0EFF               	movlw	255
 34700  00B9EA  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 34701  00B9EC  C0CA  F030         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 34702  00B9F0  C0CB  F031         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 34703  00B9F4  90D8               	bcf	status,0,c
 34704  00B9F6  3630               	rlcf	??_motor_isr+2,f,c
 34705  00B9F8  3631               	rlcf	??_motor_isr+3,f,c
 34706  00B9FA  502E               	movf	??_motor_isr,w,c
 34707  00B9FC  2630               	addwf	??_motor_isr+2,f,c
 34708  00B9FE  502F               	movf	??_motor_isr+1,w,c
 34709  00BA00  2231               	addwfc	??_motor_isr+3,f,c
 34710  00BA02  0E61               	movlw	low _motor_steps_lookup
 34711  00BA04  2430               	addwf	??_motor_isr+2,w,c
 34712  00BA06  6EF6               	movwf	tblptrl,c
 34713  00BA08  0E94               	movlw	high _motor_steps_lookup
 34714  00BA0A  2031               	addwfc	??_motor_isr+3,w,c
 34715  00BA0C  6EF7               	movwf	tblptrh,c
 34716  00BA0E                     	if	1	;There are 3 active tblptr bytes
 34717  00BA0E  6AF8               	clrf	tblptru,c
 34718  00BA10  0E00               	movlw	low (__mediumconst shr (0+16))
 34719  00BA12  22F8               	addwfc	tblptru,f,c
 34720  00BA14                     	endif
 34721  00BA14  0009               	tblrd		*+
 34722  00BA16  CFF5 F032          	movff	tablat,??_motor_isr+4
 34723  00BA1A  0009               	tblrd		*+
 34724  00BA1C  CFF5 F033          	movff	tablat,??_motor_isr+5
 34725  00BA20  5032               	movf	??_motor_isr+4,w,c
 34726  00BA22  6E34               	movwf	(??_motor_isr+6)& (0+255),c
 34727  00BA24  5033               	movf	??_motor_isr+5,w,c
 34728  00BA26  6E35               	movwf	(??_motor_isr+7)& (0+255),c
 34729  00BA28  6A36               	clrf	(??_motor_isr+8)& (0+255),c
 34730  00BA2A  6A37               	clrf	(??_motor_isr+9)& (0+255),c
 34731  00BA2C  1E34               	comf	??_motor_isr+6,f,c
 34732  00BA2E  1E35               	comf	??_motor_isr+7,f,c
 34733  00BA30  1E36               	comf	??_motor_isr+8,f,c
 34734  00BA32  1E37               	comf	??_motor_isr+9,f,c
 34735  00BA34  2A34               	incf	??_motor_isr+6,f,c
 34736  00BA36  0E00               	movlw	0
 34737  00BA38  2235               	addwfc	??_motor_isr+7,f,c
 34738  00BA3A  2236               	addwfc	??_motor_isr+8,f,c
 34739  00BA3C  2237               	addwfc	??_motor_isr+9,f,c
 34740  00BA3E  90D8               	bcf	status,0,c
 34741  00BA40  35CA               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 34742  00BA42  6EF6               	movwf	tblptrl,c
 34743  00BA44  35CB               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34744  00BA46  6EF7               	movwf	tblptrh,c
 34745  00BA48  0E61               	movlw	low _motor_steps_lookup
 34746  00BA4A  26F6               	addwf	tblptrl,f,c
 34747  00BA4C  0E94               	movlw	high _motor_steps_lookup
 34748  00BA4E  22F7               	addwfc	tblptrh,f,c
 34749  00BA50                     	if	1	;There are 3 active tblptr bytes
 34750  00BA50  6AF8               	clrf	tblptru,c
 34751  00BA52  0E00               	movlw	low (__mediumconst shr (0+16))
 34752  00BA54  22F8               	addwfc	tblptru,f,c
 34753  00BA56                     	endif
 34754  00BA56  0009               	tblrd		*+
 34755  00BA58  CFF5 F038          	movff	tablat,??_motor_isr+10
 34756  00BA5C  0009               	tblrd		*+
 34757  00BA5E  CFF5 F039          	movff	tablat,??_motor_isr+11
 34758  00BA62  5038               	movf	??_motor_isr+10,w,c
 34759  00BA64  2434               	addwf	??_motor_isr+6,w,c
 34760  00BA66  6E3A               	movwf	(??_motor_isr+12)& (0+255),c
 34761  00BA68  5039               	movf	??_motor_isr+11,w,c
 34762  00BA6A  2035               	addwfc	??_motor_isr+7,w,c
 34763  00BA6C  6E3B               	movwf	(??_motor_isr+13)& (0+255),c
 34764  00BA6E  0E00               	movlw	0
 34765  00BA70  2036               	addwfc	??_motor_isr+8,w,c
 34766  00BA72  6E3C               	movwf	(??_motor_isr+14)& (0+255),c
 34767  00BA74  0E00               	movlw	0
 34768  00BA76  2037               	addwfc	??_motor_isr+9,w,c
 34769  00BA78  6E3D               	movwf	(??_motor_isr+15)& (0+255),c
 34770  00BA7A  500D               	movf	_motor_current_stepcount,w,c	;volatile
 34771  00BA7C  243A               	addwf	??_motor_isr+12,w,c
 34772  00BA7E  0101               	movlb	1	; () banked
 34773  00BA80  6F47               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 34774  00BA82  500E               	movf	_motor_current_stepcount+1,w,c	;volatile
 34775  00BA84  203B               	addwfc	??_motor_isr+13,w,c
 34776  00BA86  6F48               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 34777  00BA88  500F               	movf	_motor_current_stepcount+2,w,c	;volatile
 34778  00BA8A  203C               	addwfc	??_motor_isr+14,w,c
 34779  00BA8C  6F49               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 34780  00BA8E  5010               	movf	_motor_current_stepcount+3,w,c	;volatile
 34781  00BA90  203D               	addwfc	??_motor_isr+15,w,c
 34782  00BA92  D0EB               	goto	L65
 34783  00BA94                     i2l2392:
 34784                           
 34785                           ;motor.c: 371: else;motor.c: 372: {;motor.c: 373: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 34786                           
 34787                           ; BSR set to: 1
 34788  00BA94  90D8               	bcf	status,0,c
 34789  00BA96  0100               	movlb	0	; () banked
 34790  00BA98  35CA               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 34791  00BA9A  6EF6               	movwf	tblptrl,c
 34792  00BA9C  35CB               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34793  00BA9E  6EF7               	movwf	tblptrh,c
 34794  00BAA0  0E61               	movlw	low _motor_steps_lookup
 34795  00BAA2  26F6               	addwf	tblptrl,f,c
 34796  00BAA4  0E94               	movlw	high _motor_steps_lookup
 34797  00BAA6  22F7               	addwfc	tblptrh,f,c
 34798  00BAA8                     	if	1	;There are 3 active tblptr bytes
 34799  00BAA8  6AF8               	clrf	tblptru,c
 34800  00BAAA  0E00               	movlw	low (__mediumconst shr (0+16))
 34801  00BAAC  22F8               	addwfc	tblptru,f,c
 34802  00BAAE                     	endif
 34803  00BAAE  0009               	tblrd		*+
 34804  00BAB0  CFF5 F02E          	movff	tablat,??_motor_isr
 34805  00BAB4  0009               	tblrd		*+
 34806  00BAB6  CFF5 F02F          	movff	tablat,??_motor_isr+1
 34807  00BABA  502E               	movf	??_motor_isr,w,c
 34808  00BABC  240D               	addwf	_motor_current_stepcount,w,c	;volatile
 34809  00BABE  0101               	movlb	1	; () banked
 34810  00BAC0  6F47               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 34811  00BAC2  502F               	movf	??_motor_isr+1,w,c
 34812  00BAC4  200E               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 34813  00BAC6  6F48               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 34814  00BAC8  0E00               	movlw	0
 34815  00BACA  200F               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 34816  00BACC  6F49               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 34817  00BACE  0E00               	movlw	0
 34818  00BAD0  2010               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 34819  00BAD2  D0CB               	goto	L65
 34820  00BAD4                     i2l2387:
 34821                           
 34822                           ; BSR set to: 1
 34823                           ;motor.c: 376: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 34824                           
 34825                           ; BSR set to: 1
 34826  00BAD4  516B               	movf	_motor_maximum_speed& (0+255),w,b
 34827  00BAD6  0100               	movlb	0	; () banked
 34828  00BAD8  19CA               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 34829  00BADA  E106               	bnz	i2u1591_40
 34830  00BADC  0101               	movlb	1	; () banked
 34831  00BADE  516C               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 34832  00BAE0  0100               	movlb	0	; () banked
 34833  00BAE2  19CB               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34834  00BAE4  B4D8               	btfsc	status,2,c
 34835  00BAE6  D010               	goto	i2u1592_40
 34836  00BAE8                     i2u1591_40:
 34837                           
 34838                           ; BSR set to: 0
 34839  00BAE8  5040               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 34840  00BAEA  6E2E               	movwf	??_motor_isr& (0+255),c
 34841  00BAEC  5041               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 34842  00BAEE  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 34843  00BAF0  6A30               	clrf	(??_motor_isr+2)& (0+255),c
 34844  00BAF2  6A31               	clrf	(??_motor_isr+3)& (0+255),c
 34845  00BAF4  5042               	movf	motor_isr@steps_remaining,w,c
 34846  00BAF6  5C2E               	subwf	??_motor_isr,w,c
 34847  00BAF8  5043               	movf	motor_isr@steps_remaining+1,w,c
 34848  00BAFA  582F               	subwfb	??_motor_isr+1,w,c
 34849  00BAFC  5044               	movf	motor_isr@steps_remaining+2,w,c
 34850  00BAFE  5830               	subwfb	??_motor_isr+2,w,c
 34851  00BB00  5045               	movf	motor_isr@steps_remaining+3,w,c
 34852  00BB02  5831               	subwfb	??_motor_isr+3,w,c
 34853  00BB04  A0D8               	btfss	status,0,c
 34854  00BB06  D002               	goto	i2l2395
 34855  00BB08                     i2u1592_40:
 34856                           
 34857                           ; BSR set to: 0
 34858                           ;motor.c: 377: {;motor.c: 380: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 34859                           
 34860                           ; BSR set to: 0
 34861  00BB08  90D8               	bcf	status,0,c
 34862  00BB0A  D05D               	goto	L64
 34863  00BB0C                     i2l2395:
 34864                           
 34865                           ;motor.c: 382: else;motor.c: 383: {;motor.c: 385: ++motor_current_speed;
 34866                           
 34867                           ; BSR set to: 1
 34868  00BB0C  0100               	movlb	0	; () banked
 34869  00BB0E  4BCA               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 34870  00BB10  2BCB               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 34871                           
 34872                           ; BSR set to: 0
 34873                           ;motor.c: 389: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 34874  00BB12  0EFD               	movlw	low _motor_prescaler_lookup
 34875  00BB14  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34876  00BB16  6EF6               	movwf	tblptrl,c
 34877  00BB18  0E9B               	movlw	high _motor_prescaler_lookup
 34878  00BB1A  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34879  00BB1C  6EF7               	movwf	tblptrh,c
 34880  00BB1E                     	if	1	;There are 3 active tblptr bytes
 34881  00BB1E  6AF8               	clrf	tblptru,c
 34882  00BB20  0E00               	movlw	low (__mediumconst shr (0+16))
 34883  00BB22  22F8               	addwfc	tblptru,f,c
 34884  00BB24                     	endif
 34885  00BB24  0008               	tblrd		*
 34886  00BB26  CFF5 F02E          	movff	tablat,??_motor_isr
 34887  00BB2A  50CA               	movf	4042,w,c	;volatile
 34888  00BB2C  182E               	xorwf	??_motor_isr,w,c
 34889  00BB2E  0BFC               	andlw	-4
 34890  00BB30  182E               	xorwf	??_motor_isr,w,c
 34891  00BB32  6ECA               	movwf	4042,c	;volatile
 34892                           
 34893                           ; BSR set to: 0
 34894                           ;motor.c: 391: PR2 = motor_period_lookup[motor_current_speed];
 34895  00BB34  0E16               	movlw	low _motor_period_lookup
 34896  00BB36  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34897  00BB38  6EF6               	movwf	tblptrl,c
 34898  00BB3A  0E9A               	movlw	high _motor_period_lookup
 34899  00BB3C  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34900  00BB3E  6EF7               	movwf	tblptrh,c
 34901  00BB40                     	if	1	;There are 3 active tblptr bytes
 34902  00BB40  6AF8               	clrf	tblptru,c
 34903  00BB42  0E00               	movlw	low (__mediumconst shr (0+16))
 34904  00BB44  22F8               	addwfc	tblptru,f,c
 34905  00BB46                     	endif
 34906  00BB46  0008               	tblrd		*
 34907  00BB48  CFF5 FFCB          	movff	tablat,4043	;volatile
 34908                           
 34909                           ; BSR set to: 0
 34910                           ;motor.c: 393: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 34911  00BB4C  0E2F               	movlw	low _motor_postscaler_lookup
 34912  00BB4E  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34913  00BB50  6EF6               	movwf	tblptrl,c
 34914  00BB52  0E98               	movlw	high _motor_postscaler_lookup
 34915  00BB54  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34916  00BB56  6EF7               	movwf	tblptrh,c
 34917  00BB58                     	if	1	;There are 3 active tblptr bytes
 34918  00BB58  6AF8               	clrf	tblptru,c
 34919  00BB5A  0E00               	movlw	low (__mediumconst shr (0+16))
 34920  00BB5C  22F8               	addwfc	tblptru,f,c
 34921  00BB5E                     	endif
 34922  00BB5E  0008               	tblrd		*
 34923  00BB60  CFF5 F02E          	movff	tablat,??_motor_isr
 34924  00BB64  462E               	rlncf	??_motor_isr,f,c
 34925  00BB66  462E               	rlncf	??_motor_isr,f,c
 34926  00BB68  462E               	rlncf	??_motor_isr,f,c
 34927  00BB6A  50CA               	movf	4042,w,c	;volatile
 34928  00BB6C  182E               	xorwf	??_motor_isr,w,c
 34929  00BB6E  0B87               	andlw	-121
 34930  00BB70  182E               	xorwf	??_motor_isr,w,c
 34931  00BB72  6ECA               	movwf	4042,c	;volatile
 34932                           
 34933                           ; BSR set to: 0
 34934                           ;motor.c: 395: CCPR1L = PR2>>1;
 34935  00BB74  90D8               	bcf	status,0,c
 34936  00BB76  30CB               	rrcf	4043,w,c	;volatile
 34937  00BB78  6EBB               	movwf	4027,c	;volatile
 34938                           
 34939                           ; BSR set to: 0
 34940                           ;motor.c: 397: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 34941  00BB7A  501C               	movf	_motor_mode,w,c
 34942  00BB7C  A4D8               	btfss	status,2,c
 34943  00BB7E  D021               	goto	i2l2399
 34944                           
 34945                           ; BSR set to: 0
 34946  00BB80  0E2F               	movlw	low _motor_postscaler_lookup
 34947  00BB82  25CA               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 34948  00BB84  6EF6               	movwf	tblptrl,c
 34949  00BB86  0E98               	movlw	high _motor_postscaler_lookup
 34950  00BB88  21CB               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 34951  00BB8A  6EF7               	movwf	tblptrh,c
 34952  00BB8C                     	if	1	;There are 3 active tblptr bytes
 34953  00BB8C  6AF8               	clrf	tblptru,c
 34954  00BB8E  0E00               	movlw	low (__mediumconst shr (0+16))
 34955  00BB90  22F8               	addwfc	tblptru,f,c
 34956  00BB92                     	endif
 34957  00BB92  0008               	tblrd		*
 34958  00BB94  50F5               	movf	tablat,w,c
 34959  00BB96  0900               	iorlw	0
 34960  00BB98  A4D8               	btfss	status,2,c
 34961  00BB9A  D013               	goto	i2l2399
 34962                           
 34963                           ; BSR set to: 0
 34964                           ;motor.c: 398: {;motor.c: 400: motor_mode = MOTOR_MODE_PWM;
 34965  00BB9C  0E01               	movlw	1
 34966  00BB9E  6E1C               	movwf	_motor_mode,c
 34967                           
 34968                           ;motor.c: 403: CCP1CONbits.CCP1M = 0b1100;
 34969  00BBA0  50BA               	movf	4026,w,c	;volatile
 34970  00BBA2  0BF0               	andlw	-16
 34971  00BBA4  090C               	iorlw	12
 34972  00BBA6  6EBA               	movwf	4026,c	;volatile
 34973                           
 34974                           ;motor.c: 406: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 34975  00BBA8  0E55               	movlw	85
 34976  00BBAA  6EA7               	movwf	4007,c	;volsfr
 34977  00BBAC  0EAA               	movlw	170
 34978  00BBAE  6EA7               	movwf	4007,c	;volsfr
 34979                           
 34980                           ; BSR set to: 0
 34981  00BBB0  010E               	movlb	14	; () banked
 34982  00BBB2  91BF               	bcf	191,0,b	;volatile
 34983                           
 34984                           ;motor.c: 407: RPOR4 = 14;
 34985  00BBB4  0E0E               	movlw	14
 34986  00BBB6  6FC4               	movwf	196,b	;volatile
 34987                           
 34988                           ;motor.c: 408: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 34989  00BBB8  0E55               	movlw	85
 34990  00BBBA  6EA7               	movwf	4007,c	;volsfr
 34991  00BBBC  0EAA               	movlw	170
 34992  00BBBE  6EA7               	movwf	4007,c	;volsfr
 34993                           
 34994                           ; BSR set to: 14
 34995  00BBC0  81BF               	bsf	191,0,b	;volatile
 34996  00BBC2                     i2l2399:
 34997                           
 34998                           ;motor.c: 409: };motor.c: 412: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 34999                           
 35000                           ; BSR set to: 14
 35001  00BBC2  90D8               	bcf	status,0,c
 35002  00BBC4  0100               	movlb	0	; () banked
 35003  00BBC6                     L64:
 35004  00BBC6  35CA               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 35005  00BBC8  6EF6               	movwf	tblptrl,c
 35006  00BBCA  35CB               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 35007  00BBCC  6EF7               	movwf	tblptrh,c
 35008  00BBCE  0E61               	movlw	low _motor_steps_lookup
 35009  00BBD0  26F6               	addwf	tblptrl,f,c
 35010  00BBD2  0E94               	movlw	high _motor_steps_lookup
 35011  00BBD4  22F7               	addwfc	tblptrh,f,c
 35012  00BBD6                     	if	1	;There are 3 active tblptr bytes
 35013  00BBD6  6AF8               	clrf	tblptru,c
 35014  00BBD8  0E00               	movlw	low (__mediumconst shr (0+16))
 35015  00BBDA  22F8               	addwfc	tblptru,f,c
 35016  00BBDC                     	endif
 35017  00BBDC  0009               	tblrd		*+
 35018  00BBDE  CFF5 F02E          	movff	tablat,??_motor_isr
 35019  00BBE2  0009               	tblrd		*+
 35020  00BBE4  CFF5 F02F          	movff	tablat,??_motor_isr+1
 35021  00BBE8  502E               	movf	??_motor_isr,w,c
 35022  00BBEA  6E30               	movwf	(??_motor_isr+2)& (0+255),c
 35023  00BBEC  502F               	movf	??_motor_isr+1,w,c
 35024  00BBEE  6E31               	movwf	(??_motor_isr+3)& (0+255),c
 35025  00BBF0  6A32               	clrf	(??_motor_isr+4)& (0+255),c
 35026  00BBF2  6A33               	clrf	(??_motor_isr+5)& (0+255),c
 35027  00BBF4  1E30               	comf	??_motor_isr+2,f,c
 35028  00BBF6  1E31               	comf	??_motor_isr+3,f,c
 35029  00BBF8  1E32               	comf	??_motor_isr+4,f,c
 35030  00BBFA  1E33               	comf	??_motor_isr+5,f,c
 35031  00BBFC  2A30               	incf	??_motor_isr+2,f,c
 35032  00BBFE  0E00               	movlw	0
 35033  00BC00  2231               	addwfc	??_motor_isr+3,f,c
 35034  00BC02  2232               	addwfc	??_motor_isr+4,f,c
 35035  00BC04  2233               	addwfc	??_motor_isr+5,f,c
 35036  00BC06  C0CA  F034         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 35037  00BC0A  C0CB  F035         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 35038  00BC0E  90D8               	bcf	status,0,c
 35039  00BC10  3634               	rlcf	??_motor_isr+6,f,c
 35040  00BC12  3635               	rlcf	??_motor_isr+7,f,c
 35041  00BC14  0E02               	movlw	2
 35042  00BC16  2634               	addwf	??_motor_isr+6,f,c
 35043  00BC18  0E00               	movlw	0
 35044  00BC1A  2235               	addwfc	??_motor_isr+7,f,c
 35045  00BC1C  0E61               	movlw	low _motor_steps_lookup
 35046  00BC1E  2434               	addwf	??_motor_isr+6,w,c
 35047  00BC20  6EF6               	movwf	tblptrl,c
 35048  00BC22  0E94               	movlw	high _motor_steps_lookup
 35049  00BC24  2035               	addwfc	??_motor_isr+7,w,c
 35050  00BC26  6EF7               	movwf	tblptrh,c
 35051  00BC28                     	if	1	;There are 3 active tblptr bytes
 35052  00BC28  6AF8               	clrf	tblptru,c
 35053  00BC2A  0E00               	movlw	low (__mediumconst shr (0+16))
 35054  00BC2C  22F8               	addwfc	tblptru,f,c
 35055  00BC2E                     	endif
 35056  00BC2E  0009               	tblrd		*+
 35057  00BC30  CFF5 F036          	movff	tablat,??_motor_isr+8
 35058  00BC34  0009               	tblrd		*+
 35059  00BC36  CFF5 F037          	movff	tablat,??_motor_isr+9
 35060  00BC3A  5036               	movf	??_motor_isr+8,w,c
 35061  00BC3C  2430               	addwf	??_motor_isr+2,w,c
 35062  00BC3E  6E38               	movwf	(??_motor_isr+10)& (0+255),c
 35063  00BC40  5037               	movf	??_motor_isr+9,w,c
 35064  00BC42  2031               	addwfc	??_motor_isr+3,w,c
 35065  00BC44  6E39               	movwf	(??_motor_isr+11)& (0+255),c
 35066  00BC46  0E00               	movlw	0
 35067  00BC48  2032               	addwfc	??_motor_isr+4,w,c
 35068  00BC4A  6E3A               	movwf	(??_motor_isr+12)& (0+255),c
 35069  00BC4C  0E00               	movlw	0
 35070  00BC4E  2033               	addwfc	??_motor_isr+5,w,c
 35071  00BC50  6E3B               	movwf	(??_motor_isr+13)& (0+255),c
 35072  00BC52  500D               	movf	_motor_current_stepcount,w,c	;volatile
 35073  00BC54  2438               	addwf	??_motor_isr+10,w,c
 35074  00BC56  0101               	movlb	1	; () banked
 35075  00BC58  6F47               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 35076  00BC5A  500E               	movf	_motor_current_stepcount+1,w,c	;volatile
 35077  00BC5C  2039               	addwfc	??_motor_isr+11,w,c
 35078  00BC5E  6F48               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 35079  00BC60  500F               	movf	_motor_current_stepcount+2,w,c	;volatile
 35080  00BC62  203A               	addwfc	??_motor_isr+12,w,c
 35081  00BC64  6F49               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 35082  00BC66  5010               	movf	_motor_current_stepcount+3,w,c	;volatile
 35083  00BC68  203B               	addwfc	??_motor_isr+13,w,c
 35084  00BC6A                     L65:
 35085  00BC6A  6F4A               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 35086  00BC6C                     i2l2398:
 35087                           
 35088                           ; BSR set to: 1
 35089                           ;motor.c: 413: };motor.c: 414: };motor.c: 417: if(PIR1bits.TMR2IF)
 35090                           
 35091                           ; BSR set to: 1
 35092                           
 35093                           ; BSR set to: 1
 35094                           
 35095                           ; BSR set to: 1
 35096  00BC6C  A29E               	btfss	3998,1,c	;volatile
 35097  00BC6E  0012               	return	
 35098                           
 35099                           ; BSR set to: 1
 35100                           ;motor.c: 418: {;motor.c: 420: PIR1bits.TMR2IF = 0;
 35101  00BC70  929E               	bcf	3998,1,c	;volatile
 35102                           
 35103                           ; BSR set to: 1
 35104                           ;motor.c: 422: ++motor_current_stepcount;
 35105  00BC72  0E01               	movlw	1
 35106  00BC74  260D               	addwf	_motor_current_stepcount,f,c	;volatile
 35107  00BC76  0E00               	movlw	0
 35108  00BC78  220E               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 35109  00BC7A  220F               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 35110  00BC7C  2210               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 35111                           
 35112                           ;motor.c: 425: os.current_position_in_steps += motor_direction;
 35113  00BC7E  501B               	movf	_motor_direction,w,c
 35114  00BC80  6E2E               	movwf	??_motor_isr& (0+255),c
 35115  00BC82  0E00               	movlw	0
 35116  00BC84  BE2E               	btfsc	??_motor_isr& (0+255),7,c
 35117  00BC86  0EFF               	movlw	255
 35118  00BC88  6E2F               	movwf	(??_motor_isr+1)& (0+255),c
 35119  00BC8A  6E30               	movwf	(??_motor_isr+2)& (0+255),c
 35120  00BC8C  6E31               	movwf	(??_motor_isr+3)& (0+255),c
 35121  00BC8E  502E               	movf	??_motor_isr,w,c
 35122  00BC90  0100               	movlb	0	; () banked
 35123  00BC92  27D7               	addwf	(_os+7)& (0+255),f,b	;volatile
 35124  00BC94  502F               	movf	??_motor_isr+1,w,c
 35125  00BC96  23D8               	addwfc	(_os+8)& (0+255),f,b	;volatile
 35126  00BC98  5030               	movf	??_motor_isr+2,w,c
 35127  00BC9A  23D9               	addwfc	(_os+9)& (0+255),f,b	;volatile
 35128  00BC9C  5031               	movf	??_motor_isr+3,w,c
 35129  00BC9E  23DA               	addwfc	(_os+10)& (0+255),f,b	;volatile
 35130                           
 35131                           ;motor.c: 426: if(os.current_position_in_steps==config.full_circle_in_steps)
 35132  00BCA0  0101               	movlb	1	; () banked
 35133  00BCA2  5183               	movf	_config& (0+255),w,b
 35134  00BCA4  0100               	movlb	0	; () banked
 35135  00BCA6  19D7               	xorwf	(_os+7)& (0+255),w,b	;volatile
 35136  00BCA8  E118               	bnz	i2l16366
 35137  00BCAA  0101               	movlb	1	; () banked
 35138  00BCAC  5184               	movf	(_config+1)& (0+255),w,b
 35139  00BCAE  0100               	movlb	0	; () banked
 35140  00BCB0  19D8               	xorwf	(_os+8)& (0+255),w,b	;volatile
 35141  00BCB2  E113               	bnz	i2l16366
 35142  00BCB4  0101               	movlb	1	; () banked
 35143  00BCB6  5185               	movf	(_config+2)& (0+255),w,b
 35144  00BCB8  0100               	movlb	0	; () banked
 35145  00BCBA  19D9               	xorwf	(_os+9)& (0+255),w,b	;volatile
 35146  00BCBC  E10E               	bnz	i2l16366
 35147  00BCBE  0101               	movlb	1	; () banked
 35148  00BCC0  5186               	movf	(_config+3)& (0+255),w,b
 35149  00BCC2  0100               	movlb	0	; () banked
 35150  00BCC4  19DA               	xorwf	(_os+10)& (0+255),w,b	;volatile
 35151  00BCC6  A4D8               	btfss	status,2,c
 35152  00BCC8  D008               	goto	i2l2401
 35153                           
 35154                           ; BSR set to: 0
 35155                           ;motor.c: 427: os.current_position_in_steps = 0;
 35156  00BCCA  0E00               	movlw	0
 35157  00BCCC  6FD7               	movwf	(_os+7)& (0+255),b	;volatile
 35158  00BCCE  0E00               	movlw	0
 35159  00BCD0  6FD8               	movwf	(_os+8)& (0+255),b	;volatile
 35160  00BCD2  0E00               	movlw	0
 35161  00BCD4  6FD9               	movwf	(_os+9)& (0+255),b	;volatile
 35162  00BCD6  0E00               	movlw	0
 35163  00BCD8  6FDA               	movwf	(_os+10)& (0+255),b	;volatile
 35164  00BCDA                     i2l2401:
 35165  00BCDA                     i2l16366:
 35166                           
 35167                           ; BSR set to: 0
 35168                           ;motor.c: 428: if(os.current_position_in_steps==0xFFFFFFFF)
 35169  00BCDA  29D7               	incf	(_os+7)& (0+255),w,b	;volatile
 35170  00BCDC  E11C               	bnz	i2l2382
 35171  00BCDE  29D8               	incf	(_os+8)& (0+255),w,b	;volatile
 35172  00BCE0  E11A               	bnz	i2l2382
 35173  00BCE2  29D9               	incf	(_os+9)& (0+255),w,b	;volatile
 35174  00BCE4  E118               	bnz	i2l2382
 35175  00BCE6  29DA               	incf	(_os+10)& (0+255),w,b	;volatile
 35176  00BCE8  A4D8               	btfss	status,2,c
 35177  00BCEA  0012               	return	
 35178                           
 35179                           ; BSR set to: 0
 35180                           ;motor.c: 429: os.current_position_in_steps = (config.full_circle_in_steps-1);
 35181  00BCEC  0EFF               	movlw	255
 35182  00BCEE  0101               	movlb	1	; () banked
 35183  00BCF0  2583               	addwf	_config& (0+255),w,b
 35184  00BCF2  0100               	movlb	0	; () banked
 35185  00BCF4  6FD7               	movwf	(_os+7)& (0+255),b	;volatile
 35186  00BCF6  0EFF               	movlw	255
 35187  00BCF8  0101               	movlb	1	; () banked
 35188  00BCFA  2184               	addwfc	(_config+1)& (0+255),w,b
 35189  00BCFC  0100               	movlb	0	; () banked
 35190  00BCFE  6FD8               	movwf	(_os+8)& (0+255),b	;volatile
 35191  00BD00  0EFF               	movlw	255
 35192  00BD02  0101               	movlb	1	; () banked
 35193  00BD04  2185               	addwfc	(_config+2)& (0+255),w,b
 35194  00BD06  0100               	movlb	0	; () banked
 35195  00BD08  6FD9               	movwf	(_os+9)& (0+255),b	;volatile
 35196  00BD0A  0EFF               	movlw	255
 35197  00BD0C  0101               	movlb	1	; () banked
 35198  00BD0E  2186               	addwfc	(_config+3)& (0+255),w,b
 35199  00BD10  0100               	movlb	0	; () banked
 35200  00BD12  6FDA               	movwf	(_os+10)& (0+255),b	;volatile
 35201                           
 35202                           ; BSR set to: 0
 35203  00BD14  0012               	return	
 35204  00BD16                     i2l2382:
 35205  00BD16  0012               	return		;funcret
 35206  00BD18                     __end_of_motor_isr:
 35207                           	opt stack 0
 35208                           tosu	equ	0xFFF
 35209                           tosh	equ	0xFFE
 35210                           tosl	equ	0xFFD
 35211                           pclatu	equ	0xFFB
 35212                           pclath	equ	0xFFA
 35213                           tblptru	equ	0xFF8
 35214                           tblptrh	equ	0xFF7
 35215                           tblptrl	equ	0xFF6
 35216                           tablat	equ	0xFF5
 35217                           prodh	equ	0xFF4
 35218                           prodl	equ	0xFF3
 35219                           intcon	equ	0xFF2
 35220                           indf0	equ	0xFEF
 35221                           postinc0	equ	0xFEE
 35222                           fsr0h	equ	0xFEA
 35223                           fsr0l	equ	0xFE9
 35224                           wreg	equ	0xFE8
 35225                           indf1	equ	0xFE7
 35226                           postdec1	equ	0xFE5
 35227                           plusw1	equ	0xFE3
 35228                           fsr1h	equ	0xFE2
 35229                           fsr1l	equ	0xFE1
 35230                           indf2	equ	0xFDF
 35231                           postinc2	equ	0xFDE
 35232                           postdec2	equ	0xFDD
 35233                           plusw2	equ	0xFDB
 35234                           fsr2h	equ	0xFDA
 35235                           fsr2l	equ	0xFD9
 35236                           status	equ	0xFD8
 35237                           
 35238 ;; *************** function _USBDeviceTasks *****************
 35239 ;; Defined at:
 35240 ;;		line 477 in file "usb_device.c"
 35241 ;; Parameters:    Size  Location     Type
 35242 ;;		None
 35243 ;; Auto vars:     Size  Location     Type
 35244 ;;  i               1   30[COMRAM] unsigned char 
 35245 ;; Return value:  Size  Location     Type
 35246 ;;                  1    wreg      void 
 35247 ;; Registers used:
 35248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 35249 ;; Tracked objects:
 35250 ;;		On entry : 0/0
 35251 ;;		On exit  : 0/0
 35252 ;;		Unchanged: 0/0
 35253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35258 ;;Total ram usage:        1 bytes
 35259 ;; Hardware stack levels used:    1
 35260 ;; Hardware stack levels required when called:    8
 35261 ;; This function calls:
 35262 ;;		_USBCtrlEPAllowStatusStage
 35263 ;;		_USBCtrlEPService
 35264 ;;		_USBIncrement1msInternalTimers
 35265 ;;		_USBStallHandler
 35266 ;;		_USBSuspend
 35267 ;;		_USBWakeFromSuspend
 35268 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35269 ;;		i2_USBDeviceInit
 35270 ;; This function is called by:
 35271 ;;		_SYS_InterruptHigh
 35272 ;; This function uses a non-reentrant model
 35273 ;;
 35274                           
 35275                           	psect	text127
 35276  00EC96                     __ptext127:
 35277                           	opt stack 0
 35278  00EC96                     _USBDeviceTasks:
 35279                           	opt stack 9
 35280                           
 35281                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 35282                           
 35283                           ;incstack = 0
 35284  00EC96  042B               	decf	_USBDeviceState,w,c	;volatile
 35285  00EC98  B4D8               	btfsc	status,2,c
 35286                           
 35287                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 35288  00EC9A  BA65               	btfsc	3941,5,c	;volatile
 35289  00EC9C  D007               	goto	i2l155
 35290                           
 35291                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 35292  00EC9E  0E00               	movlw	0
 35293  00ECA0  6E62               	movwf	3938,c	;volatile
 35294                           
 35295                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 35296  00ECA2  010F               	movlb	15	; () banked
 35297  00ECA4  8136               	bsf	54,0,b	;volatile
 35298                           
 35299                           ; BSR set to: 15
 35300                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 35301  00ECA6  8936               	bsf	54,4,b	;volatile
 35302                           
 35303                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 35304  00ECA8  0E02               	movlw	2
 35305  00ECAA  6E2B               	movwf	_USBDeviceState,c	;volatile
 35306  00ECAC                     i2l155:
 35307                           
 35308                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 35309                           
 35310                           ; BSR set to: 15
 35311                           
 35312                           ; BSR set to: 15
 35313  00ECAC  A462               	btfss	3938,2,c	;volatile
 35314  00ECAE  D006               	goto	i2l156
 35315  00ECB0  010F               	movlb	15	; () banked
 35316  00ECB2  A536               	btfss	54,2,b	;volatile
 35317  00ECB4  D003               	goto	i2l156
 35318                           
 35319                           ; BSR set to: 15
 35320                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 35321  00ECB6  9462               	bcf	3938,2,c	;volatile
 35322                           
 35323                           ; BSR set to: 15
 35324                           ;usb_device.c: 640: USBWakeFromSuspend();
 35325  00ECB8  EC44  F094         	call	_USBWakeFromSuspend	;wreg free
 35326  00ECBC                     i2l156:
 35327                           
 35328                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 35329  00ECBC  A265               	btfss	3941,1,c	;volatile
 35330  00ECBE  D002               	goto	i2l157
 35331                           
 35332                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 35333  00ECC0  98A1               	bcf	4001,4,c	;volatile
 35334                           
 35335                           ;usb_device.c: 650: return;
 35336  00ECC2  0012               	return	
 35337  00ECC4                     i2l157:
 35338                           
 35339                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 35340  00ECC4  A062               	btfss	3938,0,c	;volatile
 35341  00ECC6  D009               	goto	i2l159
 35342  00ECC8  010F               	movlb	15	; () banked
 35343  00ECCA  A136               	btfss	54,0,b	;volatile
 35344  00ECCC  D006               	goto	i2l159
 35345                           
 35346                           ; BSR set to: 15
 35347                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 35348  00ECCE  ECED  F076         	call	i2_USBDeviceInit	;wreg free
 35349                           
 35350                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 35351  00ECD2  88A0               	bsf	4000,4,c	;volatile
 35352                           
 35353                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 35354  00ECD4  0E04               	movlw	4
 35355  00ECD6  6E2B               	movwf	_USBDeviceState,c	;volatile
 35356                           
 35357                           ;usb_device.c: 681: (UIR &= 0xFE);
 35358  00ECD8  9062               	bcf	3938,0,c	;volatile
 35359  00ECDA                     i2l159:
 35360                           
 35361                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 35362  00ECDA  A862               	btfss	3938,4,c	;volatile
 35363  00ECDC  D004               	goto	i2l160
 35364  00ECDE  010F               	movlb	15	; () banked
 35365  00ECE0  B936               	btfsc	54,4,b	;volatile
 35366                           
 35367                           ; BSR set to: 15
 35368                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 35369  00ECE2  ECF6  F094         	call	_USBSuspend	;wreg free
 35370  00ECE6                     i2l160:
 35371                           
 35372                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 35373  00ECE6  AC62               	btfss	3938,6,c	;volatile
 35374  00ECE8  D01B               	goto	i2l164
 35375                           
 35376                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 35377  00ECEA  010F               	movlb	15	; () banked
 35378  00ECEC  AD36               	btfss	54,6,b	;volatile
 35379  00ECEE  D00E               	goto	i2l162
 35380                           
 35381                           ; BSR set to: 15
 35382                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 35383  00ECF0  0E00               	movlw	0
 35384  00ECF2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 35385  00ECF4  0E73               	movlw	115
 35386  00ECF6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 35387  00ECF8  0E00               	movlw	0
 35388  00ECFA  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 35389  00ECFC  0E00               	movlw	0
 35390  00ECFE  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 35391  00ED00  0E00               	movlw	0
 35392  00ED02  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 35393  00ED04  0E01               	movlw	1
 35394  00ED06  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 35395  00ED08  ECF2  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 35396  00ED0C                     i2l162:
 35397                           
 35398                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 35399  00ED0C  9C62               	bcf	3938,6,c	;volatile
 35400                           
 35401                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 35402  00ED0E  ECFD  F095         	call	_USBIncrement1msInternalTimers	;wreg free
 35403                           
 35404                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 35405  00ED12  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 35406  00ED14  A4D8               	btfss	status,2,c
 35407                           
 35408                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 35409  00ED16  0624               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 35410                           
 35411                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 35412  00ED18  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 35413  00ED1A  B4D8               	btfsc	status,2,c
 35414                           
 35415                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 35416  00ED1C  ECCF  F085         	call	_USBCtrlEPAllowStatusStage	;wreg free
 35417  00ED20                     i2l164:
 35418                           
 35419                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 35420  00ED20  AA62               	btfss	3938,5,c	;volatile
 35421  00ED22  D004               	goto	i2l165
 35422  00ED24  010F               	movlb	15	; () banked
 35423  00ED26  BB36               	btfsc	54,5,b	;volatile
 35424                           
 35425                           ; BSR set to: 15
 35426                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 35427  00ED28  ECFE  F092         	call	_USBStallHandler	;wreg free
 35428  00ED2C                     i2l165:
 35429                           
 35430                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 35431  00ED2C  A262               	btfss	3938,1,c	;volatile
 35432  00ED2E  D012               	goto	i2l166
 35433  00ED30  010F               	movlb	15	; () banked
 35434  00ED32  A336               	btfss	54,1,b	;volatile
 35435  00ED34  D00F               	goto	i2l166
 35436                           
 35437                           ; BSR set to: 15
 35438                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 35439  00ED36  0E7F               	movlw	127
 35440  00ED38  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 35441  00ED3A  683D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 35442  00ED3C  0E00               	movlw	0
 35443  00ED3E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 35444  00ED40  0E00               	movlw	0
 35445  00ED42  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 35446  00ED44  0E00               	movlw	0
 35447  00ED46  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 35448  00ED48  0E01               	movlw	1
 35449  00ED4A  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 35450  00ED4C  ECF2  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 35451                           
 35452                           ;usb_device.c: 759: {UEIR = 0;};
 35453  00ED50  0E00               	movlw	0
 35454  00ED52  6E63               	movwf	3939,c	;volatile
 35455  00ED54                     i2l166:
 35456                           
 35457                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 35458  00ED54  0E04               	movlw	4
 35459  00ED56  602B               	cpfslt	_USBDeviceState,c	;volatile
 35460  00ED58  D002               	goto	i2l167
 35461                           
 35462                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 35463  00ED5A  98A1               	bcf	4001,4,c	;volatile
 35464                           
 35465                           ;usb_device.c: 777: return;
 35466  00ED5C  0012               	return	
 35467  00ED5E                     i2l167:
 35468                           
 35469                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 35470  00ED5E  010F               	movlb	15	; () banked
 35471  00ED60  A736               	btfss	54,3,b	;volatile
 35472  00ED62  D039               	goto	i2u2163_40
 35473                           
 35474                           ; BSR set to: 15
 35475                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 35476  00ED64  0E00               	movlw	0
 35477  00ED66  6E4C               	movwf	USBDeviceTasks@i,c
 35478  00ED68                     i2l21488:
 35479                           
 35480                           ; BSR set to: 15
 35481  00ED68  0E03               	movlw	3
 35482  00ED6A  644C               	cpfsgt	USBDeviceTasks@i,c
 35483  00ED6C  D001               	goto	i2l169
 35484  00ED6E  D033               	goto	i2u2163_40
 35485  00ED70                     i2l169:
 35486                           
 35487                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 35488  00ED70  A662               	btfss	3938,3,c	;volatile
 35489  00ED72  D031               	goto	i2u2163_40
 35490                           
 35491                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 35492  00ED74  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 35493                           
 35494                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 35495  00ED78  302C               	rrcf	_USTATcopy,w,c	;volatile
 35496  00ED7A  32E8               	rrcf	wreg,f,c
 35497  00ED7C  32E8               	rrcf	wreg,f,c
 35498  00ED7E  0B0F               	andlw	15
 35499  00ED80  6E26               	movwf	_endpoint_number,c	;volatile
 35500                           
 35501                           ;usb_device.c: 793: (UIR &= 0xF7);
 35502  00ED82  9662               	bcf	3938,3,c	;volatile
 35503                           
 35504                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 35505  00ED84  B42C               	btfsc	_USTATcopy,2,c	;volatile
 35506  00ED86  D007               	goto	i2l172
 35507                           
 35508                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 35509  00ED88  5026               	movf	_endpoint_number,w,c	;volatile
 35510  00ED8A  0D01               	mullw	1
 35511  00ED8C  0E65               	movlw	low _ep_data_out
 35512  00ED8E  24F3               	addwf	prodl,w,c
 35513  00ED90  6ED9               	movwf	fsr2l,c
 35514  00ED92  0E01               	movlw	high _ep_data_out
 35515  00ED94  D006               	goto	L66
 35516  00ED96                     i2l172:
 35517                           
 35518                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 35519                           
 35520                           ; BSR set to: 1
 35521  00ED96  5026               	movf	_endpoint_number,w,c	;volatile
 35522  00ED98  0D01               	mullw	1
 35523  00ED9A  0E68               	movlw	low _ep_data_in
 35524  00ED9C  24F3               	addwf	prodl,w,c
 35525  00ED9E  6ED9               	movwf	fsr2l,c
 35526  00EDA0  0E01               	movlw	high _ep_data_in
 35527  00EDA2                     L66:
 35528  00EDA2  20F4               	addwfc	prodh,w,c
 35529  00EDA4  6EDA               	movwf	fsr2h,c
 35530  00EDA6  0101               	movlb	1	; () banked
 35531  00EDA8  70DF               	btg	indf2,0,c
 35532                           
 35533                           ; BSR set to: 1
 35534                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 35535                           
 35536                           ; BSR set to: 1
 35537  00EDAA  5026               	movf	_endpoint_number,w,c	;volatile
 35538  00EDAC  A4D8               	btfss	status,2,c
 35539  00EDAE  D003               	goto	i2l174
 35540                           
 35541                           ; BSR set to: 1
 35542                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 35543  00EDB0  EC83  F08A         	call	_USBCtrlEPService	;wreg free
 35544                           
 35545                           ;usb_device.c: 813: }
 35546  00EDB4  D00E               	goto	i2l176
 35547  00EDB6                     i2l174:
 35548                           
 35549                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 35550  00EDB6  0E00               	movlw	0
 35551  00EDB8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 35552  00EDBA  0E72               	movlw	114
 35553  00EDBC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 35554  00EDBE  0E2C               	movlw	low _USTATcopy
 35555  00EDC0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 35556  00EDC2  0E00               	movlw	high _USTATcopy
 35557  00EDC4  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 35558  00EDC6  0E00               	movlw	0
 35559  00EDC8  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 35560  00EDCA  0E00               	movlw	0
 35561  00EDCC  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 35562  00EDCE  ECF2  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 35563  00EDD2                     i2l176:
 35564  00EDD2  2A4C               	incf	USBDeviceTasks@i,f,c
 35565  00EDD4  D7C9               	goto	i2l21488
 35566  00EDD6                     i2u2163_40:
 35567                           
 35568                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 35569  00EDD6  98A1               	bcf	4001,4,c	;volatile
 35570  00EDD8  0012               	return		;funcret
 35571  00EDDA                     __end_of_USBDeviceTasks:
 35572                           	opt stack 0
 35573                           tosu	equ	0xFFF
 35574                           tosh	equ	0xFFE
 35575                           tosl	equ	0xFFD
 35576                           pclatu	equ	0xFFB
 35577                           pclath	equ	0xFFA
 35578                           tblptru	equ	0xFF8
 35579                           tblptrh	equ	0xFF7
 35580                           tblptrl	equ	0xFF6
 35581                           tablat	equ	0xFF5
 35582                           prodh	equ	0xFF4
 35583                           prodl	equ	0xFF3
 35584                           intcon	equ	0xFF2
 35585                           indf0	equ	0xFEF
 35586                           postinc0	equ	0xFEE
 35587                           fsr0h	equ	0xFEA
 35588                           fsr0l	equ	0xFE9
 35589                           wreg	equ	0xFE8
 35590                           indf1	equ	0xFE7
 35591                           postdec1	equ	0xFE5
 35592                           plusw1	equ	0xFE3
 35593                           fsr1h	equ	0xFE2
 35594                           fsr1l	equ	0xFE1
 35595                           indf2	equ	0xFDF
 35596                           postinc2	equ	0xFDE
 35597                           postdec2	equ	0xFDD
 35598                           plusw2	equ	0xFDB
 35599                           fsr2h	equ	0xFDA
 35600                           fsr2l	equ	0xFD9
 35601                           status	equ	0xFD8
 35602                           
 35603 ;; *************** function i2_USBDeviceInit *****************
 35604 ;; Defined at:
 35605 ;;		line 277 in file "usb_device.c"
 35606 ;; Parameters:    Size  Location     Type
 35607 ;;		None
 35608 ;; Auto vars:     Size  Location     Type
 35609 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 35610 ;; Return value:  Size  Location     Type
 35611 ;;                  1    wreg      void 
 35612 ;; Registers used:
 35613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35614 ;; Tracked objects:
 35615 ;;		On entry : 0/0
 35616 ;;		On exit  : 0/0
 35617 ;;		Unchanged: 0/0
 35618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35620 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35622 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35623 ;;Total ram usage:        1 bytes
 35624 ;; Hardware stack levels used:    1
 35625 ;; Hardware stack levels required when called:    1
 35626 ;; This function calls:
 35627 ;;		i2_memset
 35628 ;; This function is called by:
 35629 ;;		_USBDeviceTasks
 35630 ;; This function uses a non-reentrant model
 35631 ;;
 35632                           
 35633                           	psect	text128
 35634  00EDDA                     __ptext128:
 35635                           	opt stack 0
 35636  00EDDA                     i2_USBDeviceInit:
 35637                           	opt stack 15
 35638                           
 35639                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 35640                           
 35641                           ;incstack = 0
 35642  00EDDA  98A0               	bcf	4000,4,c	;volatile
 35643                           
 35644                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 35645  00EDDC  0E00               	movlw	0
 35646  00EDDE  6E63               	movwf	3939,c	;volatile
 35647                           
 35648                           ;usb_device.c: 291: {UIR = 0;};
 35649  00EDE0  0E00               	movlw	0
 35650  00EDE2  6E62               	movwf	3938,c	;volatile
 35651                           
 35652                           ;usb_device.c: 294: UEP0 = 0;
 35653  00EDE4  0E00               	movlw	0
 35654  00EDE6  010F               	movlb	15	; () banked
 35655  00EDE8  6F26               	movwf	38,b	;volatile
 35656                           
 35657                           ; BSR set to: 15
 35658                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 35659  00EDEA  0E27               	movlw	39
 35660  00EDEC  6E2E               	movwf	i2memset@p1,c
 35661  00EDEE  0E0F               	movlw	15
 35662  00EDF0  6E2F               	movwf	i2memset@p1+1,c
 35663  00EDF2  0E00               	movlw	0
 35664  00EDF4  6E31               	movwf	i2memset@c+1,c
 35665  00EDF6  0E00               	movlw	0
 35666  00EDF8  6E30               	movwf	i2memset@c,c
 35667  00EDFA  0E00               	movlw	0
 35668  00EDFC  6E33               	movwf	i2memset@n+1,c
 35669  00EDFE  0E02               	movlw	2
 35670  00EE00  6E32               	movwf	i2memset@n,c
 35671  00EE02  EC52  F095         	call	i2_memset	;wreg free
 35672                           
 35673                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 35674  00EE06  0E16               	movlw	22
 35675  00EE08  010F               	movlb	15	; () banked
 35676  00EE0A  6F39               	movwf	57,b	;volatile
 35677                           
 35678                           ; BSR set to: 15
 35679  00EE0C  0E9F               	movlw	159
 35680  00EE0E  6F37               	movwf	55,b	;volatile
 35681                           
 35682                           ; BSR set to: 15
 35683  00EE10  0E7B               	movlw	123
 35684  00EE12  6F36               	movwf	54,b	;volatile
 35685                           
 35686                           ; BSR set to: 15
 35687                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 35688  00EE14  0E00               	movlw	0
 35689  00EE16  6E36               	movwf	i2USBDeviceInit@i,c
 35690  00EE18                     i2l15090:
 35691                           
 35692                           ; BSR set to: 15
 35693  00EE18  0E0B               	movlw	11
 35694  00EE1A  6436               	cpfsgt	i2USBDeviceInit@i,c
 35695  00EE1C  D001               	goto	i2l145
 35696  00EE1E  D00E               	goto	i2u1402_40
 35697  00EE20                     i2l145:
 35698                           
 35699                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 35700                           
 35701                           ; BSR set to: 15
 35702  00EE20  5036               	movf	i2USBDeviceInit@i,w,c
 35703  00EE22  0D04               	mullw	4
 35704  00EE24  0E00               	movlw	0
 35705  00EE26  24F3               	addwf	prodl,w,c
 35706  00EE28  6ED9               	movwf	fsr2l,c
 35707  00EE2A  0E0D               	movlw	13
 35708  00EE2C  20F4               	addwfc	prodh,w,c
 35709  00EE2E  6EDA               	movwf	fsr2h,c
 35710  00EE30  6ADE               	clrf	postinc2,c
 35711  00EE32  6ADE               	clrf	postinc2,c
 35712  00EE34  6ADE               	clrf	postinc2,c
 35713  00EE36  6ADD               	clrf	postdec2,c
 35714  00EE38  2A36               	incf	i2USBDeviceInit@i,f,c
 35715  00EE3A  D7EE               	goto	i2l15090
 35716  00EE3C                     i2u1402_40:
 35717                           
 35718                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 35719  00EE3C  8C65               	bsf	3941,6,c	;volatile
 35720                           
 35721                           ;usb_device.c: 316: UADDR = 0x00;
 35722  00EE3E  0E00               	movlw	0
 35723  00EE40  010F               	movlb	15	; () banked
 35724  00EE42  6F38               	movwf	56,b	;volatile
 35725                           
 35726                           ; BSR set to: 15
 35727                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 35728  00EE44  9865               	bcf	3941,4,c	;volatile
 35729                           
 35730                           ; BSR set to: 15
 35731                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 35732  00EE46  9C65               	bcf	3941,6,c	;volatile
 35733  00EE48                     
 35734                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 35735                           
 35736                           ; BSR set to: 15
 35737  00EE48  9662               	bcf	3938,3,c	;volatile
 35738                           
 35739                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 35740  00EE4A  0E00               	movlw	0
 35741  00EE4C  6E04               	movwf	_inPipes+3,c	;volatile
 35742                           
 35743                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 35744  00EE4E  0E00               	movlw	0
 35745  00EE50  0101               	movlb	1	; () banked
 35746  00EE52  6F34               	movwf	(_outPipes+3)& (0+255),b	;volatile
 35747                           
 35748                           ; BSR set to: 1
 35749                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 35750  00EE54  0E00               	movlw	0
 35751  00EE56  6F36               	movwf	(_outPipes+5)& (0+255),b	;volatile
 35752  00EE58  0E00               	movlw	0
 35753  00EE5A  6F35               	movwf	(_outPipes+4)& (0+255),b	;volatile
 35754                           
 35755                           ; BSR set to: 1
 35756                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 35757  00EE5C  B662               	btfsc	3938,3,c	;volatile
 35758  00EE5E  D7F4               	goto	i2l147
 35759                           
 35760                           ; BSR set to: 1
 35761                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 35762                           
 35763                           ; BSR set to: 1
 35764  00EE60  0E01               	movlw	1
 35765  00EE62  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 35766                           
 35767                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 35768  00EE64  0E01               	movlw	1
 35769  00EE66  6F82               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 35770                           
 35771                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 35772  00EE68  0E00               	movlw	0
 35773  00EE6A  6F81               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 35774                           
 35775                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 35776  00EE6C  0E00               	movlw	0
 35777  00EE6E  6F80               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 35778                           
 35779                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 35780  00EE70  0E00               	movlw	0
 35781  00EE72  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 35782                           
 35783                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 35784  00EE74  0E00               	movlw	0
 35785  00EE76  6E36               	movwf	i2USBDeviceInit@i,c
 35786  00EE78                     i2l15118:
 35787                           
 35788                           ; BSR set to: 1
 35789  00EE78  0E02               	movlw	2
 35790  00EE7A  6436               	cpfsgt	i2USBDeviceInit@i,c
 35791  00EE7C  D001               	goto	i2l149
 35792  00EE7E  D02E               	goto	i2u1405_40
 35793  00EE80                     i2l149:
 35794                           
 35795                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 35796                           
 35797                           ; BSR set to: 1
 35798  00EE80  5036               	movf	i2USBDeviceInit@i,w,c
 35799  00EE82  0D02               	mullw	2
 35800  00EE84  0E07               	movlw	low _pBDTEntryIn
 35801  00EE86  24F3               	addwf	prodl,w,c
 35802  00EE88  6ED9               	movwf	fsr2l,c
 35803  00EE8A  0E00               	movlw	high _pBDTEntryIn
 35804  00EE8C  20F4               	addwfc	prodh,w,c
 35805  00EE8E  6EDA               	movwf	fsr2h,c
 35806  00EE90  0E00               	movlw	0
 35807  00EE92  6EDE               	movwf	postinc2,c
 35808  00EE94  0E00               	movlw	0
 35809  00EE96  6EDD               	movwf	postdec2,c
 35810                           
 35811                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 35812  00EE98  5036               	movf	i2USBDeviceInit@i,w,c
 35813  00EE9A  0D02               	mullw	2
 35814  00EE9C  0E41               	movlw	low _pBDTEntryOut
 35815  00EE9E  24F3               	addwf	prodl,w,c
 35816  00EEA0  6ED9               	movwf	fsr2l,c
 35817  00EEA2  0E01               	movlw	high _pBDTEntryOut
 35818  00EEA4  20F4               	addwfc	prodh,w,c
 35819  00EEA6  6EDA               	movwf	fsr2h,c
 35820  00EEA8  0E00               	movlw	0
 35821  00EEAA  6EDE               	movwf	postinc2,c
 35822  00EEAC  0E00               	movlw	0
 35823  00EEAE  6EDD               	movwf	postdec2,c
 35824                           
 35825                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 35826  00EEB0  5036               	movf	i2USBDeviceInit@i,w,c
 35827  00EEB2  0D01               	mullw	1
 35828  00EEB4  0E68               	movlw	low _ep_data_in
 35829  00EEB6  24F3               	addwf	prodl,w,c
 35830  00EEB8  6ED9               	movwf	fsr2l,c
 35831  00EEBA  0E01               	movlw	high _ep_data_in
 35832  00EEBC  20F4               	addwfc	prodh,w,c
 35833  00EEBE  6EDA               	movwf	fsr2h,c
 35834  00EEC0  0E00               	movlw	0
 35835  00EEC2  6EDF               	movwf	indf2,c
 35836                           
 35837                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 35838  00EEC4  5036               	movf	i2USBDeviceInit@i,w,c
 35839  00EEC6  0D01               	mullw	1
 35840  00EEC8  0E65               	movlw	low _ep_data_out
 35841  00EECA  24F3               	addwf	prodl,w,c
 35842  00EECC  6ED9               	movwf	fsr2l,c
 35843  00EECE  0E01               	movlw	high _ep_data_out
 35844  00EED0  20F4               	addwfc	prodh,w,c
 35845  00EED2  6EDA               	movwf	fsr2h,c
 35846  00EED4  0E00               	movlw	0
 35847  00EED6  6EDF               	movwf	indf2,c
 35848  00EED8  2A36               	incf	i2USBDeviceInit@i,f,c
 35849  00EEDA  D7CE               	goto	i2l15118
 35850  00EEDC                     i2u1405_40:
 35851                           
 35852                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 35853  00EEDC  0E08               	movlw	8
 35854  00EEDE  6E07               	movwf	_pBDTEntryIn,c
 35855  00EEE0  0E0D               	movlw	13
 35856  00EEE2  6E08               	movwf	_pBDTEntryIn+1,c
 35857                           
 35858                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 35859  00EEE4  0E16               	movlw	22
 35860  00EEE6  010F               	movlb	15	; () banked
 35861  00EEE8  6F26               	movwf	38,b	;volatile
 35862                           
 35863                           ; BSR set to: 15
 35864                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 35865  00EEEA  0E0D               	movlw	13
 35866  00EEEC  010D               	movlb	13	; () banked
 35867  00EEEE  6F03               	movwf	3,b	;volatile
 35868  00EEF0  0E30               	movlw	48
 35869  00EEF2  6F02               	movwf	2,b	;volatile
 35870                           
 35871                           ; BSR set to: 13
 35872                           ;usb_device.c: 359: BDT[0].CNT = 8;
 35873  00EEF4  0E08               	movlw	8
 35874  00EEF6  6F01               	movwf	1,b	;volatile
 35875                           
 35876                           ; BSR set to: 13
 35877                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 35878  00EEF8  0E04               	movlw	4
 35879  00EEFA  6F00               	movwf	0,b	;volatile
 35880                           
 35881                           ; BSR set to: 13
 35882                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 35883  00EEFC  8F00               	bsf	0,7,b	;volatile
 35884                           
 35885                           ; BSR set to: 13
 35886                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 35887  00EEFE  0E00               	movlw	0
 35888  00EF00  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 35889                           
 35890                           ; BSR set to: 13
 35891                           ;usb_device.c: 366: USB1msTickCount = 0;
 35892  00EF02  0E00               	movlw	0
 35893  00EF04  0101               	movlb	1	; () banked
 35894  00EF06  6F5B               	movwf	_USB1msTickCount& (0+255),b	;volatile
 35895  00EF08  0E00               	movlw	0
 35896  00EF0A  6F5C               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 35897  00EF0C  0E00               	movlw	0
 35898  00EF0E  6F5D               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 35899  00EF10  0E00               	movlw	0
 35900  00EF12  6F5E               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 35901                           
 35902                           ; BSR set to: 1
 35903                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 35904  00EF14  0E00               	movlw	0
 35905  00EF16  6F7F               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 35906                           
 35907                           ; BSR set to: 1
 35908                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 35909  00EF18  0E00               	movlw	0
 35910  00EF1A  6E2B               	movwf	_USBDeviceState,c	;volatile
 35911                           
 35912                           ; BSR set to: 1
 35913  00EF1C  0012               	return		;funcret
 35914  00EF1E                     __end_ofi2_USBDeviceInit:
 35915                           	opt stack 0
 35916                           tosu	equ	0xFFF
 35917                           tosh	equ	0xFFE
 35918                           tosl	equ	0xFFD
 35919                           pclatu	equ	0xFFB
 35920                           pclath	equ	0xFFA
 35921                           tblptru	equ	0xFF8
 35922                           tblptrh	equ	0xFF7
 35923                           tblptrl	equ	0xFF6
 35924                           tablat	equ	0xFF5
 35925                           prodh	equ	0xFF4
 35926                           prodl	equ	0xFF3
 35927                           intcon	equ	0xFF2
 35928                           indf0	equ	0xFEF
 35929                           postinc0	equ	0xFEE
 35930                           fsr0h	equ	0xFEA
 35931                           fsr0l	equ	0xFE9
 35932                           wreg	equ	0xFE8
 35933                           indf1	equ	0xFE7
 35934                           postdec1	equ	0xFE5
 35935                           plusw1	equ	0xFE3
 35936                           fsr1h	equ	0xFE2
 35937                           fsr1l	equ	0xFE1
 35938                           indf2	equ	0xFDF
 35939                           postinc2	equ	0xFDE
 35940                           postdec2	equ	0xFDD
 35941                           plusw2	equ	0xFDB
 35942                           fsr2h	equ	0xFDA
 35943                           fsr2l	equ	0xFD9
 35944                           status	equ	0xFD8
 35945                           
 35946 ;; *************** function _USBWakeFromSuspend *****************
 35947 ;; Defined at:
 35948 ;;		line 2305 in file "usb_device.c"
 35949 ;; Parameters:    Size  Location     Type
 35950 ;;		None
 35951 ;; Auto vars:     Size  Location     Type
 35952 ;;		None
 35953 ;; Return value:  Size  Location     Type
 35954 ;;                  1    wreg      void 
 35955 ;; Registers used:
 35956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35957 ;; Tracked objects:
 35958 ;;		On entry : 0/0
 35959 ;;		On exit  : 0/0
 35960 ;;		Unchanged: 0/0
 35961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35966 ;;Total ram usage:        0 bytes
 35967 ;; Hardware stack levels used:    1
 35968 ;; Hardware stack levels required when called:    4
 35969 ;; This function calls:
 35970 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 35971 ;; This function is called by:
 35972 ;;		_USBDeviceTasks
 35973 ;; This function uses a non-reentrant model
 35974 ;;
 35975                           
 35976                           	psect	text129
 35977  012888                     __ptext129:
 35978                           	opt stack 0
 35979  012888                     _USBWakeFromSuspend:
 35980                           	opt stack 12
 35981                           
 35982                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 35983                           
 35984                           ; BSR set to: 1
 35985                           ;incstack = 0
 35986  012888  0E00               	movlw	0
 35987  01288A  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 35988                           
 35989                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 35990  01288C  0E00               	movlw	0
 35991  01288E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 35992  012890  0E74               	movlw	116
 35993  012892  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 35994  012894  0E00               	movlw	0
 35995  012896  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 35996  012898  0E00               	movlw	0
 35997  01289A  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 35998  01289C  0E00               	movlw	0
 35999  01289E  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 36000  0128A0  0E00               	movlw	0
 36001  0128A2  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 36002  0128A4  ECF2  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 36003                           
 36004                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 36005  0128A8  9265               	bcf	3941,1,c	;volatile
 36006                           
 36007                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 36008  0128AA  010F               	movlb	15	; () banked
 36009  0128AC  9536               	bcf	54,2,b	;volatile
 36010                           
 36011                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 36012  0128AE  D001               	goto	i2l315
 36013  0128B0                     
 36014                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 36015                           
 36016                           ; BSR set to: 15
 36017  0128B0  9462               	bcf	3938,2,c	;volatile
 36018  0128B2                     i2l315:
 36019  0128B2  B462               	btfsc	3938,2,c	;volatile
 36020  0128B4  D7FD               	goto	i2l316
 36021                           
 36022                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 36023  0128B6  0E00               	movlw	0
 36024  0128B8  0101               	movlb	1	; () banked
 36025  0128BA  6F7F               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 36026                           
 36027                           ; BSR set to: 1
 36028  0128BC  0012               	return		;funcret
 36029  0128BE                     __end_of_USBWakeFromSuspend:
 36030                           	opt stack 0
 36031                           tosu	equ	0xFFF
 36032                           tosh	equ	0xFFE
 36033                           tosl	equ	0xFFD
 36034                           pclatu	equ	0xFFB
 36035                           pclath	equ	0xFFA
 36036                           tblptru	equ	0xFF8
 36037                           tblptrh	equ	0xFF7
 36038                           tblptrl	equ	0xFF6
 36039                           tablat	equ	0xFF5
 36040                           prodh	equ	0xFF4
 36041                           prodl	equ	0xFF3
 36042                           intcon	equ	0xFF2
 36043                           indf0	equ	0xFEF
 36044                           postinc0	equ	0xFEE
 36045                           fsr0h	equ	0xFEA
 36046                           fsr0l	equ	0xFE9
 36047                           wreg	equ	0xFE8
 36048                           indf1	equ	0xFE7
 36049                           postdec1	equ	0xFE5
 36050                           plusw1	equ	0xFE3
 36051                           fsr1h	equ	0xFE2
 36052                           fsr1l	equ	0xFE1
 36053                           indf2	equ	0xFDF
 36054                           postinc2	equ	0xFDE
 36055                           postdec2	equ	0xFDD
 36056                           plusw2	equ	0xFDB
 36057                           fsr2h	equ	0xFDA
 36058                           fsr2l	equ	0xFD9
 36059                           status	equ	0xFD8
 36060                           
 36061 ;; *************** function _USBSuspend *****************
 36062 ;; Defined at:
 36063 ;;		line 2247 in file "usb_device.c"
 36064 ;; Parameters:    Size  Location     Type
 36065 ;;		None
 36066 ;; Auto vars:     Size  Location     Type
 36067 ;;		None
 36068 ;; Return value:  Size  Location     Type
 36069 ;;                  1    wreg      void 
 36070 ;; Registers used:
 36071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36072 ;; Tracked objects:
 36073 ;;		On entry : 0/0
 36074 ;;		On exit  : 0/0
 36075 ;;		Unchanged: 0/0
 36076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36081 ;;Total ram usage:        0 bytes
 36082 ;; Hardware stack levels used:    1
 36083 ;; Hardware stack levels required when called:    4
 36084 ;; This function calls:
 36085 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 36086 ;; This function is called by:
 36087 ;;		_USBDeviceTasks
 36088 ;; This function uses a non-reentrant model
 36089 ;;
 36090                           
 36091                           	psect	text130
 36092  0129EC                     __ptext130:
 36093                           	opt stack 0
 36094  0129EC                     _USBSuspend:
 36095                           	opt stack 12
 36096                           
 36097                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 36098                           
 36099                           ; BSR set to: 1
 36100                           ;incstack = 0
 36101  0129EC  010F               	movlb	15	; () banked
 36102  0129EE  8536               	bsf	54,2,b	;volatile
 36103                           
 36104                           ; BSR set to: 15
 36105                           ;usb_device.c: 2273: (UIR &= 0xEF);
 36106  0129F0  9862               	bcf	3938,4,c	;volatile
 36107                           
 36108                           ; BSR set to: 15
 36109                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 36110  0129F2  8265               	bsf	3941,1,c	;volatile
 36111                           
 36112                           ; BSR set to: 15
 36113                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 36114  0129F4  0E01               	movlw	1
 36115  0129F6  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 36116                           
 36117                           ; BSR set to: 15
 36118                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 36119  0129F8  0E00               	movlw	0
 36120  0129FA  0101               	movlb	1	; () banked
 36121  0129FC  6F7F               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 36122                           
 36123                           ; BSR set to: 1
 36124                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 36125  0129FE  0E00               	movlw	0
 36126  012A00  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 36127  012A02  0E75               	movlw	117
 36128  012A04  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 36129  012A06  0E00               	movlw	0
 36130  012A08  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 36131  012A0A  0E00               	movlw	0
 36132  012A0C  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 36133  012A0E  0E00               	movlw	0
 36134  012A10  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 36135  012A12  0E00               	movlw	0
 36136  012A14  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 36137  012A16  ECF2  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 36138  012A1A  0012               	return		;funcret
 36139  012A1C                     __end_of_USBSuspend:
 36140                           	opt stack 0
 36141                           tosu	equ	0xFFF
 36142                           tosh	equ	0xFFE
 36143                           tosl	equ	0xFFD
 36144                           pclatu	equ	0xFFB
 36145                           pclath	equ	0xFFA
 36146                           tblptru	equ	0xFF8
 36147                           tblptrh	equ	0xFF7
 36148                           tblptrl	equ	0xFF6
 36149                           tablat	equ	0xFF5
 36150                           prodh	equ	0xFF4
 36151                           prodl	equ	0xFF3
 36152                           intcon	equ	0xFF2
 36153                           indf0	equ	0xFEF
 36154                           postinc0	equ	0xFEE
 36155                           fsr0h	equ	0xFEA
 36156                           fsr0l	equ	0xFE9
 36157                           wreg	equ	0xFE8
 36158                           indf1	equ	0xFE7
 36159                           postdec1	equ	0xFE5
 36160                           plusw1	equ	0xFE3
 36161                           fsr1h	equ	0xFE2
 36162                           fsr1l	equ	0xFE1
 36163                           indf2	equ	0xFDF
 36164                           postinc2	equ	0xFDE
 36165                           postdec2	equ	0xFDD
 36166                           plusw2	equ	0xFDB
 36167                           fsr2h	equ	0xFDA
 36168                           fsr2l	equ	0xFD9
 36169                           status	equ	0xFD8
 36170                           
 36171 ;; *************** function _USBStallHandler *****************
 36172 ;; Defined at:
 36173 ;;		line 2204 in file "usb_device.c"
 36174 ;; Parameters:    Size  Location     Type
 36175 ;;		None
 36176 ;; Auto vars:     Size  Location     Type
 36177 ;;		None
 36178 ;; Return value:  Size  Location     Type
 36179 ;;                  1    wreg      void 
 36180 ;; Registers used:
 36181 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36182 ;; Tracked objects:
 36183 ;;		On entry : 0/0
 36184 ;;		On exit  : 0/0
 36185 ;;		Unchanged: 0/0
 36186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36189 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36190 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36191 ;;Total ram usage:        1 bytes
 36192 ;; Hardware stack levels used:    1
 36193 ;; This function calls:
 36194 ;;		Nothing
 36195 ;; This function is called by:
 36196 ;;		_USBDeviceTasks
 36197 ;; This function uses a non-reentrant model
 36198 ;;
 36199                           
 36200                           	psect	text131
 36201  0125FC                     __ptext131:
 36202                           	opt stack 0
 36203  0125FC                     _USBStallHandler:
 36204                           	opt stack 16
 36205                           
 36206                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 36207                           
 36208                           ;incstack = 0
 36209  0125FC  010F               	movlb	15	; () banked
 36210  0125FE  A126               	btfss	38,0,b	;volatile
 36211  012600  D01D               	goto	i2l307
 36212                           
 36213                           ; BSR set to: 15
 36214                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 36215  012602  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 36216  012606  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 36217  01260A  0E80               	movlw	128
 36218  01260C  18DE               	xorwf	postinc2,w,c
 36219  01260E  A4D8               	btfss	status,2,c
 36220  012610  D014               	goto	i2l308
 36221                           
 36222                           ; BSR set to: 15
 36223  012612  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 36224  012616  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36225  01261A  0E84               	movlw	132
 36226  01261C  18DE               	xorwf	postinc2,w,c
 36227  01261E  A4D8               	btfss	status,2,c
 36228  012620  D00C               	goto	i2l308
 36229                           
 36230                           ; BSR set to: 15
 36231                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 36232  012622  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 36233  012626  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 36234  01262A  0E0C               	movlw	12
 36235  01262C  6EDF               	movwf	indf2,c
 36236                           
 36237                           ; BSR set to: 15
 36238                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 36239  01262E  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 36240  012632  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 36241  012636  0E00               	movlw	0
 36242  012638  8EDB               	bsf	plusw2,7,c
 36243  01263A                     i2l308:
 36244                           
 36245                           ; BSR set to: 15
 36246                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 36247                           
 36248                           ; BSR set to: 15
 36249  01263A  9126               	bcf	38,0,b	;volatile
 36250  01263C                     i2l307:
 36251                           
 36252                           ; BSR set to: 15
 36253                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 36254  01263C  9A62               	bcf	3938,5,c	;volatile
 36255                           
 36256                           ; BSR set to: 15
 36257  01263E  0012               	return		;funcret
 36258  012640                     __end_of_USBStallHandler:
 36259                           	opt stack 0
 36260                           tosu	equ	0xFFF
 36261                           tosh	equ	0xFFE
 36262                           tosl	equ	0xFFD
 36263                           pclatu	equ	0xFFB
 36264                           pclath	equ	0xFFA
 36265                           tblptru	equ	0xFF8
 36266                           tblptrh	equ	0xFF7
 36267                           tblptrl	equ	0xFF6
 36268                           tablat	equ	0xFF5
 36269                           prodh	equ	0xFF4
 36270                           prodl	equ	0xFF3
 36271                           intcon	equ	0xFF2
 36272                           indf0	equ	0xFEF
 36273                           postinc0	equ	0xFEE
 36274                           fsr0h	equ	0xFEA
 36275                           fsr0l	equ	0xFE9
 36276                           wreg	equ	0xFE8
 36277                           indf1	equ	0xFE7
 36278                           postdec1	equ	0xFE5
 36279                           plusw1	equ	0xFE3
 36280                           fsr1h	equ	0xFE2
 36281                           fsr1l	equ	0xFE1
 36282                           indf2	equ	0xFDF
 36283                           postinc2	equ	0xFDE
 36284                           postdec2	equ	0xFDD
 36285                           plusw2	equ	0xFDB
 36286                           fsr2h	equ	0xFDA
 36287                           fsr2l	equ	0xFD9
 36288                           status	equ	0xFD8
 36289                           
 36290 ;; *************** function _USBIncrement1msInternalTimers *****************
 36291 ;; Defined at:
 36292 ;;		line 3027 in file "usb_device.c"
 36293 ;; Parameters:    Size  Location     Type
 36294 ;;		None
 36295 ;; Auto vars:     Size  Location     Type
 36296 ;;		None
 36297 ;; Return value:  Size  Location     Type
 36298 ;;                  1    wreg      void 
 36299 ;; Registers used:
 36300 ;;		wreg, status,2, status,0
 36301 ;; Tracked objects:
 36302 ;;		On entry : 0/0
 36303 ;;		On exit  : 0/0
 36304 ;;		Unchanged: 0/0
 36305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36310 ;;Total ram usage:        0 bytes
 36311 ;; Hardware stack levels used:    1
 36312 ;; This function calls:
 36313 ;;		Nothing
 36314 ;; This function is called by:
 36315 ;;		_USBDeviceTasks
 36316 ;; This function uses a non-reentrant model
 36317 ;;
 36318                           
 36319                           	psect	text132
 36320  012BFA                     __ptext132:
 36321                           	opt stack 0
 36322  012BFA                     _USBIncrement1msInternalTimers:
 36323                           	opt stack 16
 36324                           
 36325                           ;usb_device.c: 3035: USB1msTickCount++;
 36326                           
 36327                           ; BSR set to: 15
 36328                           ;incstack = 0
 36329  012BFA  0E01               	movlw	1
 36330  012BFC  0101               	movlb	1	; () banked
 36331  012BFE  275B               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 36332  012C00  0E00               	movlw	0
 36333  012C02  235C               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 36334  012C04  235D               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 36335  012C06  235E               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 36336                           
 36337                           ; BSR set to: 1
 36338                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 36339  012C08  5027               	movf	_USBBusIsSuspended,w,c	;volatile
 36340  012C0A  A4D8               	btfss	status,2,c
 36341  012C0C  0012               	return	
 36342                           
 36343                           ; BSR set to: 1
 36344                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 36345  012C0E  2B7F               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 36346                           
 36347                           ; BSR set to: 1
 36348                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 36349  012C10  517F               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 36350  012C12  A4D8               	btfss	status,2,c
 36351  012C14  0012               	return	
 36352                           
 36353                           ; BSR set to: 1
 36354                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 36355  012C16  697F               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 36356                           
 36357                           ; BSR set to: 1
 36358  012C18  0012               	return	
 36359  012C1A                     __end_of_USBIncrement1msInternalTimers:
 36360                           	opt stack 0
 36361                           tosu	equ	0xFFF
 36362                           tosh	equ	0xFFE
 36363                           tosl	equ	0xFFD
 36364                           pclatu	equ	0xFFB
 36365                           pclath	equ	0xFFA
 36366                           tblptru	equ	0xFF8
 36367                           tblptrh	equ	0xFF7
 36368                           tblptrl	equ	0xFF6
 36369                           tablat	equ	0xFF5
 36370                           prodh	equ	0xFF4
 36371                           prodl	equ	0xFF3
 36372                           intcon	equ	0xFF2
 36373                           indf0	equ	0xFEF
 36374                           postinc0	equ	0xFEE
 36375                           fsr0h	equ	0xFEA
 36376                           fsr0l	equ	0xFE9
 36377                           wreg	equ	0xFE8
 36378                           indf1	equ	0xFE7
 36379                           postdec1	equ	0xFE5
 36380                           plusw1	equ	0xFE3
 36381                           fsr1h	equ	0xFE2
 36382                           fsr1l	equ	0xFE1
 36383                           indf2	equ	0xFDF
 36384                           postinc2	equ	0xFDE
 36385                           postdec2	equ	0xFDD
 36386                           plusw2	equ	0xFDB
 36387                           fsr2h	equ	0xFDA
 36388                           fsr2l	equ	0xFD9
 36389                           status	equ	0xFD8
 36390                           
 36391 ;; *************** function _USBCtrlEPService *****************
 36392 ;; Defined at:
 36393 ;;		line 2374 in file "usb_device.c"
 36394 ;; Parameters:    Size  Location     Type
 36395 ;;		None
 36396 ;; Auto vars:     Size  Location     Type
 36397 ;;		None
 36398 ;; Return value:  Size  Location     Type
 36399 ;;                  1    wreg      void 
 36400 ;; Registers used:
 36401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 36402 ;; Tracked objects:
 36403 ;;		On entry : 0/0
 36404 ;;		On exit  : 0/0
 36405 ;;		Unchanged: 0/0
 36406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36411 ;;Total ram usage:        1 bytes
 36412 ;; Hardware stack levels used:    1
 36413 ;; Hardware stack levels required when called:    7
 36414 ;; This function calls:
 36415 ;;		_USBCtrlTrfInHandler
 36416 ;;		_USBCtrlTrfOutHandler
 36417 ;;		_USBCtrlTrfSetupHandler
 36418 ;;		i2_memcpy
 36419 ;; This function is called by:
 36420 ;;		_USBDeviceTasks
 36421 ;; This function uses a non-reentrant model
 36422 ;;
 36423                           
 36424                           	psect	text133
 36425  011506                     __ptext133:
 36426                           	opt stack 0
 36427  011506                     _USBCtrlEPService:
 36428                           	opt stack 9
 36429                           
 36430                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 36431                           
 36432                           ; BSR set to: 1
 36433                           ;incstack = 0
 36434  011506  0E2D               	movlw	45
 36435  011508  6E24               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 36436                           
 36437                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 36438  01150A  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 36439  01150E  0EFD               	movlw	253
 36440  011510  164B               	andwf	??_USBCtrlEPService,f,c
 36441  011512  A4D8               	btfss	status,2,c
 36442  011514  D03B               	goto	i2l321
 36443                           
 36444                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 36445  011516  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 36446  01151A  90D8               	bcf	status,0,c
 36447  01151C  324B               	rrcf	??_USBCtrlEPService,f,c
 36448  01151E  0E3F               	movlw	63
 36449  011520  164B               	andwf	??_USBCtrlEPService,f,c
 36450  011522  504B               	movf	??_USBCtrlEPService,w,c
 36451  011524  0D04               	mullw	4
 36452  011526  0E00               	movlw	0
 36453  011528  24F3               	addwf	prodl,w,c
 36454  01152A  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
 36455  01152C  0E0D               	movlw	13
 36456  01152E  20F4               	addwfc	prodh,w,c
 36457  011530  6E18               	movwf	_pBDTEntryEP0OutCurrent+1,c
 36458                           
 36459                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 36460  011532  C017  F015         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 36461  011536  C018  F016         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 36462                           
 36463                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 36464  01153A  0E04               	movlw	4
 36465  01153C  1815               	xorwf	_pBDTEntryEP0OutNext,w,c
 36466  01153E  6E15               	movwf	_pBDTEntryEP0OutNext,c
 36467  011540  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 36468  011542  6E16               	movwf	_pBDTEntryEP0OutNext+1,c
 36469                           
 36470                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 36471  011544  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 36472  011548  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 36473  01154C  30DF               	rrcf	indf2,w,c
 36474  01154E  32E8               	rrcf	wreg,f,c
 36475  011550  0B0F               	andlw	15
 36476  011552  0A0D               	xorlw	13
 36477  011554  A4D8               	btfss	status,2,c
 36478  011556  D017               	goto	i2l322
 36479                           
 36480                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 36481  011558  0E30               	movlw	48
 36482  01155A  6E2E               	movwf	i2memcpy@d1,c
 36483  01155C  0E0D               	movlw	13
 36484  01155E  6E2F               	movwf	i2memcpy@d1+1,c
 36485  011560  EE20 F002          	lfsr	2,2
 36486  011564  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 36487  011566  26D9               	addwf	fsr2l,f,c
 36488  011568  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 36489  01156A  22DA               	addwfc	fsr2h,f,c
 36490  01156C  CFDE F030          	movff	postinc2,i2memcpy@s1
 36491  011570  CFDD F031          	movff	postdec2,i2memcpy@s1+1
 36492  011574  0E00               	movlw	0
 36493  011576  6E33               	movwf	i2memcpy@n+1,c
 36494  011578  0E08               	movlw	8
 36495  01157A  6E32               	movwf	i2memcpy@n,c
 36496  01157C  EC28  F08F         	call	i2_memcpy	;wreg free
 36497                           
 36498                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 36499  011580  ECAA  F08B         	call	_USBCtrlTrfSetupHandler	;wreg free
 36500                           
 36501                           ;usb_device.c: 2411: }
 36502  011584  0012               	return	
 36503  011586                     i2l322:
 36504                           
 36505                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 36506  011586  EC56  F08F         	call	_USBCtrlTrfOutHandler	;wreg free
 36507                           
 36508                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 36509  01158A  0012               	return	
 36510  01158C                     i2l321:
 36511                           
 36512                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 36513  01158C  502C               	movf	_USTATcopy,w,c	;volatile
 36514  01158E  0BFD               	andlw	253
 36515  011590  0A04               	xorlw	4
 36516  011592  A4D8               	btfss	status,2,c
 36517  011594  0012               	return	
 36518                           
 36519                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 36520  011596  EC31  F086         	call	_USBCtrlTrfInHandler	;wreg free
 36521  01159A  0012               	return	
 36522  01159C                     __end_of_USBCtrlEPService:
 36523                           	opt stack 0
 36524                           tosu	equ	0xFFF
 36525                           tosh	equ	0xFFE
 36526                           tosl	equ	0xFFD
 36527                           pclatu	equ	0xFFB
 36528                           pclath	equ	0xFFA
 36529                           tblptru	equ	0xFF8
 36530                           tblptrh	equ	0xFF7
 36531                           tblptrl	equ	0xFF6
 36532                           tablat	equ	0xFF5
 36533                           prodh	equ	0xFF4
 36534                           prodl	equ	0xFF3
 36535                           intcon	equ	0xFF2
 36536                           indf0	equ	0xFEF
 36537                           postinc0	equ	0xFEE
 36538                           fsr0h	equ	0xFEA
 36539                           fsr0l	equ	0xFE9
 36540                           wreg	equ	0xFE8
 36541                           indf1	equ	0xFE7
 36542                           postdec1	equ	0xFE5
 36543                           plusw1	equ	0xFE3
 36544                           fsr1h	equ	0xFE2
 36545                           fsr1l	equ	0xFE1
 36546                           indf2	equ	0xFDF
 36547                           postinc2	equ	0xFDE
 36548                           postdec2	equ	0xFDD
 36549                           plusw2	equ	0xFDB
 36550                           fsr2h	equ	0xFDA
 36551                           fsr2l	equ	0xFD9
 36552                           status	equ	0xFD8
 36553                           
 36554 ;; *************** function i2_memcpy *****************
 36555 ;; Defined at:
 36556 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 36557 ;; Parameters:    Size  Location     Type
 36558 ;;  d1              2    0[COMRAM] PTR void 
 36559 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 36560 ;;		 -> msd_buffer(512), SetupPkt(8), 
 36561 ;;  s1              2    2[COMRAM] PTR const void 
 36562 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 36563 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 36564 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 36565 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 36566 ;;		 -> dc_main(80), ReceivedDataBuffer(64), config(22), os(48), 
 36567 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 36568 ;;  n               2    4[COMRAM] unsigned int 
 36569 ;; Auto vars:     Size  Location     Type
 36570 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 36571 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 36572 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 36573 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 36574 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 36575 ;;		 -> dc_main(80), ReceivedDataBuffer(64), config(22), os(48), 
 36576 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 36577 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 36578 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 36579 ;;		 -> msd_buffer(512), SetupPkt(8), 
 36580 ;;  memcpy          1   10[COMRAM] unsigned char 
 36581 ;; Return value:  Size  Location     Type
 36582 ;;                  2    0[COMRAM] PTR void 
 36583 ;; Registers used:
 36584 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36585 ;; Tracked objects:
 36586 ;;		On entry : 0/0
 36587 ;;		On exit  : 0/0
 36588 ;;		Unchanged: 0/0
 36589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36590 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36591 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36593 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36594 ;;Total ram usage:       11 bytes
 36595 ;; Hardware stack levels used:    1
 36596 ;; This function calls:
 36597 ;;		Nothing
 36598 ;; This function is called by:
 36599 ;;		_USBCtrlEPService
 36600 ;; This function uses a non-reentrant model
 36601 ;;
 36602                           
 36603                           	psect	text134
 36604  011E50                     __ptext134:
 36605                           	opt stack 0
 36606  011E50                     i2_memcpy:
 36607                           	opt stack 15
 36608                           
 36609                           ;incstack = 0
 36610  011E50  C030  F036         	movff	i2memcpy@s1,i2memcpy@s
 36611  011E54  C031  F037         	movff	i2memcpy@s1+1,i2memcpy@s+1
 36612  011E58  C02E  F034         	movff	i2memcpy@d1,i2memcpy@d
 36613  011E5C  C02F  F035         	movff	i2memcpy@d1+1,i2memcpy@d+1
 36614  011E60  D01C               	goto	i2l3400
 36615  011E62                     i2l14208:
 36616  011E62  C036  FFF6         	movff	i2memcpy@s,tblptrl
 36617  011E66  C037  FFF7         	movff	i2memcpy@s+1,tblptrh
 36618  011E6A  0E00               	movlw	low (__mediumconst shr (0+16))
 36619  011E6C  6EF8               	movwf	tblptru,c
 36620  011E6E  0E0E               	movlw	(high __ramtop+-1)
 36621  011E70  64F7               	cpfsgt	tblptrh,c
 36622  011E72  D003               	bra	i2u1281_47
 36623  011E74  0008               	tblrd		*
 36624  011E76  50F5               	movf	tablat,w,c
 36625  011E78  D005               	bra	i2u1281_40
 36626  011E7A                     i2u1281_47:
 36627  011E7A  CFF6 FFE9          	movff	tblptrl,fsr0l
 36628  011E7E  CFF7 FFEA          	movff	tblptrh,fsr0h
 36629  011E82  50EF               	movf	indf0,w,c
 36630  011E84                     i2u1281_40:
 36631  011E84  6E38               	movwf	i2memcpy@tmp,c
 36632  011E86  4A36               	infsnz	i2memcpy@s,f,c
 36633  011E88  2A37               	incf	i2memcpy@s+1,f,c
 36634  011E8A  C034  FFD9         	movff	i2memcpy@d,fsr2l
 36635  011E8E  C035  FFDA         	movff	i2memcpy@d+1,fsr2h
 36636  011E92  C038  FFDF         	movff	i2memcpy@tmp,indf2
 36637  011E96  4A34               	infsnz	i2memcpy@d,f,c
 36638  011E98  2A35               	incf	i2memcpy@d+1,f,c
 36639  011E9A                     i2l3400:
 36640  011E9A  0632               	decf	i2memcpy@n,f,c
 36641  011E9C  A0D8               	btfss	status,0,c
 36642  011E9E  0633               	decf	i2memcpy@n+1,f,c
 36643  011EA0  2832               	incf	i2memcpy@n,w,c
 36644  011EA2  E1DF               	bnz	i2l14208
 36645  011EA4  2833               	incf	i2memcpy@n+1,w,c
 36646  011EA6  B4D8               	btfsc	status,2,c
 36647  011EA8  0012               	return	
 36648  011EAA  D7DB               	goto	i2l3401
 36649  011EAC                     __end_ofi2_memcpy:
 36650                           	opt stack 0
 36651                           tosu	equ	0xFFF
 36652                           tosh	equ	0xFFE
 36653                           tosl	equ	0xFFD
 36654                           pclatu	equ	0xFFB
 36655                           pclath	equ	0xFFA
 36656                           tblptru	equ	0xFF8
 36657                           tblptrh	equ	0xFF7
 36658                           tblptrl	equ	0xFF6
 36659                           tablat	equ	0xFF5
 36660                           prodh	equ	0xFF4
 36661                           prodl	equ	0xFF3
 36662                           intcon	equ	0xFF2
 36663                           indf0	equ	0xFEF
 36664                           postinc0	equ	0xFEE
 36665                           fsr0h	equ	0xFEA
 36666                           fsr0l	equ	0xFE9
 36667                           wreg	equ	0xFE8
 36668                           indf1	equ	0xFE7
 36669                           postdec1	equ	0xFE5
 36670                           plusw1	equ	0xFE3
 36671                           fsr1h	equ	0xFE2
 36672                           fsr1l	equ	0xFE1
 36673                           indf2	equ	0xFDF
 36674                           postinc2	equ	0xFDE
 36675                           postdec2	equ	0xFDD
 36676                           plusw2	equ	0xFDB
 36677                           fsr2h	equ	0xFDA
 36678                           fsr2l	equ	0xFD9
 36679                           status	equ	0xFD8
 36680                           
 36681 ;; *************** function _USBCtrlTrfSetupHandler *****************
 36682 ;; Defined at:
 36683 ;;		line 2467 in file "usb_device.c"
 36684 ;; Parameters:    Size  Location     Type
 36685 ;;		None
 36686 ;; Auto vars:     Size  Location     Type
 36687 ;;		None
 36688 ;; Return value:  Size  Location     Type
 36689 ;;                  1    wreg      void 
 36690 ;; Registers used:
 36691 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36692 ;; Tracked objects:
 36693 ;;		On entry : 0/0
 36694 ;;		On exit  : 0/0
 36695 ;;		Unchanged: 0/0
 36696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36701 ;;Total ram usage:        0 bytes
 36702 ;; Hardware stack levels used:    1
 36703 ;; Hardware stack levels required when called:    6
 36704 ;; This function calls:
 36705 ;;		_USBCheckStdRequest
 36706 ;;		_USBCtrlEPServiceComplete
 36707 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 36708 ;; This function is called by:
 36709 ;;		_USBCtrlEPService
 36710 ;; This function uses a non-reentrant model
 36711 ;;
 36712                           
 36713                           	psect	text135
 36714  011754                     __ptext135:
 36715                           	opt stack 0
 36716  011754                     _USBCtrlTrfSetupHandler:
 36717                           	opt stack 9
 36718                           
 36719                           ;usb_device.c: 2472: shortPacketStatus = 0;
 36720                           
 36721                           ;incstack = 0
 36722  011754  0E00               	movlw	0
 36723  011756  6E2A               	movwf	_shortPacketStatus,c	;volatile
 36724                           
 36725                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 36726  011758  0E00               	movlw	0
 36727  01175A  6E23               	movwf	_USBDeferStatusStagePacket,c	;volatile
 36728                           
 36729                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 36730  01175C  0E00               	movlw	0
 36731  01175E  0101               	movlb	1	; () banked
 36732  011760  6F81               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 36733                           
 36734                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 36735  011762  0E00               	movlw	0
 36736  011764  6F80               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 36737                           
 36738                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 36739  011766  0E00               	movlw	0
 36740  011768  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 36741                           
 36742                           ;usb_device.c: 2477: controlTransferState = 0;
 36743  01176A  0E00               	movlw	0
 36744  01176C  6E29               	movwf	_controlTransferState,c	;volatile
 36745                           
 36746                           ; BSR set to: 1
 36747                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 36748  01176E  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 36749  011772  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36750  011776  0E7F               	movlw	127
 36751  011778  16DF               	andwf	indf2,f,c
 36752                           
 36753                           ; BSR set to: 1
 36754                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 36755  01177A  0E04               	movlw	4
 36756  01177C  1807               	xorwf	_pBDTEntryIn,w,c
 36757  01177E  6E07               	movwf	_pBDTEntryIn,c
 36758  011780  5008               	movf	_pBDTEntryIn+1,w,c
 36759  011782  6E08               	movwf	_pBDTEntryIn+1,c
 36760                           
 36761                           ; BSR set to: 1
 36762                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 36763  011784  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 36764  011788  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36765  01178C  0E7F               	movlw	127
 36766  01178E  16DF               	andwf	indf2,f,c
 36767                           
 36768                           ; BSR set to: 1
 36769                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 36770  011790  0E04               	movlw	4
 36771  011792  1807               	xorwf	_pBDTEntryIn,w,c
 36772  011794  6E07               	movwf	_pBDTEntryIn,c
 36773  011796  5008               	movf	_pBDTEntryIn+1,w,c
 36774  011798  6E08               	movwf	_pBDTEntryIn+1,c
 36775                           
 36776                           ; BSR set to: 1
 36777                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 36778  01179A  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36779  01179E  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36780  0117A2  0E7F               	movlw	127
 36781  0117A4  16DF               	andwf	indf2,f,c
 36782                           
 36783                           ; BSR set to: 1
 36784                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 36785  0117A6  0E00               	movlw	0
 36786  0117A8  6E04               	movwf	_inPipes+3,c	;volatile
 36787                           
 36788                           ; BSR set to: 1
 36789                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 36790  0117AA  0E00               	movlw	0
 36791  0117AC  6E06               	movwf	_inPipes+5,c	;volatile
 36792  0117AE  0E00               	movlw	0
 36793  0117B0  6E05               	movwf	_inPipes+4,c	;volatile
 36794                           
 36795                           ; BSR set to: 1
 36796                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 36797  0117B2  0E00               	movlw	0
 36798  0117B4  6F34               	movwf	(_outPipes+3)& (0+255),b	;volatile
 36799                           
 36800                           ; BSR set to: 1
 36801                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 36802  0117B6  0E00               	movlw	0
 36803  0117B8  6F36               	movwf	(_outPipes+5)& (0+255),b	;volatile
 36804  0117BA  0E00               	movlw	0
 36805  0117BC  6F35               	movwf	(_outPipes+4)& (0+255),b	;volatile
 36806                           
 36807                           ; BSR set to: 1
 36808                           ;usb_device.c: 2502: USBCheckStdRequest();
 36809  0117BE  EC5F  F083         	call	_USBCheckStdRequest	;wreg free
 36810                           
 36811                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 36812  0117C2  0E00               	movlw	0
 36813  0117C4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 36814  0117C6  0E03               	movlw	3
 36815  0117C8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 36816  0117CA  0E00               	movlw	0
 36817  0117CC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 36818  0117CE  0E00               	movlw	0
 36819  0117D0  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 36820  0117D2  0E00               	movlw	0
 36821  0117D4  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 36822  0117D6  0E00               	movlw	0
 36823  0117D8  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 36824  0117DA  ECF2  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 36825                           
 36826                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 36827  0117DE  ECC6  F07F         	call	_USBCtrlEPServiceComplete	;wreg free
 36828  0117E2  0012               	return		;funcret
 36829  0117E4                     __end_of_USBCtrlTrfSetupHandler:
 36830                           	opt stack 0
 36831                           tosu	equ	0xFFF
 36832                           tosh	equ	0xFFE
 36833                           tosl	equ	0xFFD
 36834                           pclatu	equ	0xFFB
 36835                           pclath	equ	0xFFA
 36836                           tblptru	equ	0xFF8
 36837                           tblptrh	equ	0xFF7
 36838                           tblptrl	equ	0xFF6
 36839                           tablat	equ	0xFF5
 36840                           prodh	equ	0xFF4
 36841                           prodl	equ	0xFF3
 36842                           intcon	equ	0xFF2
 36843                           indf0	equ	0xFEF
 36844                           postinc0	equ	0xFEE
 36845                           fsr0h	equ	0xFEA
 36846                           fsr0l	equ	0xFE9
 36847                           wreg	equ	0xFE8
 36848                           indf1	equ	0xFE7
 36849                           postdec1	equ	0xFE5
 36850                           plusw1	equ	0xFE3
 36851                           fsr1h	equ	0xFE2
 36852                           fsr1l	equ	0xFE1
 36853                           indf2	equ	0xFDF
 36854                           postinc2	equ	0xFDE
 36855                           postdec2	equ	0xFDD
 36856                           plusw2	equ	0xFDB
 36857                           fsr2h	equ	0xFDA
 36858                           fsr2l	equ	0xFD9
 36859                           status	equ	0xFD8
 36860                           
 36861 ;; *************** function _USBCtrlEPServiceComplete *****************
 36862 ;; Defined at:
 36863 ;;		line 1618 in file "usb_device.c"
 36864 ;; Parameters:    Size  Location     Type
 36865 ;;		None
 36866 ;; Auto vars:     Size  Location     Type
 36867 ;;		None
 36868 ;; Return value:  Size  Location     Type
 36869 ;;                  1    wreg      void 
 36870 ;; Registers used:
 36871 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36872 ;; Tracked objects:
 36873 ;;		On entry : 0/0
 36874 ;;		On exit  : 0/0
 36875 ;;		Unchanged: 0/0
 36876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36881 ;;Total ram usage:        0 bytes
 36882 ;; Hardware stack levels used:    1
 36883 ;; Hardware stack levels required when called:    2
 36884 ;; This function calls:
 36885 ;;		_USBCtrlEPAllowDataStage
 36886 ;;		_USBCtrlEPAllowStatusStage
 36887 ;; This function is called by:
 36888 ;;		_USBCtrlTrfSetupHandler
 36889 ;; This function uses a non-reentrant model
 36890 ;;
 36891                           
 36892                           	psect	text136
 36893  00FF8C                     __ptext136:
 36894                           	opt stack 0
 36895  00FF8C                     _USBCtrlEPServiceComplete:
 36896                           	opt stack 12
 36897                           
 36898                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 36899                           
 36900                           ;incstack = 0
 36901  00FF8C  9865               	bcf	3941,4,c	;volatile
 36902                           
 36903                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 36904  00FF8E  BE04               	btfsc	_inPipes+3,7,c	;volatile
 36905  00FF90  D03A               	goto	i2l231
 36906                           
 36907                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 36908  00FF92  0101               	movlb	1	; () banked
 36909  00FF94  AF34               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 36910  00FF96  D00C               	goto	i2l232
 36911                           
 36912                           ; BSR set to: 1
 36913                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 36914  00FF98  0E02               	movlw	2
 36915  00FF9A  6E29               	movwf	_controlTransferState,c	;volatile
 36916                           
 36917                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 36918  00FF9C  5180               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 36919  00FF9E  B4D8               	btfsc	status,2,c
 36920                           
 36921                           ; BSR set to: 1
 36922                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 36923  00FFA0  EC37  F08A         	call	_USBCtrlEPAllowDataStage	;wreg free
 36924                           
 36925                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 36926  00FFA4  0E00               	movlw	0
 36927  00FFA6  0101               	movlb	1	; () banked
 36928  00FFA8  6F82               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 36929                           
 36930                           ; BSR set to: 1
 36931                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 36932  00FFAA  0E00               	movlw	0
 36933  00FFAC  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 36934                           
 36935                           ;usb_device.c: 1654: }
 36936  00FFAE  0012               	return	
 36937  00FFB0                     i2l232:
 36938                           
 36939                           ; BSR set to: 1
 36940                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 36941                           
 36942                           ; BSR set to: 1
 36943  00FFB0  EE20 F001          	lfsr	2,1
 36944  00FFB4  5015               	movf	_pBDTEntryEP0OutNext,w,c
 36945  00FFB6  26D9               	addwf	fsr2l,f,c
 36946  00FFB8  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 36947  00FFBA  22DA               	addwfc	fsr2h,f,c
 36948  00FFBC  0E08               	movlw	8
 36949  00FFBE  6EDF               	movwf	indf2,c
 36950                           
 36951                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36952  00FFC0  EE20 F002          	lfsr	2,2
 36953  00FFC4  5015               	movf	_pBDTEntryEP0OutNext,w,c
 36954  00FFC6  26D9               	addwf	fsr2l,f,c
 36955  00FFC8  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 36956  00FFCA  22DA               	addwfc	fsr2h,f,c
 36957  00FFCC  0E30               	movlw	48
 36958  00FFCE  6EDE               	movwf	postinc2,c
 36959  00FFD0  0E0D               	movlw	13
 36960  00FFD2  6EDD               	movwf	postdec2,c
 36961                           
 36962                           ; BSR set to: 1
 36963                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 36964  00FFD4  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36965  00FFD8  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36966  00FFDC  0E0C               	movlw	12
 36967  00FFDE  6EDF               	movwf	indf2,c
 36968                           
 36969                           ; BSR set to: 1
 36970                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36971  00FFE0  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36972  00FFE4  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36973  00FFE8  0E00               	movlw	0
 36974  00FFEA  8EDB               	bsf	plusw2,7,c
 36975                           
 36976                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 36977  00FFEC  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 36978  00FFF0  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36979  00FFF4  0E04               	movlw	4
 36980  00FFF6  6EDF               	movwf	indf2,c
 36981                           
 36982                           ; BSR set to: 1
 36983                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36984  00FFF8  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 36985  00FFFC  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36986  010000  0E00               	movlw	0
 36987  010002  8EDB               	bsf	plusw2,7,c
 36988                           
 36989                           ; BSR set to: 1
 36990                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 36991  010004  0012               	return	
 36992  010006                     i2l231:
 36993                           
 36994                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 36995  010006  010D               	movlb	13	; () banked
 36996  010008  AF30               	btfss	48,7,b	;volatile
 36997  01000A  D012               	goto	i2l236
 36998                           
 36999                           ; BSR set to: 13
 37000                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 37001  01000C  0E01               	movlw	1
 37002  01000E  6E29               	movwf	_controlTransferState,c	;volatile
 37003                           
 37004                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 37005  010010  0101               	movlb	1	; () banked
 37006  010012  5181               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 37007  010014  B4D8               	btfsc	status,2,c
 37008                           
 37009                           ; BSR set to: 1
 37010                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 37011  010016  EC37  F08A         	call	_USBCtrlEPAllowDataStage	;wreg free
 37012                           
 37013                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 37014  01001A  0E00               	movlw	0
 37015  01001C  0101               	movlb	1	; () banked
 37016  01001E  6F82               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 37017                           
 37018                           ; BSR set to: 1
 37019                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 37020  010020  0E00               	movlw	0
 37021  010022  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 37022                           
 37023                           ; BSR set to: 1
 37024                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 37025  010024  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 37026  010026  A4D8               	btfss	status,2,c
 37027  010028  0012               	return	
 37028                           
 37029                           ; BSR set to: 1
 37030                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 37031  01002A  ECCF  F085         	call	_USBCtrlEPAllowStatusStage	;wreg free
 37032                           
 37033                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 37034  01002E  0012               	return	
 37035  010030                     i2l236:
 37036                           
 37037                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 37038  010030  0E02               	movlw	2
 37039  010032  6E29               	movwf	_controlTransferState,c	;volatile
 37040                           
 37041                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 37042  010034  EE20 F001          	lfsr	2,1
 37043  010038  5015               	movf	_pBDTEntryEP0OutNext,w,c
 37044  01003A  26D9               	addwf	fsr2l,f,c
 37045  01003C  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 37046  01003E  22DA               	addwfc	fsr2h,f,c
 37047  010040  0E08               	movlw	8
 37048  010042  6EDF               	movwf	indf2,c
 37049                           
 37050                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 37051  010044  EE20 F002          	lfsr	2,2
 37052  010048  5015               	movf	_pBDTEntryEP0OutNext,w,c
 37053  01004A  26D9               	addwf	fsr2l,f,c
 37054  01004C  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 37055  01004E  22DA               	addwfc	fsr2h,f,c
 37056  010050  0E30               	movlw	48
 37057  010052  6EDE               	movwf	postinc2,c
 37058  010054  0E0D               	movlw	13
 37059  010056  6EDD               	movwf	postdec2,c
 37060                           
 37061                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 37062  010058  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 37063  01005C  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 37064  010060  0E04               	movlw	4
 37065  010062  6EDF               	movwf	indf2,c
 37066                           
 37067                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 37068  010064  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 37069  010068  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 37070  01006C  0E00               	movlw	0
 37071  01006E  8EDB               	bsf	plusw2,7,c
 37072                           
 37073                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 37074  010070  0E00               	movlw	0
 37075  010072  0101               	movlb	1	; () banked
 37076  010074  6F82               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 37077                           
 37078                           ; BSR set to: 1
 37079                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 37080  010076  0E00               	movlw	0
 37081  010078  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 37082                           
 37083                           ; BSR set to: 1
 37084                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 37085  01007A  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 37086  01007C  A4D8               	btfss	status,2,c
 37087  01007E  0012               	return	
 37088                           
 37089                           ; BSR set to: 1
 37090                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 37091  010080  ECCF  F085         	call	_USBCtrlEPAllowStatusStage	;wreg free
 37092  010084  0012               	return	
 37093  010086                     __end_of_USBCtrlEPServiceComplete:
 37094                           	opt stack 0
 37095                           tosu	equ	0xFFF
 37096                           tosh	equ	0xFFE
 37097                           tosl	equ	0xFFD
 37098                           pclatu	equ	0xFFB
 37099                           pclath	equ	0xFFA
 37100                           tblptru	equ	0xFF8
 37101                           tblptrh	equ	0xFF7
 37102                           tblptrl	equ	0xFF6
 37103                           tablat	equ	0xFF5
 37104                           prodh	equ	0xFF4
 37105                           prodl	equ	0xFF3
 37106                           intcon	equ	0xFF2
 37107                           indf0	equ	0xFEF
 37108                           postinc0	equ	0xFEE
 37109                           fsr0h	equ	0xFEA
 37110                           fsr0l	equ	0xFE9
 37111                           wreg	equ	0xFE8
 37112                           indf1	equ	0xFE7
 37113                           postdec1	equ	0xFE5
 37114                           plusw1	equ	0xFE3
 37115                           fsr1h	equ	0xFE2
 37116                           fsr1l	equ	0xFE1
 37117                           indf2	equ	0xFDF
 37118                           postinc2	equ	0xFDE
 37119                           postdec2	equ	0xFDD
 37120                           plusw2	equ	0xFDB
 37121                           fsr2h	equ	0xFDA
 37122                           fsr2l	equ	0xFD9
 37123                           status	equ	0xFD8
 37124                           
 37125 ;; *************** function _USBCtrlEPAllowDataStage *****************
 37126 ;; Defined at:
 37127 ;;		line 1490 in file "usb_device.c"
 37128 ;; Parameters:    Size  Location     Type
 37129 ;;		None
 37130 ;; Auto vars:     Size  Location     Type
 37131 ;;		None
 37132 ;; Return value:  Size  Location     Type
 37133 ;;                  1    wreg      void 
 37134 ;; Registers used:
 37135 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37136 ;; Tracked objects:
 37137 ;;		On entry : 0/0
 37138 ;;		On exit  : 0/0
 37139 ;;		Unchanged: 0/0
 37140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37145 ;;Total ram usage:        0 bytes
 37146 ;; Hardware stack levels used:    1
 37147 ;; Hardware stack levels required when called:    1
 37148 ;; This function calls:
 37149 ;;		_USBCtrlTrfTxService
 37150 ;; This function is called by:
 37151 ;;		_USBCtrlEPServiceComplete
 37152 ;; This function uses a non-reentrant model
 37153 ;;
 37154                           
 37155                           	psect	text137
 37156  01146E                     __ptext137:
 37157                           	opt stack 0
 37158  01146E                     _USBCtrlEPAllowDataStage:
 37159                           	opt stack 12
 37160                           
 37161                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 37162                           
 37163                           ;incstack = 0
 37164  01146E  0E00               	movlw	0
 37165  011470  0101               	movlb	1	; () banked
 37166  011472  6F81               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 37167                           
 37168                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 37169  011474  0E00               	movlw	0
 37170  011476  6F80               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 37171                           
 37172                           ; BSR set to: 1
 37173                           ;usb_device.c: 1495: if(controlTransferState == 2)
 37174  011478  0E02               	movlw	2
 37175  01147A  1829               	xorwf	_controlTransferState,w,c	;volatile
 37176  01147C  A4D8               	btfss	status,2,c
 37177  01147E  D01F               	goto	i2l220
 37178                           
 37179                           ; BSR set to: 1
 37180                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 37181  011480  EE20 F001          	lfsr	2,1
 37182  011484  5015               	movf	_pBDTEntryEP0OutNext,w,c
 37183  011486  26D9               	addwf	fsr2l,f,c
 37184  011488  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 37185  01148A  22DA               	addwfc	fsr2h,f,c
 37186  01148C  0E08               	movlw	8
 37187  01148E  6EDF               	movwf	indf2,c
 37188                           
 37189                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 37190  011490  EE20 F002          	lfsr	2,2
 37191  011494  5015               	movf	_pBDTEntryEP0OutNext,w,c
 37192  011496  26D9               	addwf	fsr2l,f,c
 37193  011498  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 37194  01149A  22DA               	addwfc	fsr2h,f,c
 37195  01149C  0E38               	movlw	56
 37196  01149E  6EDE               	movwf	postinc2,c
 37197  0114A0  0E0D               	movlw	13
 37198  0114A2  6EDD               	movwf	postdec2,c
 37199                           
 37200                           ; BSR set to: 1
 37201                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 37202  0114A4  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 37203  0114A8  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 37204  0114AC  0E48               	movlw	72
 37205  0114AE  6EDF               	movwf	indf2,c
 37206                           
 37207                           ; BSR set to: 1
 37208                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 37209  0114B0  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 37210  0114B4  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 37211  0114B8  0E00               	movlw	0
 37212  0114BA  8EDB               	bsf	plusw2,7,c
 37213                           
 37214                           ;usb_device.c: 1502: }
 37215  0114BC  0012               	return	
 37216  0114BE                     i2l220:
 37217                           
 37218                           ; BSR set to: 1
 37219                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 37220                           
 37221                           ; BSR set to: 1
 37222  0114BE  5005               	movf	_inPipes+4,w,c	;volatile
 37223  0114C0  010D               	movlb	13	; () banked
 37224  0114C2  5D36               	subwf	54,w,b	;volatile
 37225  0114C4  5006               	movf	_inPipes+5,w,c	;volatile
 37226  0114C6  5937               	subwfb	55,w,b	;volatile
 37227  0114C8  B0D8               	btfsc	status,0,c
 37228  0114CA  D004               	goto	i2l222
 37229                           
 37230                           ; BSR set to: 13
 37231                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 37232  0114CC  CD36 F005          	movff	3382,_inPipes+4	;volatile
 37233  0114D0  CD37 F006          	movff	3383,_inPipes+5	;volatile
 37234  0114D4                     i2l222:
 37235                           
 37236                           ; BSR set to: 13
 37237                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 37238                           
 37239                           ; BSR set to: 13
 37240  0114D4  EC9B  F084         	call	_USBCtrlTrfTxService	;wreg free
 37241                           
 37242                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 37243  0114D8  EE20 F002          	lfsr	2,2
 37244  0114DC  5007               	movf	_pBDTEntryIn,w,c
 37245  0114DE  26D9               	addwf	fsr2l,f,c
 37246  0114E0  5008               	movf	_pBDTEntryIn+1,w,c
 37247  0114E2  22DA               	addwfc	fsr2h,f,c
 37248  0114E4  0E38               	movlw	56
 37249  0114E6  6EDE               	movwf	postinc2,c
 37250  0114E8  0E0D               	movlw	13
 37251  0114EA  6EDD               	movwf	postdec2,c
 37252                           
 37253                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 37254  0114EC  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 37255  0114F0  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 37256  0114F4  0E48               	movlw	72
 37257  0114F6  6EDF               	movwf	indf2,c
 37258                           
 37259                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 37260  0114F8  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 37261  0114FC  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 37262  011500  0E00               	movlw	0
 37263  011502  8EDB               	bsf	plusw2,7,c
 37264  011504  0012               	return	
 37265  011506                     __end_of_USBCtrlEPAllowDataStage:
 37266                           	opt stack 0
 37267                           tosu	equ	0xFFF
 37268                           tosh	equ	0xFFE
 37269                           tosl	equ	0xFFD
 37270                           pclatu	equ	0xFFB
 37271                           pclath	equ	0xFFA
 37272                           tblptru	equ	0xFF8
 37273                           tblptrh	equ	0xFF7
 37274                           tblptrl	equ	0xFF6
 37275                           tablat	equ	0xFF5
 37276                           prodh	equ	0xFF4
 37277                           prodl	equ	0xFF3
 37278                           intcon	equ	0xFF2
 37279                           indf0	equ	0xFEF
 37280                           postinc0	equ	0xFEE
 37281                           fsr0h	equ	0xFEA
 37282                           fsr0l	equ	0xFE9
 37283                           wreg	equ	0xFE8
 37284                           indf1	equ	0xFE7
 37285                           postdec1	equ	0xFE5
 37286                           plusw1	equ	0xFE3
 37287                           fsr1h	equ	0xFE2
 37288                           fsr1l	equ	0xFE1
 37289                           indf2	equ	0xFDF
 37290                           postinc2	equ	0xFDE
 37291                           postdec2	equ	0xFDD
 37292                           plusw2	equ	0xFDB
 37293                           fsr2h	equ	0xFDA
 37294                           fsr2l	equ	0xFD9
 37295                           status	equ	0xFD8
 37296                           
 37297 ;; *************** function _USBCheckStdRequest *****************
 37298 ;; Defined at:
 37299 ;;		line 2688 in file "usb_device.c"
 37300 ;; Parameters:    Size  Location     Type
 37301 ;;		None
 37302 ;; Auto vars:     Size  Location     Type
 37303 ;;		None
 37304 ;; Return value:  Size  Location     Type
 37305 ;;                  1    wreg      void 
 37306 ;; Registers used:
 37307 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37308 ;; Tracked objects:
 37309 ;;		On entry : 0/0
 37310 ;;		On exit  : 0/0
 37311 ;;		Unchanged: 0/0
 37312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37317 ;;Total ram usage:        0 bytes
 37318 ;; Hardware stack levels used:    1
 37319 ;; Hardware stack levels required when called:    5
 37320 ;; This function calls:
 37321 ;;		_USBStdFeatureReqHandler
 37322 ;;		_USBStdGetDscHandler
 37323 ;;		_USBStdGetStatusHandler
 37324 ;;		_USBStdSetCfgHandler
 37325 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 37326 ;; This function is called by:
 37327 ;;		_USBCtrlTrfSetupHandler
 37328 ;; This function uses a non-reentrant model
 37329 ;;
 37330                           
 37331                           	psect	text138
 37332  0106BE                     __ptext138:
 37333                           	opt stack 0
 37334  0106BE                     _USBCheckStdRequest:
 37335                           	opt stack 9
 37336                           
 37337                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 37338                           
 37339                           ;incstack = 0
 37340  0106BE  010D               	movlb	13	; () banked
 37341  0106C0  3930               	swapf	48,w,b	;volatile
 37342  0106C2  32E8               	rrcf	wreg,f,c
 37343  0106C4  0B03               	andlw	3
 37344  0106C6  0900               	iorlw	0
 37345  0106C8  A4D8               	btfss	status,2,c
 37346  0106CA  0012               	return	
 37347  0106CC  D042               	goto	i2l355
 37348  0106CE                     i2l356:
 37349                           
 37350                           ; BSR set to: 13
 37351                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 37352  0106CE  8E04               	bsf	_inPipes+3,7,c	;volatile
 37353                           
 37354                           ; BSR set to: 13
 37355                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 37356  0106D0  0E08               	movlw	8
 37357  0106D2  6E2B               	movwf	_USBDeviceState,c	;volatile
 37358                           
 37359                           ;usb_device.c: 2698: break;
 37360  0106D4  0012               	return	
 37361  0106D6                     
 37362                           ; BSR set to: 13
 37363                           ;usb_device.c: 2700: USBStdGetDscHandler();
 37364                           
 37365                           ; BSR set to: 13
 37366  0106D6  EC66  F079         	call	_USBStdGetDscHandler	;wreg free
 37367                           
 37368                           ;usb_device.c: 2701: break;
 37369  0106DA  0012               	return	
 37370  0106DC                     
 37371                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 37372  0106DC  ECF1  F082         	call	_USBStdSetCfgHandler	;wreg free
 37373                           
 37374                           ;usb_device.c: 2704: break;
 37375  0106E0  0012               	return	
 37376  0106E2                     
 37377                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 37378  0106E2  0E2D               	movlw	low _USBActiveConfiguration
 37379  0106E4  6E01               	movwf	_inPipes,c	;volatile
 37380  0106E6  0E00               	movlw	high _USBActiveConfiguration
 37381  0106E8  6E02               	movwf	_inPipes+1,c	;volatile
 37382                           
 37383                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 37384  0106EA  8004               	bsf	_inPipes+3,0,c	;volatile
 37385                           
 37386                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 37387  0106EC  0E01               	movlw	1
 37388  0106EE  6E05               	movwf	_inPipes+4,c	;volatile
 37389                           
 37390                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 37391  0106F0  8E04               	bsf	_inPipes+3,7,c	;volatile
 37392                           
 37393                           ;usb_device.c: 2710: break;
 37394  0106F2  0012               	return	
 37395  0106F4                     
 37396                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 37397  0106F4  EC50  F089         	call	_USBStdGetStatusHandler	;wreg free
 37398                           
 37399                           ;usb_device.c: 2713: break;
 37400  0106F8  0012               	return	
 37401  0106FA                     
 37402                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 37403  0106FA  ECF2  F067         	call	_USBStdFeatureReqHandler	;wreg free
 37404                           
 37405                           ;usb_device.c: 2717: break;
 37406  0106FE  0012               	return	
 37407  010700                     
 37408                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 37409  010700  010D               	movlb	13	; () banked
 37410  010702  5134               	movf	52,w,b	;volatile
 37411  010704  0D01               	mullw	1
 37412  010706  0E9E               	movlw	low _USBAlternateInterface
 37413  010708  24F3               	addwf	prodl,w,c
 37414  01070A  6E01               	movwf	_inPipes,c	;volatile
 37415  01070C  0E01               	movlw	high _USBAlternateInterface
 37416  01070E  20F4               	addwfc	prodh,w,c
 37417  010710  6E02               	movwf	_inPipes+1,c	;volatile
 37418                           
 37419                           ; BSR set to: 13
 37420                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 37421  010712  8004               	bsf	_inPipes+3,0,c	;volatile
 37422                           
 37423                           ; BSR set to: 13
 37424                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 37425  010714  0E01               	movlw	1
 37426  010716  6E05               	movwf	_inPipes+4,c	;volatile
 37427                           
 37428                           ; BSR set to: 13
 37429                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 37430  010718  8E04               	bsf	_inPipes+3,7,c	;volatile
 37431                           
 37432                           ;usb_device.c: 2723: break;
 37433  01071A  0012               	return	
 37434  01071C                     i2l365:
 37435                           
 37436                           ; BSR set to: 13
 37437                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 37438  01071C  8E04               	bsf	_inPipes+3,7,c	;volatile
 37439                           
 37440                           ; BSR set to: 13
 37441                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 37442  01071E  5134               	movf	52,w,b	;volatile
 37443  010720  0D01               	mullw	1
 37444  010722  0E9E               	movlw	low _USBAlternateInterface
 37445  010724  24F3               	addwf	prodl,w,c
 37446  010726  6ED9               	movwf	fsr2l,c
 37447  010728  0E01               	movlw	high _USBAlternateInterface
 37448  01072A  20F4               	addwfc	prodh,w,c
 37449  01072C  6EDA               	movwf	fsr2h,c
 37450  01072E  CD32 FFDF          	movff	3378,indf2	;volatile
 37451                           
 37452                           ;usb_device.c: 2727: break;
 37453  010732  0012               	return	
 37454  010734                     
 37455                           ; BSR set to: 13
 37456                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 37457                           
 37458                           ; BSR set to: 13
 37459  010734  0E00               	movlw	0
 37460  010736  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 37461  010738  0E02               	movlw	2
 37462  01073A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 37463  01073C  0E00               	movlw	0
 37464  01073E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 37465  010740  0E00               	movlw	0
 37466  010742  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 37467  010744  0E00               	movlw	0
 37468  010746  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 37469  010748  0E00               	movlw	0
 37470  01074A  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 37471  01074C  ECF2  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 37472                           
 37473                           ;usb_device.c: 2734: }
 37474                           
 37475                           ;usb_device.c: 2733: break;
 37476                           
 37477                           ;usb_device.c: 2732: default:
 37478                           
 37479                           ;usb_device.c: 2731: case 12:
 37480                           
 37481                           ;usb_device.c: 2730: break;
 37482  010750  0012               	return	
 37483  010752                     i2l355:
 37484  010752  010D               	movlb	13	; () banked
 37485  010754  5131               	movf	49,w,b	;volatile
 37486                           
 37487                           ; Switch size 1, requested type "space"
 37488                           ; Number of cases is 11, Range of values is 0 to 12
 37489                           ; switch strategies available:
 37490                           ; Name         Instructions Cycles
 37491                           ; simple_byte           34    18 (average)
 37492                           ;	Chosen strategy is simple_byte
 37493  010756  0A00               	xorlw	0	; case 0
 37494  010758  B4D8               	btfsc	status,2,c
 37495  01075A  D7CC               	goto	i2l361
 37496  01075C  0A01               	xorlw	1	; case 1
 37497  01075E  B4D8               	btfsc	status,2,c
 37498  010760  D7CC               	goto	i2l362
 37499  010762  0A02               	xorlw	2	; case 3
 37500  010764  B4D8               	btfsc	status,2,c
 37501  010766  D7C9               	goto	i2l362
 37502  010768  0A06               	xorlw	6	; case 5
 37503  01076A  B4D8               	btfsc	status,2,c
 37504  01076C  D7B0               	goto	i2l356
 37505  01076E  0A03               	xorlw	3	; case 6
 37506  010770  B4D8               	btfsc	status,2,c
 37507  010772  D7B1               	goto	i2l358
 37508  010774  0A01               	xorlw	1	; case 7
 37509  010776  B4D8               	btfsc	status,2,c
 37510  010778  D7DD               	goto	i2l366
 37511  01077A  0A0F               	xorlw	15	; case 8
 37512  01077C  B4D8               	btfsc	status,2,c
 37513  01077E  D7B1               	goto	i2l360
 37514  010780  0A01               	xorlw	1	; case 9
 37515  010782  B4D8               	btfsc	status,2,c
 37516  010784  D7AB               	goto	i2l359
 37517  010786  0A03               	xorlw	3	; case 10
 37518  010788  B4D8               	btfsc	status,2,c
 37519  01078A  D7BA               	goto	i2l364
 37520  01078C  0A01               	xorlw	1	; case 11
 37521  01078E  B4D8               	btfsc	status,2,c
 37522  010790  D7C5               	goto	i2l365
 37523  010792  0A07               	xorlw	7	; case 12
 37524  010794  0012               	return	
 37525  010796                     __end_of_USBCheckStdRequest:
 37526                           	opt stack 0
 37527                           tosu	equ	0xFFF
 37528                           tosh	equ	0xFFE
 37529                           tosl	equ	0xFFD
 37530                           pclatu	equ	0xFFB
 37531                           pclath	equ	0xFFA
 37532                           tblptru	equ	0xFF8
 37533                           tblptrh	equ	0xFF7
 37534                           tblptrl	equ	0xFF6
 37535                           tablat	equ	0xFF5
 37536                           prodh	equ	0xFF4
 37537                           prodl	equ	0xFF3
 37538                           intcon	equ	0xFF2
 37539                           indf0	equ	0xFEF
 37540                           postinc0	equ	0xFEE
 37541                           fsr0h	equ	0xFEA
 37542                           fsr0l	equ	0xFE9
 37543                           wreg	equ	0xFE8
 37544                           indf1	equ	0xFE7
 37545                           postdec1	equ	0xFE5
 37546                           plusw1	equ	0xFE3
 37547                           fsr1h	equ	0xFE2
 37548                           fsr1l	equ	0xFE1
 37549                           indf2	equ	0xFDF
 37550                           postinc2	equ	0xFDE
 37551                           postdec2	equ	0xFDD
 37552                           plusw2	equ	0xFDB
 37553                           fsr2h	equ	0xFDA
 37554                           fsr2l	equ	0xFD9
 37555                           status	equ	0xFD8
 37556                           
 37557 ;; *************** function _USBStdSetCfgHandler *****************
 37558 ;; Defined at:
 37559 ;;		line 1970 in file "usb_device.c"
 37560 ;; Parameters:    Size  Location     Type
 37561 ;;		None
 37562 ;; Auto vars:     Size  Location     Type
 37563 ;;  i               1   23[COMRAM] unsigned char 
 37564 ;; Return value:  Size  Location     Type
 37565 ;;                  1    wreg      void 
 37566 ;; Registers used:
 37567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37568 ;; Tracked objects:
 37569 ;;		On entry : 0/0
 37570 ;;		On exit  : 0/0
 37571 ;;		Unchanged: 0/0
 37572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37576 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37577 ;;Total ram usage:        1 bytes
 37578 ;; Hardware stack levels used:    1
 37579 ;; Hardware stack levels required when called:    4
 37580 ;; This function calls:
 37581 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 37582 ;;		i2_memset
 37583 ;; This function is called by:
 37584 ;;		_USBCheckStdRequest
 37585 ;; This function uses a non-reentrant model
 37586 ;;
 37587                           
 37588                           	psect	text139
 37589  0105E2                     __ptext139:
 37590                           	opt stack 0
 37591  0105E2                     _USBStdSetCfgHandler:
 37592                           	opt stack 9
 37593                           
 37594                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 37595                           
 37596                           ;incstack = 0
 37597  0105E2  8E04               	bsf	_inPipes+3,7,c	;volatile
 37598                           
 37599                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 37600  0105E4  0E27               	movlw	39
 37601  0105E6  6E2E               	movwf	i2memset@p1,c
 37602  0105E8  0E0F               	movlw	15
 37603  0105EA  6E2F               	movwf	i2memset@p1+1,c
 37604  0105EC  0E00               	movlw	0
 37605  0105EE  6E31               	movwf	i2memset@c+1,c
 37606  0105F0  0E00               	movlw	0
 37607  0105F2  6E30               	movwf	i2memset@c,c
 37608  0105F4  0E00               	movlw	0
 37609  0105F6  6E33               	movwf	i2memset@n+1,c
 37610  0105F8  0E02               	movlw	2
 37611  0105FA  6E32               	movwf	i2memset@n,c
 37612  0105FC  EC52  F095         	call	i2_memset	;wreg free
 37613                           
 37614                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 37615  010600  0E00               	movlw	0
 37616  010602  6E2E               	movwf	i2memset@p1,c
 37617  010604  0E0D               	movlw	13
 37618  010606  6E2F               	movwf	i2memset@p1+1,c
 37619  010608  0E00               	movlw	0
 37620  01060A  6E31               	movwf	i2memset@c+1,c
 37621  01060C  0E00               	movlw	0
 37622  01060E  6E30               	movwf	i2memset@c,c
 37623  010610  0E00               	movlw	0
 37624  010612  6E33               	movwf	i2memset@n+1,c
 37625  010614  0E30               	movlw	48
 37626  010616  6E32               	movwf	i2memset@n,c
 37627  010618  EC52  F095         	call	i2_memset	;wreg free
 37628                           
 37629                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 37630  01061C  8C65               	bsf	3941,6,c	;volatile
 37631                           
 37632                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 37633  01061E  0E00               	movlw	0
 37634  010620  6E45               	movwf	USBStdSetCfgHandler@i,c
 37635  010622                     i2l18260:
 37636  010622  0E02               	movlw	2
 37637  010624  6445               	cpfsgt	USBStdSetCfgHandler@i,c
 37638  010626  D001               	goto	i2l272
 37639  010628  D016               	goto	i2u1800_40
 37640  01062A                     i2l272:
 37641                           
 37642                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 37643  01062A  5045               	movf	USBStdSetCfgHandler@i,w,c
 37644  01062C  0D01               	mullw	1
 37645  01062E  0E68               	movlw	low _ep_data_in
 37646  010630  24F3               	addwf	prodl,w,c
 37647  010632  6ED9               	movwf	fsr2l,c
 37648  010634  0E01               	movlw	high _ep_data_in
 37649  010636  20F4               	addwfc	prodh,w,c
 37650  010638  6EDA               	movwf	fsr2h,c
 37651  01063A  0E00               	movlw	0
 37652  01063C  6EDF               	movwf	indf2,c
 37653                           
 37654                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 37655  01063E  5045               	movf	USBStdSetCfgHandler@i,w,c
 37656  010640  0D01               	mullw	1
 37657  010642  0E65               	movlw	low _ep_data_out
 37658  010644  24F3               	addwf	prodl,w,c
 37659  010646  6ED9               	movwf	fsr2l,c
 37660  010648  0E01               	movlw	high _ep_data_out
 37661  01064A  20F4               	addwfc	prodh,w,c
 37662  01064C  6EDA               	movwf	fsr2h,c
 37663  01064E  0E00               	movlw	0
 37664  010650  6EDF               	movwf	indf2,c
 37665  010652  2A45               	incf	USBStdSetCfgHandler@i,f,c
 37666  010654  D7E6               	goto	i2l18260
 37667  010656                     i2u1800_40:
 37668                           
 37669                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 37670  010656  0E9E               	movlw	low _USBAlternateInterface
 37671  010658  6E2E               	movwf	i2memset@p1,c
 37672  01065A  0E01               	movlw	high _USBAlternateInterface
 37673  01065C  6E2F               	movwf	i2memset@p1+1,c
 37674  01065E  0E00               	movlw	0
 37675  010660  6E31               	movwf	i2memset@c+1,c
 37676  010662  0E00               	movlw	0
 37677  010664  6E30               	movwf	i2memset@c,c
 37678  010666  0E00               	movlw	0
 37679  010668  6E33               	movwf	i2memset@n+1,c
 37680  01066A  0E02               	movlw	2
 37681  01066C  6E32               	movwf	i2memset@n,c
 37682  01066E  EC52  F095         	call	i2_memset	;wreg free
 37683                           
 37684                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 37685  010672  9C65               	bcf	3941,6,c	;volatile
 37686                           
 37687                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 37688  010674  0E08               	movlw	8
 37689  010676  6E07               	movwf	_pBDTEntryIn,c
 37690  010678  0E0D               	movlw	13
 37691  01067A  6E08               	movwf	_pBDTEntryIn+1,c
 37692                           
 37693                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 37694  01067C  0E00               	movlw	0
 37695  01067E  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
 37696  010680  0E0D               	movlw	13
 37697  010682  6E18               	movwf	_pBDTEntryEP0OutCurrent+1,c
 37698                           
 37699                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 37700  010684  C017  F015         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 37701  010688  C018  F016         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 37702                           
 37703                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 37704  01068C  CD32 F02D          	movff	3378,_USBActiveConfiguration	;volatile
 37705                           
 37706                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 37707  010690  502D               	movf	_USBActiveConfiguration,w,c	;volatile
 37708  010692  A4D8               	btfss	status,2,c
 37709  010694  D003               	goto	i2l274
 37710                           
 37711                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 37712  010696  0E10               	movlw	16
 37713  010698  6E2B               	movwf	_USBDeviceState,c	;volatile
 37714                           
 37715                           ;usb_device.c: 2015: }
 37716  01069A  0012               	return	
 37717  01069C                     i2l274:
 37718                           
 37719                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 37720  01069C  0E00               	movlw	0
 37721  01069E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 37722  0106A0  0E01               	movlw	1
 37723  0106A2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 37724  0106A4  0E2D               	movlw	low _USBActiveConfiguration
 37725  0106A6  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 37726  0106A8  0E00               	movlw	high _USBActiveConfiguration
 37727  0106AA  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 37728  0106AC  0E00               	movlw	0
 37729  0106AE  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 37730  0106B0  0E01               	movlw	1
 37731  0106B2  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 37732  0106B4  ECF2  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 37733                           
 37734                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 37735  0106B8  0E20               	movlw	32
 37736  0106BA  6E2B               	movwf	_USBDeviceState,c	;volatile
 37737  0106BC  0012               	return	
 37738  0106BE                     __end_of_USBStdSetCfgHandler:
 37739                           	opt stack 0
 37740                           tosu	equ	0xFFF
 37741                           tosh	equ	0xFFE
 37742                           tosl	equ	0xFFD
 37743                           pclatu	equ	0xFFB
 37744                           pclath	equ	0xFFA
 37745                           tblptru	equ	0xFF8
 37746                           tblptrh	equ	0xFF7
 37747                           tblptrl	equ	0xFF6
 37748                           tablat	equ	0xFF5
 37749                           prodh	equ	0xFF4
 37750                           prodl	equ	0xFF3
 37751                           intcon	equ	0xFF2
 37752                           indf0	equ	0xFEF
 37753                           postinc0	equ	0xFEE
 37754                           fsr0h	equ	0xFEA
 37755                           fsr0l	equ	0xFE9
 37756                           wreg	equ	0xFE8
 37757                           indf1	equ	0xFE7
 37758                           postdec1	equ	0xFE5
 37759                           plusw1	equ	0xFE3
 37760                           fsr1h	equ	0xFE2
 37761                           fsr1l	equ	0xFE1
 37762                           indf2	equ	0xFDF
 37763                           postinc2	equ	0xFDE
 37764                           postdec2	equ	0xFDD
 37765                           plusw2	equ	0xFDB
 37766                           fsr2h	equ	0xFDA
 37767                           fsr2l	equ	0xFD9
 37768                           status	equ	0xFD8
 37769                           
 37770 ;; *************** function i2_memset *****************
 37771 ;; Defined at:
 37772 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 37773 ;; Parameters:    Size  Location     Type
 37774 ;;  p1              2    0[COMRAM] PTR void 
 37775 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 37776 ;;  c               2    2[COMRAM] int 
 37777 ;;  n               2    4[COMRAM] unsigned int 
 37778 ;; Auto vars:     Size  Location     Type
 37779 ;;  memset          2    6[COMRAM] PTR unsigned char 
 37780 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 37781 ;; Return value:  Size  Location     Type
 37782 ;;                  2    0[COMRAM] PTR void 
 37783 ;; Registers used:
 37784 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37785 ;; Tracked objects:
 37786 ;;		On entry : 0/0
 37787 ;;		On exit  : 0/0
 37788 ;;		Unchanged: 0/0
 37789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37790 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37793 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37794 ;;Total ram usage:        8 bytes
 37795 ;; Hardware stack levels used:    1
 37796 ;; This function calls:
 37797 ;;		Nothing
 37798 ;; This function is called by:
 37799 ;;		_USBStdSetCfgHandler
 37800 ;;		i2_USBDeviceInit
 37801 ;; This function uses a non-reentrant model
 37802 ;;
 37803                           
 37804                           	psect	text140
 37805  012AA4                     __ptext140:
 37806                           	opt stack 0
 37807  012AA4                     i2_memset:
 37808                           	opt stack 15
 37809                           
 37810                           ;incstack = 0
 37811  012AA4  C02E  F034         	movff	i2memset@p1,i2memset@p
 37812  012AA8  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 37813  012AAC  D008               	goto	i2l3406
 37814  012AAE                     i2l11598:
 37815  012AAE  C034  FFD9         	movff	i2memset@p,fsr2l
 37816  012AB2  C035  FFDA         	movff	i2memset@p+1,fsr2h
 37817  012AB6  C030  FFDF         	movff	i2memset@c,indf2
 37818  012ABA  4A34               	infsnz	i2memset@p,f,c
 37819  012ABC  2A35               	incf	i2memset@p+1,f,c
 37820  012ABE                     i2l3406:
 37821  012ABE  0632               	decf	i2memset@n,f,c
 37822  012AC0  A0D8               	btfss	status,0,c
 37823  012AC2  0633               	decf	i2memset@n+1,f,c
 37824  012AC4  2832               	incf	i2memset@n,w,c
 37825  012AC6  E1F3               	bnz	i2l11598
 37826  012AC8  2833               	incf	i2memset@n+1,w,c
 37827  012ACA  B4D8               	btfsc	status,2,c
 37828  012ACC  0012               	return	
 37829  012ACE  D7EF               	goto	i2l3407
 37830  012AD0                     __end_ofi2_memset:
 37831                           	opt stack 0
 37832                           tosu	equ	0xFFF
 37833                           tosh	equ	0xFFE
 37834                           tosl	equ	0xFFD
 37835                           pclatu	equ	0xFFB
 37836                           pclath	equ	0xFFA
 37837                           tblptru	equ	0xFF8
 37838                           tblptrh	equ	0xFF7
 37839                           tblptrl	equ	0xFF6
 37840                           tablat	equ	0xFF5
 37841                           prodh	equ	0xFF4
 37842                           prodl	equ	0xFF3
 37843                           intcon	equ	0xFF2
 37844                           indf0	equ	0xFEF
 37845                           postinc0	equ	0xFEE
 37846                           fsr0h	equ	0xFEA
 37847                           fsr0l	equ	0xFE9
 37848                           wreg	equ	0xFE8
 37849                           indf1	equ	0xFE7
 37850                           postdec1	equ	0xFE5
 37851                           plusw1	equ	0xFE3
 37852                           fsr1h	equ	0xFE2
 37853                           fsr1l	equ	0xFE1
 37854                           indf2	equ	0xFDF
 37855                           postinc2	equ	0xFDE
 37856                           postdec2	equ	0xFDD
 37857                           plusw2	equ	0xFDB
 37858                           fsr2h	equ	0xFDA
 37859                           fsr2l	equ	0xFD9
 37860                           status	equ	0xFD8
 37861                           
 37862 ;; *************** function _USBStdGetStatusHandler *****************
 37863 ;; Defined at:
 37864 ;;		line 2131 in file "usb_device.c"
 37865 ;; Parameters:    Size  Location     Type
 37866 ;;		None
 37867 ;; Auto vars:     Size  Location     Type
 37868 ;;  p               2    1[COMRAM] PTR struct __BDT
 37869 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 37870 ;; Return value:  Size  Location     Type
 37871 ;;                  1    wreg      void 
 37872 ;; Registers used:
 37873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37874 ;; Tracked objects:
 37875 ;;		On entry : 0/0
 37876 ;;		On exit  : 0/0
 37877 ;;		Unchanged: 0/0
 37878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37882 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37883 ;;Total ram usage:        3 bytes
 37884 ;; Hardware stack levels used:    1
 37885 ;; This function calls:
 37886 ;;		Nothing
 37887 ;; This function is called by:
 37888 ;;		_USBCheckStdRequest
 37889 ;; This function uses a non-reentrant model
 37890 ;;
 37891                           
 37892                           	psect	text141
 37893  0112A0                     __ptext141:
 37894                           	opt stack 0
 37895  0112A0                     _USBStdGetStatusHandler:
 37896                           	opt stack 13
 37897                           
 37898                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 37899                           
 37900                           ;incstack = 0
 37901  0112A0  0E00               	movlw	0
 37902  0112A2  010D               	movlb	13	; () banked
 37903  0112A4  6F38               	movwf	56,b	;volatile
 37904                           
 37905                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 37906  0112A6  0E00               	movlw	0
 37907  0112A8  6F39               	movwf	57,b	;volatile
 37908                           
 37909                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 37910  0112AA  D033               	goto	i2l293
 37911  0112AC                     i2l294:
 37912                           
 37913                           ; BSR set to: 13
 37914                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 37915  0112AC  8E04               	bsf	_inPipes+3,7,c	;volatile
 37916                           
 37917                           ; BSR set to: 13
 37918                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 37919                           
 37920                           ; BSR set to: 13
 37921                           
 37922                           ; BSR set to: 13
 37923                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 37924                           
 37925                           ;usb_device.c: 2144: if(0 == 1)
 37926  0112AE  0428               	decf	_RemoteWakeup,w,c	;volatile
 37927  0112B0  A4D8               	btfss	status,2,c
 37928  0112B2  D03A               	goto	i2l297
 37929                           
 37930                           ; BSR set to: 13
 37931                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 37932  0112B4  8338               	bsf	56,1,b	;volatile
 37933                           
 37934                           ; BSR set to: 13
 37935                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 37936  0112B6  D038               	goto	i2l297
 37937  0112B8                     i2l298:
 37938                           
 37939                           ; BSR set to: 13
 37940                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 37941  0112B8  8E04               	bsf	_inPipes+3,7,c	;volatile
 37942                           
 37943                           ;usb_device.c: 2156: break;
 37944  0112BA  D036               	goto	i2l297
 37945  0112BC                     i2l299:
 37946                           
 37947                           ; BSR set to: 13
 37948                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 37949  0112BC  8E04               	bsf	_inPipes+3,7,c	;volatile
 37950                           
 37951                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 37952  0112BE  BF34               	btfsc	52,7,b	;volatile
 37953  0112C0  D00A               	goto	i2l300
 37954                           
 37955                           ; BSR set to: 13
 37956                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 37957  0112C2  5134               	movf	52,w,b	;volatile
 37958  0112C4  0B0F               	andlw	15
 37959  0112C6  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 37960  0112C8  502E               	movf	??_USBStdGetStatusHandler,w,c
 37961  0112CA  0D02               	mullw	2
 37962  0112CC  0E41               	movlw	low _pBDTEntryOut
 37963  0112CE  24F3               	addwf	prodl,w,c
 37964  0112D0  6ED9               	movwf	fsr2l,c
 37965  0112D2  0E01               	movlw	high _pBDTEntryOut
 37966  0112D4  D009               	goto	L67
 37967  0112D6                     i2l300:
 37968                           
 37969                           ; BSR set to: 13
 37970                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 37971                           
 37972                           ; BSR set to: 13
 37973  0112D6  5134               	movf	52,w,b	;volatile
 37974  0112D8  0B0F               	andlw	15
 37975  0112DA  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 37976  0112DC  502E               	movf	??_USBStdGetStatusHandler,w,c
 37977  0112DE  0D02               	mullw	2
 37978  0112E0  0E07               	movlw	low _pBDTEntryIn
 37979  0112E2  24F3               	addwf	prodl,w,c
 37980  0112E4  6ED9               	movwf	fsr2l,c
 37981  0112E6  0E00               	movlw	high _pBDTEntryIn
 37982  0112E8                     L67:
 37983  0112E8  20F4               	addwfc	prodh,w,c
 37984  0112EA  6EDA               	movwf	fsr2h,c
 37985  0112EC  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 37986  0112F0  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 37987                           
 37988                           ; BSR set to: 13
 37989                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 37990                           
 37991                           ; BSR set to: 13
 37992  0112F4  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 37993  0112F8  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 37994  0112FC  AEDF               	btfss	indf2,7,c
 37995  0112FE  D014               	goto	i2l297
 37996                           
 37997                           ; BSR set to: 13
 37998  011300  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 37999  011304  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 38000  011308  A4DF               	btfss	indf2,2,c
 38001  01130A  D00E               	goto	i2l297
 38002                           
 38003                           ; BSR set to: 13
 38004                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 38005  01130C  0E01               	movlw	1
 38006  01130E  6F38               	movwf	56,b	;volatile
 38007                           
 38008                           ; BSR set to: 13
 38009                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 38010                           
 38011                           ; BSR set to: 13
 38012                           ;usb_device.c: 2176: break;
 38013  011310  D00B               	goto	i2l297
 38014  011312                     i2l293:
 38015                           
 38016                           ; BSR set to: 13
 38017                           
 38018                           ; BSR set to: 13
 38019  011312  5130               	movf	48,w,b	;volatile
 38020  011314  0B1F               	andlw	31
 38021                           
 38022                           ; Switch size 1, requested type "space"
 38023                           ; Number of cases is 3, Range of values is 0 to 2
 38024                           ; switch strategies available:
 38025                           ; Name         Instructions Cycles
 38026                           ; simple_byte           10     6 (average)
 38027                           ;	Chosen strategy is simple_byte
 38028  011316  0A00               	xorlw	0	; case 0
 38029  011318  B4D8               	btfsc	status,2,c
 38030  01131A  D7C8               	goto	i2l294
 38031  01131C  0A01               	xorlw	1	; case 1
 38032  01131E  B4D8               	btfsc	status,2,c
 38033  011320  D7CB               	goto	i2l298
 38034  011322  0A03               	xorlw	3	; case 2
 38035  011324  B4D8               	btfsc	status,2,c
 38036  011326  D7CA               	goto	i2l299
 38037  011328                     i2l297:
 38038                           
 38039                           ; BSR set to: 13
 38040                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 38041  011328  AE04               	btfss	_inPipes+3,7,c	;volatile
 38042  01132A  0012               	return	
 38043                           
 38044                           ; BSR set to: 13
 38045                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 38046  01132C  0E38               	movlw	56
 38047  01132E  6E01               	movwf	_inPipes,c	;volatile
 38048  011330  0E0D               	movlw	13
 38049  011332  6E02               	movwf	_inPipes+1,c	;volatile
 38050                           
 38051                           ; BSR set to: 13
 38052                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 38053  011334  8004               	bsf	_inPipes+3,0,c	;volatile
 38054                           
 38055                           ; BSR set to: 13
 38056                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 38057  011336  0E02               	movlw	2
 38058  011338  6E05               	movwf	_inPipes+4,c	;volatile
 38059  01133A  0012               	return	
 38060  01133C                     __end_of_USBStdGetStatusHandler:
 38061                           	opt stack 0
 38062                           tosu	equ	0xFFF
 38063                           tosh	equ	0xFFE
 38064                           tosl	equ	0xFFD
 38065                           pclatu	equ	0xFFB
 38066                           pclath	equ	0xFFA
 38067                           tblptru	equ	0xFF8
 38068                           tblptrh	equ	0xFF7
 38069                           tblptrl	equ	0xFF6
 38070                           tablat	equ	0xFF5
 38071                           prodh	equ	0xFF4
 38072                           prodl	equ	0xFF3
 38073                           intcon	equ	0xFF2
 38074                           indf0	equ	0xFEF
 38075                           postinc0	equ	0xFEE
 38076                           fsr0h	equ	0xFEA
 38077                           fsr0l	equ	0xFE9
 38078                           wreg	equ	0xFE8
 38079                           indf1	equ	0xFE7
 38080                           postdec1	equ	0xFE5
 38081                           plusw1	equ	0xFE3
 38082                           fsr1h	equ	0xFE2
 38083                           fsr1l	equ	0xFE1
 38084                           indf2	equ	0xFDF
 38085                           postinc2	equ	0xFDE
 38086                           postdec2	equ	0xFDD
 38087                           plusw2	equ	0xFDB
 38088                           fsr2h	equ	0xFDA
 38089                           fsr2l	equ	0xFD9
 38090                           status	equ	0xFD8
 38091                           
 38092 ;; *************** function _USBStdGetDscHandler *****************
 38093 ;; Defined at:
 38094 ;;		line 2045 in file "usb_device.c"
 38095 ;; Parameters:    Size  Location     Type
 38096 ;;		None
 38097 ;; Auto vars:     Size  Location     Type
 38098 ;;		None
 38099 ;; Return value:  Size  Location     Type
 38100 ;;                  1    wreg      void 
 38101 ;; Registers used:
 38102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 38103 ;; Tracked objects:
 38104 ;;		On entry : 0/0
 38105 ;;		On exit  : 0/0
 38106 ;;		Unchanged: 0/0
 38107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38110 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38111 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38112 ;;Total ram usage:        2 bytes
 38113 ;; Hardware stack levels used:    1
 38114 ;; This function calls:
 38115 ;;		Nothing
 38116 ;; This function is called by:
 38117 ;;		_USBCheckStdRequest
 38118 ;; This function uses a non-reentrant model
 38119 ;;
 38120                           
 38121                           	psect	text142
 38122  00F2CC                     __ptext142:
 38123                           	opt stack 0
 38124  00F2CC                     _USBStdGetDscHandler:
 38125                           	opt stack 13
 38126                           
 38127                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 38128                           
 38129                           ; BSR set to: 13
 38130                           ;incstack = 0
 38131  00F2CC  0E80               	movlw	128
 38132  00F2CE  010D               	movlb	13	; () banked
 38133  00F2D0  1930               	xorwf	48,w,b	;volatile
 38134  00F2D2  A4D8               	btfss	status,2,c
 38135  00F2D4  0012               	return	
 38136                           
 38137                           ; BSR set to: 13
 38138                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 38139  00F2D6  0EC0               	movlw	192
 38140  00F2D8  6E04               	movwf	_inPipes+3,c	;volatile
 38141                           
 38142                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 38143  00F2DA  D082               	goto	i2l280
 38144  00F2DC                     
 38145                           ; BSR set to: 13
 38146                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 38147                           
 38148                           ; BSR set to: 13
 38149  00F2DC  0EBB               	movlw	low _device_dsc
 38150  00F2DE  6E01               	movwf	_inPipes,c	;volatile
 38151  00F2E0  0EA1               	movlw	high _device_dsc
 38152  00F2E2  6E02               	movwf	_inPipes+1,c	;volatile
 38153                           
 38154                           ; BSR set to: 13
 38155                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 38156  00F2E4  0E00               	movlw	0
 38157  00F2E6  6E06               	movwf	_inPipes+5,c	;volatile
 38158  00F2E8  0E12               	movlw	18
 38159  00F2EA  6E05               	movwf	_inPipes+4,c	;volatile
 38160                           
 38161                           ;usb_device.c: 2060: break;
 38162  00F2EC  0012               	return	
 38163  00F2EE                     
 38164                           ; BSR set to: 13
 38165                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 38166                           
 38167                           ; BSR set to: 13
 38168  00F2EE  5132               	movf	50,w,b	;volatile
 38169  00F2F0  A4D8               	btfss	status,2,c
 38170  00F2F2  D042               	goto	i2l284
 38171                           
 38172                           ; BSR set to: 13
 38173                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 38174  00F2F4  5132               	movf	50,w,b	;volatile
 38175  00F2F6  0D02               	mullw	2
 38176  00F2F8  0EEC               	movlw	low _USB_CD_Ptr
 38177  00F2FA  24F3               	addwf	prodl,w,c
 38178  00F2FC  6EF6               	movwf	tblptrl,c
 38179  00F2FE  0E9D               	movlw	high _USB_CD_Ptr
 38180  00F300  20F4               	addwfc	prodh,w,c
 38181  00F302  6EF7               	movwf	tblptrh,c
 38182  00F304                     	if	1	;There are 3 active tblptr bytes
 38183  00F304  6AF8               	clrf	tblptru,c
 38184  00F306  0E00               	movlw	low (__mediumconst shr (0+16))
 38185  00F308  22F8               	addwfc	tblptru,f,c
 38186  00F30A                     	endif
 38187  00F30A  0009               	tblrd		*+
 38188  00F30C  CFF5 F001          	movff	tablat,_inPipes	;volatile
 38189  00F310  000A               	tblrd		*-
 38190  00F312  CFF5 F002          	movff	tablat,_inPipes+1	;volatile
 38191                           
 38192                           ; BSR set to: 13
 38193                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 38194  00F316  0E02               	movlw	2
 38195  00F318  2401               	addwf	_inPipes,w,c	;volatile
 38196  00F31A  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 38197  00F31C  0E00               	movlw	0
 38198  00F31E  2002               	addwfc	_inPipes+1,w,c	;volatile
 38199  00F320  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 38200  00F322  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 38201  00F326  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 38202  00F32A  0E00               	movlw	low (__mediumconst shr (0+16))
 38203  00F32C  6EF8               	movwf	tblptru,c
 38204  00F32E  0E0E               	movlw	(high __ramtop+-1)
 38205  00F330  64F7               	cpfsgt	tblptrh,c
 38206  00F332  D003               	bra	i2u998_47
 38207  00F334  0008               	tblrd		*
 38208  00F336  50F5               	movf	tablat,w,c
 38209  00F338  D005               	bra	i2u998_40
 38210  00F33A                     i2u998_47:
 38211  00F33A  CFF6 FFE9          	movff	tblptrl,fsr0l
 38212  00F33E  CFF7 FFEA          	movff	tblptrh,fsr0h
 38213  00F342  50EF               	movf	indf0,w,c
 38214  00F344                     i2u998_40:
 38215  00F344  6E05               	movwf	_inPipes+4,c	;volatile
 38216                           
 38217                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 38218  00F346  0E03               	movlw	3
 38219  00F348  2401               	addwf	_inPipes,w,c	;volatile
 38220  00F34A  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 38221  00F34C  0E00               	movlw	0
 38222  00F34E  2002               	addwfc	_inPipes+1,w,c	;volatile
 38223  00F350  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 38224  00F352  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 38225  00F356  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 38226  00F35A  0E00               	movlw	low (__mediumconst shr (0+16))
 38227  00F35C  6EF8               	movwf	tblptru,c
 38228  00F35E  0E0E               	movlw	(high __ramtop+-1)
 38229  00F360  64F7               	cpfsgt	tblptrh,c
 38230  00F362  D003               	bra	i2u999_47
 38231  00F364  0008               	tblrd		*
 38232  00F366  50F5               	movf	tablat,w,c
 38233  00F368  D005               	bra	i2u999_40
 38234  00F36A                     i2u999_47:
 38235  00F36A  CFF6 FFE9          	movff	tblptrl,fsr0l
 38236  00F36E  CFF7 FFEA          	movff	tblptrh,fsr0h
 38237  00F372  50EF               	movf	indf0,w,c
 38238  00F374                     i2u999_40:
 38239  00F374  6E06               	movwf	_inPipes+5,c	;volatile
 38240                           
 38241                           ;usb_device.c: 2078: }
 38242  00F376  0012               	return	
 38243  00F378                     i2l284:
 38244                           
 38245                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 38246  00F378  0E00               	movlw	0
 38247  00F37A  6E04               	movwf	_inPipes+3,c	;volatile
 38248                           
 38249                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 38250  00F37C  0012               	return	
 38251  00F37E                     
 38252                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 38253  00F37E  0E04               	movlw	4
 38254  00F380  010D               	movlb	13	; () banked
 38255  00F382  6132               	cpfslt	50,b	;volatile
 38256  00F384  D027               	goto	i2l287
 38257                           
 38258                           ; BSR set to: 13
 38259                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 38260  00F386  5132               	movf	50,w,b	;volatile
 38261  00F388  0D02               	mullw	2
 38262  00F38A  0EE4               	movlw	low _USB_SD_Ptr
 38263  00F38C  24F3               	addwf	prodl,w,c
 38264  00F38E  6EF6               	movwf	tblptrl,c
 38265  00F390  0E9D               	movlw	high _USB_SD_Ptr
 38266  00F392  20F4               	addwfc	prodh,w,c
 38267  00F394  6EF7               	movwf	tblptrh,c
 38268  00F396                     	if	1	;There are 3 active tblptr bytes
 38269  00F396  6AF8               	clrf	tblptru,c
 38270  00F398  0E00               	movlw	low (__mediumconst shr (0+16))
 38271  00F39A  22F8               	addwfc	tblptru,f,c
 38272  00F39C                     	endif
 38273  00F39C  0009               	tblrd		*+
 38274  00F39E  CFF5 F001          	movff	tablat,_inPipes	;volatile
 38275  00F3A2  000A               	tblrd		*-
 38276  00F3A4  CFF5 F002          	movff	tablat,_inPipes+1	;volatile
 38277                           
 38278                           ; BSR set to: 13
 38279                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 38280  00F3A8  C001  FFF6         	movff	_inPipes,tblptrl	;volatile
 38281  00F3AC  C002  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 38282  00F3B0  0E00               	movlw	low (__mediumconst shr (0+16))
 38283  00F3B2  6EF8               	movwf	tblptru,c
 38284  00F3B4  0E0E               	movlw	(high __ramtop+-1)
 38285  00F3B6  64F7               	cpfsgt	tblptrh,c
 38286  00F3B8  D003               	bra	i2u1001_47
 38287  00F3BA  0008               	tblrd		*
 38288  00F3BC  50F5               	movf	tablat,w,c
 38289  00F3BE  D005               	bra	i2u1001_40
 38290  00F3C0                     i2u1001_47:
 38291  00F3C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 38292  00F3C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 38293  00F3C8  50EF               	movf	indf0,w,c
 38294  00F3CA                     i2u1001_40:
 38295  00F3CA  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 38296  00F3CC  502E               	movf	??_USBStdGetDscHandler,w,c
 38297  00F3CE  6E05               	movwf	_inPipes+4,c	;volatile
 38298  00F3D0  6A06               	clrf	_inPipes+5,c	;volatile
 38299                           
 38300                           ;usb_device.c: 2094: }
 38301  00F3D2  0012               	return	
 38302  00F3D4                     i2l287:
 38303                           
 38304                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 38305  00F3D4  0E00               	movlw	0
 38306  00F3D6  6E04               	movwf	_inPipes+3,c	;volatile
 38307                           
 38308                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 38309  00F3D8  0012               	return	
 38310  00F3DA                     
 38311                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 38312  00F3DA  0E00               	movlw	0
 38313  00F3DC  6E04               	movwf	_inPipes+3,c	;volatile
 38314                           
 38315                           ;usb_device.c: 2112: }
 38316                           
 38317                           ;usb_device.c: 2111: break;
 38318  00F3DE  0012               	return	
 38319  00F3E0                     i2l280:
 38320  00F3E0  010D               	movlb	13	; () banked
 38321  00F3E2  5133               	movf	51,w,b	;volatile
 38322                           
 38323                           ; Switch size 1, requested type "space"
 38324                           ; Number of cases is 3, Range of values is 1 to 3
 38325                           ; switch strategies available:
 38326                           ; Name         Instructions Cycles
 38327                           ; simple_byte           10     6 (average)
 38328                           ;	Chosen strategy is simple_byte
 38329  00F3E4  0A01               	xorlw	1	; case 1
 38330  00F3E6  B4D8               	btfsc	status,2,c
 38331  00F3E8  D779               	goto	i2l281
 38332  00F3EA  0A03               	xorlw	3	; case 2
 38333  00F3EC  B4D8               	btfsc	status,2,c
 38334  00F3EE  D77F               	goto	i2l283
 38335  00F3F0  0A01               	xorlw	1	; case 3
 38336  00F3F2  B4D8               	btfsc	status,2,c
 38337  00F3F4  D7C4               	goto	i2l286
 38338  00F3F6  D7F1               	goto	i2l289
 38339  00F3F8                     __end_of_USBStdGetDscHandler:
 38340                           	opt stack 0
 38341                           tosu	equ	0xFFF
 38342                           tosh	equ	0xFFE
 38343                           tosl	equ	0xFFD
 38344                           pclatu	equ	0xFFB
 38345                           pclath	equ	0xFFA
 38346                           tblptru	equ	0xFF8
 38347                           tblptrh	equ	0xFF7
 38348                           tblptrl	equ	0xFF6
 38349                           tablat	equ	0xFF5
 38350                           prodh	equ	0xFF4
 38351                           prodl	equ	0xFF3
 38352                           intcon	equ	0xFF2
 38353                           indf0	equ	0xFEF
 38354                           postinc0	equ	0xFEE
 38355                           fsr0h	equ	0xFEA
 38356                           fsr0l	equ	0xFE9
 38357                           wreg	equ	0xFE8
 38358                           indf1	equ	0xFE7
 38359                           postdec1	equ	0xFE5
 38360                           plusw1	equ	0xFE3
 38361                           fsr1h	equ	0xFE2
 38362                           fsr1l	equ	0xFE1
 38363                           indf2	equ	0xFDF
 38364                           postinc2	equ	0xFDE
 38365                           postdec2	equ	0xFDD
 38366                           plusw2	equ	0xFDB
 38367                           fsr2h	equ	0xFDA
 38368                           fsr2l	equ	0xFD9
 38369                           status	equ	0xFD8
 38370                           
 38371 ;; *************** function _USBStdFeatureReqHandler *****************
 38372 ;; Defined at:
 38373 ;;		line 2756 in file "usb_device.c"
 38374 ;; Parameters:    Size  Location     Type
 38375 ;;		None
 38376 ;; Auto vars:     Size  Location     Type
 38377 ;;  p               2   27[COMRAM] PTR struct __BDT
 38378 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 38379 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 38380 ;;		 -> UEP0(1), 
 38381 ;;  current_ep_d    1   26[COMRAM] struct .
 38382 ;; Return value:  Size  Location     Type
 38383 ;;                  1    wreg      void 
 38384 ;; Registers used:
 38385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 38386 ;; Tracked objects:
 38387 ;;		On entry : 0/0
 38388 ;;		On exit  : 0/0
 38389 ;;		Unchanged: 0/0
 38390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38392 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38394 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38395 ;;Total ram usage:        6 bytes
 38396 ;; Hardware stack levels used:    1
 38397 ;; Hardware stack levels required when called:    4
 38398 ;; This function calls:
 38399 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 38400 ;; This function is called by:
 38401 ;;		_USBCheckStdRequest
 38402 ;; This function uses a non-reentrant model
 38403 ;;
 38404                           
 38405                           	psect	text143
 38406  00CFE4                     __ptext143:
 38407                           	opt stack 0
 38408  00CFE4                     _USBStdFeatureReqHandler:
 38409                           	opt stack 9
 38410                           
 38411                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 38412                           
 38413                           ;incstack = 0
 38414  00CFE4  010D               	movlb	13	; () banked
 38415  00CFE6  0532               	decf	50,w,b	;volatile
 38416  00CFE8  A4D8               	btfss	status,2,c
 38417  00CFEA  D00E               	goto	i2l373
 38418                           
 38419                           ; BSR set to: 13
 38420  00CFEC  5130               	movf	48,w,b	;volatile
 38421  00CFEE  0B1F               	andlw	31
 38422  00CFF0  0900               	iorlw	0
 38423  00CFF2  A4D8               	btfss	status,2,c
 38424  00CFF4  D009               	goto	i2l373
 38425                           
 38426                           ; BSR set to: 13
 38427                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 38428  00CFF6  8E04               	bsf	_inPipes+3,7,c	;volatile
 38429                           
 38430                           ; BSR set to: 13
 38431                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 38432  00CFF8  0E03               	movlw	3
 38433  00CFFA  1931               	xorwf	49,w,b	;volatile
 38434  00CFFC  A4D8               	btfss	status,2,c
 38435  00CFFE  D002               	goto	i2l372
 38436                           
 38437                           ; BSR set to: 13
 38438                           ;usb_device.c: 2806: RemoteWakeup = 1;
 38439  00D000  0E01               	movlw	1
 38440  00D002  D001               	goto	L68
 38441  00D004                     i2l372:
 38442                           
 38443                           ; BSR set to: 13
 38444                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 38445                           
 38446                           ; BSR set to: 13
 38447  00D004  0E00               	movlw	0
 38448  00D006                     L68:
 38449  00D006  6E28               	movwf	_RemoteWakeup,c	;volatile
 38450  00D008                     i2l373:
 38451                           
 38452                           ; BSR set to: 13
 38453                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 38454                           
 38455                           ; BSR set to: 13
 38456  00D008  5132               	movf	50,w,b	;volatile
 38457  00D00A  A4D8               	btfss	status,2,c
 38458  00D00C  0012               	return	
 38459                           
 38460                           ; BSR set to: 13
 38461  00D00E  5130               	movf	48,w,b	;volatile
 38462  00D010  0B1F               	andlw	31
 38463  00D012  0A02               	xorlw	2
 38464  00D014  A4D8               	btfss	status,2,c
 38465  00D016  0012               	return	
 38466                           
 38467                           ; BSR set to: 13
 38468  00D018  5134               	movf	52,w,b	;volatile
 38469  00D01A  0B0F               	andlw	15
 38470  00D01C  0900               	iorlw	0
 38471  00D01E  B4D8               	btfsc	status,2,c
 38472  00D020  0012               	return	
 38473                           
 38474                           ; BSR set to: 13
 38475  00D022  5134               	movf	52,w,b	;volatile
 38476  00D024  0B0F               	andlw	15
 38477  00D026  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38478  00D028  0E03               	movlw	3
 38479  00D02A  6045               	cpfslt	??_USBStdFeatureReqHandler,c
 38480  00D02C  0012               	return	
 38481                           
 38482                           ; BSR set to: 13
 38483  00D02E  0E20               	movlw	32
 38484  00D030  182B               	xorwf	_USBDeviceState,w,c	;volatile
 38485  00D032  A4D8               	btfss	status,2,c
 38486  00D034  0012               	return	
 38487                           
 38488                           ; BSR set to: 13
 38489                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 38490  00D036  8E04               	bsf	_inPipes+3,7,c	;volatile
 38491                           
 38492                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 38493  00D038  BF34               	btfsc	52,7,b	;volatile
 38494  00D03A  D019               	goto	i2l375
 38495                           
 38496                           ; BSR set to: 13
 38497                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 38498  00D03C  5134               	movf	52,w,b	;volatile
 38499  00D03E  0B0F               	andlw	15
 38500  00D040  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38501  00D042  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38502  00D044  0D02               	mullw	2
 38503  00D046  0E41               	movlw	low _pBDTEntryOut
 38504  00D048  24F3               	addwf	prodl,w,c
 38505  00D04A  6ED9               	movwf	fsr2l,c
 38506  00D04C  0E01               	movlw	high _pBDTEntryOut
 38507  00D04E  20F4               	addwfc	prodh,w,c
 38508  00D050  6EDA               	movwf	fsr2h,c
 38509  00D052  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 38510  00D056  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 38511                           
 38512                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 38513  00D05A  5134               	movf	52,w,b	;volatile
 38514  00D05C  0B0F               	andlw	15
 38515  00D05E  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38516  00D060  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38517  00D062  0D01               	mullw	1
 38518  00D064  0E65               	movlw	low _ep_data_out
 38519  00D066  24F3               	addwf	prodl,w,c
 38520  00D068  6ED9               	movwf	fsr2l,c
 38521  00D06A  0E01               	movlw	high _ep_data_out
 38522  00D06C  D018               	goto	L69
 38523  00D06E                     i2l375:
 38524                           
 38525                           ; BSR set to: 13
 38526                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 38527                           
 38528                           ; BSR set to: 13
 38529  00D06E  5134               	movf	52,w,b	;volatile
 38530  00D070  0B0F               	andlw	15
 38531  00D072  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38532  00D074  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38533  00D076  0D02               	mullw	2
 38534  00D078  0E07               	movlw	low _pBDTEntryIn
 38535  00D07A  24F3               	addwf	prodl,w,c
 38536  00D07C  6ED9               	movwf	fsr2l,c
 38537  00D07E  0E00               	movlw	high _pBDTEntryIn
 38538  00D080  20F4               	addwfc	prodh,w,c
 38539  00D082  6EDA               	movwf	fsr2h,c
 38540  00D084  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 38541  00D088  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 38542                           
 38543                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 38544  00D08C  5134               	movf	52,w,b	;volatile
 38545  00D08E  0B0F               	andlw	15
 38546  00D090  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38547  00D092  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38548  00D094  0D01               	mullw	1
 38549  00D096  0E68               	movlw	low _ep_data_in
 38550  00D098  24F3               	addwf	prodl,w,c
 38551  00D09A  6ED9               	movwf	fsr2l,c
 38552  00D09C  0E01               	movlw	high _ep_data_in
 38553  00D09E                     L69:
 38554  00D09E  20F4               	addwfc	prodh,w,c
 38555  00D0A0  6EDA               	movwf	fsr2h,c
 38556  00D0A2  50DF               	movf	indf2,w,c
 38557  00D0A4  6E48               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 38558                           
 38559                           ; BSR set to: 13
 38560                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 38561                           
 38562                           ; BSR set to: 13
 38563  00D0A6  B048               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 38564  00D0A8  D006               	goto	i2l377
 38565                           
 38566                           ; BSR set to: 13
 38567                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 38568  00D0AA  0EFB               	movlw	251
 38569  00D0AC  1449               	andwf	USBStdFeatureReqHandler@p,w,c
 38570  00D0AE  6E49               	movwf	USBStdFeatureReqHandler@p,c
 38571  00D0B0  0EFF               	movlw	255
 38572  00D0B2  144A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 38573  00D0B4  D004               	goto	L70
 38574  00D0B6                     i2l377:
 38575                           
 38576                           ; BSR set to: 13
 38577                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 38578                           
 38579                           ; BSR set to: 13
 38580  00D0B6  0E04               	movlw	4
 38581  00D0B8  1049               	iorwf	USBStdFeatureReqHandler@p,w,c
 38582  00D0BA  6E49               	movwf	USBStdFeatureReqHandler@p,c
 38583  00D0BC  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 38584  00D0BE                     L70:
 38585  00D0BE  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 38586                           
 38587                           ; BSR set to: 13
 38588                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 38589                           
 38590                           ; BSR set to: 13
 38591  00D0C0  BF34               	btfsc	52,7,b	;volatile
 38592  00D0C2  D00A               	goto	i2l379
 38593                           
 38594                           ; BSR set to: 13
 38595                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 38596  00D0C4  5134               	movf	52,w,b	;volatile
 38597  00D0C6  0B0F               	andlw	15
 38598  00D0C8  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38599  00D0CA  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38600  00D0CC  0D02               	mullw	2
 38601  00D0CE  0E41               	movlw	low _pBDTEntryOut
 38602  00D0D0  24F3               	addwf	prodl,w,c
 38603  00D0D2  6ED9               	movwf	fsr2l,c
 38604  00D0D4  0E01               	movlw	high _pBDTEntryOut
 38605  00D0D6  D009               	goto	L71
 38606  00D0D8                     i2l379:
 38607                           
 38608                           ; BSR set to: 13
 38609                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 38610                           
 38611                           ; BSR set to: 13
 38612  00D0D8  5134               	movf	52,w,b	;volatile
 38613  00D0DA  0B0F               	andlw	15
 38614  00D0DC  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38615  00D0DE  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38616  00D0E0  0D02               	mullw	2
 38617  00D0E2  0E07               	movlw	low _pBDTEntryIn
 38618  00D0E4  24F3               	addwf	prodl,w,c
 38619  00D0E6  6ED9               	movwf	fsr2l,c
 38620  00D0E8  0E00               	movlw	high _pBDTEntryIn
 38621  00D0EA                     L71:
 38622  00D0EA  20F4               	addwfc	prodh,w,c
 38623  00D0EC  6EDA               	movwf	fsr2h,c
 38624  00D0EE  C049  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 38625  00D0F2  C04A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 38626                           
 38627                           ; BSR set to: 13
 38628                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 38629                           
 38630                           ; BSR set to: 13
 38631  00D0F6  0E03               	movlw	3
 38632  00D0F8  1931               	xorwf	49,w,b	;volatile
 38633  00D0FA  A4D8               	btfss	status,2,c
 38634  00D0FC  D02D               	goto	i2l381
 38635                           
 38636                           ; BSR set to: 13
 38637                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 38638  00D0FE  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38639  00D102  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38640  00D106  AEDF               	btfss	indf2,7,c
 38641  00D108  D01A               	goto	i2l384
 38642                           
 38643                           ; BSR set to: 13
 38644                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 38645  00D10A  BF34               	btfsc	52,7,b	;volatile
 38646  00D10C  D00A               	goto	i2l383
 38647                           
 38648                           ; BSR set to: 13
 38649                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 38650  00D10E  5134               	movf	52,w,b	;volatile
 38651  00D110  0B0F               	andlw	15
 38652  00D112  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38653  00D114  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38654  00D116  0D01               	mullw	1
 38655  00D118  0E65               	movlw	low _ep_data_out
 38656  00D11A  24F3               	addwf	prodl,w,c
 38657  00D11C  6ED9               	movwf	fsr2l,c
 38658  00D11E  0E01               	movlw	high _ep_data_out
 38659  00D120  D00A               	goto	L72
 38660  00D122                     i2l383:
 38661                           
 38662                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 38663                           
 38664                           ; BSR set to: 1
 38665  00D122  010D               	movlb	13	; () banked
 38666  00D124  5134               	movf	52,w,b	;volatile
 38667  00D126  0B0F               	andlw	15
 38668  00D128  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38669  00D12A  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38670  00D12C  0D01               	mullw	1
 38671  00D12E  0E68               	movlw	low _ep_data_in
 38672  00D130  24F3               	addwf	prodl,w,c
 38673  00D132  6ED9               	movwf	fsr2l,c
 38674  00D134  0E01               	movlw	high _ep_data_in
 38675  00D136                     L72:
 38676  00D136  20F4               	addwfc	prodh,w,c
 38677  00D138  6EDA               	movwf	fsr2h,c
 38678  00D13A  0101               	movlb	1	; () banked
 38679  00D13C  82DF               	bsf	indf2,1,c
 38680  00D13E                     i2l384:
 38681                           
 38682                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 38683                           
 38684                           ; BSR set to: 1
 38685                           
 38686                           ; BSR set to: 1
 38687  00D13E  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38688  00D142  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38689  00D146  0E00               	movlw	0
 38690  00D148  84DB               	bsf	plusw2,2,c
 38691                           
 38692                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 38693  00D14A  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38694  00D14E  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38695  00D152  0E00               	movlw	0
 38696  00D154  8EDB               	bsf	plusw2,7,c
 38697                           
 38698                           ;usb_device.c: 2878: }
 38699  00D156  0012               	return	
 38700  00D158                     i2l381:
 38701                           
 38702                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 38703  00D158  0E04               	movlw	4
 38704  00D15A  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 38705  00D15C  6E49               	movwf	USBStdFeatureReqHandler@p,c
 38706  00D15E  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 38707  00D160  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 38708                           
 38709                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 38710  00D162  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38711  00D166  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38712  00D16A  AEDF               	btfss	indf2,7,c
 38713  00D16C  D01B               	goto	i2l386
 38714                           
 38715                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 38716  00D16E  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38717  00D172  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38718  00D176  0E7F               	movlw	127
 38719  00D178  16DF               	andwf	indf2,f,c
 38720                           
 38721                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 38722  00D17A  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38723  00D17E  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38724  00D182  0E00               	movlw	0
 38725  00D184  8CDB               	bsf	plusw2,6,c
 38726                           
 38727                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 38728  00D186  0E00               	movlw	0
 38729  00D188  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 38730  00D18A  0E05               	movlw	5
 38731  00D18C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 38732  00D18E  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 38733  00D192  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 38734  00D196  0E00               	movlw	0
 38735  00D198  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 38736  00D19A  0E02               	movlw	2
 38737  00D19C  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 38738  00D19E  ECF2  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 38739                           
 38740                           ;usb_device.c: 2893: }
 38741  00D1A2  D006               	goto	i2l387
 38742  00D1A4                     i2l386:
 38743                           
 38744                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 38745  00D1A4  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38746  00D1A8  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38747  00D1AC  0E00               	movlw	0
 38748  00D1AE  8CDB               	bsf	plusw2,6,c
 38749  00D1B0                     i2l387:
 38750                           
 38751                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 38752  00D1B0  0E04               	movlw	4
 38753  00D1B2  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 38754  00D1B4  6E49               	movwf	USBStdFeatureReqHandler@p,c
 38755  00D1B6  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 38756  00D1B8  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 38757                           
 38758                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 38759  00D1BA  B248               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 38760  00D1BC  D006               	goto	i2u1818_40
 38761  00D1BE  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38762  00D1C2  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38763  00D1C6  AEDF               	btfss	indf2,7,c
 38764  00D1C8  D030               	goto	i2l388
 38765  00D1CA                     i2u1818_40:
 38766                           
 38767                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 38768  00D1CA  010D               	movlb	13	; () banked
 38769  00D1CC  BF34               	btfsc	52,7,b	;volatile
 38770  00D1CE  D00A               	goto	i2l391
 38771                           
 38772                           ; BSR set to: 13
 38773                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 38774  00D1D0  5134               	movf	52,w,b	;volatile
 38775  00D1D2  0B0F               	andlw	15
 38776  00D1D4  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38777  00D1D6  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38778  00D1D8  0D01               	mullw	1
 38779  00D1DA  0E65               	movlw	low _ep_data_out
 38780  00D1DC  24F3               	addwf	prodl,w,c
 38781  00D1DE  6ED9               	movwf	fsr2l,c
 38782  00D1E0  0E01               	movlw	high _ep_data_out
 38783  00D1E2  D00A               	goto	L73
 38784  00D1E4                     i2l391:
 38785                           
 38786                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 38787                           
 38788                           ; BSR set to: 1
 38789  00D1E4  010D               	movlb	13	; () banked
 38790  00D1E6  5134               	movf	52,w,b	;volatile
 38791  00D1E8  0B0F               	andlw	15
 38792  00D1EA  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38793  00D1EC  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38794  00D1EE  0D01               	mullw	1
 38795  00D1F0  0E68               	movlw	low _ep_data_in
 38796  00D1F2  24F3               	addwf	prodl,w,c
 38797  00D1F4  6ED9               	movwf	fsr2l,c
 38798  00D1F6  0E01               	movlw	high _ep_data_in
 38799  00D1F8                     L73:
 38800  00D1F8  20F4               	addwfc	prodh,w,c
 38801  00D1FA  6EDA               	movwf	fsr2h,c
 38802  00D1FC  0101               	movlb	1	; () banked
 38803  00D1FE  92DF               	bcf	indf2,1,c
 38804                           
 38805                           ; BSR set to: 1
 38806                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 38807                           
 38808                           ; BSR set to: 1
 38809  00D200  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38810  00D204  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38811  00D208  0E3B               	movlw	59
 38812  00D20A  16DF               	andwf	indf2,f,c
 38813                           
 38814                           ; BSR set to: 1
 38815                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 38816  00D20C  0E00               	movlw	0
 38817  00D20E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 38818  00D210  0E05               	movlw	5
 38819  00D212  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 38820  00D214  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 38821  00D218  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 38822  00D21C  0E00               	movlw	0
 38823  00D21E  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 38824  00D220  0E02               	movlw	2
 38825  00D222  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 38826  00D224  ECF2  F08B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 38827                           
 38828                           ;usb_device.c: 2923: }
 38829  00D228  D006               	goto	i2l393
 38830  00D22A                     i2l388:
 38831                           
 38832                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 38833  00D22A  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 38834  00D22E  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 38835  00D232  0E3B               	movlw	59
 38836  00D234  16DF               	andwf	indf2,f,c
 38837  00D236                     i2l393:
 38838                           
 38839                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 38840  00D236  010D               	movlb	13	; () banked
 38841  00D238  5134               	movf	52,w,b	;volatile
 38842  00D23A  0B0F               	andlw	15
 38843  00D23C  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 38844  00D23E  5045               	movf	??_USBStdFeatureReqHandler,w,c
 38845  00D240  0D01               	mullw	1
 38846  00D242  0E26               	movlw	38
 38847  00D244  24F3               	addwf	prodl,w,c
 38848  00D246  6E46               	movwf	USBStdFeatureReqHandler@pUEP,c
 38849  00D248  0E0F               	movlw	15
 38850  00D24A  20F4               	addwfc	prodh,w,c
 38851  00D24C  6E47               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 38852                           
 38853                           ; BSR set to: 13
 38854                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 38855  00D24E  C046  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 38856  00D252  C047  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 38857  00D256  0EFE               	movlw	254
 38858  00D258  16DF               	andwf	indf2,f,c
 38859                           
 38860                           ; BSR set to: 13
 38861  00D25A  0012               	return	
 38862  00D25C                     __end_of_USBStdFeatureReqHandler:
 38863                           	opt stack 0
 38864                           tosu	equ	0xFFF
 38865                           tosh	equ	0xFFE
 38866                           tosl	equ	0xFFD
 38867                           pclatu	equ	0xFFB
 38868                           pclath	equ	0xFFA
 38869                           tblptru	equ	0xFF8
 38870                           tblptrh	equ	0xFF7
 38871                           tblptrl	equ	0xFF6
 38872                           tablat	equ	0xFF5
 38873                           prodh	equ	0xFF4
 38874                           prodl	equ	0xFF3
 38875                           intcon	equ	0xFF2
 38876                           indf0	equ	0xFEF
 38877                           postinc0	equ	0xFEE
 38878                           fsr0h	equ	0xFEA
 38879                           fsr0l	equ	0xFE9
 38880                           wreg	equ	0xFE8
 38881                           indf1	equ	0xFE7
 38882                           postdec1	equ	0xFE5
 38883                           plusw1	equ	0xFE3
 38884                           fsr1h	equ	0xFE2
 38885                           fsr1l	equ	0xFE1
 38886                           indf2	equ	0xFDF
 38887                           postinc2	equ	0xFDE
 38888                           postdec2	equ	0xFDD
 38889                           plusw2	equ	0xFDB
 38890                           fsr2h	equ	0xFDA
 38891                           fsr2l	equ	0xFD9
 38892                           status	equ	0xFD8
 38893                           
 38894 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 38895 ;; Defined at:
 38896 ;;		line 54 in file "usb_events.c"
 38897 ;; Parameters:    Size  Location     Type
 38898 ;;  event           2   15[COMRAM] enum E6832
 38899 ;;  pdata           2   17[COMRAM] PTR void 
 38900 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 38901 ;;		 -> BDT(48), 
 38902 ;;  size            2   19[COMRAM] unsigned int 
 38903 ;; Auto vars:     Size  Location     Type
 38904 ;;		None
 38905 ;; Return value:  Size  Location     Type
 38906 ;;                  1    wreg      unsigned char 
 38907 ;; Registers used:
 38908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 38909 ;; Tracked objects:
 38910 ;;		On entry : 0/0
 38911 ;;		On exit  : 0/0
 38912 ;;		Unchanged: 0/0
 38913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38914 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38917 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38918 ;;Total ram usage:        8 bytes
 38919 ;; Hardware stack levels used:    1
 38920 ;; Hardware stack levels required when called:    3
 38921 ;; This function calls:
 38922 ;;		_APP_DeviceCustomHIDInitialize
 38923 ;;		_APP_DeviceMSDInitialize
 38924 ;;		_MSDTransferTerminated
 38925 ;;		_USBCheckHIDRequest
 38926 ;;		_USBCheckMSDRequest
 38927 ;;		i2_SYSTEM_Initialize
 38928 ;; This function is called by:
 38929 ;;		_USBDeviceTasks
 38930 ;;		_USBStdSetCfgHandler
 38931 ;;		_USBSuspend
 38932 ;;		_USBWakeFromSuspend
 38933 ;;		_USBCtrlTrfSetupHandler
 38934 ;;		_USBCheckStdRequest
 38935 ;;		_USBStdFeatureReqHandler
 38936 ;; This function uses a non-reentrant model
 38937 ;;
 38938                           
 38939                           	psect	text144
 38940  0117E4                     __ptext144:
 38941                           	opt stack 0
 38942  0117E4                     _USER_USB_CALLBACK_EVENT_HANDLER:
 38943                           	opt stack 13
 38944                           
 38945                           ;usb_events.c: 56: switch((int)event)
 38946                           
 38947                           ;incstack = 0
 38948  0117E4  D019               	goto	i2l816
 38949  0117E6                     
 38950                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 38951  0117E6  0E01               	movlw	1
 38952  0117E8  EC0E  F091         	call	i2_SYSTEM_Initialize
 38953                           
 38954                           ;usb_events.c: 79: break;
 38955  0117EC  0012               	return	
 38956  0117EE                     
 38957                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 38958  0117EE  0E02               	movlw	2
 38959  0117F0  EC0E  F091         	call	i2_SYSTEM_Initialize
 38960                           
 38961                           ;usb_events.c: 90: break;
 38962  0117F4  0012               	return	
 38963  0117F6                     
 38964                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 38965  0117F6  EC93  F094         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 38966                           
 38967                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 38968  0117FA  EC5C  F096         	call	_APP_DeviceMSDInitialize	;wreg free
 38969                           
 38970                           ;usb_events.c: 100: break;
 38971                           
 38972                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 38973                           
 38974                           ;usb_events.c: 97: break;
 38975  0117FE  0012               	return	
 38976  011800                     
 38977                           ;usb_events.c: 105: USBCheckHIDRequest();
 38978  011800  EC33  F084         	call	_USBCheckHIDRequest	;wreg free
 38979                           
 38980                           ;usb_events.c: 108: USBCheckMSDRequest();
 38981  011804  EC91  F086         	call	_USBCheckMSDRequest	;wreg free
 38982                           
 38983                           ;usb_events.c: 112: break;
 38984                           
 38985                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 38986                           
 38987                           ;usb_events.c: 109: break;
 38988  011808  0012               	return	
 38989  01180A                     
 38990                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 38991  01180A  C03F  F039         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 38992  01180E  C040  F03A         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 38993  011812  EC8F  F090         	call	_MSDTransferTerminated	;wreg free
 38994                           
 38995                           ;usb_events.c: 129: }
 38996                           
 38997                           ;usb_events.c: 128: break;
 38998                           
 38999                           ;usb_events.c: 127: default:
 39000                           
 39001                           ;usb_events.c: 125: break;
 39002  011816  0012               	return	
 39003  011818                     i2l816:
 39004  011818  C03D  F043         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 39005  01181C  C03E  F044         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 39006                           
 39007                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 39008                           ; Switch size 1, requested type "space"
 39009                           ; Number of cases is 2, Range of values is 0 to 127
 39010                           ; switch strategies available:
 39011                           ; Name         Instructions Cycles
 39012                           ; simple_byte            7     4 (average)
 39013                           ;	Chosen strategy is simple_byte
 39014  011820  5044               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 39015  011822  0A00               	xorlw	0	; case 0
 39016  011824  B4D8               	btfsc	status,2,c
 39017  011826  D004               	goto	i2l23596
 39018  011828  0A7F               	xorlw	127	; case 127
 39019  01182A  A4D8               	btfss	status,2,c
 39020  01182C  0012               	return	
 39021  01182E  D01A               	goto	i2l23598
 39022  011830                     i2l23596:
 39023                           
 39024                           ; Switch size 1, requested type "space"
 39025                           ; Number of cases is 8, Range of values is 1 to 117
 39026                           ; switch strategies available:
 39027                           ; Name         Instructions Cycles
 39028                           ; simple_byte           25    13 (average)
 39029                           ;	Chosen strategy is simple_byte
 39030  011830  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 39031  011832  0A01               	xorlw	1	; case 1
 39032  011834  B4D8               	btfsc	status,2,c
 39033  011836  D7DF               	goto	i2l822
 39034  011838  0A03               	xorlw	3	; case 2
 39035  01183A  B4D8               	btfsc	status,2,c
 39036  01183C  0012               	return	
 39037  01183E  0A01               	xorlw	1	; case 3
 39038  011840  B4D8               	btfsc	status,2,c
 39039  011842  D7DE               	goto	i2l824
 39040  011844  0A06               	xorlw	6	; case 5
 39041  011846  B4D8               	btfsc	status,2,c
 39042  011848  D7E0               	goto	i2l826
 39043  01184A  0A77               	xorlw	119	; case 114
 39044  01184C  B4D8               	btfsc	status,2,c
 39045  01184E  0012               	return	
 39046  011850  0A01               	xorlw	1	; case 115
 39047  011852  B4D8               	btfsc	status,2,c
 39048  011854  0012               	return	
 39049  011856  0A07               	xorlw	7	; case 116
 39050  011858  B4D8               	btfsc	status,2,c
 39051  01185A  D7C9               	goto	i2l821
 39052  01185C  0A01               	xorlw	1	; case 117
 39053  01185E  A4D8               	btfss	status,2,c
 39054  011860  0012               	return	
 39055  011862  D7C1               	goto	i2l820
 39056  011864                     i2l23598:
 39057                           
 39058                           ; Switch size 1, requested type "space"
 39059                           ; Number of cases is 1, Range of values is 255 to 255
 39060                           ; switch strategies available:
 39061                           ; Name         Instructions Cycles
 39062                           ; simple_byte            4     3 (average)
 39063                           ;	Chosen strategy is simple_byte
 39064  011864  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 39065  011866  0AFF               	xorlw	255	; case 255
 39066  011868  0012               	return	
 39067  01186A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 39068                           	opt stack 0
 39069                           tosu	equ	0xFFF
 39070                           tosh	equ	0xFFE
 39071                           tosl	equ	0xFFD
 39072                           pclatu	equ	0xFFB
 39073                           pclath	equ	0xFFA
 39074                           tblptru	equ	0xFF8
 39075                           tblptrh	equ	0xFF7
 39076                           tblptrl	equ	0xFF6
 39077                           tablat	equ	0xFF5
 39078                           prodh	equ	0xFF4
 39079                           prodl	equ	0xFF3
 39080                           intcon	equ	0xFF2
 39081                           indf0	equ	0xFEF
 39082                           postinc0	equ	0xFEE
 39083                           fsr0h	equ	0xFEA
 39084                           fsr0l	equ	0xFE9
 39085                           wreg	equ	0xFE8
 39086                           indf1	equ	0xFE7
 39087                           postdec1	equ	0xFE5
 39088                           plusw1	equ	0xFE3
 39089                           fsr1h	equ	0xFE2
 39090                           fsr1l	equ	0xFE1
 39091                           indf2	equ	0xFDF
 39092                           postinc2	equ	0xFDE
 39093                           postdec2	equ	0xFDD
 39094                           plusw2	equ	0xFDB
 39095                           fsr2h	equ	0xFDA
 39096                           fsr2l	equ	0xFD9
 39097                           status	equ	0xFD8
 39098                           
 39099 ;; *************** function i2_SYSTEM_Initialize *****************
 39100 ;; Defined at:
 39101 ;;		line 39 in file "system.c"
 39102 ;; Parameters:    Size  Location     Type
 39103 ;;  state           1    wreg     enum E6623
 39104 ;; Auto vars:     Size  Location     Type
 39105 ;;  state           1    4[COMRAM] enum E6623
 39106 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 39107 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 39108 ;; Return value:  Size  Location     Type
 39109 ;;                  1    wreg      void 
 39110 ;; Registers used:
 39111 ;;		wreg, status,2, status,0
 39112 ;; Tracked objects:
 39113 ;;		On entry : 0/0
 39114 ;;		On exit  : 0/0
 39115 ;;		Unchanged: 0/0
 39116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39118 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39120 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39121 ;;Total ram usage:        5 bytes
 39122 ;; Hardware stack levels used:    1
 39123 ;; This function calls:
 39124 ;;		Nothing
 39125 ;; This function is called by:
 39126 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 39127 ;; This function uses a non-reentrant model
 39128 ;;
 39129                           
 39130                           	psect	text145
 39131  01221C                     __ptext145:
 39132                           	opt stack 0
 39133  01221C                     i2_SYSTEM_Initialize:
 39134                           	opt stack 15
 39135                           
 39136                           ;incstack = 0
 39137                           ;i2SYSTEM_Initialize@state stored from wreg
 39138  01221C  6E32               	movwf	i2SYSTEM_Initialize@state,c
 39139                           
 39140                           ;system.c: 41: switch(state)
 39141  01221E  D01D               	goto	i2l892
 39142  012220                     
 39143                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 39144  012220  0E02               	movlw	2
 39145  012222  6E2F               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 39146  012224  0E58               	movlw	88
 39147  012226  6E2E               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 39148                           
 39149                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 39150  012228  8C9B               	bsf	3995,6,c	;volatile
 39151  01222A                     i2l11170:
 39152  01222A  062E               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 39153  01222C  A0D8               	btfss	status,0,c
 39154  01222E  062F               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 39155  012230  282E               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 39156  012232  E1FB               	bnz	i2l11170
 39157  012234  282F               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 39158  012236  B4D8               	btfsc	status,2,c
 39159  012238  0012               	return	
 39160  01223A  D7F7               	goto	i2l895
 39161  01223C                     
 39162                           ;system.c: 78: OSCCON = 0x70;
 39163  01223C  0E70               	movlw	112
 39164  01223E  6ED3               	movwf	4051,c	;volatile
 39165                           
 39166                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 39167  012240  0E03               	movlw	3
 39168  012242  6E31               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3117+1,c
 39169  012244  0E20               	movlw	32
 39170  012246  6E30               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3117,c
 39171  012248                     i2l11174:
 39172  012248  0630               	decf	i2SYSTEM_Initialize@pll_startup_counter_3117,f,c
 39173  01224A  A0D8               	btfss	status,0,c
 39174  01224C  0631               	decf	i2SYSTEM_Initialize@pll_startup_counter_3117+1,f,c
 39175  01224E  2830               	incf	i2SYSTEM_Initialize@pll_startup_counter_3117,w,c
 39176  012250  E1FB               	bnz	i2l11174
 39177  012252  2831               	incf	i2SYSTEM_Initialize@pll_startup_counter_3117+1,w,c
 39178  012254  B4D8               	btfsc	status,2,c
 39179  012256  0012               	return	
 39180  012258  D7F7               	goto	i2l901
 39181  01225A                     i2l892:
 39182  01225A  5032               	movf	i2SYSTEM_Initialize@state,w,c
 39183                           
 39184                           ; Switch size 1, requested type "space"
 39185                           ; Number of cases is 3, Range of values is 0 to 2
 39186                           ; switch strategies available:
 39187                           ; Name         Instructions Cycles
 39188                           ; simple_byte           10     6 (average)
 39189                           ;	Chosen strategy is simple_byte
 39190  01225C  0A00               	xorlw	0	; case 0
 39191  01225E  B4D8               	btfsc	status,2,c
 39192  012260  D7DF               	goto	i2l893
 39193  012262  0A01               	xorlw	1	; case 1
 39194  012264  B4D8               	btfsc	status,2,c
 39195  012266  0012               	return	
 39196  012268  0A03               	xorlw	3	; case 2
 39197  01226A  A4D8               	btfss	status,2,c
 39198  01226C  0012               	return	
 39199  01226E  D7E6               	goto	i2l899
 39200  012270                     __end_ofi2_SYSTEM_Initialize:
 39201                           	opt stack 0
 39202                           tosu	equ	0xFFF
 39203                           tosh	equ	0xFFE
 39204                           tosl	equ	0xFFD
 39205                           pclatu	equ	0xFFB
 39206                           pclath	equ	0xFFA
 39207                           tblptru	equ	0xFF8
 39208                           tblptrh	equ	0xFF7
 39209                           tblptrl	equ	0xFF6
 39210                           tablat	equ	0xFF5
 39211                           prodh	equ	0xFF4
 39212                           prodl	equ	0xFF3
 39213                           intcon	equ	0xFF2
 39214                           indf0	equ	0xFEF
 39215                           postinc0	equ	0xFEE
 39216                           fsr0h	equ	0xFEA
 39217                           fsr0l	equ	0xFE9
 39218                           wreg	equ	0xFE8
 39219                           indf1	equ	0xFE7
 39220                           postdec1	equ	0xFE5
 39221                           plusw1	equ	0xFE3
 39222                           fsr1h	equ	0xFE2
 39223                           fsr1l	equ	0xFE1
 39224                           indf2	equ	0xFDF
 39225                           postinc2	equ	0xFDE
 39226                           postdec2	equ	0xFDD
 39227                           plusw2	equ	0xFDB
 39228                           fsr2h	equ	0xFDA
 39229                           fsr2l	equ	0xFD9
 39230                           status	equ	0xFD8
 39231                           
 39232 ;; *************** function _USBCheckMSDRequest *****************
 39233 ;; Defined at:
 39234 ;;		line 218 in file "usb_device_msd.c"
 39235 ;; Parameters:    Size  Location     Type
 39236 ;;		None
 39237 ;; Auto vars:     Size  Location     Type
 39238 ;;		None
 39239 ;; Return value:  Size  Location     Type
 39240 ;;                  1    wreg      void 
 39241 ;; Registers used:
 39242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39243 ;; Tracked objects:
 39244 ;;		On entry : 0/0
 39245 ;;		On exit  : 0/0
 39246 ;;		Unchanged: 0/0
 39247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39249 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39251 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39252 ;;Total ram usage:        4 bytes
 39253 ;; Hardware stack levels used:    1
 39254 ;; Hardware stack levels required when called:    1
 39255 ;; This function calls:
 39256 ;;		i2_USBTransferOnePacket
 39257 ;; This function is called by:
 39258 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 39259 ;; This function uses a non-reentrant model
 39260 ;;
 39261                           
 39262                           	psect	text146
 39263  010D22                     __ptext146:
 39264                           	opt stack 0
 39265  010D22                     _USBCheckMSDRequest:
 39266                           	opt stack 14
 39267                           
 39268                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 39269                           
 39270                           ;incstack = 0
 39271  010D22  010D               	movlb	13	; () banked
 39272  010D24  5130               	movf	48,w,b	;volatile
 39273  010D26  0B1F               	andlw	31
 39274  010D28  06E8               	decf	wreg,f,c
 39275  010D2A  A4D8               	btfss	status,2,c
 39276  010D2C  0012               	return	
 39277                           
 39278                           ; BSR set to: 13
 39279                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 39280                           
 39281                           ; BSR set to: 13
 39282                           
 39283                           ; BSR set to: 13
 39284                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 39285  010D2E  5134               	movf	52,w,b	;volatile
 39286  010D30  A4D8               	btfss	status,2,c
 39287  010D32  0012               	return	
 39288  010D34  D04D               	goto	i2l545
 39289  010D36                     
 39290                           ; BSR set to: 13
 39291                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 39292                           
 39293                           ; BSR set to: 13
 39294  010D36  5132               	movf	50,w,b	;volatile
 39295  010D38  1133               	iorwf	51,w,b	;volatile
 39296  010D3A  A4D8               	btfss	status,2,c
 39297  010D3C  0012               	return	
 39298                           
 39299                           ; BSR set to: 13
 39300  010D3E  5136               	movf	54,w,b	;volatile
 39301  010D40  1137               	iorwf	55,w,b	;volatile
 39302  010D42  A4D8               	btfss	status,2,c
 39303  010D44  0012               	return	
 39304                           
 39305                           ; BSR set to: 13
 39306                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 39307                           
 39308                           ; BSR set to: 13
 39309                           
 39310                           ; BSR set to: 13
 39311                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 39312  010D46  0E00               	movlw	0
 39313  010D48  6E21               	movwf	_MSD_State,c
 39314                           
 39315                           ; BSR set to: 13
 39316                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 39317  010D4A  0100               	movlb	0	; () banked
 39318  010D4C  69CF               	setf	_MSDCommandState& (0+255),b
 39319                           
 39320                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 39321  010D4E  0E00               	movlw	0
 39322  010D50  0101               	movlb	1	; () banked
 39323  010D52  6F7E               	movwf	_MSDReadState& (0+255),b
 39324                           
 39325                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 39326  010D54  0E00               	movlw	0
 39327  010D56  6E20               	movwf	_MSDWriteState,c
 39328                           
 39329                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 39330  010D58  0E01               	movlw	1
 39331  010D5A  6F7A               	movwf	_MSDCBWValid& (0+255),b
 39332                           
 39333                           ; BSR set to: 1
 39334                           
 39335                           ; BSR set to: 1
 39336                           
 39337                           ; BSR set to: 1
 39338                           
 39339                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 39340  010D5C  C145  F039         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 39341  010D60  C146  F03A         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 39342                           
 39343                           ; BSR set to: 1
 39344  010D64  5039               	movf	_USBCheckMSDRequest$2534,w,c
 39345  010D66  103A               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 39346  010D68  B4D8               	btfsc	status,2,c
 39347  010D6A  D00A               	goto	i2u895_40
 39348                           
 39349                           ; BSR set to: 1
 39350                           
 39351                           ; BSR set to: 1
 39352                           
 39353                           ; BSR set to: 1
 39354                           
 39355                           ; BSR set to: 1
 39356  010D6C  C145  F03B         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 39357  010D70  C146  F03C         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 39358                           
 39359                           ; BSR set to: 1
 39360                           
 39361                           ; BSR set to: 1
 39362  010D74  C03B  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 39363  010D78  C03C  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 39364  010D7C  BEDF               	btfsc	indf2,7,c
 39365  010D7E  D00F               	goto	i2l550
 39366  010D80                     i2u895_40:
 39367                           
 39368                           ; BSR set to: 1
 39369                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 39370                           
 39371                           ; BSR set to: 1
 39372  010D80  0E00               	movlw	0
 39373  010D82  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 39374  010D84  0E40               	movlw	64
 39375  010D86  6E2F               	movwf	i2USBTransferOnePacket@data,c
 39376  010D88  0E0D               	movlw	13
 39377  010D8A  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 39378  010D8C  0E40               	movlw	64
 39379  010D8E  6E31               	movwf	i2USBTransferOnePacket@len,c
 39380  010D90  0E02               	movlw	2
 39381  010D92  ECC6  F07E         	call	i2_USBTransferOnePacket
 39382  010D96  C02E  F0CC         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 39383  010D9A  C02F  F0CD         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 39384  010D9E                     i2l550:
 39385                           
 39386                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 39387  010D9E  0E80               	movlw	128
 39388  010DA0  6E04               	movwf	_inPipes+3,c	;volatile
 39389                           
 39390                           ;usb_device_msd.c: 263: break;
 39391  010DA2  0012               	return	
 39392  010DA4                     
 39393                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 39394  010DA4  010D               	movlb	13	; () banked
 39395  010DA6  5132               	movf	50,w,b	;volatile
 39396  010DA8  1133               	iorwf	51,w,b	;volatile
 39397  010DAA  A4D8               	btfss	status,2,c
 39398  010DAC  0012               	return	
 39399                           
 39400                           ; BSR set to: 13
 39401  010DAE  0536               	decf	54,w,b	;volatile
 39402  010DB0  1137               	iorwf	55,w,b	;volatile
 39403  010DB2  A4D8               	btfss	status,2,c
 39404  010DB4  0012               	return	
 39405                           
 39406                           ; BSR set to: 13
 39407                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 39408                           
 39409                           ; BSR set to: 13
 39410                           
 39411                           ; BSR set to: 13
 39412                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 39413  010DB6  0E00               	movlw	0
 39414  010DB8  6F38               	movwf	56,b	;volatile
 39415                           
 39416                           ; BSR set to: 13
 39417                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 39418  010DBA  0E38               	movlw	56
 39419  010DBC  6E01               	movwf	_inPipes,c	;volatile
 39420  010DBE  0E0D               	movlw	13
 39421  010DC0  6E02               	movwf	_inPipes+1,c	;volatile
 39422                           
 39423                           ; BSR set to: 13
 39424  010DC2  0E00               	movlw	0
 39425  010DC4  6E06               	movwf	_inPipes+5,c	;volatile
 39426  010DC6  0E01               	movlw	1
 39427  010DC8  6E05               	movwf	_inPipes+4,c	;volatile
 39428                           
 39429                           ; BSR set to: 13
 39430  010DCA  0EC1               	movlw	193
 39431  010DCC  6E04               	movwf	_inPipes+3,c	;volatile
 39432                           
 39433                           ; BSR set to: 13
 39434                           ;usb_device_msd.c: 278: }
 39435                           
 39436                           ;usb_device_msd.c: 277: break;
 39437  010DCE  0012               	return	
 39438  010DD0                     i2l545:
 39439                           
 39440                           ; BSR set to: 13
 39441                           
 39442                           ; BSR set to: 13
 39443  010DD0  5131               	movf	49,w,b	;volatile
 39444                           
 39445                           ; Switch size 1, requested type "space"
 39446                           ; Number of cases is 2, Range of values is 254 to 255
 39447                           ; switch strategies available:
 39448                           ; Name         Instructions Cycles
 39449                           ; simple_byte            7     4 (average)
 39450                           ;	Chosen strategy is simple_byte
 39451  010DD2  0AFE               	xorlw	254	; case 254
 39452  010DD4  B4D8               	btfsc	status,2,c
 39453  010DD6  D7E6               	goto	i2l562
 39454  010DD8  0A01               	xorlw	1	; case 255
 39455  010DDA  A4D8               	btfss	status,2,c
 39456  010DDC  0012               	return	
 39457  010DDE  D7AB               	goto	i2l546
 39458  010DE0                     __end_of_USBCheckMSDRequest:
 39459                           	opt stack 0
 39460                           tosu	equ	0xFFF
 39461                           tosh	equ	0xFFE
 39462                           tosl	equ	0xFFD
 39463                           pclatu	equ	0xFFB
 39464                           pclath	equ	0xFFA
 39465                           tblptru	equ	0xFF8
 39466                           tblptrh	equ	0xFF7
 39467                           tblptrl	equ	0xFF6
 39468                           tablat	equ	0xFF5
 39469                           prodh	equ	0xFF4
 39470                           prodl	equ	0xFF3
 39471                           intcon	equ	0xFF2
 39472                           indf0	equ	0xFEF
 39473                           postinc0	equ	0xFEE
 39474                           fsr0h	equ	0xFEA
 39475                           fsr0l	equ	0xFE9
 39476                           wreg	equ	0xFE8
 39477                           indf1	equ	0xFE7
 39478                           postdec1	equ	0xFE5
 39479                           plusw1	equ	0xFE3
 39480                           fsr1h	equ	0xFE2
 39481                           fsr1l	equ	0xFE1
 39482                           indf2	equ	0xFDF
 39483                           postinc2	equ	0xFDE
 39484                           postdec2	equ	0xFDD
 39485                           plusw2	equ	0xFDB
 39486                           fsr2h	equ	0xFDA
 39487                           fsr2l	equ	0xFD9
 39488                           status	equ	0xFD8
 39489                           
 39490 ;; *************** function _USBCheckHIDRequest *****************
 39491 ;; Defined at:
 39492 ;;		line 153 in file "usb_device_hid.c"
 39493 ;; Parameters:    Size  Location     Type
 39494 ;;		None
 39495 ;; Auto vars:     Size  Location     Type
 39496 ;;		None
 39497 ;; Return value:  Size  Location     Type
 39498 ;;                  1    wreg      void 
 39499 ;; Registers used:
 39500 ;;		wreg, status,2, status,0
 39501 ;; Tracked objects:
 39502 ;;		On entry : 0/0
 39503 ;;		On exit  : 0/0
 39504 ;;		Unchanged: 0/0
 39505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39510 ;;Total ram usage:        0 bytes
 39511 ;; Hardware stack levels used:    1
 39512 ;; This function calls:
 39513 ;;		Nothing
 39514 ;; This function is called by:
 39515 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 39516 ;; This function uses a non-reentrant model
 39517 ;;
 39518                           
 39519                           	psect	text147
 39520  010866                     __ptext147:
 39521                           	opt stack 0
 39522  010866                     _USBCheckHIDRequest:
 39523                           	opt stack 15
 39524                           
 39525                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 39526                           
 39527                           ;incstack = 0
 39528  010866  010D               	movlb	13	; () banked
 39529  010868  5130               	movf	48,w,b	;volatile
 39530  01086A  0B1F               	andlw	31
 39531  01086C  06E8               	decf	wreg,f,c
 39532  01086E  A4D8               	btfss	status,2,c
 39533  010870  0012               	return	
 39534                           
 39535                           ; BSR set to: 13
 39536                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 39537                           
 39538                           ; BSR set to: 13
 39539                           
 39540                           ; BSR set to: 13
 39541  010872  5134               	movf	52,w,b	;volatile
 39542  010874  A4D8               	btfss	status,2,c
 39543  010876  0012               	return	
 39544                           
 39545                           ; BSR set to: 13
 39546                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 39547                           
 39548                           ; BSR set to: 13
 39549                           
 39550                           ; BSR set to: 13
 39551  010878  0E06               	movlw	6
 39552  01087A  1931               	xorwf	49,w,b	;volatile
 39553  01087C  B4D8               	btfsc	status,2,c
 39554  01087E  D018               	goto	i2l425
 39555  010880  D01F               	goto	i2l428
 39556  010882                     
 39557                           ; BSR set to: 13
 39558                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 39559                           
 39560                           ; BSR set to: 13
 39561  010882  042D               	decf	_USBActiveConfiguration,w,c	;volatile
 39562  010884  A4D8               	btfss	status,2,c
 39563  010886  D01C               	goto	i2l428
 39564                           
 39565                           ; BSR set to: 13
 39566                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 39567  010888  0ED0               	movlw	low (_configDescriptor1+18)
 39568  01088A  6E01               	movwf	_inPipes,c	;volatile
 39569  01088C  0EA0               	movlw	high (_configDescriptor1+18)
 39570  01088E  6E02               	movwf	_inPipes+1,c	;volatile
 39571                           
 39572                           ; BSR set to: 13
 39573  010890  0E00               	movlw	0
 39574  010892  6E06               	movwf	_inPipes+5,c	;volatile
 39575  010894  0E09               	movlw	9
 39576  010896  D00A               	goto	L74
 39577  010898                     i2l10952:
 39578                           
 39579                           ; BSR set to: 13
 39580  010898  0EC0               	movlw	192
 39581  01089A  6E04               	movwf	_inPipes+3,c	;volatile
 39582                           
 39583                           ; BSR set to: 13
 39584                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 39585  01089C  D011               	goto	i2l428
 39586  01089E                     
 39587                           ; BSR set to: 13
 39588                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 39589                           
 39590                           ; BSR set to: 13
 39591  01089E  0E84               	movlw	low _hid_rpt01
 39592  0108A0  6E01               	movwf	_inPipes,c	;volatile
 39593  0108A2  0EA1               	movlw	high _hid_rpt01
 39594  0108A4  6E02               	movwf	_inPipes+1,c	;volatile
 39595                           
 39596                           ; BSR set to: 13
 39597  0108A6  0E00               	movlw	0
 39598  0108A8  6E06               	movwf	_inPipes+5,c	;volatile
 39599  0108AA  0E1D               	movlw	29
 39600  0108AC                     L74:
 39601  0108AC  6E05               	movwf	_inPipes+4,c	;volatile
 39602  0108AE  D7F4               	goto	i2l10952
 39603  0108B0                     i2l425:
 39604                           
 39605                           ; BSR set to: 13
 39606                           
 39607                           ; BSR set to: 13
 39608  0108B0  5133               	movf	51,w,b	;volatile
 39609                           
 39610                           ; Switch size 1, requested type "space"
 39611                           ; Number of cases is 3, Range of values is 33 to 35
 39612                           ; switch strategies available:
 39613                           ; Name         Instructions Cycles
 39614                           ; simple_byte           10     6 (average)
 39615                           ;	Chosen strategy is simple_byte
 39616  0108B2  0A21               	xorlw	33	; case 33
 39617  0108B4  B4D8               	btfsc	status,2,c
 39618  0108B6  D7E5               	goto	i2l426
 39619  0108B8  0A03               	xorlw	3	; case 34
 39620  0108BA  B4D8               	btfsc	status,2,c
 39621  0108BC  D7F0               	goto	i2l429
 39622  0108BE  0A01               	xorlw	1	; case 35
 39623  0108C0                     i2l428:
 39624                           
 39625                           ; BSR set to: 13
 39626                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 39627                           
 39628                           ; BSR set to: 13
 39629                           
 39630                           ; BSR set to: 13
 39631  0108C0  3930               	swapf	48,w,b	;volatile
 39632  0108C2  32E8               	rrcf	wreg,f,c
 39633  0108C4  0B03               	andlw	3
 39634  0108C6  06E8               	decf	wreg,f,c
 39635  0108C8  A4D8               	btfss	status,2,c
 39636  0108CA  0012               	return	
 39637  0108CC  D020               	goto	i2l432
 39638  0108CE                     
 39639                           ; BSR set to: 13
 39640                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 39641                           
 39642                           ; BSR set to: 13
 39643  0108CE  0EA1               	movlw	low _idle_rate
 39644  0108D0  6E01               	movwf	_inPipes,c	;volatile
 39645  0108D2  0E01               	movlw	high _idle_rate
 39646  0108D4  6E02               	movwf	_inPipes+1,c	;volatile
 39647                           
 39648                           ; BSR set to: 13
 39649  0108D6  0E00               	movlw	0
 39650  0108D8  6E06               	movwf	_inPipes+5,c	;volatile
 39651  0108DA  0E01               	movlw	1
 39652  0108DC  6E05               	movwf	_inPipes+4,c	;volatile
 39653                           
 39654                           ; BSR set to: 13
 39655  0108DE  0EC1               	movlw	193
 39656  0108E0  6E04               	movwf	_inPipes+3,c	;volatile
 39657                           
 39658                           ;usb_device_hid.c: 223: break;
 39659  0108E2  0012               	return	
 39660  0108E4                     
 39661                           ; BSR set to: 13
 39662                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 39663                           
 39664                           ; BSR set to: 13
 39665  0108E4  0E80               	movlw	128
 39666  0108E6  6E04               	movwf	_inPipes+3,c	;volatile
 39667                           
 39668                           ; BSR set to: 13
 39669                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 39670  0108E8  CD33 F1A1          	movff	3379,_idle_rate	;volatile
 39671                           
 39672                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 39673  0108EC  0012               	return	
 39674  0108EE                     
 39675                           ; BSR set to: 13
 39676                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 39677                           
 39678                           ; BSR set to: 13
 39679  0108EE  0EA0               	movlw	low _active_protocol
 39680  0108F0  6E01               	movwf	_inPipes,c	;volatile
 39681  0108F2  0E01               	movlw	high _active_protocol
 39682  0108F4  6E02               	movwf	_inPipes+1,c	;volatile
 39683                           
 39684                           ; BSR set to: 13
 39685  0108F6  0E00               	movlw	0
 39686  0108F8  6E06               	movwf	_inPipes+5,c	;volatile
 39687  0108FA  0E01               	movlw	1
 39688  0108FC  6E05               	movwf	_inPipes+4,c	;volatile
 39689                           
 39690                           ; BSR set to: 13
 39691  0108FE  0E81               	movlw	129
 39692  010900  6E04               	movwf	_inPipes+3,c	;volatile
 39693                           
 39694                           ;usb_device_hid.c: 234: break;
 39695  010902  0012               	return	
 39696  010904                     
 39697                           ; BSR set to: 13
 39698                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 39699                           
 39700                           ; BSR set to: 13
 39701  010904  0E80               	movlw	128
 39702  010906  6E04               	movwf	_inPipes+3,c	;volatile
 39703                           
 39704                           ; BSR set to: 13
 39705                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 39706  010908  CD32 F1A0          	movff	3378,_active_protocol	;volatile
 39707                           
 39708                           ; BSR set to: 13
 39709                           ;usb_device_hid.c: 239: }
 39710                           
 39711                           ;usb_device_hid.c: 238: break;
 39712  01090C  0012               	return	
 39713  01090E                     i2l432:
 39714                           
 39715                           ; BSR set to: 13
 39716                           
 39717                           ; BSR set to: 13
 39718  01090E  5131               	movf	49,w,b	;volatile
 39719                           
 39720                           ; Switch size 1, requested type "space"
 39721                           ; Number of cases is 6, Range of values is 1 to 11
 39722                           ; switch strategies available:
 39723                           ; Name         Instructions Cycles
 39724                           ; simple_byte           19    10 (average)
 39725                           ;	Chosen strategy is simple_byte
 39726  010910  0A01               	xorlw	1	; case 1
 39727  010912  B4D8               	btfsc	status,2,c
 39728  010914  0012               	return	
 39729  010916  0A03               	xorlw	3	; case 2
 39730  010918  B4D8               	btfsc	status,2,c
 39731  01091A  D7D9               	goto	i2l436
 39732  01091C  0A01               	xorlw	1	; case 3
 39733  01091E  B4D8               	btfsc	status,2,c
 39734  010920  D7E6               	goto	i2l438
 39735  010922  0A0A               	xorlw	10	; case 9
 39736  010924  B4D8               	btfsc	status,2,c
 39737  010926  0012               	return	
 39738  010928  0A03               	xorlw	3	; case 10
 39739  01092A  B4D8               	btfsc	status,2,c
 39740  01092C  D7DB               	goto	i2l437
 39741  01092E  0A01               	xorlw	1	; case 11
 39742  010930  A4D8               	btfss	status,2,c
 39743  010932  0012               	return	
 39744  010934  D7E7               	goto	i2l439
 39745  010936                     __end_of_USBCheckHIDRequest:
 39746                           	opt stack 0
 39747                           tosu	equ	0xFFF
 39748                           tosh	equ	0xFFE
 39749                           tosl	equ	0xFFD
 39750                           pclatu	equ	0xFFB
 39751                           pclath	equ	0xFFA
 39752                           tblptru	equ	0xFF8
 39753                           tblptrh	equ	0xFF7
 39754                           tblptrl	equ	0xFF6
 39755                           tablat	equ	0xFF5
 39756                           prodh	equ	0xFF4
 39757                           prodl	equ	0xFF3
 39758                           intcon	equ	0xFF2
 39759                           indf0	equ	0xFEF
 39760                           postinc0	equ	0xFEE
 39761                           fsr0h	equ	0xFEA
 39762                           fsr0l	equ	0xFE9
 39763                           wreg	equ	0xFE8
 39764                           indf1	equ	0xFE7
 39765                           postdec1	equ	0xFE5
 39766                           plusw1	equ	0xFE3
 39767                           fsr1h	equ	0xFE2
 39768                           fsr1l	equ	0xFE1
 39769                           indf2	equ	0xFDF
 39770                           postinc2	equ	0xFDE
 39771                           postdec2	equ	0xFDD
 39772                           plusw2	equ	0xFDB
 39773                           fsr2h	equ	0xFDA
 39774                           fsr2l	equ	0xFD9
 39775                           status	equ	0xFD8
 39776                           
 39777 ;; *************** function _MSDTransferTerminated *****************
 39778 ;; Defined at:
 39779 ;;		line 1674 in file "usb_device_msd.c"
 39780 ;; Parameters:    Size  Location     Type
 39781 ;;  handle          2   11[COMRAM] PTR void 
 39782 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 39783 ;;		 -> BDT(48), 
 39784 ;; Auto vars:     Size  Location     Type
 39785 ;;		None
 39786 ;; Return value:  Size  Location     Type
 39787 ;;                  1    wreg      void 
 39788 ;; Registers used:
 39789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39790 ;; Tracked objects:
 39791 ;;		On entry : 0/0
 39792 ;;		On exit  : 0/0
 39793 ;;		Unchanged: 0/0
 39794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39798 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39799 ;;Total ram usage:        4 bytes
 39800 ;; Hardware stack levels used:    1
 39801 ;; Hardware stack levels required when called:    1
 39802 ;; This function calls:
 39803 ;;		i2_USBStallEndpoint
 39804 ;;		i2_USBTransferOnePacket
 39805 ;; This function is called by:
 39806 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 39807 ;; This function uses a non-reentrant model
 39808 ;;
 39809                           
 39810                           	psect	text148
 39811  01211E                     __ptext148:
 39812                           	opt stack 0
 39813  01211E                     _MSDTransferTerminated:
 39814                           	opt stack 14
 39815                           
 39816                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 39817                           
 39818                           ; BSR set to: 13
 39819                           ;incstack = 0
 39820  01211E  0101               	movlb	1	; () banked
 39821  012120  517A               	movf	_MSDCBWValid& (0+255),w,b
 39822  012122  A4D8               	btfss	status,2,c
 39823  012124  D00B               	goto	i2l780
 39824                           
 39825                           ; BSR set to: 1
 39826                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 39827  012126  0E01               	movlw	1
 39828  012128  6E2E               	movwf	i2USBStallEndpoint@dir,c
 39829  01212A  0E02               	movlw	2
 39830  01212C  EC43  F07E         	call	i2_USBStallEndpoint
 39831                           
 39832                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 39833  012130  0E00               	movlw	0
 39834  012132  6E2E               	movwf	i2USBStallEndpoint@dir,c
 39835  012134  0E02               	movlw	2
 39836  012136  EC43  F07E         	call	i2_USBStallEndpoint
 39837                           
 39838                           ;usb_device_msd.c: 1681: }
 39839  01213A  0012               	return	
 39840  01213C                     i2l780:
 39841  01213C  C145  F03B         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 39842  012140  C146  F03C         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 39843  012144  503B               	movf	_MSDTransferTerminated$2623,w,c
 39844  012146  1839               	xorwf	MSDTransferTerminated@handle,w,c
 39845  012148  E114               	bnz	i2l783
 39846  01214A  503C               	movf	_MSDTransferTerminated$2623+1,w,c
 39847  01214C  183A               	xorwf	MSDTransferTerminated@handle+1,w,c
 39848  01214E  A4D8               	btfss	status,2,c
 39849  012150  0012               	return	
 39850                           
 39851                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 39852  012152  0E00               	movlw	0
 39853  012154  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 39854  012156  0E40               	movlw	64
 39855  012158  6E2F               	movwf	i2USBTransferOnePacket@data,c
 39856  01215A  0E0D               	movlw	13
 39857  01215C  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 39858  01215E  0E40               	movlw	64
 39859  012160  6E31               	movwf	i2USBTransferOnePacket@len,c
 39860  012162  0E02               	movlw	2
 39861  012164  ECC6  F07E         	call	i2_USBTransferOnePacket
 39862  012168  C02E  F0CC         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 39863  01216C  C02F  F0CD         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 39864  012170  0012               	return	
 39865  012172                     i2l783:
 39866  012172  0012               	return		;funcret
 39867  012174                     __end_of_MSDTransferTerminated:
 39868                           	opt stack 0
 39869                           tosu	equ	0xFFF
 39870                           tosh	equ	0xFFE
 39871                           tosl	equ	0xFFD
 39872                           pclatu	equ	0xFFB
 39873                           pclath	equ	0xFFA
 39874                           tblptru	equ	0xFF8
 39875                           tblptrh	equ	0xFF7
 39876                           tblptrl	equ	0xFF6
 39877                           tablat	equ	0xFF5
 39878                           prodh	equ	0xFF4
 39879                           prodl	equ	0xFF3
 39880                           intcon	equ	0xFF2
 39881                           indf0	equ	0xFEF
 39882                           postinc0	equ	0xFEE
 39883                           fsr0h	equ	0xFEA
 39884                           fsr0l	equ	0xFE9
 39885                           wreg	equ	0xFE8
 39886                           indf1	equ	0xFE7
 39887                           postdec1	equ	0xFE5
 39888                           plusw1	equ	0xFE3
 39889                           fsr1h	equ	0xFE2
 39890                           fsr1l	equ	0xFE1
 39891                           indf2	equ	0xFDF
 39892                           postinc2	equ	0xFDE
 39893                           postdec2	equ	0xFDD
 39894                           plusw2	equ	0xFDB
 39895                           fsr2h	equ	0xFDA
 39896                           fsr2l	equ	0xFD9
 39897                           status	equ	0xFD8
 39898                           
 39899 ;; *************** function i2_USBStallEndpoint *****************
 39900 ;; Defined at:
 39901 ;;		line 1073 in file "usb_device.c"
 39902 ;; Parameters:    Size  Location     Type
 39903 ;;  ep              1    wreg     unsigned char 
 39904 ;;  dir             1    0[COMRAM] unsigned char 
 39905 ;; Auto vars:     Size  Location     Type
 39906 ;;  ep              1    5[COMRAM] unsigned char 
 39907 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 39908 ;;		 -> BDT(48), 
 39909 ;; Return value:  Size  Location     Type
 39910 ;;                  1    wreg      void 
 39911 ;; Registers used:
 39912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39913 ;; Tracked objects:
 39914 ;;		On entry : 0/0
 39915 ;;		On exit  : 0/0
 39916 ;;		Unchanged: 0/0
 39917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39918 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39919 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39920 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39921 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39922 ;;Total ram usage:        8 bytes
 39923 ;; Hardware stack levels used:    1
 39924 ;; This function calls:
 39925 ;;		Nothing
 39926 ;; This function is called by:
 39927 ;;		_MSDTransferTerminated
 39928 ;; This function uses a non-reentrant model
 39929 ;;
 39930                           
 39931                           	psect	text149
 39932  00FC86                     __ptext149:
 39933                           	opt stack 0
 39934  00FC86                     i2_USBStallEndpoint:
 39935                           	opt stack 14
 39936                           
 39937                           ;incstack = 0
 39938                           ;i2USBStallEndpoint@ep stored from wreg
 39939  00FC86  6E33               	movwf	i2USBStallEndpoint@ep,c
 39940                           
 39941                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 39942  00FC88  5033               	movf	i2USBStallEndpoint@ep,w,c
 39943  00FC8A  A4D8               	btfss	status,2,c
 39944  00FC8C  D02B               	goto	i2l192
 39945                           
 39946                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 39947  00FC8E  EE20 F001          	lfsr	2,1
 39948  00FC92  5015               	movf	_pBDTEntryEP0OutNext,w,c
 39949  00FC94  26D9               	addwf	fsr2l,f,c
 39950  00FC96  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 39951  00FC98  22DA               	addwfc	fsr2h,f,c
 39952  00FC9A  0E08               	movlw	8
 39953  00FC9C  6EDF               	movwf	indf2,c
 39954                           
 39955                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 39956  00FC9E  EE20 F002          	lfsr	2,2
 39957  00FCA2  5015               	movf	_pBDTEntryEP0OutNext,w,c
 39958  00FCA4  26D9               	addwf	fsr2l,f,c
 39959  00FCA6  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 39960  00FCA8  22DA               	addwfc	fsr2h,f,c
 39961  00FCAA  0E30               	movlw	48
 39962  00FCAC  6EDE               	movwf	postinc2,c
 39963  00FCAE  0E0D               	movlw	13
 39964  00FCB0  6EDD               	movwf	postdec2,c
 39965                           
 39966                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 39967  00FCB2  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39968  00FCB6  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39969  00FCBA  0E0C               	movlw	12
 39970  00FCBC  6EDF               	movwf	indf2,c
 39971                           
 39972                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 39973  00FCBE  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39974  00FCC2  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39975  00FCC6  0E00               	movlw	0
 39976  00FCC8  8EDB               	bsf	plusw2,7,c
 39977                           
 39978                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 39979  00FCCA  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 39980  00FCCE  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39981  00FCD2  0E04               	movlw	4
 39982  00FCD4  6EDF               	movwf	indf2,c
 39983                           
 39984                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 39985  00FCD6  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 39986  00FCDA  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39987  00FCDE  0E00               	movlw	0
 39988  00FCE0  8EDB               	bsf	plusw2,7,c
 39989                           
 39990                           ;usb_device.c: 1089: }
 39991  00FCE2  0012               	return	
 39992  00FCE4                     i2l192:
 39993                           
 39994                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 39995  00FCE4  502E               	movf	i2USBStallEndpoint@dir,w,c
 39996  00FCE6  6E2F               	movwf	??i2_USBStallEndpoint& (0+255),c
 39997  00FCE8  6A30               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 39998  00FCEA  90D8               	bcf	status,0,c
 39999  00FCEC  362F               	rlcf	??i2_USBStallEndpoint,f,c
 40000  00FCEE  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 40001  00FCF0  5033               	movf	i2USBStallEndpoint@ep,w,c
 40002  00FCF2  6E31               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 40003  00FCF4  6A32               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 40004  00FCF6  90D8               	bcf	status,0,c
 40005  00FCF8  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 40006  00FCFA  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 40007  00FCFC  90D8               	bcf	status,0,c
 40008  00FCFE  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 40009  00FD00  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 40010  00FD02  502F               	movf	??i2_USBStallEndpoint,w,c
 40011  00FD04  2631               	addwf	??i2_USBStallEndpoint+2,f,c
 40012  00FD06  5030               	movf	??i2_USBStallEndpoint+1,w,c
 40013  00FD08  2232               	addwfc	??i2_USBStallEndpoint+3,f,c
 40014  00FD0A  90D8               	bcf	status,0,c
 40015  00FD0C  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 40016  00FD0E  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 40017  00FD10  90D8               	bcf	status,0,c
 40018  00FD12  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 40019  00FD14  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 40020  00FD16  0E00               	movlw	0
 40021  00FD18  2431               	addwf	??i2_USBStallEndpoint+2,w,c
 40022  00FD1A  6E34               	movwf	i2USBStallEndpoint@p,c
 40023  00FD1C  0E0D               	movlw	13
 40024  00FD1E  2032               	addwfc	??i2_USBStallEndpoint+3,w,c
 40025  00FD20  6E35               	movwf	i2USBStallEndpoint@p+1,c
 40026                           
 40027                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 40028  00FD22  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 40029  00FD26  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 40030  00FD2A  0E00               	movlw	0
 40031  00FD2C  84DB               	bsf	plusw2,2,c
 40032                           
 40033                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 40034  00FD2E  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 40035  00FD32  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 40036  00FD36  0E00               	movlw	0
 40037  00FD38  8EDB               	bsf	plusw2,7,c
 40038                           
 40039                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 40040  00FD3A  5033               	movf	i2USBStallEndpoint@ep,w,c
 40041  00FD3C  0D04               	mullw	4
 40042  00FD3E  CFF3 F02F          	movff	prodl,??i2_USBStallEndpoint
 40043  00FD42  CFF4 F030          	movff	prodh,??i2_USBStallEndpoint+1
 40044  00FD46  502E               	movf	i2USBStallEndpoint@dir,w,c
 40045  00FD48  0D02               	mullw	2
 40046  00FD4A  50F3               	movf	prodl,w,c
 40047  00FD4C  262F               	addwf	??i2_USBStallEndpoint,f,c
 40048  00FD4E  50F4               	movf	prodh,w,c
 40049  00FD50  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 40050  00FD52  90D8               	bcf	status,0,c
 40051  00FD54  362F               	rlcf	??i2_USBStallEndpoint,f,c
 40052  00FD56  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 40053  00FD58  90D8               	bcf	status,0,c
 40054  00FD5A  362F               	rlcf	??i2_USBStallEndpoint,f,c
 40055  00FD5C  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 40056  00FD5E  0E04               	movlw	4
 40057  00FD60  262F               	addwf	??i2_USBStallEndpoint,f,c
 40058  00FD62  0E00               	movlw	0
 40059  00FD64  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 40060  00FD66  0E00               	movlw	0
 40061  00FD68  242F               	addwf	??i2_USBStallEndpoint,w,c
 40062  00FD6A  6E34               	movwf	i2USBStallEndpoint@p,c
 40063  00FD6C  0E0D               	movlw	13
 40064  00FD6E  2030               	addwfc	??i2_USBStallEndpoint+1,w,c
 40065  00FD70  6E35               	movwf	i2USBStallEndpoint@p+1,c
 40066                           
 40067                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 40068  00FD72  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 40069  00FD76  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 40070  00FD7A  0E00               	movlw	0
 40071  00FD7C  84DB               	bsf	plusw2,2,c
 40072                           
 40073                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 40074  00FD7E  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 40075  00FD82  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 40076  00FD86  0E00               	movlw	0
 40077  00FD88  8EDB               	bsf	plusw2,7,c
 40078  00FD8A  0012               	return	
 40079  00FD8C                     __end_ofi2_USBStallEndpoint:
 40080                           	opt stack 0
 40081                           tosu	equ	0xFFF
 40082                           tosh	equ	0xFFE
 40083                           tosl	equ	0xFFD
 40084                           pclatu	equ	0xFFB
 40085                           pclath	equ	0xFFA
 40086                           tblptru	equ	0xFF8
 40087                           tblptrh	equ	0xFF7
 40088                           tblptrl	equ	0xFF6
 40089                           tablat	equ	0xFF5
 40090                           prodh	equ	0xFF4
 40091                           prodl	equ	0xFF3
 40092                           intcon	equ	0xFF2
 40093                           indf0	equ	0xFEF
 40094                           postinc0	equ	0xFEE
 40095                           fsr0h	equ	0xFEA
 40096                           fsr0l	equ	0xFE9
 40097                           wreg	equ	0xFE8
 40098                           indf1	equ	0xFE7
 40099                           postdec1	equ	0xFE5
 40100                           plusw1	equ	0xFE3
 40101                           fsr1h	equ	0xFE2
 40102                           fsr1l	equ	0xFE1
 40103                           indf2	equ	0xFDF
 40104                           postinc2	equ	0xFDE
 40105                           postdec2	equ	0xFDD
 40106                           plusw2	equ	0xFDB
 40107                           fsr2h	equ	0xFDA
 40108                           fsr2l	equ	0xFD9
 40109                           status	equ	0xFD8
 40110                           
 40111 ;; *************** function _APP_DeviceMSDInitialize *****************
 40112 ;; Defined at:
 40113 ;;		line 84 in file "app_device_msd.c"
 40114 ;; Parameters:    Size  Location     Type
 40115 ;;		None
 40116 ;; Auto vars:     Size  Location     Type
 40117 ;;		None
 40118 ;; Return value:  Size  Location     Type
 40119 ;;                  1    wreg      void 
 40120 ;; Registers used:
 40121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 40122 ;; Tracked objects:
 40123 ;;		On entry : 0/0
 40124 ;;		On exit  : 0/0
 40125 ;;		Unchanged: 0/0
 40126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40131 ;;Total ram usage:        0 bytes
 40132 ;; Hardware stack levels used:    1
 40133 ;; Hardware stack levels required when called:    2
 40134 ;; This function calls:
 40135 ;;		_USBEnableEndpoint
 40136 ;;		_USBMSDInit
 40137 ;; This function is called by:
 40138 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 40139 ;; This function uses a non-reentrant model
 40140 ;;
 40141                           
 40142                           	psect	text150
 40143  012CB8                     __ptext150:
 40144                           	opt stack 0
 40145  012CB8                     _APP_DeviceMSDInitialize:
 40146                           	opt stack 13
 40147                           
 40148                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 40149                           
 40150                           ;incstack = 0
 40151  012CB8  0E1E               	movlw	30
 40152  012CBA  6E36               	movwf	USBEnableEndpoint@options,c
 40153  012CBC  0E02               	movlw	2
 40154  012CBE  EC7E  F093         	call	_USBEnableEndpoint
 40155                           
 40156                           ;app_device_msd.c: 93: USBMSDInit();
 40157  012CC2  EC2D  F07C         	call	_USBMSDInit	;wreg free
 40158  012CC6  0012               	return		;funcret
 40159  012CC8                     __end_of_APP_DeviceMSDInitialize:
 40160                           	opt stack 0
 40161                           tosu	equ	0xFFF
 40162                           tosh	equ	0xFFE
 40163                           tosl	equ	0xFFD
 40164                           pclatu	equ	0xFFB
 40165                           pclath	equ	0xFFA
 40166                           tblptru	equ	0xFF8
 40167                           tblptrh	equ	0xFF7
 40168                           tblptrl	equ	0xFF6
 40169                           tablat	equ	0xFF5
 40170                           prodh	equ	0xFF4
 40171                           prodl	equ	0xFF3
 40172                           intcon	equ	0xFF2
 40173                           indf0	equ	0xFEF
 40174                           postinc0	equ	0xFEE
 40175                           fsr0h	equ	0xFEA
 40176                           fsr0l	equ	0xFE9
 40177                           wreg	equ	0xFE8
 40178                           indf1	equ	0xFE7
 40179                           postdec1	equ	0xFE5
 40180                           plusw1	equ	0xFE3
 40181                           fsr1h	equ	0xFE2
 40182                           fsr1l	equ	0xFE1
 40183                           indf2	equ	0xFDF
 40184                           postinc2	equ	0xFDE
 40185                           postdec2	equ	0xFDD
 40186                           plusw2	equ	0xFDB
 40187                           fsr2h	equ	0xFDA
 40188                           fsr2l	equ	0xFD9
 40189                           status	equ	0xFD8
 40190                           
 40191 ;; *************** function _USBMSDInit *****************
 40192 ;; Defined at:
 40193 ;;		line 142 in file "usb_device_msd.c"
 40194 ;; Parameters:    Size  Location     Type
 40195 ;;		None
 40196 ;; Auto vars:     Size  Location     Type
 40197 ;;		None
 40198 ;; Return value:  Size  Location     Type
 40199 ;;                  1    wreg      void 
 40200 ;; Registers used:
 40201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 40202 ;; Tracked objects:
 40203 ;;		On entry : 0/0
 40204 ;;		On exit  : 0/0
 40205 ;;		Unchanged: 0/0
 40206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40209 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40210 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40211 ;;Total ram usage:        3 bytes
 40212 ;; Hardware stack levels used:    1
 40213 ;; Hardware stack levels required when called:    1
 40214 ;; This function calls:
 40215 ;;		i2_ExternalFlash_MediaDetect
 40216 ;;		i2_ExternalFlash_MediaInitialize
 40217 ;;		i2_ResetSenseData
 40218 ;;		i2_USBTransferOnePacket
 40219 ;; This function is called by:
 40220 ;;		_APP_DeviceMSDInitialize
 40221 ;; This function uses a non-reentrant model
 40222 ;;
 40223                           
 40224                           	psect	text151
 40225  00F85A                     __ptext151:
 40226                           	opt stack 0
 40227  00F85A                     _USBMSDInit:
 40228                           	opt stack 13
 40229                           
 40230                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 40231                           
 40232                           ;incstack = 0
 40233  00F85A  0E00               	movlw	0
 40234  00F85C  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 40235  00F85E  0E40               	movlw	64
 40236  00F860  6E2F               	movwf	i2USBTransferOnePacket@data,c
 40237  00F862  0E0D               	movlw	13
 40238  00F864  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 40239  00F866  0E40               	movlw	64
 40240  00F868  6E31               	movwf	i2USBTransferOnePacket@len,c
 40241  00F86A  0E02               	movlw	2
 40242  00F86C  ECC6  F07E         	call	i2_USBTransferOnePacket
 40243  00F870  C02E  F0CC         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 40244  00F874  C02F  F0CD         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 40245  00F878  C00B  F013         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 40246  00F87C  C00C  F014         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 40247                           
 40248                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 40249  00F880  0E00               	movlw	0
 40250  00F882  6E21               	movwf	_MSD_State,c
 40251                           
 40252                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 40253  00F884  0100               	movlb	0	; () banked
 40254  00F886  69CF               	setf	_MSDCommandState& (0+255),b
 40255                           
 40256                           ; BSR set to: 0
 40257                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 40258  00F888  0E00               	movlw	0
 40259  00F88A  0101               	movlb	1	; () banked
 40260  00F88C  6F7E               	movwf	_MSDReadState& (0+255),b
 40261                           
 40262                           ; BSR set to: 1
 40263                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 40264  00F88E  0E00               	movlw	0
 40265  00F890  6E20               	movwf	_MSDWriteState,c
 40266                           
 40267                           ; BSR set to: 1
 40268                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 40269  00F892  0E00               	movlw	0
 40270  00F894  0100               	movlb	0	; () banked
 40271  00F896  6FCE               	movwf	_MSDHostNoData& (0+255),b
 40272                           
 40273                           ; BSR set to: 0
 40274                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 40275  00F898  0E00               	movlw	0
 40276  00F89A  0101               	movlb	1	; () banked
 40277  00F89C  6F53               	movwf	_gblNumBLKS& (0+255),b
 40278  00F89E  0E00               	movlw	0
 40279  00F8A0  6F54               	movwf	(_gblNumBLKS+1)& (0+255),b
 40280  00F8A2  0E00               	movlw	0
 40281  00F8A4  6F55               	movwf	(_gblNumBLKS+2)& (0+255),b
 40282  00F8A6  0E00               	movlw	0
 40283  00F8A8  6F56               	movwf	(_gblNumBLKS+3)& (0+255),b
 40284                           
 40285                           ; BSR set to: 1
 40286                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 40287  00F8AA  0E00               	movlw	0
 40288  00F8AC  6F4F               	movwf	_gblBLKLen& (0+255),b
 40289  00F8AE  0E00               	movlw	0
 40290  00F8B0  6F50               	movwf	(_gblBLKLen+1)& (0+255),b
 40291  00F8B2  0E00               	movlw	0
 40292  00F8B4  6F51               	movwf	(_gblBLKLen+2)& (0+255),b
 40293  00F8B6  0E00               	movlw	0
 40294  00F8B8  6F52               	movwf	(_gblBLKLen+3)& (0+255),b
 40295                           
 40296                           ; BSR set to: 1
 40297                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 40298  00F8BA  0E01               	movlw	1
 40299  00F8BC  6F7A               	movwf	_MSDCBWValid& (0+255),b
 40300                           
 40301                           ; BSR set to: 1
 40302                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 40303  00F8BE  0E00               	movlw	0
 40304  00F8C0  6F72               	movwf	(_gblMediaPresent+1)& (0+255),b
 40305  00F8C2  0E00               	movlw	0
 40306  00F8C4  6F71               	movwf	_gblMediaPresent& (0+255),b
 40307                           
 40308                           ; BSR set to: 1
 40309                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 40310  00F8C6  0E00               	movlw	0
 40311  00F8C8  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 40312  00F8CA  D04A               	goto	i2l534
 40313  00F8CC                     
 40314                           ; BSR set to: 1
 40315                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 40316                           
 40317                           ; BSR set to: 1
 40318  00F8CC  510D               	movf	(_gblCBW+13)& (0+255),w,b
 40319  00F8CE  0D01               	mullw	1
 40320  00F8D0  0E7B               	movlw	low _SoftDetach
 40321  00F8D2  24F3               	addwf	prodl,w,c
 40322  00F8D4  6ED9               	movwf	fsr2l,c
 40323  00F8D6  0E01               	movlw	high _SoftDetach
 40324  00F8D8  20F4               	addwfc	prodh,w,c
 40325  00F8DA  6EDA               	movwf	fsr2h,c
 40326  00F8DC  0E00               	movlw	0
 40327  00F8DE  6EDF               	movwf	indf2,c
 40328                           
 40329                           ; BSR set to: 1
 40330                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 40331  00F8E0  C1B7  F02E         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 40332  00F8E4  C1B8  F02F         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 40333  00F8E8  EE21  F0AB         	lfsr	2,_LUN+9
 40334  00F8EC  D801               	call	i2u1708_48
 40335  00F8EE  D00A               	goto	i2u1708_49
 40336  00F8F0                     i2u1708_48:
 40337  00F8F0  0005               	push	
 40338  00F8F2  6EFA               	movwf	pclath,c
 40339  00F8F4  50DE               	movf	postinc2,w,c
 40340  00F8F6  6EFD               	movwf	tosl,c
 40341  00F8F8  50DE               	movf	postinc2,w,c
 40342  00F8FA  6EFE               	movwf	tosh,c
 40343  00F8FC  50DE               	movf	postinc2,w,c
 40344  00F8FE  6EFF               	movwf	tosu,c
 40345  00F900  50FA               	movf	pclath,w,c
 40346  00F902  0012               	return		;indir
 40347  00F904                     i2u1708_49:
 40348  00F904  0900               	iorlw	0
 40349  00F906  B4D8               	btfsc	status,2,c
 40350  00F908  D027               	goto	i2l537
 40351                           
 40352                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 40353  00F90A  C1B7  F02E         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 40354  00F90E  C1B8  F02F         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 40355  00F912  D801               	call	i2u1710_48
 40356  00F914  D00B               	goto	i2u1710_49
 40357  00F916                     i2u1710_48:
 40358  00F916  0005               	push	
 40359  00F918  6EFA               	movwf	pclath,c
 40360  00F91A  0101               	movlb	1	; () banked
 40361  00F91C  51A2               	movf	_LUN& (0+255),w,b
 40362  00F91E  6EFD               	movwf	tosl,c
 40363  00F920  51A3               	movf	(_LUN+1)& (0+255),w,b
 40364  00F922  6EFE               	movwf	tosh,c
 40365  00F924  51A4               	movf	(_LUN+2)& (0+255),w,b
 40366  00F926  6EFF               	movwf	tosu,c
 40367  00F928  50FA               	movf	pclath,w,c
 40368  00F92A  0012               	return		;indir
 40369  00F92C                     i2u1710_49:
 40370  00F92C  502E               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 40371  00F92E  102F               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 40372  00F930  B4D8               	btfsc	status,2,c
 40373  00F932  D012               	goto	i2l537
 40374                           
 40375                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 40376  00F934  C10D  F039         	movff	_gblCBW+13,??_USBMSDInit
 40377  00F938  0E01               	movlw	1
 40378  00F93A  6E3A               	movwf	(??_USBMSDInit+1)& (0+255),c
 40379  00F93C  0E00               	movlw	0
 40380  00F93E  6E3B               	movwf	(??_USBMSDInit+2)& (0+255),c
 40381  00F940  2A39               	incf	??_USBMSDInit,f,c
 40382  00F942  D003               	goto	i2u1712_44
 40383  00F944                     i2u1712_45:
 40384  00F944  90D8               	bcf	status,0,c
 40385  00F946  363A               	rlcf	??_USBMSDInit+1,f,c
 40386  00F948  363B               	rlcf	??_USBMSDInit+2,f,c
 40387  00F94A                     i2u1712_44:
 40388  00F94A  2E39               	decfsz	??_USBMSDInit,f,c
 40389  00F94C  D7FB               	goto	i2u1712_45
 40390  00F94E  503A               	movf	??_USBMSDInit+1,w,c
 40391  00F950  0101               	movlb	1	; () banked
 40392  00F952  1371               	iorwf	_gblMediaPresent& (0+255),f,b
 40393  00F954  503B               	movf	??_USBMSDInit+2,w,c
 40394  00F956  1372               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 40395  00F958                     i2l537:
 40396                           
 40397                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 40398                           
 40399                           ; BSR set to: 1
 40400                           
 40401                           ; BSR set to: 1
 40402  00F958  EC98  F08E         	call	i2_ResetSenseData	;wreg free
 40403  00F95C  0101               	movlb	1	; () banked
 40404  00F95E  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 40405  00F960                     i2l534:
 40406                           
 40407                           ; BSR set to: 1
 40408                           
 40409                           ; BSR set to: 1
 40410  00F960  510D               	movf	(_gblCBW+13)& (0+255),w,b
 40411  00F962  A4D8               	btfss	status,2,c
 40412  00F964  0012               	return	
 40413  00F966  D7B2               	goto	i2l535
 40414  00F968                     __end_of_USBMSDInit:
 40415                           	opt stack 0
 40416                           tosu	equ	0xFFF
 40417                           tosh	equ	0xFFE
 40418                           tosl	equ	0xFFD
 40419                           pclatu	equ	0xFFB
 40420                           pclath	equ	0xFFA
 40421                           tblptru	equ	0xFF8
 40422                           tblptrh	equ	0xFF7
 40423                           tblptrl	equ	0xFF6
 40424                           tablat	equ	0xFF5
 40425                           prodh	equ	0xFF4
 40426                           prodl	equ	0xFF3
 40427                           intcon	equ	0xFF2
 40428                           indf0	equ	0xFEF
 40429                           postinc0	equ	0xFEE
 40430                           fsr0h	equ	0xFEA
 40431                           fsr0l	equ	0xFE9
 40432                           wreg	equ	0xFE8
 40433                           indf1	equ	0xFE7
 40434                           postdec1	equ	0xFE5
 40435                           plusw1	equ	0xFE3
 40436                           fsr1h	equ	0xFE2
 40437                           fsr1l	equ	0xFE1
 40438                           indf2	equ	0xFDF
 40439                           postinc2	equ	0xFDE
 40440                           postdec2	equ	0xFDD
 40441                           plusw2	equ	0xFDB
 40442                           fsr2h	equ	0xFDA
 40443                           fsr2l	equ	0xFD9
 40444                           status	equ	0xFD8
 40445                           
 40446 ;; *************** function i2_ResetSenseData *****************
 40447 ;; Defined at:
 40448 ;;		line 1373 in file "usb_device_msd.c"
 40449 ;; Parameters:    Size  Location     Type
 40450 ;;		None
 40451 ;; Auto vars:     Size  Location     Type
 40452 ;;		None
 40453 ;; Return value:  Size  Location     Type
 40454 ;;                  1    wreg      void 
 40455 ;; Registers used:
 40456 ;;		wreg, status,2
 40457 ;; Tracked objects:
 40458 ;;		On entry : 0/0
 40459 ;;		On exit  : 0/0
 40460 ;;		Unchanged: 0/0
 40461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40466 ;;Total ram usage:        0 bytes
 40467 ;; Hardware stack levels used:    1
 40468 ;; This function calls:
 40469 ;;		Nothing
 40470 ;; This function is called by:
 40471 ;;		_USBMSDInit
 40472 ;; This function uses a non-reentrant model
 40473 ;;
 40474                           
 40475                           	psect	text152
 40476  011D30                     __ptext152:
 40477                           	opt stack 0
 40478  011D30                     i2_ResetSenseData:
 40479                           	opt stack 13
 40480                           
 40481                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 40482                           
 40483                           ; BSR set to: 1
 40484                           ;incstack = 0
 40485  011D30  0101               	movlb	1	; () banked
 40486  011D32  911F               	bcf	_gblSenseData& (0+255),0,b
 40487  011D34  931F               	bcf	_gblSenseData& (0+255),1,b
 40488  011D36  951F               	bcf	_gblSenseData& (0+255),2,b
 40489  011D38  971F               	bcf	_gblSenseData& (0+255),3,b
 40490  011D3A  891F               	bsf	_gblSenseData& (0+255),4,b
 40491  011D3C  8B1F               	bsf	_gblSenseData& (0+255),5,b
 40492  011D3E  8D1F               	bsf	_gblSenseData& (0+255),6,b
 40493                           
 40494                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 40495  011D40  9F1F               	bcf	_gblSenseData& (0+255),7,b
 40496                           
 40497                           ; BSR set to: 1
 40498                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 40499  011D42  0E00               	movlw	0
 40500  011D44  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 40501                           
 40502                           ; BSR set to: 1
 40503                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 40504  011D46  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 40505  011D48  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 40506  011D4A  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 40507  011D4C  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 40508                           
 40509                           ; BSR set to: 1
 40510                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 40511  011D4E  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 40512                           
 40513                           ; BSR set to: 1
 40514                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 40515  011D50  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 40516                           
 40517                           ; BSR set to: 1
 40518                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 40519  011D52  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 40520                           
 40521                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 40522  011D54  0E00               	movlw	0
 40523  011D56  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 40524                           
 40525                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 40526  011D58  0E00               	movlw	0
 40527  011D5A  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 40528                           
 40529                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 40530  011D5C  0E00               	movlw	0
 40531  011D5E  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 40532                           
 40533                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 40534  011D60  0E00               	movlw	0
 40535  011D62  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 40536                           
 40537                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 40538  011D64  0E0A               	movlw	10
 40539  011D66  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 40540                           
 40541                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 40542  011D68  0E00               	movlw	0
 40543  011D6A  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 40544  011D6C  0E00               	movlw	0
 40545  011D6E  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 40546  011D70  0E00               	movlw	0
 40547  011D72  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 40548  011D74  0E00               	movlw	0
 40549  011D76  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 40550                           
 40551                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 40552  011D78  0E00               	movlw	0
 40553  011D7A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 40554                           
 40555                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 40556  011D7C  0E00               	movlw	0
 40557  011D7E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 40558                           
 40559                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 40560  011D80  0E00               	movlw	0
 40561  011D82  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 40562                           
 40563                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 40564  011D84  0E00               	movlw	0
 40565  011D86  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 40566                           
 40567                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 40568  011D88  0E00               	movlw	0
 40569  011D8A  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 40570                           
 40571                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 40572  011D8C  0E00               	movlw	0
 40573  011D8E  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 40574                           
 40575                           ; BSR set to: 1
 40576  011D90  0012               	return		;funcret
 40577  011D92                     __end_ofi2_ResetSenseData:
 40578                           	opt stack 0
 40579                           tosu	equ	0xFFF
 40580                           tosh	equ	0xFFE
 40581                           tosl	equ	0xFFD
 40582                           pclatu	equ	0xFFB
 40583                           pclath	equ	0xFFA
 40584                           tblptru	equ	0xFF8
 40585                           tblptrh	equ	0xFF7
 40586                           tblptrl	equ	0xFF6
 40587                           tablat	equ	0xFF5
 40588                           prodh	equ	0xFF4
 40589                           prodl	equ	0xFF3
 40590                           intcon	equ	0xFF2
 40591                           indf0	equ	0xFEF
 40592                           postinc0	equ	0xFEE
 40593                           fsr0h	equ	0xFEA
 40594                           fsr0l	equ	0xFE9
 40595                           wreg	equ	0xFE8
 40596                           indf1	equ	0xFE7
 40597                           postdec1	equ	0xFE5
 40598                           plusw1	equ	0xFE3
 40599                           fsr1h	equ	0xFE2
 40600                           fsr1l	equ	0xFE1
 40601                           indf2	equ	0xFDF
 40602                           postinc2	equ	0xFDE
 40603                           postdec2	equ	0xFDD
 40604                           plusw2	equ	0xFDB
 40605                           fsr2h	equ	0xFDA
 40606                           fsr2l	equ	0xFD9
 40607                           status	equ	0xFD8
 40608                           
 40609 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 40610 ;; Defined at:
 40611 ;;		line 10 in file "external_flash.c"
 40612 ;; Parameters:    Size  Location     Type
 40613 ;;  config          2    0[COMRAM] PTR void 
 40614 ;;		 -> NULL(0), 
 40615 ;; Auto vars:     Size  Location     Type
 40616 ;;		None
 40617 ;; Return value:  Size  Location     Type
 40618 ;;                  2    0[COMRAM] PTR struct .
 40619 ;; Registers used:
 40620 ;;		wreg, status,2, status,0
 40621 ;; Tracked objects:
 40622 ;;		On entry : 0/0
 40623 ;;		On exit  : 0/0
 40624 ;;		Unchanged: 0/0
 40625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40630 ;;Total ram usage:        2 bytes
 40631 ;; Hardware stack levels used:    1
 40632 ;; This function calls:
 40633 ;;		Nothing
 40634 ;; This function is called by:
 40635 ;;		_USBMSDInit
 40636 ;;		_MSDProcessCommand
 40637 ;; This function uses a non-reentrant model
 40638 ;;
 40639                           
 40640                           	psect	text153
 40641  012C52                     __ptext153:
 40642                           	opt stack 0
 40643  012C52                     i2_ExternalFlash_MediaInitialize:
 40644                           	opt stack 13
 40645                           
 40646                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 40647                           
 40648                           ; BSR set to: 1
 40649                           ;incstack = 0
 40650  012C52  0101               	movlb	1	; () banked
 40651  012C54  819A               	bsf	(_mediaInformation+1)& (0+255),0,b
 40652                           
 40653                           ; BSR set to: 1
 40654                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 40655  012C56  0E02               	movlw	2
 40656  012C58  6F9C               	movwf	(_mediaInformation+3)& (0+255),b
 40657  012C5A  0E00               	movlw	0
 40658  012C5C  6F9B               	movwf	(_mediaInformation+2)& (0+255),b
 40659                           
 40660                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 40661  012C5E  0E00               	movlw	0
 40662  012C60  6F99               	movwf	_mediaInformation& (0+255),b
 40663                           
 40664                           ; BSR set to: 1
 40665                           ;external_flash.c: 15: return &mediaInformation;
 40666  012C62  0E99               	movlw	low _mediaInformation
 40667  012C64  6E2E               	movwf	?i2_ExternalFlash_MediaInitialize,c
 40668  012C66  0E01               	movlw	high _mediaInformation
 40669  012C68  6E2F               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 40670  012C6A  0012               	return	
 40671  012C6C                     __end_ofi2_ExternalFlash_MediaInitialize:
 40672                           	opt stack 0
 40673                           tosu	equ	0xFFF
 40674                           tosh	equ	0xFFE
 40675                           tosl	equ	0xFFD
 40676                           pclatu	equ	0xFFB
 40677                           pclath	equ	0xFFA
 40678                           tblptru	equ	0xFF8
 40679                           tblptrh	equ	0xFF7
 40680                           tblptrl	equ	0xFF6
 40681                           tablat	equ	0xFF5
 40682                           prodh	equ	0xFF4
 40683                           prodl	equ	0xFF3
 40684                           intcon	equ	0xFF2
 40685                           indf0	equ	0xFEF
 40686                           postinc0	equ	0xFEE
 40687                           fsr0h	equ	0xFEA
 40688                           fsr0l	equ	0xFE9
 40689                           wreg	equ	0xFE8
 40690                           indf1	equ	0xFE7
 40691                           postdec1	equ	0xFE5
 40692                           plusw1	equ	0xFE3
 40693                           fsr1h	equ	0xFE2
 40694                           fsr1l	equ	0xFE1
 40695                           indf2	equ	0xFDF
 40696                           postinc2	equ	0xFDE
 40697                           postdec2	equ	0xFDD
 40698                           plusw2	equ	0xFDB
 40699                           fsr2h	equ	0xFDA
 40700                           fsr2l	equ	0xFD9
 40701                           status	equ	0xFD8
 40702                           
 40703 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 40704 ;; Defined at:
 40705 ;;		line 29 in file "external_flash.c"
 40706 ;; Parameters:    Size  Location     Type
 40707 ;;  config          2    0[COMRAM] PTR void 
 40708 ;;		 -> NULL(0), 
 40709 ;; Auto vars:     Size  Location     Type
 40710 ;;		None
 40711 ;; Return value:  Size  Location     Type
 40712 ;;                  1    wreg      unsigned char 
 40713 ;; Registers used:
 40714 ;;		wreg
 40715 ;; Tracked objects:
 40716 ;;		On entry : 0/0
 40717 ;;		On exit  : 0/0
 40718 ;;		Unchanged: 0/0
 40719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40724 ;;Total ram usage:        2 bytes
 40725 ;; Hardware stack levels used:    1
 40726 ;; This function calls:
 40727 ;;		Nothing
 40728 ;; This function is called by:
 40729 ;;		_USBMSDInit
 40730 ;;		_MSDProcessCommand
 40731 ;; This function uses a non-reentrant model
 40732 ;;
 40733                           
 40734                           	psect	text154
 40735  012D26                     __ptext154:
 40736                           	opt stack 0
 40737  012D26                     i2_ExternalFlash_MediaDetect:
 40738                           	opt stack 13
 40739                           
 40740                           ;external_flash.c: 31: return 1;
 40741                           
 40742                           ; BSR set to: 1
 40743                           ;incstack = 0
 40744  012D26  0E01               	movlw	1
 40745  012D28  0012               	return	
 40746  012D2A                     __end_ofi2_ExternalFlash_MediaDetect:
 40747                           	opt stack 0
 40748                           tosu	equ	0xFFF
 40749                           tosh	equ	0xFFE
 40750                           tosl	equ	0xFFD
 40751                           pclatu	equ	0xFFB
 40752                           pclath	equ	0xFFA
 40753                           tblptru	equ	0xFF8
 40754                           tblptrh	equ	0xFF7
 40755                           tblptrl	equ	0xFF6
 40756                           tablat	equ	0xFF5
 40757                           prodh	equ	0xFF4
 40758                           prodl	equ	0xFF3
 40759                           intcon	equ	0xFF2
 40760                           indf0	equ	0xFEF
 40761                           postinc0	equ	0xFEE
 40762                           fsr0h	equ	0xFEA
 40763                           fsr0l	equ	0xFE9
 40764                           wreg	equ	0xFE8
 40765                           indf1	equ	0xFE7
 40766                           postdec1	equ	0xFE5
 40767                           plusw1	equ	0xFE3
 40768                           fsr1h	equ	0xFE2
 40769                           fsr1l	equ	0xFE1
 40770                           indf2	equ	0xFDF
 40771                           postinc2	equ	0xFDE
 40772                           postdec2	equ	0xFDD
 40773                           plusw2	equ	0xFDB
 40774                           fsr2h	equ	0xFDA
 40775                           fsr2l	equ	0xFD9
 40776                           status	equ	0xFD8
 40777                           
 40778 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 40779 ;; Defined at:
 40780 ;;		line 46 in file "app_device_custom_hid.c"
 40781 ;; Parameters:    Size  Location     Type
 40782 ;;		None
 40783 ;; Auto vars:     Size  Location     Type
 40784 ;;		None
 40785 ;; Return value:  Size  Location     Type
 40786 ;;                  1    wreg      void 
 40787 ;; Registers used:
 40788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40789 ;; Tracked objects:
 40790 ;;		On entry : 0/0
 40791 ;;		On exit  : 0/0
 40792 ;;		Unchanged: 0/0
 40793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40798 ;;Total ram usage:        0 bytes
 40799 ;; Hardware stack levels used:    1
 40800 ;; Hardware stack levels required when called:    2
 40801 ;; This function calls:
 40802 ;;		_USBEnableEndpoint
 40803 ;;		i2_USBTransferOnePacket
 40804 ;; This function is called by:
 40805 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 40806 ;; This function uses a non-reentrant model
 40807 ;;
 40808                           
 40809                           	psect	text155
 40810  012926                     __ptext155:
 40811                           	opt stack 0
 40812  012926                     _APP_DeviceCustomHIDInitialize:
 40813                           	opt stack 13
 40814                           
 40815                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 40816                           
 40817                           ;incstack = 0
 40818  012926  0E00               	movlw	0
 40819  012928  0101               	movlb	1	; () banked
 40820  01292A  6F6D               	movwf	_USBInHandle& (0+255),b
 40821  01292C  0E00               	movlw	0
 40822  01292E  6F6E               	movwf	(_USBInHandle+1)& (0+255),b
 40823                           
 40824                           ; BSR set to: 1
 40825                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 40826  012930  0E1E               	movlw	30
 40827  012932  6E36               	movwf	USBEnableEndpoint@options,c
 40828  012934  0E01               	movlw	1
 40829  012936  EC7E  F093         	call	_USBEnableEndpoint
 40830                           
 40831                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 40832  01293A  0E00               	movlw	0
 40833  01293C  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 40834  01293E  0E38               	movlw	low _ReceivedDataBuffer
 40835  012940  6E2F               	movwf	i2USBTransferOnePacket@data,c
 40836  012942  0E02               	movlw	high _ReceivedDataBuffer
 40837  012944  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 40838  012946  0E40               	movlw	64
 40839  012948  6E31               	movwf	i2USBTransferOnePacket@len,c
 40840  01294A  0E01               	movlw	1
 40841  01294C  ECC6  F07E         	call	i2_USBTransferOnePacket
 40842  012950  C02E  F16F         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 40843  012954  C02F  F170         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 40844  012958  0012               	return		;funcret
 40845  01295A                     __end_of_APP_DeviceCustomHIDInitialize:
 40846                           	opt stack 0
 40847                           tosu	equ	0xFFF
 40848                           tosh	equ	0xFFE
 40849                           tosl	equ	0xFFD
 40850                           pclatu	equ	0xFFB
 40851                           pclath	equ	0xFFA
 40852                           tblptru	equ	0xFF8
 40853                           tblptrh	equ	0xFF7
 40854                           tblptrl	equ	0xFF6
 40855                           tablat	equ	0xFF5
 40856                           prodh	equ	0xFF4
 40857                           prodl	equ	0xFF3
 40858                           intcon	equ	0xFF2
 40859                           indf0	equ	0xFEF
 40860                           postinc0	equ	0xFEE
 40861                           fsr0h	equ	0xFEA
 40862                           fsr0l	equ	0xFE9
 40863                           wreg	equ	0xFE8
 40864                           indf1	equ	0xFE7
 40865                           postdec1	equ	0xFE5
 40866                           plusw1	equ	0xFE3
 40867                           fsr1h	equ	0xFE2
 40868                           fsr1l	equ	0xFE1
 40869                           indf2	equ	0xFDF
 40870                           postinc2	equ	0xFDE
 40871                           postdec2	equ	0xFDD
 40872                           plusw2	equ	0xFDB
 40873                           fsr2h	equ	0xFDA
 40874                           fsr2l	equ	0xFD9
 40875                           status	equ	0xFD8
 40876                           
 40877 ;; *************** function i2_USBTransferOnePacket *****************
 40878 ;; Defined at:
 40879 ;;		line 995 in file "usb_device.c"
 40880 ;; Parameters:    Size  Location     Type
 40881 ;;  ep              1    wreg     unsigned char 
 40882 ;;  dir             1    0[COMRAM] unsigned char 
 40883 ;;  data            2    1[COMRAM] PTR unsigned char 
 40884 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 40885 ;;		 -> msd_cbw(31), NULL(0), 
 40886 ;;  len             1    3[COMRAM] unsigned char 
 40887 ;; Auto vars:     Size  Location     Type
 40888 ;;  ep              1    8[COMRAM] unsigned char 
 40889 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 40890 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 40891 ;; Return value:  Size  Location     Type
 40892 ;;                  2    0[COMRAM] PTR void 
 40893 ;; Registers used:
 40894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40895 ;; Tracked objects:
 40896 ;;		On entry : 0/0
 40897 ;;		On exit  : 0/0
 40898 ;;		Unchanged: 0/0
 40899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40901 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40902 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40903 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40904 ;;Total ram usage:       11 bytes
 40905 ;; Hardware stack levels used:    1
 40906 ;; This function calls:
 40907 ;;		Nothing
 40908 ;; This function is called by:
 40909 ;;		_USBMSDInit
 40910 ;;		_USBCheckMSDRequest
 40911 ;;		_MSDTransferTerminated
 40912 ;;		_APP_DeviceCustomHIDInitialize
 40913 ;; This function uses a non-reentrant model
 40914 ;;
 40915                           
 40916                           	psect	text156
 40917  00FD8C                     __ptext156:
 40918                           	opt stack 0
 40919  00FD8C                     i2_USBTransferOnePacket:
 40920                           	opt stack 14
 40921                           
 40922                           ;incstack = 0
 40923                           ;i2USBTransferOnePacket@ep stored from wreg
 40924  00FD8C  6E36               	movwf	i2USBTransferOnePacket@ep,c
 40925                           
 40926                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 40927  00FD8E  502E               	movf	i2USBTransferOnePacket@dir,w,c
 40928  00FD90  B4D8               	btfsc	status,2,c
 40929  00FD92  D007               	goto	i2l184
 40930                           
 40931                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 40932  00FD94  5036               	movf	i2USBTransferOnePacket@ep,w,c
 40933  00FD96  0D02               	mullw	2
 40934  00FD98  0E07               	movlw	low _pBDTEntryIn
 40935  00FD9A  24F3               	addwf	prodl,w,c
 40936  00FD9C  6ED9               	movwf	fsr2l,c
 40937  00FD9E  0E00               	movlw	high _pBDTEntryIn
 40938  00FDA0  D006               	goto	L75
 40939  00FDA2                     i2l184:
 40940                           
 40941                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 40942  00FDA2  5036               	movf	i2USBTransferOnePacket@ep,w,c
 40943  00FDA4  0D02               	mullw	2
 40944  00FDA6  0E41               	movlw	low _pBDTEntryOut
 40945  00FDA8  24F3               	addwf	prodl,w,c
 40946  00FDAA  6ED9               	movwf	fsr2l,c
 40947  00FDAC  0E01               	movlw	high _pBDTEntryOut
 40948  00FDAE                     L75:
 40949  00FDAE  20F4               	addwfc	prodh,w,c
 40950  00FDB0  6EDA               	movwf	fsr2h,c
 40951  00FDB2  CFDE F037          	movff	postinc2,i2USBTransferOnePacket@handle
 40952  00FDB6  CFDD F038          	movff	postdec2,i2USBTransferOnePacket@handle+1
 40953                           
 40954                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 40955  00FDBA  5037               	movf	i2USBTransferOnePacket@handle,w,c
 40956  00FDBC  1038               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 40957  00FDBE  A4D8               	btfss	status,2,c
 40958  00FDC0  D005               	goto	i2l186
 40959                           
 40960                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 40961  00FDC2  0E00               	movlw	0
 40962  00FDC4  6E2E               	movwf	?i2_USBTransferOnePacket,c
 40963  00FDC6  0E00               	movlw	0
 40964  00FDC8  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 40965  00FDCA  0012               	return	
 40966  00FDCC                     i2l186:
 40967                           
 40968                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 40969  00FDCC  EE20 F002          	lfsr	2,2
 40970  00FDD0  5037               	movf	i2USBTransferOnePacket@handle,w,c
 40971  00FDD2  26D9               	addwf	fsr2l,f,c
 40972  00FDD4  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 40973  00FDD6  22DA               	addwfc	fsr2h,f,c
 40974  00FDD8  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 40975  00FDDC  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 40976                           
 40977                           ;usb_device.c: 1030: handle->CNT = len;
 40978  00FDE0  EE20 F001          	lfsr	2,1
 40979  00FDE4  5037               	movf	i2USBTransferOnePacket@handle,w,c
 40980  00FDE6  26D9               	addwf	fsr2l,f,c
 40981  00FDE8  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 40982  00FDEA  22DA               	addwfc	fsr2h,f,c
 40983  00FDEC  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 40984                           
 40985                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 40986  00FDF0  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 40987  00FDF4  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 40988  00FDF8  0E40               	movlw	64
 40989  00FDFA  16DF               	andwf	indf2,f,c
 40990                           
 40991                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 40992  00FDFC  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 40993  00FE00  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 40994  00FE04  0E00               	movlw	0
 40995  00FE06  86DB               	bsf	plusw2,3,c
 40996                           
 40997                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 40998  00FE08  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 40999  00FE0C  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 41000  00FE10  0E00               	movlw	0
 41001  00FE12  8EDB               	bsf	plusw2,7,c
 41002                           
 41003                           ;usb_device.c: 1036: if(dir != 0)
 41004  00FE14  502E               	movf	i2USBTransferOnePacket@dir,w,c
 41005  00FE16  B4D8               	btfsc	status,2,c
 41006  00FE18  D018               	goto	i2l188
 41007                           
 41008                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 41009  00FE1A  5036               	movf	i2USBTransferOnePacket@ep,w,c
 41010  00FE1C  0D02               	mullw	2
 41011  00FE1E  0E07               	movlw	low _pBDTEntryIn
 41012  00FE20  24F3               	addwf	prodl,w,c
 41013  00FE22  6ED9               	movwf	fsr2l,c
 41014  00FE24  0E00               	movlw	high _pBDTEntryIn
 41015  00FE26  20F4               	addwfc	prodh,w,c
 41016  00FE28  6EDA               	movwf	fsr2h,c
 41017  00FE2A  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 41018  00FE2E  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 41019  00FE32  0E04               	movlw	4
 41020  00FE34  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 41021  00FE36  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 41022  00FE38  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 41023  00FE3A  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 41024  00FE3C  5036               	movf	i2USBTransferOnePacket@ep,w,c
 41025  00FE3E  0D02               	mullw	2
 41026  00FE40  0E07               	movlw	low _pBDTEntryIn
 41027  00FE42  24F3               	addwf	prodl,w,c
 41028  00FE44  6ED9               	movwf	fsr2l,c
 41029  00FE46  0E00               	movlw	high _pBDTEntryIn
 41030  00FE48  D017               	goto	L76
 41031  00FE4A                     i2l188:
 41032                           
 41033                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 41034  00FE4A  5036               	movf	i2USBTransferOnePacket@ep,w,c
 41035  00FE4C  0D02               	mullw	2
 41036  00FE4E  0E41               	movlw	low _pBDTEntryOut
 41037  00FE50  24F3               	addwf	prodl,w,c
 41038  00FE52  6ED9               	movwf	fsr2l,c
 41039  00FE54  0E01               	movlw	high _pBDTEntryOut
 41040  00FE56  20F4               	addwfc	prodh,w,c
 41041  00FE58  6EDA               	movwf	fsr2h,c
 41042  00FE5A  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 41043  00FE5E  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 41044  00FE62  0E04               	movlw	4
 41045  00FE64  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 41046  00FE66  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 41047  00FE68  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 41048  00FE6A  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 41049  00FE6C  5036               	movf	i2USBTransferOnePacket@ep,w,c
 41050  00FE6E  0D02               	mullw	2
 41051  00FE70  0E41               	movlw	low _pBDTEntryOut
 41052  00FE72  24F3               	addwf	prodl,w,c
 41053  00FE74  6ED9               	movwf	fsr2l,c
 41054  00FE76  0E01               	movlw	high _pBDTEntryOut
 41055  00FE78                     L76:
 41056  00FE78  20F4               	addwfc	prodh,w,c
 41057  00FE7A  6EDA               	movwf	fsr2h,c
 41058  00FE7C  C034  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 41059  00FE80  C035  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 41060                           
 41061                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 41062  00FE84  C037  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 41063  00FE88  C038  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 41064  00FE8C  0012               	return	
 41065  00FE8E                     __end_ofi2_USBTransferOnePacket:
 41066                           	opt stack 0
 41067                           tosu	equ	0xFFF
 41068                           tosh	equ	0xFFE
 41069                           tosl	equ	0xFFD
 41070                           pclatu	equ	0xFFB
 41071                           pclath	equ	0xFFA
 41072                           tblptru	equ	0xFF8
 41073                           tblptrh	equ	0xFF7
 41074                           tblptrl	equ	0xFF6
 41075                           tablat	equ	0xFF5
 41076                           prodh	equ	0xFF4
 41077                           prodl	equ	0xFF3
 41078                           intcon	equ	0xFF2
 41079                           indf0	equ	0xFEF
 41080                           postinc0	equ	0xFEE
 41081                           fsr0h	equ	0xFEA
 41082                           fsr0l	equ	0xFE9
 41083                           wreg	equ	0xFE8
 41084                           indf1	equ	0xFE7
 41085                           postdec1	equ	0xFE5
 41086                           plusw1	equ	0xFE3
 41087                           fsr1h	equ	0xFE2
 41088                           fsr1l	equ	0xFE1
 41089                           indf2	equ	0xFDF
 41090                           postinc2	equ	0xFDE
 41091                           postdec2	equ	0xFDD
 41092                           plusw2	equ	0xFDB
 41093                           fsr2h	equ	0xFDA
 41094                           fsr2l	equ	0xFD9
 41095                           status	equ	0xFD8
 41096                           
 41097 ;; *************** function _USBEnableEndpoint *****************
 41098 ;; Defined at:
 41099 ;;		line 878 in file "usb_device.c"
 41100 ;; Parameters:    Size  Location     Type
 41101 ;;  ep              1    wreg     unsigned char 
 41102 ;;  options         1    8[COMRAM] unsigned char 
 41103 ;; Auto vars:     Size  Location     Type
 41104 ;;  ep              1   11[COMRAM] unsigned char 
 41105 ;;  p               2    9[COMRAM] PTR unsigned char 
 41106 ;;		 -> UEP0(1), 
 41107 ;; Return value:  Size  Location     Type
 41108 ;;                  1    wreg      void 
 41109 ;; Registers used:
 41110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41111 ;; Tracked objects:
 41112 ;;		On entry : 0/0
 41113 ;;		On exit  : 0/0
 41114 ;;		Unchanged: 0/0
 41115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41116 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41117 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41119 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41120 ;;Total ram usage:        4 bytes
 41121 ;; Hardware stack levels used:    1
 41122 ;; Hardware stack levels required when called:    1
 41123 ;; This function calls:
 41124 ;;		_USBConfigureEndpoint
 41125 ;; This function is called by:
 41126 ;;		_APP_DeviceCustomHIDInitialize
 41127 ;;		_APP_DeviceMSDInitialize
 41128 ;; This function uses a non-reentrant model
 41129 ;;
 41130                           
 41131                           	psect	text157
 41132  0126FC                     __ptext157:
 41133                           	opt stack 0
 41134  0126FC                     _USBEnableEndpoint:
 41135                           	opt stack 13
 41136                           
 41137                           ;incstack = 0
 41138                           ;USBEnableEndpoint@ep stored from wreg
 41139  0126FC  6E39               	movwf	USBEnableEndpoint@ep,c
 41140                           
 41141                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 41142  0126FE  A436               	btfss	USBEnableEndpoint@options,2,c
 41143  012700  D005               	goto	i2l179
 41144                           
 41145                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 41146  012702  0E00               	movlw	0
 41147  012704  6E2E               	movwf	USBConfigureEndpoint@direction,c
 41148  012706  5039               	movf	USBEnableEndpoint@ep,w,c
 41149  012708  EC18  F08B         	call	_USBConfigureEndpoint
 41150  01270C                     i2l179:
 41151                           
 41152                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 41153  01270C  A236               	btfss	USBEnableEndpoint@options,1,c
 41154  01270E  D005               	goto	i2l180
 41155                           
 41156                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 41157  012710  0E01               	movlw	1
 41158  012712  6E2E               	movwf	USBConfigureEndpoint@direction,c
 41159  012714  5039               	movf	USBEnableEndpoint@ep,w,c
 41160  012716  EC18  F08B         	call	_USBConfigureEndpoint
 41161  01271A                     i2l180:
 41162                           
 41163                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 41164  01271A  5039               	movf	USBEnableEndpoint@ep,w,c
 41165  01271C  0D01               	mullw	1
 41166  01271E  0E26               	movlw	38
 41167  012720  24F3               	addwf	prodl,w,c
 41168  012722  6E37               	movwf	USBEnableEndpoint@p,c
 41169  012724  0E0F               	movlw	15
 41170  012726  20F4               	addwfc	prodh,w,c
 41171  012728  6E38               	movwf	USBEnableEndpoint@p+1,c
 41172                           
 41173                           ;usb_device.c: 901: *p = options;
 41174  01272A  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 41175  01272E  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 41176  012732  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 41177  012736  0012               	return		;funcret
 41178  012738                     __end_of_USBEnableEndpoint:
 41179                           	opt stack 0
 41180                           tosu	equ	0xFFF
 41181                           tosh	equ	0xFFE
 41182                           tosl	equ	0xFFD
 41183                           pclatu	equ	0xFFB
 41184                           pclath	equ	0xFFA
 41185                           tblptru	equ	0xFF8
 41186                           tblptrh	equ	0xFF7
 41187                           tblptrl	equ	0xFF6
 41188                           tablat	equ	0xFF5
 41189                           prodh	equ	0xFF4
 41190                           prodl	equ	0xFF3
 41191                           intcon	equ	0xFF2
 41192                           indf0	equ	0xFEF
 41193                           postinc0	equ	0xFEE
 41194                           fsr0h	equ	0xFEA
 41195                           fsr0l	equ	0xFE9
 41196                           wreg	equ	0xFE8
 41197                           indf1	equ	0xFE7
 41198                           postdec1	equ	0xFE5
 41199                           plusw1	equ	0xFE3
 41200                           fsr1h	equ	0xFE2
 41201                           fsr1l	equ	0xFE1
 41202                           indf2	equ	0xFDF
 41203                           postinc2	equ	0xFDE
 41204                           postdec2	equ	0xFDD
 41205                           plusw2	equ	0xFDB
 41206                           fsr2h	equ	0xFDA
 41207                           fsr2l	equ	0xFD9
 41208                           status	equ	0xFD8
 41209                           
 41210 ;; *************** function _USBConfigureEndpoint *****************
 41211 ;; Defined at:
 41212 ;;		line 1545 in file "usb_device.c"
 41213 ;; Parameters:    Size  Location     Type
 41214 ;;  EPNum           1    wreg     unsigned char 
 41215 ;;  direction       1    0[COMRAM] unsigned char 
 41216 ;; Auto vars:     Size  Location     Type
 41217 ;;  EPNum           1    5[COMRAM] unsigned char 
 41218 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 41219 ;;		 -> BDT(48), 
 41220 ;; Return value:  Size  Location     Type
 41221 ;;                  1    wreg      void 
 41222 ;; Registers used:
 41223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41224 ;; Tracked objects:
 41225 ;;		On entry : 0/0
 41226 ;;		On exit  : 0/0
 41227 ;;		Unchanged: 0/0
 41228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41229 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41230 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41231 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41232 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41233 ;;Total ram usage:        8 bytes
 41234 ;; Hardware stack levels used:    1
 41235 ;; This function calls:
 41236 ;;		Nothing
 41237 ;; This function is called by:
 41238 ;;		_USBEnableEndpoint
 41239 ;; This function uses a non-reentrant model
 41240 ;;
 41241                           
 41242                           	psect	text158
 41243  011630                     __ptext158:
 41244                           	opt stack 0
 41245  011630                     _USBConfigureEndpoint:
 41246                           	opt stack 13
 41247                           
 41248                           ;incstack = 0
 41249                           ;USBConfigureEndpoint@EPNum stored from wreg
 41250  011630  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 41251                           
 41252                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 41253  011632  0E00               	movlw	0
 41254  011634  6E34               	movwf	USBConfigureEndpoint@handle,c
 41255  011636  0E0D               	movlw	13
 41256  011638  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 41257                           
 41258                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 41259  01163A  502E               	movf	USBConfigureEndpoint@direction,w,c
 41260  01163C  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 41261  01163E  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 41262  011640  90D8               	bcf	status,0,c
 41263  011642  362F               	rlcf	??_USBConfigureEndpoint,f,c
 41264  011644  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 41265  011646  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 41266  011648  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 41267  01164A  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 41268  01164C  90D8               	bcf	status,0,c
 41269  01164E  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 41270  011650  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 41271  011652  90D8               	bcf	status,0,c
 41272  011654  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 41273  011656  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 41274  011658  502F               	movf	??_USBConfigureEndpoint,w,c
 41275  01165A  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 41276  01165C  5030               	movf	??_USBConfigureEndpoint+1,w,c
 41277  01165E  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 41278  011660  90D8               	bcf	status,0,c
 41279  011662  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 41280  011664  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 41281  011666  90D8               	bcf	status,0,c
 41282  011668  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 41283  01166A  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 41284  01166C  5031               	movf	??_USBConfigureEndpoint+2,w,c
 41285  01166E  2634               	addwf	USBConfigureEndpoint@handle,f,c
 41286  011670  5032               	movf	??_USBConfigureEndpoint+3,w,c
 41287  011672  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 41288                           
 41289                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 41290  011674  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 41291  011678  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 41292  01167C  9EDF               	bcf	indf2,7,c
 41293                           
 41294                           ;usb_device.c: 1559: if(direction == 0)
 41295  01167E  502E               	movf	USBConfigureEndpoint@direction,w,c
 41296  011680  A4D8               	btfss	status,2,c
 41297  011682  D007               	goto	i2l226
 41298                           
 41299                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 41300  011684  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 41301  011686  0D02               	mullw	2
 41302  011688  0E41               	movlw	low _pBDTEntryOut
 41303  01168A  24F3               	addwf	prodl,w,c
 41304  01168C  6ED9               	movwf	fsr2l,c
 41305  01168E  0E01               	movlw	high _pBDTEntryOut
 41306  011690  D006               	goto	L77
 41307  011692                     i2l226:
 41308                           
 41309                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 41310  011692  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 41311  011694  0D02               	mullw	2
 41312  011696  0E07               	movlw	low _pBDTEntryIn
 41313  011698  24F3               	addwf	prodl,w,c
 41314  01169A  6ED9               	movwf	fsr2l,c
 41315  01169C  0E00               	movlw	high _pBDTEntryIn
 41316  01169E                     L77:
 41317  01169E  20F4               	addwfc	prodh,w,c
 41318  0116A0  6EDA               	movwf	fsr2h,c
 41319  0116A2  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 41320  0116A6  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 41321                           
 41322                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 41323  0116AA  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 41324  0116AE  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 41325  0116B2  9CDF               	bcf	indf2,6,c
 41326                           
 41327                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 41328  0116B4  EE20 F004          	lfsr	2,4
 41329  0116B8  5034               	movf	USBConfigureEndpoint@handle,w,c
 41330  0116BA  26D9               	addwf	fsr2l,f,c
 41331  0116BC  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 41332  0116BE  22DA               	addwfc	fsr2h,f,c
 41333  0116C0  8CDF               	bsf	indf2,6,c
 41334  0116C2  0012               	return		;funcret
 41335  0116C4                     __end_of_USBConfigureEndpoint:
 41336                           	opt stack 0
 41337                           tosu	equ	0xFFF
 41338                           tosh	equ	0xFFE
 41339                           tosl	equ	0xFFD
 41340                           pclatu	equ	0xFFB
 41341                           pclath	equ	0xFFA
 41342                           tblptru	equ	0xFF8
 41343                           tblptrh	equ	0xFF7
 41344                           tblptrl	equ	0xFF6
 41345                           tablat	equ	0xFF5
 41346                           prodh	equ	0xFF4
 41347                           prodl	equ	0xFF3
 41348                           intcon	equ	0xFF2
 41349                           indf0	equ	0xFEF
 41350                           postinc0	equ	0xFEE
 41351                           fsr0h	equ	0xFEA
 41352                           fsr0l	equ	0xFE9
 41353                           wreg	equ	0xFE8
 41354                           indf1	equ	0xFE7
 41355                           postdec1	equ	0xFE5
 41356                           plusw1	equ	0xFE3
 41357                           fsr1h	equ	0xFE2
 41358                           fsr1l	equ	0xFE1
 41359                           indf2	equ	0xFDF
 41360                           postinc2	equ	0xFDE
 41361                           postdec2	equ	0xFDD
 41362                           plusw2	equ	0xFDB
 41363                           fsr2h	equ	0xFDA
 41364                           fsr2l	equ	0xFD9
 41365                           status	equ	0xFD8
 41366                           
 41367 ;; *************** function _USBCtrlTrfOutHandler *****************
 41368 ;; Defined at:
 41369 ;;		line 2540 in file "usb_device.c"
 41370 ;; Parameters:    Size  Location     Type
 41371 ;;		None
 41372 ;; Auto vars:     Size  Location     Type
 41373 ;;		None
 41374 ;; Return value:  Size  Location     Type
 41375 ;;                  1    wreg      void 
 41376 ;; Registers used:
 41377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41378 ;; Tracked objects:
 41379 ;;		On entry : 0/0
 41380 ;;		On exit  : 0/0
 41381 ;;		Unchanged: 0/0
 41382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41387 ;;Total ram usage:        0 bytes
 41388 ;; Hardware stack levels used:    1
 41389 ;; Hardware stack levels required when called:    2
 41390 ;; This function calls:
 41391 ;;		_USBCtrlTrfRxService
 41392 ;; This function is called by:
 41393 ;;		_USBCtrlEPService
 41394 ;; This function uses a non-reentrant model
 41395 ;;
 41396                           
 41397                           	psect	text159
 41398  011EAC                     __ptext159:
 41399                           	opt stack 0
 41400  011EAC                     _USBCtrlTrfOutHandler:
 41401                           	opt stack 13
 41402                           
 41403                           ;usb_device.c: 2542: if(controlTransferState == 2)
 41404                           
 41405                           ;incstack = 0
 41406  011EAC  0E02               	movlw	2
 41407  011EAE  1829               	xorwf	_controlTransferState,w,c	;volatile
 41408  011EB0  A4D8               	btfss	status,2,c
 41409  011EB2  D003               	goto	i2l332
 41410                           
 41411                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 41412  011EB4  ECB4  F07C         	call	_USBCtrlTrfRxService	;wreg free
 41413                           
 41414                           ;usb_device.c: 2545: }
 41415  011EB8  0012               	return	
 41416  011EBA                     i2l332:
 41417                           
 41418                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 41419  011EBA  0E00               	movlw	0
 41420  011EBC  6E29               	movwf	_controlTransferState,c	;volatile
 41421                           
 41422                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 41423  011EBE  5025               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 41424  011EC0  A4D8               	btfss	status,2,c
 41425  011EC2  D01F               	goto	i2l334
 41426                           
 41427                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 41428  011EC4  EE20 F001          	lfsr	2,1
 41429  011EC8  5015               	movf	_pBDTEntryEP0OutNext,w,c
 41430  011ECA  26D9               	addwf	fsr2l,f,c
 41431  011ECC  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 41432  011ECE  22DA               	addwfc	fsr2h,f,c
 41433  011ED0  0E08               	movlw	8
 41434  011ED2  6EDF               	movwf	indf2,c
 41435                           
 41436                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 41437  011ED4  EE20 F002          	lfsr	2,2
 41438  011ED8  5015               	movf	_pBDTEntryEP0OutNext,w,c
 41439  011EDA  26D9               	addwf	fsr2l,f,c
 41440  011EDC  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 41441  011EDE  22DA               	addwfc	fsr2h,f,c
 41442  011EE0  0E30               	movlw	48
 41443  011EE2  6EDE               	movwf	postinc2,c
 41444  011EE4  0E0D               	movlw	13
 41445  011EE6  6EDD               	movwf	postdec2,c
 41446                           
 41447                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 41448  011EE8  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41449  011EEC  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41450  011EF0  0E0C               	movlw	12
 41451  011EF2  6EDF               	movwf	indf2,c
 41452                           
 41453                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 41454  011EF4  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41455  011EF8  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41456  011EFC  0E00               	movlw	0
 41457  011EFE  8EDB               	bsf	plusw2,7,c
 41458                           
 41459                           ;usb_device.c: 2563: }
 41460  011F00  0012               	return	
 41461  011F02                     i2l334:
 41462                           
 41463                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 41464  011F02  0E00               	movlw	0
 41465  011F04  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 41466  011F06  0012               	return	
 41467  011F08                     __end_of_USBCtrlTrfOutHandler:
 41468                           	opt stack 0
 41469                           tosu	equ	0xFFF
 41470                           tosh	equ	0xFFE
 41471                           tosl	equ	0xFFD
 41472                           pclatu	equ	0xFFB
 41473                           pclath	equ	0xFFA
 41474                           tblptru	equ	0xFF8
 41475                           tblptrh	equ	0xFF7
 41476                           tblptrl	equ	0xFF6
 41477                           tablat	equ	0xFF5
 41478                           prodh	equ	0xFF4
 41479                           prodl	equ	0xFF3
 41480                           intcon	equ	0xFF2
 41481                           indf0	equ	0xFEF
 41482                           postinc0	equ	0xFEE
 41483                           fsr0h	equ	0xFEA
 41484                           fsr0l	equ	0xFE9
 41485                           wreg	equ	0xFE8
 41486                           indf1	equ	0xFE7
 41487                           postdec1	equ	0xFE5
 41488                           plusw1	equ	0xFE3
 41489                           fsr1h	equ	0xFE2
 41490                           fsr1l	equ	0xFE1
 41491                           indf2	equ	0xFDF
 41492                           postinc2	equ	0xFDE
 41493                           postdec2	equ	0xFDD
 41494                           plusw2	equ	0xFDB
 41495                           fsr2h	equ	0xFDA
 41496                           fsr2l	equ	0xFD9
 41497                           status	equ	0xFD8
 41498                           
 41499 ;; *************** function _USBCtrlTrfRxService *****************
 41500 ;; Defined at:
 41501 ;;		line 1854 in file "usb_device.c"
 41502 ;; Parameters:    Size  Location     Type
 41503 ;;		None
 41504 ;; Auto vars:     Size  Location     Type
 41505 ;;  byteToRead      1    1[COMRAM] unsigned char 
 41506 ;;  i               1    0[COMRAM] unsigned char 
 41507 ;; Return value:  Size  Location     Type
 41508 ;;                  1    wreg      void 
 41509 ;; Registers used:
 41510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41511 ;; Tracked objects:
 41512 ;;		On entry : 0/0
 41513 ;;		On exit  : 0/0
 41514 ;;		Unchanged: 0/0
 41515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41517 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41520 ;;Total ram usage:        2 bytes
 41521 ;; Hardware stack levels used:    1
 41522 ;; Hardware stack levels required when called:    1
 41523 ;; This function calls:
 41524 ;;		_USBCtrlEPAllowStatusStage
 41525 ;; This function is called by:
 41526 ;;		_USBCtrlTrfOutHandler
 41527 ;; This function uses a non-reentrant model
 41528 ;;
 41529                           
 41530                           	psect	text160
 41531  00F968                     __ptext160:
 41532                           	opt stack 0
 41533  00F968                     _USBCtrlTrfRxService:
 41534                           	opt stack 13
 41535                           
 41536                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 41537                           
 41538                           ;incstack = 0
 41539  00F968  EE20 F001          	lfsr	2,1
 41540  00F96C  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 41541  00F96E  26D9               	addwf	fsr2l,f,c
 41542  00F970  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 41543  00F972  22DA               	addwfc	fsr2h,f,c
 41544  00F974  50DF               	movf	indf2,w,c
 41545  00F976  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 41546                           
 41547                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 41548  00F978  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 41549  00F97A  0101               	movlb	1	; () banked
 41550  00F97C  5D35               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 41551  00F97E  0E00               	movlw	0
 41552  00F980  5936               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 41553  00F982  A0D8               	btfss	status,0,c
 41554                           
 41555                           ; BSR set to: 1
 41556                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 41557  00F984  C135  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 41558                           
 41559                           ; BSR set to: 1
 41560                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 41561                           
 41562                           ; BSR set to: 1
 41563  00F988  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 41564  00F98A  5F35               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 41565  00F98C  0E00               	movlw	0
 41566  00F98E  5B36               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 41567                           
 41568                           ; BSR set to: 1
 41569                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 41570  00F990  0E00               	movlw	0
 41571  00F992  6E2E               	movwf	USBCtrlTrfRxService@i,c
 41572  00F994  D011               	goto	i2l260
 41573  00F996                     
 41574                           ; BSR set to: 1
 41575                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 41576                           
 41577                           ; BSR set to: 1
 41578  00F996  502E               	movf	USBCtrlTrfRxService@i,w,c
 41579  00F998  0D01               	mullw	1
 41580  00F99A  0E38               	movlw	56
 41581  00F99C  24F3               	addwf	prodl,w,c
 41582  00F99E  6ED9               	movwf	fsr2l,c
 41583  00F9A0  0E0D               	movlw	13
 41584  00F9A2  20F4               	addwfc	prodh,w,c
 41585  00F9A4  6EDA               	movwf	fsr2h,c
 41586  00F9A6  C131  FFE1         	movff	_outPipes,fsr1l	;volatile
 41587  00F9AA  C132  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 41588  00F9AE  CFDF FFE7          	movff	indf2,indf1
 41589                           
 41590                           ; BSR set to: 1
 41591  00F9B2  4B31               	infsnz	_outPipes& (0+255),f,b	;volatile
 41592  00F9B4  2B32               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 41593                           
 41594                           ; BSR set to: 1
 41595  00F9B6  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 41596  00F9B8                     i2l260:
 41597                           
 41598                           ; BSR set to: 1
 41599                           
 41600                           ; BSR set to: 1
 41601  00F9B8  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 41602  00F9BA  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 41603  00F9BC  A0D8               	btfss	status,0,c
 41604  00F9BE  D7EB               	goto	i2l261
 41605                           
 41606                           ; BSR set to: 1
 41607                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 41608                           
 41609                           ; BSR set to: 1
 41610  00F9C0  5135               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 41611  00F9C2  1136               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 41612  00F9C4  B4D8               	btfsc	status,2,c
 41613  00F9C6  D032               	goto	i2l263
 41614                           
 41615                           ; BSR set to: 1
 41616                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 41617  00F9C8  EE20 F001          	lfsr	2,1
 41618  00F9CC  5015               	movf	_pBDTEntryEP0OutNext,w,c
 41619  00F9CE  26D9               	addwf	fsr2l,f,c
 41620  00F9D0  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 41621  00F9D2  22DA               	addwfc	fsr2h,f,c
 41622  00F9D4  0E08               	movlw	8
 41623  00F9D6  6EDF               	movwf	indf2,c
 41624                           
 41625                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 41626  00F9D8  EE20 F002          	lfsr	2,2
 41627  00F9DC  5015               	movf	_pBDTEntryEP0OutNext,w,c
 41628  00F9DE  26D9               	addwf	fsr2l,f,c
 41629  00F9E0  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 41630  00F9E2  22DA               	addwfc	fsr2h,f,c
 41631  00F9E4  0E38               	movlw	56
 41632  00F9E6  6EDE               	movwf	postinc2,c
 41633  00F9E8  0E0D               	movlw	13
 41634  00F9EA  6EDD               	movwf	postdec2,c
 41635                           
 41636                           ; BSR set to: 1
 41637                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 41638  00F9EC  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 41639  00F9F0  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 41640  00F9F4  BCDF               	btfsc	indf2,6,c
 41641  00F9F6  D00D               	goto	i2l264
 41642                           
 41643                           ; BSR set to: 1
 41644                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 41645  00F9F8  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41646  00F9FC  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41647  00FA00  0E48               	movlw	72
 41648  00FA02  6EDF               	movwf	indf2,c
 41649                           
 41650                           ; BSR set to: 1
 41651                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 41652  00FA04  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41653  00FA08  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41654  00FA0C  0E00               	movlw	0
 41655  00FA0E  8EDB               	bsf	plusw2,7,c
 41656                           
 41657                           ;usb_device.c: 1891: }
 41658  00FA10  0012               	return	
 41659  00FA12                     i2l264:
 41660                           
 41661                           ; BSR set to: 1
 41662                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 41663                           
 41664                           ; BSR set to: 1
 41665  00FA12  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41666  00FA16  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41667  00FA1A  0E08               	movlw	8
 41668  00FA1C  6EDF               	movwf	indf2,c
 41669                           
 41670                           ; BSR set to: 1
 41671                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 41672  00FA1E  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41673  00FA22  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41674  00FA26  0E00               	movlw	0
 41675  00FA28  8EDB               	bsf	plusw2,7,c
 41676                           
 41677                           ; BSR set to: 1
 41678                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 41679  00FA2A  0012               	return	
 41680  00FA2C                     i2l263:
 41681                           
 41682                           ; BSR set to: 1
 41683                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 41684                           
 41685                           ; BSR set to: 1
 41686  00FA2C  EE20 F001          	lfsr	2,1
 41687  00FA30  5015               	movf	_pBDTEntryEP0OutNext,w,c
 41688  00FA32  26D9               	addwf	fsr2l,f,c
 41689  00FA34  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 41690  00FA36  22DA               	addwfc	fsr2h,f,c
 41691  00FA38  0E08               	movlw	8
 41692  00FA3A  6EDF               	movwf	indf2,c
 41693                           
 41694                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 41695  00FA3C  EE20 F002          	lfsr	2,2
 41696  00FA40  5015               	movf	_pBDTEntryEP0OutNext,w,c
 41697  00FA42  26D9               	addwf	fsr2l,f,c
 41698  00FA44  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 41699  00FA46  22DA               	addwfc	fsr2h,f,c
 41700  00FA48  0E30               	movlw	48
 41701  00FA4A  6EDE               	movwf	postinc2,c
 41702  00FA4C  0E0D               	movlw	13
 41703  00FA4E  6EDD               	movwf	postdec2,c
 41704                           
 41705                           ; BSR set to: 1
 41706                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 41707  00FA50  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41708  00FA54  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41709  00FA58  0E04               	movlw	4
 41710  00FA5A  6EDF               	movwf	indf2,c
 41711                           
 41712                           ; BSR set to: 1
 41713                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 41714  00FA5C  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41715  00FA60  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41716  00FA64  0E00               	movlw	0
 41717  00FA66  8EDB               	bsf	plusw2,7,c
 41718                           
 41719                           ; BSR set to: 1
 41720                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 41721                           
 41722                           ; BSR set to: 1
 41723                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 41724  00FA68  9F34               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 41725                           
 41726                           ; BSR set to: 1
 41727                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 41728  00FA6A  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 41729  00FA6C  A4D8               	btfss	status,2,c
 41730  00FA6E  0012               	return	
 41731                           
 41732                           ; BSR set to: 1
 41733                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 41734  00FA70  ECCF  F085         	call	_USBCtrlEPAllowStatusStage	;wreg free
 41735  00FA74  0012               	return	
 41736  00FA76                     __end_of_USBCtrlTrfRxService:
 41737                           	opt stack 0
 41738                           tosu	equ	0xFFF
 41739                           tosh	equ	0xFFE
 41740                           tosl	equ	0xFFD
 41741                           pclatu	equ	0xFFB
 41742                           pclath	equ	0xFFA
 41743                           tblptru	equ	0xFF8
 41744                           tblptrh	equ	0xFF7
 41745                           tblptrl	equ	0xFF6
 41746                           tablat	equ	0xFF5
 41747                           prodh	equ	0xFF4
 41748                           prodl	equ	0xFF3
 41749                           intcon	equ	0xFF2
 41750                           indf0	equ	0xFEF
 41751                           postinc0	equ	0xFEE
 41752                           fsr0h	equ	0xFEA
 41753                           fsr0l	equ	0xFE9
 41754                           wreg	equ	0xFE8
 41755                           indf1	equ	0xFE7
 41756                           postdec1	equ	0xFE5
 41757                           plusw1	equ	0xFE3
 41758                           fsr1h	equ	0xFE2
 41759                           fsr1l	equ	0xFE1
 41760                           indf2	equ	0xFDF
 41761                           postinc2	equ	0xFDE
 41762                           postdec2	equ	0xFDD
 41763                           plusw2	equ	0xFDB
 41764                           fsr2h	equ	0xFDA
 41765                           fsr2l	equ	0xFD9
 41766                           status	equ	0xFD8
 41767                           
 41768 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 41769 ;; Defined at:
 41770 ;;		line 1418 in file "usb_device.c"
 41771 ;; Parameters:    Size  Location     Type
 41772 ;;		None
 41773 ;; Auto vars:     Size  Location     Type
 41774 ;;		None
 41775 ;; Return value:  Size  Location     Type
 41776 ;;                  1    wreg      void 
 41777 ;; Registers used:
 41778 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41779 ;; Tracked objects:
 41780 ;;		On entry : 0/0
 41781 ;;		On exit  : 0/0
 41782 ;;		Unchanged: 0/0
 41783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41788 ;;Total ram usage:        0 bytes
 41789 ;; Hardware stack levels used:    1
 41790 ;; This function calls:
 41791 ;;		Nothing
 41792 ;; This function is called by:
 41793 ;;		_USBDeviceTasks
 41794 ;;		_USBCtrlEPServiceComplete
 41795 ;;		_USBCtrlTrfRxService
 41796 ;; This function uses a non-reentrant model
 41797 ;;
 41798                           
 41799                           	psect	text161
 41800  010B9E                     __ptext161:
 41801                           	opt stack 0
 41802  010B9E                     _USBCtrlEPAllowStatusStage:
 41803                           	opt stack 13
 41804                           
 41805                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 41806                           
 41807                           ;incstack = 0
 41808  010B9E  5022               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 41809  010BA0  A4D8               	btfss	status,2,c
 41810  010BA2  0012               	return	
 41811                           
 41812                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 41813  010BA4  0E01               	movlw	1
 41814  010BA6  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 41815                           
 41816                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 41817  010BA8  0101               	movlb	1	; () banked
 41818  010BAA  5182               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 41819  010BAC  A4D8               	btfss	status,2,c
 41820  010BAE  0012               	return	
 41821                           
 41822                           ; BSR set to: 1
 41823                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 41824  010BB0  0E01               	movlw	1
 41825  010BB2  6F82               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 41826                           
 41827                           ; BSR set to: 1
 41828                           ;usb_device.c: 1434: if(controlTransferState == 2)
 41829  010BB4  0E02               	movlw	2
 41830  010BB6  1829               	xorwf	_controlTransferState,w,c	;volatile
 41831  010BB8  A4D8               	btfss	status,2,c
 41832  010BBA  D015               	goto	i2l214
 41833                           
 41834                           ; BSR set to: 1
 41835                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 41836  010BBC  EE20 F001          	lfsr	2,1
 41837  010BC0  5007               	movf	_pBDTEntryIn,w,c
 41838  010BC2  26D9               	addwf	fsr2l,f,c
 41839  010BC4  5008               	movf	_pBDTEntryIn+1,w,c
 41840  010BC6  22DA               	addwfc	fsr2h,f,c
 41841  010BC8  0E00               	movlw	0
 41842  010BCA  6EDF               	movwf	indf2,c
 41843                           
 41844                           ; BSR set to: 1
 41845                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 41846  010BCC  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 41847  010BD0  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 41848  010BD4  0E48               	movlw	72
 41849  010BD6  6EDF               	movwf	indf2,c
 41850                           
 41851                           ; BSR set to: 1
 41852                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 41853  010BD8  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 41854  010BDC  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 41855  010BE0  0E00               	movlw	0
 41856  010BE2  8EDB               	bsf	plusw2,7,c
 41857                           
 41858                           ;usb_device.c: 1439: }
 41859  010BE4  0012               	return	
 41860  010BE6                     i2l214:
 41861                           
 41862                           ; BSR set to: 1
 41863                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 41864                           
 41865                           ; BSR set to: 1
 41866  010BE6  0429               	decf	_controlTransferState,w,c	;volatile
 41867  010BE8  A4D8               	btfss	status,2,c
 41868  010BEA  0012               	return	
 41869                           
 41870                           ; BSR set to: 1
 41871                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 41872  010BEC  0E00               	movlw	0
 41873  010BEE  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 41874                           
 41875                           ; BSR set to: 1
 41876                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 41877  010BF0  EE20 F001          	lfsr	2,1
 41878  010BF4  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 41879  010BF6  26D9               	addwf	fsr2l,f,c
 41880  010BF8  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 41881  010BFA  22DA               	addwfc	fsr2h,f,c
 41882  010BFC  0E08               	movlw	8
 41883  010BFE  6EDF               	movwf	indf2,c
 41884                           
 41885                           ; BSR set to: 1
 41886                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 41887  010C00  EE20 F002          	lfsr	2,2
 41888  010C04  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 41889  010C06  26D9               	addwf	fsr2l,f,c
 41890  010C08  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 41891  010C0A  22DA               	addwfc	fsr2h,f,c
 41892  010C0C  0E30               	movlw	48
 41893  010C0E  6EDE               	movwf	postinc2,c
 41894  010C10  0E0D               	movlw	13
 41895  010C12  6EDD               	movwf	postdec2,c
 41896                           
 41897                           ; BSR set to: 1
 41898                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 41899  010C14  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 41900  010C18  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 41901  010C1C  0E04               	movlw	4
 41902  010C1E  6EDF               	movwf	indf2,c
 41903                           
 41904                           ; BSR set to: 1
 41905                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 41906  010C20  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 41907  010C24  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 41908  010C28  0E00               	movlw	0
 41909  010C2A  8EDB               	bsf	plusw2,7,c
 41910                           
 41911                           ; BSR set to: 1
 41912                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 41913  010C2C  0E01               	movlw	1
 41914  010C2E  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 41915                           
 41916                           ; BSR set to: 1
 41917                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 41918  010C30  EE20 F001          	lfsr	2,1
 41919  010C34  5015               	movf	_pBDTEntryEP0OutNext,w,c
 41920  010C36  26D9               	addwf	fsr2l,f,c
 41921  010C38  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 41922  010C3A  22DA               	addwfc	fsr2h,f,c
 41923  010C3C  0E08               	movlw	8
 41924  010C3E  6EDF               	movwf	indf2,c
 41925                           
 41926                           ; BSR set to: 1
 41927                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 41928  010C40  EE20 F002          	lfsr	2,2
 41929  010C44  5015               	movf	_pBDTEntryEP0OutNext,w,c
 41930  010C46  26D9               	addwf	fsr2l,f,c
 41931  010C48  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 41932  010C4A  22DA               	addwfc	fsr2h,f,c
 41933  010C4C  0E30               	movlw	48
 41934  010C4E  6EDE               	movwf	postinc2,c
 41935  010C50  0E0D               	movlw	13
 41936  010C52  6EDD               	movwf	postdec2,c
 41937                           
 41938                           ; BSR set to: 1
 41939                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 41940  010C54  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 41941  010C58  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 41942  010C5C  0E80               	movlw	128
 41943  010C5E  6EDF               	movwf	indf2,c
 41944                           
 41945                           ; BSR set to: 1
 41946                           
 41947                           ; BSR set to: 1
 41948                           
 41949                           ; BSR set to: 1
 41950  010C60  0012               	return	
 41951  010C62                     __end_of_USBCtrlEPAllowStatusStage:
 41952                           	opt stack 0
 41953                           tosu	equ	0xFFF
 41954                           tosh	equ	0xFFE
 41955                           tosl	equ	0xFFD
 41956                           pclatu	equ	0xFFB
 41957                           pclath	equ	0xFFA
 41958                           tblptru	equ	0xFF8
 41959                           tblptrh	equ	0xFF7
 41960                           tblptrl	equ	0xFF6
 41961                           tablat	equ	0xFF5
 41962                           prodh	equ	0xFF4
 41963                           prodl	equ	0xFF3
 41964                           intcon	equ	0xFF2
 41965                           indf0	equ	0xFEF
 41966                           postinc0	equ	0xFEE
 41967                           fsr0h	equ	0xFEA
 41968                           fsr0l	equ	0xFE9
 41969                           wreg	equ	0xFE8
 41970                           indf1	equ	0xFE7
 41971                           postdec1	equ	0xFE5
 41972                           plusw1	equ	0xFE3
 41973                           fsr1h	equ	0xFE2
 41974                           fsr1l	equ	0xFE1
 41975                           indf2	equ	0xFDF
 41976                           postinc2	equ	0xFDE
 41977                           postdec2	equ	0xFDD
 41978                           plusw2	equ	0xFDB
 41979                           fsr2h	equ	0xFDA
 41980                           fsr2l	equ	0xFD9
 41981                           status	equ	0xFD8
 41982                           
 41983 ;; *************** function _USBCtrlTrfInHandler *****************
 41984 ;; Defined at:
 41985 ;;		line 2594 in file "usb_device.c"
 41986 ;; Parameters:    Size  Location     Type
 41987 ;;		None
 41988 ;; Auto vars:     Size  Location     Type
 41989 ;;  lastDTS         1    1[COMRAM] unsigned char 
 41990 ;; Return value:  Size  Location     Type
 41991 ;;                  1    wreg      void 
 41992 ;; Registers used:
 41993 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 41994 ;; Tracked objects:
 41995 ;;		On entry : 0/0
 41996 ;;		On exit  : 0/0
 41997 ;;		Unchanged: 0/0
 41998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42003 ;;Total ram usage:        1 bytes
 42004 ;; Hardware stack levels used:    1
 42005 ;; Hardware stack levels required when called:    1
 42006 ;; This function calls:
 42007 ;;		_USBCtrlTrfTxService
 42008 ;; This function is called by:
 42009 ;;		_USBCtrlEPService
 42010 ;; This function uses a non-reentrant model
 42011 ;;
 42012                           
 42013                           	psect	text162
 42014  010C62                     __ptext162:
 42015                           	opt stack 0
 42016  010C62                     _USBCtrlTrfInHandler:
 42017                           	opt stack 14
 42018                           
 42019                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 42020                           
 42021                           ;incstack = 0
 42022  010C62  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 42023  010C66  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 42024  010C6A  0E00               	movlw	0
 42025  010C6C  BCDF               	btfsc	indf2,6,c
 42026  010C6E  0E01               	movlw	1
 42027  010C70  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 42028                           
 42029                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 42030  010C72  0E04               	movlw	4
 42031  010C74  1807               	xorwf	_pBDTEntryIn,w,c
 42032  010C76  6E07               	movwf	_pBDTEntryIn,c
 42033  010C78  5008               	movf	_pBDTEntryIn+1,w,c
 42034  010C7A  6E08               	movwf	_pBDTEntryIn+1,c
 42035                           
 42036                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 42037  010C7C  0E08               	movlw	8
 42038  010C7E  182B               	xorwf	_USBDeviceState,w,c	;volatile
 42039  010C80  A4D8               	btfss	status,2,c
 42040  010C82  D00C               	goto	i2l341
 42041                           
 42042                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 42043  010C84  010D               	movlb	13	; () banked
 42044  010C86  5132               	movf	50,w,b	;volatile
 42045  010C88  0B7F               	andlw	127
 42046  010C8A  010F               	movlb	15	; () banked
 42047  010C8C  6F38               	movwf	56,b	;volatile
 42048                           
 42049                           ; BSR set to: 15
 42050                           ;usb_device.c: 2609: if(UADDR != 0u)
 42051  010C8E  5138               	movf	56,w,b	;volatile
 42052  010C90  B4D8               	btfsc	status,2,c
 42053  010C92  D002               	goto	i2l340
 42054                           
 42055                           ; BSR set to: 15
 42056                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 42057  010C94  0E10               	movlw	16
 42058  010C96  D001               	goto	L78
 42059  010C98                     i2l340:
 42060                           
 42061                           ; BSR set to: 15
 42062                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 42063                           
 42064                           ; BSR set to: 15
 42065  010C98  0E04               	movlw	4
 42066  010C9A                     L78:
 42067  010C9A  6E2B               	movwf	_USBDeviceState,c	;volatile
 42068  010C9C                     i2l341:
 42069                           
 42070                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 42071                           
 42072                           ; BSR set to: 15
 42073                           
 42074                           ; BSR set to: 15
 42075  010C9C  0429               	decf	_controlTransferState,w,c	;volatile
 42076  010C9E  A4D8               	btfss	status,2,c
 42077  010CA0  D03A               	goto	i2l342
 42078                           
 42079                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 42080  010CA2  EE20 F002          	lfsr	2,2
 42081  010CA6  5007               	movf	_pBDTEntryIn,w,c
 42082  010CA8  26D9               	addwf	fsr2l,f,c
 42083  010CAA  5008               	movf	_pBDTEntryIn+1,w,c
 42084  010CAC  22DA               	addwfc	fsr2h,f,c
 42085  010CAE  0E38               	movlw	56
 42086  010CB0  6EDE               	movwf	postinc2,c
 42087  010CB2  0E0D               	movlw	13
 42088  010CB4  6EDD               	movwf	postdec2,c
 42089                           
 42090                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 42091  010CB6  EC9B  F084         	call	_USBCtrlTrfTxService	;wreg free
 42092                           
 42093                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 42094  010CBA  0E02               	movlw	2
 42095  010CBC  182A               	xorwf	_shortPacketStatus,w,c	;volatile
 42096  010CBE  A4D8               	btfss	status,2,c
 42097  010CC0  D00D               	goto	i2l343
 42098                           
 42099                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 42100  010CC2  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 42101  010CC6  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 42102  010CCA  0E04               	movlw	4
 42103  010CCC  6EDF               	movwf	indf2,c
 42104                           
 42105                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 42106  010CCE  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 42107  010CD2  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 42108  010CD6  0E00               	movlw	0
 42109  010CD8  8EDB               	bsf	plusw2,7,c
 42110                           
 42111                           ;usb_device.c: 2635: }
 42112  010CDA  0012               	return	
 42113  010CDC                     i2l343:
 42114                           
 42115                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 42116  010CDC  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 42117  010CDE  A4D8               	btfss	status,2,c
 42118  010CE0  D00D               	goto	i2l345
 42119                           
 42120                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 42121  010CE2  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 42122  010CE6  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 42123  010CEA  0E48               	movlw	72
 42124  010CEC  6EDF               	movwf	indf2,c
 42125                           
 42126                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 42127  010CEE  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 42128  010CF2  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 42129  010CF6  0E00               	movlw	0
 42130  010CF8  8EDB               	bsf	plusw2,7,c
 42131                           
 42132                           ;usb_device.c: 2642: }
 42133  010CFA  0012               	return	
 42134  010CFC                     i2l345:
 42135                           
 42136                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 42137  010CFC  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 42138  010D00  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 42139  010D04  0E08               	movlw	8
 42140  010D06  6EDF               	movwf	indf2,c
 42141                           
 42142                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 42143  010D08  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 42144  010D0C  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 42145  010D10  0E00               	movlw	0
 42146  010D12  8EDB               	bsf	plusw2,7,c
 42147                           
 42148                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 42149  010D14  0012               	return	
 42150  010D16                     i2l342:
 42151                           
 42152                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 42153  010D16  0101               	movlb	1	; () banked
 42154  010D18  BF34               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 42155                           
 42156                           ; BSR set to: 1
 42157                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 42158                           
 42159                           ; BSR set to: 1
 42160                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 42161  010D1A  9F34               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 42162                           
 42163                           ; BSR set to: 1
 42164                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 42165                           
 42166                           ; BSR set to: 1
 42167  010D1C  0E00               	movlw	0
 42168  010D1E  6E29               	movwf	_controlTransferState,c	;volatile
 42169  010D20  0012               	return	
 42170  010D22                     __end_of_USBCtrlTrfInHandler:
 42171                           	opt stack 0
 42172                           tosu	equ	0xFFF
 42173                           tosh	equ	0xFFE
 42174                           tosl	equ	0xFFD
 42175                           pclatu	equ	0xFFB
 42176                           pclath	equ	0xFFA
 42177                           tblptru	equ	0xFF8
 42178                           tblptrh	equ	0xFF7
 42179                           tblptrl	equ	0xFF6
 42180                           tablat	equ	0xFF5
 42181                           prodh	equ	0xFF4
 42182                           prodl	equ	0xFF3
 42183                           intcon	equ	0xFF2
 42184                           indf0	equ	0xFEF
 42185                           postinc0	equ	0xFEE
 42186                           fsr0h	equ	0xFEA
 42187                           fsr0l	equ	0xFE9
 42188                           wreg	equ	0xFE8
 42189                           indf1	equ	0xFE7
 42190                           postdec1	equ	0xFE5
 42191                           plusw1	equ	0xFE3
 42192                           fsr1h	equ	0xFE2
 42193                           fsr1l	equ	0xFE1
 42194                           indf2	equ	0xFDF
 42195                           postinc2	equ	0xFDE
 42196                           postdec2	equ	0xFDD
 42197                           plusw2	equ	0xFDB
 42198                           fsr2h	equ	0xFDA
 42199                           fsr2l	equ	0xFD9
 42200                           status	equ	0xFD8
 42201                           
 42202 ;; *************** function _USBCtrlTrfTxService *****************
 42203 ;; Defined at:
 42204 ;;		line 1773 in file "usb_device.c"
 42205 ;; Parameters:    Size  Location     Type
 42206 ;;		None
 42207 ;; Auto vars:     Size  Location     Type
 42208 ;;  byteToSend      1    0[COMRAM] unsigned char 
 42209 ;; Return value:  Size  Location     Type
 42210 ;;                  1    wreg      void 
 42211 ;; Registers used:
 42212 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 42213 ;; Tracked objects:
 42214 ;;		On entry : 0/0
 42215 ;;		On exit  : 0/0
 42216 ;;		Unchanged: 0/0
 42217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42222 ;;Total ram usage:        1 bytes
 42223 ;; Hardware stack levels used:    1
 42224 ;; This function calls:
 42225 ;;		Nothing
 42226 ;; This function is called by:
 42227 ;;		_USBCtrlEPAllowDataStage
 42228 ;;		_USBCtrlTrfInHandler
 42229 ;; This function uses a non-reentrant model
 42230 ;;
 42231                           
 42232                           	psect	text163
 42233  010936                     __ptext163:
 42234                           	opt stack 0
 42235  010936                     _USBCtrlTrfTxService:
 42236                           	opt stack 12
 42237                           
 42238                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 42239                           
 42240                           ;incstack = 0
 42241  010936  0E08               	movlw	8
 42242  010938  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 42243                           
 42244                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 42245  01093A  5006               	movf	_inPipes+5,w,c	;volatile
 42246  01093C  E110               	bnz	i2l11222
 42247  01093E  0E08               	movlw	8
 42248  010940  5C05               	subwf	_inPipes+4,w,c	;volatile
 42249  010942  B0D8               	btfsc	status,0,c
 42250  010944  D00C               	goto	i2l247
 42251                           
 42252                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 42253  010946  C005  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 42254                           
 42255                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 42256  01094A  502A               	movf	_shortPacketStatus,w,c	;volatile
 42257  01094C  A4D8               	btfss	status,2,c
 42258  01094E  D002               	goto	i2l245
 42259                           
 42260                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 42261  010950  0E01               	movlw	1
 42262  010952  D004               	goto	L79
 42263  010954                     i2l245:
 42264                           
 42265                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 42266  010954  042A               	decf	_shortPacketStatus,w,c	;volatile
 42267  010956  A4D8               	btfss	status,2,c
 42268  010958  D002               	goto	i2l247
 42269                           
 42270                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 42271  01095A  0E02               	movlw	2
 42272  01095C                     L79:
 42273  01095C  6E2A               	movwf	_shortPacketStatus,c	;volatile
 42274  01095E                     i2l247:
 42275  01095E                     i2l11222:
 42276                           
 42277                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 42278  01095E  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 42279  010960  5E05               	subwf	_inPipes+4,f,c	;volatile
 42280  010962  0E00               	movlw	0
 42281  010964  5A06               	subwfb	_inPipes+5,f,c	;volatile
 42282                           
 42283                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 42284  010966  EE20 F001          	lfsr	2,1
 42285  01096A  5007               	movf	_pBDTEntryIn,w,c
 42286  01096C  26D9               	addwf	fsr2l,f,c
 42287  01096E  5008               	movf	_pBDTEntryIn+1,w,c
 42288  010970  22DA               	addwfc	fsr2h,f,c
 42289  010972  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 42290                           
 42291                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 42292  010976  0E38               	movlw	56
 42293  010978  0101               	movlb	1	; () banked
 42294  01097A  6F77               	movwf	_pDst& (0+255),b
 42295  01097C  0E0D               	movlw	13
 42296  01097E  6F78               	movwf	(_pDst+1)& (0+255),b
 42297                           
 42298                           ; BSR set to: 1
 42299                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 42300  010980  A004               	btfss	_inPipes+3,0,c	;volatile
 42301  010982  D01D               	goto	i2l249
 42302  010984  D03C               	goto	i2l253
 42303  010986                     
 42304                           ; BSR set to: 1
 42305                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 42306                           
 42307                           ; BSR set to: 1
 42308  010986  C001  FFF6         	movff	_inPipes,tblptrl	;volatile
 42309  01098A  C002  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 42310  01098E  0E00               	movlw	low (__mediumconst shr (0+16))
 42311  010990  6EF8               	movwf	tblptru,c
 42312  010992  C177  FFD9         	movff	_pDst,fsr2l
 42313  010996  C178  FFDA         	movff	_pDst+1,fsr2h
 42314  01099A  0E0E               	movlw	(high __ramtop+-1)
 42315  01099C  64F7               	cpfsgt	tblptrh,c
 42316  01099E  D003               	bra	i2u925_47
 42317  0109A0  0008               	tblrd		*
 42318  0109A2  50F5               	movf	tablat,w,c
 42319  0109A4  D005               	bra	i2u925_40
 42320  0109A6                     i2u925_47:
 42321  0109A6  CFF6 FFE9          	movff	tblptrl,fsr0l
 42322  0109AA  CFF7 FFEA          	movff	tblptrh,fsr0h
 42323  0109AE  50EF               	movf	indf0,w,c
 42324  0109B0                     i2u925_40:
 42325  0109B0  6EDF               	movwf	indf2,c
 42326  0109B2  4A01               	infsnz	_inPipes,f,c	;volatile
 42327  0109B4  2A02               	incf	_inPipes+1,f,c	;volatile
 42328  0109B6  0101               	movlb	1	; () banked
 42329  0109B8  4B77               	infsnz	_pDst& (0+255),f,b
 42330  0109BA  2B78               	incf	(_pDst+1)& (0+255),f,b
 42331                           
 42332                           ; BSR set to: 1
 42333                           ;usb_device.c: 1816: byteToSend--;
 42334  0109BC  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 42335  0109BE                     i2l249:
 42336                           
 42337                           ; BSR set to: 1
 42338                           
 42339                           ; BSR set to: 1
 42340  0109BE  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 42341  0109C0  B4D8               	btfsc	status,2,c
 42342  0109C2  0012               	return	
 42343  0109C4  D7E0               	goto	i2l250
 42344  0109C6                     
 42345                           ; BSR set to: 1
 42346                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 42347                           
 42348                           ; BSR set to: 1
 42349  0109C6  C001  FFF6         	movff	_inPipes,tblptrl	;volatile
 42350  0109CA  C002  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 42351  0109CE  0E00               	movlw	low (__mediumconst shr (0+16))
 42352  0109D0  6EF8               	movwf	tblptru,c
 42353  0109D2  C177  FFD9         	movff	_pDst,fsr2l
 42354  0109D6  C178  FFDA         	movff	_pDst+1,fsr2h
 42355  0109DA  0E0E               	movlw	(high __ramtop+-1)
 42356  0109DC  64F7               	cpfsgt	tblptrh,c
 42357  0109DE  D003               	bra	i2u927_47
 42358  0109E0  0008               	tblrd		*
 42359  0109E2  50F5               	movf	tablat,w,c
 42360  0109E4  D005               	bra	i2u927_40
 42361  0109E6                     i2u927_47:
 42362  0109E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 42363  0109EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 42364  0109EE  50EF               	movf	indf0,w,c
 42365  0109F0                     i2u927_40:
 42366  0109F0  6EDF               	movwf	indf2,c
 42367  0109F2  4A01               	infsnz	_inPipes,f,c	;volatile
 42368  0109F4  2A02               	incf	_inPipes+1,f,c	;volatile
 42369  0109F6  0101               	movlb	1	; () banked
 42370  0109F8  4B77               	infsnz	_pDst& (0+255),f,b
 42371  0109FA  2B78               	incf	(_pDst+1)& (0+255),f,b
 42372                           
 42373                           ; BSR set to: 1
 42374                           ;usb_device.c: 1824: byteToSend--;
 42375  0109FC  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 42376  0109FE                     i2l253:
 42377                           
 42378                           ; BSR set to: 1
 42379                           
 42380                           ; BSR set to: 1
 42381  0109FE  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 42382  010A00  B4D8               	btfsc	status,2,c
 42383  010A02  0012               	return	
 42384  010A04  D7E0               	goto	i2l254
 42385  010A06                     __end_of_USBCtrlTrfTxService:
 42386                           	opt stack 0
 42387                           tosu	equ	0xFFF
 42388                           tosh	equ	0xFFE
 42389                           tosl	equ	0xFFD
 42390                           pclatu	equ	0xFFB
 42391                           pclath	equ	0xFFA
 42392                           tblptru	equ	0xFF8
 42393                           tblptrh	equ	0xFF7
 42394                           tblptrl	equ	0xFF6
 42395                           tablat	equ	0xFF5
 42396                           prodh	equ	0xFF4
 42397                           prodl	equ	0xFF3
 42398                           intcon	equ	0xFF2
 42399                           indf0	equ	0xFEF
 42400                           postinc0	equ	0xFEE
 42401                           fsr0h	equ	0xFEA
 42402                           fsr0l	equ	0xFE9
 42403                           wreg	equ	0xFE8
 42404                           indf1	equ	0xFE7
 42405                           postdec1	equ	0xFE5
 42406                           plusw1	equ	0xFE3
 42407                           fsr1h	equ	0xFE2
 42408                           fsr1l	equ	0xFE1
 42409                           indf2	equ	0xFDF
 42410                           postinc2	equ	0xFDE
 42411                           postdec2	equ	0xFDD
 42412                           plusw2	equ	0xFDB
 42413                           fsr2h	equ	0xFDA
 42414                           fsr2l	equ	0xFD9
 42415                           status	equ	0xFD8
 42416                           tosu	equ	0xFFF
 42417                           tosh	equ	0xFFE
 42418                           tosl	equ	0xFFD
 42419                           pclatu	equ	0xFFB
 42420                           pclath	equ	0xFFA
 42421                           tblptru	equ	0xFF8
 42422                           tblptrh	equ	0xFF7
 42423                           tblptrl	equ	0xFF6
 42424                           tablat	equ	0xFF5
 42425                           prodh	equ	0xFF4
 42426                           prodl	equ	0xFF3
 42427                           intcon	equ	0xFF2
 42428                           indf0	equ	0xFEF
 42429                           postinc0	equ	0xFEE
 42430                           fsr0h	equ	0xFEA
 42431                           fsr0l	equ	0xFE9
 42432                           wreg	equ	0xFE8
 42433                           indf1	equ	0xFE7
 42434                           postdec1	equ	0xFE5
 42435                           plusw1	equ	0xFE3
 42436                           fsr1h	equ	0xFE2
 42437                           fsr1l	equ	0xFE1
 42438                           indf2	equ	0xFDF
 42439                           postinc2	equ	0xFDE
 42440                           postdec2	equ	0xFDD
 42441                           plusw2	equ	0xFDB
 42442                           fsr2h	equ	0xFDA
 42443                           fsr2l	equ	0xFD9
 42444                           status	equ	0xFD8
 42445                           
 42446                           	psect	text164
 42447  000000                     __ptext164:
 42448                           	opt stack 0
 42449                           tosu	equ	0xFFF
 42450                           tosh	equ	0xFFE
 42451                           tosl	equ	0xFFD
 42452                           pclatu	equ	0xFFB
 42453                           pclath	equ	0xFFA
 42454                           tblptru	equ	0xFF8
 42455                           tblptrh	equ	0xFF7
 42456                           tblptrl	equ	0xFF6
 42457                           tablat	equ	0xFF5
 42458                           prodh	equ	0xFF4
 42459                           prodl	equ	0xFF3
 42460                           intcon	equ	0xFF2
 42461                           indf0	equ	0xFEF
 42462                           postinc0	equ	0xFEE
 42463                           fsr0h	equ	0xFEA
 42464                           fsr0l	equ	0xFE9
 42465                           wreg	equ	0xFE8
 42466                           indf1	equ	0xFE7
 42467                           postdec1	equ	0xFE5
 42468                           plusw1	equ	0xFE3
 42469                           fsr1h	equ	0xFE2
 42470                           fsr1l	equ	0xFE1
 42471                           indf2	equ	0xFDF
 42472                           postinc2	equ	0xFDE
 42473                           postdec2	equ	0xFDD
 42474                           plusw2	equ	0xFDB
 42475                           fsr2h	equ	0xFDA
 42476                           fsr2l	equ	0xFD9
 42477                           status	equ	0xFD8
 42478                           
 42479                           	psect	rparam
 42480  0000                     tosu	equ	0xFFF
 42481                           tosh	equ	0xFFE
 42482                           tosl	equ	0xFFD
 42483                           pclatu	equ	0xFFB
 42484                           pclath	equ	0xFFA
 42485                           tblptru	equ	0xFF8
 42486                           tblptrh	equ	0xFF7
 42487                           tblptrl	equ	0xFF6
 42488                           tablat	equ	0xFF5
 42489                           prodh	equ	0xFF4
 42490                           prodl	equ	0xFF3
 42491                           intcon	equ	0xFF2
 42492                           indf0	equ	0xFEF
 42493                           postinc0	equ	0xFEE
 42494                           fsr0h	equ	0xFEA
 42495                           fsr0l	equ	0xFE9
 42496                           wreg	equ	0xFE8
 42497                           indf1	equ	0xFE7
 42498                           postdec1	equ	0xFE5
 42499                           plusw1	equ	0xFE3
 42500                           fsr1h	equ	0xFE2
 42501                           fsr1l	equ	0xFE1
 42502                           indf2	equ	0xFDF
 42503                           postinc2	equ	0xFDE
 42504                           postdec2	equ	0xFDD
 42505                           plusw2	equ	0xFDB
 42506                           fsr2h	equ	0xFDA
 42507                           fsr2l	equ	0xFD9
 42508                           status	equ	0xFD8
 42509                           
 42510                           	psect	temp
 42511  00005B                     btemp:
 42512                           	opt stack 0
 42513  00005B                     	ds	1
 42514  0000                     int$flags	set	btemp
 42515  0000                     wtemp8	set	btemp+1
 42516  0000                     ttemp5	set	btemp+1
 42517  0000                     ttemp6	set	btemp+4
 42518  0000                     ttemp7	set	btemp+8
 42519                           tosu	equ	0xFFF
 42520                           tosh	equ	0xFFE
 42521                           tosl	equ	0xFFD
 42522                           pclatu	equ	0xFFB
 42523                           pclath	equ	0xFFA
 42524                           tblptru	equ	0xFF8
 42525                           tblptrh	equ	0xFF7
 42526                           tblptrl	equ	0xFF6
 42527                           tablat	equ	0xFF5
 42528                           prodh	equ	0xFF4
 42529                           prodl	equ	0xFF3
 42530                           intcon	equ	0xFF2
 42531                           indf0	equ	0xFEF
 42532                           postinc0	equ	0xFEE
 42533                           fsr0h	equ	0xFEA
 42534                           fsr0l	equ	0xFE9
 42535                           wreg	equ	0xFE8
 42536                           indf1	equ	0xFE7
 42537                           postdec1	equ	0xFE5
 42538                           plusw1	equ	0xFE3
 42539                           fsr1h	equ	0xFE2
 42540                           fsr1l	equ	0xFE1
 42541                           indf2	equ	0xFDF
 42542                           postinc2	equ	0xFDE
 42543                           postdec2	equ	0xFDD
 42544                           plusw2	equ	0xFDB
 42545                           fsr2h	equ	0xFDA
 42546                           fsr2l	equ	0xFD9
 42547                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4446
    Data        135
    BSS         957
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    106     160
    BANK1           256      4     221
    BANK2           256      0     200
    BANK3           256      0      64
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), STR_6(CODE[6]), STR_5(CODE[9]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), dc_manual(CODE[80]), dc_zero(CODE[80]), 
		 -> STR_2(CODE[7]), STR_1(CODE[9]), dc_arc2(CODE[80]), dc_arc1(CODE[80]), 
		 -> dc_divide2(CODE[80]), dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), 
		 -> dc_main(CODE[80]), ReceivedDataBuffer(BANK2[64]), os.current_position_in_degrees(BANK0[2]), config(BANK1[22]), 
		 -> os.current_position_in_steps(BANK0[4]), os(BANK0[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), STR_6(CODE[6]), STR_5(CODE[9]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), dc_manual(CODE[80]), dc_zero(CODE[80]), 
		 -> STR_2(CODE[7]), STR_1(CODE[9]), dc_arc2(CODE[80]), dc_arc1(CODE[80]), 
		 -> dc_divide2(CODE[80]), dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), 
		 -> dc_main(CODE[80]), ReceivedDataBuffer(BANK2[64]), os.current_position_in_degrees(BANK0[2]), config(BANK1[22]), 
		 -> os.current_position_in_steps(BANK0[4]), os(BANK0[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_modify_file@root(COMRAM[32]), fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_modify_file@root(COMRAM[32]), fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_display_prepare
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    _fat_format->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_nonzero_steps_from_degrees->_motor_steps_from_degrees
    _motor_steps_from_degrees->___fldiv
    _motor_steps_from_degrees->___flmul
    _motor_divide_jump_to_nearest->_motor_go_to_steps_position
    _motor_divide_jump->_motor_go_to_steps_position
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_arc_move->_motor_schedule_command
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    ___fldiv->___xxtofl
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_MSDCheckForErrorCases
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_short
    __parse_command_short->_motor_go_to_steps_position
    _motor_go_to_steps_position->_motor_schedule_command
    __parse_command_long->__parse_jump_steps
    __parse_jump_steps->_motor_schedule_command
    _motor_schedule_command->_motor_nonzero_steps_from_degrees

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  357050
                                              0 BANK1      4     4      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0   54593
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
                           _i2c_init
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   13160
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     270
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     208
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   12890
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   30772
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    8195
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   22577
                                             36 BANK0      2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   20335
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    5486
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     664
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    5716
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    7134
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     417
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     239
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     239
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    3085
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     369
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2586
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    2377
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0    7576
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    5267
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    2417
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    2309
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (5) __i2c_write                                           5     2      3    2272
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0     602
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0   87028
                                            100 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
         _motor_go_to_steps_position
   _motor_nonzero_steps_from_degrees
             _motor_schedule_command
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_nonzero_steps_from_degrees                     8     4      4   10977
                                             47 BANK0      8     4      4
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (3) _motor_steps_from_degrees                             8     4      4   10670
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   31251
                                             90 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   17059
                                             90 BANK0      7     7      0
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4   10774
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_change_speed                                   2     0      2     447
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       5     5      0   15722
                                             62 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   53297
                                             92 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    8091
                                             51 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    7852
                                             39 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     720
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3307
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    5913
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    5516
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   12731
                                             77 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    8311
                                             53 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     650
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    2706
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1849
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     657
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     641
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     653
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     198
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0   11097
                                             39 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2140
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1169
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     169
                                             14 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3817
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3694
                                             18 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      99
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0   93974
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0   93974
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   88242
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   45026
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   42978
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0    8914
                                             17 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     231
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                            9     0      9     308
                                              0 BANK0      9     0      9
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   16190
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2847
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    2048
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1983
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    7815
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    7457
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    5939
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    3240
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1614
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1580
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1592
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1496
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     509
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      77
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      77
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   41379
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   19094
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    8782
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    7903
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     724
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3    1071
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     166
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   18740
                                             91 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   11302
                                             90 BANK0      1     1      0
         _motor_go_to_steps_position
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) _motor_go_to_steps_position                          28    24      4    6115
                                             62 BANK0     28    24      4
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6    6436
                                             74 BANK0      7     1      6
                  __parse_jump_steps
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6    5963
                                             62 BANK0     12     6      6
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) _motor_schedule_command                               7     1      6    5156
                                             55 BANK0      7     1      6
                            ___fltol (ARG)
                         __motor_run
                 _motor_items_in_cue
   _motor_nonzero_steps_from_degrees (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          11     5      6     602
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3545
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   58258
                                             31 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0      91
                                              0 COMRAM    24    24      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   58167
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   33624
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   33174
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   25127
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    8493
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    8633
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7955
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_schedule_command
             ___fltol (ARG)
             __motor_run (ARG)
             _motor_items_in_cue (ARG)
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
       __parse_command_short
         _motor_go_to_steps_position
           _motor_schedule_command
             ___fltol (ARG)
             __motor_run (ARG)
             _motor_items_in_cue (ARG)
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_schedule_command
           ___fltol (ARG)
           __motor_run (ARG)
           _motor_items_in_cue (ARG)
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___flneg
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___fltol
           ___lmul
           ___xxtofl
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___fltol
             ___lmul
             ___xxtofl
         _strlen (ARG)
       _strlen
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
         ___lmul
         ___xxtofl
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _motor_schedule_command
         ___fltol (ARG)
         __motor_run (ARG)
         _motor_items_in_cue (ARG)
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           ___fltol (ARG)
           __motor_run (ARG)
           _motor_items_in_cue (ARG)
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_divide_jump_to_nearest
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           ___fltol (ARG)
           __motor_run (ARG)
           _motor_items_in_cue (ARG)
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_go_to_steps_position
       _motor_schedule_command
         ___fltol (ARG)
         __motor_run (ARG)
         _motor_items_in_cue (ARG)
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_nonzero_steps_from_degrees
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_schedule_command
       ___fltol (ARG)
       __motor_run (ARG)
       _motor_items_in_cue (ARG)
       _motor_nonzero_steps_from_degrees (ARG)
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
     _motor_stop
   _motor_process_cue
     __motor_run
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _display_init
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_init
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      40      11       25.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      DD       7       86.3%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6A      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2DF      31        0.0%
DATA                 0      0     4DF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Feb 21 23:56:38 2019

                               _motor_next_speed_check 0147  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0086  
                                         ___fldiv@bexp 0085  
                                         ___fldiv@sign 007E  
                                  __system_timer0_init 2A78  
                            __end_of_motor_divide_jump 1630  
                                                   _os 00D0  
                                        _USBDeviceInit EA08  
                                   _USBCheckHIDRequest 0866  
               __end_of__encoder_next_divide_step_size 2A4A  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 2A1C  
                                     ??__flash_is_busy 0071  
                                         __CFG_CP0$OFF 000000  
                                  __end_of_system_init 0178  
                             ?_i2c_display_write_fixed 0065  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 003D  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 003F  
                                                  l206 2982  
                                                  l207 2980  
                                                  l145 EA52  
                                                  l147 EA7A  
                                                  l149 EAB4  
                          __end_of_USBStdGetDscHandler F3F8  
                                                  l184 FB9A  
                                                  l192 FAD8  
                                                  l186 FBC4  
                                                  l602 D6E6  
                                                  l188 FC42  
                                                  l700 CD04  
                                                  l620 1C6E  
                                                  l612 F2C2  
                                                  l701 CA56  
                                                  l613 F2BC  
                                                  l605 D6EC  
                                                  l710 CB4C  
                                                  l630 C098  
                                                  l622 1C8A  
                                                  l703 CD26  
                                                  l711 CBB6  
                                                  l631 BD1A  
                                                  l615 F2C6  
                                                  l720 CCEC  
                                                  l712 CBB2  
                                                  l704 CAFC  
                                                  l640 BE58  
                                                  l624 1C96  
                                                  l608 F216  
                                                  l641 BE62  
                                                  l625 1C9C  
                                                  l714 CBCC  
                                                  l706 CB00  
                                                  l650 BF54  
                                                  l642 BE84  
                                                  l634 BD2A  
                                                  l626 1CA2  
                                                  l570 D704  
                                                  l731 FEF0  
                                                  l715 CC4C  
                                                  l619 1CAA  
                                                  l571 D4DC  
                                                  l708 CB28  
                                                  l660 BFF8  
                                                  l652 BF88  
                                                  l644 BEB2  
                                                  l636 BD3A  
                                                  l580 D5E2  
                                                  l709 CB70  
                                                  l661 C00C  
                                                  l637 BD44  
                                                  l901 1F92  
                                                  l734 FEFE  
                                                  l726 FEA0  
                                                  l718 CCBC  
                                                  l670 C090  
                                                  l662 C02A  
                                                  l654 BFA4  
                                                  l646 BEF2  
                                                  l582 D5F6  
                                                  l735 FF26  
                                                  l719 CCD4  
                                                  l639 BD96  
                                                  l591 D66A  
                                                  l575 D4FE  
                                                  l728 FEB4  
                                                  l664 C056  
                                                  l656 BFBC  
                                                  l592 D66E  
                                                  l753 FF7C  
                                                  l737 FF5A  
                                                  l681 DF12  
                                                  l665 C030  
                                                  l649 BF26  
                                                  l593 D694  
                                                  l577 D61C  
                                                  l770 F5C8  
                                                  l738 FF44  
                                                  l690 DE2A  
                                                  l682 DD5A  
                                                  l666 C040  
                                                  l578 D602  
                                                  l586 D720  
                                                  l675 0EE4  
                                                  l763 F612  
                                                  l771 F604  
                                                  l691 DE54  
                                                  l667 C054  
                                                  l587 D63C  
                                                  l579 D5DA  
                                                  l764 F57C  
                                                  l684 DF36  
                                                  l692 DE82  
                                                  _BDT 000D00  
                                                  l677 0EFA  
                                                  l757 F550  
                                                  l749 FF6C  
                                                  l693 DE94  
                                                  l685 DDB0  
                                                  l589 D648  
                                                  l861 F036  
                                                  l766 F584  
                                                  l694 DE9A  
                                                  l686 DDBC  
                                                  l767 F592  
                                                  l695 DEAE  
                                                  l687 DDC6  
                                                  l863 F058  
                                                  l768 F5A6  
                                                  l696 DEFA  
                                                  l688 DDDA  
                                                  l945 11BC  
                                                  l769 F5B4  
                                                  l865 EF50  
                                                  l866 F02A  
                                                  l939 1158  
                                                  l859 EF30  
                                                  l892 1FA4  
                                                  l868 F030  
                                                  l981 2C9E  
                                                  l893 1F68  
                                                  l895 1F74  
                                                  l899 1F86  
                                                  _LBA 0157  
                                        ?_display_init 002E  
                                                  _PR2 000FCB  
                                                  _LUN 01A2  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                   api_prepare@command 0074  
                                           _USBSuspend 29EC  
                               __end_of_display_update 27E2  
                                 USBStdSetCfgHandler@i 0045  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks EC96  
                                  ?_USBCheckHIDRequest 002E  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 002B  
                                         ___flmul@aexp 007B  
                                         ___flmul@bexp 0080  
                                         ___flmul@sign 007A  
                                         ___flmul@temp 0085  
                                         ___flmul@prod 0081  
                            __size_of_i2c_display_init 0050  
                                ??_USBCtrlTrfRxService 002E  
                             __size_ofi2_USBDeviceInit 0144  
                             USBEnableEndpoint@options 0036  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 002E  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                          __flash_write_to_buffer@data 0075  
                                                 l1121 2D0C  
                                                 l1106 2D14  
                                                 l1211 21BA  
                                                 l1300 D7F8  
                                                 l1212 219C  
                                                 l1302 D88E  
                                                 l1311 D920  
                                                 l2111 266A  
                                                 l1312 D8F0  
                                                 l1400 AA46  
                                                 l2112 2646  
                                                 l1305 D872  
                                                 l1217 1908  
                                                 l2113 267A  
                                                 l2202 0DF4  
                                                 l1306 D886  
                                                 l1410 AB58  
                                                 l1402 AA8E  
                                                 l1138 2446  
                                                 l2114 2658  
                                                 l1307 D8E6  
                                                 l1411 AB96  
                                                 l1403 AB00  
                                                 l1331 A266  
                                                 l1139 2428  
                                                 l2204 0E2E  
                                                 l3020 04D6  
                                                 l3012 0446  
                                                 l1308 D8A0  
                                                 l1412 AC5E  
                                                 l1404 AAD0  
                                                 l1340 A2EC  
                                                 l2221 E53A  
                                                 l3021 04CA  
                                                 l1309 D8E4  
                                                 l1317 F79C  
                                                 l1421 AD7A  
                                                 l1413 AC26  
                                                 l1333 A270  
                                                 l1501 18C2  
                                                 l2125 1716  
                                                 l2206 0E6E  
                                                 l2214 E5BE  
                                                 l2134 1428  
                                                 l3014 04B2  
                                                 l1326 AE0A  
                                                 l1406 AB2E  
                                                 l1350 A362  
                                                 l2231 E616  
                                                 l2207 0E38  
                                                 l2119 200E  
                                                 l3023 04F2  
                                                 l3015 04A2  
                                                 l1423 ADA2  
                                                 l1415 ACD2  
                                                 l1407 ABD4  
                                                 l1351 A380  
                                                 l1335 AE64  
                                                 l1327 A23C  
                                                 l1503 18E2  
                                                 l2240 E6F8  
                                                 l2232 E61C  
                                                 l2208 0E44  
                                                 l2224 E58C  
                                                 l1416 ACA2  
                                                 l1408 AB4C  
                                                 l1360 A460  
                                                 l1352 A3C2  
                                                 l1336 A29A  
                                                 l1328 A27A  
                                                 l2128 174C  
                                                 l2241 E6FC  
                                                 l2233 E622  
                                                 l2217 E4B6  
                                                 l2137 1466  
                                                 l1281 02B2  
                                                 l1425 ADCC  
                                                 l1409 ABEA  
                                                 l1361 A4CE  
                                                 l1337 A2E2  
                                                 l1329 A25C  
                                                 l2250 26F8  
                                                 l2242 E700  
                                                 l2234 E628  
                                                 l1274 24AE  
                                                 l1282 029C  
                                                 l1290 254A  
                                                 l1418 AD44  
                                                 l1370 A638  
                                                 l1362 A49E  
                                                 l1354 A410  
                                                 l1346 A33A  
                                                 l2243 E704  
                                                 l2235 E62E  
                                                 l2219 E4C8  
                                                 l2171 05BA  
                                                 l1531 2BD4  
                                                 l1427 ADDA  
                                                 l1419 AD6C  
                                                 l1347 A36C  
                                                 l1339 A31C  
                                                 l1435 27B8  
                                                 l2228 E70C  
                                                 l2244 E708  
                                                 l2236 E634  
                                                 l1276 24BA  
                                                 l3204 21E8  
                                                 l1284 0310  
                                                 l3300 CEBA  
                                                 l1380 A7BE  
                                                 l1372 A70E  
                                                 l1364 A54E  
                                                 l1356 A44C  
                                                 l1348 A358  
                                                 l2500 1AE2  
                                                 l2237 E688  
                                                 l2229 E60E  
                                                 l3205 21E0  
                                                 l1285 02E0  
                                                 l1429 AE02  
                                                 l1381 A78E  
                                                 l1373 A6DE  
                                                 l1357 A438  
                                                 l2501 1AEC  
                                                 l1525 1F1E  
                                                 l1517 2286  
                                                 l2350 123E  
                                                 l2254 E96E  
                                                 l2422 CA16  
                                                 l2414 C81C  
                                                 l2238 E6DE  
                                                 l2190 F4E2  
                                                 l2174 0536  
                                                 l3230 C462  
                                                 l3214 25D0  
                                                 l3310 CF28  
                                                 l1390 A8A8  
                                                 l1366 A5DA  
                                                 l2510 1E06  
                                                 l2326 248E  
                                                 l1526 1F28  
                                                 l1518 2290  
                                                 l2415 C86C  
                                                 l2239 E6F2  
                                                 l2191 F484  
                                                 l2183 F416  
                                                 l2175 0544  
                                                 l3215 25C8  
                                                 l1295 D802  
                                                 l3303 CEF0  
                                                 l1391 A902  
                                                 l1383 A81C  
                                                 l1375 A726  
                                                 l1367 A5AA  
                                                 l1359 A442  
                                                 l2256 EA04  
                                                 l2248 26E8  
                                                 l2416 C8F6  
                                                 l2192 F518  
                                                 l3400 1DDE  
                                                 l2176 0558  
                                                 l1480 2304  
                                                 l3320 C114  
                                                 l3208 2208  
                                                 l3312 CF6C  
                                                 l3304 CED2  
                                                 l1392 A8B4  
                                                 l1376 A754  
                                                 l2432 15F6  
                                                 l2600 B1FA  
                                                 l1472 1B62  
                                                 l2249 26C6  
                                                 l2417 C946  
                                                 l2193 F49C  
                                                 l3401 1DA4  
                                                 l2177 056C  
                                                 l1481 22C4  
                                                 l1625 28DA  
                                                 l3241 C586  
                                                 l3321 C110  
                                                 l3209 2212  
                                                 l3313 CF90  
                                                 l1393 A95C  
                                                 l1385 A856  
                                                 l1377 A744  
                                                 l1369 A668  
                                                 l2505 27F8  
                                                 l1473 1B86  
                                                 l2418 C9EE  
                                                 l2194 F4B8  
                                                 l2186 F464  
                                                 l2178 057A  
                                                 l3242 C564  
                                                 l3234 C4AE  
                                                 l3322 C124  
                                                 l3218 25E8  
                                                 l3314 CFBA  
                                                 l1394 A92C  
                                                 l1386 A826  
                                                 l1378 A764  
                                                 l2610 B2C6  
                                                 l2419 C9B0  
                                                 l2179 059A  
                                                 l1483 22EC  
                                                 l3251 C5CC  
                                                 l3243 C572  
                                                 l3235 C4AA  
                                                 l3331 C342  
                                                 l3219 25F2  
                                                 l1299 D7DA  
                                                 l3315 CFC6  
                                                 l1379 A74C  
                                                 l2603 B228  
                                                 l2372 DC1A  
                                                 l2364 DB88  
                                                 l2348 1230  
                                                 l2188 F46A  
                                                 l3260 C69E  
                                                 l3252 C5D0  
                                                 l3244 C576  
                                                 l3340 C3BE  
                                                 l3332 C324  
                                                 l3324 C154  
                                                 l3412 2690  
                                                 l3316 CFC8  
                                                 l1396 AA02  
                                                 l1388 A88A  
                                                 l2620 B32C  
                                                 l1900 D2D6  
                           USBConfigureEndpoint@handle 0034  
                                                 l2373 DC1C  
                                                 l2365 DB98  
                                                 l3237 C50A  
                                                 l3229 C466  
                                                 l3341 C3DC  
                                                 l3325 C150  
                                                 l3413 268A  
                                                 l1397 A9CA  
                                                 l1389 A8F2  
                                                 l2429 15DA  
                                                 l2613 B344  
                                                 l2621 B33A  
                                                 l1901 D2E8  
                                                 l2374 DC86  
                                                 l2366 DBAC  
                                                 l3406 29D8  
                                                 l3262 C6B4  
                                                 l3238 C4CE  
                                                 l3326 C164  
                                                 l2614 B2FC  
                                                 l2606 B24C  
                                                 l1910 D31A  
                                                 l1902 D2FA  
                                                 l2375 DCC0  
                                                 l2367 DBB4  
                                                 l3407 29C6  
                                                 l3255 C66A  
                                                 l3247 C5E2  
                                                 l3343 C400  
                                                 l3327 C182  
                                                 l1399 AA76  
                                                 l2623 B362  
                                                 l2615 B30C  
                                                 l2607 B298  
                                                 l1911 D31E  
                                                 l1903 D2FE  
                                                 l2368 DC0E  
                                                 l3272 C724  
                                                 l3264 C6BE  
                                                 l3248 C5AA  
                                                 l3344 C41E  
                                                 l2800 0A9E  
                                                 l2480 1A68  
                                                 l2640 B3F4  
                                                 l2624 B374  
                                                 l2616 B31A  
                                                 l2552 AEE2  
                                                 l1920 D342  
                                                 l1912 D322  
                                                 l1904 D302  
                                                 l3257 C67A  
                                                 l2713 E0D0  
                                                 l2801 0AAC  
                                                 l2481 1A72  
                                                 l2545 B6FA  
                                                 l2641 B3FE  
                                                 l2561 AF6A  
                                                 l1921 D346  
                                                 l1913 D326  
                                                 l1905 D306  
                                                 l3338 C37A  
                                                 l2802 0AC2  
                                                 l2810 103C  
                                                 l3290 CD9C  
                                                 l2490 2A2A  
                                                 l2482 1A7C  
                                                 l2634 B416  
                                                 l2642 B40C  
                                                 l2626 B39C  
                                                 l2618 B352  
                                                 l2562 AF7A  
                                                 l1930 D366  
                                                 l1922 D34A  
                                                 l1914 D32A  
                                                 l1906 D30A  
                                                 l1498 1880  
                                                 l3371 EBD4  
                                                 l3291 CD98  
                                                 l2491 2A2E  
                                                 l2651 B4EA  
                                                 l2635 B3D2  
                                                 l2619 B322  
                                                 l2547 B090  
                                                 l2571 B00A  
                                                 l2555 AF08  
                                                 l1931 D36A  
                                                 l1923 D34E  
                                                 l1915 D32E  
                                                 l1907 D30E  
                                                 l1499 188A  
                                                 l3276 C74A  
                                                 l3372 EBC8  
                                                 l2716 E0F6  
                                                 l2476 1A86  
                                                 l2580 B742  
                                                 l2652 B4FC  
                                                 l2644 B440  
                                                 l2636 B3DE  
                                                 l2628 B3A6  
                                                 l2556 AF18  
                                                 l2548 AEA4  
                                                 l1932 D36E  
                                                 l1924 D352  
                                                 l1916 D332  
                                                 l1908 D312  
                                                 l3277 C752  
                                                 l3269 C6DE  
                                                 l2813 1070  
                                                 l3293 CDE6  
                                                 l2733 20D8  
                                                 l2477 1A52  
                                                 l2661 B554  
                                                 l2637 B3EC  
                                                 l2629 B3B0  
                                                 l2573 B02E  
                                                 l2565 AFA8  
                                                 l2549 AEB4  
                                                 l1933 D372  
                                                 l1925 D356  
                                                 l1917 D336  
                                                 l1909 D316  
                                                 l3278 C754  
                                                 l3374 EC12  
                                                 l2814 107E  
                                                 l2806 1016  
                                                 l3286 CD5C  
                                                 l2734 20EC  
                                                 l2486 2A32  
                                                 l2670 B5D8  
                                                 l2662 B568  
                                                 l2654 B51C  
                                                 l2646 B484  
                                                 l2582 B10E  
                                                 l2590 B104  
                                                 l2574 B03E  
                                                 l1950 202C  
                                                 l1934 D376  
                                                 l1926 D35A  
                                                 l1918 D33A  
                                                 l1870 07A4  
                                                 l3383 EC84  
                                                 l3375 EBFA  
                                                 l3367 EB94  
                                                 l2719 E10C  
                                                 l2815 1094  
                                                 l2807 102A  
                                                 l3295 CE0E  
                                                 l3287 CD58  
                                                 l2495 1AF6  
                                                 l2487 2A22  
                                                 l2479 1A5E  
                                                 l2639 B426  
                                                 l2583 B0B4  
                                                 l2567 AFCC  
                                                 l2559 AF46  
                                                 l1943 2034  
                                                 l1951 2030  
                                                 l1935 D37A  
                                                 l1927 D35E  
                                                 l1919 D33E  
                                                 l1871 07A8  
                                                 l3368 EBA4  
                                                 l3392 10AE  
                                                 l3296 CEBC  
                                                 l2496 1AC2  
                                                 l2672 B5E2  
                                                 l2656 B598  
                                                 l2664 B576  
                                                 l2592 B136  
                                                 l2584 B0D6  
                                                 l2568 AFDC  
                                                 l1944 2018  
                                                 l1936 D37E  
                                                 l1880 07CC  
                                                 l1872 07AC  
                                                 l1960 E356  
                                                 l3377 EC44  
                                                 l3369 EBC2  
                                                 l2809 1048  
                                                 l3297 CE6C  
                                                 l2489 2A26  
                                                 l2657 B532  
                                                 l2649 B4C8  
                                                 l2585 B0E4  
                                                 l2577 B06C  
                                                 l1937 D382  
                                                 l1929 D362  
                                                 l1865 07E4  
                                                 l1881 07D0  
                                                 l1873 07B0  
                                                 l3378 EC38  
                                                 l3394 10EA  
                                                 l3298 CE94  
                                                 l2498 1ACE  
                                                 l2682 B678  
                                                 l2674 B610  
                                                 l2666 B57E  
                                                 l2658 B546  
                                                 l2594 B174  
                                                 l1946 201C  
                                                 l1938 D386  
                                                 l1890 D25E  
                                                 l1882 07D4  
                                                 l1874 07B4  
                                                 l1866 0798  
                                                 l1962 E3E6  
                                                 l1970 E3AE  
                                                 l3395 112C  
                                                 l2499 1AD8  
                                                 l2683 B682  
                                                 l2667 B590  
                                                 l2587 B11C  
                                                 l1947 2020  
                                                 l1939 D38A  
                                                 l1883 07D8  
                                                 l1875 07B8  
                                                 l1971 E3B2  
                                                 l1963 E392  
                                                 l3388 259A  
                                                 l2684 B690  
                                                 l2588 B0EC  
                                                 l1948 2024  
                                                 l1892 D262  
                                                 l1884 07DC  
                                                 l1876 07BC  
                                                 l1868 079C  
                                                 l1980 E3D6  
                                                 l1972 E3B6  
                                                 l1964 E396  
                                                 l1956 E310  
                                                 l2677 B6DC  
                                                 l2669 B5B0  
                                                 l2589 B0F6  
                                                 l1949 2028  
                                                 l1893 D266  
                                                 l1885 07E0  
                                                 l1877 07C0  
                                                 l1869 07A0  
                                                 l1981 E3DA  
                                                 l1973 E3BA  
                                                 l1965 E39A  
                                                 l2686 B698  
                                                 l2678 B63E  
                                                 l2598 B2EA  
                                                 l1894 D26A  
                                                 l1878 07C4  
                                                 l1982 E3DE  
                                                 l1974 E3BE  
                                                 l1966 E39E  
                                                 l1958 E31E  
                                                 l2687 B6C0  
                                                 l2679 B66A  
                                                 l2599 B1AE  
                                                 l1895 D27C  
                                                 l1879 07C8  
                                                 l1983 E3E2  
                                                 l1975 E3C2  
                                                 l1967 E3A2  
                                                 l1896 D28E  
                                                 l1984 E472  
                                                 l1976 E3C6  
                                                 l1968 E3A6  
                                                 l2793 0A24  
                                                 l2689 B6CA  
                                                 l1889 D38E  
                                                 l1897 D2A0  
                                                 l1977 E3CA  
                                                 l1969 E3AA  
                                                 l1993 0F9A  
                                                 l2794 0A3C  
                                                 l1898 D2B2  
                                                 l1978 E3CE  
                                                 l1987 2AF6  
                                                 l1899 D2C4  
                                                 l1979 E3D2  
                                                 l2796 0A6A  
                                                 l2797 0A5E  
                                                 l1997 0FEE  
                                                 l2989 29AA  
                  __end_of__encoder_next_arc_step_size 1B30  
                          __encoder_next_arc_step_size 1AC0  
                        __size_of_encoder_statemachine 08D6  
                                ??i2_SYSTEM_Initialize 002E  
                                                 STR_1 A21C  
                                                 STR_2 A225  
                                                 STR_3 A21C  
                                                 STR_4 A225  
                                                 STR_5 A21C  
                                                 STR_6 A22C  
                                                 STR_7 A213  
                                                 STR_8 A213  
                                                 STR_9 A213  
                                ??_USBCtrlTrfTxService 002E  
                                                 _UCFG 000F39  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                                 _UEIE 000F37  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00C2  
                                       _ResetSenseData 1CCE  
                                                 _enc1 001A  
                                                 _enc2 0019  
               USBStdFeatureReqHandler@current_ep_data 0048  
                                                 _pDst 0177  
                                                 _main EF1E  
                              _bit_pattern_verticalbar A1DD  
                                                 _itoa 2574  
                             ??i2_USBTransferOnePacket 0032  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AE80  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 295A  
                                                 btemp 005B  
                                                 _utoa 10A6  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                      __size_of_motor_schedule_command 00A8  
                         ?i2_ExternalFlash_MediaDetect 002E  
                            _ExternalFlash_MediaDetect 2CF6  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 2CC8  
                         ?__motor_get_speed_in_degrees 0087  
                                      ___fldiv@new_exp 007F  
                                _display_get_character 2A4A  
                        motor_steps_from_degrees@steps 008B  
                                 ??_USBCheckHIDRequest 002E  
                                     ?_MSDWriteHandler 002E  
                        ??__encoder_next_arc_step_size 0062  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 0796  
                               ??_USBCtrlTrfOutHandler 0030  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0045  
                                         _USBOutHandle 016F  
                        __size_of__display_padded_itoa 00E2  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 002E  
                                       ?_USBDeviceInit 002E  
                                    __flash_get_status 28F2  
                    motor_speed_from_index@speed_index 0093  
                             _motor_steps_from_degrees 0AD4  
                                        __CFG_PLLDIV$2 000000  
                           __end_of_motor_speed_lookup 9461  
                        i2c_display_write_fixed@length 0067  
                                                l20012 D9E2  
                                                l20050 DA80  
                                                l20026 DA2A  
                                                l20038 DA50  
                                                l20064 DAC8  
                                                l20048 DA78  
                                                l20076 DAEE  
                                                l20174 0E3C  
                                                l20086 DB16  
                                                l20088 DB1E  
                                                l20706 D61C  
                                                l21354 EA4A  
                                                l20822 F4B2  
                                                l21534 1F74  
                                                l21382 EAAC  
                                                l20656 D4F6  
                                                l20592 29C6  
                                                l22192 A408  
                                                l20752 27B0  
                                                l21538 1F92  
                                                l22178 A3BA  
                                                l20952 24B2  
                                                l20946 24A6  
                                                l20982 F79C  
                                                l22750 F02A  
                                         spi_tx@length 0062  
                                                l23582 1AA0  
                                                l23574 D3A8  
                                                l23584 1AB6  
                                                l23576 D4C0  
                                                l23586 1B10  
                                                l19130 E310  
                                                l18180 DCC0  
                                                l18076 CCFE  
                                                l23588 1B26  
                                                l18176 DC86  
                                                l18432 BE7C  
                                                l19144 E356  
                                                l19136 E31E  
                                                l17802 FEFE  
                                                l19236 E3E6  
                                                l17910 1DA4  
                                                l19254 2AF6  
                                                l19282 C792  
                                                l19476 CFBA  
                                        ___fltol@sign1 0068  
                                                l19818 1900  
                                      __end_of___aldiv 0AD4  
                                                l17988 DF0C  
                                                l19916 1B34  
                                   ?__flash_get_status 006C  
                                                l19858 D772  
                                                l19946 0F6A  
                                       ??_display_init 0081  
                                                l19964 0FBE  
                                                l19878 D81C  
                                                l19984 D952  
                                                l19998 D99A  
                                      __end_of___almod 10A6  
                                      __end_of___fladd C770  
                                                ?_main 002E  
                                      __end_of___fldiv CFE4  
                                                ?_itoa 0070  
                                      __end_of___flneg 29BC  
                                                STR_10 A213  
                                                STR_11 A213  
                                                STR_12 A213  
                                                STR_13 A213  
                                                STR_14 A213  
                                                STR_15 A1FE  
                                                STR_16 A20A  
                                                STR_17 A232  
                                                STR_18 A1F1  
                                      __end_of___flmul C434  
                                     ??__display_clear 0060  
                    __size_of_USBCtrlEPServiceComplete 00FA  
                                      __end_of___fltol 0504  
                                                ?_utoa 0067  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u20020 0E6C  
                                                u20140 104C  
                                                u20045 F094  
                                                u20310 C58E  
                                                u20080 0A6E  
                               __end_of_USBDeviceTasks EDDA  
                                                u20260 C53A  
                                                u20270 C54A  
                                                u20520 C730  
                                                u20440 C6C2  
                                                u20280 C54C  
                                                u22120 B1BC  
                                                u22130 B224  
                                                u20630 D4F2  
                                                u20470 C6DA  
                                                u21270 15AC  
                                                u21360 EA6E  
                                                u22160 B258  
                                                u20650 D526  
                                                u22410 B474  
                                                u22170 B2C2  
                                                u20820 D6C8  
                                                u21390 EB10  
                                                u22430 B4B6  
                                                u22431 B4B4  
                                                u21730 1172  
                                                u21810 AEB0  
                            ?_USBCtrlEPServiceComplete 002E  
                                                u20940 24E6  
                                                u21900 AFA4  
                                                u21820 AEDE  
                                                u21750 1186  
                                                u24057 23D0  
                                                u21930 AFD8  
                                                u21850 AF14  
                                                u24067 23E4  
                                                u21940 B006  
                                                u21860 AF42  
                                                u24077 22E0  
                                                u17150 F53A  
                                                u24087 22F0  
                                                u17400 FF78  
                                                u22760 E0BA  
                                                u22840 A3EA  
                                                u24097 22FA  
                                                u17410 28D6  
                                                u17330 FF40  
                                                u22770 E0CA  
                                                u21970 B03A  
                                                u21890 AF76  
                                                u17075 197C  
                                                u17420 1DC6  
                                                u22780 E0E0  
                                                u21980 B068  
                                                u22790 E0F0  
                                                u19030 CF24  
                                                u17360 FF56  
                                                u17427 1DBC  
                                                u17380 FF68  
                                                u19220 C376  
                                                u19060 CF7A  
                                                u17445 DD82  
                                                u18350 BFD0  
                                                u19070 CF9E  
                                                u18360 BFE2  
                                                u18280 BEAC  
                                                u18248 BDA6  
                                                u19160 C170  
                                                u17800 1C58  
                                                u18249 BDBA  
                                                u18258 BDDA  
                                                u19250 C3CC  
                                                u19170 C2E6  
                                                u19330 04DC  
                                                u19410 EC4E  
                                                u17555 CA7E  
                                                u18259 BDEE  
                                      __end_of___lwdiv 221C  
                                                u17900 DC16  
                                                u17708 CC96  
                                                u19260 C3EA  
                                                u17709 CCAA  
                                                u17638 CB80  
                                                u18390 C05E  
                                                u17806 1C5A  
                                                u17750 1C14  
                                                u17639 CB94  
                                                u19175 C2DC  
                                                u18455 1896  
                                                u17680 CC88  
                                                u17760 1C22  
                                                u18545 1F34  
                                                u18810 E94E  
                                                u17498 DE04  
                                                u17690 CC8A  
                                                u17578 CAB6  
                                                u18298 BECE  
                                                u19290 0464  
                                                u17770 1C30  
                         __flash_write_to_buffer@start 0073  
                                                u17499 DE18  
                                                u17579 CACA  
                                                u18299 BEE2  
                                                u17940 21EC  
                                                u17780 1C3E  
                                                u19541 23BE  
                                                u19534 F28C  
                                                u19518 F256  
                                                u19470 F1DC  
                                                u19630 D786  
                                                u17790 1C4C  
                                                u17758 1C18  
                                                u19535 F286  
                                                u19519 F26C  
                                                u19295 045A  
                                                u19640 D7FC  
                                                u17768 1C26  
                                                u19800 0FF4  
                                                u18681 E328  
                                                u19458 F1AA  
                                                u17970 25D4  
                                                u17778 1C34  
                                                u19570 194E  
                                                u19459 F1BE  
                                                u19484 F1F4  
                                                u17788 1C42  
                                                u19900 DA78  
                                                u19820 D97C  
                                                u19485 F1EE  
                                                u19494 F22E  
                                                u19670 D830  
                                                u17798 1C50  
                                                u19495 F228  
                                                u19680 D88A  
                          __size_of_motor_change_speed 000A  
                                                u19920 DAAA  
                                                u19840 D9C4  
                                                u19770 0FA0  
                                                u19940 DAE6  
                                                u19860 DA0C  
                                                u19960 DB16  
                                                u19880 DA48  
                                      __end_of___lwmod 25FC  
                                                i2l300 12D6  
                                                i2l220 14BE  
                                                u19980 DB48  
                                                i2l214 0BE6  
                                                i2l222 14D4  
                                                i2l231 0006  
                                                i2l232 FFB0  
                                                i2l160 ECE6  
                                                i2l321 158C  
                                                i2l145 EE20  
                                                i2l250 0986  
                                                i2l226 1692  
                                                i2l322 1586  
                                                i2l162 ED0C  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 263C  
                                                i2l315 28B2  
                                                i2l147 EE48  
                                                i2l155 ECAC  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 0C98  
                                                i2l260 F9B8  
                                                i2l332 1EBA  
                                                i2l180 271A  
                                                i2l236 0030  
                                                i2l308 263A  
                                                i2l316 28B0  
                                                i2l172 ED96  
                                                i2l164 ED20  
                                                i2l156 ECBC  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 09FE  
                                                i2l245 0954  
                                                i2l341 0C9C  
                                                i2l261 F996  
                                                i2l149 EE80  
                                                i2l165 ED2C  
                                                i2l157 ECC4  
                                                i2l254 09C6  
                                                i2l342 0D16  
                                                i2l334 1F02  
                                                i2l174 EDB6  
                                                i2l166 ED54  
                                                i2l247 095E  
                                                i2l343 0CDC  
                                                i2l263 FA2C  
                                                i2l167 ED5E  
                                                i2l159 ECDA  
                                                i2l264 FA12  
                                                i2l184 FDA2  
                                                i2l192 FCE4  
                                                i2l432 090E  
                                                i2l280 F3E0  
                                                i2l272 062A  
                                                i2l360 06E2  
                                                i2l176 EDD2  
                                                i2l249 09BE  
                                                i2l345 0CFC  
                                                i2l425 08B0  
                                                i2l281 F2DC  
                                                i2l361 06F4  
                                                i2l169 ED70  
                                                i2l186 FDCC  
                                                i2l426 0882  
                                                i2l274 069C  
                                                i2l362 06FA  
                                                i2l179 270C  
                                                i2l283 F2EE  
                                                i2l355 0752  
                                                i2l188 FE4A  
                                                i2l436 08CE  
                                                i2l428 08C0  
                                                i2l372 D004  
                                                i2l284 F378  
                                                i2l364 0700  
                                                i2l356 06CE  
                                                i2l437 08E4  
                                                i2l429 089E  
                                                i2l381 D158  
                                                i2l373 D008  
                                                i2l293 1312  
                                                i2l365 071C  
                                                i2l534 F960  
                                                i2l438 08EE  
                                                i2l550 0D9E  
                                                i2l286 F37E  
                                                i2l294 12AC  
                                                i2l366 0734  
                                                i2l358 06D6  
                                                i2l535 F8CC  
                                                i2l439 0904  
                                                i2l391 D1E4  
                                                i2l383 D122  
                                                i2l375 D06E  
                                                i2l287 F3D4  
                                                i2l359 06DC  
                                                i2l384 D13E  
                                                i2l537 F958  
                                                i2l545 0DD0  
                                                i2l393 D236  
                                                i2l377 D0B6  
                                                i2l289 F3DA  
                                                i2l297 1328  
                                                i2l562 0DA4  
                                                i2l546 0D36  
                                                i2l386 D1A4  
                                                i2l298 12B8  
                                                i2l387 D1B0  
                                                i2l379 D0D8  
                                                i2l299 12BC  
                                                i2l820 17E6  
                                                i2l388 D22A  
                                                i2l901 2248  
                                                i2l821 17EE  
                                                i2l822 17F6  
                                                i2l816 1818  
                                                i2l824 1800  
                                                i2l826 180A  
                                                i2l780 213C  
                                                i2l783 2172  
                                                _UADDR 000F38  
                                                i2l892 225A  
                                                i2l893 2220  
                                                i2l895 222A  
                                                i2l899 223C  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 002E  
                   __size_of_USBCtrlEPAllowStatusStage 00C4  
                                  ___lmul@multiplicand 0064  
                                     __end_of_MSDTasks D724  
                                           i2memcpy@d1 002E  
                                       __CFG_FCMEN$OFF 000000  
                                   _USBCheckMSDRequest 0D22  
                                           i2memcpy@s1 0030  
                      __end_of_USBCtrlEPAllowDataStage 1506  
            motor_divide_jump@target_position_in_steps 00BB  
                                                _sd000 A1ED  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 002E  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                        __end_of_MSDTransferTerminated 2174  
                __i2c_display_send_init_sequence@F6905 01C8  
                                         _gblCBWLength 017C  
                                           i2memset@p1 002E  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                i2USBStallEndpoint@dir 002E  
                               __end_of_ResetSenseData 1D30  
                              __end_of__backlight_init 2D1E  
                             __parse_command_long@data 00AA  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long F85A  
                                                tablat 000FF5  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 002E  
                                      _MSDCommandState 00CF  
                          ??_ExternalFlash_SectorWrite 0069  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 002E  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 005C  
                                                ttemp6 005F  
                                                ttemp7 0063  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 005C  
                             __end_ofi2_ResetSenseData 1D92  
                motor_go_to_steps_position@overhead_cw 00AA  
                                     __end_ofi2_memcpy 1EAC  
                                     __end_ofi2_memset 2AD0  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                       _MSDReadHandler DD58  
          i2c_display_program_custom_character@address 007F  
                         __size_of_USBStdSetCfgHandler 00DC  
                        ??i2_ExternalFlash_MediaDetect 0030  
                                      __initialization 133C  
                            __end_of__flash_get_status 2926  
              __end_ofi2_ExternalFlash_MediaInitialize 2C6C  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 2BFA  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0030  
                     ?i2_ExternalFlash_MediaInitialize 002E  
                      i2_ExternalFlash_MediaInitialize 2C52  
                        _ExternalFlash_MediaInitialize 2BD8  
                                          _system_init 0086  
                                         __end_of_main F060  
                                         __end_of_itoa 25B8  
               __end_of__ic2_display_set_ddram_address 2B94  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 2B70  
                      __end_of_i2c_display_write_fixed 21C8  
                                         __end_of_utoa 1150  
                             __parse_command_short@cmd 00BA  
                                     __end_of_i2c_init 2C52  
                           __display_signed_itoa@value 008F  
                           __size_of_motor_divide_jump 0094  
                         __motor_run@distance_in_steps 0060  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 0039  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature DF3C  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 0039  
                              _USBCheckMSDRequest$2535 003B  
                            __size_of_USBCtrlEPService 0096  
                 __end_of_motor_divide_jump_to_nearest E8BA  
                __size_of_motor_divide_jump_to_nearest 014E  
                         _motor_divide_jump_to_nearest E76C  
                                         __get_fat@idx 0060  
                                         __get_fbr@idx 0060  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00CA  
                                               ??_itoa 0076  
                               _motor_schedule_command 11F8  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 002E  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 2D22  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 2D1E  
                                          ?_USBSuspend 002E  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 014B  
                                   _motor_items_in_cue 2D00  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 298C  
                               __flash_write_to_buffer 2270  
               __end_of__ic2_display_set_cgram_address 2B24  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 2AFA  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                                               _CCPR1L 000FBB  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 002E  
                                           __i2c_start 2D12  
                               SYSTEM_Initialize@state 0060  
                                           __i2c_write 2404  
                                     __end_of_adc_init 20C6  
                                               i2l1051 2768  
                                  ?_motor_items_in_cue 002E  
                                               i2l2401 BCDA  
                                               i2l3400 1E9A  
                                               i2l3401 1E62  
                                               i2l2521 F66A  
                                               i2l2531 F6E8  
                                               i2l2380 B78E  
                                               i2l2524 F690  
                                               i2l3406 2ABE  
                                               i2l2390 B924  
                                               i2l2382 BD16  
                                               i2l2534 F70E  
                                               i2l2526 F6AA  
                                               i2l2518 F6BA  
                                               i2l3407 2AAE  
                                               i2l2391 B972  
                                               i2l2383 B790  
                                               i2l2527 F6B4  
                                               i2l2392 BA94  
                                               i2l2384 B7F8  
                                               i2l2528 F738  
                                               i2l2536 F728  
                                               i2l2385 B832  
                                               i2l2537 F732  
                                               i2l2395 BB0C  
                                               i2l2387 BAD4  
                                               i2l2398 BC6C  
                                               i2l2399 BBC2  
                 __flash_write_page_from_buffer@buffer 0075  
                      ??_APP_DeviceCustomHIDInitialize 003A  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fat 206E  
                                     __end_of__get_fbr D4D0  
                                     __end_of__get_mbr 0866  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                         ??_motor_go_to_steps_position 00A2  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00AB  
                               __end_of_MSDReadHandler DF3C  
                                    __spi_init@details 0060  
                                     __end_of___xxtofl EC96  
                             i2USBTransferOnePacket@ep 0036  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0036  
                               ?_display_get_character 0060  
                                     ?_display_prepare 002E  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 002E  
                              ?_motor_speed_from_index 0093  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                                     __end_of_fat_init 2CB8  
                                    _shortPacketStatus 002A  
                                       __CFG_XINST$OFF 000000  
                                  _motor_current_speed 00CA  
                                      USBDeviceTasks@i 004C  
                                          i2memcpy@tmp 0038  
                                         _CCPTMRS0bits 000F52  
                                    _motor_process_cue 19DC  
                          USBStdFeatureReqHandler@pUEP 0046  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 002F  
                                 __size_of_encoder_run 0110  
                         __end_of__flash_set_page_size 1B9E  
                                      ??_USBDeviceInit 0068  
                                               ___lmul 20C6  
                                               _gblCBW 0100  
                                            ??___aldiv 0068  
                                            ??___almod 0068  
                                            ??___fladd 007A  
                                   __size_of__i2c_send 000A  
                                            ??___fldiv 0076  
                                            ??___flneg 0072  
                                       __CFG_STVREN$ON 000000  
                                            ??___flmul 0076  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
          i2SYSTEM_Initialize@pll_startup_counter_3117 0030  
            SYSTEM_Initialize@pll_startup_counter_3117 0063  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 002E  
                                           _SoftDetach 017B  
                                            ??___lwmod 0064  
                                               _config 0183  
                                               _buffer 0800  
                                    _USBEnableEndpoint 26FC  
                      __size_of_USBStdGetStatusHandler 009C  
                                ?_adc_read_temperature 002E  
                                 ??_motor_items_in_cue 0060  
                                               _memcpy 1D92  
                                               _memset 29BC  
                                               _params 013A  
                                               clear_0 1384  
                                               clear_1 1396  
                                               clear_2 13A2  
                                               clear_3 13AE  
                                               clear_4 13BA  
                                               clear_5 13C6  
                            _ExternalFlash_SectorWrite 2D22  
                                    api_parse@inBuffer 00BB  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                     __motor_run@speed 0064  
                                 __end_of_encoder_init 2B70  
                                               _spi_tx 1FBC  
                                   ?_USBEnableEndpoint 0036  
                                               _tx_buf 01D1  
                                i2c_display_init@F6908 01BF  
                                               _strlen 2680  
                              _motor_current_stepcount 000D  
                           __parse_command_long@length 00B0  
             i2c_display_program_custom_character@cntr 0080  
                                     __end_of_tmr0_isr 2772  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 002E  
                               __size_of__flash_wakeup 0052  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 006B  
                        __size_of__display_signed_itoa 0044  
                           __end_of_motor_steps_lookup 982F  
                 __size_of__motor_get_speed_in_degrees 013A  
                       __parse_command_long@out_buffer 00AC  
                        __size_of__parse_command_short 0164  
                         ?__divide_jump_size_increment 002E  
                  __size_of_motor_go_to_steps_position 02E4  
                                         __mediumconst 9092  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 2680  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 001B  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 0037  
                                     _i2c_display_init 23B4  
                                        spi_tx_rx@data 0064  
                                        spi_tx_tx@data 0064  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 1B9E  
               motor_go_to_steps_position@overhead_ccw 00AE  
                                     ?__backlight_init 002E  
                    i2ExternalFlash_MediaDetect@config 002E  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 0029  
                           ??_APP_DeviceCustomHIDTasks 00C6  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 006A  
                                         ___xxtofl@exp 0069  
                                    _SYSTEM_Initialize 1F62  
                                         ___xxtofl@val 0060  
                                   ?__system_pin_setup 002E  
                                           __accesstop 0060  
                              __end_of__initialization 13CC  
                       __end_of_motor_speed_from_index 2C82  
                    MSDCheckForErrorCases@MSDErrorCase 0070  
                                           ___flneg@f1 006E  
                                      ?_MSDReadHandler 002E  
                                 __end_of_display_init 2888  
                                   ?_SYSTEM_Initialize 002E  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 0040  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                      ExternalFlash_SectorWrite@config 0060  
                      ExternalFlash_SectorWrite@buffer 0066  
                            __end_of_motor_process_cue 1A50  
                          __end_of__parse_command_long 26FC  
                                   __size_of__get_data 002A  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_root 0198  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 016B  
                                       __pcstackCOMRAM 002E  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 2738  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A1F1  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 002E  
                                         __pidataBANK1 281A  
                                         __pidataBANK2 2314  
                                  ??_SYSTEM_Initialize 0060  
                 ExternalFlash_SectorWrite@sector_addr 0062  
                      __end_of_bit_pattern_verticalbar A1E5  
                     __size_of_USBCtrlEPAllowDataStage 0098  
                                      _active_protocol 01A0  
                                  i2USBStallEndpoint@p 0034  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 0D22  
                                  display_prepare@cntr 00C9  
                                  display_prepare@temp 00BE  
                                         _gblSenseData 011F  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler F522  
                       ?_ExternalFlash_MediaInitialize 0060  
                               i2_USBTransferOnePacket FD8C  
                                   __size_of_api_parse 012A  
                                   _flash_sector_write 2364  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 002E  
                                            ?i2_memset 002E  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C0E2  
               __size_of_MSDProcessCommandMediaPresent 03CA  
                        _MSDProcessCommandMediaPresent BD18  
                            __end_of__system_pin_setup 1C08  
                                        __get_data@idx 0060  
                             ??_USBCtrlTrfSetupHandler 004B  
                              _USBTicksSinceSuspendEnd 017F  
                motor_nonzero_steps_from_degrees@steps 0093  
                                     ?_USBDeviceAttach 002E  
                            __end_of_SYSTEM_Initialize 1FBC  
                                    __end_of__i2c_send 2CEC  
                               _USBStdGetStatusHandler 12A0  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 2D12  
                                          ?__i2c_start 002E  
                      ?__encoder_next_divide_step_size 002E  
                     ??__encoder_next_divide_step_size 0060  
                                          ?__i2c_write 0065  
                                           __pbssBANK0 00CA  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint FA76  
                                           _gblNumBLKS 0153  
                                            ?_i2c_init 002E  
                                     _mediaInformation 0199  
                       __size_of_fat_get_format_status 00AE  
                        __end_of_fat_get_format_status 0FF8  
                                        __flash_wakeup 22C2  
                             __fill_buffer_get_display 0DE0  
                          __size_of_USBWakeFromSuspend 0036  
                           ??_motor_steps_from_degrees 008B  
                                          _pBDTEntryIn 0007  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 0086  
                __end_of_APP_DeviceCustomHIDInitialize 295A  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 2926  
                          MSDTransferTerminated@handle 0039  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 002E  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 0097  
                         __parse_jump_steps@out_buffer 00A0  
                               ??_adc_read_temperature 0087  
                         __end_of_encoder_statemachine B756  
                                           _fat_format D948  
                                 ??_flash_sector_write 0083  
                       __flash_write_to_buffer@command 007A  
                         __size_of__flash_partial_read 007A  
                                            MSDTasks@i 00B1  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run DB5E  
                                       ___lmul@product 0068  
                                           _device_dsc A1BB  
                                     ??_display_update 0070  
                                        __get_root@idx 0060  
                                     _USBCtrlEPService 1506  
                                           _ep_data_in 0168  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 002E  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fat 0060  
                                            ?__get_fbr 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService FA76  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa D724  
                                   _USBCheckStdRequest 06BE  
                                   __size_of_motor_isr 05C2  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 005E  
                                              i2l11222 095E  
                                              i2l11170 222A  
                                              i2l11174 2248  
                                              i2l10952 0898  
                                              i2l14208 1E62  
                                              i2l11598 2AAE  
                                              i2l15118 EE78  
                                              i2l15090 EE18  
                                              i2l21488 ED68  
                                              i2l16366 BCDA  
                                              i2l16286 B7F8  
                                              i2l23596 1830  
                                              i2l18260 0622  
                                              i2l23598 1864  
                              ??_MSDCheckForErrorCases 006E  
                                            ?___xxtofl 0060  
                          __end_ofi2_SYSTEM_Initialize 2270  
                                           ??i2_memcpy 0034  
                                           ??i2_memset 0034  
                                           _flash_init 2CC8  
                   __fill_buffer_get_display@outBuffer 0064  
                          __end_of_USBCtrlTrfTxService 0A06  
                                    __end_of__get_data 2AFA  
                                  _USBStdSetCfgHandler 05E2  
                                    __end_of__get_root E476  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 002E  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 0346  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint FD8C  
                       ??_motor_divide_jump_to_nearest 00BA  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 002E  
                         __size_of_USBStdGetDscHandler 012C  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 1B30  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
              motor_nonzero_steps_from_degrees@degrees 008F  
                   __end_of_motor_go_to_steps_position CA54  
                           _motor_go_to_steps_position C770  
             __end_of_motor_nonzero_steps_from_degrees 24A0  
            __size_of_motor_nonzero_steps_from_degrees 004C  
                   ??_motor_nonzero_steps_from_degrees 0093  
                    ?_motor_nonzero_steps_from_degrees 008F  
                     _motor_nonzero_steps_from_degrees 2454  
                           __end_of_APP_DeviceMSDTasks 2CA8  
                                              _UIRbits 000F62  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                __end_of__flash_compare_page_to_buffer 18E6  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 186A  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                                         ??_USBMSDInit 0039  
                                       ?__flash_wakeup 002E  
             __encoder_next_arc_step_size@old_stepsize 0060  
                                    __end_of_api_parse F522  
                                    ?i2_ResetSenseData 002E  
                                    _MSDProcessCommand F19A  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 0074  
                                        __i2c_send@dat 0060  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 002E  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 002E  
                                 ?_USBStdSetCfgHandler 002E  
                                    __end_of__spi_init 27AA  
                          __size_of_USBCheckHIDRequest 00D0  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0038  
                                   ??i2_ResetSenseData 002E  
                                   __display_itoa@text 0098  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 002E  
                              __end_of_MSDErrorHandler F63C  
                           _MSDTransferTerminated$2623 003B  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 002E  
                      motor_steps_from_degrees@degrees 0087  
                                __size_of_encoder_init 0024  
                                 ??_USBCheckStdRequest 004B  
                                              ___aldiv 0A06  
                                              ___almod 0FF8  
                                            ?_spi_init 002E  
                                              ___fladd C434  
                        __size_of_USBCtrlTrfOutHandler 005C  
                                   __display_itoa_long F74C  
                i2ExternalFlash_MediaInitialize@config 002E  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv CD2A  
                                     _ToSendDataBuffer 0300  
                                              ___flneg 298C  
                                      __size_of___lmul 0058  
                                              ___flmul C0E2  
                                              ___fltol 0426  
                                     ??_USBDeviceTasks 004C  
                                              ___lwdiv 21C8  
                              ?_motor_schedule_command 0097  
                                    ??_USBStallHandler 002E  
                                              ___lwmod 25B8  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
                          motor_schedule_command@speed 009B  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 2CF6  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00E0  
                                              __pcinit 133C  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02D6  
                            __end_of_configDescriptor1 A0FE  
                                  ??_MSDProcessCommand 00A7  
                                              __ramtop 0F00  
                         ExternalFlash_SectorRead@page 0093  
                                           ??_adc_init 0060  
                                              __ptext0 EF1E  
                                              __ptext1 0086  
                                              __ptext2 2C1A  
                                              __ptext3 2C36  
                                              __ptext4 2CC8  
                                              __ptext5 2640  
                                              __ptext6 2772  
                                              __ptext7 1B30  
                                              __ptext8 2CA8  
                                              __ptext9 0F4A  
                                       ?__display_itoa 0095  
                                              _inPipes 0001  
                                       fat_format@cntr 0084  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 0180  
                                            _T0CONbits 000FD5  
                                           ??__get_fat 0062  
                                           ??__get_fbr 0062  
                                  ?__display_itoa_long 00AD  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00BF  
                                 __motor_run@direction 006A  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 2AA4  
                                         ??_USBSuspend 0045  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit F968  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                                           ??___xxtofl 0064  
                              _APP_DeviceMSDInitialize 2CB8  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                          __display_itoa_long@decimals 00B1  
                                      i2_USBDeviceInit EDDA  
                                     i2USBDeviceInit@i 0036  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 002E  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                   __size_of_ExternalFlash_SectorWrite 0004  
                                ?__flash_set_page_size 002E  
                                   __end_of_USB_CD_Ptr 9DEE  
                                           _msd_buffer 000600  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0090  
                                              main@tmp 01D9  
                                __size_of_display_init 0036  
                              __size_of__flash_is_busy 0022  
                                 end_of_initialization 13CC  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 211E  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 002E  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A1DD  
                                              memcpy@d 0067  
                                              memcpy@n 0064  
                                              memcpy@s 0069  
              __motor_get_speed_in_degrees@speed_index 0087  
                                  _pBDTEntryEP0OutNext 0015  
                            __end_of_MSDProcessCommand F2CC  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 2B4C  
                                      _USB1msTickCount 015B  
                                 ??__display_itoa_long 00B4  
                                            i2u1001_40 F3CA  
                                            i2u1001_47 F3C0  
                             __flash_partial_read@data 0079  
                             ?_USBStdFeatureReqHandler 002E  
                             __flash_partial_read@page 0073  
                                            i2u1402_40 EE3C  
                                            i2u1405_40 EEDC  
                                            i2u1281_40 1E84  
                                            i2u1281_47 1E7A  
                                            i2u2163_40 EDD6  
                                            i2u1710_48 F916  
                                            i2u1710_49 F92C  
                                            i2u1800_40 0656  
                                            i2u1712_44 F94A  
                                            i2u1712_45 F944  
                                    __end_of_motor_isr BD18  
                                            i2u1708_48 F8F0  
                                            i2u1708_49 F904  
                                            i2u1581_41 B77E  
                                            i2u1591_40 BAE8  
                                            i2u1592_40 BB08  
                                            i2u1584_41 B84C  
                                            i2u1818_40 D1CA  
                                            i2u1586_40 B914  
                                ??_USBStdSetCfgHandler 0045  
                      __parse_command_long@out_idx_ptr 00AE  
                                           ??_tmr0_isr 002E  
                      ?__ic2_display_set_cgram_address 002E  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 2A1C  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 146E  
                                    __end_of_spi_tx_rx 146E  
                       __end_of_motor_schedule_command 12A0  
                                    __end_of_spi_tx_tx 1754  
                             __end_of_i2c_display_init 2404  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
                 __end_of_ExternalFlash_SectorSizeRead 2CE2  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 2CD6  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc2 000FDE  
                                          ?_fat_format 002E  
                     __size_of__fill_buffer_get_status 01C4  
                                              utoa@buf 0067  
                                           _motor_init 2C1A  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 001C  
                             _USBCtrlEPServiceComplete FF8C  
                                              utoa@val 0069  
                                            _MSD_State 0021  
                                           _motor_stop 24EA  
                                          ?__motor_run 0060  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00BE  
                                        ??_api_prepare 0074  
                           _USBStatusStageEnabledFlag1 0022  
                           _USBStatusStageEnabledFlag2 0182  
                                       _bit_pattern_ae A1CD  
                                   USBEnableEndpoint@p 0037  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                       __end_of__flash_write_to_buffer 22C2  
                                     __CFG_DSBOREN$OFF 000000  
                                         _display_init 2852  
motor_divide_jump_to_nearest@nearest_position_in_steps 00BA  
                                          ___fladd@grs 0085  
                                 spi_tx_rx@data_length 0066  
                                          ?_flash_init 002E  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 008B  
                                        ___xxtofl@sign 0068  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00BE  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                                   _ReceivedDataBuffer 0238  
                                   _BothEP0OutUOWNsSet 0025  
                                          ___fldiv@grs 0081  
                                          ___fldiv@rem 007A  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0033  
                              _i2c_display_write_fixed 2174  
                           motor_arc_move@arc_in_steps 009F  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 002E  
                                 _encoder_statemachine AE80  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0041  
                              __size_of__display_clear 004A  
                                            _USTATcopy 002C  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0087  
                 __end_of__encoder_next_setup_stepsize 1AC0  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 1A50  
                                          ___flmul@grs 007C  
                         __end_of_USBTransferOnePacket FC86  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                  __end_ofi2_ExternalFlash_MediaDetect 2D2A  
                          i2_ExternalFlash_MediaDetect 2D26  
                    __parse_jump_steps@number_of_steps 00A6  
                         __end_of__display_signed_itoa 2574  
                     __end_of_motor_steps_from_degrees 0B9E  
                  __end_of__motor_get_speed_in_degrees F19A  
                          __motor_get_speed_in_degrees F060  
                               i2c_display_cursor@line 006E  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 002E  
                         __end_of__parse_command_short E76C  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                     ?_MSDErrorHandler 002E  
                               _USBCtrlTrfSetupHandler 1754  
                                 __display_padded_itoa 0264  
                               __end_of_bit_pattern_ae A1D5  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 002E  
                             __size_of_display_prepare 0C48  
                        ??__motor_get_speed_in_degrees 0089  
                                __end_of_USBDeviceInit EB52  
                __end_of_USBIncrement1msInternalTimers 2C1A  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 2BFA  
                                       __end_of___lmul 211E  
                                      ??__display_itoa 009A  
                        ?_ExternalFlash_SectorSizeRead 0060  
                          __size_of_motor_items_in_cue 000A  
                                    __size_of_MSDTasks 0254  
                             __end_of_USBStallEndpoint FB80  
                                            i2memcpy@d 0034  
                                            i2memcpy@n 0032  
                       adc_read_temperature@adc_result 0089  
                              __end_ofi2_USBDeviceInit EF1E  
                                            i2memcpy@s 0036  
                            ??_APP_DeviceMSDInitialize 003C  
                                            i2memset@c 0030  
                                            i2memset@n 0032  
                                            i2memset@p 0034  
                                       __end_of_memcpy 1DF2  
                                      _MSDRetryAttempt 017D  
                                 i2USBStallEndpoint@ep 0033  
                                       __end_of_memset 29EC  
                                     __CFG_DSWDTEN$OFF 000000  
                                    _USBBusIsSuspended 0027  
                                       __end_of_spi_tx 2016  
                                       __end_of_strlen 26BE  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 133C  
                              ?_USBStdGetStatusHandler 002E  
                             i2SYSTEM_Initialize@state 0032  
                        USBCtrlTrfRxService@byteToRead 002F  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00C8  
                                    ??_MSDWriteHandler 0071  
                                  __end_of_api_prepare 05E2  
                            __display_itoa_long@length 00B8  
  __step_position_from_divide_position@target_position 008B  
                           ??__fill_buffer_get_display 0067  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 0039  
                                    __size_ofi2_memset 002C  
                                      _USBMSDOutHandle 00CC  
                         __end_of_USBConfigureEndpoint 16C4  
                                ?_encoder_statemachine 002E  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler D25C  
                                  __flash_partial_read 1962  
                                    USBStallEndpoint@p 0066  
                                  __size_of_fat_format 0216  
                                        _MSDHostNoData 00CE  
                    __end_of_USBCtrlEPAllowStatusStage 0C62  
                         ?__encoder_next_arc_step_size 0060  
                             __end_of_USBCtrlEPService 159C  
                           __size_of_MSDProcessCommand 0132  
                                  __size_of__motor_run 01FA  
                                            __i2c_send 2CE2  
                                            __i2c_stop 2D0A  
                        ?__encoder_next_setup_stepsize 0060  
              _ExternalFlash_MediaInitialize$intlevel0 2BDE  
                                    __size_of_i2c_init 001C  
                            ??_USBCtrlEPAllowDataStage 002F  
                                _motor_cue_write_index 001D  
                      ??__fill_buffer_get_mode_details 0062  
                                       USBDeviceInit@i 0068  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                               _pBDTEntryEP0OutCurrent 0017  
                                          _DMACON1bits 000F88  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket FE8E  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                                  _USBStdGetDscHandler F2CC  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 002E  
                                  __end_of_encoder_run F74C  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                                          __pdataBANK1 01A2  
                                          __pdataBANK2 0278  
                             motor_isr@steps_remaining 0042  
                                          ?_motor_stop 002E  
                            ?_APP_DeviceCustomHIDTasks 002E  
                                       _motor_arc_move 0346  
                                 __size_of_system_init 00F2  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
                         __size_of__parse_command_long 003E  
                                   __end_of__i2c_start 2D1A  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 2454  
                                             ??_strlen 0062  
                                            ___fladd@a 0076  
                                            ___fladd@b 0072  
  motor_divide_jump_to_nearest@nearest_divide_position 00BE  
                               _USBActiveConfiguration 002D  
                       __end_of_USBStdGetStatusHandler 133C  
                                            ___fldiv@a 0072  
                                            ___fldiv@b 006E  
                          api_parse@receivedDataLength 00BD  
                                     api_parse@out_idx 00C4  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 0072  
                                            ___flmul@b 006E  
                                          __pbssCOMRAM 0001  
                                    __size_of__get_fat 0058  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01D9  
                         __size_of_USBCtrlTrfInHandler 00C0  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 00FE  
                        __end_of_MSDCheckForErrorCases FF8C  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 014F  
                   __end_of_flash_command_pagesize_512 A1ED  
                           _flash_command_pagesize_512 A1E9  
                   __end_of_flash_command_pagesize_528 A1E9  
                           _flash_command_pagesize_528 A1E5  
                                       __flash_is_busy 2BB6  
                                 ?_USBStdGetDscHandler 002E  
         __end_of_i2c_display_program_custom_character 1962  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 18E6  
                                            __get_data 2AD0  
                                    _flash_sector_read 2B24  
                                    __size_of_fat_init 0010  
                          ?_motor_go_to_steps_position 009E  
                                            __get_root E2DE  
                               flash_sector_write@data 0081  
                               flash_sector_write@page 007F  
                                            _dc_manual 9DEE  
                           __end_of_USBWakeFromSuspend 28BE  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 2BB6  
                  __end_of__divide_jump_size_decrement 1E50  
                          __divide_jump_size_decrement 1DF2  
                                           ?__i2c_send 002E  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 25FC  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 0141  
                                           ?__i2c_stop 002E  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 28F2  
          __end_of__step_position_from_divide_position 0264  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 008B  
                 ?__step_position_from_divide_position 0087  
                  __step_position_from_divide_position 0178  
                                   i2_USBStallEndpoint FC86  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 001E  
                                _fat_get_format_status 0F4A  
            motor_go_to_steps_position@target_position 009E  
                       MSDProcessCommandMediaPresent@i 00A6  
                                  ??_flash_sector_read 008B  
                                            _api_parse F3F8  
                                            __pintcode 9008  
                               __end_of_motor_arc_move 0426  
                              __fill_buffer_get_status E11A  
                                   _APP_DeviceMSDTasks 2C96  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 0072  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 009E  
                                             ?___fldiv 006E  
                                            __ptext100 28F2  
                                            __ptext101 13D6  
                                            __ptext110 1D92  
                                            __ptext102 0E98  
                                             ?___flneg 006E  
                                            __ptext111 E476  
                                            __ptext103 2CD6  
                                            __ptext120 2D00  
                                            __ptext112 0DE0  
                                            __ptext104 2C82  
                                            __ptext121 DB5E  
                                            __ptext113 2A4A  
                                            __ptext105 2BD8  
                                            __ptext130 29EC  
                                            __ptext122 FB80  
                                            __ptext114 F3F8  
                                            __ptext106 2CF6  
                                            __ptext131 25FC  
                                            __ptext115 E608  
                                            __ptext107 1150  
                                            __ptext140 2AA4  
                                            __ptext132 2BFA  
                                            __ptext124 2738  
                                            __ptext116 C770  
                                            __ptext108 0504  
                                            __ptext141 12A0  
                                            __ptext133 1506  
                                            __ptext125 F63C  
                                            __ptext117 26BE  
                                            __ptext109 E11A  
                                            __ptext150 2CB8  
                                            __ptext142 F2CC  
                                            __ptext134 1E50  
                                            __ptext126 B756  
                                            __ptext118 E8BA  
                                            __ptext151 F85A  
                                            __ptext143 CFE4  
                                            __ptext135 1754  
                                            __ptext127 EC96  
                                            __ptext119 11F8  
                                            __ptext160 F968  
                                            __ptext152 1D30  
                                            __ptext144 17E4  
                                            __ptext136 FF8C  
                                            __ptext128 EDDA  
                                            __ptext161 0B9E  
                                            __ptext153 2C52  
                                            __ptext145 221C  
                                            __ptext137 146E  
                                            __ptext129 2888  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext162 0C62  
                                            __ptext154 2D26  
                                            __ptext146 0D22  
                                            __ptext138 06BE  
                                            __ptext163 0936  
                                            __ptext155 2926  
                                            __ptext147 0866  
                                            __ptext139 05E2  
                                            __ptext164 0000  
                                            __ptext156 FD8C  
                                            __ptext148 211E  
                                            __ptext157 26FC  
                                            __ptext149 FC86  
                                            __ptext158 1630  
                                            __ptext159 1EAC  
                                             ?___flmul 006E  
                                             ?___fltol 0060  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 2772  
                                             ?___lwmod 0060  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 002E  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 00A2  
                                            _idle_rate 01A1  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 002E  
                                          _api_prepare 0504  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  ?_APP_DeviceMSDTasks 002E  
                            __size_ofi2_ResetSenseData 0062  
                   __flash_write_to_buffer@data_length 0077  
                                 _USBTransferOnePacket FB80  
                    __size_of_motor_steps_from_degrees 00CA  
            __ic2_display_set_cgram_address@data_array 006A  
                            ?_motor_steps_from_degrees 0087  
                           ?_ExternalFlash_MediaDetect 0060  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 2530  
                  __end_of__divide_jump_size_increment 281A  
                          __divide_jump_size_increment 27E2  
                                    ??_display_prepare 00BC  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short E608  
                  __fill_buffer_get_display@secondHalf 0066  
                               __end_of__flash_is_busy 2BD8  
                                    __display_itoa@len 00AA  
                                    __display_itoa@pos 00AC  
                                    __display_itoa@tmp 00A0  
                         __end_of_USBCtrlTrfOutHandler 1F08  
                               ??_encoder_statemachine 00C4  
                             ??_motor_speed_from_index 0095  
                            __end_of_flash_sector_read 2B4C  
                                ??_USBStdGetDscHandler 002E  
                                          _ep_data_out 0165  
                                     ___lwdiv@quotient 0065  
                                   _motor_change_speed 2CEC  
                                        _MSDWriteState 0020  
                         __size_of_USBCtrlTrfRxService 010E  
                        USBConfigureEndpoint@direction 002E  
                                       __display_clear 24A0  
                                           ?__get_data 0060  
                                 ??i2_USBStallEndpoint 002F  
                                      _config_internal 0162  
                                           ?__get_root 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001C  
                         __size_ofi2_SYSTEM_Initialize 0054  
                                      _config_external 015F  
                                  __size_of_motor_stop 0046  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D0  
                       __size_of_display_get_character 002E  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 2A78  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 0936  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 002F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 003E  
                                          _encoder_run F63C  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             i2u925_40 09B0  
                                             i2u925_47 09A6  
                                             i2u927_40 09F0  
                                             i2u927_47 09E6  
                                             i2u895_40 0D80  
                                             _RCONbits 000FD0  
                                           ?_api_parse 00BB  
                                             i2u998_40 F344  
                                             i2u998_47 F33A  
                                             i2u999_40 F374  
                                             _UEP0bits 000F26  
                                             i2u999_47 F36A  
                                      ?_motor_arc_move 002E  
                                             _MSDTasks D4D0  
                                            _motor_isr B756  
                           _USBDeferINDataStagePackets 0181  
                                         ??_fat_format 0084  
                                 _active_configuration 0179  
                                    ?_i2c_display_init 002E  
                              spi_tx_rx@command_length 0062  
                                   _bit_pattern_degree A1D5  
                          __size_of_USBCheckStdRequest 00D8  
                      ??_MSDProcessCommandMediaPresent 0099  
                __end_of__fill_buffer_get_mode_details E608  
               __size_of__fill_buffer_get_mode_details 0192  
                        __fill_buffer_get_mode_details E476  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 _USBConfigureEndpoint 1630  
                                         ??__motor_run 0066  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 13D6  
                                            _spi_tx_tx 16C4  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 0278  
                                       _USBMSDInHandle 0013  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 2CFC  
                                    _SYS_InterruptHigh 9008  
                                ?__parse_command_short 002E  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 0028  
                    __end_of_ExternalFlash_MediaDetect 2D00  
                                             i2_memcpy 1E50  
                                             i2_memset 2AA4  
                    MSDCheckForErrorCases@DeviceNoData 006F  
                                 spi_tx_tx@data_length 0066  
                                      ?__flash_is_busy 002E  
                     __end_of__fill_buffer_get_display 0E98  
                                   ?_SYS_InterruptHigh 002E  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 24EA  
                                           spi_tx@data 0060  
                              __end_of_USBStallHandler 2640  
                      motor_schedule_command@direction 009D  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
               motor_go_to_steps_position@distance_ccw 00B6  
                                    ___lmul@multiplier 0060  
                                            copy_data0 1350  
                                            copy_data1 1370  
                         __size_of__system_timer0_init 002C  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                          ??_USBCtrlEPAllowStatusStage 002E  
                          __end_of_USBStdSetCfgHandler 06BE  
                                   __end_of_fat_format DB5E  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 2C36  
                                  ??_SYS_InterruptHigh 004D  
                                          ??__i2c_send 0060  
                                         _MSDReadState 017E  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run DD58  
                                   __end_of_device_dsc A1CD  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 002E  
                              ?_USBCtrlTrfSetupHandler 002E  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 002F  
                                             __Hrparam 0000  
                                  __display_itoa@value 0095  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 0066  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps E8BA  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 2CD6  
                                       _TransferLength 0011  
                                           ?_motor_isr 002E  
                           __end_of_USBCheckMSDRequest 0DE0  
                                      api_parse@in_idx 00C5  
                                ?_USBConfigureEndpoint 002E  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 28BE  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 009E  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 1C08  
                                      _MSDWriteHandler CA54  
                                     __size_of___fldiv 02BA  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00B9  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 0068  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 017A  
                            __end_of_SYS_InterruptHigh 908E  
                        __display_itoa_long@last_digit 00BB  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 206E  
                                             __get_fat 2016  
                                             __get_fbr D25C  
                                             __get_mbr 0796  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 00A4  
                   __end_of_ExternalFlash_CapacityRead 2C96  
                           _ExternalFlash_CapacityRead 2C82  
                                             ___xxtofl EB52  
                              ??_MSDTransferTerminated 003B  
                              __size_of_USBDeviceTasks 0144  
                                      ___lwdiv@divisor 0062  
                                             _fat_init 2CA8  
                                      ?__display_clear 002E  
                                      ___lwdiv@counter 0064  
                           __size_of_flash_sector_read 0028  
                                             __ptext10 D948  
                                             __ptext11 2364  
                                             __ptext20 2AD0  
                                             __ptext12 2270  
                                             __ptext21 2B4C  
                                             __ptext13 16C4  
                                             __ptext30 2404  
                                             __ptext22 27AA  
                                             __ptext14 1F08  
                                             __ptext31 1C08  
                                             __ptext23 2174  
                                             __ptext15 186A  
                                             __ptext40 AE80  
                                             __ptext32 2D0A  
                                             __ptext24 2B94  
                                             __ptext16 E2DE  
                                             __ptext41 24EA  
                                             __ptext33 2D12  
                                             __ptext25 2B70  
                                             __ptext17 0796  
                                             __ptext50 2A1C  
                                             __ptext42 2454  
                                             __ptext34 2CE2  
                                             __ptext26 2852  
                                             __ptext18 D25C  
                                             __ptext51 1AC0  
                                             __ptext43 0AD4  
                                             __ptext35 206E  
                                             __ptext27 18E6  
                                             __ptext19 2016  
                                             __ptext60 0264  
                                             __ptext52 27E2  
                                             __ptext44 E76C  
                                             __ptext36 2A78  
                                             __ptext28 2AFA  
                                             __ptext61 F74C  
                                             __ptext53 1DF2  
                                             __ptext45 159C  
                                             __ptext37 1B9E  
                                             __ptext29 23B4  
                                             __ptext70 24A0  
                                             __ptext62 D724  
                                             __ptext54 A238  
                                             __ptext46 0178  
                                             __ptext38 2D1A  
                                             __ptext71 DF3C  
                                             __ptext63 2680  
                                             __ptext55 2C6C  
                                             __ptext47 2CEC  
                                             __ptext39 19DC  
                                             __ptext80 1F62  
                                             __ptext72 EB52  
                                             __ptext64 2574  
                                             __ptext56 F060  
                                             __ptext48 0346  
                                             __ptext81 2C96  
                                             __ptext73 0426  
                                             __ptext65 10A6  
                                             __ptext57 20C6  
                                             __ptext49 1A50  
                                             __ptext90 FE8E  
                                             __ptext82 D4D0  
                                             __ptext74 298C  
                                             __ptext66 25B8  
                                             __ptext58 CD2A  
                                             __ptext91 F522  
                                             __ptext83 F19A  
                                             __ptext75 C0E2  
                                             __ptext67 21C8  
                                             __ptext59 2530  
                                             __ptext92 FA76  
                                             __ptext84 1C6C  
                                             __ptext76 C434  
                                             __ptext68 0FF8  
                                             __ptext93 1CCE  
                                             __ptext85 BD18  
                                             __ptext77 EA08  
                                             __ptext69 0A06  
                                             __ptext94 28BE  
                                             __ptext86 CA54  
                                             __ptext78 29BC  
                                             __ptext95 2B24  
                                             __ptext87 2D1E  
                                             __ptext79 295A  
                                             __ptext96 1962  
                                             __ptext88 2D22  
                                             __ptext97 2BB6  
                                             __ptext89 DD58  
                                             __ptext98 22C2  
                                             __ptext99 1FBC  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 1CCE  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 1C6C  
                                      ___almod@divisor 0064  
                                          ??__get_data 0062  
                                __flash_wakeup@command 0068  
                                      ___almod@counter 0068  
                                          ??__get_root 0062  
                                  __parse_command_long 26BE  
                           ?_ExternalFlash_SectorWrite 0060  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 11F8  
                                __end_of__flash_wakeup 2314  
                       __end_of_USBCtrlTrfSetupHandler 17E4  
                                        __size_of_main 0142  
                                    ?_USBCtrlEPService 002E  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_utoa 00AA  
                            __end_of__parse_jump_steps EA08  
                                   ??_USBCtrlEPService 004B  
                                             _tmr0_isr 2738  
                                  _USBCtrlTrfInHandler 0C62  
                   _MSDProcessCommandMediaPresent$2606 009B  
                                          ??_api_parse 00C0  
                               __end_of__i2c_wait_idle 1C6C  
                           __end_of_motor_items_in_cue 2D0A  
                                             _outPipes 0131  
      i2c_display_program_custom_character@bit_pattern 006E  
                                             _spi_init 2640  
                                 _USBCtrlTrfOutHandler 1EAC  
                                             int$flags 005B  
                            _USBCtrlEPAllowStatusStage 0B9E  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                         ??_motor_stop 0060  
                                 ?__parse_command_long 00AA  
                                         _SSP1STATbits 000FC7  
                               ??_USBTransferOnePacket 0064  
                          __end_of_motor_period_lookup 9BFD  
                                         _SSP2STATbits 000F73  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa D948  
                motor_go_to_steps_position@distance_cw 00B2  
                                     i2_ResetSenseData 1D30  
                       ?_APP_DeviceCustomHIDInitialize 002E  
                               ??__parse_command_short 00BA  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 0023  
                      __end_of__fill_buffer_get_status E2DE  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __parse_jump_steps@return_value 00A5  
                                 ?_USBCtrlTrfInHandler 002E  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                        USBCtrlTrfTxService@byteToSend 002E  
                   __motor_get_speed_in_degrees@lookup 008F  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                                             memset@p1 0060  
                 __end_of_MSDComputeDeviceInAndResidue 0F4A  
                __size_of_MSDComputeDeviceInAndResidue 00B2  
                         _MSDComputeDeviceInAndResidue 0E98  
                                     ?_USBStallHandler 002E  
                             USBStdFeatureReqHandler@p 0049  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                               __size_of_USBDeviceInit 014A  
                        ?_MSDProcessCommandMediaAbsent 002E  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 186A  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0043  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 003D  
                      _USER_USB_CALLBACK_EVENT_HANDLER 17E4  
              motor_schedule_command@distance_in_steps 0097  
                                   __end_of_motor_init 2C36  
                                     ___lwmod@dividend 0060  
                         i2USBTransferOnePacket@handle 0037  
                    __end_of_ExternalFlash_SectorWrite 2D26  
                                   __end_of_motor_stop 2530  
                __end_of__flash_write_page_from_buffer 1F62  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 1F08  
                             ??_motor_schedule_command 009D  
               i2SYSTEM_Initialize@pll_startup_counter 002E  
                 SYSTEM_Initialize@pll_startup_counter 0061  
                                      _display_content 0278  
                              __end_of_MSDWriteHandler CD2A  
                                     spi_tx_tx@command 0060  
                              __size_of_MSDReadHandler 01E4  
                           i2USBTransferOnePacket@data 002F  
                                        ??_system_init 008F  
                    __size_of__fill_buffer_get_display 00B8  
                               _motor_speed_from_index 2C6C  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 002F  
                                      ?__i2c_wait_idle 002E  
                                ?_USBCtrlTrfOutHandler 002E  
                                      _display_prepare A238  
                                          ??_motor_isr 002E  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 002E  
                                  _USBCtrlTrfRxService F968  
                                   _USBWakeFromSuspend 2888  
                                ??__parse_command_long 00B0  
                                   _i2c_display_cursor 2B94  
                              _USBStdFeatureReqHandler CFE4  
                                  i2_SYSTEM_Initialize 221C  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 0936  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 008B  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                    _motor_divide_jump 159C  
                                      _gblMediaPresent 0171  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0200  
                                  ?_USBWakeFromSuspend 002E  
                                           _PPSCONbits 000EBF  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 002F  
                                   ?_motor_divide_jump 002E  
                                             strlen@cp 0064  
                                _USBAlternateInterface 019E  
                                      ___lwmod@counter 0064  
                                          _ptrNextData 0175  
                                         ___aldiv@sign 0069  
                            i2USBTransferOnePacket@dir 002E  
                            i2USBTransferOnePacket@len 0031  
                                  USBEnableEndpoint@ep 0039  
                                      _endpoint_number 0026  
                                       _display_update 27AA  
                                 ?_USBCtrlTrfRxService 002E  
                                        ___fladd@signs 0082  
                         __end_of_adc_read_temperature E11A  
                                _MSDCheckForErrorCases FE8E  
                                  ??_motor_divide_jump 00BA  
                        ?_MSDComputeDeviceInAndResidue 0060  
                              motor_arc_move@direction 009E  
                                 ?i2_SYSTEM_Initialize 002E  
                             ?_USBCtrlEPAllowDataStage 002E  
                                       _MSBBufferIndex 0173  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 002E  
                                         ___fladd@aexp 0083  
                                        ?_encoder_init 002E  
                                         ___fladd@bexp 0084  
                                           _USBMSDInit F85A  
                         _USBStatusStageTimeoutCounter 0024  
                      ??_ExternalFlash_MediaInitialize 0062  
                                     ??_motor_arc_move 009E  
                                 ??_USBWakeFromSuspend 0045  
                             __display_itoa_long@value 00AD  
                          __end_of__flash_partial_read 19DC  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 2D1A  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 002E  
    motor_divide_jump_to_nearest@divide_position_float 00C0  
                           __size_of__parse_jump_steps 014E  
                              __display_itoa_long@text 00B2  
                                           _USB_CD_Ptr 9DEC  
                                          _power_state 001F  
                                          _USBInHandle 016D  
                             _APP_DeviceCustomHIDTasks 1150  
                           __end_of_flash_sector_write 23B4  
